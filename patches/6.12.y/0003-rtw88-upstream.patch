From 2961bd772e63ae02b4e4366e1ef911edf12528ae Mon Sep 17 00:00:00 2001
From: Just a Nerd <andser@gmail.com>
Date: Tue, 13 May 2025 07:35:38 +0000
Subject: [PATCH] rtw88: full sync with upstream

diff --git a/drivers/net/wireless/realtek/rtw88/Kconfig b/drivers/net/wireless/realtek/rtw88/Kconfig
index 02b0d698413b..cef836900acf 100644
--- a/drivers/net/wireless/realtek/rtw88/Kconfig
+++ b/drivers/net/wireless/realtek/rtw88/Kconfig
@@ -13,35 +13,45 @@ if RTW88
 config RTW88_CORE
 	tristate
 	select WANT_DEV_COREDUMP
+	default m
 
 config RTW88_PCI
 	tristate
+	default m
 
 config RTW88_SDIO
 	tristate
+	default m
 
 config RTW88_USB
 	tristate
+	default m
 
 config RTW88_8822B
 	tristate
+	default m
 
 config RTW88_8822C
 	tristate
+	default m
 
 config RTW88_8723X
 	tristate
+	default m
 
 config RTW88_8703B
 	tristate
 	select RTW88_8723X
+	default m
 
 config RTW88_8723D
 	tristate
 	select RTW88_8723X
+	default m
 
 config RTW88_8821C
 	tristate
+	default m
 
 config RTW88_8822BE
 	tristate "Realtek 8822BE PCI wireless network adapter"
@@ -49,10 +59,9 @@ config RTW88_8822BE
 	select RTW88_CORE
 	select RTW88_PCI
 	select RTW88_8822B
+	default m
 	help
-	  Select this option will enable support for 8822BE chipset
-
-	  802.11ac PCIe wireless network adapter
+	  Support for Realtek 8822BE PCIe 802.11ac wireless chipset.
 
 config RTW88_8822BS
 	tristate "Realtek 8822BS SDIO wireless network adapter"
@@ -60,10 +69,9 @@ config RTW88_8822BS
 	select RTW88_CORE
 	select RTW88_SDIO
 	select RTW88_8822B
+	default m
 	help
-	  Select this option will enable support for 8822BS chipset
-
-	  802.11ac SDIO wireless network adapter
+	  Support for Realtek 8822BS SDIO 802.11ac wireless chipset.
 
 config RTW88_8822BU
 	tristate "Realtek 8822BU USB wireless network adapter"
@@ -71,10 +79,9 @@ config RTW88_8822BU
 	select RTW88_CORE
 	select RTW88_USB
 	select RTW88_8822B
+	default m
 	help
-	  Select this option will enable support for 8822BU chipset
-
-	  802.11ac USB wireless network adapter
+	  Support for Realtek 8822BU USB 802.11ac wireless chipset.
 
 config RTW88_8822CE
 	tristate "Realtek 8822CE PCI wireless network adapter"
@@ -82,10 +89,9 @@ config RTW88_8822CE
 	select RTW88_CORE
 	select RTW88_PCI
 	select RTW88_8822C
+	default m
 	help
-	  Select this option will enable support for 8822CE chipset
-
-	  802.11ac PCIe wireless network adapter
+	  Support for Realtek 8822CE PCIe 802.11ac wireless chipset.
 
 config RTW88_8822CS
 	tristate "Realtek 8822CS SDIO wireless network adapter"
@@ -93,10 +99,9 @@ config RTW88_8822CS
 	select RTW88_CORE
 	select RTW88_SDIO
 	select RTW88_8822C
+	default m
 	help
-	  Select this option will enable support for 8822CS chipset
-
-	  802.11ac SDIO wireless network adapter
+	  Support for Realtek 8822CS SDIO 802.11ac wireless chipset.
 
 config RTW88_8822CU
 	tristate "Realtek 8822CU USB wireless network adapter"
@@ -104,10 +109,9 @@ config RTW88_8822CU
 	select RTW88_CORE
 	select RTW88_USB
 	select RTW88_8822C
+	default m
 	help
-	  Select this option will enable support for 8822CU chipset
-
-	  802.11ac USB wireless network adapter
+	  Support for Realtek 8822CU USB 802.11ac wireless chipset.
 
 config RTW88_8723DE
 	tristate "Realtek 8723DE PCI wireless network adapter"
@@ -115,10 +119,9 @@ config RTW88_8723DE
 	select RTW88_CORE
 	select RTW88_PCI
 	select RTW88_8723D
+	default m
 	help
-	  Select this option will enable support for 8723DE chipset
-
-	  802.11n PCIe wireless network adapter
+	  Support for Realtek 8723DE PCIe 802.11n wireless chipset.
 
 config RTW88_8723DS
 	tristate "Realtek 8723DS SDIO wireless network adapter"
@@ -126,10 +129,9 @@ config RTW88_8723DS
 	select RTW88_CORE
 	select RTW88_SDIO
 	select RTW88_8723D
+	default m
 	help
-	  Select this option will enable support for 8723DS chipset
-
-	  802.11n SDIO wireless network adapter
+	  Support for Realtek 8723DS SDIO 802.11n wireless chipset.
 
 config RTW88_8723CS
 	tristate "Realtek 8723CS SDIO wireless network adapter"
@@ -137,13 +139,9 @@ config RTW88_8723CS
 	select RTW88_CORE
 	select RTW88_SDIO
 	select RTW88_8703B
+	default m
 	help
-	  Select this option to enable support for 8723CS chipset (EXPERIMENTAL)
-
-	  This module adds support for the 8723CS 802.11n SDIO
-	  wireless network adapter.
-
-	  If you choose to build a module, it'll be called rtw88_8723cs.
+	  Support for Realtek 8723CS SDIO 802.11n wireless chipset.
 
 config RTW88_8723DU
 	tristate "Realtek 8723DU USB wireless network adapter"
@@ -151,10 +149,9 @@ config RTW88_8723DU
 	select RTW88_CORE
 	select RTW88_USB
 	select RTW88_8723D
+	default m
 	help
-	  Select this option will enable support for 8723DU chipset
-
-	  802.11n USB wireless network adapter
+	  Support for Realtek 8723DU USB 802.11n wireless chipset.
 
 config RTW88_8821CE
 	tristate "Realtek 8821CE PCI wireless network adapter"
@@ -162,10 +159,9 @@ config RTW88_8821CE
 	select RTW88_CORE
 	select RTW88_PCI
 	select RTW88_8821C
+	default m
 	help
-	  Select this option will enable support for 8821CE chipset
-
-	  802.11ac PCIe wireless network adapter
+	  Support for Realtek 8821CE PCIe 802.11ac wireless chipset.
 
 config RTW88_8821CS
 	tristate "Realtek 8821CS SDIO wireless network adapter"
@@ -173,10 +169,9 @@ config RTW88_8821CS
 	select RTW88_CORE
 	select RTW88_SDIO
 	select RTW88_8821C
+	default m
 	help
-	  Select this option will enable support for 8821CS chipset
-
-	  802.11ac SDIO wireless network adapter
+	  Support for Realtek 8821CS SDIO 802.11ac wireless chipset.
 
 config RTW88_8821CU
 	tristate "Realtek 8821CU USB wireless network adapter"
@@ -184,25 +179,67 @@ config RTW88_8821CU
 	select RTW88_CORE
 	select RTW88_USB
 	select RTW88_8821C
+	default m
 	help
-	  Select this option will enable support for 8821CU chipset
+	  Support for Realtek 8821CU USB 802.11ac wireless chipset.
 
-	  802.11ac USB wireless network adapter
+# New chipsets from upstream rtw88
 
-config RTW88_DEBUG
-	bool "Realtek rtw88 debug support"
-	depends on RTW88_CORE
-	help
-	  Enable debug support
+config RTW88_8812A
+	tristate "Realtek 8812A support"
+	select RTW88_CORE
+	default m
 
-	  If unsure, say Y to simplify debug problems
+config RTW88_8812AU
+	tristate "Realtek 8812AU USB support"
+	select RTW88_CORE
+	select RTW88_USB
+	default m
 
-config RTW88_DEBUGFS
-	bool "Realtek rtw88 debugfs support"
-	depends on RTW88_CORE
-	help
-	  Enable debug support
+config RTW88_8814A
+	tristate "Realtek 8814A support"
+	select RTW88_CORE
+	default m
+
+config RTW88_8814AE
+	tristate "Realtek 8814AE PCI support"
+	select RTW88_CORE
+	select RTW88_PCI
+	default m
+
+config RTW88_8814AU
+	tristate "Realtek 8814AU USB support"
+	select RTW88_CORE
+	select RTW88_USB
+	default m
+
+config RTW88_8821A
+	tristate "Realtek 8821A support"
+	select RTW88_CORE
+	default m
 
-	  If unsure, say Y to simplify debug problems
+config RTW88_8821AU
+	tristate "Realtek 8821AU USB support"
+	select RTW88_CORE
+	select RTW88_USB
+	default m
+
+config RTW88_88XXA
+	tristate "Common code for RTW88 881x/882x chipsets"
+	select RTW88_CORE
+	default m
+
+config RTW88_LEDS
+	bool "Enable Realtek LED support"
+	default y
+
+config RTW88_DEBUG
+	bool "Enable debug support"
+	default y
+
+config RTW88_DEBUGFS
+	bool "Enable debugfs for Realtek wireless"
+	depends on DEBUG_FS
+	default y
 
 endif
diff --git a/drivers/net/wireless/realtek/rtw88/Makefile b/drivers/net/wireless/realtek/rtw88/Makefile
index 8f47359b4380..192854bd7921 100644
--- a/drivers/net/wireless/realtek/rtw88/Makefile
+++ b/drivers/net/wireless/realtek/rtw88/Makefile
@@ -1,51 +1,27 @@
 # SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
 
 obj-$(CONFIG_RTW88_CORE)	+= rtw88_core.o
-rtw88_core-y += main.o \
-	   mac80211.o \
-	   util.o \
-	   debug.o \
-	   tx.o \
-	   rx.o \
-	   mac.o \
-	   phy.o \
-	   coex.o \
-	   efuse.o \
-	   fw.o \
-	   ps.o \
-	   sec.o \
-	   bf.o \
-	   sar.o \
-	   regd.o
-
-rtw88_core-$(CONFIG_PM) += wow.o
-
-obj-$(CONFIG_RTW88_8822B)	+= rtw88_8822b.o
-rtw88_8822b-objs		:= rtw8822b.o rtw8822b_table.o
-
-obj-$(CONFIG_RTW88_8822BE)	+= rtw88_8822be.o
-rtw88_8822be-objs		:= rtw8822be.o
-
-obj-$(CONFIG_RTW88_8822BS)	+= rtw88_8822bs.o
-rtw88_8822bs-objs		:= rtw8822bs.o
-
-obj-$(CONFIG_RTW88_8822BU)	+= rtw88_8822bu.o
-rtw88_8822bu-objs		:= rtw8822bu.o
-
-obj-$(CONFIG_RTW88_8822C)	+= rtw88_8822c.o
-rtw88_8822c-objs		:= rtw8822c.o rtw8822c_table.o
-
-obj-$(CONFIG_RTW88_8822CE)	+= rtw88_8822ce.o
-rtw88_8822ce-objs		:= rtw8822ce.o
-
-obj-$(CONFIG_RTW88_8822CS)	+= rtw88_8822cs.o
-rtw88_8822cs-objs		:= rtw8822cs.o
-
-obj-$(CONFIG_RTW88_8822CU)	+= rtw88_8822cu.o
-rtw88_8822cu-objs		:= rtw8822cu.o
-
-obj-$(CONFIG_RTW88_8723X)	+= rtw88_8723x.o
-rtw88_8723x-objs		:= rtw8723x.o
+rtw88_core-objs			:= main.o \
+			   led.o \
+			   mac80211.o \
+			   util.o \
+			   debug.o \
+			   tx.o \
+			   rx.o \
+			   mac.o \
+			   phy.o \
+			   coex.o \
+			   efuse.o \
+			   fw.o \
+			   ps.o \
+			   sec.o \
+			   bf.o \
+			   regd.o \
+			   sar.o
+
+ifeq ($(CONFIG_PM), y)
+rtw88_core-objs += wow.o
+endif
 
 obj-$(CONFIG_RTW88_8703B)	+= rtw88_8703b.o
 rtw88_8703b-objs		:= rtw8703b.o rtw8703b_tables.o
@@ -65,6 +41,9 @@ rtw88_8723ds-objs		:= rtw8723ds.o
 obj-$(CONFIG_RTW88_8723DU)	+= rtw88_8723du.o
 rtw88_8723du-objs		:= rtw8723du.o
 
+obj-$(CONFIG_RTW88_8723X)	+= rtw88_8723x.o
+rtw88_8723x-objs		:= rtw8723x.o
+
 obj-$(CONFIG_RTW88_8821C)	+= rtw88_8821c.o
 rtw88_8821c-objs		:= rtw8821c.o rtw8821c_table.o
 
@@ -77,6 +56,30 @@ rtw88_8821cs-objs		:= rtw8821cs.o
 obj-$(CONFIG_RTW88_8821CU)	+= rtw88_8821cu.o
 rtw88_8821cu-objs		:= rtw8821cu.o
 
+obj-$(CONFIG_RTW88_8822B)	+= rtw88_8822b.o
+rtw88_8822b-objs		:= rtw8822b.o rtw8822b_table.o
+
+obj-$(CONFIG_RTW88_8822BE)	+= rtw88_8822be.o
+rtw88_8822be-objs		:= rtw8822be.o
+
+obj-$(CONFIG_RTW88_8822BS)	+= rtw88_8822bs.o
+rtw88_8822bs-objs		:= rtw8822bs.o
+
+obj-$(CONFIG_RTW88_8822BU)	+= rtw88_8822bu.o
+rtw88_8822bu-objs		:= rtw8822bu.o
+
+obj-$(CONFIG_RTW88_8822C)	+= rtw88_8822c.o
+rtw88_8822c-objs		:= rtw8822c.o rtw8822c_table.o
+
+obj-$(CONFIG_RTW88_8822CE)	+= rtw88_8822ce.o
+rtw88_8822ce-objs		:= rtw8822ce.o
+
+obj-$(CONFIG_RTW88_8822CS)	+= rtw88_8822cs.o
+rtw88_8822cs-objs		:= rtw8822cs.o
+
+obj-$(CONFIG_RTW88_8822CU)	+= rtw88_8822cu.o
+rtw88_8822cu-objs		:= rtw8822cu.o
+
 obj-$(CONFIG_RTW88_PCI)		+= rtw88_pci.o
 rtw88_pci-objs			:= pci.o
 
@@ -85,3 +88,30 @@ rtw88_sdio-objs			:= sdio.o
 
 obj-$(CONFIG_RTW88_USB)		+= rtw88_usb.o
 rtw88_usb-objs			:= usb.o
+
+obj-$(CONFIG_RTW88_8812A)	+= rtw88_8812a.o
+rtw88_8812a-objs		:= rtw8812a.o rtw8812a_table.o
+
+obj-$(CONFIG_RTW88_8812AU)	+= rtw88_8812au.o
+rtw88_8812au-objs		:= rtw8812au.o
+
+obj-$(CONFIG_RTW88_8814A)	+= rtw88_8814a.o
+rtw88_8814a-objs		:= rtw8814a.o rtw8814a_table.o
+
+obj-$(CONFIG_RTW88_8814AE)	+= rtw88_8814ae.o
+rtw88_8814ae-objs		:= rtw8814ae.o
+
+obj-$(CONFIG_RTW88_8814AU)	+= rtw88_8814au.o
+rtw88_8814au-objs		:= rtw8814au.o
+
+obj-$(CONFIG_RTW88_8821A)	+= rtw88_8821a.o
+rtw88_8821a-objs		:= rtw8821a.o rtw8821a_table.o
+
+obj-$(CONFIG_RTW88_8821AU)	+= rtw88_8821au.o
+rtw88_8821au-objs		:= rtw8821au.o
+
+obj-$(CONFIG_RTW88_88XXA)	+= rtw88_88xxa.o
+rtw88_88xxa-objs		:= rtw88xxa.o
+
+obj-y				+= convert_firmware.o
+
diff --git a/drivers/net/wireless/realtek/rtw88/bf.c b/drivers/net/wireless/realtek/rtw88/bf.c
index c827c4a2814b..95de3d3da065 100644
--- a/drivers/net/wireless/realtek/rtw88/bf.c
+++ b/drivers/net/wireless/realtek/rtw88/bf.c
@@ -57,7 +57,11 @@ void rtw_bf_assoc(struct rtw_dev *rtwdev, struct ieee80211_vif *vif,
 	}
 
 	ic_vht_cap = &hw->wiphy->bands[NL80211_BAND_5GHZ]->vht_cap;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 19, 0)
+	vht_cap = &sta->vht_cap;
+#else
 	vht_cap = &sta->deflink.vht_cap;
+#endif
 
 	rcu_read_unlock();
 
@@ -71,7 +75,11 @@ void rtw_bf_assoc(struct rtw_dev *rtwdev, struct ieee80211_vif *vif,
 		ether_addr_copy(bfee->mac_addr, bssid);
 		bfee->role = RTW_BFEE_MU;
 		bfee->p_aid = (bssid[5] << 1) | (bssid[4] >> 7);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
 		bfee->aid = vif->cfg.aid;
+#else
+		bfee->aid = bss_conf->aid;
+#endif
 		bfinfo->bfer_mu_cnt++;
 
 		rtw_chip_config_bfee(rtwdev, rtwvif, bfee, true);
diff --git a/drivers/net/wireless/realtek/rtw88/bitfield.h b/drivers/net/wireless/realtek/rtw88/bitfield.h
new file mode 100644
index 000000000000..230d2383b16d
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/bitfield.h
@@ -0,0 +1,155 @@
+/*
+ * Copyright (C) 2014 Felix Fietkau <nbd@nbd.name>
+ * Copyright (C) 2004 - 2009 Ivo van Doorn <IvDoorn@gmail.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2
+ * as published by the Free Software Foundation
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef _LINUX_BITFIELD_H
+#define _LINUX_BITFIELD_H
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 13, 0)
+#include <linux/build_bug.h>
+#endif
+#include <asm/byteorder.h>
+
+/*
+ * Bitfield access macros
+ *
+ * FIELD_{GET,PREP} macros take as first parameter shifted mask
+ * from which they extract the base mask and shift amount.
+ * Mask must be a compilation time constant.
+ *
+ * Example:
+ *
+ *  #define REG_FIELD_A  GENMASK(6, 0)
+ *  #define REG_FIELD_B  BIT(7)
+ *  #define REG_FIELD_C  GENMASK(15, 8)
+ *  #define REG_FIELD_D  GENMASK(31, 16)
+ *
+ * Get:
+ *  a = FIELD_GET(REG_FIELD_A, reg);
+ *  b = FIELD_GET(REG_FIELD_B, reg);
+ *
+ * Set:
+ *  reg = FIELD_PREP(REG_FIELD_A, 1) |
+ *	  FIELD_PREP(REG_FIELD_B, 0) |
+ *	  FIELD_PREP(REG_FIELD_C, c) |
+ *	  FIELD_PREP(REG_FIELD_D, 0x40);
+ *
+ * Modify:
+ *  reg &= ~REG_FIELD_C;
+ *  reg |= FIELD_PREP(REG_FIELD_C, c);
+ */
+
+#define __bf_shf(x) (__builtin_ffsll(x) - 1)
+
+#define __BF_FIELD_CHECK(_mask, _reg, _val, _pfx)			\
+	({								\
+		BUILD_BUG_ON_MSG(!__builtin_constant_p(_mask),		\
+				 _pfx "mask is not constant");		\
+		BUILD_BUG_ON_MSG((_mask) == 0, _pfx "mask is zero");	\
+		BUILD_BUG_ON_MSG(__builtin_constant_p(_val) ?		\
+				 ~((_mask) >> __bf_shf(_mask)) & (_val) : 0, \
+				 _pfx "value too large for the field"); \
+		BUILD_BUG_ON_MSG((_mask) > (typeof(_reg))~0ull,		\
+				 _pfx "type of reg too small for mask"); \
+		__BUILD_BUG_ON_NOT_POWER_OF_2((_mask) +			\
+					      (1ULL << __bf_shf(_mask))); \
+	})
+
+/**
+ * FIELD_FIT() - check if value fits in the field
+ * @_mask: shifted mask defining the field's length and position
+ * @_val:  value to test against the field
+ *
+ * Return: true if @_val can fit inside @_mask, false if @_val is too big.
+ */
+#define FIELD_FIT(_mask, _val)						\
+	({								\
+		__BF_FIELD_CHECK(_mask, 0ULL, _val, "FIELD_FIT: ");	\
+		!((((typeof(_mask))_val) << __bf_shf(_mask)) & ~(_mask)); \
+	})
+
+/**
+ * FIELD_PREP() - prepare a bitfield element
+ * @_mask: shifted mask defining the field's length and position
+ * @_val:  value to put in the field
+ *
+ * FIELD_PREP() masks and shifts up the value.  The result should
+ * be combined with other fields of the bitfield using logical OR.
+ */
+#define FIELD_PREP(_mask, _val)						\
+	({								\
+		__BF_FIELD_CHECK(_mask, 0ULL, _val, "FIELD_PREP: ");	\
+		((typeof(_mask))(_val) << __bf_shf(_mask)) & (_mask);	\
+	})
+
+/**
+ * FIELD_GET() - extract a bitfield element
+ * @_mask: shifted mask defining the field's length and position
+ * @_reg:  value of entire bitfield
+ *
+ * FIELD_GET() extracts the field specified by @_mask from the
+ * bitfield passed in as @_reg by masking and shifting it down.
+ */
+#define FIELD_GET(_mask, _reg)						\
+	({								\
+		__BF_FIELD_CHECK(_mask, _reg, 0U, "FIELD_GET: ");	\
+		(typeof(_mask))(((_reg) & (_mask)) >> __bf_shf(_mask));	\
+	})
+
+extern void __compiletime_error("value doesn't fit into mask")
+__field_overflow(void);
+extern void __compiletime_error("bad bitfield mask")
+__bad_mask(void);
+static __always_inline u64 field_multiplier(u64 field)
+{
+	if ((field | (field - 1)) & ((field | (field - 1)) + 1))
+		__bad_mask();
+	return field & -field;
+}
+static __always_inline u64 field_mask(u64 field)
+{
+	return field / field_multiplier(field);
+}
+#define ____MAKE_OP(type,base,to,from)					\
+static __always_inline __##type type##_encode_bits(base v, base field)	\
+{									\
+	if (__builtin_constant_p(v) && (v & ~field_mask(field)))	\
+		__field_overflow();					\
+	return to((v & field_mask(field)) * field_multiplier(field));	\
+}									\
+static __always_inline __##type type##_replace_bits(__##type old,	\
+					base val, base field)		\
+{									\
+	return (old & ~to(field)) | type##_encode_bits(val, field);	\
+}									\
+static __always_inline void type##p_replace_bits(__##type *p,		\
+					base val, base field)		\
+{									\
+	*p = (*p & ~to(field)) | type##_encode_bits(val, field);	\
+}									\
+static __always_inline base type##_get_bits(__##type v, base field)	\
+{									\
+	return (from(v) & field)/field_multiplier(field);		\
+}
+#define __MAKE_OP(size)							\
+	____MAKE_OP(le##size,u##size,cpu_to_le##size,le##size##_to_cpu)	\
+	____MAKE_OP(be##size,u##size,cpu_to_be##size,be##size##_to_cpu)	\
+	____MAKE_OP(u##size,u##size,,)
+____MAKE_OP(u8,u8,,)
+__MAKE_OP(16)
+__MAKE_OP(32)
+__MAKE_OP(64)
+#undef __MAKE_OP
+#undef ____MAKE_OP
+
+#endif
diff --git a/drivers/net/wireless/realtek/rtw88/coex.c b/drivers/net/wireless/realtek/rtw88/coex.c
index a99776af56c2..c929db1e53ca 100644
--- a/drivers/net/wireless/realtek/rtw88/coex.c
+++ b/drivers/net/wireless/realtek/rtw88/coex.c
@@ -446,7 +446,7 @@ static void rtw_coex_check_rfk(struct rtw_dev *rtwdev)
 	}
 }
 
-static void rtw_coex_query_bt_info(struct rtw_dev *rtwdev)
+void rtw_coex_query_bt_info(struct rtw_dev *rtwdev)
 {
 	struct rtw_coex *coex = &rtwdev->coex;
 	struct rtw_coex_stat *coex_stat = &coex->stat;
@@ -494,11 +494,29 @@ static void rtw_coex_monitor_bt_enable(struct rtw_dev *rtwdev)
 	struct rtw_coex_stat *coex_stat = &coex->stat;
 	struct rtw_coex_dm *coex_dm = &coex->dm;
 	bool bt_disabled = false;
+	bool bt_active = true;
 	u16 score_board;
 
 	if (chip->scbd_support) {
 		score_board = rtw_coex_read_scbd(rtwdev);
 		bt_disabled = !(score_board & COEX_SCBD_ONOFF);
+	} else {
+		if (coex_stat->hi_pri_tx == 0 && coex_stat->hi_pri_rx == 0 &&
+		    coex_stat->lo_pri_tx == 0 && coex_stat->lo_pri_rx == 0)
+			bt_active = false;
+
+		if (coex_stat->hi_pri_tx == 0xffff && coex_stat->hi_pri_rx == 0xffff &&
+		    coex_stat->lo_pri_tx == 0xffff && coex_stat->lo_pri_rx == 0xffff)
+			bt_active = false;
+
+		if (bt_active) {
+			coex_stat->bt_disable_cnt = 0;
+			bt_disabled = false;
+		} else {
+			coex_stat->bt_disable_cnt++;
+			if (coex_stat->bt_disable_cnt >= 10)
+				bt_disabled = true;
+		}
 	}
 
 	if (coex_stat->bt_disabled != bt_disabled) {
@@ -950,12 +968,18 @@ static void rtw_coex_coex_ctrl_owner(struct rtw_dev *rtwdev, bool wifi_control)
 
 static void rtw_coex_set_gnt_bt(struct rtw_dev *rtwdev, u8 state)
 {
+	if (!rtwdev->chip->ltecoex_addr)
+		return;
+
 	rtw_coex_write_indirect_reg(rtwdev, LTE_COEX_CTRL, 0xc000, state);
 	rtw_coex_write_indirect_reg(rtwdev, LTE_COEX_CTRL, 0x0c00, state);
 }
 
 static void rtw_coex_set_gnt_wl(struct rtw_dev *rtwdev, u8 state)
 {
+	if (!rtwdev->chip->ltecoex_addr)
+		return;
+
 	rtw_coex_write_indirect_reg(rtwdev, LTE_COEX_CTRL, 0x3000, state);
 	rtw_coex_write_indirect_reg(rtwdev, LTE_COEX_CTRL, 0x0300, state);
 }
@@ -2747,16 +2771,19 @@ void rtw_coex_power_on_setting(struct rtw_dev *rtwdev)
 	rtw_write8(rtwdev, 0xff1a, 0x0);
 	rtw_coex_set_gnt_debug(rtwdev);
 }
+EXPORT_SYMBOL(rtw_coex_power_on_setting);
 
 void rtw_coex_power_off_setting(struct rtw_dev *rtwdev)
 {
 	rtw_write16(rtwdev, REG_WIFI_BT_INFO, BIT_BT_INT_EN);
 }
+EXPORT_SYMBOL(rtw_coex_power_off_setting);
 
 void rtw_coex_init_hw_config(struct rtw_dev *rtwdev, bool wifi_only)
 {
 	__rtw_coex_init_hw_config(rtwdev, wifi_only);
 }
+EXPORT_SYMBOL(rtw_coex_init_hw_config);
 
 void rtw_coex_ips_notify(struct rtw_dev *rtwdev, u8 type)
 {
@@ -3904,7 +3931,7 @@ void rtw_coex_display_coex_info(struct rtw_dev *rtwdev, struct seq_file *m)
 	u8 sys_lte;
 	u16 score_board_WB, score_board_BW;
 	u32 wl_reg_6c0, wl_reg_6c4, wl_reg_6c8, wl_reg_778, wl_reg_6cc;
-	u32 lte_coex, bt_coex;
+	u32 lte_coex = 0, bt_coex = 0;
 	int i;
 
 	score_board_BW = rtw_coex_read_scbd(rtwdev);
@@ -3916,8 +3943,10 @@ void rtw_coex_display_coex_info(struct rtw_dev *rtwdev, struct seq_file *m)
 	wl_reg_778 = rtw_read8(rtwdev, REG_BT_STAT_CTRL);
 
 	sys_lte = rtw_read8(rtwdev, 0x73);
-	lte_coex = rtw_coex_read_indirect_reg(rtwdev, 0x38);
-	bt_coex = rtw_coex_read_indirect_reg(rtwdev, 0x54);
+	if (rtwdev->chip->ltecoex_addr) {
+		lte_coex = rtw_coex_read_indirect_reg(rtwdev, 0x38);
+		bt_coex = rtw_coex_read_indirect_reg(rtwdev, 0x54);
+	}
 
 	if (!coex_stat->wl_under_ips &&
 	    (!coex_stat->wl_under_lps || coex_stat->wl_force_lps_ctrl) &&
diff --git a/drivers/net/wireless/realtek/rtw88/coex.h b/drivers/net/wireless/realtek/rtw88/coex.h
index 57cf29da9ea4..c398be8391f7 100644
--- a/drivers/net/wireless/realtek/rtw88/coex.h
+++ b/drivers/net/wireless/realtek/rtw88/coex.h
@@ -384,6 +384,7 @@ u32 rtw_coex_read_indirect_reg(struct rtw_dev *rtwdev, u16 addr);
 void rtw_coex_write_indirect_reg(struct rtw_dev *rtwdev, u16 addr,
 				 u32 mask, u32 val);
 void rtw_coex_write_scbd(struct rtw_dev *rtwdev, u16 bitpos, bool set);
+void rtw_coex_query_bt_info(struct rtw_dev *rtwdev);
 
 void rtw_coex_bt_relink_work(struct work_struct *work);
 void rtw_coex_bt_reenable_work(struct work_struct *work);
@@ -419,4 +420,14 @@ static inline bool rtw_coex_disabled(struct rtw_dev *rtwdev)
 	return coex_stat->bt_disabled;
 }
 
+static inline void rtw_coex_active_query_bt_info(struct rtw_dev *rtwdev)
+{
+	/* The RTL8821AU firmware doesn't send C2H_BT_INFO by itself
+	 * when bluetooth headphones are disconnected, so we have to
+	 * ask for it regularly.
+	 */
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8821A && rtwdev->efuse.btcoex)
+		rtw_coex_query_bt_info(rtwdev);
+}
+
 #endif
diff --git a/drivers/net/wireless/realtek/rtw88/compiler.h b/drivers/net/wireless/realtek/rtw88/compiler.h
new file mode 100644
index 000000000000..adcd51c87e4d
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/compiler.h
@@ -0,0 +1,552 @@
+#ifndef __LINUX_COMPILER_H
+#define __LINUX_COMPILER_H
+
+#ifndef __ASSEMBLY__
+
+#ifdef __CHECKER__
+# define __user		__attribute__((noderef, address_space(1)))
+# define __kernel	__attribute__((address_space(0)))
+# define __safe		__attribute__((safe))
+# define __force	__attribute__((force))
+# define __nocast	__attribute__((nocast))
+# define __iomem	__attribute__((noderef, address_space(2)))
+# define __must_hold(x)	__attribute__((context(x,1,1)))
+# define __acquires(x)	__attribute__((context(x,0,1)))
+# define __releases(x)	__attribute__((context(x,1,0)))
+# define __acquire(x)	__context__(x,1)
+# define __release(x)	__context__(x,-1)
+# define __cond_lock(x,c)	((c) ? ({ __acquire(x); 1; }) : 0)
+# define __percpu	__attribute__((noderef, address_space(3)))
+#ifdef CONFIG_SPARSE_RCU_POINTER
+# define __rcu		__attribute__((noderef, address_space(4)))
+#else /* CONFIG_SPARSE_RCU_POINTER */
+# define __rcu
+#endif /* CONFIG_SPARSE_RCU_POINTER */
+# define __private	__attribute__((noderef))
+extern void __chk_user_ptr(const volatile void __user *);
+extern void __chk_io_ptr(const volatile void __iomem *);
+# define ACCESS_PRIVATE(p, member) (*((typeof((p)->member) __force *) &(p)->member))
+#else /* __CHECKER__ */
+# define __user
+# define __kernel
+# define __safe
+# define __force
+# define __nocast
+# define __iomem
+# define __chk_user_ptr(x) (void)0
+# define __chk_io_ptr(x) (void)0
+# define __builtin_warning(x, y...) (1)
+# define __must_hold(x)
+# define __acquires(x)
+# define __releases(x)
+# define __acquire(x) (void)0
+# define __release(x) (void)0
+# define __cond_lock(x,c) (c)
+# define __percpu
+# define __rcu
+# define __private
+# define ACCESS_PRIVATE(p, member) ((p)->member)
+#endif /* __CHECKER__ */
+
+/* Indirect macros required for expanded argument pasting, eg. __LINE__. */
+#define ___PASTE(a,b) a##b
+#define __PASTE(a,b) ___PASTE(a,b)
+
+#ifdef __KERNEL__
+
+#ifdef __GNUC__
+#include <linux/compiler-gcc.h>
+#endif
+
+#if defined(CC_USING_HOTPATCH) && !defined(__CHECKER__)
+#define notrace __attribute__((hotpatch(0,0)))
+#else
+#define notrace __attribute__((no_instrument_function))
+#endif
+
+/* Intel compiler defines __GNUC__. So we will overwrite implementations
+ * coming from above header files here
+ */
+#ifdef __INTEL_COMPILER
+# include <linux/compiler-intel.h>
+#endif
+
+/* Clang compiler defines __GNUC__. So we will overwrite implementations
+ * coming from above header files here
+ */
+#ifdef __clang__
+#include <linux/compiler-clang.h>
+#endif
+
+/*
+ * Generic compiler-dependent macros required for kernel
+ * build go below this comment. Actual compiler/compiler version
+ * specific implementations come from the above header files
+ */
+
+struct ftrace_branch_data {
+	const char *func;
+	const char *file;
+	unsigned line;
+	union {
+		struct {
+			unsigned long correct;
+			unsigned long incorrect;
+		};
+		struct {
+			unsigned long miss;
+			unsigned long hit;
+		};
+		unsigned long miss_hit[2];
+	};
+};
+
+/*
+ * Note: DISABLE_BRANCH_PROFILING can be used by special lowlevel code
+ * to disable branch tracing on a per file basis.
+ */
+#if defined(CONFIG_TRACE_BRANCH_PROFILING) \
+    && !defined(DISABLE_BRANCH_PROFILING) && !defined(__CHECKER__)
+void ftrace_likely_update(struct ftrace_branch_data *f, int val, int expect);
+
+#define likely_notrace(x)	__builtin_expect(!!(x), 1)
+#define unlikely_notrace(x)	__builtin_expect(!!(x), 0)
+
+#define __branch_check__(x, expect) ({					\
+			int ______r;					\
+			static struct ftrace_branch_data		\
+				__attribute__((__aligned__(4)))		\
+				__attribute__((section("_ftrace_annotated_branch"))) \
+				______f = {				\
+				.func = __func__,			\
+				.file = __FILE__,			\
+				.line = __LINE__,			\
+			};						\
+			______r = likely_notrace(x);			\
+			ftrace_likely_update(&______f, ______r, expect); \
+			______r;					\
+		})
+
+/*
+ * Using __builtin_constant_p(x) to ignore cases where the return
+ * value is always the same.  This idea is taken from a similar patch
+ * written by Daniel Walker.
+ */
+# ifndef likely
+#  define likely(x)	(__builtin_constant_p(x) ? !!(x) : __branch_check__(x, 1))
+# endif
+# ifndef unlikely
+#  define unlikely(x)	(__builtin_constant_p(x) ? !!(x) : __branch_check__(x, 0))
+# endif
+
+#ifdef CONFIG_PROFILE_ALL_BRANCHES
+/*
+ * "Define 'is'", Bill Clinton
+ * "Define 'if'", Steven Rostedt
+ */
+#define if(cond, ...) __trace_if( (cond , ## __VA_ARGS__) )
+#define __trace_if(cond) \
+	if (__builtin_constant_p(!!(cond)) ? !!(cond) :			\
+	({								\
+		int ______r;						\
+		static struct ftrace_branch_data			\
+			__attribute__((__aligned__(4)))			\
+			__attribute__((section("_ftrace_branch")))	\
+			______f = {					\
+				.func = __func__,			\
+				.file = __FILE__,			\
+				.line = __LINE__,			\
+			};						\
+		______r = !!(cond);					\
+		______f.miss_hit[______r]++;					\
+		______r;						\
+	}))
+#endif /* CONFIG_PROFILE_ALL_BRANCHES */
+
+#else
+# define likely(x)	__builtin_expect(!!(x), 1)
+# define unlikely(x)	__builtin_expect(!!(x), 0)
+#endif
+
+/* Optimization barrier */
+#ifndef barrier
+# define barrier() __memory_barrier()
+#endif
+
+#ifndef barrier_data
+# define barrier_data(ptr) barrier()
+#endif
+
+/* Unreachable code */
+#ifndef unreachable
+# define unreachable() do { } while (1)
+#endif
+
+/*
+ * KENTRY - kernel entry point
+ * This can be used to annotate symbols (functions or data) that are used
+ * without their linker symbol being referenced explicitly. For example,
+ * interrupt vector handlers, or functions in the kernel image that are found
+ * programatically.
+ *
+ * Not required for symbols exported with EXPORT_SYMBOL, or initcalls. Those
+ * are handled in their own way (with KEEP() in linker scripts).
+ *
+ * KENTRY can be avoided if the symbols in question are marked as KEEP() in the
+ * linker script. For example an architecture could KEEP() its entire
+ * boot/exception vector code rather than annotate each function and data.
+ */
+#ifndef KENTRY
+# define KENTRY(sym)						\
+	extern typeof(sym) sym;					\
+	static const unsigned long __kentry_##sym		\
+	__used							\
+	__attribute__((section("___kentry" "+" #sym ), used))	\
+	= (unsigned long)&sym;
+#endif
+
+#ifndef RELOC_HIDE
+# define RELOC_HIDE(ptr, off)					\
+  ({ unsigned long __ptr;					\
+     __ptr = (unsigned long) (ptr);				\
+    (typeof(ptr)) (__ptr + (off)); })
+#endif
+
+#ifndef OPTIMIZER_HIDE_VAR
+#define OPTIMIZER_HIDE_VAR(var) barrier()
+#endif
+
+/* Not-quite-unique ID. */
+#ifndef __UNIQUE_ID
+# define __UNIQUE_ID(prefix) __PASTE(__PASTE(__UNIQUE_ID_, prefix), __LINE__)
+#endif
+
+#include <uapi/linux/types.h>
+
+#define __READ_ONCE_SIZE						\
+({									\
+	switch (size) {							\
+	case 1: *(__u8 *)res = *(volatile __u8 *)p; break;		\
+	case 2: *(__u16 *)res = *(volatile __u16 *)p; break;		\
+	case 4: *(__u32 *)res = *(volatile __u32 *)p; break;		\
+	case 8: *(__u64 *)res = *(volatile __u64 *)p; break;		\
+	default:							\
+		barrier();						\
+		__builtin_memcpy((void *)res, (const void *)p, size);	\
+		barrier();						\
+	}								\
+})
+
+static __always_inline
+void __read_once_size(const volatile void *p, void *res, int size)
+{
+	__READ_ONCE_SIZE;
+}
+
+#ifdef CONFIG_KASAN
+/*
+ * This function is not 'inline' because __no_sanitize_address confilcts
+ * with inlining. Attempt to inline it may cause a build failure.
+ * 	https://gcc.gnu.org/bugzilla/show_bug.cgi?id=67368
+ * '__maybe_unused' allows us to avoid defined-but-not-used warnings.
+ */
+static __no_sanitize_address __maybe_unused
+void __read_once_size_nocheck(const volatile void *p, void *res, int size)
+{
+	__READ_ONCE_SIZE;
+}
+#else
+static __always_inline
+void __read_once_size_nocheck(const volatile void *p, void *res, int size)
+{
+	__READ_ONCE_SIZE;
+}
+#endif
+
+static __always_inline void __write_once_size(volatile void *p, void *res, int size)
+{
+	switch (size) {
+	case 1: *(volatile __u8 *)p = *(__u8 *)res; break;
+	case 2: *(volatile __u16 *)p = *(__u16 *)res; break;
+	case 4: *(volatile __u32 *)p = *(__u32 *)res; break;
+	case 8: *(volatile __u64 *)p = *(__u64 *)res; break;
+	default:
+		barrier();
+		__builtin_memcpy((void *)p, (const void *)res, size);
+		barrier();
+	}
+}
+
+/*
+ * Prevent the compiler from merging or refetching reads or writes. The
+ * compiler is also forbidden from reordering successive instances of
+ * READ_ONCE, WRITE_ONCE and ACCESS_ONCE (see below), but only when the
+ * compiler is aware of some particular ordering.  One way to make the
+ * compiler aware of ordering is to put the two invocations of READ_ONCE,
+ * WRITE_ONCE or ACCESS_ONCE() in different C statements.
+ *
+ * In contrast to ACCESS_ONCE these two macros will also work on aggregate
+ * data types like structs or unions. If the size of the accessed data
+ * type exceeds the word size of the machine (e.g., 32 bits or 64 bits)
+ * READ_ONCE() and WRITE_ONCE() will fall back to memcpy(). There's at
+ * least two memcpy()s: one for the __builtin_memcpy() and then one for
+ * the macro doing the copy of variable - '__u' allocated on the stack.
+ *
+ * Their two major use cases are: (1) Mediating communication between
+ * process-level code and irq/NMI handlers, all running on the same CPU,
+ * and (2) Ensuring that the compiler does not  fold, spindle, or otherwise
+ * mutilate accesses that either do not require ordering or that interact
+ * with an explicit memory barrier or atomic instruction that provides the
+ * required ordering.
+ */
+
+#define __READ_ONCE(x, check)						\
+({									\
+	union { typeof(x) __val; char __c[1]; } __u;			\
+	if (check)							\
+		__read_once_size(&(x), __u.__c, sizeof(x));		\
+	else								\
+		__read_once_size_nocheck(&(x), __u.__c, sizeof(x));	\
+	__u.__val;							\
+})
+#define READ_ONCE(x) __READ_ONCE(x, 1)
+
+/*
+ * Use READ_ONCE_NOCHECK() instead of READ_ONCE() if you need
+ * to hide memory access from KASAN.
+ */
+#define READ_ONCE_NOCHECK(x) __READ_ONCE(x, 0)
+
+#define WRITE_ONCE(x, val) \
+({							\
+	union { typeof(x) __val; char __c[1]; } __u =	\
+		{ .__val = (__force typeof(x)) (val) }; \
+	__write_once_size(&(x), __u.__c, sizeof(x));	\
+	__u.__val;					\
+})
+
+#endif /* __KERNEL__ */
+
+#endif /* __ASSEMBLY__ */
+
+#ifdef __KERNEL__
+/*
+ * Allow us to mark functions as 'deprecated' and have gcc emit a nice
+ * warning for each use, in hopes of speeding the functions removal.
+ * Usage is:
+ * 		int __deprecated foo(void)
+ */
+#ifndef __deprecated
+# define __deprecated		/* unimplemented */
+#endif
+
+#ifdef MODULE
+#define __deprecated_for_modules __deprecated
+#else
+#define __deprecated_for_modules
+#endif
+
+#ifndef __must_check
+#define __must_check
+#endif
+
+#ifndef CONFIG_ENABLE_MUST_CHECK
+#undef __must_check
+#define __must_check
+#endif
+#ifndef CONFIG_ENABLE_WARN_DEPRECATED
+#undef __deprecated
+#undef __deprecated_for_modules
+#define __deprecated
+#define __deprecated_for_modules
+#endif
+
+#ifndef __malloc
+#define __malloc
+#endif
+
+/*
+ * Allow us to avoid 'defined but not used' warnings on functions and data,
+ * as well as force them to be emitted to the assembly file.
+ *
+ * As of gcc 3.4, static functions that are not marked with attribute((used))
+ * may be elided from the assembly file.  As of gcc 3.4, static data not so
+ * marked will not be elided, but this may change in a future gcc version.
+ *
+ * NOTE: Because distributions shipped with a backported unit-at-a-time
+ * compiler in gcc 3.3, we must define __used to be __attribute__((used))
+ * for gcc >=3.3 instead of 3.4.
+ *
+ * In prior versions of gcc, such functions and data would be emitted, but
+ * would be warned about except with attribute((unused)).
+ *
+ * Mark functions that are referenced only in inline assembly as __used so
+ * the code is emitted even though it appears to be unreferenced.
+ */
+#ifndef __used
+# define __used			/* unimplemented */
+#endif
+
+#ifndef __maybe_unused
+# define __maybe_unused		/* unimplemented */
+#endif
+
+#ifndef __always_unused
+# define __always_unused	/* unimplemented */
+#endif
+
+#ifndef noinline
+#define noinline
+#endif
+
+/*
+ * Rather then using noinline to prevent stack consumption, use
+ * noinline_for_stack instead.  For documentation reasons.
+ */
+#define noinline_for_stack noinline
+
+#ifndef __always_inline
+#define __always_inline inline
+#endif
+
+#endif /* __KERNEL__ */
+
+/*
+ * From the GCC manual:
+ *
+ * Many functions do not examine any values except their arguments,
+ * and have no effects except the return value.  Basically this is
+ * just slightly more strict class than the `pure' attribute above,
+ * since function is not allowed to read global memory.
+ *
+ * Note that a function that has pointer arguments and examines the
+ * data pointed to must _not_ be declared `const'.  Likewise, a
+ * function that calls a non-`const' function usually must not be
+ * `const'.  It does not make sense for a `const' function to return
+ * `void'.
+ */
+#ifndef __attribute_const__
+# define __attribute_const__	/* unimplemented */
+#endif
+
+#ifndef __latent_entropy
+# define __latent_entropy
+#endif
+
+/*
+ * Tell gcc if a function is cold. The compiler will assume any path
+ * directly leading to the call is unlikely.
+ */
+
+#ifndef __cold
+#define __cold
+#endif
+
+/* Simple shorthand for a section definition */
+#ifndef __section
+# define __section(S) __attribute__ ((__section__(#S)))
+#endif
+
+#ifndef __visible
+#define __visible
+#endif
+
+/*
+ * Assume alignment of return value.
+ */
+#ifndef __assume_aligned
+#define __assume_aligned(a, ...)
+#endif
+
+
+/* Are two types/vars the same type (ignoring qualifiers)? */
+#ifndef __same_type
+# define __same_type(a, b) __builtin_types_compatible_p(typeof(a), typeof(b))
+#endif
+
+/* Is this type a native word size -- useful for atomic operations */
+#ifndef __native_word
+# define __native_word(t) (sizeof(t) == sizeof(char) || sizeof(t) == sizeof(short) || sizeof(t) == sizeof(int) || sizeof(t) == sizeof(long))
+#endif
+
+/* Compile time object size, -1 for unknown */
+#ifndef __compiletime_object_size
+# define __compiletime_object_size(obj) -1
+#endif
+#ifndef __compiletime_warning
+# define __compiletime_warning(message)
+#endif
+#ifndef __compiletime_error
+# define __compiletime_error(message)
+# ifndef __CHECKER__
+#  define __compiletime_error_fallback(condition) \
+	do { ((void)sizeof(char[1 - 2 * condition])); } while (0)
+# endif
+#endif
+#ifndef __compiletime_error_fallback
+# define __compiletime_error_fallback(condition) do { } while (0)
+#endif
+
+/*
+ * Prevent the compiler from merging or refetching accesses.  The compiler
+ * is also forbidden from reordering successive instances of ACCESS_ONCE(),
+ * but only when the compiler is aware of some particular ordering.  One way
+ * to make the compiler aware of ordering is to put the two invocations of
+ * ACCESS_ONCE() in different C statements.
+ *
+ * ACCESS_ONCE will only work on scalar types. For union types, ACCESS_ONCE
+ * on a union member will work as long as the size of the member matches the
+ * size of the union and the size is smaller than word size.
+ *
+ * The major use cases of ACCESS_ONCE used to be (1) Mediating communication
+ * between process-level code and irq/NMI handlers, all running on the same CPU,
+ * and (2) Ensuring that the compiler does not  fold, spindle, or otherwise
+ * mutilate accesses that either do not require ordering or that interact
+ * with an explicit memory barrier or atomic instruction that provides the
+ * required ordering.
+ *
+ * If possible use READ_ONCE()/WRITE_ONCE() instead.
+ */
+#define __ACCESS_ONCE(x) ({ \
+	 __maybe_unused typeof(x) __var = (__force typeof(x)) 0; \
+	(volatile typeof(x) *)&(x); })
+#define ACCESS_ONCE(x) (*__ACCESS_ONCE(x))
+
+/**
+ * lockless_dereference() - safely load a pointer for later dereference
+ * @p: The pointer to load
+ *
+ * Similar to rcu_dereference(), but for situations where the pointed-to
+ * object's lifetime is managed by something other than RCU.  That
+ * "something other" might be reference counting or simple immortality.
+ *
+ * The seemingly unused variable ___typecheck_p validates that @p is
+ * indeed a pointer type by using a pointer to typeof(*p) as the type.
+ * Taking a pointer to typeof(*p) again is needed in case p is void *.
+ */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 8, 0)
+#define lockless_dereference(p) \
+({ \
+	typeof(p) _________p1 = READ_ONCE(p); \
+	typeof(*(p)) *___typecheck_p __maybe_unused; \
+	smp_read_barrier_depends(); /* Dependency order vs. p above. */ \
+	(_________p1); \
+})
+#else
+#define lockless_dereference(p) \
+({ \
+	typeof(p) _________p1 = READ_ONCE(p); \
+	smp_read_barrier_depends(); /* Dependency order vs. p above. */ \
+	(_________p1); \
+})
+#endif
+
+/* Ignore/forbid kprobes attach on very low level functions marked by this attribute: */
+#ifdef CONFIG_KPROBES
+# define __kprobes	__attribute__((__section__(".kprobes.text")))
+# define nokprobe_inline	__always_inline
+#else
+# define __kprobes
+# define nokprobe_inline	inline
+#endif
+#endif /* __LINUX_COMPILER_H */
diff --git a/drivers/net/wireless/realtek/rtw88/convert_firmware.c b/drivers/net/wireless/realtek/rtw88/convert_firmware.c
new file mode 100644
index 000000000000..fb1da648b1c2
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/convert_firmware.c
@@ -0,0 +1,41 @@
+/* Program to convert header into a binary file
+ * Coded by Larry Finger
+ * August 2015
+ *
+ * There is no Makefile, build with:
+ *	gcc -o convert_firmware convert_firmware.c
+ */
+
+#include <stdio.h>
+#define u8 char
+#define u32 int
+
+/* Get the firmware data that has been copied from a vendor driver */
+#include "convert_firmware.h"
+
+void output_bin(FILE *outb, const u8 *array, int len)
+{
+	int i;
+	for (i = 0; i < len; i++)
+		fwrite(&array[i], 1, 1, outb);
+}
+
+int main(int argc, char **argv)
+{
+	FILE *outb;
+	int i;
+
+	/* convert firmware */
+	outb = fopen("rtw8821c_fw.bin", "w");
+	if (!outb) {
+		fprintf(stderr, "File open error\n");
+		return 1;
+	}
+	output_bin(outb, array_mp_8821c_fw_nic,
+		   array_length_mp_8821c_fw_nic);
+	fclose(outb);
+
+	return 0;
+}
+
+
diff --git a/drivers/net/wireless/realtek/rtw88/convert_firmware.h b/drivers/net/wireless/realtek/rtw88/convert_firmware.h
new file mode 100644
index 000000000000..e66866bdef73
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/convert_firmware.h
@@ -0,0 +1,26551 @@
+/******************************************************************************
+*
+* Copyright(c) 2012 - 2017 Realtek Corporation.
+*
+* This program is free software; you can redistribute it and/or modify it
+* under the terms of version 2 of the GNU General Public License as
+* published by the Free Software Foundation.
+*
+* This program is distributed in the hope that it will be useful, but WITHOUT
+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
+* more details.
+*
+******************************************************************************/
+
+u8 array_mp_8821c_fw_nic[] = {
+0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x08, 0x00,
+0x0C, 0xBC, 0x11, 0xA2, 0x00, 0x00, 0x00, 0x00,
+0x01, 0x0C, 0x12, 0x0D, 0xE4, 0x07, 0x00, 0x00,
+0x18, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x20, 0x80, 0xE8, 0x7C, 0x00, 0x00,
+0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x98, 0xF5, 0x00, 0x00, 0x10, 0xAC, 0x00, 0x00,
+0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x03, 0x80,
+0x00, 0x00, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08,
+0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
+0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
+0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
+0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
+0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
+0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
+0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x03, 0x00, 0x01, 0xFE, 0x03, 0x01, 0x01, 0xFE,
+0x03, 0x02, 0x01, 0xFE, 0x03, 0x03, 0x01, 0xFE,
+0x03, 0x04, 0x01, 0xFE, 0x03, 0x05, 0x01, 0xFE,
+0x03, 0x06, 0x01, 0xFE, 0x03, 0x07, 0x01, 0xFE,
+0x06, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
+0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
+0x00, 0x01, 0x10, 0x00, 0x01, 0x00, 0x03, 0x80,
+0x9D, 0x01, 0x03, 0x80, 0x9D, 0x01, 0x03, 0x80,
+0x2D, 0x50, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0xDD, 0x4F, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00,
+0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x98, 0x83, 0x20, 0x80, 0x22, 0x05, 0x50, 0x05,
+0x51, 0x05, 0x1A, 0x15, 0x08, 0x08, 0x0C, 0x09,
+0x00, 0x0C, 0xB0, 0x0C, 0xB4, 0x0C, 0xBC, 0x0C,
+0x90, 0x19, 0xA4, 0x09, 0x04, 0x0A, 0x00, 0x0B,
+0x38, 0x08, 0x00, 0x00, 0xDF, 0xDE, 0x8F, 0x00,
+0x01, 0x00, 0x00, 0x00, 0x06, 0x09, 0x0C, 0x12,
+0x18, 0x24, 0x30, 0x36, 0x01, 0x02, 0x05, 0x0B,
+0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x06,
+0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x2C,
+0xFF, 0x00, 0x01, 0x02, 0x02, 0x04, 0x05, 0x06,
+0x07, 0x08, 0x09, 0x0A, 0x28, 0x28, 0x32, 0x28,
+0x1E, 0x19, 0x19, 0x19, 0x18, 0x18, 0x12, 0x0F,
+0x1E, 0x1E, 0x19, 0x1E, 0x18, 0x16, 0x0C, 0x0C,
+0x1E, 0x1E, 0x19, 0x1E, 0x18, 0x16, 0x0C, 0x0C,
+0x1E, 0x1E, 0x19, 0x1C, 0x18, 0x14, 0x0C, 0x0A,
+0x1E, 0x1E, 0x19, 0x1E, 0x19, 0x18, 0x0F, 0x0E,
+0x1E, 0x1E, 0x1E, 0x1E, 0x1C, 0x16, 0x14, 0x12,
+0x0C, 0x0A, 0x1E, 0x1E, 0x1E, 0x1E, 0x1A, 0x16,
+0x12, 0x10, 0x0C, 0x0A, 0x1E, 0x1E, 0x1E, 0x1E,
+0x18, 0x16, 0x0D, 0x0E, 0x0C, 0x0A, 0x0A, 0x0A,
+0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
+0x12, 0x12, 0x14, 0x12, 0x0F, 0x0F, 0x0C, 0x0C,
+0x09, 0x08, 0x08, 0x07, 0x0A, 0x0A, 0x09, 0x07,
+0x07, 0x06, 0x05, 0x04, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x06, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x06, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x06, 0x0A, 0x0A, 0x08, 0x08,
+0x08, 0x07, 0x07, 0x06, 0x04, 0x04, 0x0C, 0x0C,
+0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06, 0x05, 0x04,
+0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
+0x05, 0x04, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
+0x0A, 0x0A, 0x0A, 0x0A, 0x02, 0x02, 0x02, 0x04,
+0x02, 0x04, 0x06, 0x06, 0x08, 0x08, 0x09, 0x09,
+0x04, 0x08, 0x08, 0x08, 0x0C, 0x10, 0x10, 0x18,
+0x04, 0x08, 0x08, 0x08, 0x0C, 0x10, 0x10, 0x18,
+0x05, 0x08, 0x08, 0x09, 0x10, 0x14, 0x1C, 0x20,
+0x04, 0x06, 0x08, 0x0A, 0x10, 0x18, 0x18, 0x20,
+0x03, 0x05, 0x08, 0x09, 0x10, 0x14, 0x1C, 0x24,
+0x2A, 0x2C, 0x05, 0x07, 0x09, 0x0A, 0x10, 0x14,
+0x1C, 0x28, 0x2C, 0x30, 0x06, 0x08, 0x0A, 0x0C,
+0x12, 0x18, 0x1E, 0x30, 0x38, 0x42, 0x0A, 0x0C,
+0x0C, 0x12, 0x16, 0x1C, 0x20, 0x24, 0x24, 0x30,
+0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x03, 0x04,
+0x05, 0x06, 0x07, 0x08, 0x01, 0x02, 0x03, 0x04,
+0x05, 0x06, 0x07, 0x08, 0x02, 0x04, 0x06, 0x07,
+0x08, 0x0A, 0x0B, 0x0C, 0x03, 0x05, 0x06, 0x07,
+0x08, 0x0A, 0x0B, 0x0C, 0x05, 0x06, 0x07, 0x08,
+0x09, 0x0A, 0x0B, 0x0C, 0x02, 0x04, 0x06, 0x07,
+0x08, 0x09, 0x0B, 0x0C, 0x0C, 0x0C, 0x03, 0x05,
+0x06, 0x07, 0x08, 0x09, 0x0B, 0x0C, 0x0C, 0x0C,
+0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C,
+0x0C, 0x0C, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A,
+0x0B, 0x0C, 0x0C, 0x0C, 0x2C, 0x00, 0x04, 0x00,
+0x2D, 0x00, 0x2C, 0x01, 0x2D, 0x01, 0x2C, 0x02,
+0x2E, 0x01, 0xFF, 0x00, 0x2D, 0x02, 0xFF, 0x00,
+0x36, 0x2D, 0xFF, 0x36, 0x2E, 0xFF, 0x37, 0x2F,
+0xFF, 0x41, 0x38, 0x30, 0x39, 0x42, 0x31, 0x42,
+0x3A, 0x32, 0x43, 0x3A, 0x33, 0x43, 0x3A, 0x34,
+0x3A, 0x44, 0x35, 0x44, 0x3B, 0xFF, 0x37, 0x2E,
+0x40, 0x38, 0x30, 0x41, 0x39, 0x42, 0x31, 0x3A,
+0x43, 0x32, 0x3B, 0x43, 0x35, 0x3C, 0x44, 0xFF,
+0x3D, 0x45, 0xFF, 0x3E, 0x45, 0xFF, 0x45, 0x3F,
+0xFF, 0x46, 0xFF, 0xFF, 0x37, 0x41, 0x2F, 0x39,
+0x42, 0x31, 0x43, 0x3A, 0x33, 0x44, 0x3B, 0x35,
+0x45, 0x3D, 0xFF, 0x46, 0x47, 0x3E, 0x47, 0xFF,
+0xFF, 0x48, 0xFF, 0xFF, 0x49, 0xFF, 0xFF, 0xFF,
+0xFF, 0xFF, 0x00, 0x00, 0x0D, 0x14, 0xFF, 0x15,
+0x0E, 0xFF, 0x15, 0x0F, 0xFF, 0x16, 0x10, 0xFF,
+0x17, 0x1E, 0x11, 0x1E, 0x18, 0x12, 0x1F, 0x18,
+0x13, 0x18, 0x1F, 0xFF, 0x15, 0x0E, 0xFF, 0x16,
+0x1D, 0x10, 0x17, 0x1E, 0x10, 0x18, 0x1E, 0x11,
+0x19, 0x1F, 0xFF, 0x1A, 0x20, 0xFF, 0x21, 0x1B,
+0xFF, 0x21, 0xFF, 0xFF, 0x15, 0x13, 0x0F, 0x17,
+0x1E, 0x11, 0x18, 0x1F, 0x13, 0x20, 0x19, 0xFF,
+0x21, 0x1B, 0xFF, 0x22, 0xFF, 0xFF, 0x23, 0xFF,
+0xFF, 0xFF, 0xFF, 0xFF, 0x04, 0x04, 0x04, 0x36,
+0x2C, 0xFF, 0x2D, 0xFF, 0xFF, 0x2E, 0x37, 0xFF,
+0x38, 0x41, 0x2F, 0x39, 0x42, 0x30, 0x43, 0x39,
+0x31, 0x42, 0x39, 0x32, 0x43, 0x3A, 0x33, 0x43,
+0x3A, 0x34, 0x2D, 0x2C, 0xFF, 0x36, 0x2E, 0xFF,
+0x37, 0x2F, 0x40, 0x38, 0x30, 0x41, 0x42, 0x33,
+0x39, 0x43, 0x35, 0x3A, 0x3B, 0x43, 0x34, 0x44,
+0x3C, 0x3B, 0x45, 0x3D, 0x3C, 0x45, 0x3E, 0x3D,
+0x37, 0x2E, 0xFF, 0x38, 0x2F, 0x40, 0x39, 0x31,
+0x41, 0x3A, 0x42, 0xFF, 0x43, 0x3B, 0xFF, 0x44,
+0x3C, 0xFF, 0x45, 0x3D, 0x3C, 0x46, 0x3F, 0x45,
+0x47, 0x46, 0x45, 0x48, 0x47, 0x47, 0x00, 0x00,
+0x04, 0xFF, 0xFF, 0x0C, 0xFF, 0xFF, 0x0D, 0x14,
+0xFF, 0x0E, 0x15, 0xFF, 0x16, 0x0F, 0xFF, 0x17,
+0x10, 0xFF, 0x17, 0x11, 0xFF, 0x17, 0x12, 0xFF,
+0x0D, 0x0C, 0xFF, 0x14, 0x0E, 0xFF, 0x15, 0x0F,
+0xFF, 0x16, 0x1D, 0x10, 0x17, 0x1E, 0x12, 0x18,
+0x1F, 0x13, 0x19, 0x20, 0x19, 0x20, 0x1A, 0x19,
+0x14, 0x0E, 0xFF, 0x15, 0x1C, 0xFF, 0x17, 0x1D,
+0x11, 0x18, 0x1E, 0x13, 0x19, 0x1F, 0x1E, 0x20,
+0x1A, 0x1F, 0x21, 0x1B, 0x20, 0x22, 0x21, 0x1B,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x24, 0x26, 0x2A, 0x00, 0x00, 0x00, 0x1F,
+0x21, 0x25, 0x27, 0x28, 0x00, 0x00, 0x00, 0x00,
+0x23, 0x26, 0x28, 0x30, 0x00, 0x00, 0x00, 0x00,
+0x23, 0x26, 0x28, 0x2A, 0x00, 0x00, 0x00, 0x00,
+0x23, 0x26, 0x28, 0x2A, 0x00, 0x00, 0x00, 0x00,
+0x24, 0x28, 0x2A, 0x2C, 0x2E, 0x30, 0x00, 0x00,
+0x00, 0x00, 0x26, 0x29, 0x2B, 0x2D, 0x2F, 0x31,
+0x00, 0x00, 0x00, 0x00, 0x28, 0x2A, 0x2C, 0x2E,
+0x30, 0x32, 0x00, 0x00, 0x00, 0x1F, 0x23, 0x26,
+0x28, 0x2A, 0x2A, 0x2A, 0x01, 0x00, 0x02, 0x00,
+0x05, 0x00, 0x0B, 0x00, 0x06, 0x00, 0x09, 0x00,
+0x0C, 0x00, 0x12, 0x00, 0x18, 0x00, 0x24, 0x00,
+0x30, 0x00, 0x36, 0x00, 0x0E, 0x00, 0x1B, 0x00,
+0x29, 0x00, 0x36, 0x00, 0x51, 0x00, 0x6C, 0x00,
+0x7A, 0x00, 0x87, 0x00, 0x1B, 0x00, 0x36, 0x00,
+0x51, 0x00, 0x6C, 0x00, 0xA2, 0x00, 0xD8, 0x00,
+0xF3, 0x00, 0x0E, 0x01, 0x29, 0x00, 0x51, 0x00,
+0x7A, 0x00, 0xA2, 0x00, 0xF3, 0x00, 0x44, 0x01,
+0x6D, 0x01, 0x95, 0x01, 0x36, 0x00, 0x6C, 0x00,
+0xA2, 0x00, 0xD8, 0x00, 0x44, 0x01, 0xB0, 0x01,
+0xE6, 0x01, 0x1C, 0x02, 0x0E, 0x00, 0x1B, 0x00,
+0x29, 0x00, 0x36, 0x00, 0x51, 0x00, 0x6C, 0x00,
+0x7A, 0x00, 0x87, 0x00, 0xA2, 0x00, 0xB4, 0x00,
+0x1B, 0x00, 0x36, 0x00, 0x51, 0x00, 0x6C, 0x00,
+0xA2, 0x00, 0xD8, 0x00, 0xF3, 0x00, 0xFF, 0x00,
+0x23, 0x01, 0x44, 0x01, 0x29, 0x00, 0x51, 0x00,
+0x7A, 0x00, 0xA2, 0x00, 0xF3, 0x00, 0x44, 0x01,
+0x64, 0x01, 0x64, 0x01, 0xB5, 0x01, 0xE6, 0x01,
+0x36, 0x00, 0x6C, 0x00, 0xA2, 0x00, 0xD8, 0x00,
+0x44, 0x01, 0xB0, 0x01, 0xE6, 0x01, 0x1C, 0x02,
+0x88, 0x02, 0xD0, 0x02, 0x14, 0x14, 0x15, 0x15,
+0x16, 0x17, 0x17, 0x18, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1D, 0x1D, 0x1E, 0x1E, 0x1C, 0x1C, 0x1D, 0x1E,
+0x1F, 0x20, 0x20, 0x20, 0x36, 0x36, 0x37, 0x37,
+0x38, 0x39, 0x39, 0x3A, 0x3A, 0x3A, 0x00, 0x00,
+0x40, 0x40, 0x40, 0x40, 0x41, 0x41, 0x42, 0x42,
+0x43, 0x43, 0x00, 0x00, 0x40, 0x40, 0x41, 0x42,
+0x43, 0x44, 0x44, 0x44, 0x45, 0x46, 0x00, 0x00,
+0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x30, 0xC0,
+0xE0, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0E, 0x38,
+0x18, 0x00, 0x00, 0x00, 0x00, 0x83, 0x01, 0x06,
+0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x70, 0xE0,
+0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x16, 0x5B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x30, 0xF0, 0x21, 0x6C, 0x18, 0xF0, 0x00, 0x4C,
+0xBC, 0x65, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x77, 0xF0,
+0x20, 0x6C, 0x80, 0xF0, 0x80, 0x9C, 0x80, 0xF0,
+0x20, 0x6E, 0xCC, 0xEC, 0x1E, 0x24, 0x30, 0xF0,
+0x21, 0x6C, 0xF4, 0xF7, 0x1C, 0x4C, 0x80, 0x9C,
+0xBC, 0x65, 0x30, 0xF0, 0x21, 0x6C, 0xF4, 0xF7,
+0x18, 0x4C, 0x80, 0x9C, 0xFC, 0x65, 0x9F, 0x67,
+0x77, 0xF0, 0x24, 0x6D, 0xE0, 0xF2, 0x90, 0xDD,
+0x9D, 0x67, 0x77, 0xF0, 0x24, 0x6D, 0xE0, 0xF2,
+0x94, 0xDD, 0x9D, 0x67, 0x85, 0x9C, 0x77, 0xF0,
+0x24, 0x6D, 0xE0, 0xF2, 0x98, 0xDD, 0x20, 0xE8,
+0x00, 0x65, 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1,
+0x08, 0x4C, 0x00, 0x6E, 0x30, 0xF0, 0x20, 0x6F,
+0x2F, 0xF0, 0x08, 0x4F, 0xC0, 0xDC, 0x04, 0x4C,
+0xE3, 0xEC, 0xB8, 0x67, 0xFB, 0x2D, 0x30, 0xF0,
+0x21, 0x6C, 0x90, 0xF3, 0x18, 0x4C, 0x00, 0x6E,
+0x30, 0xF0, 0x21, 0x6F, 0xF0, 0xF4, 0x10, 0x4F,
+0xC0, 0xDC, 0x04, 0x4C, 0xE3, 0xEC, 0xB8, 0x67,
+0xFB, 0x2D, 0x30, 0xF0, 0x21, 0x6C, 0x15, 0xF0,
+0x00, 0x4C, 0x00, 0x6E, 0x30, 0xF0, 0x21, 0x6F,
+0x18, 0xF0, 0x00, 0x4F, 0xC0, 0xDC, 0x04, 0x4C,
+0xE3, 0xEC, 0xB8, 0x67, 0xFB, 0x2D, 0x10, 0xF0,
+0x23, 0x6C, 0xC0, 0xF0, 0x01, 0x4C, 0x00, 0xEC,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xC0, 0xF0, 0x01, 0x4A, 0x40, 0xDB,
+0x00, 0x1C, 0x94, 0x00, 0x80, 0x18, 0x20, 0x07,
+0x80, 0x18, 0xFE, 0x05, 0x80, 0x18, 0x20, 0x06,
+0x80, 0x18, 0xE0, 0x06, 0x80, 0x18, 0x4C, 0x06,
+0x80, 0x18, 0xFC, 0x06, 0x80, 0x18, 0x34, 0x04,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF7, 0x54, 0x9A,
+0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6C, 0x30, 0xF0, 0x21, 0x6A, 0x80, 0xF1,
+0x08, 0x4C, 0x15, 0xF0, 0x00, 0x4A, 0x43, 0xDC,
+0xCE, 0xF7, 0x40, 0x98, 0x00, 0x6D, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x2D, 0xF1, 0x50, 0xDB,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF7, 0x50, 0x9A,
+0x30, 0xF0, 0x20, 0x6C, 0x6F, 0xF0, 0x08, 0x4C,
+0x01, 0x6D, 0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6B,
+0xF0, 0xF4, 0x44, 0xDB, 0x30, 0xF0, 0x20, 0x6C,
+0x30, 0xF0, 0x21, 0x6A, 0x2F, 0xF0, 0x08, 0x4C,
+0x15, 0xF4, 0x00, 0x4A, 0x43, 0xDC, 0xCE, 0xF7,
+0x40, 0x98, 0x00, 0x6D, 0x40, 0xEA, 0x30, 0xF0,
+0x21, 0x6B, 0xD0, 0xF4, 0x5C, 0xDB, 0x00, 0x18,
+0xF0, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4,
+0x60, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C, 0x10, 0xF0,
+0x00, 0x6D, 0x40, 0xAB, 0xAB, 0xED, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF7, 0x58, 0x9A, 0x40, 0xEA,
+0x00, 0x1C, 0x95, 0x45, 0xFF, 0x17, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x6D, 0xB8, 0x00, 0x65,
+0x00, 0xF0, 0x20, 0x6A, 0x7C, 0x4A, 0x6C, 0xEA,
+0x1C, 0x22, 0x00, 0xF0, 0x20, 0x6B, 0x28, 0x4B,
+0x6A, 0xEA, 0x0B, 0x61, 0x4E, 0xB8, 0x00, 0x65,
+0x00, 0xF0, 0x20, 0x6B, 0x01, 0x4B, 0x6B, 0xE2,
+0x60, 0xAA, 0xBF, 0xF6, 0x1A, 0x6A, 0x6A, 0xEA,
+0x31, 0x60, 0x77, 0xF0, 0x24, 0x6A, 0xA0, 0xF1,
+0x1C, 0x4A, 0x1D, 0xF4, 0x00, 0x6B, 0x60, 0xDA,
+0x10, 0xF0, 0x23, 0x6A, 0x24, 0xF0, 0x1D, 0x4A,
+0x00, 0xEA, 0x00, 0xF0, 0x20, 0x6A, 0x1F, 0xF7,
+0x00, 0x6A, 0x4C, 0xEB, 0x4C, 0xB8, 0x00, 0x65,
+0x6C, 0xEA, 0x42, 0x32, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF0, 0x00, 0x4B, 0x49, 0xE3, 0x40, 0xA2,
+0x30, 0xF0, 0x20, 0x6B, 0x40, 0xF1, 0x08, 0x4B,
+0x69, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2,
+0x08, 0x4B, 0x60, 0x9B, 0x05, 0x2B, 0x10, 0xF0,
+0x23, 0x6B, 0x80, 0xF3, 0x01, 0x4B, 0x00, 0xEB,
+0x10, 0xF0, 0x23, 0x6B, 0x00, 0xF4, 0x15, 0x4B,
+0x00, 0xEB, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0x0D, 0xF1, 0x1C, 0x4A, 0x00, 0xF0, 0x20, 0x6B,
+0x01, 0x6B, 0x60, 0xDA, 0x10, 0xF0, 0x23, 0x6B,
+0x40, 0xF2, 0x09, 0x4B, 0x00, 0xEB, 0x00, 0x65,
+0x5A, 0xB8, 0x00, 0x65, 0x7B, 0xB8, 0x00, 0x65,
+0x40, 0xE8, 0x5A, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x7B, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A, 0x0D, 0xF1,
+0x1C, 0x4A, 0x00, 0xF0, 0x20, 0x6B, 0x60, 0xDA,
+0x30, 0xF0, 0x20, 0x6A, 0x2D, 0xF1, 0x18, 0x4A,
+0x60, 0x9A, 0x41, 0x9A, 0x6A, 0xEA, 0x0D, 0x61,
+0x6E, 0xB8, 0x00, 0x65, 0x62, 0x43, 0xCB, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x5A, 0xB8,
+0x00, 0x65, 0x7B, 0xB8, 0x00, 0x65, 0x00, 0xBA,
+0x00, 0x65, 0x36, 0x23, 0xDF, 0xF7, 0x00, 0x03,
+0x86, 0xDB, 0xA7, 0xDB, 0xC8, 0xDB, 0xE9, 0xDB,
+0x0A, 0xDB, 0x2B, 0xDB, 0x98, 0x67, 0x8C, 0xDB,
+0x9F, 0x67, 0x8E, 0xDB, 0x12, 0xEC, 0x10, 0xED,
+0x82, 0xDB, 0xA3, 0xDB, 0x9A, 0xB8, 0x00, 0x65,
+0x84, 0xDB, 0x9B, 0xB8, 0x00, 0x65, 0x85, 0xDB,
+0x8E, 0xB8, 0x00, 0x65, 0x82, 0x44, 0x81, 0xDB,
+0x8C, 0xB8, 0x00, 0x65, 0x80, 0xDB, 0x30, 0xF0,
+0x20, 0x6B, 0x2D, 0xF1, 0x18, 0x4B, 0x60, 0x9B,
+0x9D, 0x67, 0x89, 0xDB, 0x6A, 0x9B, 0xCF, 0xF7,
+0x80, 0x44, 0x62, 0xEC, 0x0D, 0x60, 0x77, 0xF0,
+0x24, 0x6C, 0xA0, 0xF1, 0x1C, 0x4C, 0x1D, 0xF4,
+0x01, 0x6B, 0x60, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
+0x24, 0xF0, 0x1D, 0x4C, 0x00, 0xEC, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6B, 0x2D, 0xF1, 0x18, 0x4B,
+0x41, 0x9B, 0x40, 0xDB, 0x89, 0x9A, 0xBC, 0x65,
+0x7D, 0x67, 0xDF, 0xF7, 0x00, 0x03, 0x4C, 0xB8,
+0x00, 0x65, 0x00, 0xF0, 0x20, 0x6D, 0x05, 0x4D,
+0xAF, 0xED, 0xAC, 0xEA, 0xA0, 0x9B, 0x04, 0x6C,
+0x8C, 0xED, 0xAD, 0xEA, 0x82, 0x9B, 0xA3, 0x9B,
+0x32, 0xEC, 0x30, 0xED, 0x8E, 0x9B, 0xFC, 0x65,
+0x8C, 0x9B, 0x1C, 0x65, 0x84, 0x9B, 0x5C, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x85, 0x9B,
+0x7C, 0xB9, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x2B, 0x9B, 0x0A, 0x9B, 0xE9, 0x9B, 0xC8, 0x9B,
+0xA7, 0x9B, 0x86, 0x9B, 0x61, 0x9B, 0xCB, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x8A, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x7B, 0xB8,
+0x00, 0x65, 0x5A, 0xB8, 0x00, 0x65, 0x00, 0xBA,
+0xDF, 0xF7, 0x00, 0x03, 0x86, 0xDB, 0xA7, 0xDB,
+0xC8, 0xDB, 0xE9, 0xDB, 0x0A, 0xDB, 0x2B, 0xDB,
+0x98, 0x67, 0x8C, 0xDB, 0x9F, 0x67, 0x8E, 0xDB,
+0x12, 0xEC, 0x10, 0xED, 0x82, 0xDB, 0xA3, 0xDB,
+0x9A, 0xB8, 0x00, 0x65, 0x84, 0xDB, 0x9B, 0xB8,
+0x00, 0x65, 0x85, 0xDB, 0x7D, 0x67, 0x5B, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x40, 0x9A,
+0x30, 0xF0, 0x20, 0x6C, 0xAD, 0xF1, 0x08, 0x4C,
+0x00, 0xF4, 0x00, 0x4C, 0xBC, 0x65, 0x82, 0x67,
+0x40, 0xEA, 0x00, 0x65, 0x7A, 0xB8, 0x00, 0x65,
+0xBB, 0x65, 0xDF, 0xF7, 0x00, 0x03, 0x82, 0x9B,
+0xA3, 0x9B, 0x32, 0xEC, 0x30, 0xED, 0x8E, 0x9B,
+0xFC, 0x65, 0x8C, 0x9B, 0x1C, 0x65, 0x84, 0x9B,
+0x5C, 0xB9, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x85, 0x9B, 0x7C, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x2B, 0x9B, 0x0A, 0x9B, 0xE9, 0x9B,
+0xC8, 0x9B, 0xA7, 0x9B, 0x86, 0x9B, 0x5A, 0xB8,
+0x00, 0x65, 0x7B, 0xB8, 0x00, 0x65, 0x00, 0xBA,
+0x00, 0x65, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
+0x0D, 0xF1, 0x1C, 0x4B, 0x40, 0xDB, 0xDF, 0xF7,
+0x00, 0x03, 0x86, 0xDB, 0xA7, 0xDB, 0xC8, 0xDB,
+0xE9, 0xDB, 0x0A, 0xDB, 0x2B, 0xDB, 0x98, 0x67,
+0x8C, 0xDB, 0x9F, 0x67, 0x8E, 0xDB, 0x12, 0xEC,
+0x10, 0xED, 0x82, 0xDB, 0xA3, 0xDB, 0x9A, 0xB8,
+0x00, 0x65, 0x84, 0xDB, 0x9B, 0xB8, 0x00, 0x65,
+0x85, 0xDB, 0x8E, 0xB8, 0x00, 0x65, 0x81, 0xDB,
+0x8C, 0xB8, 0x00, 0x65, 0x80, 0xDB, 0x30, 0xF0,
+0x20, 0x6B, 0x2D, 0xF1, 0x18, 0x4B, 0x60, 0x9B,
+0x9D, 0x67, 0x89, 0xDB, 0x6A, 0x9B, 0xCF, 0xF7,
+0x80, 0x44, 0x62, 0xEC, 0x0D, 0x60, 0x77, 0xF0,
+0x24, 0x6C, 0xA0, 0xF1, 0x1C, 0x4C, 0x1D, 0xF4,
+0x01, 0x6B, 0x60, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
+0x24, 0xF0, 0x1D, 0x4C, 0x00, 0xEC, 0x00, 0x65,
+0x40, 0x9A, 0x30, 0xF0, 0x20, 0x6C, 0xAD, 0xF1,
+0x08, 0x4C, 0x00, 0xF4, 0x00, 0x4C, 0xBC, 0x65,
+0x82, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6C,
+0x0D, 0xF1, 0x1C, 0x4C, 0x00, 0xF0, 0x20, 0x6D,
+0xA0, 0xDC, 0x30, 0xF0, 0x20, 0x6A, 0x2D, 0xF1,
+0x18, 0x4A, 0x10, 0xF0, 0x23, 0x6B, 0xA0, 0xF4,
+0x1D, 0x4B, 0x00, 0xEB, 0x61, 0x9A, 0x60, 0xDA,
+0x49, 0x9B, 0xBA, 0x65, 0xDF, 0xF7, 0x00, 0x03,
+0x4C, 0xB8, 0x00, 0x65, 0x00, 0xF0, 0x20, 0x6D,
+0x05, 0x4D, 0xAF, 0xED, 0xAC, 0xEA, 0xA0, 0x9B,
+0x00, 0xF0, 0x20, 0x6C, 0x04, 0x4C, 0x8C, 0xED,
+0xAD, 0xEA, 0x82, 0x9B, 0xA3, 0x9B, 0x32, 0xEC,
+0x30, 0xED, 0x8E, 0x9B, 0xFC, 0x65, 0x8C, 0x9B,
+0x1C, 0x65, 0x84, 0x9B, 0x5C, 0xB9, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x85, 0x9B, 0x7C, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x2B, 0x9B,
+0x0A, 0x9B, 0xE9, 0x9B, 0xC8, 0x9B, 0xA7, 0x9B,
+0x86, 0x9B, 0x61, 0x9B, 0xCB, 0xB9, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x8A, 0xB9, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x7B, 0xB8, 0x00, 0x65,
+0x5A, 0xB8, 0x00, 0x65, 0x00, 0xBA, 0x00, 0x65,
+0x5F, 0x67, 0x5A, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x18, 0x66, 0xC0, 0x00, 0x1C,
+0xA9, 0x41, 0x5A, 0xB8, 0x00, 0x65, 0x00, 0xEA,
+0x6D, 0xB8, 0x00, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x00, 0x4A, 0x4F, 0xEA, 0x4C, 0xEB, 0xAB, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x5F, 0x67,
+0x5A, 0xB9, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x1C, 0x6C, 0x41, 0x5A, 0xB8, 0x00, 0x65,
+0x00, 0xEA, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x88, 0xC1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x7B, 0xC1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0xB6, 0xC1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0xFB, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x18, 0xC3, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x75, 0xC1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xC0, 0xF5, 0x15, 0x4A, 0x40, 0xDB, 0x01, 0x4A,
+0x40, 0xDB, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF2, 0x30, 0x9A, 0x10, 0xF0, 0x23, 0x68,
+0xE0, 0xF5, 0x0D, 0x48, 0x00, 0xD9, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF3, 0x40, 0x9A, 0x01, 0x48,
+0x40, 0xEA, 0x00, 0xD9, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
+0x10, 0xF0, 0x23, 0x6A, 0x20, 0xF6, 0x01, 0x4A,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF0,
+0x40, 0x9A, 0xC0, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0xBD, 0xF0, 0x44, 0x9A, 0xA0, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xBD, 0xF0, 0x48, 0x9A, 0x80, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF0, 0x4C, 0x9A,
+0x40, 0x9A, 0x33, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6F,
+0x3C, 0xF4, 0xEC, 0x9F, 0x40, 0x9B, 0xED, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF0,
+0x50, 0x9A, 0xFF, 0x6B, 0xC0, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0xBD, 0xF0, 0x54, 0x9A, 0xA0, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF0, 0x58, 0x9A,
+0x10, 0x6D, 0xAB, 0xED, 0x80, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0xBD, 0xF0, 0x9C, 0x9A, 0x40, 0xA4,
+0x6C, 0xEA, 0xAC, 0xEA, 0x02, 0x6D, 0xAD, 0xEA,
+0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF4, 0x80, 0x9A, 0x80, 0x6D, 0xAB, 0xED,
+0x40, 0xA4, 0x6C, 0xEA, 0xAE, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
+0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x20, 0xF6,
+0x02, 0x4A, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xC0, 0xF6, 0x19, 0x4A, 0x40, 0xDB, 0x00, 0x18,
+0x62, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x6C, 0x9A, 0x6C, 0x23, 0x01, 0x6A, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x93, 0xE3, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x02, 0x6B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x7B, 0xE6,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
+0x04, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0x62, 0xE6, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x4C, 0x9A, 0x08, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x94, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x4C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x95, 0xE3, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x20, 0x6B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x96, 0xE3,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
+0x40, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0x97, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x4C, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x5E, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x6C, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x56, 0xE6,
+0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
+0x04, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x98, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x6C, 0x9B, 0x08, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x99, 0xE3,
+0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
+0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x9A, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x70, 0x9A, 0xA0, 0xF1, 0x08, 0x23,
+0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0x35, 0xE6, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x50, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x9B, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x50, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x4A, 0xE4,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x5C, 0xF3, 0x50, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
+0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
+0x4A, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x3C, 0xF4, 0x4C, 0x9A, 0x00, 0xF2,
+0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
+0x00, 0x18, 0x4A, 0xE4, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0xFC, 0xF3, 0x44, 0x9A,
+0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
+0x03, 0x6C, 0x00, 0x18, 0x4A, 0xE4, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x1C, 0xF3,
+0x4C, 0x9A, 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x4A, 0xE4,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x50, 0x9A,
+0x08, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
+0x00, 0x18, 0x9C, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x54, 0x9A,
+0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
+0x01, 0x6C, 0x00, 0x18, 0x9C, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xDD, 0xF0,
+0x40, 0x9A, 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x9C, 0xE3,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x3C, 0xF4, 0x5C, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
+0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
+0x9C, 0xE3, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x1C, 0xF3, 0x50, 0x9A, 0x00, 0xF2,
+0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
+0x00, 0x18, 0x9C, 0xE3, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x50, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xA2, 0xE3,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x5C, 0xF3, 0x58, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
+0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
+0xA2, 0xE3, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x7C, 0xF3, 0x50, 0x9A, 0x00, 0xF2,
+0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
+0x00, 0x18, 0xA2, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF4, 0x5C, 0x9A,
+0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
+0x03, 0x6C, 0x00, 0x18, 0xA2, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x1C, 0xF3,
+0x58, 0x9A, 0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0xA2, 0xE3,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x50, 0x9A,
+0x20, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
+0x00, 0x18, 0xA3, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x5C, 0x9A,
+0x00, 0xF2, 0x74, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
+0x01, 0x6C, 0x00, 0x18, 0xA3, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x9D, 0xF0,
+0x50, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0xA3, 0xE3,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0xDD, 0xF0, 0x44, 0x9A, 0x00, 0xF2, 0x74, 0x9B,
+0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
+0xA3, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x54, 0x9A, 0x00, 0x52, 0x03, 0x60, 0x04, 0x6C,
+0x00, 0x18, 0xA3, 0xE3, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x70, 0x9B, 0x04, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
+0x34, 0xE5, 0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2,
+0x70, 0x9B, 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x4C, 0xE5,
+0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x70, 0x9B,
+0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x04, 0x22,
+0x00, 0x18, 0xB9, 0xE3, 0x00, 0x18, 0x3A, 0xF0,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x5C, 0xF3, 0x50, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0xC1, 0xE3,
+0x00, 0x18, 0x42, 0xF0, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x54, 0x9A,
+0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA, 0x04, 0x22,
+0x00, 0x18, 0xC9, 0xE3, 0x00, 0x18, 0x4A, 0xF0,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x50, 0x9A,
+0x40, 0x6B, 0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18,
+0x15, 0xE6, 0x00, 0x18, 0xC7, 0xF5, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x50, 0x9A, 0x80, 0x6B,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0xBA, 0xE5,
+0x00, 0x18, 0xAA, 0xF2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x70, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0xF5, 0xE5,
+0x00, 0x18, 0xC3, 0xF5, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x70, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0x9F, 0xE5,
+0x00, 0x18, 0xA6, 0xF2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x70, 0x9B, 0x00, 0xF4, 0x00, 0x6A,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0xD5, 0xE5,
+0x00, 0x18, 0xBF, 0xF5, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x70, 0x9B, 0x01, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x04, 0x22, 0x00, 0x18, 0x84, 0xE5,
+0x00, 0x18, 0xA2, 0xF2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x70, 0x9B, 0x02, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xA4, 0xE3,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0xFC, 0xF3, 0x44, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xD2, 0xE3,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x3C, 0xF4, 0x5C, 0x9A, 0x00, 0xF2, 0x70, 0x9B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x30, 0xE5,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x74, 0x9A,
+0x55, 0x23, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x01, 0x6C, 0x00, 0x18, 0x34, 0xE5, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A, 0x02, 0x6B,
+0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
+0x4C, 0xE5, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x54, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
+0x02, 0x6C, 0x00, 0x18, 0x34, 0xE5, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A, 0x08, 0x6B,
+0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
+0x4C, 0xE5, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x54, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
+0x03, 0x6C, 0x00, 0x18, 0x34, 0xE5, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A, 0x20, 0x6B,
+0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
+0x4C, 0xE5, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x54, 0x9A, 0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
+0x04, 0x6C, 0x00, 0x18, 0x34, 0xE5, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A, 0x80, 0x6B,
+0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
+0x4C, 0xE5, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
+0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xC0, 0xF6,
+0x1A, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
+0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xE1, 0xF3,
+0x0D, 0x4A, 0x40, 0xDB, 0x00, 0x18, 0x32, 0xE3,
+0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x5C, 0x9A,
+0x22, 0x22, 0x00, 0x68, 0x30, 0xF0, 0x20, 0x6B,
+0xE0, 0xF1, 0x7C, 0x9B, 0x02, 0xF0, 0x00, 0x6A,
+0x44, 0xE8, 0x6C, 0xEA, 0x03, 0x22, 0x90, 0x67,
+0x00, 0x18, 0x86, 0xE6, 0x01, 0x48, 0x10, 0x70,
+0xF1, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x5C, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0xC7, 0xE6, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xE1, 0xF3, 0x0E, 0x4A, 0x40, 0xDB, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x61, 0xF4, 0x01, 0x4A, 0x40, 0xDB, 0x00, 0x18,
+0x39, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x7C, 0x9A, 0x61, 0x23, 0x08, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0xF6, 0xE3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A,
+0x02, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0x76, 0xE3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x5C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0xC3, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x5C, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0xBF, 0xE6, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A, 0x40, 0x6B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x7B, 0xE3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A,
+0x80, 0x6B, 0x6C, 0xEA, 0x05, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x50, 0x9A, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x7C, 0x9B,
+0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0xBB, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x7C, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0xB7, 0xE6,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0xDD, 0xF0, 0x48, 0x9A, 0xC0, 0xF1, 0x7C, 0x9B,
+0x6C, 0xEA, 0x0D, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x44, 0x9A, 0x6C, 0xEA, 0x04, 0x22,
+0x00, 0x6C, 0x00, 0x18, 0xD2, 0xE4, 0x03, 0x10,
+0x00, 0x6C, 0x00, 0x18, 0xD8, 0xE3, 0x30, 0xF0,
+0x20, 0x6A, 0xE0, 0xF1, 0x60, 0x9A, 0x7D, 0x23,
+0x10, 0xF0, 0x24, 0x6A, 0xDD, 0xF0, 0x40, 0x9A,
+0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
+0x75, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x7C, 0xF3, 0x50, 0x9A, 0xE0, 0xF1,
+0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
+0x00, 0x18, 0x75, 0xE4, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x9D, 0xF0, 0x50, 0x9A,
+0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
+0x02, 0x6C, 0x00, 0x18, 0x75, 0xE4, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xFC, 0xF3,
+0x44, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x75, 0xE4,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x3C, 0xF4, 0x5C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
+0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
+0x75, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x5C, 0xF3, 0x54, 0x9A, 0xE0, 0xF1,
+0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
+0x00, 0x18, 0xD9, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x58, 0x9A,
+0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
+0x00, 0x6C, 0x00, 0x18, 0x29, 0xE4, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3,
+0x5C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x54, 0xE4,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x3C, 0xF4, 0x4C, 0x9A, 0xE0, 0xF1, 0x60, 0x9B,
+0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C, 0x00, 0x18,
+0x11, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x5C, 0xF3, 0x50, 0x9A, 0xE0, 0xF1,
+0x60, 0x9B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0xAC, 0xE6, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x64, 0x9A, 0x78, 0x23, 0x01, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x6C, 0x00, 0x18, 0x23, 0xE7,
+0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A,
+0x02, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x10, 0x6C,
+0x00, 0x18, 0xD4, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x44, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x20, 0x6C, 0x00, 0x18, 0xD4, 0xE6,
+0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A,
+0x08, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x30, 0x6C,
+0x00, 0x18, 0xD4, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x44, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x40, 0x6C, 0x00, 0x18, 0xD4, 0xE6,
+0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A,
+0x20, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x50, 0x6C,
+0x00, 0x18, 0xD4, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x44, 0x9A, 0x40, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x60, 0x6C, 0x00, 0x18, 0xD4, 0xE6,
+0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x44, 0x9A,
+0x80, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x70, 0x6C,
+0x00, 0x18, 0xD4, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
+0xE0, 0xF1, 0x64, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
+0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
+0x23, 0xE7, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x64, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x23, 0xE7,
+0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B,
+0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x03, 0x6C, 0x00, 0x18, 0x23, 0xE7, 0x30, 0xF0,
+0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B, 0x01, 0xF0,
+0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
+0x00, 0x18, 0x23, 0xE7, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x68, 0x9A, 0xA0, 0xF0, 0x13, 0x23,
+0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
+0x00, 0x18, 0x94, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x10, 0x6C, 0x00, 0x18, 0x8B, 0xE6,
+0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A,
+0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x20, 0x6C,
+0x00, 0x18, 0x8B, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x48, 0x9A, 0x08, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x30, 0x6C, 0x00, 0x18, 0x8B, 0xE6,
+0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A,
+0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x40, 0x6C,
+0x00, 0x18, 0x8B, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x48, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x50, 0x6C, 0x00, 0x18, 0x8B, 0xE6,
+0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x48, 0x9A,
+0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x60, 0x6C,
+0x00, 0x18, 0x8B, 0xE6, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x48, 0x9A, 0x80, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x70, 0x6C, 0x00, 0x18, 0x8B, 0xE6,
+0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B,
+0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA, 0x03, 0x22,
+0x01, 0x6C, 0x00, 0x18, 0x94, 0xE6, 0x30, 0xF0,
+0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B, 0x00, 0xF2,
+0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
+0x00, 0x18, 0x94, 0xE6, 0x30, 0xF0, 0x20, 0x6B,
+0xE0, 0xF1, 0x68, 0x9B, 0x00, 0xF4, 0x00, 0x6A,
+0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
+0x94, 0xE6, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x68, 0x9B, 0x01, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x94, 0xE6,
+0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B,
+0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x00, 0x6C, 0x00, 0x18, 0x6C, 0xC7, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x1C, 0xF3,
+0x4C, 0x9A, 0xE0, 0xF1, 0x68, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x6C, 0xC7,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x1C, 0xF3, 0x50, 0x9A, 0xE0, 0xF1, 0x68, 0x9B,
+0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
+0x6C, 0xC7, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x1C, 0xF3, 0x58, 0x9A, 0xE0, 0xF1,
+0x68, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
+0x00, 0x18, 0x6C, 0xC7, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x48, 0x9A, 0x00, 0x52, 0x03, 0x60,
+0x04, 0x6C, 0x00, 0x18, 0x6C, 0xC7, 0x30, 0xF0,
+0x20, 0x6A, 0xE0, 0xF1, 0x6C, 0x9A, 0xC0, 0xF0,
+0x18, 0x23, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x01, 0x6C, 0x00, 0x18, 0xD9, 0xE3, 0x30, 0xF0,
+0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x02, 0x6B,
+0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
+0x29, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x4C, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
+0x01, 0x6C, 0x00, 0x18, 0x54, 0xE4, 0x30, 0xF0,
+0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x08, 0x6B,
+0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
+0x11, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x4C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
+0x02, 0x6C, 0x00, 0x18, 0xD9, 0xE3, 0x30, 0xF0,
+0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x20, 0x6B,
+0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
+0x29, 0xE4, 0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1,
+0x4C, 0x9A, 0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
+0x02, 0x6C, 0x00, 0x18, 0x54, 0xE4, 0x30, 0xF0,
+0x20, 0x6A, 0xE0, 0xF1, 0x4C, 0x9A, 0x80, 0x6B,
+0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
+0x11, 0xE4, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x6C, 0x9B, 0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xD9, 0xE3,
+0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B,
+0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x03, 0x6C, 0x00, 0x18, 0x29, 0xE4, 0x30, 0xF0,
+0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B, 0x00, 0xF4,
+0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
+0x00, 0x18, 0x54, 0xE4, 0x30, 0xF0, 0x20, 0x6B,
+0xE0, 0xF1, 0x6C, 0x9B, 0x01, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C, 0x00, 0x18,
+0x11, 0xE4, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x6C, 0x9B, 0x02, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0xD9, 0xE3,
+0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B,
+0x04, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x04, 0x6C, 0x00, 0x18, 0x29, 0xE4, 0x30, 0xF0,
+0x20, 0x6B, 0xE0, 0xF1, 0x6C, 0x9B, 0x08, 0xF0,
+0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
+0x00, 0x18, 0x54, 0xE4, 0x30, 0xF0, 0x20, 0x6B,
+0xE0, 0xF1, 0x6C, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
+0x11, 0xE4, 0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x5C, 0xF3, 0x50, 0x9A, 0xE0, 0xF1,
+0x6C, 0x9B, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
+0x00, 0x18, 0xF6, 0xE3, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3, 0x54, 0x9A,
+0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA, 0x03, 0x22,
+0x02, 0x6C, 0x00, 0x18, 0xF6, 0xE3, 0x10, 0xF0,
+0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x5C, 0xF3,
+0x58, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B, 0x6C, 0xEA,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0xF6, 0xE3,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x5C, 0xF3, 0x5C, 0x9A, 0xE0, 0xF1, 0x6C, 0x9B,
+0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C, 0x00, 0x18,
+0xF6, 0xE3, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
+0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x61, 0xF4,
+0x02, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
+0x30, 0xF0, 0x20, 0x6C, 0xC8, 0xF4, 0x12, 0x4C,
+0x00, 0x6D, 0x01, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3,
+0x8A, 0xA2, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0x08, 0xF3, 0x6A, 0xC2, 0x00, 0x6B, 0x08, 0xF3,
+0x6B, 0xC2, 0x08, 0xF3, 0x6C, 0xC2, 0x08, 0xF3,
+0x6D, 0xC2, 0x0C, 0x6B, 0x08, 0xF3, 0x6E, 0xC2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF3, 0x5C, 0x9A, 0x60, 0xA2,
+0x42, 0x23, 0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A, 0x02, 0x6B,
+0x30, 0xF0, 0x20, 0x68, 0x60, 0xC2, 0xC0, 0xF1,
+0x08, 0x48, 0x68, 0xF3, 0x79, 0xA0, 0x02, 0x6A,
+0xFF, 0x6C, 0x6C, 0xEA, 0x8C, 0xEA, 0x0B, 0x22,
+0x03, 0x6A, 0x4B, 0xEA, 0x4C, 0xEB, 0x68, 0xF3,
+0x79, 0xC0, 0x68, 0xF3, 0x7D, 0xA0, 0x6C, 0xEA,
+0x68, 0xF3, 0x5D, 0xC0, 0x24, 0x10, 0x88, 0xF3,
+0x45, 0xA0, 0x68, 0xF3, 0x7D, 0xA0, 0x01, 0x4A,
+0x88, 0xF3, 0x45, 0xC0, 0x11, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x68, 0xF3, 0x5D, 0xC0, 0x88, 0xF3,
+0x65, 0xA0, 0xE8, 0xF3, 0x44, 0xA0, 0x63, 0xEA,
+0x12, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6,
+0x85, 0xA3, 0x40, 0xEA, 0x01, 0x72, 0x07, 0x61,
+0x68, 0xF3, 0x79, 0xA0, 0x21, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x68, 0xF3, 0x59, 0xC0, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0x6A, 0x4C, 0xEC, 0x1F, 0x6B, 0x8C, 0xEB,
+0x96, 0x34, 0x4C, 0xEC, 0x01, 0x74, 0x0B, 0x60,
+0x05, 0x24, 0x02, 0x74, 0x0D, 0x60, 0x03, 0x74,
+0x10, 0x60, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF4, 0x8C, 0x9A, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF4, 0x90, 0x9A, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4, 0x94, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
+0x98, 0x9A, 0xA0, 0x9C, 0x01, 0x6A, 0x44, 0xEB,
+0xAD, 0xEA, 0x40, 0xDC, 0x20, 0xE8, 0x00, 0x65,
+0xFF, 0x6A, 0x4C, 0xEC, 0x1F, 0x6B, 0x8C, 0xEB,
+0x96, 0x34, 0x4C, 0xEC, 0x01, 0x74, 0x0B, 0x60,
+0x05, 0x24, 0x02, 0x74, 0x0D, 0x60, 0x03, 0x74,
+0x10, 0x60, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF4, 0x8C, 0x9A, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF4, 0x90, 0x9A, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4, 0x94, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
+0x98, 0x9A, 0xA0, 0x9C, 0x01, 0x6A, 0x44, 0xEB,
+0x4F, 0xEA, 0xAC, 0xEA, 0x40, 0xDC, 0x20, 0xE8,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0x6A, 0x8C, 0xEA, 0x05, 0x5A, 0x00, 0x68,
+0x24, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x34,
+0x3B, 0xF6, 0x04, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
+0x00, 0xEB, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3,
+0x7C, 0x9B, 0x13, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF3, 0x60, 0x9B, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF3, 0x64, 0x9B, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3, 0x68, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
+0x6C, 0x9B, 0x60, 0xAB, 0xFF, 0xF7, 0x1F, 0x68,
+0x6C, 0xE8, 0x18, 0xF0, 0x00, 0x6B, 0x0C, 0xEB,
+0x0F, 0x2B, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x68, 0xF3, 0x9D, 0xA3, 0x02, 0x6A,
+0x4B, 0xEA, 0x8C, 0xEA, 0x03, 0x6C, 0x8B, 0xEC,
+0x8C, 0xEA, 0x68, 0xF3, 0x5D, 0xC3, 0x79, 0x10,
+0x08, 0xF0, 0x00, 0x6B, 0x0C, 0xEB, 0x42, 0x23,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x68, 0xF3, 0xD4, 0xA3, 0x7F, 0x6D, 0xFF, 0x6C,
+0xCC, 0xED, 0x02, 0x75, 0x1F, 0x61, 0x68, 0xF3,
+0x57, 0xA3, 0x01, 0x6D, 0xAC, 0xEA, 0x8C, 0xEA,
+0x06, 0x2A, 0x68, 0xF3, 0x5D, 0xA3, 0x4D, 0xED,
+0x68, 0xF3, 0xBD, 0xC3, 0x21, 0x10, 0x68, 0xF3,
+0xB5, 0xA3, 0x10, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA,
+0x8C, 0xEA, 0x10, 0x72, 0x2E, 0x61, 0x68, 0xF3,
+0x9D, 0xA3, 0x04, 0x6A, 0x00, 0x6D, 0x8D, 0xEA,
+0x68, 0xF3, 0x5D, 0xC3, 0x01, 0x6C, 0x00, 0x18,
+0x42, 0xD2, 0x23, 0x10, 0x68, 0xF3, 0xDD, 0xA3,
+0x01, 0x6D, 0xCD, 0xED, 0x68, 0xF3, 0xBD, 0xC3,
+0x68, 0xF3, 0xB5, 0xA3, 0x10, 0x6B, 0x6B, 0xEB,
+0xAC, 0xEB, 0x8C, 0xEB, 0x20, 0x73, 0x06, 0x60,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
+0x40, 0xEA, 0x0F, 0x10, 0x82, 0x67, 0x00, 0x18,
+0x6A, 0xCE, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x9D, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
+0x7D, 0xC2, 0x02, 0x30, 0x1E, 0x30, 0x1A, 0x20,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x68, 0xF3, 0x5D, 0xA0, 0x02, 0x69, 0xE8, 0xF3,
+0xC5, 0xA0, 0x2D, 0xEA, 0x68, 0xF3, 0x5D, 0xC0,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A,
+0xFF, 0x6C, 0x55, 0x4C, 0x00, 0x6D, 0x40, 0xEA,
+0x68, 0xF3, 0x59, 0xA0, 0x4D, 0xE9, 0x68, 0xF3,
+0x39, 0xC0, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x9D, 0xA2,
+0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
+0x7D, 0xC2, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x00, 0x18,
+0x0C, 0xC9, 0x03, 0x2A, 0x90, 0x67, 0x00, 0x18,
+0x61, 0xCE, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x28, 0xF0, 0x01, 0x72, 0x01, 0x6C,
+0x01, 0x60, 0x02, 0x6C, 0x00, 0x18, 0xB3, 0xF3,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6, 0x62, 0xAB,
+0xFF, 0x6A, 0x4C, 0xEC, 0x71, 0xE4, 0x4C, 0xEC,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4, 0x48, 0x9A,
+0x80, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
+0x5C, 0x9A, 0x80, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
+0x20, 0x6C, 0xCF, 0xF6, 0x1C, 0x4C, 0x05, 0x6E,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0x10, 0x4B,
+0x30, 0xF0, 0x20, 0x69, 0xFF, 0x68, 0xAC, 0xE8,
+0xCE, 0xF4, 0x50, 0x99, 0xA0, 0x9B, 0x82, 0xF0,
+0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF4, 0xBC, 0x9B, 0xCE, 0xF4,
+0x50, 0x99, 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA,
+0x01, 0x6D, 0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED,
+0x00, 0x18, 0x42, 0xE7, 0x01, 0x70, 0x0F, 0x60,
+0x03, 0x20, 0x02, 0x70, 0x16, 0x60, 0x1F, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0x10, 0x4B,
+0x60, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF6, 0x60, 0x9B, 0x13, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x3C, 0xF6, 0x64, 0x9B, 0x6D, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF6, 0x68, 0x9B,
+0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF6,
+0x6C, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF6, 0x70, 0x9B, 0x6C, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0xCE, 0xF4, 0x70, 0x9B, 0x01, 0x6D,
+0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED, 0xC2, 0x67,
+0x40, 0xEB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xED,
+0xFF, 0x75, 0x4C, 0xEC, 0xCC, 0xEA, 0x06, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x71, 0xE4, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x71, 0xE4, 0x0C, 0xF7,
+0x7E, 0xA4, 0xAC, 0xEA, 0xAF, 0xED, 0x6C, 0xED,
+0xAD, 0xEA, 0x0C, 0xF7, 0x5E, 0xC4, 0x20, 0xE8,
+0xF7, 0x63, 0x11, 0x62, 0x10, 0xD1, 0x0F, 0xD0,
+0x40, 0xA4, 0x08, 0xD2, 0x08, 0x93, 0x1F, 0x6A,
+0x4C, 0xEB, 0x08, 0xD3, 0x42, 0xA4, 0x61, 0xA4,
+0x0B, 0xD2, 0x43, 0xA4, 0x84, 0xA4, 0x09, 0xD4,
+0x08, 0x94, 0x08, 0x5C, 0x80, 0xF0, 0x11, 0x60,
+0x84, 0x30, 0x09, 0x94, 0x01, 0x2C, 0x28, 0x22,
+0xFF, 0x69, 0x2C, 0xEA, 0x2C, 0xEB, 0xA2, 0x67,
+0xC3, 0x67, 0x90, 0x67, 0x0C, 0xD2, 0x0D, 0xD3,
+0x00, 0x18, 0xB1, 0xC5, 0x0B, 0x94, 0x09, 0x93,
+0x41, 0x40, 0x2C, 0xEC, 0x0B, 0xD4, 0x0B, 0x96,
+0x2C, 0xEA, 0x2C, 0xEB, 0x82, 0x67, 0xA3, 0x67,
+0x30, 0xF0, 0x20, 0x69, 0x0A, 0xD2, 0x09, 0xD3,
+0x00, 0x18, 0xB1, 0xC5, 0xCE, 0xF2, 0x44, 0x99,
+0x0C, 0x95, 0x0D, 0x96, 0x90, 0x67, 0x01, 0x6F,
+0x40, 0xEA, 0xCE, 0xF2, 0x44, 0x99, 0x0A, 0x94,
+0x09, 0x95, 0x0B, 0x96, 0x02, 0x6F, 0x40, 0xEA,
+0x0F, 0x58, 0x08, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x08, 0x33, 0x5C, 0xF1, 0x00, 0x4A, 0x69, 0xE2,
+0x40, 0x9A, 0x00, 0xEA, 0x00, 0x6A, 0x44, 0x10,
+0xD0, 0xF4, 0x44, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
+0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF6, 0x5C, 0x9A, 0x34, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF4, 0x4C, 0x9A, 0x2F, 0x10,
+0x80, 0xF4, 0x44, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
+0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF7, 0x40, 0x9A, 0x24, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF4, 0x58, 0x9A, 0x1F, 0x10,
+0xC0, 0xF4, 0x48, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
+0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF7, 0x44, 0x9A, 0x14, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF7, 0x48, 0x9A, 0x0F, 0x10,
+0x70, 0xF4, 0x48, 0x40, 0x1F, 0xF7, 0x00, 0x6B,
+0x6C, 0xEA, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF7, 0x4C, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF7, 0x50, 0x9A, 0x49, 0xE0,
+0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
+0x7D, 0x67, 0x53, 0xC3, 0x42, 0x32, 0x54, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x41, 0xE0, 0x0C, 0xF7, 0x5E, 0xA0, 0x55, 0xC3,
+0x0C, 0xF7, 0x5F, 0xA0, 0x56, 0xC3, 0x2C, 0xF7,
+0x4E, 0xA0, 0x57, 0xC3, 0x2C, 0xF7, 0x4F, 0xA0,
+0x58, 0xC3, 0x9D, 0x67, 0x21, 0x6A, 0x50, 0xC4,
+0x07, 0x6A, 0x4F, 0xCC, 0x47, 0x44, 0x19, 0x4A,
+0x40, 0xA2, 0x52, 0xC4, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x58, 0x9A, 0x04, 0x04, 0x40, 0xEA,
+0x11, 0x97, 0x10, 0x91, 0x0F, 0x90, 0x09, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
+0xFF, 0x74, 0xAC, 0xEA, 0x05, 0x61, 0x30, 0xF0,
+0x20, 0x6B, 0x0D, 0xF1, 0x46, 0xC3, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x2C, 0xF7, 0xBE, 0xA3, 0x8C, 0xEA, 0x8F, 0xEC,
+0xAC, 0xEC, 0x8D, 0xEA, 0x2C, 0xF7, 0x5E, 0xC3,
+0x20, 0xE8, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x01, 0xA4, 0x20, 0xA4,
+0x0C, 0x20, 0x90, 0x67, 0xB1, 0x67, 0x00, 0x18,
+0x1B, 0xC6, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x90, 0x67, 0xB1, 0x67, 0x53, 0x6E,
+0x40, 0xEA, 0x7D, 0x67, 0x20, 0x6A, 0x50, 0xC3,
+0x03, 0x6A, 0x4F, 0xCB, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0x4C, 0x9A, 0x9D, 0x67, 0x40, 0xA2,
+0x52, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x2C, 0xF7, 0x7E, 0xA2, 0x2C, 0xF7,
+0x5F, 0xA2, 0x73, 0xC4, 0x54, 0xC4, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A, 0x04, 0x04,
+0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0xA4, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6,
+0x04, 0x4C, 0x07, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF6, 0x44, 0xA2, 0x05, 0x5A,
+0x13, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
+0x7C, 0xF1, 0x1C, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0x00, 0xEA, 0x00, 0x6C, 0x07, 0x10, 0x01, 0x6C,
+0x05, 0x10, 0x02, 0x6C, 0x03, 0x10, 0x03, 0x6C,
+0x01, 0x10, 0x04, 0x6C, 0x00, 0x18, 0x20, 0xE2,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x69, 0xF3, 0x48, 0xA3, 0x1F, 0x6C, 0x01, 0x6D,
+0x4A, 0x32, 0x8C, 0xEA, 0x30, 0xF0, 0x20, 0x6C,
+0xEF, 0xF6, 0x84, 0xA4, 0x47, 0xEC, 0xAC, 0xEA,
+0x03, 0x22, 0x69, 0xF3, 0x89, 0xC3, 0x04, 0x10,
+0x01, 0x6A, 0x4B, 0xEA, 0x69, 0xF3, 0x49, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x1C, 0x23, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18, 0x3F, 0xE9,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
+0xCF, 0xF5, 0x5C, 0x9A, 0x6E, 0xEA, 0x03, 0x22,
+0x04, 0x94, 0x00, 0x18, 0x60, 0xE9, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
+0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
+0x68, 0xC2, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
+0x20, 0x6C, 0xAF, 0xF5, 0x10, 0x4C, 0x04, 0x6E,
+0x40, 0xEA, 0x00, 0x18, 0xB9, 0xCB, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF7, 0x08, 0x9A, 0x0A, 0xD4, 0xFF, 0x69,
+0x40, 0xA0, 0x0A, 0x95, 0x30, 0xF0, 0x20, 0x6C,
+0x62, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x50, 0x9A, 0x2C, 0xEB, 0x05, 0xD3, 0xC8, 0xF4,
+0x12, 0x4C, 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF7, 0x6C, 0x9A, 0xF8, 0x6A,
+0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF7, 0x50, 0x9A, 0x02, 0x6B,
+0x00, 0x6C, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF7, 0x74, 0x9B, 0x80, 0xC3, 0x10, 0xF0,
+0x24, 0x6B, 0x3C, 0xF7, 0x78, 0x9B, 0x20, 0x6C,
+0x80, 0xC3, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF7, 0x7C, 0x9B, 0x2C, 0xEA, 0x50, 0x32,
+0x01, 0x4A, 0x2C, 0xEA, 0x40, 0xC3, 0x0A, 0x94,
+0x02, 0x6B, 0x40, 0xA4, 0x6C, 0xEA, 0x2C, 0xEA,
+0xA0, 0xF0, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6C,
+0xC0, 0xF1, 0x08, 0x4C, 0x04, 0xD4, 0x08, 0xF3,
+0x6A, 0xA4, 0x01, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x80, 0xF0, 0x13, 0x22, 0x30, 0xF0, 0x20, 0x6B,
+0x4E, 0xF2, 0x54, 0x9B, 0x01, 0x6C, 0xC0, 0x6D,
+0x40, 0xEA, 0x04, 0x92, 0x05, 0x94, 0x20, 0x68,
+0x08, 0xF3, 0x6A, 0xA2, 0x04, 0x6A, 0x8D, 0xE8,
+0x6C, 0xEA, 0x2C, 0xEA, 0x2C, 0xE8, 0x1A, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7, 0x40, 0x9A,
+0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D, 0x60, 0xA2,
+0x2C, 0xEB, 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6B,
+0x4E, 0xF2, 0x54, 0x9B, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x6C, 0x9A, 0x02, 0x6C,
+0x40, 0xA3, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
+0x40, 0xC3, 0x0A, 0x10, 0x04, 0x93, 0x01, 0x6C,
+0x10, 0xF0, 0x00, 0x6D, 0x08, 0xF3, 0x4B, 0xC3,
+0x08, 0xF3, 0x4C, 0xC3, 0x00, 0x18, 0x98, 0xE1,
+0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4, 0x92, 0xA2,
+0x08, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA, 0x0D, 0x22,
+0x02, 0x6A, 0x4D, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x8C, 0x9A, 0x01, 0x6D, 0x6C, 0xE8,
+0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x92, 0xA2, 0x10, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA,
+0x0D, 0x22, 0x04, 0x6A, 0x4D, 0xE8, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x8C, 0x9A, 0x01, 0x6D,
+0x6C, 0xE8, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
+0x6C, 0xEA, 0x40, 0xC4, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF4, 0x72, 0xA2, 0x20, 0x6A, 0x6C, 0xEA,
+0x05, 0x22, 0x80, 0x6A, 0x4B, 0xEA, 0x4D, 0xE8,
+0xFF, 0x6A, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF4, 0x72, 0xA2, 0x40, 0x6A, 0x4C, 0xEB,
+0x03, 0x2B, 0x4D, 0xE8, 0xFF, 0x6A, 0x4C, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7, 0x48, 0x9A,
+0x00, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x55, 0xA2, 0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18,
+0xB3, 0xF3, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x72, 0xA2, 0x40, 0x6A, 0x04, 0x6C, 0x6C, 0xEA,
+0x05, 0x2A, 0x00, 0x18, 0x28, 0xF0, 0x01, 0x6C,
+0x01, 0x2A, 0x02, 0x6C, 0x00, 0x18, 0xB3, 0xF3,
+0xA9, 0x10, 0x40, 0xC0, 0x04, 0x94, 0x08, 0xF3,
+0x4D, 0xA4, 0x04, 0x72, 0xC0, 0xF0, 0x0F, 0x61,
+0x00, 0x6C, 0x00, 0x18, 0xB3, 0xF3, 0xCB, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x04, 0xD2, 0x08, 0xF3, 0x4A, 0xA2, 0x01, 0x6B,
+0x6C, 0xEA, 0x2C, 0xEA, 0x80, 0xF0, 0x19, 0x22,
+0x30, 0xF0, 0x20, 0x6C, 0x4E, 0xF2, 0x54, 0x9C,
+0xC0, 0x6D, 0x83, 0x67, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF2, 0x0C, 0x4B, 0x05, 0x92,
+0x60, 0x9B, 0x20, 0x68, 0x4D, 0xE8, 0x40, 0xA3,
+0x01, 0x6C, 0x2C, 0xE8, 0x2C, 0xEA, 0x8D, 0xEA,
+0x2C, 0xEA, 0x40, 0xC3, 0x04, 0x94, 0x04, 0x6A,
+0x08, 0xF3, 0x6A, 0xA4, 0x6C, 0xEA, 0x2C, 0xEA,
+0x1B, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
+0x40, 0x9A, 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x60, 0xA2, 0x2C, 0xEB, 0x60, 0xC2, 0x30, 0xF0,
+0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2, 0x0C, 0x4C,
+0x80, 0x9C, 0x02, 0x6B, 0x40, 0xA4, 0x2C, 0xEA,
+0x6D, 0xEA, 0x2C, 0xEA, 0x40, 0xC4, 0x05, 0x10,
+0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D, 0x00, 0x18,
+0x98, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x72, 0xA2, 0x08, 0x6A, 0x6C, 0xEA, 0x04, 0x22,
+0x02, 0x6A, 0x4D, 0xE8, 0xFF, 0x6A, 0x4C, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2,
+0x10, 0x6A, 0x6C, 0xEA, 0x04, 0x22, 0x04, 0x6A,
+0x4D, 0xE8, 0xFF, 0x6A, 0x4C, 0xE8, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF7, 0x68, 0x9A, 0x40, 0x6D,
+0xFF, 0x6C, 0x00, 0xC3, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x08, 0xF3, 0x4A, 0xA0,
+0xAC, 0xEA, 0x0B, 0x22, 0x08, 0xF3, 0x4E, 0xA0,
+0x02, 0x72, 0x2C, 0x60, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x02, 0x6C, 0x00, 0x6D,
+0x1E, 0x10, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0x8C, 0xEA, 0x40, 0xC3, 0x08, 0xF3, 0x4E, 0xA0,
+0x02, 0x72, 0x18, 0x61, 0x00, 0x18, 0x9A, 0xCC,
+0x00, 0x18, 0x28, 0xF0, 0x01, 0x72, 0x09, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x68, 0xF3, 0x98, 0xA0, 0x01, 0x6D, 0x00, 0x6E,
+0x07, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x00, 0x6C, 0xA4, 0x67, 0xC5, 0x67,
+0x40, 0xEA, 0x04, 0x10, 0x68, 0xF3, 0x5C, 0xA0,
+0x08, 0xF3, 0x4E, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF7, 0x44, 0x9A, 0x22, 0x6B, 0x60, 0xC2,
+0x26, 0x10, 0x40, 0xC0, 0x04, 0x93, 0x08, 0xF3,
+0x4E, 0xA3, 0x02, 0x72, 0x06, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x6C,
+0x07, 0x10, 0x08, 0x72, 0x08, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x0C, 0x6C,
+0x01, 0x6D, 0x00, 0x6E, 0x40, 0xEA, 0x00, 0x6C,
+0x00, 0x18, 0x65, 0xC5, 0x30, 0xF0, 0x20, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x48, 0xF5, 0x80, 0xA3, 0x01, 0x6D, 0x00, 0x6E,
+0x40, 0xEA, 0x00, 0x18, 0xA3, 0xC4, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x64, 0x67,
+0x4C, 0xEB, 0x87, 0x67, 0x01, 0x73, 0x4C, 0xED,
+0x4C, 0xEE, 0x4C, 0xEC, 0x06, 0x61, 0x01, 0x75,
+0x02, 0x61, 0x01, 0x76, 0x07, 0x60, 0x00, 0x6D,
+0x0A, 0x10, 0x01, 0x75, 0x06, 0x61, 0x01, 0x76,
+0x01, 0x6D, 0x05, 0x60, 0x00, 0x18, 0x4C, 0xDF,
+0x04, 0x10, 0x01, 0x5B, 0xB8, 0x67, 0x00, 0x18,
+0x41, 0xDF, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
+0x8C, 0xE8, 0x90, 0x67, 0x00, 0x18, 0x19, 0xCC,
+0x90, 0x67, 0x00, 0x18, 0x72, 0xEC, 0x01, 0x6C,
+0x00, 0x18, 0x34, 0xCA, 0x90, 0x67, 0x00, 0x18,
+0xDD, 0xCB, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0x0D, 0x2B,
+0xC0, 0xF0, 0x7D, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
+0x4E, 0xE8, 0x07, 0x28, 0x00, 0x18, 0x49, 0xD6,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3, 0x5C, 0x9A,
+0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x27, 0x67,
+0x4C, 0xE9, 0x6F, 0x41, 0x4C, 0xEB, 0x04, 0x67,
+0x02, 0x5B, 0x4C, 0xE8, 0x4C, 0xED, 0x4C, 0xEE,
+0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0x8F, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x49, 0xE0, 0x0C, 0xF7, 0x7E, 0xA2, 0x2C, 0xF7,
+0x4E, 0xA2, 0x10, 0x58, 0x6D, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x49, 0x60, 0x10, 0xF0, 0x24, 0x6B,
+0x08, 0x34, 0x1C, 0xF2, 0x04, 0x4B, 0x8D, 0xE3,
+0x60, 0x9B, 0x00, 0xEB, 0xD0, 0xF4, 0x64, 0x40,
+0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF6, 0x7C, 0x9B,
+0x34, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF4,
+0x6C, 0x9B, 0x2F, 0x10, 0x80, 0xF4, 0x64, 0x40,
+0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7, 0x60, 0x9B,
+0x24, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF4,
+0x78, 0x9B, 0x1F, 0x10, 0xC0, 0xF4, 0x68, 0x40,
+0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7, 0x64, 0x9B,
+0x14, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7,
+0x68, 0x9B, 0x0F, 0x10, 0x70, 0xF4, 0x68, 0x40,
+0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7, 0x6C, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7,
+0x70, 0x9B, 0x61, 0xE0, 0x40, 0xC0, 0x30, 0xF0,
+0x20, 0x6A, 0xE8, 0xF2, 0x3B, 0xC2, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x4C, 0x9A, 0x42, 0xF1, 0x18, 0x6C,
+0x01, 0x6D, 0x02, 0x6E, 0x40, 0xEA, 0x05, 0x97,
+0x05, 0x6A, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
+0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF7, 0x09, 0x4A,
+0x40, 0xDB, 0x01, 0x4A, 0x40, 0xDB, 0xF4, 0x17,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2, 0x74, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2, 0x50, 0x9A,
+0x01, 0x6C, 0xA4, 0x67, 0x60, 0xDA, 0x00, 0x18,
+0x2A, 0xD3, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF1,
+0x00, 0x4A, 0x10, 0xF0, 0x24, 0x6B, 0xEF, 0x9A,
+0xBC, 0xF2, 0x78, 0x9B, 0x8C, 0x9A, 0xCE, 0x9A,
+0xAD, 0x9A, 0xE0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x7C, 0x9B, 0x00, 0x68, 0xC0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF2, 0x60, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF2,
+0x64, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0x89, 0x9A, 0xDC, 0xF2, 0x68, 0x9B, 0x80, 0xDB,
+0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2,
+0x4C, 0x9A, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0x60, 0xF1, 0x48, 0xAA, 0x0B, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0x08, 0x34, 0x2E, 0xF2, 0x0C, 0x4B,
+0x6D, 0xE4, 0x60, 0x9B, 0x05, 0x23, 0x01, 0x48,
+0xFF, 0x6B, 0x6C, 0xE8, 0x43, 0xE8, 0xF3, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2, 0x70, 0x9A,
+0x7F, 0x6A, 0x00, 0x69, 0x80, 0xA3, 0x20, 0xF0,
+0x20, 0x6D, 0x00, 0xF1, 0x00, 0x4D, 0x8C, 0xEA,
+0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2,
+0x40, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF2,
+0xD4, 0x9B, 0x91, 0x67, 0x48, 0x6F, 0x04, 0xD1,
+0x05, 0xD1, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF2, 0xD8, 0x9B, 0x20, 0xF0, 0x20, 0x6D,
+0x91, 0x67, 0xAD, 0xF1, 0x08, 0x4D, 0x00, 0xF4,
+0x00, 0x6F, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF2, 0xDC, 0x9B,
+0x20, 0xF0, 0x21, 0x6D, 0x00, 0x37, 0x91, 0x67,
+0x15, 0xF0, 0x00, 0x4D, 0xE8, 0x37, 0x04, 0xD1,
+0x05, 0xD1, 0x40, 0xEA, 0x00, 0x1C, 0x96, 0x45,
+0xFF, 0x17, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF1, 0x00, 0x4A, 0x60, 0xDA, 0x81, 0xDA,
+0xA2, 0xDA, 0xC3, 0xDA, 0xE4, 0xDA, 0x05, 0xDA,
+0x26, 0xDA, 0x78, 0x67, 0x67, 0xDA, 0x7D, 0x67,
+0x68, 0xDA, 0x7F, 0x67, 0x69, 0xDA, 0x12, 0xEB,
+0x6A, 0xDA, 0x10, 0xEB, 0x6B, 0xDA, 0x6D, 0xB8,
+0x00, 0x65, 0x6C, 0xDA, 0x68, 0xB8, 0x00, 0x65,
+0x6D, 0xDA, 0x6C, 0xB8, 0x00, 0x65, 0x6E, 0xDA,
+0x6E, 0xB8, 0x00, 0x65, 0x6F, 0xDA, 0x10, 0xF0,
+0x23, 0x6A, 0x23, 0xF7, 0x01, 0x4A, 0x00, 0xEA,
+0x00, 0x65, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD0,
+0xFF, 0x6A, 0x4C, 0xEC, 0x4C, 0xED, 0x8E, 0x37,
+0x4C, 0xEF, 0x07, 0x6E, 0x01, 0x75, 0x8C, 0xEE,
+0x52, 0xF4, 0x60, 0x47, 0x59, 0x61, 0x30, 0xF0,
+0x20, 0x6D, 0xC0, 0xF1, 0x08, 0x4D, 0xBD, 0xE7,
+0xE8, 0xF2, 0xAF, 0xA7, 0x01, 0x68, 0x04, 0xEE,
+0x0D, 0xED, 0xE8, 0xF2, 0xAF, 0xC7, 0x1F, 0xF7,
+0x00, 0x6D, 0x6C, 0xED, 0x02, 0xF0, 0x00, 0x75,
+0x01, 0x60, 0x25, 0x2D, 0x1F, 0xF7, 0x00, 0x6A,
+0x6C, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60,
+0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0xA0, 0x9A, 0xB5, 0xE3, 0x60, 0xA5, 0x0B, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0xA0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A,
+0xB5, 0xE3, 0x4D, 0xE3, 0x60, 0xA3, 0x01, 0x6A,
+0x00, 0xF6, 0x60, 0x33, 0x44, 0xEE, 0x00, 0xF6,
+0x63, 0x33, 0x4F, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x40, 0xC5, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6D, 0xFC, 0xF2, 0xA4, 0x9D, 0x0F, 0xE8,
+0xAD, 0xE3, 0xA0, 0xA3, 0x00, 0xF6, 0xA0, 0x35,
+0x00, 0xF6, 0xA3, 0x35, 0x0C, 0xED, 0x4C, 0xED,
+0xA0, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6,
+0x45, 0xA2, 0x4E, 0xEC, 0x52, 0x2C, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x48, 0x9A, 0x60, 0x9A,
+0x30, 0xF0, 0x20, 0x6A, 0x70, 0x33, 0x00, 0xF5,
+0x62, 0x33, 0x48, 0xF5, 0x68, 0xCA, 0x45, 0x10,
+0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
+0x9D, 0xE7, 0xE8, 0xF2, 0x0F, 0xA7, 0x01, 0x6D,
+0xA4, 0xEE, 0xAF, 0xEC, 0x0C, 0xEC, 0xE8, 0xF2,
+0x8F, 0xC7, 0x1F, 0xF7, 0x00, 0x6C, 0x6C, 0xEC,
+0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x24, 0x2C,
+0x1F, 0xF7, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0xF0,
+0x00, 0x72, 0x01, 0x60, 0x07, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x80, 0x9A, 0x91, 0xE3,
+0x60, 0xA4, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x80, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x44, 0x9A, 0x91, 0xE3, 0x4D, 0xE3,
+0x60, 0xA3, 0x00, 0xF6, 0x60, 0x33, 0x01, 0x6A,
+0x00, 0xF6, 0x63, 0x33, 0x44, 0xEE, 0x6D, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x40, 0xC4, 0x0D, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2, 0x84, 0x9C,
+0x8D, 0xE3, 0x80, 0xA3, 0x00, 0xF6, 0x80, 0x34,
+0x00, 0xF6, 0x83, 0x34, 0xAD, 0xEC, 0x4C, 0xEC,
+0x80, 0xC3, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
+0xFF, 0x6A, 0x4C, 0xEC, 0x05, 0x5C, 0xAC, 0xEA,
+0x4B, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34,
+0x5B, 0xF5, 0x04, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
+0x00, 0xEB, 0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x6C, 0x9A, 0x2D, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x6C, 0x9A, 0x20, 0x10,
+0x05, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x70, 0x9A, 0x22, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x70, 0x9A, 0x15, 0x10, 0x05, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x74, 0x9A,
+0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x74, 0x9A, 0x0A, 0x10, 0x05, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x78, 0x9A, 0x0C, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x78, 0x9A,
+0x80, 0xA3, 0xF7, 0x6A, 0x0A, 0x10, 0x0C, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x7C, 0x9A,
+0x40, 0xA3, 0xFF, 0x6C, 0x08, 0x6D, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x7C, 0x9A,
+0xF7, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
+0x01, 0x6B, 0xAC, 0xEA, 0x6E, 0xEA, 0x01, 0x5A,
+0x58, 0x67, 0x05, 0x5C, 0x48, 0x32, 0x08, 0x60,
+0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34, 0x5B, 0xF5,
+0x18, 0x4B, 0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB,
+0x01, 0x6A, 0x4B, 0xEA, 0x20, 0xE8, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF2, 0x88, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0x1C, 0xF3, 0xA0, 0x9D, 0x60, 0x9C,
+0xAC, 0xEB, 0x1E, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF2, 0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6D,
+0x1C, 0xF3, 0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB,
+0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF3, 0xAC, 0x9D,
+0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2,
+0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF3,
+0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB, 0x10, 0xF0,
+0x24, 0x6D, 0x1C, 0xF3, 0xB0, 0x9D, 0xAD, 0xEB,
+0x60, 0xDC, 0x60, 0xF5, 0x60, 0x42, 0x1F, 0xF7,
+0x00, 0x6C, 0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
+0x10, 0x61, 0x2E, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF2, 0x88, 0x9B, 0x10, 0xF0, 0x24, 0x6D,
+0x1C, 0xF3, 0xA0, 0x9D, 0x60, 0x9C, 0xAC, 0xEB,
+0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF3, 0xB4, 0x9D,
+0xE6, 0x17, 0x1E, 0x23, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF3, 0x68, 0x9B, 0x1D, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF2, 0x88, 0x9B, 0x10, 0xF0,
+0x24, 0x6D, 0x1C, 0xF3, 0xA0, 0x9D, 0x60, 0x9C,
+0xAC, 0xEB, 0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF3,
+0xB8, 0x9D, 0xAD, 0xEB, 0x60, 0xDC, 0x60, 0xF5,
+0x60, 0x42, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xEB,
+0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x07, 0x2B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0x64, 0x9B,
+0x69, 0xE2, 0x40, 0x9A, 0x20, 0xE8, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF3, 0x68, 0x9B, 0x69, 0xE2,
+0x40, 0x9A, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
+0x01, 0x74, 0xAC, 0xEA, 0x13, 0x60, 0x03, 0x24,
+0x02, 0x74, 0x15, 0x60, 0x18, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
+0xD9, 0xA3, 0x01, 0x6D, 0x4C, 0xED, 0x02, 0x6A,
+0x4B, 0xEA, 0xCC, 0xEA, 0xAD, 0xEA, 0x68, 0xF3,
+0x59, 0xC3, 0x09, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x48, 0xF5, 0x44, 0xC3, 0x04, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0x48, 0xF5, 0x40, 0xC3, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF3, 0x5C, 0x9A, 0x60, 0xA2,
+0x10, 0x6A, 0x6C, 0xEA, 0x24, 0x22, 0x02, 0x5C,
+0x03, 0x61, 0x02, 0x74, 0x17, 0x60, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x68, 0xF3, 0x99, 0xA3, 0x01, 0x6A, 0x8C, 0xEA,
+0x68, 0xF3, 0x9C, 0xA3, 0x7F, 0x6B, 0x5C, 0x32,
+0x8C, 0xEB, 0x6D, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF3, 0x60, 0x9B,
+0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x60, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF3, 0x44, 0x9A, 0x60, 0xC2, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF3, 0x48, 0x9A,
+0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0xFF, 0x72,
+0x00, 0x6A, 0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF3, 0x4C, 0x9A, 0x60, 0xA2, 0x07, 0x6A,
+0x6C, 0xEA, 0x07, 0x6B, 0x6E, 0xEA, 0x01, 0x5A,
+0x58, 0x67, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
+0x01, 0x74, 0xAC, 0xEA, 0x03, 0x60, 0x02, 0x74,
+0x09, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x02, 0x6B, 0x88, 0xF3,
+0x62, 0xC2, 0x15, 0x10, 0x09, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE8, 0xF3,
+0x67, 0xA2, 0x88, 0xF3, 0x62, 0xC2, 0x05, 0x10,
+0xFF, 0x4A, 0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5,
+0x4A, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x88, 0xF3, 0x62, 0xA2, 0x68, 0xF3,
+0x99, 0xA2, 0x88, 0xF3, 0x63, 0xC2, 0x40, 0x6B,
+0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x0C, 0xC9,
+0x01, 0x72, 0x0E, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
+0x04, 0x6B, 0x8C, 0xEB, 0x05, 0x2B, 0x68, 0xF3,
+0x58, 0xA2, 0x05, 0x5A, 0x58, 0x67, 0x01, 0x10,
+0x00, 0x6A, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x10, 0xF0,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x69, 0x3C, 0xF3,
+0xF0, 0x9B, 0xEF, 0xF4, 0x68, 0x99, 0xFF, 0x6A,
+0x4C, 0xEC, 0xEC, 0xEB, 0xEE, 0xEB, 0x4C, 0xED,
+0x4C, 0xEE, 0x80, 0xF0, 0x1E, 0x23, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
+0x1A, 0xA3, 0x20, 0x6F, 0x0C, 0xEF, 0x4C, 0xEF,
+0x80, 0xF0, 0x0F, 0x2F, 0xEF, 0xF4, 0x08, 0xA1,
+0x01, 0x6F, 0xEC, 0xE8, 0x4C, 0xE8, 0x61, 0x28,
+0x68, 0xF3, 0x19, 0xA3, 0x0C, 0xEF, 0x4C, 0xEF,
+0x09, 0x27, 0x88, 0xF3, 0x5B, 0xA3, 0xE4, 0x42,
+0x03, 0x4A, 0x88, 0xF3, 0xF3, 0xC3, 0x88, 0xF3,
+0x52, 0xC3, 0x08, 0x10, 0x05, 0x6F, 0x88, 0xF3,
+0xF3, 0xC3, 0x05, 0x4E, 0x04, 0x6F, 0x88, 0xF3,
+0xF2, 0xC3, 0x4C, 0xEE, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0xF1, 0xA2,
+0x88, 0xF3, 0x72, 0xA2, 0xE3, 0xEB, 0x09, 0x61,
+0x88, 0xF3, 0x73, 0xA2, 0x88, 0xF3, 0xC4, 0xC2,
+0x71, 0xE4, 0xB7, 0xE4, 0x88, 0xF3, 0xB6, 0xC2,
+0x09, 0x10, 0x88, 0xF3, 0x93, 0xA2, 0x77, 0xE5,
+0xB9, 0xE6, 0x6F, 0xE4, 0x88, 0xF3, 0xC4, 0xC2,
+0x88, 0xF3, 0x76, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x73, 0xA2,
+0x88, 0xF3, 0x96, 0xA2, 0x0A, 0x4B, 0x82, 0xEB,
+0x02, 0x60, 0x88, 0xF3, 0x76, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x76, 0xA2, 0x88, 0xF3, 0x84, 0xA2, 0x23, 0x4B,
+0x82, 0xEB, 0x02, 0x60, 0x88, 0xF3, 0x64, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x88, 0xF3, 0x76, 0xA2, 0x68, 0xF3, 0x97, 0xA2,
+0x88, 0xF3, 0x6A, 0xCA, 0x18, 0x6B, 0x8C, 0xEB,
+0x10, 0x73, 0x07, 0x61, 0xC8, 0xF3, 0x79, 0xA2,
+0x03, 0x6C, 0x76, 0x33, 0x8C, 0xEB, 0x88, 0xF3,
+0x64, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF3,
+0x54, 0x9A, 0x60, 0xA2, 0x07, 0x23, 0x60, 0xA2,
+0xFF, 0x6A, 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x72, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF3, 0x58, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0x48, 0xF5, 0x92, 0xAC, 0xA0, 0xA2, 0xFF, 0x6B,
+0x6C, 0xED, 0x8E, 0xED, 0x02, 0x25, 0x8C, 0xEB,
+0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x68, 0xF3, 0x9A, 0xA2, 0x41, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3, 0x7A, 0xC2,
+0x04, 0x10, 0x40, 0x6A, 0x0D, 0xEA, 0x68, 0xF3,
+0x5A, 0xC3, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x88, 0xF3, 0x65, 0xA2, 0xE8, 0xF3, 0x84, 0xA2,
+0x63, 0xEC, 0x22, 0x60, 0x88, 0xF3, 0x98, 0xA2,
+0x01, 0x4C, 0x88, 0xF3, 0x98, 0xC2, 0x88, 0xF3,
+0xB8, 0xA2, 0xE8, 0xF3, 0x81, 0xA2, 0xA3, 0xEC,
+0x17, 0x61, 0x03, 0x6D, 0xB8, 0xEB, 0x88, 0xF3,
+0x90, 0xA2, 0x88, 0xF3, 0xB1, 0xA2, 0x04, 0x6F,
+0x01, 0x4C, 0x88, 0xF3, 0x90, 0xC2, 0x88, 0xF3,
+0x84, 0xA2, 0xFE, 0x4C, 0x12, 0xEB, 0x6D, 0xE4,
+0x88, 0xF3, 0x77, 0xC2, 0x88, 0xF3, 0x90, 0xA2,
+0x88, 0xF3, 0xD7, 0xA2, 0x00, 0x18, 0x3A, 0xC9,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6B, 0x68, 0xF5, 0x04, 0x4B,
+0xFF, 0x6A, 0xA7, 0x43, 0x8C, 0xEA, 0x26, 0x4D,
+0x00, 0x6C, 0x80, 0xC3, 0x01, 0x4B, 0x83, 0x67,
+0xAE, 0xEC, 0xFA, 0x2C, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x88, 0xF3, 0x94, 0xC3,
+0x88, 0xF3, 0x98, 0xC3, 0x88, 0xF3, 0x90, 0xC3,
+0x01, 0x6C, 0x8E, 0xEA, 0x05, 0x2A, 0x2D, 0x6C,
+0x88, 0xF3, 0x99, 0xC3, 0x88, 0xF3, 0x5A, 0xC3,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0xA8, 0xA3,
+0x01, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x10, 0x23, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x74, 0xA2,
+0x01, 0x4B, 0x88, 0xF3, 0x74, 0xC2, 0x88, 0xF3,
+0x74, 0xA2, 0xC8, 0xF3, 0x5E, 0xAA, 0x43, 0xEB,
+0xA0, 0xF0, 0x1E, 0x60, 0x00, 0x6D, 0x00, 0x18,
+0xA3, 0xC8, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0xC8, 0xF3, 0x94, 0x9B, 0xC8, 0xF3,
+0x50, 0xDB, 0x83, 0xEA, 0x31, 0x61, 0x68, 0xF3,
+0xF9, 0xA3, 0x01, 0x6D, 0xFF, 0x6E, 0xEC, 0xED,
+0x0E, 0x25, 0x88, 0xF3, 0xFB, 0xA3, 0x88, 0xF3,
+0xB6, 0xA3, 0x93, 0xE2, 0x0E, 0x4F, 0xBF, 0xE7,
+0xC8, 0xF3, 0xBC, 0xA3, 0x82, 0x34, 0x8A, 0x34,
+0xAF, 0xE7, 0x89, 0xE3, 0x0B, 0x10, 0xC8, 0xF3,
+0xFD, 0xA3, 0x88, 0xF3, 0xB6, 0xA3, 0x8B, 0xE2,
+0xEB, 0xEF, 0xAF, 0xE7, 0x42, 0x32, 0x0A, 0x4B,
+0x4A, 0x32, 0x49, 0xE3, 0xCC, 0xEA, 0x2D, 0x5A,
+0x0F, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x69, 0xE2, 0x88, 0xF3, 0x9C, 0xA2,
+0x01, 0x4C, 0x88, 0xF3, 0x9C, 0xC2, 0x88, 0xF3,
+0x54, 0xA3, 0x01, 0x4A, 0x88, 0xF3, 0x54, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x88, 0xF3, 0x94, 0xA2, 0xC8, 0xF3, 0x7E, 0xAA,
+0x63, 0xEC, 0x7A, 0x60, 0x82, 0x10, 0xA0, 0xA4,
+0xAD, 0xE3, 0xFF, 0x6D, 0xAC, 0xEB, 0x63, 0xEE,
+0x02, 0x60, 0xC2, 0x67, 0x06, 0x10, 0x01, 0x4A,
+0xAC, 0xEA, 0x2D, 0x72, 0x01, 0x4C, 0xF3, 0x61,
+0x00, 0x6E, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xC8, 0xF3, 0xFE, 0xAA, 0xE8, 0xF3,
+0x40, 0xA2, 0x30, 0xF0, 0x20, 0x6D, 0x00, 0x6C,
+0x5F, 0xE7, 0x68, 0xF5, 0x04, 0x4D, 0x64, 0x67,
+0x40, 0xA5, 0x51, 0xE4, 0xFF, 0x6A, 0x4C, 0xEC,
+0x82, 0xEF, 0x06, 0x61, 0x01, 0x4B, 0x4C, 0xEB,
+0x2D, 0x73, 0x01, 0x4D, 0xF5, 0x61, 0x00, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x88, 0xF3, 0xD9, 0xC2, 0x88, 0xF3, 0x7A, 0xC2,
+0x88, 0xF3, 0x79, 0xA2, 0x0A, 0x5B, 0x05, 0x61,
+0xF6, 0x4B, 0x88, 0xF3, 0x71, 0xC2, 0x00, 0x6B,
+0x05, 0x10, 0x00, 0x6C, 0x88, 0xF3, 0x91, 0xC2,
+0x0A, 0x6C, 0x6F, 0xE4, 0x88, 0xF3, 0x70, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x88, 0xF3, 0x79, 0xA2, 0x88, 0xF3, 0x9A, 0xA2,
+0x68, 0xF3, 0xB9, 0xA2, 0x73, 0xE4, 0x01, 0x6B,
+0xAC, 0xEB, 0x03, 0x23, 0xC8, 0xF3, 0x7C, 0xA2,
+0x02, 0x10, 0xC8, 0xF3, 0x7D, 0xA2, 0x71, 0xE4,
+0x01, 0x4C, 0x88, 0xF3, 0x97, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x77, 0xA2, 0x10, 0x5B, 0x03, 0x60, 0x10, 0x6B,
+0x88, 0xF3, 0x77, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x77, 0xA2,
+0x88, 0xF3, 0x90, 0xA2, 0x88, 0xF3, 0xB1, 0xA2,
+0x02, 0x4B, 0x88, 0xF3, 0x77, 0xC2, 0x88, 0xF3,
+0xD7, 0xA2, 0x03, 0x6F, 0x00, 0x18, 0x3A, 0xC9,
+0x00, 0x6C, 0x00, 0x18, 0xAE, 0xC9, 0x09, 0x10,
+0x30, 0xF0, 0x20, 0x6C, 0x00, 0x6B, 0xE8, 0xF3,
+0xC0, 0xA2, 0x68, 0xF5, 0x04, 0x4C, 0x43, 0x67,
+0x7E, 0x17, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x30, 0xF0, 0x20, 0x6B,
+0x28, 0xF5, 0xBF, 0xA3, 0x04, 0x6B, 0xFF, 0x6A,
+0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x0C, 0x23,
+0x7D, 0x67, 0x1E, 0x6A, 0x50, 0xC3, 0x01, 0x6A,
+0x4F, 0xCB, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x58, 0x9A, 0x92, 0xC3, 0x04, 0x04, 0x40, 0xEA,
+0x09, 0x97, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0x24, 0x67, 0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6,
+0x85, 0xA3, 0xFF, 0x68, 0x0C, 0xE9, 0x40, 0xEA,
+0x01, 0x72, 0x35, 0x61, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0x94, 0xA3,
+0x7F, 0x6A, 0x8C, 0xEA, 0x0C, 0xEA, 0x2B, 0x22,
+0x68, 0xF3, 0x75, 0xA3, 0x0F, 0x6A, 0x6C, 0xEA,
+0x01, 0x72, 0x25, 0x61, 0x05, 0x59, 0x03, 0x61,
+0xA0, 0xF6, 0x08, 0x6A, 0x07, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x24, 0x31, 0x1B, 0xF6, 0x04, 0x4A,
+0x49, 0xE1, 0x40, 0xAA, 0x61, 0x42, 0x1F, 0xF7,
+0x00, 0x6C, 0x8C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
+0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF3, 0x7C, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF3, 0x60, 0x9B, 0x69, 0xE2,
+0x60, 0xA2, 0x20, 0x6A, 0x6C, 0xEA, 0x4B, 0xEA,
+0xC0, 0xF7, 0x42, 0x32, 0x01, 0x10, 0x01, 0x6A,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0x28, 0xF5, 0x7C, 0xA2, 0x7F, 0x6A, 0x6C, 0xEA,
+0x01, 0x5A, 0x58, 0x67, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0xAF, 0xF5, 0x10, 0x4C, 0x00, 0x6D, 0x07, 0x6E,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x50, 0xA2,
+0x01, 0x6B, 0x46, 0x32, 0x6C, 0xEA, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x70, 0xA2,
+0x01, 0x6A, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x50, 0xA2,
+0xFF, 0x6B, 0x56, 0x32, 0x8E, 0xEA, 0x6C, 0xEA,
+0x01, 0x5A, 0x58, 0x67, 0x6C, 0xEA, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x7A, 0xCA,
+0x00, 0x6B, 0x06, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF5, 0x7A, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
+0x05, 0x97, 0x43, 0x67, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0xA9, 0xF0, 0x68, 0xA0, 0x01, 0x6A, 0xFF, 0x69,
+0x4C, 0xEB, 0x0B, 0x23, 0xC9, 0xF0, 0x65, 0xA0,
+0x6C, 0xEA, 0x2C, 0xEA, 0x26, 0x2A, 0x68, 0xF3,
+0x58, 0xA0, 0x23, 0x2A, 0xE8, 0xF3, 0x52, 0xA0,
+0x1D, 0x10, 0x00, 0x18, 0x0C, 0xC9, 0x01, 0x72,
+0x1C, 0x61, 0x68, 0xF3, 0x7D, 0xA0, 0x03, 0x6A,
+0x6C, 0xEA, 0x17, 0x2A, 0x68, 0xF3, 0x58, 0xA0,
+0x14, 0x2A, 0x04, 0x6A, 0x6C, 0xEA, 0x11, 0x2A,
+0x10, 0x6A, 0x6C, 0xEA, 0x0E, 0x2A, 0x68, 0xF3,
+0x79, 0xA0, 0x20, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x08, 0x22, 0xE8, 0xF3, 0x52, 0xA0, 0x05, 0x2A,
+0x00, 0x18, 0x84, 0xCA, 0x01, 0x5A, 0x58, 0x67,
+0x01, 0x10, 0x00, 0x6A, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x30, 0xF0, 0x20, 0x68, 0x4C, 0xEC,
+0xC0, 0xF1, 0x08, 0x48, 0x04, 0xD4, 0x68, 0xF3,
+0x9D, 0xA0, 0x10, 0x6B, 0x30, 0xF0, 0x20, 0x69,
+0x8D, 0xEB, 0x68, 0xF3, 0x7D, 0xC0, 0xEF, 0xF4,
+0x88, 0xA1, 0x01, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB,
+0x29, 0x23, 0xEF, 0xF4, 0x08, 0x49, 0x42, 0xA1,
+0xFF, 0x72, 0x54, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0x44, 0x9A, 0x00, 0x6B, 0x30, 0xF0,
+0x20, 0x68, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0x48, 0x9A, 0x04, 0x6B, 0xFF, 0x6C,
+0x60, 0xC2, 0xAE, 0xF2, 0x50, 0x98, 0x59, 0x4C,
+0x00, 0x6D, 0x05, 0x6E, 0x40, 0xEA, 0xC2, 0xA1,
+0xAE, 0xF2, 0x50, 0x98, 0xFF, 0x6C, 0x55, 0x4C,
+0x00, 0x6D, 0x05, 0x4E, 0x40, 0xEA, 0x00, 0x18,
+0x7A, 0xCA, 0x34, 0x2A, 0x04, 0x94, 0x00, 0x18,
+0x98, 0xEC, 0x30, 0x10, 0x88, 0xF3, 0x65, 0xA0,
+0x02, 0x5B, 0x13, 0x60, 0x88, 0xF3, 0xC4, 0xA0,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A,
+0xFF, 0x6C, 0xD9, 0xE3, 0x55, 0x4C, 0x00, 0x6D,
+0x40, 0xEA, 0x88, 0xF3, 0x65, 0xA0, 0x88, 0xF3,
+0x44, 0xA0, 0x49, 0xE3, 0x88, 0xF3, 0x57, 0xC0,
+0x19, 0x10, 0x03, 0x69, 0x38, 0xEB, 0x88, 0xF3,
+0xC4, 0xA0, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x50, 0x9A, 0xFE, 0x4E, 0xFF, 0x6C, 0x55, 0x4C,
+0x00, 0x6D, 0x12, 0xEB, 0x79, 0xE6, 0x40, 0xEA,
+0x88, 0xF3, 0x65, 0xA0, 0x88, 0xF3, 0x44, 0xA0,
+0x38, 0xEB, 0xFE, 0x4A, 0x12, 0xE9, 0x25, 0xE2,
+0x88, 0xF3, 0x37, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x04, 0x6B, 0x6C, 0xEA,
+0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x04, 0x96, 0x83, 0x67, 0x01, 0x6D,
+0x40, 0xEA, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
+0x30, 0xF0, 0x20, 0x69, 0x04, 0xD4, 0xEF, 0xF4,
+0x08, 0x49, 0xC0, 0xF0, 0x88, 0xA1, 0x04, 0x6B,
+0x8C, 0xEB, 0x4C, 0xEB, 0x37, 0x23, 0xC0, 0xF0,
+0x0A, 0xA1, 0xC0, 0xF0, 0x49, 0xA1, 0x58, 0xE8,
+0x12, 0xE8, 0xC0, 0xF0, 0x10, 0xC1, 0x00, 0x18,
+0x69, 0xCA, 0x03, 0x22, 0xC0, 0xF0, 0x11, 0xC1,
+0x03, 0x10, 0x01, 0x6A, 0xC0, 0xF0, 0x51, 0xC1,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x19, 0xA2,
+0x02, 0x58, 0x11, 0x61, 0x00, 0x18, 0x69, 0xCA,
+0x06, 0x22, 0x04, 0x94, 0x00, 0x18, 0x9F, 0xEC,
+0x04, 0x94, 0x00, 0x18, 0x98, 0xEC, 0x04, 0x94,
+0x00, 0x18, 0x68, 0xEC, 0x04, 0x94, 0xB0, 0x67,
+0x00, 0x18, 0x37, 0xED, 0x0F, 0x10, 0x01, 0x70,
+0x04, 0x61, 0x04, 0x94, 0x00, 0x18, 0x72, 0xEC,
+0x09, 0x10, 0x00, 0x18, 0x69, 0xCA, 0x06, 0x22,
+0x04, 0x94, 0x00, 0x18, 0x9F, 0xEC, 0x04, 0x94,
+0x00, 0x18, 0x98, 0xEC, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0xFF, 0x6A,
+0x4C, 0xEC, 0x12, 0x2C, 0x10, 0xF0, 0x23, 0x6C,
+0xC5, 0xF7, 0x1D, 0x4C, 0x00, 0x18, 0xE9, 0xE9,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0xC0, 0xF0, 0x92, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0xC0, 0xF0, 0x72, 0xC2, 0x1F, 0x10,
+0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48,
+0xC0, 0xF0, 0x88, 0xA0, 0x04, 0x6B, 0x8C, 0xEB,
+0x4C, 0xEB, 0x15, 0x23, 0xC0, 0xF0, 0xCB, 0xA0,
+0x00, 0x6A, 0x04, 0xD2, 0xA2, 0x67, 0x0A, 0x6A,
+0x58, 0xEE, 0x10, 0xF0, 0x23, 0x6C, 0xC5, 0xF7,
+0x1D, 0x4C, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
+0xFC, 0xE9, 0xC0, 0xF0, 0x72, 0xA0, 0x01, 0x6A,
+0x6D, 0xEA, 0xC0, 0xF0, 0x52, 0xC0, 0x07, 0x97,
+0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x21, 0x6A,
+0x70, 0xF3, 0x7C, 0xA2, 0x80, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x02, 0x2A,
+0x00, 0x18, 0x6F, 0xED, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0x94, 0xA3,
+0x80, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0xFF, 0x6C,
+0x8C, 0xEA, 0x05, 0x22, 0x80, 0xF6, 0x97, 0xA3,
+0x00, 0x18, 0xF2, 0xC4, 0x08, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
+0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x0C, 0x6D,
+0x01, 0x6C, 0x00, 0x18, 0xE5, 0xC8, 0x0C, 0x6C,
+0x00, 0x18, 0xF0, 0xF1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x00, 0x18,
+0x6F, 0xED, 0x08, 0x20, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D, 0xFF, 0x6C,
+0xC5, 0x67, 0x40, 0xEA, 0x04, 0x6D, 0x01, 0x6C,
+0x00, 0x18, 0xE5, 0xC8, 0x04, 0x6C, 0x00, 0x18,
+0xF0, 0xF1, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0xFF, 0x69, 0x30, 0xF0, 0x20, 0x6A, 0x8C, 0xE9,
+0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3,
+0x40, 0xEA, 0x01, 0x72, 0x2C, 0x61, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3,
+0x7A, 0xA0, 0x09, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x68, 0xF3, 0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0x6F, 0x6D,
+0x2C, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x50, 0x9A, 0xC8, 0xF2, 0x9F, 0xA0,
+0x01, 0x6D, 0x08, 0x6E, 0xF1, 0x67, 0x40, 0xEA,
+0x01, 0x72, 0x0D, 0x61, 0x68, 0xF3, 0x7A, 0xA0,
+0x02, 0x6A, 0x01, 0x6C, 0x6D, 0xEA, 0x0E, 0x6D,
+0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0xE5, 0xC8,
+0x0E, 0x6C, 0x00, 0x18, 0xF0, 0xF1, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0x94, 0xA3,
+0x80, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0xFF, 0x6C,
+0x8C, 0xEA, 0x05, 0x22, 0x80, 0xF6, 0x97, 0xA3,
+0x00, 0x18, 0xDE, 0xC4, 0x08, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C,
+0xA4, 0x67, 0x2F, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x7C, 0xA2,
+0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x02, 0x2A, 0x00, 0x18, 0x42, 0xED,
+0x08, 0x6D, 0x01, 0x6C, 0x00, 0x18, 0xE5, 0xC8,
+0x08, 0x6C, 0x00, 0x18, 0xF0, 0xF1, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x69, 0x04, 0x67,
+0x2C, 0xE8, 0xAC, 0xE9, 0x00, 0x18, 0x69, 0xCA,
+0x07, 0x22, 0x03, 0x28, 0x00, 0x18, 0x7C, 0xCB,
+0x0D, 0x10, 0x00, 0x18, 0x34, 0xCB, 0x0A, 0x10,
+0x01, 0x70, 0x08, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x6C, 0x01, 0x6D,
+0xD1, 0x67, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0xAF, 0xF5, 0x10, 0xA2, 0x00, 0x6C,
+0x16, 0x30, 0x00, 0x18, 0x16, 0xCB, 0x00, 0x18,
+0x7A, 0xCA, 0x10, 0x22, 0x00, 0x18, 0x69, 0xCA,
+0x0D, 0x22, 0x90, 0x67, 0x00, 0x18, 0x8E, 0xEC,
+0x90, 0x67, 0x00, 0x18, 0x9F, 0xEC, 0x90, 0x67,
+0x00, 0x18, 0x98, 0xEC, 0x00, 0x6C, 0xB0, 0x67,
+0x00, 0x18, 0x97, 0xCB, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5,
+0x10, 0xA2, 0x00, 0x6C, 0x00, 0x18, 0x16, 0xCB,
+0x00, 0x18, 0x7A, 0xCA, 0x16, 0x30, 0x01, 0x6C,
+0x04, 0x22, 0x90, 0x67, 0x00, 0x18, 0xEF, 0xCA,
+0x00, 0x6C, 0xB0, 0x67, 0x00, 0x18, 0x97, 0xCB,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x04, 0x67,
+0xC0, 0xF0, 0x88, 0xA3, 0xFF, 0x6A, 0x4C, 0xE8,
+0x96, 0x34, 0x0E, 0xEC, 0xAC, 0xEA, 0x19, 0x2C,
+0xC0, 0xF0, 0xB0, 0xA3, 0x43, 0xED, 0x04, 0x61,
+0x4B, 0xE5, 0xC0, 0xF0, 0x50, 0xC3, 0x02, 0x10,
+0xC0, 0xF0, 0x90, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF5, 0x58, 0xA2, 0x0A, 0x2A, 0x90, 0x67,
+0x00, 0x18, 0xEF, 0xCA, 0x01, 0x6C, 0xB0, 0x67,
+0x00, 0x18, 0x97, 0xCB, 0x01, 0x6C, 0x00, 0x18,
+0x16, 0xCB, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x68, 0x8C, 0xE8, 0x00, 0x18,
+0x7A, 0xCA, 0x0E, 0x22, 0x90, 0x67, 0x00, 0x18,
+0x7E, 0xCA, 0x0A, 0x22, 0x00, 0x18, 0x69, 0xCA,
+0x07, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5,
+0xB9, 0xA2, 0x90, 0x67, 0x00, 0x18, 0xC6, 0xCB,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
+0x8C, 0xE8, 0x00, 0x18, 0x7A, 0xCA, 0x0E, 0x22,
+0x90, 0x67, 0x00, 0x18, 0x7E, 0xCA, 0x0A, 0x22,
+0x00, 0x18, 0x69, 0xCA, 0x07, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xAF, 0xF5, 0xB9, 0xA2, 0x90, 0x67,
+0x00, 0x18, 0xC6, 0xCB, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0xC0, 0xF0, 0x92, 0xA2, 0xC0, 0xF0, 0xA8, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xB6, 0x35,
+0x00, 0x6C, 0xC0, 0xF0, 0x72, 0xC2, 0x00, 0x18,
+0x97, 0xCB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xFF, 0x68,
+0x8C, 0xE8, 0x68, 0xF3, 0x99, 0xA2, 0x03, 0x6B,
+0x6B, 0xEB, 0x41, 0x6D, 0x8C, 0xEB, 0xAB, 0xED,
+0xAC, 0xEB, 0x68, 0xF3, 0xBA, 0xA2, 0x68, 0xF3,
+0x79, 0xC2, 0x11, 0x6B, 0x00, 0x6C, 0x6B, 0xEB,
+0x88, 0xF3, 0x85, 0xC2, 0x68, 0xF3, 0x9D, 0xC2,
+0xAC, 0xEB, 0x88, 0xF3, 0x86, 0xC2, 0x90, 0x67,
+0x68, 0xF3, 0x7A, 0xC2, 0x00, 0x18, 0x79, 0xEC,
+0x90, 0x67, 0x00, 0x18, 0x72, 0xEC, 0x90, 0x67,
+0x00, 0x18, 0x8E, 0xEC, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
+0x30, 0xF0, 0x20, 0x68, 0x04, 0xD2, 0xC0, 0xF1,
+0x08, 0x48, 0x68, 0xF3, 0x74, 0xA0, 0x00, 0x6A,
+0xE8, 0xF3, 0x42, 0xC0, 0x7F, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x47, 0x22, 0x30, 0xF0,
+0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF5, 0x58, 0x9A, 0xE0, 0xF1,
+0x9D, 0xA1, 0x40, 0xEA, 0x01, 0x72, 0x78, 0x67,
+0x05, 0xD3, 0x38, 0x2B, 0x04, 0x94, 0x88, 0xF3,
+0xA2, 0xA0, 0x00, 0x18, 0x37, 0xED, 0x04, 0x94,
+0x00, 0x6D, 0x00, 0x18, 0xA3, 0xC8, 0x68, 0xF3,
+0x7A, 0xA0, 0xC8, 0xF3, 0x54, 0xD8, 0x20, 0x6A,
+0x6D, 0xEA, 0x9D, 0x67, 0x68, 0xF3, 0x5A, 0xC0,
+0x47, 0x44, 0x0D, 0x4A, 0x80, 0xA2, 0x08, 0xF3,
+0x6A, 0xA0, 0x01, 0x6A, 0x88, 0xF3, 0x83, 0xC0,
+0x4C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
+0x80, 0xF6, 0x74, 0xA1, 0x6C, 0xEA, 0x8C, 0xEA,
+0x12, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x56, 0xA2, 0x00, 0x68, 0x02, 0x72, 0x07, 0x60,
+0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3, 0x57, 0xA2,
+0x02, 0x72, 0x01, 0x60, 0x01, 0x68, 0x00, 0x18,
+0x28, 0xF0, 0x04, 0x22, 0x03, 0x20, 0x04, 0x94,
+0x00, 0x18, 0xAC, 0xCA, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x68, 0xF3, 0x74, 0xA0, 0x00, 0x6A, 0xE8, 0xF3,
+0x42, 0xC0, 0x7F, 0x6A, 0xFF, 0x69, 0x6C, 0xEA,
+0x2C, 0xEC, 0x2C, 0xEA, 0x04, 0xD4, 0x47, 0x22,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3,
+0x40, 0xEA, 0x01, 0x72, 0x3C, 0x61, 0x04, 0x94,
+0x00, 0x6D, 0x00, 0x18, 0xA3, 0xC8, 0x68, 0xF3,
+0x7A, 0xA0, 0xC8, 0xF3, 0x54, 0xD8, 0x20, 0x6A,
+0x6D, 0xEA, 0x68, 0xF3, 0x75, 0xA0, 0x68, 0xF3,
+0x5A, 0xC0, 0x0F, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x01, 0x69, 0x06, 0x22, 0x68, 0xF3, 0x3A, 0xA0,
+0x01, 0x6A, 0x32, 0x31, 0x4E, 0xE9, 0x4C, 0xE9,
+0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2,
+0x01, 0x6A, 0x4C, 0xEB, 0x08, 0x2B, 0x30, 0xF0,
+0x21, 0x6B, 0x70, 0xF3, 0x7C, 0xA3, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0x56, 0xA2, 0x02, 0x72,
+0x06, 0x60, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF3,
+0x57, 0xA2, 0x02, 0x72, 0x01, 0x61, 0x00, 0x69,
+0x00, 0x18, 0x28, 0xF0, 0x04, 0x22, 0x03, 0x21,
+0x04, 0x94, 0x00, 0x18, 0xAC, 0xCA, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF3, 0xAA, 0xA3,
+0xC4, 0x67, 0x01, 0x6C, 0xFF, 0x6A, 0x8C, 0xED,
+0x4C, 0xED, 0x4C, 0xEE, 0x07, 0x2D, 0x30, 0xF0,
+0x21, 0x6D, 0x70, 0xF3, 0xBC, 0xA5, 0xAC, 0xEC,
+0x4C, 0xEC, 0x07, 0x24, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x80, 0xA2, 0x00, 0x18, 0x3F, 0xF1,
+0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x68, 0xF3, 0x98, 0xA3, 0x01, 0x6D,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xF0, 0x6D, 0x01, 0x6C,
+0x00, 0x18, 0xE5, 0xC8, 0x00, 0x6C, 0x00, 0x18,
+0x1A, 0xF6, 0x00, 0x18, 0x3B, 0xE8, 0x00, 0x18,
+0x72, 0xE8, 0x01, 0x6C, 0x00, 0x18, 0x1A, 0xF6,
+0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0xE5, 0xC8,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
+0xC5, 0x67, 0xFF, 0x6C, 0x40, 0xEA, 0x04, 0x6D,
+0x01, 0x6C, 0x00, 0x18, 0xE5, 0xC8, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x1E, 0xA2, 0x90, 0x67,
+0x00, 0x18, 0x0C, 0xF0, 0x40, 0x6B, 0x4D, 0xEB,
+0xFF, 0x6D, 0x90, 0x67, 0x6C, 0xED, 0x00, 0x18,
+0xFF, 0xEF, 0x04, 0x6C, 0x00, 0x18, 0xF0, 0xF1,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x2E, 0x6E,
+0xFF, 0x6C, 0x6F, 0x6D, 0x40, 0xEA, 0x02, 0x6D,
+0x01, 0x6C, 0x00, 0x18, 0xE5, 0xC8, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x1E, 0xA2, 0x90, 0x67,
+0x00, 0x18, 0x0C, 0xF0, 0xBF, 0x6D, 0x90, 0x67,
+0x4C, 0xED, 0x00, 0x18, 0xFF, 0xEF, 0x02, 0x6C,
+0x00, 0x18, 0xF0, 0xF1, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF3, 0x6C, 0x9B, 0xFF, 0x6A, 0x24, 0x67,
+0x60, 0xA3, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x68,
+0x6C, 0xEA, 0x04, 0xD2, 0x6E, 0xF2, 0x58, 0x98,
+0xFF, 0x6C, 0xA4, 0x67, 0x2D, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A,
+0x40, 0xEA, 0x07, 0x2A, 0x6E, 0xF2, 0x58, 0x98,
+0x04, 0x95, 0xFF, 0x6C, 0x2D, 0x6E, 0x40, 0xEA,
+0x2F, 0x10, 0x05, 0x59, 0x24, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x28, 0x31, 0x7B, 0xF5, 0x0C, 0x4A,
+0x29, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x00, 0x6C,
+0x08, 0x6D, 0x17, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x5C, 0xF3, 0xB0, 0x9A, 0x11, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x5C, 0xF3,
+0xB4, 0x9A, 0x0B, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x5C, 0xF3, 0xB8, 0x9A, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xBC, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1, 0x00, 0x18,
+0x42, 0xED, 0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0xE5, 0xC8, 0x00, 0x6C, 0x00, 0x18, 0xF0, 0xF1,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x7A, 0xA0,
+0x08, 0x6A, 0xFF, 0x69, 0x6C, 0xEA, 0x2C, 0xEA,
+0x2C, 0xEC, 0x05, 0x2A, 0x01, 0x6C, 0x0C, 0x6D,
+0x00, 0x18, 0xE5, 0xC8, 0x43, 0x10, 0x01, 0x6D,
+0x00, 0x18, 0x50, 0xD1, 0x01, 0x6C, 0x04, 0x6D,
+0x00, 0x18, 0xE5, 0xC8, 0x08, 0xF3, 0x6A, 0xA0,
+0x01, 0x6A, 0x4C, 0xEB, 0x2C, 0xEB, 0x07, 0x2B,
+0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3, 0x7C, 0xA3,
+0x6C, 0xEA, 0x2C, 0xEA, 0x2C, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2, 0x04, 0x6A,
+0x4C, 0xEB, 0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B,
+0x70, 0xF3, 0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x1D, 0x22, 0x30, 0xF0, 0x20, 0x68,
+0xEF, 0xF4, 0x08, 0x48, 0x80, 0xF6, 0x36, 0xA0,
+0x91, 0x67, 0x00, 0x18, 0x0C, 0xF0, 0x80, 0x6D,
+0xAB, 0xED, 0x4D, 0xED, 0xFF, 0x6A, 0x4C, 0xED,
+0x91, 0x67, 0x00, 0x18, 0xFF, 0xEF, 0x80, 0xF6,
+0x16, 0xA0, 0x90, 0x67, 0x00, 0x18, 0x0C, 0xF0,
+0x20, 0x6D, 0x4D, 0xED, 0xFF, 0x6A, 0x90, 0x67,
+0x4C, 0xED, 0x00, 0x18, 0xFF, 0xEF, 0x04, 0x6C,
+0x00, 0x18, 0xF0, 0xF1, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D, 0xFF, 0x6C,
+0xC5, 0x67, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6B, 0x48, 0xF5, 0xA2, 0xA3,
+0x04, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x08, 0x2B, 0x03, 0x6D, 0x00, 0x18,
+0x50, 0xD1, 0x01, 0x6C, 0x04, 0x6D, 0x00, 0x18,
+0xE5, 0xC8, 0x22, 0x10, 0x00, 0x6D, 0x30, 0xF0,
+0x20, 0x69, 0x00, 0x18, 0x50, 0xD1, 0xEF, 0xF4,
+0x08, 0x49, 0x0C, 0x6D, 0x01, 0x6C, 0x00, 0x18,
+0xE5, 0xC8, 0x80, 0xF6, 0x16, 0xA1, 0x90, 0x67,
+0x00, 0x18, 0x0C, 0xF0, 0x7F, 0x6D, 0x90, 0x67,
+0x4C, 0xED, 0x00, 0x18, 0xFF, 0xEF, 0x80, 0xF6,
+0x16, 0xA1, 0x90, 0x67, 0x00, 0x18, 0x0C, 0xF0,
+0xDF, 0x6D, 0x90, 0x67, 0x4C, 0xED, 0x00, 0x18,
+0xFF, 0xEF, 0x0C, 0x6C, 0x00, 0x18, 0xF0, 0xF1,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x6D, 0x00, 0x18,
+0x50, 0xD1, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x00, 0x6D, 0xC5, 0x67, 0xFF, 0x6C,
+0x40, 0xEA, 0x01, 0x6C, 0x0C, 0x6D, 0x00, 0x18,
+0xE5, 0xC8, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0x69, 0x2C, 0xEC, 0xAC, 0xE9, 0x3B, 0x24,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3,
+0x40, 0xEA, 0x01, 0x72, 0x30, 0x61, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3,
+0x7A, 0xA0, 0x05, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x68, 0xF3, 0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0x2B, 0x6E, 0xFF, 0x6C,
+0x0F, 0x6D, 0x40, 0xEA, 0x91, 0x67, 0x02, 0x6D,
+0x00, 0x18, 0x50, 0xD1, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x50, 0x9A, 0xC8, 0xF2, 0x9F, 0xA0,
+0x00, 0x6D, 0x08, 0x6E, 0xF1, 0x67, 0x40, 0xEA,
+0x01, 0x72, 0x0D, 0x61, 0x68, 0xF3, 0x7A, 0xA0,
+0x01, 0x6A, 0x01, 0x6C, 0x6D, 0xEA, 0x06, 0x6D,
+0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0xE5, 0xC8,
+0x06, 0x6C, 0x00, 0x18, 0xF0, 0xF1, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x25, 0x67, 0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1,
+0x08, 0x4D, 0x06, 0x67, 0x68, 0xF3, 0xDA, 0xA5,
+0x03, 0x6B, 0xFF, 0x6A, 0xCC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x4C, 0xE9, 0x4C, 0xE8, 0xE0, 0xF0,
+0x03, 0x2B, 0x68, 0xF3, 0x5C, 0xA5, 0x8E, 0xEA,
+0xC0, 0xF0, 0x1E, 0x22, 0x0D, 0x5C, 0xC0, 0xF0,
+0x1B, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34,
+0x9B, 0xF5, 0x00, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
+0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x44, 0xA2, 0x0E, 0x72, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0xE9, 0xCC, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x03, 0x2A, 0x01, 0x6C,
+0x00, 0x18, 0x4D, 0xCB, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x06, 0x72, 0x03, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x1C, 0xCD, 0x30, 0xF0,
+0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x04, 0x72,
+0x09, 0x61, 0x05, 0x21, 0x91, 0x67, 0xB0, 0x67,
+0x00, 0x18, 0x4A, 0xCD, 0x03, 0x10, 0x90, 0x67,
+0x00, 0x18, 0x3F, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x08, 0x72, 0xA0, 0xF0,
+0x03, 0x61, 0x00, 0x18, 0x34, 0xCB, 0xA0, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18, 0x4D, 0xCB,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x06, 0x72, 0x03, 0x61, 0x90, 0x67, 0x00, 0x18,
+0x1C, 0xCD, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x44, 0xA2, 0x0E, 0x72, 0x07, 0x61, 0x00, 0x18,
+0x2E, 0xC9, 0x01, 0x72, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0xE9, 0xCC, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x0C, 0x72, 0x7C, 0x61,
+0x00, 0x18, 0x2E, 0xC9, 0x01, 0x72, 0x78, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x5B, 0xCB, 0x74, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x0E, 0x72, 0x07, 0x61, 0x00, 0x18, 0x2E, 0xC9,
+0x01, 0x72, 0x03, 0x61, 0x90, 0x67, 0x00, 0x18,
+0xE9, 0xCC, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x44, 0xA2, 0x06, 0x72, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0x1C, 0xCD, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x0C, 0x72, 0x07, 0x61,
+0x00, 0x18, 0x2E, 0xC9, 0x01, 0x72, 0x03, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x5B, 0xCB, 0x30, 0xF0,
+0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x04, 0x72,
+0x4B, 0x61, 0x00, 0x18, 0x8C, 0xCA, 0x01, 0x72,
+0x47, 0x61, 0x90, 0x67, 0x00, 0x18, 0xBD, 0xCC,
+0x43, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x44, 0xA2, 0x0E, 0x72, 0x07, 0x61, 0x00, 0x18,
+0x2E, 0xC9, 0x01, 0x72, 0x03, 0x61, 0x90, 0x67,
+0x00, 0x18, 0xE9, 0xCC, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x06, 0x72, 0x03, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x1C, 0xCD, 0x30, 0xF0,
+0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2, 0x0C, 0x72,
+0x07, 0x61, 0x00, 0x18, 0x2E, 0xC9, 0x01, 0x72,
+0x03, 0x61, 0x90, 0x67, 0x00, 0x18, 0x5B, 0xCB,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x03, 0x2A, 0x01, 0x6C, 0x00, 0x18, 0x4D, 0xCB,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x04, 0x72, 0x12, 0x61, 0x00, 0x18, 0xAC, 0xCC,
+0x0F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x68, 0xF3, 0x7C, 0xA2, 0x0C, 0x73,
+0x07, 0x61, 0x68, 0xF3, 0x79, 0xA2, 0x20, 0x6A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x7C, 0xCB,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x76, 0xCA, 0x14, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x40, 0x9A, 0x40, 0xA2,
+0x23, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x44, 0x9A, 0x40, 0xA2, 0x1D, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x48, 0x9A, 0x60, 0xA2,
+0x02, 0x6A, 0x6C, 0xEA, 0x15, 0x22, 0x00, 0x18,
+0x0C, 0xC9, 0x01, 0x72, 0x0C, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x7C, 0xF3, 0x90, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x05, 0x10, 0x00, 0x18,
+0xF2, 0xF6, 0x01, 0x5A, 0x58, 0x67, 0x01, 0x10,
+0x00, 0x6A, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x44, 0xA2, 0x02, 0x22, 0x08, 0x72,
+0x06, 0x61, 0x00, 0x18, 0xED, 0xCD, 0x01, 0x72,
+0x02, 0x61, 0x00, 0x18, 0x8E, 0xCC, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0xB9, 0xA2, 0x01, 0x6B, 0xFF, 0x6C,
+0x6C, 0xED, 0x21, 0x25, 0x08, 0xF3, 0x4A, 0xA2,
+0x6C, 0xEA, 0x8C, 0xEA, 0x07, 0x2A, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x5C, 0xA2, 0x4C, 0xEB,
+0x8C, 0xEB, 0x13, 0x23, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF4, 0x72, 0xA2, 0x02, 0x6A, 0x4C, 0xEB,
+0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3,
+0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x04, 0x22, 0x00, 0x18, 0x2F, 0xF1, 0x01, 0x72,
+0x02, 0x61, 0x00, 0x18, 0x06, 0xCE, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0x48, 0xF5, 0xA1, 0xA3, 0x04, 0x6B, 0xFF, 0x6A,
+0xAC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x06, 0x23,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x44, 0x9A,
+0x00, 0x6B, 0x60, 0xC2, 0x02, 0x6D, 0x00, 0x18,
+0x83, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0x48, 0x9A, 0x04, 0x69, 0x30, 0xF0, 0x20, 0x68,
+0x20, 0xDA, 0xC0, 0xF1, 0x08, 0x48, 0xE8, 0xF3,
+0xC6, 0xA0, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x50, 0x9A, 0xFF, 0x6C, 0x59, 0x4C, 0x00, 0x6D,
+0xC6, 0x36, 0x40, 0xEA, 0x68, 0xF3, 0x59, 0xA0,
+0x07, 0x97, 0x4D, 0xE9, 0x68, 0xF3, 0x39, 0xC0,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
+0xB4, 0xA3, 0x04, 0x67, 0x7F, 0x6C, 0xFF, 0x6A,
+0xAC, 0xEC, 0x4C, 0xEC, 0x01, 0x74, 0x4C, 0xE8,
+0x1B, 0x61, 0x68, 0xF3, 0xB5, 0xA3, 0x10, 0x6C,
+0x8B, 0xEC, 0xAC, 0xEC, 0x4C, 0xEC, 0x16, 0x24,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0xD0, 0x67, 0x0C, 0x6C, 0x00, 0x6D, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
+0x90, 0x67, 0x00, 0x18, 0x27, 0xCE, 0x0D, 0x10,
+0x02, 0x74, 0x0B, 0x61, 0x68, 0xF3, 0x5C, 0xA3,
+0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x04, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
+0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6B, 0x69, 0xF2, 0xB0, 0xA3,
+0x01, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x02, 0x2B, 0x00, 0x18, 0x42, 0xCE,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0x69, 0x8C, 0xE9, 0x30, 0xF0, 0x20, 0x68,
+0x91, 0x67, 0xC0, 0xF1, 0x08, 0x48, 0x00, 0x18,
+0x27, 0xCE, 0x68, 0xF3, 0x5C, 0xA0, 0x0C, 0x72,
+0x20, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x0C, 0x6C, 0x00, 0x6D, 0xD1, 0x67,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x00, 0x6D, 0xC5, 0x67, 0xFF, 0x6C,
+0x40, 0xEA, 0x68, 0xF3, 0x7A, 0xA0, 0x01, 0x6A,
+0xC8, 0xF2, 0x9F, 0xA0, 0x6D, 0xEA, 0x68, 0xF3,
+0x5A, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x50, 0x9A, 0x00, 0x6D, 0x08, 0x6E, 0xF1, 0x67,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x04, 0x67, 0x30, 0xF0,
+0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x68, 0xF3,
+0xB9, 0xA4, 0x40, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB,
+0x4C, 0xEB, 0x4C, 0xE8, 0x0C, 0x23, 0x68, 0xF3,
+0x9A, 0xA4, 0x10, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB,
+0x06, 0x23, 0x00, 0x18, 0x7A, 0xCA, 0x03, 0x2A,
+0x90, 0x67, 0x00, 0x18, 0x98, 0xEC, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
+0x99, 0xA2, 0x02, 0x6B, 0x8C, 0xEB, 0x10, 0x23,
+0x03, 0x6B, 0x6B, 0xEB, 0x6C, 0xEC, 0x68, 0xF3,
+0x99, 0xC2, 0x68, 0xF3, 0x9D, 0xA2, 0x8C, 0xEB,
+0x68, 0xF3, 0x7D, 0xC2, 0x68, 0xF3, 0x5D, 0xA2,
+0x07, 0x6B, 0x6C, 0xEA, 0x6A, 0x2A, 0x66, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3, 0x98, 0x9B,
+0xFF, 0xF7, 0x1F, 0x6D, 0x60, 0xAC, 0xAC, 0xEB,
+0x01, 0x4B, 0xAC, 0xEB, 0x60, 0xCC, 0x88, 0xF3,
+0x65, 0xA2, 0x68, 0xF3, 0x9D, 0xA2, 0x01, 0x4B,
+0x88, 0xF3, 0x65, 0xC2, 0x11, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x68, 0xF3, 0x7D, 0xC2, 0x88, 0xF3,
+0x65, 0xA2, 0xE8, 0xF3, 0x44, 0xA2, 0x63, 0xEA,
+0x49, 0x60, 0x30, 0xF0, 0x20, 0x69, 0x71, 0x67,
+0xEF, 0xF4, 0x08, 0x4B, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF5, 0x58, 0x9A, 0xE0, 0xF1, 0x9D, 0xA3,
+0x40, 0xEA, 0x01, 0x72, 0x3E, 0x61, 0xEF, 0xF4,
+0x68, 0xA1, 0x01, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x02, 0x2A, 0x00, 0x18, 0x95, 0xC9,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x95, 0xA2, 0x10, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB, 0x07, 0x2B,
+0x68, 0xF3, 0x99, 0xA2, 0xDF, 0x4B, 0x8C, 0xEB,
+0x68, 0xF3, 0x79, 0xC2, 0x22, 0x10, 0x88, 0xF3,
+0x66, 0xA2, 0x01, 0x4B, 0x88, 0xF3, 0x66, 0xC2,
+0x88, 0xF3, 0x66, 0xA2, 0x02, 0x5B, 0x0B, 0x61,
+0x68, 0xF3, 0x99, 0xA2, 0x21, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x00, 0x6B,
+0x88, 0xF3, 0x66, 0xC2, 0x03, 0x10, 0x90, 0x67,
+0x00, 0x18, 0x6A, 0xCE, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x00, 0x6B, 0x88, 0xF3,
+0x65, 0xC2, 0x03, 0x10, 0x90, 0x67, 0x00, 0x18,
+0x7A, 0xCC, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
+0x05, 0x5A, 0x00, 0x68, 0x24, 0x60, 0x10, 0xF0,
+0x24, 0x6B, 0x48, 0x34, 0xBB, 0xF5, 0x14, 0x4B,
+0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x10, 0xF0,
+0x24, 0x6B, 0x7C, 0xF3, 0x7C, 0x9B, 0x13, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3, 0x60, 0x9B,
+0x0E, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
+0x64, 0x9B, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF3, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF3, 0x6C, 0x9B, 0x60, 0xAB,
+0xFF, 0xF7, 0x1F, 0x68, 0x6C, 0xE8, 0x18, 0xF0,
+0x00, 0x6B, 0x0C, 0xEB, 0x13, 0x2B, 0x30, 0xF0,
+0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x68, 0xF3,
+0xBD, 0xA4, 0xFE, 0x4B, 0xAC, 0xEB, 0x05, 0x6D,
+0xAB, 0xED, 0xAC, 0xEB, 0x02, 0x4D, 0xAC, 0xEB,
+0x68, 0xF3, 0x7D, 0xC4, 0x82, 0x67, 0x00, 0x18,
+0x7A, 0xCC, 0x7D, 0x10, 0x08, 0xF0, 0x00, 0x6B,
+0x0C, 0xEB, 0x43, 0x23, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0xD4, 0xA3,
+0x7F, 0x6C, 0xFF, 0x6D, 0xCC, 0xEC, 0x01, 0x74,
+0x12, 0x61, 0x68, 0xF3, 0xDD, 0xA3, 0x01, 0x6C,
+0xCD, 0xEC, 0x68, 0xF3, 0x9D, 0xC3, 0x68, 0xF3,
+0x95, 0xA3, 0x10, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0xAC, 0xEB, 0x20, 0x73, 0x11, 0x61, 0x82, 0x67,
+0x00, 0x18, 0x6A, 0xCE, 0x34, 0x10, 0x02, 0x74,
+0x32, 0x61, 0x68, 0xF3, 0x57, 0xA3, 0x01, 0x6C,
+0x8C, 0xEA, 0xAC, 0xEA, 0x0B, 0x2A, 0x68, 0xF3,
+0x5D, 0xA3, 0x4D, 0xEC, 0x68, 0xF3, 0x9D, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
+0x40, 0xEA, 0x21, 0x10, 0x68, 0xF3, 0x95, 0xA3,
+0x10, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0xAC, 0xEA,
+0x10, 0x72, 0x19, 0x61, 0x68, 0xF3, 0x9D, 0xA3,
+0x04, 0x6A, 0x00, 0x6D, 0x8D, 0xEA, 0x68, 0xF3,
+0x5D, 0xC3, 0x01, 0x6C, 0x00, 0x18, 0x42, 0xD2,
+0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x68, 0xF3, 0x9D, 0xA3, 0x02, 0x6A,
+0x4B, 0xEA, 0x8C, 0xEA, 0x05, 0x6C, 0x8B, 0xEC,
+0x8C, 0xEA, 0x68, 0xF3, 0x5D, 0xC3, 0x02, 0x30,
+0x1E, 0x30, 0x1A, 0x20, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x5D, 0xA0,
+0x02, 0x69, 0xE8, 0xF3, 0xC5, 0xA0, 0x2D, 0xEA,
+0x68, 0xF3, 0x5D, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x50, 0x9A, 0xFF, 0x6C, 0x55, 0x4C,
+0x00, 0x6D, 0x40, 0xEA, 0x68, 0xF3, 0x59, 0xA0,
+0x4D, 0xE9, 0x68, 0xF3, 0x39, 0xC0, 0x0B, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x9D, 0xA2, 0x03, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x68, 0xF3, 0x7D, 0xC2, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0x24, 0x67, 0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6,
+0x85, 0xA3, 0xFF, 0x68, 0x0C, 0xE9, 0x40, 0xEA,
+0x01, 0x72, 0x20, 0xF1, 0x0C, 0x61, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3,
+0x94, 0xA3, 0x7F, 0x6A, 0x8C, 0xEA, 0x0C, 0xEA,
+0x20, 0xF1, 0x01, 0x22, 0x68, 0xF3, 0x75, 0xA3,
+0x0F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x69, 0x61,
+0x05, 0x59, 0x5A, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x28, 0x33, 0xDB, 0xF5, 0x08, 0x4A, 0x69, 0xE2,
+0x40, 0x9A, 0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF3, 0x50, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
+0x74, 0x9B, 0x3F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF3, 0x58, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF3,
+0x7C, 0x9B, 0x2F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF3, 0x40, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
+0x64, 0x9B, 0x1F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF3, 0x48, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
+0x6C, 0x9B, 0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF3, 0x50, 0x9A, 0x60, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3,
+0x63, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF3,
+0x74, 0x9B, 0x60, 0xA3, 0x88, 0xF3, 0x62, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x88, 0xF3, 0x63, 0xA2, 0x02, 0x2B, 0x88, 0xF3,
+0x62, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5,
+0x6B, 0xC2, 0x91, 0x67, 0x00, 0x18, 0xBF, 0xC9,
+0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF3, 0xB8, 0x9C,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x00, 0x6B, 0x88, 0xF3, 0x65, 0xC2, 0x88, 0xF3,
+0x66, 0xC2, 0x80, 0xAD, 0xFF, 0xF7, 0x1F, 0x6E,
+0xCC, 0xEC, 0x01, 0x4C, 0xCC, 0xEC, 0x80, 0xCD,
+0x10, 0xF0, 0x24, 0x6C, 0x88, 0xF3, 0xAA, 0xA2,
+0x3C, 0xF3, 0x98, 0x9C, 0xA0, 0xC4, 0x10, 0xF0,
+0x24, 0x6C, 0xBC, 0xF3, 0x9C, 0x9C, 0x60, 0xC4,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0x68, 0x9B,
+0x02, 0x6C, 0x80, 0xC3, 0x68, 0xF3, 0x9D, 0xA2,
+0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x11, 0x6C,
+0x8B, 0xEC, 0x8C, 0xEB, 0x68, 0xF3, 0x7D, 0xC2,
+0x08, 0xF3, 0x6A, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
+0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3,
+0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x04, 0x22, 0x91, 0x67, 0x00, 0x18, 0x06, 0xC5,
+0x03, 0x10, 0x91, 0x67, 0x00, 0x18, 0xD7, 0xCE,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x68, 0xF3, 0x79, 0xA0, 0x40, 0x6A, 0x6C, 0xEA,
+0x55, 0x22, 0x68, 0xF3, 0x9A, 0xA0, 0x10, 0x6B,
+0xFF, 0x6D, 0x44, 0x67, 0x6C, 0xEA, 0xAC, 0xEA,
+0x22, 0x2A, 0x88, 0xF3, 0x43, 0xA0, 0x88, 0xF3,
+0xA2, 0xA0, 0xAE, 0xEA, 0x47, 0x2A, 0x8D, 0xEB,
+0x68, 0xF3, 0x7A, 0xC0, 0x91, 0x67, 0x00, 0x18,
+0x37, 0xED, 0x91, 0x67, 0x00, 0x18, 0x68, 0xEC,
+0x00, 0x18, 0x7A, 0xCA, 0x06, 0x2A, 0x91, 0x67,
+0x00, 0x18, 0x9F, 0xEC, 0x91, 0x67, 0x00, 0x18,
+0x98, 0xEC, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x88, 0xF3, 0x63, 0xA2, 0xFF, 0x4B,
+0x88, 0xF3, 0x63, 0xC2, 0x2B, 0x10, 0x68, 0xF3,
+0x75, 0xA0, 0x0F, 0x6A, 0x6C, 0xEA, 0x01, 0x72,
+0x25, 0x61, 0x88, 0xF3, 0x43, 0xA0, 0x04, 0xD2,
+0x04, 0x93, 0x88, 0xF3, 0x42, 0xA0, 0x6E, 0xEA,
+0x1D, 0x22, 0x91, 0x67, 0x00, 0x18, 0x2C, 0xED,
+0x04, 0x95, 0xAE, 0xEA, 0x17, 0x22, 0x68, 0xF3,
+0x79, 0xA0, 0x20, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x10, 0x22, 0x68, 0xF3, 0x7A, 0xA0,
+0x11, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3,
+0x5A, 0xC0, 0x91, 0x67, 0x00, 0x18, 0x8E, 0xEC,
+0x91, 0x67, 0x00, 0x18, 0x79, 0xEC, 0x91, 0x67,
+0x00, 0x18, 0x72, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
+0x01, 0x6B, 0xE8, 0xF3, 0x62, 0xC2, 0x20, 0x6B,
+0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2, 0x02, 0x6A,
+0x4C, 0xEB, 0x08, 0x23, 0x30, 0xF0, 0x21, 0x6B,
+0x70, 0xF3, 0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x0A, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
+0x20, 0x6B, 0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xED, 0x4C, 0xEC, 0xCC, 0xEA,
+0xA0, 0xF0, 0x1D, 0x25, 0x05, 0x5C, 0xA0, 0xF0,
+0x10, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x88, 0x34,
+0xDB, 0xF5, 0x1C, 0x4B, 0x8D, 0xE3, 0x60, 0x9B,
+0x00, 0xEB, 0x02, 0x72, 0x0A, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0xA0, 0x9A, 0x01, 0x6C,
+0x00, 0x18, 0x17, 0xE1, 0x00, 0x6C, 0x08, 0x6D,
+0x1D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
+0xA4, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x17, 0xE1,
+0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0x17, 0xE1,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A,
+0x01, 0x6C, 0x0C, 0x6D, 0x89, 0x10, 0x02, 0x72,
+0x0C, 0x60, 0x04, 0x6C, 0x0F, 0x6D, 0x00, 0x18,
+0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0xB0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1,
+0x7C, 0x10, 0x04, 0x6C, 0x03, 0x6D, 0x00, 0x18,
+0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0xB0, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1,
+0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xDC, 0xF3,
+0xA8, 0x9B, 0x66, 0x10, 0x02, 0x72, 0x0A, 0x60,
+0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0x17, 0xE1,
+0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C, 0x5C, 0xF3,
+0xB4, 0x9A, 0xDC, 0x17, 0x04, 0x6C, 0x30, 0x6D,
+0x00, 0x18, 0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0xB4, 0x9A, 0x04, 0x6C, 0x00, 0x18,
+0x17, 0xE1, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
+0x24, 0x6B, 0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C,
+0xDC, 0xF3, 0xAC, 0x9B, 0x45, 0x10, 0x02, 0x72,
+0x0B, 0x60, 0x04, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
+0x00, 0x18, 0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x6C, 0x5C, 0xF3, 0xB8, 0x9A, 0xBA, 0x17,
+0x04, 0x6C, 0x00, 0xF3, 0x00, 0x6D, 0x00, 0x18,
+0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0xB8, 0x9A, 0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1,
+0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0x4E, 0xF2, 0x54, 0x9A, 0x02, 0x6C, 0xDC, 0xF3,
+0xB0, 0x9B, 0x22, 0x10, 0x02, 0x72, 0x0B, 0x60,
+0x04, 0x6C, 0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18,
+0x17, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x04, 0x6C,
+0x5C, 0xF3, 0xBC, 0x9A, 0x97, 0x17, 0x04, 0x6C,
+0x06, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0x17, 0xE1,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xBC, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0x17, 0xE1, 0x30, 0xF0,
+0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0x4E, 0xF2,
+0x54, 0x9A, 0x1C, 0xF3, 0xB4, 0x9B, 0x02, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x74, 0x9A, 0xFF, 0x6C, 0x07, 0x6D, 0x40, 0xA3,
+0x8C, 0xEA, 0xAD, 0xEA, 0x65, 0x10, 0x05, 0x5C,
+0x5D, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34,
+0xFB, 0xF5, 0x10, 0x4A, 0x89, 0xE2, 0x40, 0x9A,
+0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
+0xA0, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x48, 0xE1,
+0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0x48, 0xE1,
+0x01, 0x6C, 0x0C, 0x6D, 0x45, 0x10, 0x04, 0x6C,
+0x0F, 0x6D, 0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF3, 0xB0, 0x9A, 0x04, 0x6C,
+0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x02, 0x6C, 0xDC, 0xF3, 0xA8, 0x9A, 0x34, 0x10,
+0x04, 0x6C, 0xF0, 0x6D, 0x00, 0x18, 0x48, 0xE1,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xB4, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0,
+0x24, 0x6A, 0x02, 0x6C, 0xDC, 0xF3, 0xAC, 0x9A,
+0x23, 0x10, 0x04, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
+0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0xB8, 0x9A, 0x04, 0x6C, 0x00, 0x18,
+0x48, 0xE1, 0x10, 0xF0, 0x24, 0x6A, 0x02, 0x6C,
+0xDC, 0xF3, 0xB0, 0x9A, 0x11, 0x10, 0x04, 0x6C,
+0x1E, 0xF0, 0x00, 0x6D, 0x00, 0x18, 0x48, 0xE1,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xBC, 0x9A,
+0x04, 0x6C, 0x00, 0x18, 0x48, 0xE1, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF3, 0xB4, 0x9A, 0x02, 0x6C,
+0x00, 0x18, 0x98, 0xE1, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x74, 0x9A, 0xF8, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x54, 0xA0,
+0x7F, 0x6E, 0xFF, 0x69, 0x4C, 0xEE, 0x2C, 0xEC,
+0x01, 0x6D, 0x2C, 0xEE, 0x04, 0xD4, 0x00, 0x18,
+0xE9, 0xCF, 0x88, 0xF3, 0x6A, 0xA8, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF3, 0x58, 0x9A, 0x2C, 0xEB,
+0x60, 0xC2, 0xC8, 0xF3, 0x99, 0xA0, 0x80, 0x6A,
+0x4B, 0xEA, 0x1F, 0x6B, 0x8C, 0xEA, 0x8C, 0xEB,
+0x2C, 0xEA, 0x2C, 0xEB, 0x11, 0x22, 0x6F, 0x32,
+0x2C, 0xEA, 0x82, 0x42, 0x01, 0x4A, 0xC8, 0xF3,
+0x5D, 0xC0, 0x07, 0x6A, 0x6C, 0xEA, 0x68, 0xF3,
+0x77, 0xA0, 0xC8, 0xF3, 0x9C, 0xC0, 0x76, 0x33,
+0x6C, 0x33, 0x6D, 0xEA, 0x2C, 0xEA, 0x06, 0x10,
+0x04, 0x6B, 0xC8, 0xF3, 0x7C, 0xC0, 0x03, 0x6B,
+0xC8, 0xF3, 0x7D, 0xC0, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF3, 0x74, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3, 0x40, 0xEA,
+0x01, 0x72, 0x19, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
+0x21, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
+0x79, 0xC2, 0x68, 0xF3, 0x5C, 0xA2, 0x04, 0x6B,
+0x6C, 0xEA, 0x13, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x96, 0x83, 0x67,
+0x01, 0x6D, 0x40, 0xEA, 0x0A, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
+0x99, 0xA2, 0x20, 0x6B, 0x8D, 0xEB, 0x68, 0xF3,
+0x79, 0xC2, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x54, 0xA0,
+0x7F, 0x6E, 0xFF, 0x69, 0x4C, 0xEE, 0x2C, 0xEC,
+0x01, 0x6D, 0x2C, 0xEE, 0x04, 0xD4, 0x00, 0x18,
+0xE9, 0xCF, 0x88, 0xF3, 0x6A, 0xA8, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF3, 0x58, 0x9A, 0x2C, 0xEB,
+0x60, 0xC2, 0xC8, 0xF3, 0x99, 0xA0, 0x80, 0x6A,
+0x4B, 0xEA, 0x1F, 0x6B, 0x8C, 0xEA, 0x8C, 0xEB,
+0x2C, 0xEA, 0x2C, 0xEB, 0x11, 0x22, 0x6F, 0x32,
+0x2C, 0xEA, 0x82, 0x42, 0x01, 0x4A, 0xC8, 0xF3,
+0x5D, 0xC0, 0x07, 0x6A, 0x6C, 0xEA, 0x68, 0xF3,
+0x77, 0xA0, 0xC8, 0xF3, 0x9C, 0xC0, 0x76, 0x33,
+0x6C, 0x33, 0x6D, 0xEA, 0x2C, 0xEA, 0x06, 0x10,
+0x04, 0x6B, 0xC8, 0xF3, 0x7C, 0xC0, 0x03, 0x6B,
+0xC8, 0xF3, 0x7D, 0xC0, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF3, 0x74, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3, 0x40, 0xEA,
+0x01, 0x72, 0x19, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
+0x21, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
+0x79, 0xC2, 0x68, 0xF3, 0x5C, 0xA2, 0x04, 0x6B,
+0x6C, 0xEA, 0x13, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x96, 0x83, 0x67,
+0x01, 0x6D, 0x40, 0xEA, 0x0A, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
+0x99, 0xA2, 0x20, 0x6B, 0x8D, 0xEB, 0x68, 0xF3,
+0x79, 0xC2, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
+0x25, 0x67, 0x04, 0xD4, 0x4C, 0xE9, 0x5D, 0x2C,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x68, 0xF3, 0x74, 0xA0, 0x7F, 0x6E, 0x91, 0x67,
+0x6C, 0xEE, 0x4C, 0xEE, 0x00, 0x6D, 0x00, 0x18,
+0xE9, 0xCF, 0x7D, 0x67, 0x87, 0x43, 0x09, 0x4C,
+0x10, 0xF0, 0x24, 0x6A, 0x60, 0xA4, 0xBC, 0xF3,
+0x5C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0x48, 0x9A, 0x02, 0x6B, 0x60, 0xDA,
+0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3,
+0x40, 0xEA, 0x10, 0x2A, 0x00, 0x18, 0x6F, 0xED,
+0x91, 0x67, 0x00, 0x18, 0x3F, 0xCD, 0x68, 0xF3,
+0x7A, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x03, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x68, 0xF3,
+0x5A, 0xC0, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x0C, 0x6C, 0x01, 0x6D,
+0xD1, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2,
+0x05, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
+0x79, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x68, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x1C, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x44, 0x9A,
+0x00, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0x48, 0x9A, 0x04, 0x6B, 0x60, 0xC2,
+0x0F, 0x10, 0x04, 0x94, 0x01, 0x74, 0x06, 0x61,
+0x91, 0x67, 0x00, 0x18, 0xBB, 0xD0, 0x80, 0x18,
+0x76, 0x13, 0x06, 0x10, 0x04, 0x92, 0x02, 0x72,
+0x03, 0x61, 0x91, 0x67, 0x00, 0x18, 0x81, 0xD0,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x69, 0x2C, 0xED,
+0x30, 0xF0, 0x20, 0x68, 0x0A, 0xD4, 0xC0, 0xF1,
+0x08, 0x48, 0x85, 0x67, 0x04, 0xD5, 0x00, 0x18,
+0x02, 0xCC, 0x68, 0xF3, 0x94, 0xA0, 0x7F, 0x6A,
+0x04, 0x95, 0x4C, 0xEC, 0x2C, 0xEC, 0x00, 0x18,
+0xF5, 0xD0, 0x68, 0xF3, 0x54, 0xA0, 0x7F, 0x6B,
+0x6C, 0xEA, 0x2C, 0xEA, 0x18, 0x22, 0x0A, 0x93,
+0x0F, 0x6C, 0x41, 0xA3, 0xA2, 0xA3, 0x4C, 0xEC,
+0x2C, 0xEC, 0x00, 0x18, 0x17, 0xC9, 0x28, 0xF1,
+0x54, 0xA0, 0x03, 0x72, 0x0C, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0x78, 0x9A, 0x40, 0xA3,
+0x4C, 0xE9, 0x02, 0x6A, 0x2C, 0xEA, 0x03, 0x22,
+0xFD, 0x6A, 0x2C, 0xEA, 0x40, 0xC3, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFF, 0x6A, 0x4C, 0xEC, 0xAC, 0xEA, 0x0B, 0x2A,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3, 0xBC, 0x9B,
+0x10, 0xF0, 0x24, 0x6E, 0xFC, 0xF3, 0xC0, 0x9E,
+0x60, 0x9D, 0xCC, 0xEB, 0x0C, 0x10, 0x01, 0x72,
+0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3,
+0xBC, 0x9B, 0x10, 0xF0, 0x24, 0x6E, 0xFC, 0xF3,
+0xC4, 0x9E, 0x60, 0x9D, 0xCD, 0xEB, 0x60, 0xDD,
+0x05, 0x5C, 0x60, 0xF1, 0x06, 0x60, 0x10, 0xF0,
+0x24, 0x6B, 0x88, 0x34, 0x1B, 0xF6, 0x10, 0x4B,
+0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x05, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x7C, 0x9A,
+0x0D, 0x11, 0x01, 0x72, 0x10, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0x7C, 0x9A, 0xFF, 0x6C,
+0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0x8C, 0xEA, 0x40, 0xC3, 0x40, 0xA3, 0x80, 0x4D,
+0xC0, 0x4D, 0x8C, 0xEA, 0x14, 0x10, 0x02, 0x72,
+0x07, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
+0x7C, 0x9A, 0xBF, 0x6A, 0x80, 0xA3, 0xF4, 0x10,
+0x03, 0x72, 0x20, 0xF1, 0x1A, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0x7C, 0x9A, 0xFF, 0x6C,
+0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0xE7, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x68, 0x9A, 0xFD, 0x6A, 0x80, 0xA3,
+0xDF, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0x9C, 0x9A, 0xFF, 0x6A,
+0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF3, 0x88, 0x9B, 0x01, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x60, 0xA4, 0x02, 0x6D, 0x4C, 0xEB, 0xE1, 0x10,
+0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF3, 0x7C, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x68, 0x9A, 0xFE, 0x6A, 0x80, 0xA3,
+0xB3, 0x10, 0x03, 0x72, 0xE0, 0xF0, 0x19, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x9C, 0x9A,
+0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF3, 0x88, 0x9A, 0x01, 0x6D,
+0x40, 0xA4, 0x6C, 0xEA, 0x92, 0x10, 0x07, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x68, 0x9A,
+0xF7, 0x6A, 0x80, 0xA3, 0x95, 0x10, 0x01, 0x72,
+0x19, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
+0x9C, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x88, 0x9B,
+0x04, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4, 0x08, 0x6D,
+0x4C, 0xEB, 0x97, 0x10, 0x02, 0x72, 0x0F, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x7C, 0x9A,
+0xBF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x68, 0x9A,
+0xFB, 0x6A, 0x80, 0xA3, 0x69, 0x10, 0x03, 0x72,
+0xA0, 0xF0, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF3, 0x9C, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
+0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3,
+0x88, 0x9A, 0x04, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0x48, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x68, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
+0x4B, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0x9C, 0x9A, 0xFF, 0x6A,
+0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF3, 0x88, 0x9B, 0x10, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x60, 0xA4, 0x20, 0x6D, 0x4C, 0xEB, 0x4D, 0x10,
+0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF3, 0x7C, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x68, 0x9A, 0xEF, 0x6A, 0x80, 0xA3,
+0x1F, 0x10, 0x03, 0x72, 0x66, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0x9C, 0x9A, 0xFF, 0x6B,
+0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
+0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x88, 0x9A, 0x10, 0x6D, 0x40, 0xA4,
+0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
+0x20, 0xE8, 0x09, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x68, 0x9A, 0x80, 0xA3, 0x7F, 0x6A,
+0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x01, 0x72,
+0x1C, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
+0x9C, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x88, 0x9B,
+0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB,
+0x60, 0xC4, 0x60, 0xA4, 0x80, 0x4D, 0xC0, 0x4D,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x20, 0xE8, 0x02, 0x72, 0x10, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF3, 0x5C, 0x9A, 0xBF, 0x6B,
+0x80, 0xA2, 0x6C, 0xEC, 0x80, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF3, 0x48, 0x9A, 0x80, 0xA2,
+0x8C, 0xEB, 0x60, 0xC2, 0x20, 0xE8, 0x03, 0x72,
+0x14, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3,
+0x9C, 0x9A, 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4,
+0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF3, 0x88, 0x9A,
+0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x6C, 0x9B,
+0xFF, 0x6A, 0x4C, 0xEC, 0x6D, 0xE5, 0x00, 0xA3,
+0x3F, 0x6F, 0x01, 0x74, 0x0C, 0xEF, 0x4C, 0xEE,
+0xE0, 0xC3, 0x10, 0x61, 0x10, 0xF0, 0x24, 0x6C,
+0xFC, 0xF3, 0xF0, 0x9C, 0x10, 0x68, 0xFD, 0xE5,
+0x80, 0xA7, 0x4C, 0xEC, 0x0D, 0xEC, 0x4C, 0xEC,
+0x80, 0xC7, 0x80, 0xA3, 0x80, 0x6F, 0xEB, 0xEF,
+0x4C, 0xEC, 0x0D, 0x10, 0x0F, 0x2C, 0x10, 0xF0,
+0x24, 0x6C, 0xFC, 0xF3, 0xF0, 0x9C, 0xEF, 0x6C,
+0xFD, 0xE5, 0x00, 0xA7, 0x0C, 0xEC, 0x80, 0xC7,
+0x80, 0xA3, 0x40, 0x6F, 0x4C, 0xEC, 0xED, 0xEC,
+0x4C, 0xEC, 0x80, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x54, 0x9A, 0x80, 0xF4, 0xC0, 0x36,
+0x55, 0xE5, 0x40, 0x9D, 0x4D, 0xEE, 0xC0, 0xDD,
+0x01, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF3, 0x58, 0x9A, 0xFF, 0x6B, 0x40, 0xA2,
+0x6C, 0xEA, 0x52, 0x32, 0x6C, 0xEA, 0x11, 0x2A,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x5C, 0x9A, 0xA8, 0xF4, 0x86, 0xA3,
+0x00, 0x6D, 0x18, 0x6E, 0xE5, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x28, 0xF1, 0x70, 0xA0, 0xFF, 0x6A, 0x4C, 0xED,
+0x01, 0x4B, 0x28, 0xF1, 0x70, 0xC0, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF3, 0x78, 0x9B, 0x04, 0xD5,
+0x24, 0x67, 0x60, 0xA3, 0x4C, 0xE9, 0x4C, 0xEB,
+0x72, 0x33, 0x4C, 0xEB, 0x31, 0x23, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF3, 0x6C, 0x9B, 0x00, 0x6C,
+0xFF, 0x6D, 0x60, 0xA3, 0x29, 0x6E, 0x6C, 0xEA,
+0x05, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x72,
+0x12, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF2,
+0x80, 0xA0, 0x6E, 0xF2, 0x5C, 0x9A, 0x01, 0x6D,
+0x08, 0x6E, 0x00, 0x6F, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0x2E, 0xF4, 0x6C, 0x9B, 0x04, 0x96,
+0x91, 0x67, 0xA2, 0x67, 0x40, 0xEB, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x05, 0x95,
+0x00, 0x6C, 0x2A, 0x6E, 0x40, 0xEA, 0x12, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xE8, 0xF2, 0x80, 0xA0,
+0x6E, 0xF2, 0x5C, 0x9A, 0x01, 0x6D, 0x08, 0x6E,
+0x00, 0x6F, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x2E, 0xF4, 0x6C, 0x9B, 0x04, 0x96, 0x91, 0x67,
+0xA2, 0x67, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF2, 0x5C, 0x9A, 0x40, 0xEA, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFF, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA, 0xFF, 0x6B,
+0xA2, 0x67, 0x42, 0x32, 0x6C, 0xED, 0x6C, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x7C, 0x9B,
+0x6D, 0xE4, 0xA0, 0xC3, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF4, 0x60, 0x9B, 0x71, 0xE4, 0x40, 0xC4,
+0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0xFF, 0xF7, 0x1F, 0x68, 0xFC, 0xF3, 0x78, 0x9B,
+0x0C, 0xED, 0x04, 0xD5, 0x60, 0xA3, 0xFF, 0x6A,
+0x24, 0x67, 0x4C, 0xE9, 0x2D, 0x23, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF3, 0x6C, 0x9B, 0x00, 0x6C,
+0xFF, 0x6D, 0x60, 0xA3, 0x36, 0x6E, 0x6C, 0xEA,
+0x05, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x72,
+0x0E, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x5C, 0x9A, 0x00, 0x6E, 0x91, 0x67, 0x01, 0x6D,
+0xE6, 0x67, 0x40, 0xEA, 0x04, 0x95, 0x82, 0x67,
+0x0C, 0xEC, 0x00, 0x18, 0x76, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x05, 0x95,
+0x00, 0x6C, 0x37, 0x6E, 0x40, 0xEA, 0x0E, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x5C, 0x9A,
+0x00, 0x6E, 0x91, 0x67, 0x01, 0x6D, 0xE6, 0x67,
+0x40, 0xEA, 0x04, 0x95, 0x82, 0x67, 0x0C, 0xEC,
+0x00, 0x18, 0x76, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0x4C, 0x9A, 0x6F, 0x6D, 0x90, 0x6C,
+0x60, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x6C, 0xED, 0x38, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
+0x40, 0xEA, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x6A, 0x64, 0x67, 0x4C, 0xEB,
+0x85, 0x67, 0x02, 0x5B, 0x4C, 0xEC, 0x43, 0x60,
+0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF4, 0xA4, 0x9D,
+0xFF, 0xF7, 0x1F, 0x6E, 0x30, 0xF0, 0x20, 0x68,
+0xE0, 0xAD, 0x10, 0xF0, 0x24, 0x6D, 0x1C, 0xF4,
+0xA8, 0x9D, 0xCC, 0xEF, 0xC0, 0xF1, 0x08, 0x48,
+0xA0, 0xAD, 0xAC, 0xEE, 0xD7, 0xE7, 0xC8, 0xF2,
+0xDF, 0xA0, 0x4C, 0xED, 0xCE, 0xED, 0x2B, 0x2D,
+0x68, 0xF3, 0x5C, 0xA0, 0x0E, 0x72, 0x0F, 0x61,
+0x26, 0x2B, 0x68, 0xF3, 0x7A, 0xA0, 0x03, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0,
+0x00, 0x18, 0x50, 0xD1, 0x01, 0x6C, 0x0C, 0x6D,
+0x00, 0x18, 0xE5, 0xC8, 0x10, 0x10, 0x06, 0x72,
+0x16, 0x61, 0x15, 0x23, 0x68, 0xF3, 0x7A, 0xA0,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x01, 0x6D,
+0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18, 0x50, 0xD1,
+0x04, 0x6A, 0x68, 0xF3, 0x5C, 0xC0, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6D,
+0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x6A, 0xFC, 0xF3,
+0x78, 0x9B, 0x4C, 0xEE, 0x4C, 0xEF, 0x05, 0xD6,
+0x04, 0xD7, 0x60, 0xA3, 0xFF, 0xF7, 0x1F, 0x68,
+0x25, 0x67, 0x4C, 0xEB, 0x72, 0x33, 0x4C, 0xEB,
+0x8C, 0xE8, 0x4C, 0xE9, 0x34, 0x23, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF3, 0x6C, 0x9B, 0x00, 0x6C,
+0xFF, 0x6D, 0x60, 0xA3, 0x26, 0x6E, 0x6C, 0xEA,
+0x06, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x72,
+0x11, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x05, 0x96,
+0x6E, 0xF2, 0x5C, 0x9A, 0x90, 0x67, 0x01, 0x6D,
+0x00, 0x6F, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x2E, 0xF4, 0x6C, 0x9B, 0x04, 0x96, 0x91, 0x67,
+0xA2, 0x67, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
+0x06, 0x95, 0x6E, 0xF2, 0x58, 0x9A, 0x00, 0x6C,
+0x27, 0x6E, 0x40, 0xEA, 0x04, 0x95, 0x91, 0x67,
+0x00, 0x18, 0xB3, 0xD2, 0x15, 0x10, 0x04, 0x95,
+0x91, 0x67, 0x00, 0x18, 0xB3, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x05, 0x96, 0x6E, 0xF2, 0x5C, 0x9A,
+0x90, 0x67, 0x01, 0x6D, 0x00, 0x6F, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x6C, 0x9B,
+0x04, 0x96, 0x91, 0x67, 0xA2, 0x67, 0x40, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
+0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF4, 0x50, 0x9A, 0xFF, 0x6B, 0x80, 0xA2,
+0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6, 0x83, 0x34,
+0x00, 0x54, 0x24, 0x60, 0xA0, 0xA2, 0x7F, 0x6C,
+0xAC, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0x40, 0x6D,
+0x6C, 0xEC, 0xAD, 0xEC, 0x6C, 0xEC, 0x80, 0xC2,
+0x80, 0xA2, 0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF3,
+0x80, 0x9C, 0x3F, 0x6D, 0x80, 0xA4, 0x10, 0xF0,
+0x24, 0x6C, 0x3C, 0xF3, 0x84, 0x9C, 0x80, 0xA4,
+0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF4, 0x94, 0x9C,
+0x80, 0xA4, 0x80, 0xA2, 0x6C, 0xEC, 0xAD, 0xEC,
+0x6C, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0xBF, 0x6B,
+0x8C, 0xEB, 0x60, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF4, 0x78, 0x9B,
+0xFF, 0x6A, 0x4C, 0xEC, 0xC0, 0xA3, 0x4C, 0xED,
+0x0C, 0x26, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF4,
+0x9C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x20, 0xE8, 0x80, 0xC3, 0x0B, 0x25, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF4, 0x80, 0x9B, 0x80, 0x6D,
+0xAB, 0xED, 0x60, 0xA4, 0x4C, 0xEB, 0xAE, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x20, 0xE8, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0xF7, 0x1F, 0x6A, 0x0E, 0x90, 0x24, 0x67,
+0x4C, 0xE9, 0x03, 0x6B, 0x4C, 0xEF, 0x2C, 0xEB,
+0x00, 0x6A, 0x0B, 0xD5, 0x0C, 0xD6, 0x04, 0xD7,
+0x40, 0xC8, 0x00, 0x6A, 0x0A, 0x23, 0x28, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
+0x0A, 0x6C, 0x40, 0xEA, 0x40, 0xA8, 0x01, 0x4A,
+0x40, 0xC8, 0x1F, 0xF7, 0x00, 0x6A, 0x2C, 0xEA,
+0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x44, 0x9A, 0x49, 0xE1, 0x0B, 0x93, 0x40, 0x9A,
+0x6C, 0xEA, 0x0C, 0x93, 0x6E, 0xEA, 0x04, 0x22,
+0x40, 0xA8, 0x04, 0x93, 0x63, 0xEA, 0xDC, 0x61,
+0x40, 0xA8, 0x04, 0x93, 0x63, 0xEA, 0x58, 0x67,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF4, 0x64, 0x9B, 0xFF, 0x6A, 0xCC, 0xEA,
+0x6D, 0xEA, 0xE0, 0xF1, 0x1F, 0x6B, 0xAC, 0xEB,
+0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF4, 0x88, 0x9C,
+0x60, 0x33, 0x60, 0x33, 0x6D, 0xEA, 0x40, 0xDC,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x50, 0x9A,
+0x6D, 0xEA, 0x40, 0xDC, 0x20, 0xE8, 0x00, 0x65,
+0xE0, 0xF1, 0x1F, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF3, 0x70, 0x9B, 0xAC, 0xEA, 0x40, 0x32,
+0x40, 0x32, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF4, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF4, 0x4C, 0x9A, 0xFF, 0x6B,
+0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x01, 0x68, 0x04, 0xEC, 0x04, 0xF7, 0x10, 0x69,
+0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x01, 0x6C, 0xFF, 0x49, 0x40, 0xEA,
+0x0B, 0x29, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x6C, 0x9A, 0x08, 0xF0, 0x00, 0x6C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x0B, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4, 0x50, 0x9A,
+0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
+0x0C, 0xEA, 0xE3, 0x2A, 0x01, 0x6A, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x0E, 0x92, 0x04, 0x67, 0x0F, 0x91, 0x04, 0xD2,
+0x04, 0x93, 0xFF, 0x6A, 0x4C, 0xE8, 0x4C, 0xEB,
+0x90, 0x67, 0x0B, 0xD5, 0x0C, 0xD6, 0x0D, 0xD7,
+0x04, 0xD3, 0x4C, 0xE9, 0x00, 0x18, 0x76, 0xD3,
+0x80, 0xF0, 0x07, 0x22, 0x06, 0x58, 0x80, 0xF0,
+0x04, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x08, 0x30,
+0x3B, 0xF6, 0x18, 0x4A, 0x09, 0xE2, 0x40, 0x9A,
+0x00, 0xEA, 0x02, 0xF2, 0x10, 0x6A, 0x0E, 0x10,
+0x02, 0xF2, 0x00, 0x6A, 0x0B, 0x10, 0x22, 0xF2,
+0x00, 0x6A, 0x08, 0x10, 0x22, 0xF2, 0x10, 0x6A,
+0x05, 0x10, 0x42, 0xF2, 0x00, 0x6A, 0x02, 0x10,
+0x42, 0xF2, 0x10, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0x0D, 0x94, 0x5C, 0xF4, 0x74, 0x9B, 0x8C, 0xEB,
+0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF4, 0x98, 0x9C,
+0x8D, 0xEB, 0x06, 0x21, 0x10, 0xF0, 0x24, 0x6C,
+0x5C, 0xF4, 0x9C, 0x9C, 0x6D, 0xEC, 0x05, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4, 0x80, 0x9C,
+0x6C, 0xEC, 0x04, 0x96, 0x06, 0x26, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF3, 0x70, 0x9B, 0x8D, 0xEB,
+0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF4,
+0x64, 0x9B, 0x8C, 0xEB, 0x1F, 0xF7, 0x00, 0x6C,
+0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60,
+0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2,
+0xA0, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
+0xFC, 0xF2, 0xA4, 0x9C, 0x10, 0xF0, 0x24, 0x6C,
+0x0B, 0x96, 0x7C, 0xF4, 0x88, 0x9C, 0xB5, 0xE2,
+0xCC, 0xEC, 0x80, 0xDD, 0x84, 0x42, 0x1F, 0xF7,
+0x00, 0x6D, 0xAC, 0xEC, 0x02, 0xF0, 0x00, 0x74,
+0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C,
+0x7C, 0xF4, 0xAC, 0x9C, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0x7C, 0xF4, 0xB0, 0x9C, 0x10, 0xF0,
+0x24, 0x6C, 0x0C, 0x96, 0x7C, 0xF4, 0x88, 0x9C,
+0xB5, 0xE2, 0xCC, 0xEC, 0x80, 0xDD, 0x87, 0x42,
+0x01, 0x4C, 0x1F, 0xF7, 0x00, 0x6D, 0xAC, 0xEC,
+0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C,
+0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4, 0x94, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4,
+0x98, 0x9C, 0x89, 0xE2, 0x60, 0xDA, 0x01, 0x6A,
+0x01, 0x10, 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x04, 0xF7,
+0x10, 0x68, 0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x05, 0x6C, 0xFF, 0x48,
+0x40, 0xEA, 0x0B, 0x28, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x6C, 0x9A, 0x08, 0xF0, 0x00, 0x6C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A,
+0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4,
+0x50, 0x9A, 0x60, 0xAA, 0x3F, 0x6A, 0x6C, 0xEA,
+0xE5, 0x2A, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF4, 0x50, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4, 0x50, 0x9A,
+0x40, 0xAA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF2,
+0x90, 0x9C, 0x10, 0xF0, 0x23, 0x6B, 0xC9, 0xF7,
+0x1D, 0x4B, 0x0A, 0x72, 0x60, 0xDC, 0x0C, 0x61,
+0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF7, 0x54, 0x9A, 0xF0, 0xF4, 0x84, 0x9B,
+0x01, 0x6D, 0xAB, 0xED, 0x40, 0xEA, 0x00, 0x6A,
+0x10, 0xF0, 0x24, 0x6C, 0xFF, 0x6B, 0x01, 0x4A,
+0xBC, 0xF2, 0x90, 0x9C, 0x6C, 0xEA, 0x10, 0xF0,
+0x23, 0x6B, 0xC9, 0xF7, 0x1E, 0x4B, 0x60, 0xDC,
+0xDC, 0x17, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x00, 0x6A, 0x04, 0xD2,
+0x04, 0x92, 0x01, 0x72, 0x58, 0x67, 0x04, 0xD2,
+0x10, 0xF0, 0x23, 0x6A, 0x78, 0x67, 0x2A, 0xF0,
+0x0D, 0x4A, 0x69, 0xE2, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x70, 0x9B, 0x40, 0xDB, 0x00, 0x1C,
+0x96, 0x45, 0x00, 0x18, 0x11, 0xD3, 0x00, 0x1C,
+0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
+0x8C, 0x9A, 0x02, 0x6B, 0x8C, 0xEB, 0x09, 0x23,
+0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x00, 0x18, 0x4F, 0xDD, 0x00, 0x18,
+0xB1, 0xDD, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
+0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0x04, 0x6B,
+0x8C, 0xEB, 0x09, 0x23, 0x05, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18,
+0x7C, 0xD9, 0x00, 0x18, 0xC5, 0xD8, 0x00, 0x1C,
+0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3,
+0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB, 0x0D, 0x23,
+0x68, 0xF3, 0x98, 0xA2, 0x68, 0xF3, 0x7C, 0xA2,
+0x8E, 0xEB, 0x07, 0x23, 0x68, 0xF3, 0x97, 0xA2,
+0xFF, 0x6A, 0x96, 0x34, 0x4C, 0xEC, 0x00, 0x18,
+0x7A, 0xCC, 0x30, 0xF0, 0x20, 0x6A, 0x40, 0xF2,
+0x54, 0x9A, 0x02, 0x2A, 0x00, 0x18, 0x0F, 0xCE,
+0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x8C, 0x9A, 0x10, 0x6B, 0x8C, 0xEB,
+0x0C, 0x23, 0x11, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF6, 0x4B, 0xA2, 0x02, 0x2A, 0x80, 0x18,
+0xE1, 0x1F, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
+0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A, 0xFF, 0x6B,
+0x01, 0x4B, 0x8C, 0xEB, 0x08, 0x23, 0xFF, 0x6B,
+0x02, 0x4B, 0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x00, 0x18, 0x8F, 0xD7, 0x00, 0x1C,
+0x95, 0x45, 0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
+0x8C, 0x9A, 0x02, 0xF0, 0x00, 0x6B, 0x8C, 0xEB,
+0x08, 0x23, 0x02, 0xF0, 0x01, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18,
+0xAD, 0xEA, 0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C,
+0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3,
+0x74, 0x9B, 0x80, 0xF0, 0x8C, 0x9A, 0x8C, 0xEB,
+0x20, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF4,
+0x64, 0x9B, 0x8C, 0xEB, 0x68, 0xF3, 0x94, 0xA2,
+0x80, 0xF0, 0x6C, 0xDA, 0x7F, 0x6B, 0x8C, 0xEB,
+0x07, 0x2B, 0x68, 0xF3, 0x5C, 0xA2, 0x0C, 0x72,
+0x03, 0x61, 0x00, 0x18, 0xE4, 0xDA, 0x0D, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x10, 0xF0, 0x24, 0x6C, 0x80, 0xF0, 0x6C, 0x9A,
+0x5C, 0xF3, 0x94, 0x9C, 0x8D, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x00, 0x1C, 0x95, 0x45, 0x30, 0xF0,
+0x20, 0x6A, 0xCC, 0xF1, 0x53, 0xA2, 0x0F, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x48, 0x9A,
+0x01, 0x6B, 0x80, 0xA2, 0x8C, 0xEB, 0x07, 0x23,
+0x80, 0xA2, 0xFE, 0x6B, 0x8C, 0xEB, 0x60, 0xC2,
+0x03, 0x6C, 0x00, 0x18, 0x88, 0xDE, 0x30, 0xF0,
+0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49, 0x00, 0xF2,
+0x04, 0xA1, 0x01, 0x6A, 0x4E, 0xE8, 0x05, 0x28,
+0x0B, 0x6C, 0x00, 0x18, 0x88, 0xDE, 0x00, 0xF2,
+0x04, 0xC1, 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0xF0, 0xF4, 0x84, 0x9B, 0xEE, 0xF7,
+0x58, 0x9A, 0x40, 0xEA, 0xFD, 0x16, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x6C, 0x9A,
+0xDF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF4, 0xAC, 0x9B, 0xFF, 0x6A, 0x20, 0x6E,
+0x60, 0xA5, 0x4C, 0xEC, 0x4C, 0xEB, 0xCD, 0xEB,
+0x4C, 0xEB, 0x07, 0xF7, 0x01, 0x4A, 0x4D, 0xEC,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x50, 0x9A,
+0x60, 0xC5, 0x80, 0xCA, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x50, 0x9A,
+0x68, 0xF0, 0x04, 0x6B, 0x60, 0xCA, 0x20, 0xE8,
+0x03, 0x6F, 0x8C, 0xEF, 0x64, 0x67, 0x46, 0x67,
+0x04, 0x27, 0x07, 0x10, 0xA0, 0xDB, 0xFC, 0x4A,
+0x04, 0x4B, 0x04, 0x5A, 0xFB, 0x60, 0x03, 0x6A,
+0x4C, 0xEE, 0x04, 0x26, 0xA0, 0xC4, 0xFF, 0x4E,
+0x01, 0x4C, 0xFB, 0x17, 0x00, 0x6A, 0x20, 0xE8,
+0xFF, 0x6A, 0xAC, 0xEA, 0x03, 0x10, 0x40, 0xC4,
+0xFF, 0x4E, 0x01, 0x4C, 0xFC, 0x2E, 0x00, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0x00, 0x6A, 0x07, 0x26,
+0x5D, 0xE5, 0xE0, 0xA7, 0x4D, 0xE4, 0xFF, 0x4E,
+0xE0, 0xC3, 0x01, 0x4A, 0xF8, 0x17, 0x00, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0x09, 0x10, 0x60, 0xA4,
+0x40, 0xA5, 0xFF, 0x4E, 0x4A, 0xEB, 0x02, 0x60,
+0x4B, 0xE3, 0x20, 0xE8, 0x01, 0x4C, 0x01, 0x4D,
+0xF6, 0x2E, 0x00, 0x6A, 0x20, 0xE8, 0x00, 0x65,
+0x06, 0x2C, 0x64, 0x6B, 0x30, 0xF0, 0x21, 0x6A,
+0xB0, 0xF3, 0x64, 0xDA, 0x04, 0x10, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x84, 0xDA, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x44, 0x9A, 0x28, 0x72,
+0x2D, 0x60, 0x29, 0x5A, 0x07, 0x60, 0x14, 0x72,
+0x19, 0x60, 0x19, 0x72, 0x1F, 0x60, 0x0A, 0x72,
+0x0D, 0x60, 0x20, 0xE8, 0x50, 0x72, 0x32, 0x60,
+0x51, 0x5A, 0x03, 0x60, 0x32, 0x72, 0x26, 0x60,
+0x20, 0xE8, 0x64, 0x72, 0x33, 0x60, 0xC8, 0x72,
+0x39, 0x60, 0x20, 0xE8, 0x02, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE0, 0xF7,
+0x1E, 0x4B, 0x39, 0x10, 0x03, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE1, 0xF3,
+0x1D, 0x4B, 0x31, 0x10, 0x09, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE4, 0xF3,
+0x17, 0x4B, 0x29, 0x10, 0x05, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE2, 0xF3,
+0x1B, 0x4B, 0x21, 0x10, 0x11, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE8, 0xF3,
+0x0F, 0x4B, 0x19, 0x10, 0x0A, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0xE4, 0xF7,
+0x16, 0x4B, 0x11, 0x10, 0x22, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0x11, 0xF0,
+0x00, 0x6B, 0x09, 0x10, 0x43, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x68, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF4, 0x74, 0x9A, 0x30, 0xF0,
+0x21, 0x6A, 0xB0, 0xF3, 0x6C, 0xDA, 0x20, 0xE8,
+0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3, 0x44, 0x9A,
+0x20, 0xE8, 0x00, 0x65, 0xFF, 0x63, 0x0C, 0x24,
+0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3, 0x4C, 0x9A,
+0x58, 0xEC, 0x12, 0xEC, 0x00, 0xD4, 0x00, 0x92,
+0xFF, 0x4A, 0x00, 0xD2, 0x00, 0x92, 0xFB, 0x2A,
+0x01, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x0D, 0x24,
+0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3, 0x48, 0x9A,
+0x58, 0xEC, 0x12, 0xEC, 0x00, 0xD4, 0x00, 0x92,
+0x04, 0x22, 0x00, 0x92, 0xFF, 0x4A, 0x00, 0xD2,
+0xFA, 0x17, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB9, 0xD4,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xED,
+0x00, 0x18, 0xAE, 0xD4, 0x05, 0x97, 0x00, 0x6A,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x6A, 0x04, 0x67, 0x4C, 0xEE,
+0x00, 0x18, 0xB3, 0xD4, 0x50, 0x67, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x05, 0xD2, 0x05, 0x93,
+0xFF, 0x68, 0x8C, 0xE8, 0xD0, 0xF7, 0x45, 0x40,
+0xC0, 0xF1, 0x08, 0x4B, 0x4C, 0x32, 0x69, 0xE2,
+0x4A, 0xA2, 0x01, 0x6C, 0x30, 0xF0, 0x20, 0x69,
+0x8C, 0xEA, 0x04, 0xD2, 0x0C, 0x32, 0x69, 0xE2,
+0xA7, 0xF6, 0xD3, 0xA2, 0xEF, 0xF4, 0x08, 0x49,
+0x29, 0xE0, 0x8C, 0xEE, 0xD0, 0x36, 0x07, 0xD6,
+0x60, 0xF6, 0xD4, 0xA2, 0x03, 0x6A, 0x05, 0xD3,
+0x4C, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x70, 0x9A, 0xC0, 0x36, 0x10, 0xF0, 0x24, 0x6A,
+0x06, 0xD6, 0x9C, 0xF4, 0xD8, 0x9A, 0x01, 0x6D,
+0xE3, 0xF2, 0x1F, 0x4C, 0xAB, 0xED, 0x40, 0xEB,
+0x06, 0x93, 0x07, 0x96, 0x30, 0xF0, 0x20, 0x6C,
+0xCE, 0xF4, 0x50, 0x9C, 0x6D, 0xEE, 0x04, 0x93,
+0xE3, 0xF3, 0x10, 0x6C, 0xFF, 0xF7, 0x1F, 0x6D,
+0x6D, 0xEE, 0x40, 0xEA, 0x05, 0x94, 0x30, 0xF3,
+0x40, 0x40, 0x10, 0x30, 0x01, 0xE4, 0x08, 0xF1,
+0xD0, 0x98, 0x44, 0x32, 0x29, 0xE2, 0x63, 0xAA,
+0x30, 0xF0, 0x20, 0x6C, 0x04, 0xD2, 0xC0, 0x36,
+0xCE, 0xF4, 0x50, 0x9C, 0xC0, 0x36, 0x01, 0x6D,
+0x6D, 0xEE, 0xE3, 0xF3, 0x08, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x04, 0x93, 0x43, 0xAB, 0x01, 0x72,
+0x04, 0x61, 0x01, 0x6C, 0x60, 0xF6, 0x97, 0xC1,
+0x03, 0x10, 0x00, 0x6A, 0x60, 0xF6, 0x57, 0xC1,
+0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
+0x0C, 0xD1, 0x0B, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
+0x04, 0xD2, 0x00, 0x69, 0x30, 0xF0, 0x20, 0x68,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF4, 0xD8, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x03, 0xF3,
+0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3, 0x0C, 0x6C,
+0xAB, 0xED, 0x07, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF3, 0x10, 0x4B, 0xC0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
+0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF3, 0x10, 0x4B, 0xC0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
+0x1C, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3, 0x0C, 0x6C,
+0xAB, 0xED, 0x00, 0x6E, 0x40, 0xEA, 0xFF, 0x6A,
+0x2C, 0xEA, 0x08, 0x2A, 0xCE, 0xF4, 0x50, 0x98,
+0x03, 0xF3, 0x0C, 0x6C, 0x06, 0xF0, 0x00, 0x6D,
+0x03, 0x6E, 0x07, 0x10, 0xCE, 0xF4, 0x50, 0x98,
+0x03, 0xF3, 0x0C, 0x6C, 0x06, 0xF0, 0x00, 0x6D,
+0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0xBC, 0xF4, 0xA4, 0x9B,
+0xCE, 0xF4, 0x50, 0x9A, 0xC3, 0xF3, 0x14, 0x6C,
+0x10, 0x6E, 0x40, 0xEA, 0x04, 0x95, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF4, 0x48, 0x9A, 0xAC, 0x34,
+0x91, 0xE1, 0x30, 0xF0, 0x20, 0x6B, 0x90, 0x35,
+0xC0, 0xF1, 0x08, 0x4B, 0x90, 0x34, 0xB5, 0xE3,
+0x8D, 0xE3, 0x46, 0xE9, 0xE7, 0xF6, 0x0C, 0x4D,
+0xE7, 0xF7, 0x0C, 0x4B, 0x08, 0xD5, 0x07, 0xD3,
+0xA3, 0x42, 0x61, 0x42, 0x23, 0x4A, 0x05, 0xD5,
+0x06, 0xD3, 0x09, 0xD2, 0x08, 0x94, 0x05, 0x93,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xAC, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x6D, 0xC0, 0x36, 0xC4, 0x36,
+0xD9, 0xE3, 0xC3, 0xF3, 0x18, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x07, 0x94, 0x06, 0x93, 0xCE, 0xF4,
+0x50, 0x98, 0xC0, 0xAC, 0x01, 0x6D, 0xC3, 0xF3,
+0x18, 0x6C, 0xC0, 0x36, 0xC4, 0x36, 0xAB, 0xED,
+0xD9, 0xE3, 0x40, 0xEA, 0x08, 0x94, 0x05, 0x95,
+0x07, 0x92, 0x02, 0x4C, 0x06, 0x93, 0x08, 0xD4,
+0x09, 0x94, 0x04, 0x4D, 0x02, 0x4A, 0x04, 0x4B,
+0x8A, 0xED, 0x05, 0xD5, 0x07, 0xD2, 0x06, 0xD3,
+0xD5, 0x61, 0xFF, 0x6A, 0x2C, 0xEA, 0x10, 0x2A,
+0x04, 0x93, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xC0, 0xF7, 0x15, 0x4B, 0x6C, 0x33,
+0x49, 0xE3, 0xCA, 0xA2, 0x81, 0xF4, 0x14, 0x6C,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x0F, 0x10,
+0x04, 0x95, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xAC, 0x33, 0x49, 0xE3, 0xA7, 0xF6,
+0xD3, 0xA2, 0xCE, 0xF4, 0x50, 0x98, 0x81, 0xF4,
+0x14, 0x6C, 0x00, 0xF4, 0x00, 0x6D, 0xCF, 0xEE,
+0x01, 0x49, 0x40, 0xEA, 0x02, 0x71, 0x3F, 0xF7,
+0x1D, 0x61, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3, 0x18, 0x6C,
+0xAB, 0xED, 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0x03, 0xF3, 0x0C, 0x6C, 0x06, 0xF0,
+0x00, 0x6D, 0x00, 0x6E, 0x40, 0xEA, 0x0D, 0x97,
+0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0,
+0x24, 0x6B, 0x4C, 0xEC, 0x4C, 0xED, 0x5C, 0xF3,
+0x10, 0x4B, 0x00, 0x6A, 0xC0, 0xF1, 0x08, 0x48,
+0x30, 0xF0, 0x20, 0x69, 0x05, 0xD5, 0x28, 0xF1,
+0x4D, 0xC0, 0xA0, 0x9B, 0xCE, 0xF4, 0x50, 0x99,
+0x04, 0xD4, 0x00, 0x6E, 0xE3, 0xF3, 0x10, 0x6C,
+0x40, 0xEA, 0x04, 0x92, 0x06, 0x22, 0x00, 0x6A,
+0xE7, 0xF6, 0x44, 0xD8, 0xE7, 0xF6, 0x48, 0xD8,
+0x51, 0x10, 0x28, 0xF1, 0x4C, 0xA0, 0x4E, 0x22,
+0x87, 0xF6, 0x70, 0x98, 0xE7, 0xF6, 0x44, 0x98,
+0x4E, 0xEB, 0x04, 0xD3, 0x1F, 0x2B, 0x05, 0x95,
+0x00, 0x6C, 0x00, 0x18, 0x4F, 0xD5, 0x00, 0x6C,
+0x00, 0x18, 0x1A, 0xD5, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF3, 0x10, 0x4B, 0xCE, 0xF4, 0x50, 0x99,
+0xA0, 0x9B, 0xE3, 0xF3, 0x10, 0x6C, 0x01, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3,
+0x5F, 0xA2, 0x05, 0x22, 0x5D, 0x67, 0x67, 0x42,
+0x09, 0x4B, 0x40, 0xA3, 0x01, 0x10, 0x01, 0x6A,
+0x28, 0xF1, 0x4D, 0xC0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x87, 0xF6, 0x30, 0x98,
+0xE7, 0xF6, 0x48, 0x98, 0x4E, 0xE9, 0x1E, 0x29,
+0x05, 0x95, 0x01, 0x6C, 0x00, 0x18, 0x4F, 0xD5,
+0x01, 0x6C, 0x00, 0x18, 0x1A, 0xD5, 0x10, 0xF0,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x50, 0x9A, 0x5C, 0xF3, 0xB0, 0x9B, 0xE3, 0xF3,
+0x10, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x21, 0x6A, 0x50, 0xF3, 0x5F, 0xA2, 0x04, 0x2A,
+0x01, 0x6A, 0x28, 0xF1, 0x4D, 0xC0, 0x02, 0x10,
+0x28, 0xF1, 0x2D, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0xE8, 0xF2, 0x55, 0xA2, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xE8, 0xF2, 0x56, 0xA2, 0x05, 0x22, 0x00, 0x6C,
+0x01, 0x6D, 0x00, 0x18, 0xC0, 0xD5, 0x04, 0x10,
+0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18, 0x4F, 0xD5,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0x25, 0x67, 0x5C, 0xF3,
+0xB0, 0x9A, 0xFF, 0x68, 0x8C, 0xE8, 0xA1, 0xF4,
+0x18, 0x6C, 0x00, 0x18, 0x42, 0xE7, 0x28, 0x22,
+0x27, 0x20, 0x03, 0x21, 0x01, 0x71, 0x12, 0x60,
+0x34, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0x14, 0x9A, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
+0x00, 0x18, 0x8D, 0xE7, 0x0E, 0x6B, 0x6B, 0xEB,
+0x4C, 0xEB, 0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67,
+0x09, 0x6F, 0x10, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF4, 0x14, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7, 0x0E, 0x6B,
+0x6B, 0xEB, 0x4C, 0xEB, 0x00, 0x6C, 0x01, 0x6D,
+0xD0, 0x67, 0x05, 0x6F, 0x6D, 0xEF, 0x0F, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A,
+0x00, 0x6C, 0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18,
+0x8D, 0xE7, 0x02, 0x6F, 0xEB, 0xEF, 0x00, 0x6C,
+0x01, 0x6D, 0xD0, 0x67, 0x4C, 0xEF, 0x00, 0x18,
+0xA0, 0xE7, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x27, 0x6A, 0x7D, 0x67, 0x50, 0xC3, 0x09, 0x6A,
+0x4F, 0xCB, 0x08, 0x6A, 0x52, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xC0, 0xF0,
+0x7E, 0xA2, 0x9D, 0x67, 0x73, 0xC4, 0xC0, 0xF0,
+0x7F, 0xA2, 0x74, 0xC4, 0xE0, 0xF0, 0x66, 0xA2,
+0x75, 0xC4, 0xE0, 0xF0, 0x65, 0xA2, 0x76, 0xC4,
+0xE0, 0xF0, 0x64, 0xA2, 0x77, 0xC4, 0xE0, 0xF0,
+0x6D, 0xA2, 0x78, 0xC4, 0xE0, 0xF0, 0x6E, 0xA2,
+0xE0, 0xF0, 0x4F, 0xA2, 0x79, 0xC4, 0x5A, 0xC4,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A,
+0x04, 0x04, 0x40, 0xEA, 0x09, 0x97, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x69, 0xA2,
+0x0C, 0x23, 0x00, 0x6B, 0xD0, 0xF4, 0x69, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3, 0x48, 0x9A,
+0x30, 0xF0, 0x21, 0x6C, 0xD0, 0xF4, 0x04, 0x4C,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x04, 0x67,
+0x30, 0xF0, 0x21, 0x6C, 0xD0, 0xF4, 0x04, 0x4C,
+0xB0, 0x67, 0x05, 0x6E, 0x40, 0xEA, 0x60, 0xA0,
+0x01, 0x6A, 0x4C, 0xEB, 0x05, 0x23, 0x30, 0xF0,
+0x21, 0x6B, 0xD0, 0xF4, 0x49, 0xC3, 0x06, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3, 0x48, 0x9A,
+0x90, 0x67, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A,
+0xC4, 0x67, 0x01, 0x6D, 0x23, 0x6C, 0x40, 0xEA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x44, 0x9A, 0xC4, 0x67, 0x01, 0x6D,
+0x17, 0x6C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A,
+0xC4, 0x67, 0x01, 0x6D, 0x1B, 0x6C, 0x40, 0xEA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0xC0, 0xA4, 0xA9, 0xF0, 0xEF, 0xA3, 0x02, 0x6A,
+0x01, 0x6D, 0x4B, 0xEA, 0xAC, 0xEE, 0xEC, 0xEA,
+0xCD, 0xEA, 0xA9, 0xF0, 0x4F, 0xC3, 0x80, 0xA4,
+0x86, 0x34, 0xAC, 0xEC, 0x84, 0x35, 0x03, 0x6C,
+0x8B, 0xEC, 0x4C, 0xEC, 0xAD, 0xEC, 0xA9, 0xF0,
+0x8F, 0xC3, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A,
+0xC4, 0x67, 0x03, 0x6D, 0x11, 0x6C, 0x40, 0xEA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x40, 0xA4, 0x7D, 0x67,
+0x07, 0x6D, 0x50, 0xC3, 0x41, 0xA4, 0x04, 0x06,
+0x51, 0xC3, 0x42, 0xA4, 0x52, 0xC3, 0x43, 0xA4,
+0x53, 0xC3, 0x44, 0xA4, 0x30, 0x6C, 0x54, 0xC3,
+0x00, 0x6A, 0x55, 0xC3, 0x56, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A, 0x40, 0xEA,
+0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x44, 0x9A, 0xC4, 0x67, 0x01, 0x6D,
+0x28, 0x6C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x61, 0xA4, 0xBD, 0x67, 0x40, 0xA4, 0x70, 0xC5,
+0x62, 0xA4, 0x0D, 0x5A, 0x71, 0xC5, 0x63, 0xA4,
+0x72, 0xC5, 0x64, 0xA4, 0x73, 0xC5, 0x65, 0xA4,
+0x74, 0xC5, 0x66, 0xA4, 0xFF, 0x6C, 0x75, 0xC5,
+0x80, 0xF0, 0x14, 0x60, 0x10, 0xF0, 0x24, 0x6B,
+0x48, 0x32, 0x1C, 0xF1, 0x0C, 0x4B, 0x4D, 0xE3,
+0x40, 0x9B, 0x00, 0xEA, 0x2A, 0x6C, 0x08, 0x10,
+0x29, 0x6C, 0x02, 0x6D, 0x88, 0x10, 0x31, 0x6C,
+0x85, 0x10, 0x32, 0x6C, 0x83, 0x10, 0x33, 0x6C,
+0x06, 0x6D, 0x81, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x50, 0x9A, 0x04, 0x04, 0x40, 0xEA,
+0x80, 0x10, 0x9D, 0x67, 0x70, 0xA4, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0,
+0x74, 0xC2, 0x71, 0xA4, 0xC9, 0xF0, 0x75, 0xC2,
+0x72, 0xA4, 0xC9, 0xF0, 0x76, 0xC2, 0x73, 0xA4,
+0xC9, 0xF0, 0x77, 0xC2, 0x74, 0xA4, 0xC9, 0xF0,
+0x78, 0xC2, 0x6B, 0x10, 0xBD, 0x67, 0x50, 0xA5,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x93, 0xA5, 0xC0, 0xF0, 0x5C, 0xC3, 0x54, 0xA5,
+0x80, 0x34, 0x80, 0x34, 0x00, 0xF6, 0x40, 0x32,
+0x8D, 0xEA, 0x91, 0xA5, 0x8D, 0xEA, 0x92, 0xA5,
+0x80, 0x34, 0x8D, 0xEA, 0xC0, 0xF0, 0x58, 0xDB,
+0x54, 0x10, 0x00, 0x18, 0x31, 0xD6, 0x51, 0x10,
+0x7D, 0x67, 0x90, 0xA3, 0x30, 0xF0, 0x20, 0x6A,
+0x01, 0x6B, 0x84, 0x34, 0xEF, 0xF4, 0x08, 0x4A,
+0x6D, 0xEC, 0xE0, 0xF0, 0x87, 0xC2, 0xE0, 0xF0,
+0x87, 0xA2, 0x86, 0x35, 0x1E, 0x55, 0x05, 0x60,
+0x8C, 0xEB, 0x3C, 0x6C, 0x8D, 0xEB, 0xE0, 0xF0,
+0x67, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0xE0, 0xF0, 0x67, 0xA2, 0x66, 0x34,
+0x51, 0x54, 0x33, 0x61, 0x01, 0x6C, 0x6C, 0xEC,
+0x60, 0x6B, 0x6B, 0xEB, 0x6D, 0xEC, 0xE0, 0xF0,
+0x87, 0xC2, 0x2B, 0x10, 0x9D, 0x67, 0x70, 0xA4,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x70, 0xC2,
+0x24, 0x10, 0xBD, 0x67, 0x50, 0xA5, 0x3F, 0x6B,
+0x4C, 0xEB, 0x68, 0x33, 0x5A, 0x32, 0x6D, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF5, 0x52, 0xC3,
+0x18, 0x10, 0xBD, 0x67, 0x50, 0xA5, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0xE0, 0xF0,
+0xAB, 0xA3, 0x01, 0x6C, 0x4C, 0xEC, 0x02, 0x6A,
+0x4B, 0xEA, 0xAC, 0xEA, 0x8D, 0xEA, 0xE0, 0xF0,
+0x4B, 0xC3, 0x07, 0x10, 0x01, 0x6D, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A, 0x04, 0x06,
+0x40, 0xEA, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
+0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0xC0, 0xF0, 0xBD, 0xA2, 0x07, 0x6C,
+0x6C, 0xEC, 0x08, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB,
+0x8D, 0xEB, 0xC0, 0xF0, 0x7D, 0xC2, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x44, 0x9A, 0xC4, 0x67, 0x02, 0x6D,
+0x38, 0x6C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD1,
+0x00, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xA4,
+0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0, 0x85, 0xA2,
+0x01, 0x6E, 0x11, 0x6D, 0xCC, 0xEB, 0xAB, 0xED,
+0x70, 0x33, 0x8C, 0xED, 0x6D, 0xED, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF2, 0x68, 0x9B, 0xC9, 0xF0,
+0xA5, 0xC2, 0xFE, 0x6F, 0x80, 0xA3, 0x10, 0x68,
+0xAC, 0xE8, 0xEC, 0xEC, 0x80, 0xC3, 0xFF, 0x6C,
+0x27, 0x20, 0x10, 0xF0, 0x24, 0x6D, 0x9C, 0xF6,
+0x00, 0x9D, 0x08, 0x69, 0x2B, 0xE9, 0xA0, 0xA0,
+0x8C, 0xED, 0x2C, 0xED, 0x05, 0x69, 0x2D, 0xED,
+0x8C, 0xED, 0xA0, 0xC0, 0x10, 0xF0, 0x24, 0x6D,
+0x9C, 0xF6, 0xA4, 0x9D, 0x00, 0xA5, 0x0F, 0x6D,
+0x0C, 0xED, 0x04, 0x75, 0x0B, 0x61, 0xC9, 0xF0,
+0x04, 0xA2, 0x08, 0x6D, 0x0C, 0xED, 0x8C, 0xED,
+0x0B, 0x2D, 0xC9, 0xF0, 0x5E, 0xAA, 0xA6, 0xF5,
+0x0D, 0x72, 0x06, 0x60, 0x40, 0xA3, 0x8C, 0xEA,
+0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x03, 0x10,
+0x40, 0xA3, 0x4C, 0xEF, 0xE0, 0xC3, 0x01, 0x91,
+0x00, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0x40, 0xA4, 0x0C, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF6, 0x68, 0x9A, 0xFF, 0x6C, 0x18, 0x6D,
+0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0x89, 0xF2, 0x6C, 0xA2, 0x08, 0x6A, 0x6C, 0xEA,
+0x08, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF6,
+0x68, 0x9A, 0xE7, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
+0x40, 0xC3, 0x20, 0xE8, 0x80, 0xA4, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x01, 0x6B,
+0xC9, 0xF0, 0xA5, 0xA2, 0x8C, 0xEB, 0x6C, 0x34,
+0x09, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB, 0x8D, 0xEB,
+0xC9, 0xF0, 0x65, 0xC2, 0x08, 0x6A, 0x6C, 0xEA,
+0x07, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF6,
+0x48, 0x9A, 0x18, 0x6B, 0x60, 0xC2, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF6, 0x68, 0x9B,
+0x40, 0xC3, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xA0, 0xA4, 0xA9, 0xF0, 0xDD, 0xA2, 0x02, 0x6B,
+0x01, 0x6C, 0x6B, 0xEB, 0x8C, 0xED, 0xCC, 0xEB,
+0xAD, 0xEB, 0xA9, 0xF0, 0x7D, 0xC2, 0x8C, 0xEB,
+0xFF, 0x6A, 0x45, 0x23, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF6, 0x8C, 0x9B, 0xE5, 0x6D, 0xAB, 0xED,
+0x60, 0xA4, 0x4C, 0xEB, 0xAC, 0xEB, 0xA4, 0x6D,
+0xAD, 0xEB, 0x60, 0xDC, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF6, 0x70, 0x9B, 0x80, 0xA3, 0x8C, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF6,
+0x54, 0x9A, 0x42, 0xF2, 0x15, 0x6B, 0x01, 0x6C,
+0x60, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3,
+0x44, 0x9A, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF6, 0x7C, 0x9A, 0x03, 0x6C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF6, 0x78, 0x9A, 0xFE, 0xF5, 0x1C, 0x4C,
+0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF6, 0x7C, 0x9A, 0x81, 0xF1,
+0x00, 0x4C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF6, 0x60, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF6, 0x84, 0x9C,
+0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x01, 0x6D, 0x04, 0x67, 0xAB, 0xED,
+0x41, 0xF4, 0x18, 0x6C, 0x00, 0x18, 0x42, 0xE7,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0xC9, 0xF0, 0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6D,
+0x80, 0xA0, 0xBC, 0xF6, 0xA8, 0x9D, 0x05, 0x97,
+0x04, 0x90, 0x4C, 0xED, 0x00, 0xF6, 0x80, 0x34,
+0xAD, 0xEC, 0xC9, 0xF0, 0x8C, 0xDB, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0xC9, 0xF0, 0x5C, 0xA0,
+0x27, 0x72, 0x50, 0x60, 0x28, 0x5A, 0x05, 0x60,
+0x15, 0x72, 0x0B, 0x60, 0x23, 0x72, 0x44, 0x60,
+0xDE, 0x10, 0x34, 0x72, 0x57, 0x60, 0x39, 0x72,
+0x80, 0xF0, 0x18, 0x60, 0x30, 0x72, 0x49, 0x60,
+0xD6, 0x10, 0xC9, 0xF0, 0x9E, 0xA0, 0x40, 0x6A,
+0x8C, 0xEA, 0x0E, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF6, 0x4C, 0x9A, 0x3F, 0x6D, 0xAF, 0xEB,
+0x40, 0x9A, 0x8D, 0xEB, 0x46, 0x32, 0xAC, 0xEA,
+0x49, 0xE3, 0xFF, 0x6B, 0x6C, 0xEA, 0x0A, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF6, 0x4C, 0x9A,
+0x60, 0x9A, 0x3F, 0x6A, 0x66, 0x33, 0x4C, 0xEB,
+0x8C, 0xEA, 0x49, 0xE3, 0x40, 0x5A, 0x78, 0x67,
+0x6B, 0xEB, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x7C, 0xF4, 0xBC, 0x9B, 0x10, 0xF0, 0x24, 0x6E,
+0xBC, 0xF6, 0xD0, 0x9E, 0x80, 0x9D, 0x40, 0xF6,
+0x40, 0x33, 0x44, 0x32, 0xCC, 0xEC, 0x8D, 0xEB,
+0x60, 0xDD, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF6,
+0x8C, 0x9B, 0x7F, 0x6D, 0xAB, 0xED, 0x60, 0x9C,
+0xAC, 0xEB, 0x6D, 0xEA, 0x40, 0xDC, 0x9B, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x4C, 0x9A,
+0x01, 0x6C, 0x05, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x4C, 0x9A, 0x02, 0x6C, 0x40, 0xEA,
+0x8E, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3,
+0x54, 0x9A, 0x00, 0x6D, 0x01, 0x6C, 0xC5, 0x67,
+0x40, 0xEA, 0x85, 0x10, 0xC9, 0xF0, 0x5E, 0xA0,
+0x01, 0x6B, 0x6C, 0xEA, 0x27, 0x22, 0xC9, 0xF0,
+0x45, 0xA0, 0x10, 0x69, 0x2C, 0xEA, 0x7B, 0x2A,
+0x5D, 0x67, 0x70, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x44, 0x9A, 0xA3, 0x67, 0x34, 0x6C,
+0x04, 0x06, 0x40, 0xEA, 0x02, 0x6C, 0x00, 0x18,
+0x39, 0xEE, 0xC9, 0xF0, 0x64, 0xA0, 0x08, 0x6A,
+0xFF, 0x6C, 0x6D, 0xEA, 0x2D, 0xEA, 0x30, 0x6B,
+0xC9, 0xF0, 0x44, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
+0xC9, 0xF0, 0x6A, 0xC0, 0xDC, 0xF2, 0x68, 0x9A,
+0x40, 0xA3, 0x8C, 0xEA, 0x02, 0x6C, 0x8D, 0xEA,
+0xFF, 0x6C, 0x15, 0x10, 0x03, 0x6C, 0x00, 0x18,
+0x39, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3,
+0x50, 0x9A, 0x40, 0xEA, 0xC9, 0xF0, 0x64, 0xA0,
+0x09, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xC9, 0xF0,
+0x44, 0xC0, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF2,
+0x68, 0x9A, 0xFD, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
+0x40, 0xC3, 0x41, 0x10, 0xA9, 0xF0, 0x88, 0xA0,
+0x01, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA, 0x3B, 0x22,
+0xA9, 0xF0, 0x4C, 0xA0, 0x04, 0x6D, 0xAC, 0xEA,
+0x6C, 0xEA, 0x35, 0x22, 0xC9, 0xF0, 0x84, 0xA0,
+0x80, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x6C, 0xEA,
+0x2E, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0xE0, 0xF0, 0xC5, 0xA2, 0x01, 0x4E,
+0xE0, 0xF0, 0xC5, 0xC2, 0xA9, 0xF0, 0x4A, 0xA0,
+0xAC, 0xEA, 0x0B, 0x22, 0xC9, 0xF0, 0xA5, 0xA0,
+0x20, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA, 0x05, 0x22,
+0x7F, 0x6A, 0x8C, 0xEA, 0xC9, 0xF0, 0x44, 0xC0,
+0x16, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x89, 0xF2,
+0x51, 0xA2, 0x02, 0x22, 0x03, 0x72, 0x0F, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xC9, 0xF0, 0x84, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
+0xC9, 0xF0, 0x64, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF3, 0x50, 0x9A, 0x40, 0xEA, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x00, 0x68,
+0x17, 0x10, 0xE0, 0xF3, 0x08, 0x70, 0x0A, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
+0x80, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x00, 0x6A, 0x13, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
+0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x44, 0x9A,
+0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xE1, 0x2A,
+0x01, 0x6A, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0xF7, 0x1F, 0x6A,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x10, 0xF0,
+0x24, 0x6C, 0xBC, 0xF6, 0x74, 0x9B, 0xBC, 0xF6,
+0x98, 0x9C, 0x6D, 0xE5, 0x91, 0xE5, 0x00, 0x6E,
+0xC0, 0xDB, 0x04, 0x4B, 0x8A, 0xEB, 0xFB, 0x61,
+0xE7, 0xF7, 0x1F, 0x6B, 0x4C, 0xEB, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF4, 0x58, 0x9A, 0x10, 0x6C,
+0x4D, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF6,
+0x54, 0x9A, 0x49, 0xE5, 0x60, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF6, 0x5C, 0x9A, 0xFF, 0x6B,
+0x55, 0xE5, 0x40, 0xA5, 0x6C, 0xEA, 0x8D, 0xEA,
+0x6C, 0xEA, 0x40, 0xC5, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x6D, 0xA2,
+0x08, 0xD4, 0x30, 0xF0, 0x20, 0x69, 0x61, 0xC5,
+0x01, 0x4B, 0xD0, 0xF4, 0x6D, 0xC2, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF6, 0x94, 0x9B, 0x08, 0x93,
+0x4E, 0xF2, 0x50, 0x99, 0x02, 0x6E, 0x91, 0xE3,
+0x05, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF6, 0x80, 0x9B, 0x08, 0x93, 0xCE, 0xA0,
+0x4E, 0xF2, 0x50, 0x99, 0xA2, 0x40, 0x91, 0xE3,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x24, 0x67, 0x00, 0x18,
+0x0A, 0xD8, 0x00, 0x6B, 0x36, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF6, 0x44, 0x9A, 0xFF, 0xF7,
+0x1F, 0x6E, 0xFF, 0x6F, 0x00, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF4, 0x54, 0x9A, 0x10, 0x6C,
+0x8B, 0xEC, 0x4C, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
+0xA1, 0x40, 0xDC, 0xF6, 0x48, 0x9A, 0x65, 0x67,
+0xCC, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF6, 0x4C, 0x9A, 0x60, 0xA2, 0xFA, 0x65,
+0xA2, 0x32, 0xEC, 0xEB, 0x8C, 0xEB, 0x42, 0x32,
+0x6D, 0xEA, 0xEC, 0xEA, 0x7F, 0x67, 0x40, 0xC3,
+0x87, 0xA9, 0x02, 0x4C, 0xCC, 0xEC, 0x00, 0x18,
+0x1F, 0xD8, 0x87, 0x40, 0x12, 0x4C, 0xB1, 0x67,
+0x00, 0x18, 0x36, 0xD8, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x44, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0x01, 0x6B, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x43, 0x67, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
+0x6C, 0x9A, 0xA4, 0x67, 0x04, 0x6C, 0x8D, 0xEB,
+0x30, 0xF0, 0x20, 0x68, 0x80, 0xF0, 0x6C, 0xDA,
+0xEF, 0xF4, 0x08, 0x48, 0xA0, 0xF0, 0x4C, 0xA8,
+0x01, 0xF1, 0x00, 0x72, 0x07, 0x60, 0xA0, 0xF0,
+0x6C, 0xA0, 0xA0, 0xF0, 0x4D, 0xA0, 0xFF, 0x4B,
+0x4E, 0xEB, 0x0A, 0x2B, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x6C, 0x9A, 0x00, 0xF2, 0x00, 0x6C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x12, 0x10,
+0x50, 0x32, 0x51, 0xE0, 0x0C, 0x4C, 0x10, 0x6E,
+0x00, 0x18, 0xB3, 0xD4, 0xA0, 0xF0, 0x4D, 0xA0,
+0x0A, 0x6B, 0x01, 0x4A, 0xA0, 0xF0, 0x4D, 0xC0,
+0xA0, 0xF0, 0x4D, 0xA0, 0x6E, 0xEA, 0x02, 0x2A,
+0xA0, 0xF0, 0x4D, 0xC0, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x21, 0x6B, 0xD0, 0xF4,
+0x4C, 0xA3, 0xFF, 0x6F, 0xE0, 0xF0, 0xC7, 0xA5,
+0x41, 0xC5, 0x43, 0xA5, 0xD0, 0xF4, 0x6C, 0xA3,
+0x03, 0x4A, 0xEC, 0xEA, 0x09, 0x10, 0xED, 0x42,
+0xFF, 0x68, 0x0C, 0xEF, 0xFD, 0xE5, 0x64, 0xC7,
+0xE6, 0xA7, 0x03, 0x4F, 0xE9, 0xE2, 0x0C, 0xEA,
+0xEF, 0x46, 0xE2, 0xEA, 0xF4, 0x61, 0x30, 0xF0,
+0x21, 0x6A, 0xD0, 0xF4, 0x6C, 0xA2, 0x01, 0x4B,
+0xD0, 0xF4, 0x6C, 0xC2, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF6, 0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x71, 0xE4, 0x40, 0xEA,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x24, 0x67, 0x00, 0x18, 0x0A, 0xD8, 0x00, 0x6B,
+0x2E, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6,
+0x44, 0x9A, 0x0F, 0x6C, 0xFF, 0xF7, 0x1F, 0x6B,
+0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4,
+0x54, 0x9A, 0x4C, 0xE8, 0xA1, 0x40, 0xA2, 0x32,
+0x42, 0x32, 0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C,
+0xDC, 0xF6, 0x88, 0x9C, 0xC5, 0x67, 0x6C, 0xEE,
+0xC0, 0xCC, 0x10, 0xF0, 0x24, 0x6C, 0xDC, 0xF6,
+0x8C, 0x9C, 0x40, 0xC4, 0xE0, 0xF0, 0x87, 0xA1,
+0x6C, 0xEC, 0x00, 0x18, 0x1F, 0xD8, 0x87, 0x40,
+0x12, 0x4C, 0xB1, 0x67, 0x00, 0x18, 0x8D, 0xD8,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x44, 0x9A,
+0x01, 0x6B, 0x60, 0xC2, 0x01, 0x6B, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x43, 0x67, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
+0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x0C, 0xF3,
+0x15, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
+0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6, 0x62, 0xA0,
+0xC1, 0xF6, 0x43, 0xA0, 0x6E, 0xEA, 0x39, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6, 0x50, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF3, 0x98, 0x9C,
+0x40, 0x9A, 0x8C, 0xEA, 0x2E, 0x2A, 0xE8, 0x6A,
+0x58, 0xEB, 0x87, 0x40, 0x3B, 0x4C, 0x12, 0xEB,
+0x71, 0xE4, 0x00, 0x18, 0xA6, 0xD8, 0x16, 0x22,
+0xC1, 0xF6, 0x42, 0xA0, 0x10, 0x6B, 0x01, 0x4A,
+0xC1, 0xF6, 0x42, 0xC0, 0xC1, 0xF6, 0x42, 0xA0,
+0x6E, 0xEA, 0x02, 0x2A, 0xC1, 0xF6, 0x42, 0xC0,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0xC1, 0xF6, 0x82, 0xA2, 0xC1, 0xF6, 0x63, 0xA2,
+0x8E, 0xEB, 0x0B, 0x23, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x04, 0x10, 0xC1, 0xF6, 0x84, 0xC2, 0xC1, 0xF6,
+0x65, 0xC2, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x30, 0x68,
+0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6, 0x42, 0xA8,
+0xA4, 0x67, 0x01, 0xF7, 0x00, 0x72, 0x07, 0x60,
+0xC1, 0xF6, 0x42, 0xA0, 0xC1, 0xF6, 0x83, 0xA0,
+0xFF, 0x4A, 0x8E, 0xEA, 0x09, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0xFF, 0x6A,
+0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0xA7, 0x10,
+0x23, 0xA5, 0xC1, 0xF6, 0x45, 0xA0, 0xFF, 0x6B,
+0x04, 0x49, 0x6C, 0xE9, 0x1F, 0x2A, 0xE8, 0x6A,
+0x58, 0xEC, 0x30, 0xF0, 0x20, 0x6A, 0x67, 0x40,
+0x4E, 0xF2, 0x50, 0x9A, 0x3B, 0x4B, 0xD1, 0x67,
+0x12, 0xEC, 0x91, 0xE3, 0x40, 0xEA, 0xC1, 0xF6,
+0x43, 0xA0, 0xC1, 0xF6, 0x62, 0xA0, 0xC1, 0xF6,
+0x25, 0xC0, 0x4E, 0xEB, 0x74, 0x2B, 0x01, 0x4A,
+0xC1, 0xF6, 0x43, 0xC0, 0xC1, 0xF6, 0x43, 0xA0,
+0x10, 0x6B, 0x6E, 0xEA, 0x6C, 0x2A, 0xC1, 0xF6,
+0x43, 0xC0, 0x69, 0x10, 0x82, 0xA5, 0x37, 0x2C,
+0x51, 0xE1, 0xE3, 0x54, 0x34, 0x60, 0xC1, 0xF6,
+0x84, 0xA0, 0xE8, 0x6E, 0xD8, 0xEC, 0x12, 0xEC,
+0x11, 0xE4, 0x40, 0xF0, 0xC4, 0xA4, 0x2B, 0x2E,
+0x40, 0xF0, 0xC5, 0xA4, 0xFC, 0x4A, 0x6C, 0xEA,
+0xFF, 0x4E, 0x40, 0xF0, 0xC5, 0xC4, 0xC1, 0xF6,
+0x85, 0xA0, 0xE8, 0x6E, 0xFF, 0x4C, 0xC1, 0xF6,
+0x85, 0xC0, 0xC1, 0xF6, 0x84, 0xA0, 0xD8, 0xEC,
+0xD1, 0x67, 0x12, 0xEC, 0x91, 0xE0, 0x51, 0xE4,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x45, 0x4C, 0x40, 0xEA, 0xC1, 0xF6, 0x44, 0xA0,
+0xE8, 0x6B, 0x78, 0xEA, 0x12, 0xEA, 0x09, 0xE2,
+0x40, 0xF0, 0x65, 0xA2, 0x6D, 0xE1, 0x40, 0xF0,
+0x65, 0xC2, 0xC1, 0xF6, 0x45, 0xA0, 0x45, 0xE1,
+0xC1, 0xF6, 0x25, 0xC0, 0x30, 0x10, 0x10, 0xF0,
+0x30, 0x68, 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6,
+0x63, 0xA0, 0xE8, 0x6A, 0x87, 0x40, 0x58, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x3B, 0x4C, 0xD1, 0x67, 0x12, 0xEB, 0x71, 0xE4,
+0x40, 0xEA, 0xC1, 0xF6, 0x43, 0xA0, 0x10, 0x6B,
+0xC1, 0xF6, 0x25, 0xC0, 0x01, 0x4A, 0xC1, 0xF6,
+0x43, 0xC0, 0xC1, 0xF6, 0x43, 0xA0, 0x6E, 0xEA,
+0x02, 0x2A, 0xC1, 0xF6, 0x43, 0xC0, 0x10, 0xF0,
+0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF6,
+0x64, 0xA2, 0x10, 0x6C, 0x01, 0x4B, 0xC1, 0xF6,
+0x64, 0xC2, 0xC1, 0xF6, 0x64, 0xA2, 0x8E, 0xEB,
+0x02, 0x2B, 0xC1, 0xF6, 0x64, 0xC2, 0x10, 0xF0,
+0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF6,
+0x84, 0xA2, 0xE8, 0x6B, 0x78, 0xEC, 0x04, 0x6C,
+0x12, 0xEB, 0x4D, 0xE3, 0xC1, 0xF6, 0x45, 0xA2,
+0x20, 0xF1, 0x49, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0xF7, 0x1F, 0x68, 0x0C, 0xED, 0x08, 0xD4,
+0xA0, 0xCC, 0x08, 0x92, 0xCC, 0xE8, 0x22, 0x67,
+0x01, 0xCA, 0x04, 0x49, 0x0B, 0x27, 0x0A, 0x20,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0xFF, 0x6E, 0x91, 0x67, 0xA7, 0x67, 0x0C, 0xEE,
+0x40, 0xEA, 0x05, 0xE1, 0x08, 0x92, 0x07, 0x97,
+0x05, 0x90, 0x47, 0xE1, 0xFF, 0xF7, 0x1F, 0x6A,
+0x2C, 0xEA, 0x06, 0x91, 0x04, 0x63, 0x00, 0xEF,
+0xDF, 0x63, 0x41, 0x62, 0x40, 0xD1, 0x3F, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
+0xFF, 0x68, 0xCC, 0xE8, 0x24, 0x67, 0x43, 0xD5,
+0x04, 0x04, 0x00, 0x6D, 0xE8, 0x6E, 0x40, 0xEA,
+0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x50, 0xC3,
+0x1B, 0x6A, 0x52, 0xC3, 0x44, 0x40, 0x53, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0x43, 0x95, 0x4E, 0xF2,
+0x50, 0x9A, 0xD0, 0x67, 0x05, 0xD1, 0x06, 0x04,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x41, 0x97,
+0x40, 0x91, 0x3F, 0x90, 0x21, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xEC, 0xF5, 0x11, 0x4A, 0x30, 0xF0,
+0x20, 0x68, 0x40, 0xDB, 0xEF, 0xF4, 0x08, 0x48,
+0xA0, 0xF0, 0x8C, 0xA0, 0xA0, 0xF0, 0x4D, 0xA0,
+0x8E, 0xEA, 0x3D, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF6, 0x50, 0x9A, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF3, 0x78, 0x9B, 0x40, 0x9A, 0x6C, 0xEA,
+0x32, 0x2A, 0x47, 0x40, 0x90, 0x34, 0x05, 0x4A,
+0x91, 0xE2, 0x00, 0x18, 0x4B, 0xD8, 0x0B, 0x2A,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x6C, 0x9A, 0x04, 0x6C, 0x8D, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x22, 0x10, 0xA0, 0xF0,
+0x4C, 0xA0, 0x01, 0x4A, 0xA0, 0xF0, 0x4C, 0xC0,
+0xA0, 0xF0, 0x6C, 0xA0, 0xA0, 0xF0, 0x4D, 0xA0,
+0x6E, 0xEA, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0xA0, 0xF0, 0x6C, 0xA2, 0x0A, 0x6C, 0x8E, 0xEB,
+0x02, 0x2B, 0xA0, 0xF0, 0x6C, 0xC2, 0x00, 0x18,
+0xDF, 0xD9, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF4,
+0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x1C, 0xF3,
+0x10, 0x9C, 0x40, 0x9B, 0x00, 0xF4, 0x1D, 0x6C,
+0x10, 0x6D, 0x0D, 0xEA, 0x40, 0xDB, 0x06, 0x02,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
+0x54, 0x9A, 0x00, 0x6E, 0x82, 0xF3, 0x08, 0x6F,
+0x40, 0xEA, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
+0x7C, 0xF3, 0x8C, 0x9B, 0x60, 0x9C, 0x0D, 0xEB,
+0x60, 0xDC, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x60, 0xA4, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC8, 0xF2,
+0x7D, 0xC2, 0x61, 0xA4, 0xC8, 0xF2, 0x7E, 0xC2,
+0x62, 0xA4, 0xC8, 0xF2, 0x7F, 0xC2, 0x63, 0xA4,
+0xE8, 0xF2, 0x60, 0xC2, 0x64, 0xA4, 0xE8, 0xF2,
+0x61, 0xC2, 0x65, 0xA4, 0xE8, 0xF2, 0x62, 0xC2,
+0x66, 0xA4, 0xE8, 0xF2, 0x63, 0xC2, 0x20, 0xE8,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x69, 0x30, 0xF0, 0x20, 0x6A,
+0x11, 0x67, 0x4E, 0xF2, 0x50, 0x9A, 0xEF, 0xF4,
+0x08, 0x48, 0xA4, 0x67, 0x04, 0x6E, 0x90, 0x67,
+0x40, 0xEA, 0xEF, 0xF4, 0x68, 0xA1, 0x01, 0x6A,
+0x6C, 0xEA, 0x0E, 0x22, 0x42, 0xA0, 0xFF, 0x72,
+0x0B, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x81, 0xA0, 0x88, 0xF3, 0x7B, 0xA2,
+0x6D, 0xE4, 0x04, 0x4B, 0x88, 0xF3, 0x6A, 0xCA,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF6, 0x54, 0x9A, 0x60, 0xA2, 0x03, 0x6A,
+0x6C, 0xEA, 0x10, 0x6B, 0x64, 0xEA, 0xFF, 0x6A,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6,
+0x58, 0x9A, 0x04, 0xD3, 0x40, 0x9A, 0x05, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6, 0x5C, 0x9A,
+0x00, 0x9A, 0x05, 0x92, 0x0A, 0xEA, 0xA0, 0xF0,
+0x15, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A, 0x02, 0x6C,
+0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x10, 0xF0,
+0x30, 0x69, 0x00, 0xF0, 0x00, 0x49, 0xC1, 0xF7,
+0x46, 0xA9, 0x00, 0xF7, 0x00, 0x72, 0x07, 0x60,
+0xC1, 0xF7, 0x66, 0xA1, 0xC1, 0xF7, 0x87, 0xA1,
+0xAF, 0x43, 0x8E, 0xED, 0x0A, 0x2D, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0xFF, 0x6C,
+0x01, 0x4C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x91, 0x10, 0x10, 0xF0, 0x24, 0x6D, 0xFC, 0xF6,
+0xA0, 0x9D, 0x7F, 0x6E, 0xB5, 0xE0, 0xE0, 0xA5,
+0xCC, 0xEF, 0x44, 0x2F, 0x00, 0xF4, 0x00, 0x72,
+0x80, 0xF0, 0x04, 0x60, 0xAC, 0x43, 0x8E, 0xED,
+0x80, 0xF0, 0x00, 0x25, 0x00, 0xF5, 0x01, 0x72,
+0x7D, 0x60, 0x00, 0xF6, 0x02, 0x72, 0x7A, 0x60,
+0x00, 0xF7, 0x03, 0x72, 0x77, 0x60, 0x00, 0xF5,
+0x00, 0x72, 0x74, 0x60, 0xFD, 0x4B, 0x6E, 0xEC,
+0x71, 0x24, 0x10, 0xF0, 0x30, 0x69, 0x00, 0xF0,
+0x00, 0x49, 0xC1, 0xF7, 0x46, 0xA9, 0x00, 0xF6,
+0x01, 0x72, 0x68, 0x60, 0x00, 0xF7, 0x02, 0x72,
+0x65, 0x60, 0x00, 0xF6, 0x00, 0x72, 0x62, 0x60,
+0xC1, 0xF7, 0x66, 0xA1, 0xC1, 0xF7, 0x87, 0xA1,
+0xFE, 0x4B, 0x8E, 0xEB, 0x5B, 0x23, 0x00, 0xF7,
+0x01, 0x72, 0x58, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF6, 0x44, 0x9A, 0x10, 0xF0, 0x24, 0x6D,
+0x76, 0x4C, 0xFC, 0xF6, 0xA0, 0x9D, 0x49, 0xE0,
+0x94, 0x34, 0x60, 0xAA, 0x91, 0xE1, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x06, 0x4C,
+0xB5, 0xE0, 0x12, 0x10, 0x40, 0xA5, 0x4C, 0xEE,
+0x01, 0x76, 0x1E, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF6, 0x44, 0x9A, 0x76, 0x4C, 0x94, 0x34,
+0x49, 0xE0, 0x60, 0xAA, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x91, 0xE1, 0x06, 0x4C,
+0xFF, 0x6E, 0x6C, 0xEE, 0x40, 0xEA, 0xC1, 0xF7,
+0x47, 0xA1, 0x08, 0x6B, 0x01, 0x4A, 0xC1, 0xF7,
+0x47, 0xC1, 0xC1, 0xF7, 0x47, 0xA1, 0x6E, 0xEA,
+0x0E, 0x2A, 0xC1, 0xF7, 0x47, 0xC1, 0x0B, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF3, 0x84, 0x9C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF6, 0x48, 0x9A, 0x04, 0x93,
+0x40, 0x9A, 0x0E, 0xEA, 0x61, 0xE0, 0x05, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF6, 0x4C, 0x9A,
+0x00, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF6,
+0x5C, 0x9A, 0x00, 0xDA, 0x05, 0x92, 0x4A, 0xE8,
+0x5F, 0xF7, 0x15, 0x61, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFE, 0x63, 0x03, 0xD1, 0x02, 0xD0, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF6, 0x50, 0x9A, 0x0F, 0x6B,
+0x40, 0xA2, 0x4C, 0xEB, 0x0A, 0x23, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
+0x8C, 0x9A, 0x02, 0x6D, 0xAD, 0xEC, 0x80, 0xF0,
+0x8C, 0xDA, 0x10, 0xF0, 0x30, 0x6A, 0x40, 0xF0,
+0x40, 0xA2, 0xFF, 0x4A, 0x00, 0xD2, 0xE2, 0x10,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0x40, 0xF0, 0x80, 0xAA, 0x00, 0xF7, 0x00, 0x74,
+0x05, 0x60, 0x40, 0xF0, 0x01, 0xA2, 0x00, 0x94,
+0x8A, 0xE8, 0x0A, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x6C, 0x9A, 0xFF, 0x6C, 0x01, 0x4C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0xCC, 0x10,
+0x30, 0xF0, 0x21, 0x6D, 0xD0, 0xF4, 0x8E, 0xA5,
+0xC3, 0x67, 0xC7, 0xEC, 0x86, 0x67, 0x01, 0x6E,
+0xCC, 0xEC, 0xA0, 0xF0, 0x08, 0x24, 0x0C, 0x35,
+0x04, 0x4D, 0xB5, 0xE2, 0x00, 0x6A, 0x30, 0xF0,
+0x21, 0x6E, 0xD0, 0xF4, 0xEE, 0xA6, 0xFF, 0x6C,
+0x1F, 0xF7, 0x00, 0x69, 0x8C, 0xEF, 0x74, 0x4F,
+0xE8, 0x37, 0xFD, 0xE2, 0x2C, 0xEF, 0x02, 0xF0,
+0x00, 0x77, 0x08, 0x60, 0xD0, 0xF4, 0xEE, 0xA6,
+0x8C, 0xEF, 0x74, 0x4F, 0xE8, 0x37, 0xFD, 0xE2,
+0x2C, 0xEF, 0x0F, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
+0xD0, 0xF4, 0x2E, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
+0x24, 0x6E, 0x8C, 0xE9, 0x74, 0x49, 0x28, 0x31,
+0xE2, 0x67, 0x25, 0xE2, 0xFC, 0xF2, 0xC0, 0x9E,
+0x0B, 0x10, 0xD0, 0xF4, 0x2E, 0xA6, 0x10, 0xF0,
+0x24, 0x6E, 0xFC, 0xF2, 0xC4, 0x9E, 0x8C, 0xE9,
+0x74, 0x49, 0x28, 0x31, 0xE2, 0x67, 0x25, 0xE2,
+0xD9, 0xE1, 0xC0, 0xA6, 0x0C, 0x31, 0xFD, 0xE1,
+0xCC, 0xEC, 0x10, 0xF0, 0x30, 0x6E, 0x00, 0xF0,
+0x00, 0x4E, 0xD9, 0xE7, 0x80, 0xC6, 0x30, 0xF0,
+0x21, 0x6E, 0xD0, 0xF4, 0xEE, 0xA6, 0xFF, 0x6C,
+0x1F, 0xF7, 0x00, 0x69, 0x8C, 0xEF, 0x7C, 0x4F,
+0xE8, 0x37, 0xFD, 0xE2, 0x2C, 0xEF, 0x02, 0xF0,
+0x00, 0x77, 0x08, 0x60, 0xD0, 0xF4, 0xEE, 0xA6,
+0x8C, 0xEF, 0x7C, 0x4F, 0xE8, 0x37, 0xFD, 0xE2,
+0x2C, 0xEF, 0x0E, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
+0xD0, 0xF4, 0xCE, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
+0x24, 0x6F, 0x8C, 0xEE, 0x7C, 0x4E, 0xC8, 0x36,
+0xD9, 0xE2, 0xFC, 0xF2, 0xE0, 0x9F, 0x0A, 0x10,
+0xD0, 0xF4, 0xCE, 0xA6, 0x10, 0xF0, 0x24, 0x6F,
+0xFC, 0xF2, 0xE4, 0x9F, 0x8C, 0xEE, 0x7C, 0x4E,
+0xC8, 0x36, 0xD9, 0xE2, 0xF9, 0xE6, 0xC0, 0xA6,
+0x01, 0x4A, 0x04, 0x72, 0xCC, 0xEC, 0x80, 0xC5,
+0x01, 0x4D, 0x8D, 0x61, 0x30, 0xF0, 0x21, 0x6A,
+0xD0, 0xF4, 0xAE, 0xA2, 0x01, 0x6C, 0xC4, 0x67,
+0xC4, 0xED, 0xCF, 0xED, 0xD0, 0xF4, 0xCE, 0xA2,
+0xAC, 0xEB, 0xFF, 0x6D, 0x84, 0xEE, 0x10, 0xF0,
+0x24, 0x6E, 0xFC, 0xF6, 0xD0, 0x9E, 0xAC, 0xEC,
+0x80, 0xC6, 0xD0, 0xF4, 0x8E, 0xA2, 0xAC, 0xEC,
+0x01, 0x4C, 0xAC, 0xEC, 0xD0, 0xF4, 0x8E, 0xC2,
+0xD0, 0xF4, 0xAE, 0xA2, 0x03, 0x6C, 0xAC, 0xEC,
+0xD0, 0xF4, 0x8E, 0xC2, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0, 0x81, 0xA2,
+0x08, 0x6D, 0x01, 0x4C, 0x40, 0xF0, 0x81, 0xC2,
+0x40, 0xF0, 0x81, 0xA2, 0xAE, 0xEC, 0x1A, 0x2C,
+0x40, 0xF0, 0x81, 0xC2, 0x17, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x8C, 0x9A, 0x02, 0x6E,
+0x40, 0x9C, 0xCD, 0xEA, 0x40, 0xDC, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF6, 0x54, 0x9A, 0x60, 0xC2,
+0xD0, 0xF4, 0x6E, 0xA5, 0xFF, 0x6A, 0x4C, 0xEB,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF6, 0x58, 0x9A,
+0x60, 0xC2, 0x02, 0x10, 0x1F, 0xF7, 0x1C, 0x2B,
+0x03, 0x91, 0x02, 0x90, 0x02, 0x63, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF7, 0x54, 0x9A, 0xFF, 0x68,
+0x60, 0xA2, 0x6C, 0xE8, 0x1D, 0x20, 0x00, 0x6B,
+0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x01, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF7, 0x58, 0x9A, 0x20, 0x6B,
+0x20, 0x70, 0x60, 0xC2, 0x0D, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
+0x24, 0x6C, 0x80, 0xF0, 0x6C, 0x9A, 0x5C, 0xF3,
+0x94, 0x9C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x1C, 0x96, 0x45,
+0x00, 0x18, 0xB7, 0xE1, 0x05, 0x6C, 0x01, 0x6D,
+0x00, 0x18, 0x2A, 0xD3, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0xFF, 0x17, 0xDE, 0x63, 0x43, 0x62,
+0x42, 0xD1, 0x41, 0xD0, 0x01, 0x6A, 0x7D, 0x67,
+0x4B, 0xEA, 0x58, 0xC3, 0x01, 0x6A, 0x5A, 0xC3,
+0x08, 0x6A, 0x5B, 0xC3, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2,
+0x76, 0x4B, 0x74, 0x33, 0x49, 0xE3, 0x66, 0xA2,
+0x7F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x7E, 0x30,
+0x80, 0xF0, 0x1C, 0x61, 0x48, 0xA4, 0xBD, 0x67,
+0x5C, 0xC5, 0x41, 0xA4, 0x5D, 0xC5, 0x42, 0xA4,
+0x5E, 0xC5, 0x46, 0xA4, 0x20, 0xF0, 0x40, 0xC5,
+0x43, 0xA4, 0x5F, 0xC5, 0x47, 0xA4, 0x20, 0xF0,
+0x41, 0xC5, 0x5C, 0xA5, 0x80, 0xF0, 0x04, 0x2A,
+0x7D, 0x67, 0x5F, 0xA3, 0x7E, 0xA3, 0x40, 0x32,
+0x6D, 0xEA, 0x03, 0x72, 0x05, 0x60, 0x08, 0x72,
+0x21, 0x60, 0x02, 0x72, 0x37, 0x60, 0x78, 0x10,
+0x06, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x06, 0x04, 0x40, 0xEA, 0x9D, 0x67,
+0x20, 0xF0, 0xE1, 0xA4, 0x20, 0xF0, 0x40, 0xA4,
+0xFF, 0xF7, 0x1F, 0x6B, 0xE0, 0x37, 0x5D, 0xE7,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x50, 0x9A,
+0x30, 0xF0, 0x20, 0x6D, 0x05, 0x6C, 0xEC, 0xF6,
+0x06, 0x4D, 0x00, 0xF2, 0x00, 0x6E, 0x6C, 0xEF,
+0x40, 0xEA, 0x75, 0x10, 0xBD, 0x67, 0x30, 0xF0,
+0x20, 0x6B, 0x10, 0x6A, 0x5B, 0xC5, 0x30, 0xF0,
+0x20, 0x69, 0x4E, 0xF2, 0x50, 0x9B, 0x09, 0xF6,
+0x04, 0x49, 0x09, 0x04, 0xB1, 0x67, 0x04, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6C, 0x4E, 0xF2,
+0x50, 0x9C, 0xA4, 0x41, 0x0A, 0x04, 0x04, 0x6E,
+0x40, 0xEA, 0x42, 0x10, 0x06, 0x20, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x06, 0x04,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0xEB, 0xF6, 0x74, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x27, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x50, 0x9A, 0x40, 0xEA, 0xEB, 0xF6,
+0x60, 0xA0, 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x18, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF7, 0x5C, 0x9A, 0xEB, 0xF6, 0xCC, 0x98,
+0x00, 0x6B, 0x40, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF3, 0x48, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0xB5, 0xF4, 0x01, 0x4C, 0x40, 0x9A, 0xA3, 0x67,
+0x01, 0x6F, 0x5B, 0xE6, 0x04, 0xD3, 0x00, 0x18,
+0xFC, 0xE9, 0x29, 0x10, 0x00, 0x18, 0x28, 0xEB,
+0x26, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
+0x54, 0x9A, 0x40, 0xEA, 0xEB, 0xF6, 0xB2, 0xA8,
+0x00, 0x6C, 0x00, 0x18, 0xD5, 0xEA, 0x1B, 0x10,
+0x1A, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x13, 0x10, 0x14, 0x2A, 0x69, 0xA4,
+0xBD, 0x67, 0x7C, 0xC5, 0x68, 0xA4, 0x5E, 0xC5,
+0x5F, 0xC5, 0x7D, 0xC5, 0x46, 0xA4, 0x20, 0xF0,
+0x40, 0xC5, 0x67, 0xA4, 0x08, 0x20, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x20, 0xF0,
+0x61, 0xC5, 0x06, 0x04, 0x40, 0xEA, 0x43, 0x97,
+0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
+0x68, 0x44, 0xFA, 0x4B, 0x4C, 0xEB, 0x04, 0x5B,
+0x03, 0x60, 0x80, 0x18, 0xE3, 0x18, 0x4C, 0x10,
+0x09, 0x74, 0x30, 0x60, 0x0A, 0x5C, 0x07, 0x60,
+0x03, 0x74, 0x21, 0x60, 0x08, 0x74, 0x25, 0x60,
+0x02, 0x74, 0x12, 0x60, 0x35, 0x10, 0x0C, 0x74,
+0x13, 0x60, 0x0D, 0x5C, 0x03, 0x60, 0x0A, 0x74,
+0x26, 0x60, 0x2E, 0x10, 0x0D, 0x74, 0x03, 0x60,
+0x24, 0x74, 0x26, 0x60, 0x29, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF5, 0x48, 0x9A, 0x08, 0x10,
+0x85, 0x67, 0x00, 0x18, 0xEB, 0xEA, 0x2C, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x44, 0x9A,
+0x85, 0x67, 0x40, 0xEA, 0x25, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF5, 0x54, 0x9A, 0x40, 0xEA,
+0x1F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5,
+0x58, 0x9A, 0xF2, 0x17, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF5, 0x5C, 0x9A, 0xED, 0x17, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x40, 0x9A, 0xE8, 0x17,
+0x85, 0x67, 0x00, 0x18, 0xF8, 0xF3, 0x0C, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF3, 0x94, 0x9C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0xFF, 0x6A,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0xA0, 0xA4, 0xC7, 0xA2, 0x02, 0x6B, 0x01, 0x68,
+0x6B, 0xEB, 0x0C, 0xED, 0xCC, 0xEB, 0xAD, 0xEB,
+0x67, 0xC2, 0xA1, 0xA4, 0x0C, 0xEB, 0xA8, 0xC2,
+0x82, 0xA4, 0x89, 0xC2, 0x49, 0xA2, 0x06, 0xD2,
+0x20, 0x23, 0x01, 0x69, 0x2B, 0xE9, 0xD1, 0x67,
+0x00, 0x6C, 0x42, 0x6D, 0x00, 0x18, 0x8D, 0xE7,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3, 0xE8, 0x9B,
+0xD1, 0x67, 0x00, 0x6C, 0x4D, 0xEF, 0x42, 0x6D,
+0x00, 0x18, 0xA0, 0xE7, 0x06, 0x96, 0x64, 0x6A,
+0x10, 0xF0, 0x24, 0x6C, 0x01, 0x4E, 0x58, 0xEE,
+0xFB, 0xF1, 0x15, 0x4C, 0x00, 0x6D, 0xF1, 0x67,
+0x04, 0xD0, 0x12, 0xEE, 0x00, 0x18, 0xFC, 0xE9,
+0x06, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0xFB, 0xF1,
+0x15, 0x4C, 0x00, 0x18, 0xE9, 0xE9, 0x0B, 0x97,
+0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x60, 0xA4, 0x01, 0x6A, 0x04, 0x67, 0x4C, 0xEB,
+0x68, 0x23, 0x61, 0xA4, 0x08, 0x5B, 0x17, 0x60,
+0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF7, 0xA0, 0x9C,
+0xC7, 0x43, 0x22, 0x67, 0xE0, 0x9D, 0x10, 0x4B,
+0x01, 0x4E, 0x82, 0x67, 0x24, 0xEB, 0x84, 0xEE,
+0x71, 0x67, 0xED, 0xEB, 0x8F, 0xEC, 0x6C, 0xEC,
+0x60, 0xA0, 0x66, 0x33, 0x4C, 0xEB, 0x64, 0xEE,
+0x6D, 0xEC, 0x80, 0xDD, 0x15, 0x10, 0x10, 0xF0,
+0x24, 0x6C, 0x3C, 0xF7, 0xC4, 0x9C, 0x87, 0x43,
+0x01, 0x4C, 0xA0, 0x9E, 0xE2, 0x67, 0xE4, 0xEC,
+0x87, 0x67, 0xAD, 0xEC, 0xA2, 0x67, 0xA4, 0xEB,
+0xAF, 0xED, 0xAC, 0xEC, 0xA0, 0xA0, 0xA6, 0x35,
+0x4C, 0xED, 0xA4, 0xEB, 0xAD, 0xEC, 0x80, 0xDE,
+0x41, 0xA0, 0x08, 0x5A, 0x07, 0x60, 0x10, 0xF0,
+0x24, 0x6B, 0x3C, 0xF7, 0x80, 0x9B, 0x08, 0x4A,
+0xA0, 0x9C, 0x05, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF7, 0x84, 0x9B, 0xA0, 0x9C, 0x01, 0x6B,
+0x64, 0xEA, 0xAE, 0xEB, 0x60, 0xDC, 0x80, 0xA0,
+0x00, 0x6D, 0x92, 0x34, 0x00, 0x18, 0xA3, 0xC8,
+0x80, 0xA0, 0x01, 0x6D, 0x22, 0x67, 0x92, 0x34,
+0x00, 0x18, 0xA3, 0xC8, 0x9D, 0x67, 0x24, 0x6B,
+0x70, 0xC4, 0x08, 0x6B, 0x6F, 0xCC, 0x22, 0x33,
+0x73, 0xC4, 0x62, 0x33, 0x74, 0xC4, 0x56, 0xC4,
+0x42, 0x33, 0x00, 0xF6, 0x42, 0x32, 0x59, 0xC4,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A,
+0x32, 0xC4, 0x77, 0xC4, 0x00, 0xF6, 0x22, 0x31,
+0x62, 0x33, 0x35, 0xC4, 0x78, 0xC4, 0x04, 0x04,
+0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x24, 0x67, 0x30, 0xF0,
+0x20, 0x6C, 0x28, 0xF5, 0x1C, 0x4C, 0xB1, 0x67,
+0x05, 0x6E, 0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA,
+0xC0, 0xF1, 0x08, 0x48, 0x46, 0xA1, 0xC8, 0xF3,
+0x99, 0xA0, 0x7F, 0x6B, 0x5E, 0x32, 0x5C, 0x32,
+0x8C, 0xEB, 0x4D, 0xEB, 0xC8, 0xF3, 0x79, 0xC0,
+0x46, 0xA1, 0x1F, 0x6C, 0x68, 0xF3, 0xB7, 0xA0,
+0x4C, 0xEC, 0x20, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x8D, 0xEA, 0xC8, 0xF3, 0x59, 0xC0, 0x66, 0xA1,
+0x03, 0x6C, 0xB6, 0x35, 0x76, 0x33, 0x8C, 0xEB,
+0x74, 0x34, 0x61, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
+0x8D, 0xEB, 0x91, 0x67, 0xC8, 0xF3, 0x79, 0xC0,
+0x00, 0x18, 0x33, 0xD1, 0x68, 0xF3, 0x58, 0xA0,
+0x0C, 0x72, 0x04, 0x61, 0x00, 0x6C, 0x01, 0x6D,
+0x00, 0x18, 0x0A, 0xD6, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF0, 0x11, 0x4A,
+0x08, 0xD4, 0x40, 0xDB, 0x41, 0xA4, 0x24, 0x67,
+0x06, 0xD2, 0x60, 0xA4, 0x02, 0x6A, 0x6C, 0xEA,
+0x06, 0x93, 0x07, 0xD3, 0x02, 0x22, 0x42, 0xA4,
+0x07, 0xD2, 0x06, 0x90, 0x1C, 0x10, 0x08, 0x93,
+0x01, 0x6D, 0x90, 0x67, 0x40, 0xA3, 0x4C, 0xED,
+0x00, 0x18, 0x23, 0xC8, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF5, 0x58, 0x9A, 0x90, 0x67, 0x40, 0xEA,
+0x05, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x54, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF5, 0x50, 0x9A, 0x90, 0x67, 0x40, 0xEA,
+0x01, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0x07, 0x92,
+0x03, 0xEA, 0xE1, 0x60, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF6, 0x85, 0xA2, 0x06, 0x92, 0x8E, 0xEA,
+0x22, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x58, 0x9A, 0x40, 0xEA, 0x1C, 0x2A, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x00, 0x18,
+0x6F, 0xED, 0x68, 0xF3, 0x97, 0xA0, 0x96, 0x34,
+0x00, 0x18, 0x3F, 0xCD, 0x68, 0xF3, 0x79, 0xA0,
+0x05, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3,
+0x7A, 0xA0, 0x68, 0xF3, 0x59, 0xC0, 0x02, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x03, 0x6B, 0x6B, 0xEB,
+0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0, 0x30, 0xF0,
+0x20, 0x6A, 0x60, 0xA1, 0xCC, 0xF1, 0x50, 0xA2,
+0x72, 0x34, 0x15, 0x2A, 0x04, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
+0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
+0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x05, 0x74,
+0x15, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCC, 0xF1,
+0x52, 0xA2, 0x10, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2, 0x50, 0x9A,
+0x60, 0xDA, 0xF0, 0x17, 0x63, 0xA1, 0x07, 0x6A,
+0x01, 0x6C, 0x6C, 0xEA, 0x60, 0xA1, 0x8C, 0xEB,
+0x1E, 0x2B, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x69, 0xF3, 0xC8, 0xA3, 0x84, 0xEA,
+0x1F, 0x6F, 0xCA, 0x35, 0x8F, 0xEC, 0xEC, 0xED,
+0x8C, 0xED, 0x7D, 0x6C, 0x8B, 0xEC, 0xA8, 0x35,
+0xCC, 0xEC, 0xAD, 0xEC, 0x69, 0xF3, 0x88, 0xC3,
+0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6, 0x84, 0xA4,
+0x8E, 0xEA, 0x20, 0x2A, 0x01, 0x6A, 0x4B, 0xEA,
+0x69, 0xF3, 0x49, 0xC3, 0x1B, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x69, 0xF3,
+0xC8, 0xA3, 0x1F, 0x6F, 0x84, 0xEA, 0xCA, 0x35,
+0xEC, 0xED, 0xAD, 0xEC, 0xEC, 0xEC, 0x88, 0x35,
+0x7D, 0x6C, 0x8B, 0xEC, 0xCC, 0xEC, 0xAD, 0xEC,
+0x69, 0xF3, 0x88, 0xC3, 0x30, 0xF0, 0x20, 0x6C,
+0xEF, 0xF6, 0x84, 0xA4, 0x8E, 0xEA, 0x02, 0x2A,
+0x69, 0xF3, 0x89, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2,
+0x02, 0x6B, 0x8C, 0xEB, 0x1C, 0x23, 0x03, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0x69, 0xF3, 0x68, 0xC2,
+0x00, 0x18, 0x3F, 0xE9, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x04, 0x93, 0xCF, 0xF5, 0x5C, 0x9A,
+0x6E, 0xEA, 0x03, 0x22, 0x04, 0x94, 0x00, 0x18,
+0x60, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B,
+0x8D, 0xEB, 0x69, 0xF3, 0x68, 0xC2, 0x0D, 0x97,
+0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
+0x4C, 0xEC, 0x68, 0x44, 0xC8, 0x4B, 0x4C, 0xEB,
+0x20, 0x5B, 0x05, 0x67, 0x09, 0x60, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF6, 0x4B, 0xA2, 0x40, 0xF1,
+0x0F, 0x2A, 0x80, 0x18, 0x9F, 0x1B, 0x4C, 0x11,
+0x2F, 0x74, 0x40, 0xF1, 0x09, 0x60, 0x30, 0x5C,
+0x48, 0x60, 0x1D, 0x74, 0xA0, 0xF0, 0x1E, 0x60,
+0x1E, 0x5C, 0x1E, 0x60, 0x15, 0x74, 0xA0, 0xF0,
+0x05, 0x60, 0x16, 0x5C, 0x0C, 0x60, 0x01, 0x74,
+0x80, 0xF0, 0x14, 0x60, 0x80, 0xF0, 0x0E, 0x24,
+0x09, 0x74, 0x80, 0xF0, 0x13, 0x60, 0x10, 0x74,
+0x80, 0xF0, 0x14, 0x60, 0x22, 0x11, 0x17, 0x74,
+0x80, 0xF0, 0x1C, 0x60, 0x17, 0x5C, 0x80, 0xF0,
+0x15, 0x61, 0x19, 0x74, 0x80, 0xF0, 0x1A, 0x60,
+0x1C, 0x74, 0x80, 0xF0, 0x1B, 0x60, 0x15, 0x11,
+0x23, 0x74, 0x20, 0xF1, 0x01, 0x60, 0x24, 0x5C,
+0x0D, 0x60, 0x1F, 0x74, 0x80, 0xF0, 0x19, 0x60,
+0x1F, 0x5C, 0x80, 0xF0, 0x1A, 0x61, 0x20, 0x74,
+0x80, 0xF0, 0x1B, 0x60, 0x21, 0x74, 0x00, 0xF1,
+0x13, 0x60, 0x03, 0x11, 0x2C, 0x74, 0xA0, 0xF0,
+0x00, 0x60, 0x2D, 0x5C, 0x07, 0x60, 0x24, 0x74,
+0x80, 0xF0, 0x13, 0x60, 0x27, 0x74, 0x80, 0xF0,
+0x14, 0x60, 0xF7, 0x10, 0x2D, 0x74, 0x80, 0xF0,
+0x18, 0x60, 0x2E, 0x74, 0x80, 0xF0, 0x19, 0x60,
+0xF0, 0x10, 0x69, 0x74, 0xC0, 0xF0, 0x01, 0x60,
+0x6A, 0x5C, 0x28, 0x60, 0x63, 0x74, 0xA0, 0xF0,
+0x04, 0x60, 0x64, 0x5C, 0x10, 0x60, 0x60, 0x74,
+0x80, 0xF0, 0x13, 0x60, 0x61, 0x5C, 0x04, 0x60,
+0x30, 0x74, 0x80, 0xF0, 0x0A, 0x60, 0xDD, 0x10,
+0x61, 0x74, 0x80, 0xF0, 0x0E, 0x60, 0x62, 0x74,
+0x80, 0xF0, 0x0F, 0x60, 0xD6, 0x10, 0x66, 0x74,
+0x80, 0xF0, 0x1B, 0x60, 0x67, 0x5C, 0x07, 0x60,
+0x64, 0x74, 0x80, 0xF0, 0x0E, 0x60, 0x65, 0x74,
+0x80, 0xF0, 0x0F, 0x60, 0xCA, 0x10, 0x67, 0x74,
+0x80, 0xF0, 0x13, 0x60, 0x68, 0x74, 0x80, 0xF0,
+0x14, 0x60, 0xC3, 0x10, 0x71, 0x74, 0xA0, 0xF0,
+0x08, 0x60, 0x72, 0x5C, 0x10, 0x60, 0x6E, 0x74,
+0x80, 0xF0, 0x17, 0x60, 0x6F, 0x5C, 0x04, 0x60,
+0x6D, 0x74, 0x80, 0xF0, 0x0E, 0x60, 0xB5, 0x10,
+0x6F, 0x74, 0x80, 0xF0, 0x12, 0x60, 0x70, 0x74,
+0x80, 0xF0, 0x13, 0x60, 0xAE, 0x10, 0xC9, 0x74,
+0x80, 0xF0, 0x1B, 0x60, 0xCA, 0x5C, 0x07, 0x60,
+0xBA, 0x74, 0x80, 0xF0, 0x12, 0x60, 0xC3, 0x74,
+0x80, 0xF0, 0x1F, 0x60, 0xA2, 0x10, 0xCB, 0x74,
+0x80, 0xF0, 0x13, 0x60, 0xD1, 0x74, 0x80, 0xF0,
+0x14, 0x60, 0x9B, 0x10, 0x85, 0x67, 0x00, 0x18,
+0xBD, 0xD9, 0xA6, 0x10, 0x85, 0x67, 0x00, 0x18,
+0x1C, 0xDC, 0xA2, 0x10, 0x85, 0x67, 0x00, 0x18,
+0x7E, 0xC5, 0x9E, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xE9, 0x08, 0x9A, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x40, 0x09, 0x96, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x58, 0x09, 0x92, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xB0, 0x09, 0x8E, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x64, 0x09, 0x8A, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x49, 0x0B, 0x86, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x4A, 0x0B, 0x90, 0x67, 0x00, 0x18, 0xBE, 0xC5,
+0x7F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x27, 0xC6,
+0x7B, 0x10, 0x85, 0x67, 0x00, 0x18, 0xF9, 0xDB,
+0x77, 0x10, 0x85, 0x67, 0x00, 0x18, 0x7D, 0xC6,
+0x73, 0x10, 0x85, 0x67, 0x00, 0x18, 0x74, 0xC6,
+0x6F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x41, 0xC6,
+0x6B, 0x10, 0x85, 0x67, 0x00, 0x18, 0xCA, 0xD9,
+0x67, 0x10, 0x85, 0x67, 0x00, 0x18, 0xEE, 0xDF,
+0x63, 0x10, 0x85, 0x67, 0x00, 0x18, 0x74, 0xE0,
+0x5F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x54, 0xD6,
+0x5B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x65, 0xD6,
+0x57, 0x10, 0x85, 0x67, 0x00, 0x18, 0x6C, 0xD6,
+0x53, 0x10, 0x85, 0x67, 0x00, 0x18, 0x73, 0xD6,
+0x4F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x7F, 0xD7,
+0x4B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x7A, 0xD6,
+0x47, 0x10, 0x85, 0x67, 0x00, 0x18, 0x87, 0xD6,
+0x43, 0x10, 0x85, 0x67, 0x00, 0x18, 0x8E, 0xD6,
+0x3F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x9C, 0xD6,
+0x3B, 0x10, 0x85, 0x67, 0x00, 0x18, 0xA3, 0xD6,
+0x37, 0x10, 0x85, 0x67, 0x00, 0x18, 0x0B, 0xD7,
+0x33, 0x10, 0x85, 0x67, 0x00, 0x18, 0x32, 0xD7,
+0x2F, 0x10, 0x85, 0x67, 0x00, 0x18, 0x41, 0xD7,
+0x2B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x51, 0xD7,
+0x27, 0x10, 0x85, 0x67, 0x00, 0x18, 0xFC, 0xD6,
+0x23, 0x10, 0x85, 0x67, 0x80, 0x18, 0x80, 0x08,
+0x1F, 0x10, 0x85, 0x67, 0x00, 0x18, 0xBE, 0xDB,
+0x1B, 0x10, 0x85, 0x67, 0x00, 0x18, 0x9C, 0xDB,
+0x17, 0x10, 0x85, 0x67, 0x00, 0x18, 0xC4, 0xF6,
+0x13, 0x10, 0x85, 0x67, 0x00, 0x18, 0xA5, 0xDE,
+0x0F, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x6C, 0x9A, 0x01, 0x6D, 0x40, 0x9B, 0xAD, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
+0x58, 0x9A, 0x80, 0xC2, 0x0E, 0x6A, 0x01, 0x10,
+0x00, 0x6A, 0x40, 0xC0, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
+0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF5,
+0x1D, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
+0x00, 0xF0, 0x00, 0x48, 0x40, 0xF0, 0x40, 0xA0,
+0x40, 0xF0, 0x61, 0xA0, 0x4E, 0xEB, 0x29, 0x23,
+0x4C, 0x32, 0x0D, 0xE2, 0x80, 0xA3, 0xA1, 0x42,
+0xB5, 0xE0, 0x00, 0x18, 0x9C, 0xDC, 0x40, 0xF0,
+0x40, 0xA0, 0x01, 0x4A, 0x40, 0xF0, 0x40, 0xC0,
+0x40, 0xF0, 0x60, 0xA0, 0x40, 0xF0, 0x41, 0xA0,
+0x6E, 0xEA, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x02, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0x40, 0xF0, 0x60, 0xA2, 0x08, 0x6C, 0x8E, 0xEB,
+0x02, 0x2B, 0x40, 0xF0, 0x60, 0xC2, 0x00, 0x18,
+0x4C, 0xDA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x30, 0x68, 0x00, 0xF0,
+0x00, 0x48, 0xC1, 0xF7, 0x66, 0xA0, 0x7F, 0x6C,
+0xA7, 0x43, 0x6F, 0x4D, 0xB4, 0x35, 0x15, 0xE5,
+0x46, 0xA5, 0x8C, 0xEA, 0x20, 0x2A, 0x74, 0x33,
+0x09, 0xE3, 0xC1, 0xF6, 0x8E, 0xA2, 0xA2, 0x67,
+0xC1, 0xF6, 0x0F, 0x4D, 0x00, 0x18, 0x9C, 0xDC,
+0xC1, 0xF7, 0x46, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
+0x5C, 0xF7, 0x90, 0x9C, 0x54, 0x33, 0x0D, 0xE3,
+0xC1, 0xF6, 0xAC, 0xA3, 0x76, 0x4A, 0x54, 0x32,
+0xA0, 0xC4, 0xC1, 0xF6, 0x8D, 0xA3, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF7, 0x74, 0x9B, 0x41, 0xE0,
+0x80, 0xC3, 0x86, 0x40, 0x49, 0x10, 0x01, 0x72,
+0x49, 0x61, 0x74, 0x33, 0x0D, 0xE3, 0xC1, 0xF6,
+0x47, 0xA3, 0xFF, 0x72, 0x0C, 0x61, 0xC1, 0xF6,
+0x88, 0xA3, 0x06, 0x4D, 0x00, 0x18, 0x6E, 0xDB,
+0xC1, 0xF7, 0x66, 0xA0, 0x74, 0x33, 0x01, 0xE3,
+0xC1, 0xF6, 0x4E, 0xC0, 0x04, 0x10, 0x01, 0x6A,
+0x4B, 0xEA, 0xC1, 0xF6, 0x4E, 0xC3, 0x10, 0xF0,
+0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7,
+0x66, 0xA2, 0x10, 0xF0, 0x24, 0x6D, 0x5C, 0xF7,
+0xB0, 0x9D, 0x74, 0x34, 0x51, 0xE4, 0xC1, 0xF6,
+0xCC, 0xA4, 0x76, 0x4B, 0x74, 0x33, 0xC0, 0xC5,
+0xC1, 0xF6, 0xAD, 0xA4, 0x10, 0xF0, 0x24, 0x6C,
+0x5C, 0xF7, 0x94, 0x9C, 0x49, 0xE3, 0xA0, 0xC4,
+0x46, 0x82, 0x00, 0x52, 0x0B, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x1C, 0xF3, 0x8C, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2,
+0x76, 0x4B, 0x74, 0x33, 0x69, 0xE2, 0x86, 0x42,
+0x00, 0x18, 0x05, 0xDB, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
+0x70, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF6,
+0x05, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
+0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF7, 0x66, 0xA0,
+0xC1, 0xF7, 0x47, 0xA0, 0x6E, 0xEA, 0x4A, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0xA0, 0xF0, 0x6C, 0xAA, 0x01, 0xF0, 0x00, 0x73,
+0x10, 0x60, 0xA0, 0xF0, 0x8D, 0xA2, 0xA0, 0xF0,
+0x4C, 0xA2, 0xAE, 0x42, 0x8E, 0xED, 0x09, 0x25,
+0x01, 0xF1, 0x01, 0x73, 0x06, 0x60, 0x01, 0xF1,
+0x00, 0x73, 0x03, 0x60, 0xFF, 0x4A, 0x4E, 0xEC,
+0x0D, 0x2C, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x80, 0xF0, 0x4C, 0x9B, 0x04, 0x6C,
+0x8D, 0xEA, 0x02, 0x6C, 0x8D, 0xEA, 0x80, 0xF0,
+0x4C, 0xDB, 0x24, 0x10, 0x00, 0x18, 0x71, 0xDD,
+0xC1, 0xF7, 0x46, 0xA0, 0x01, 0x4A, 0xC1, 0xF7,
+0x46, 0xC0, 0xC1, 0xF7, 0x66, 0xA0, 0xC1, 0xF7,
+0x47, 0xA0, 0x6E, 0xEA, 0x0A, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
+0x6C, 0x9A, 0x02, 0x6C, 0x8D, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2, 0x08, 0x6C,
+0x8E, 0xEB, 0x02, 0x2B, 0xC1, 0xF7, 0x66, 0xC2,
+0x00, 0x18, 0xDF, 0xD9, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x44, 0x9A,
+0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEC, 0x40, 0xEA,
+0x05, 0x2A, 0x01, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF6, 0x6C, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xE0, 0xF1, 0x14, 0x68,
+0x0A, 0xD4, 0x24, 0x67, 0x90, 0x67, 0x04, 0x05,
+0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67, 0x50, 0xA3,
+0x01, 0x48, 0xE0, 0xF1, 0x1A, 0x70, 0x40, 0xC1,
+0x01, 0x49, 0xF4, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x0C, 0xF0, 0x6D, 0xA2,
+0x0C, 0xF0, 0x8E, 0xA2, 0x6C, 0x33, 0x94, 0x34,
+0x8D, 0xEB, 0x0C, 0xF0, 0x8C, 0xA2, 0x8D, 0xEB,
+0x0A, 0x94, 0x66, 0xC4, 0x0C, 0xF0, 0x6F, 0xA2,
+0x0C, 0xF0, 0x50, 0xA2, 0x68, 0x33, 0x58, 0x32,
+0x4D, 0xEB, 0x33, 0x6A, 0x4D, 0xEB, 0x67, 0xC4,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xE0, 0xF1, 0x10, 0x68,
+0x0A, 0xD4, 0x24, 0x67, 0x90, 0x67, 0x04, 0x05,
+0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67, 0x50, 0xA3,
+0x01, 0x48, 0xE0, 0xF1, 0x14, 0x70, 0x40, 0xC1,
+0x01, 0x49, 0xF4, 0x61, 0xE0, 0xF1, 0x1C, 0x6C,
+0x04, 0x05, 0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67,
+0x50, 0xA3, 0x0A, 0x93, 0x44, 0xC3, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x04, 0x00,
+0x90, 0x67, 0x00, 0x18, 0xED, 0xDD, 0xA0, 0xF1,
+0x02, 0x6A, 0x1F, 0xF7, 0x00, 0x6B, 0x4C, 0xEB,
+0x02, 0xF0, 0x00, 0x73, 0x01, 0x60, 0x05, 0x2B,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2, 0x60, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2,
+0x64, 0x9B, 0x80, 0xA0, 0x6D, 0xE2, 0x01, 0x4A,
+0xA0, 0xF1, 0x0A, 0x72, 0x80, 0xC3, 0x01, 0x48,
+0xE8, 0x61, 0x04, 0x00, 0x90, 0x67, 0x00, 0x18,
+0x07, 0xDE, 0xA0, 0xF1, 0x0A, 0x6A, 0x1F, 0xF7,
+0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
+0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF2, 0x60, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B, 0x80, 0xA0,
+0x6D, 0xE2, 0x01, 0x4A, 0xA0, 0xF1, 0x0F, 0x72,
+0x80, 0xC3, 0x01, 0x48, 0xE8, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF7, 0x58, 0x9A, 0x19, 0x6B,
+0x60, 0xC2, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x0C, 0xF0, 0x4C, 0xA0, 0x0B, 0x2A,
+0xE0, 0xF1, 0x1A, 0x6C, 0x04, 0x05, 0x00, 0x18,
+0xE3, 0xDD, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
+0x6C, 0xEA, 0x0C, 0xF0, 0x4C, 0xC0, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x0C, 0xF0,
+0x4E, 0xA0, 0x0A, 0x2A, 0xE0, 0xF1, 0x1A, 0x6C,
+0x04, 0x05, 0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67,
+0x50, 0xA3, 0x56, 0x32, 0x0C, 0xF0, 0x4E, 0xC0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x0C, 0xF0, 0x4F, 0xA0, 0x0B, 0x2A, 0xE0, 0xF1,
+0x1D, 0x6C, 0x04, 0x05, 0x00, 0x18, 0xE3, 0xDD,
+0x9D, 0x67, 0x70, 0xA4, 0x03, 0x6A, 0x6C, 0xEA,
+0x0C, 0xF0, 0x4F, 0xC0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x0C, 0xF0, 0x50, 0xA0,
+0x0C, 0x2A, 0xE0, 0xF1, 0x1D, 0x6C, 0x04, 0x05,
+0x00, 0x18, 0xE3, 0xDD, 0x7D, 0x67, 0x50, 0xA3,
+0x30, 0x6B, 0x6C, 0xEA, 0x53, 0x32, 0x0C, 0xF0,
+0x50, 0xC0, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0x04, 0x01, 0xC0, 0xF1, 0x08, 0x48, 0x01, 0x6A,
+0xE0, 0xF1, 0x1B, 0x6C, 0xB1, 0x67, 0x0C, 0xF0,
+0x48, 0xC0, 0x0C, 0xF0, 0x49, 0xC0, 0x0C, 0xF0,
+0x4A, 0xC0, 0x0C, 0xF0, 0x4B, 0xC0, 0x00, 0x18,
+0xE3, 0xDD, 0x9D, 0x67, 0x70, 0xA4, 0x07, 0x6A,
+0xE0, 0xF1, 0x1D, 0x6C, 0x6C, 0xEA, 0x0C, 0xF0,
+0x4C, 0xC0, 0x18, 0x6A, 0x6C, 0xEA, 0x4F, 0x32,
+0x76, 0x33, 0xB1, 0x67, 0x0C, 0xF0, 0x4D, 0xC0,
+0x0C, 0xF0, 0x6E, 0xC0, 0x00, 0x18, 0xE3, 0xDD,
+0x5D, 0x67, 0x70, 0xA2, 0x0C, 0x6A, 0x6C, 0xEA,
+0x4B, 0x32, 0x7A, 0x33, 0x0C, 0xF0, 0x4F, 0xC0,
+0x0C, 0xF0, 0x70, 0xC0, 0x00, 0x18, 0x3D, 0xDE,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7, 0x58, 0x9A,
+0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0xFD, 0x72,
+0x02, 0x61, 0x00, 0x18, 0x18, 0xDE, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x22, 0x6A, 0x7D, 0x67,
+0x50, 0xC3, 0x01, 0x6A, 0x4F, 0xCB, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A, 0x92, 0xC3,
+0x04, 0x04, 0x40, 0xEA, 0x09, 0x97, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x1A, 0x6A, 0x7D, 0x67, 0x50, 0xC3, 0x00, 0xF0,
+0x12, 0x04, 0x05, 0x6A, 0x4F, 0xCB, 0x00, 0x18,
+0x07, 0xDE, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x58, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x09, 0x97,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x19, 0x6A, 0x7D, 0x67, 0x50, 0xC3, 0x00, 0xF0,
+0x12, 0x04, 0x08, 0x6A, 0x4F, 0xCB, 0x00, 0x18,
+0xED, 0xDD, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x58, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x09, 0x97,
+0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x40, 0xA4, 0x01, 0x72, 0x04, 0x61, 0x00, 0x18,
+0x9B, 0xDE, 0x00, 0x18, 0x91, 0xDE, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x00, 0x6B, 0x0C, 0xF5,
+0x7A, 0xC2, 0x00, 0x6B, 0x0C, 0xF5, 0x78, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF7, 0x7C, 0x9B,
+0x10, 0xF0, 0x24, 0x68, 0x7C, 0xF7, 0x00, 0x98,
+0xE0, 0x9B, 0xFF, 0x6A, 0x4C, 0xEC, 0x0C, 0xEF,
+0x08, 0x5C, 0x4C, 0xED, 0x4C, 0xEE, 0xE0, 0xDB,
+0x46, 0x60, 0xB0, 0x75, 0x2E, 0x61, 0xB2, 0x76,
+0x13, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7,
+0xA0, 0x9A, 0x01, 0x6A, 0x44, 0xEC, 0xC0, 0x9D,
+0x00, 0xF6, 0x40, 0x34, 0xCD, 0xEC, 0x80, 0xDD,
+0xC0, 0x9D, 0x40, 0x34, 0x80, 0x34, 0x8F, 0xEC,
+0xCC, 0xEC, 0x80, 0xDD, 0x80, 0x9B, 0x4E, 0x10,
+0xB1, 0x76, 0x80, 0xF0, 0x13, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF7, 0xA0, 0x9A, 0x01, 0x6A,
+0x44, 0xEC, 0xC0, 0x9D, 0x00, 0xF6, 0x40, 0x34,
+0xCD, 0xEC, 0x80, 0xDD, 0xC0, 0x9D, 0x40, 0x34,
+0x80, 0x34, 0x8F, 0xEC, 0xCC, 0xEC, 0x80, 0xDD,
+0x80, 0x9B, 0x4F, 0xEA, 0x8C, 0xEA, 0x40, 0xDB,
+0x7B, 0x10, 0xA0, 0x75, 0x7D, 0x61, 0xA1, 0x76,
+0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7,
+0x40, 0x9A, 0x01, 0x6B, 0x64, 0xEC, 0xA0, 0x9A,
+0x51, 0x10, 0xA2, 0x76, 0x6F, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF7, 0x40, 0x9A, 0x01, 0x6B,
+0x64, 0xEC, 0xA0, 0x9A, 0x5A, 0x10, 0xE8, 0x44,
+0x4C, 0xEF, 0x08, 0x5F, 0xE0, 0x6A, 0x65, 0x60,
+0xB0, 0x75, 0x35, 0x61, 0xB2, 0x76, 0x18, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7, 0x44, 0x9A,
+0x01, 0x6E, 0xA6, 0x67, 0x00, 0x9A, 0xA4, 0xEF,
+0xE5, 0x67, 0x00, 0xF6, 0xA0, 0x35, 0x0D, 0xED,
+0xA0, 0xDA, 0xA0, 0x9A, 0xE0, 0x37, 0xE0, 0x37,
+0xEF, 0xEF, 0xAC, 0xEF, 0xE0, 0xDA, 0x40, 0x9B,
+0xC4, 0xEC, 0x86, 0x67, 0x4D, 0xEC, 0x19, 0x10,
+0xB1, 0x76, 0x44, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF7, 0x44, 0x9A, 0x01, 0x6E, 0xA6, 0x67,
+0x00, 0x9A, 0xA4, 0xEF, 0xE5, 0x67, 0x00, 0xF6,
+0xA0, 0x35, 0x0D, 0xED, 0xA0, 0xDA, 0xA0, 0x9A,
+0xE0, 0x37, 0xE0, 0x37, 0xEF, 0xEF, 0xAC, 0xEF,
+0xE0, 0xDA, 0x40, 0x9B, 0xC4, 0xEC, 0xCF, 0xEC,
+0x4C, 0xEC, 0x80, 0xDB, 0x29, 0x10, 0xA0, 0x75,
+0x2B, 0x61, 0xA1, 0x76, 0x11, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF7, 0x44, 0x9A, 0x01, 0x6B,
+0x64, 0xEF, 0xA0, 0x9A, 0x00, 0xF6, 0x60, 0x34,
+0x8F, 0xEC, 0xAC, 0xEC, 0x80, 0xDA, 0x80, 0x9A,
+0x60, 0x33, 0x60, 0x33, 0x8D, 0xEB, 0x13, 0x10,
+0xA2, 0x76, 0x14, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF7, 0x44, 0x9A, 0x01, 0x6B, 0x64, 0xEF,
+0xA0, 0x9A, 0x00, 0xF6, 0x60, 0x34, 0x8F, 0xEC,
+0xAC, 0xEC, 0x80, 0xDA, 0x80, 0x9A, 0x60, 0x33,
+0x60, 0x33, 0x6F, 0xEB, 0x8C, 0xEB, 0x60, 0xDA,
+0xF0, 0x6A, 0x03, 0x10, 0xE2, 0x6A, 0x01, 0x10,
+0xE1, 0x6A, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
+0xFF, 0x6B, 0x6C, 0xEC, 0x08, 0x5C, 0x6C, 0xED,
+0x20, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7,
+0x44, 0x9A, 0x01, 0x6E, 0x40, 0xA2, 0x6C, 0xEA,
+0x47, 0xEC, 0xCC, 0xEA, 0x48, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF7, 0x48, 0x9A, 0xC4, 0xEC,
+0x86, 0x67, 0x40, 0xA2, 0x6C, 0xEA, 0xCC, 0xEA,
+0xCE, 0xEA, 0x3B, 0x2A, 0x05, 0x25, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF7, 0xAC, 0x9A, 0x24, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x4C, 0x9A,
+0x29, 0x10, 0xF8, 0x4C, 0x6C, 0xEC, 0x08, 0x5C,
+0xE0, 0x6A, 0x2E, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF7, 0x50, 0x9A, 0x01, 0x6E, 0x40, 0xA2,
+0x6C, 0xEA, 0x47, 0xEC, 0xCC, 0xEA, 0x23, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x54, 0x9A,
+0xC4, 0xEC, 0x86, 0x67, 0x40, 0xA2, 0x6C, 0xEA,
+0xCC, 0xEA, 0xCE, 0xEA, 0x16, 0x2A, 0x0A, 0x25,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0xB8, 0x9A,
+0x40, 0xA5, 0x6C, 0xEA, 0x8D, 0xEA, 0x6C, 0xEA,
+0x40, 0xC5, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF7, 0x58, 0x9A, 0xA0, 0xA2, 0x8F, 0xEC,
+0x6C, 0xEC, 0xAC, 0xEC, 0x80, 0xC2, 0xF0, 0x6A,
+0x20, 0xE8, 0xE5, 0x6A, 0x20, 0xE8, 0xE4, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x68, 0x24, 0x67,
+0x0C, 0xE9, 0x91, 0x67, 0xAC, 0xE8, 0xA1, 0x6E,
+0xA0, 0x6D, 0x00, 0x18, 0xB1, 0xDE, 0x91, 0x67,
+0xB0, 0x67, 0x00, 0x18, 0x14, 0xDF, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF7, 0x7C, 0x9A, 0x10, 0xF0, 0x24, 0x6D,
+0x7C, 0xF7, 0xA0, 0x9D, 0x40, 0x9B, 0xA2, 0x6E,
+0xAC, 0xEA, 0x40, 0xDB, 0xFF, 0x6A, 0x4C, 0xEC,
+0xA0, 0x6D, 0x00, 0x18, 0xB1, 0xDE, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6B, 0x6C, 0xEC,
+0x08, 0x5C, 0x0F, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF7, 0x44, 0x9A, 0x01, 0x6D, 0x40, 0xA2,
+0x6C, 0xEA, 0x47, 0xEC, 0xAC, 0xEA, 0x1F, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x48, 0x9A,
+0x13, 0x10, 0xF8, 0x4C, 0x6C, 0xEC, 0x08, 0x5C,
+0xE0, 0x6A, 0x16, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF7, 0x50, 0x9A, 0x01, 0x6D, 0x40, 0xA2,
+0x6C, 0xEA, 0x47, 0xEC, 0xAC, 0xEA, 0x0B, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x54, 0x9A,
+0x40, 0xA2, 0x4C, 0xEB, 0x67, 0xEC, 0x45, 0x67,
+0x6E, 0xEA, 0xAC, 0xEA, 0x20, 0xE8, 0x00, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6B, 0x6C, 0xEC,
+0x08, 0x5C, 0x1A, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF7, 0x44, 0x9A, 0x01, 0x6E, 0x40, 0xA2,
+0x6C, 0xEA, 0x47, 0xEC, 0xCC, 0xEA, 0x35, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7, 0x48, 0x9A,
+0xC4, 0xEC, 0x86, 0x67, 0xA0, 0xA2, 0x6C, 0xED,
+0xCC, 0xED, 0xCE, 0xED, 0x2A, 0x2D, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF7, 0x4C, 0x9A, 0x1E, 0x10,
+0xF8, 0x4C, 0x6C, 0xEC, 0x08, 0x5C, 0xE0, 0x6A,
+0x21, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7,
+0x50, 0x9A, 0x01, 0x6E, 0x40, 0xA2, 0x6C, 0xEA,
+0x47, 0xEC, 0xCC, 0xEA, 0x16, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF7, 0x54, 0x9A, 0xC4, 0xEC,
+0x86, 0x67, 0xA0, 0xA2, 0x6C, 0xED, 0xCC, 0xED,
+0xCE, 0xED, 0x0B, 0x2D, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF7, 0x58, 0x9A, 0x40, 0xA2, 0x4C, 0xEB,
+0x8C, 0xEB, 0x6E, 0xEC, 0x01, 0x5C, 0x58, 0x67,
+0x20, 0xE8, 0x00, 0x6A, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
+0x04, 0x67, 0x4C, 0xE8, 0xAC, 0xEA, 0xA4, 0x72,
+0x0C, 0x61, 0x90, 0x67, 0x00, 0x18, 0x57, 0xDF,
+0x01, 0x72, 0x04, 0x61, 0x90, 0x67, 0x00, 0x18,
+0x4C, 0xDF, 0x1F, 0x10, 0x90, 0x67, 0x00, 0x6D,
+0x0D, 0x10, 0xA5, 0x72, 0x11, 0x61, 0x90, 0x67,
+0x00, 0x18, 0x57, 0xDF, 0x01, 0x72, 0x04, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x4C, 0xDF, 0x18, 0x10,
+0x90, 0x67, 0x01, 0x6D, 0x00, 0x18, 0x41, 0xDF,
+0x90, 0x67, 0x00, 0x18, 0x4C, 0xDF, 0x14, 0x10,
+0x90, 0x67, 0x00, 0x18, 0x6F, 0xDF, 0x01, 0x72,
+0x07, 0x61, 0x90, 0x67, 0x01, 0x6D, 0x00, 0x18,
+0x41, 0xDF, 0x90, 0x67, 0x00, 0x6D, 0x06, 0x10,
+0x90, 0x67, 0x00, 0x6D, 0x00, 0x18, 0x41, 0xDF,
+0x90, 0x67, 0x01, 0x6D, 0x00, 0x18, 0x41, 0xDF,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x01, 0x72, 0xFF, 0xF7, 0x1F, 0x6C, 0xAC, 0xEC,
+0x05, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x58, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x40, 0xF2, 0x6E, 0xA2, 0x0B, 0x23, 0x40, 0xF2,
+0x6F, 0xA2, 0x04, 0x23, 0x40, 0xF2, 0x8C, 0xA2,
+0xA5, 0x6D, 0x07, 0x10, 0x40, 0xF2, 0x8C, 0xA2,
+0xA4, 0x6D, 0x03, 0x10, 0x40, 0xF2, 0x8C, 0xA2,
+0xA3, 0x6D, 0x00, 0x18, 0x92, 0xDF, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x30, 0xF0,
+0x20, 0x69, 0x4C, 0xEC, 0x4C, 0xEE, 0xFF, 0xF7,
+0x1F, 0x68, 0xEF, 0xF4, 0x08, 0x49, 0x04, 0xD4,
+0xAC, 0xE8, 0x05, 0xD6, 0x00, 0x18, 0xBD, 0xDF,
+0x40, 0xF2, 0x50, 0xA1, 0x2B, 0x22, 0x04, 0x94,
+0xB0, 0x67, 0x00, 0x18, 0xB2, 0xDF, 0x00, 0x18,
+0xBD, 0xDF, 0x40, 0xF2, 0x51, 0xA1, 0x01, 0x69,
+0x1E, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7,
+0x5C, 0x9A, 0x60, 0xA2, 0x10, 0x6A, 0x6C, 0xEA,
+0x19, 0x2A, 0x04, 0x94, 0xB0, 0x67, 0x00, 0x18,
+0xB2, 0xDF, 0x00, 0x18, 0xBD, 0xDF, 0xF1, 0x17,
+0x04, 0x94, 0xB0, 0x67, 0x01, 0x49, 0x00, 0x18,
+0xB2, 0xDF, 0x00, 0x18, 0xBD, 0xDF, 0x04, 0x94,
+0xB0, 0x67, 0x00, 0x18, 0xB2, 0xDF, 0x00, 0x18,
+0xBD, 0xDF, 0xFF, 0x6A, 0x4C, 0xE9, 0x05, 0x92,
+0x43, 0xE9, 0xEE, 0x61, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
+0x20, 0x6C, 0xEF, 0xF6, 0x0D, 0x4C, 0x07, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0x00, 0xF2, 0x85, 0xA3, 0x01, 0x6F,
+0xFF, 0x6A, 0xEC, 0xEC, 0x12, 0x24, 0x00, 0xF2,
+0xC5, 0xA3, 0x00, 0xF2, 0x66, 0xA3, 0xC6, 0x34,
+0xCA, 0x35, 0xCE, 0x36, 0xEC, 0xEC, 0xEC, 0xED,
+0xEC, 0xEE, 0x7F, 0x6F, 0x6C, 0xEF, 0x4C, 0xEC,
+0x4C, 0xED, 0x4C, 0xEE, 0x4C, 0xEF, 0x00, 0x18,
+0x5C, 0xC7, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0xFF, 0x6A,
+0x4C, 0xEC, 0x2F, 0x6B, 0xAC, 0xEA, 0xBD, 0x67,
+0x0D, 0xD7, 0x0C, 0xD6, 0x70, 0xC5, 0x0A, 0x6B,
+0x6F, 0xCD, 0xB2, 0xA5, 0x08, 0x6B, 0xDD, 0x67,
+0x30, 0xF0, 0x20, 0x68, 0x6B, 0xEB, 0xAC, 0xEB,
+0x53, 0xC6, 0x4E, 0xF2, 0x50, 0x98, 0x6D, 0xEC,
+0x92, 0xC6, 0x0C, 0x05, 0x05, 0x04, 0x04, 0x6E,
+0x40, 0xEA, 0x4E, 0xF2, 0x50, 0x98, 0x06, 0x04,
+0x0D, 0x05, 0x04, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A, 0x04, 0x04,
+0x40, 0xEA, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2, 0xD4, 0xA2,
+0x1F, 0x6B, 0xFF, 0x6D, 0xCC, 0xEB, 0x8E, 0xEB,
+0xAC, 0xEB, 0x80, 0xF0, 0x1B, 0x2B, 0x00, 0xF2,
+0x93, 0xA2, 0x01, 0x6B, 0x8C, 0xEB, 0xAC, 0xEB,
+0x07, 0x23, 0x00, 0xF2, 0x7C, 0x9A, 0x20, 0xF2,
+0x54, 0x9A, 0x6E, 0xEA, 0x80, 0xF0, 0x0E, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x00, 0xF2, 0x93, 0xA2, 0x10, 0x6B, 0x8C, 0xEB,
+0x06, 0x23, 0x20, 0xF2, 0x64, 0x9A, 0x20, 0xF2,
+0x5C, 0x9A, 0x6E, 0xEA, 0x7F, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF7, 0x40, 0x9A, 0x30, 0xF0,
+0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48, 0x40, 0x9A,
+0xFF, 0x69, 0x07, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF7, 0x44, 0x9A, 0x40, 0x9A, 0x06, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF7, 0x68, 0x9A,
+0x8F, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x48, 0x9A,
+0x00, 0x6C, 0xA4, 0x67, 0x40, 0x9A, 0x05, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF7, 0x5C, 0x9A,
+0x40, 0x9A, 0x04, 0xD2, 0x07, 0x96, 0x06, 0x97,
+0x00, 0x18, 0x04, 0xE0, 0x05, 0x96, 0x04, 0x97,
+0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18, 0x04, 0xE0,
+0x00, 0xF2, 0x73, 0xA0, 0x10, 0x6A, 0x6C, 0xEA,
+0x22, 0x22, 0x20, 0xF2, 0xC4, 0x98, 0x20, 0xF2,
+0xE8, 0x98, 0x76, 0x35, 0x02, 0x6C, 0x2C, 0xED,
+0x00, 0x18, 0x04, 0xE0, 0x00, 0xF2, 0xB3, 0xA0,
+0x20, 0xF2, 0xCC, 0x98, 0x20, 0xF2, 0xF0, 0x98,
+0xB6, 0x35, 0x04, 0x6C, 0x2C, 0xED, 0x00, 0x18,
+0x04, 0xE0, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x50, 0x9A, 0x30, 0xF0, 0x20, 0x6C, 0x30, 0xF0,
+0x20, 0x6D, 0x2F, 0xF7, 0x04, 0x4C, 0x0F, 0xF7,
+0x0C, 0x4D, 0x10, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2,
+0x93, 0xA2, 0x01, 0x6B, 0x8C, 0xEB, 0x1E, 0x23,
+0x00, 0xF2, 0xDC, 0x9A, 0x20, 0xF2, 0x74, 0x9A,
+0xCE, 0xEB, 0x18, 0x23, 0x86, 0x35, 0x07, 0x6B,
+0x20, 0xF2, 0xE0, 0x9A, 0x6C, 0xED, 0xFF, 0x6B,
+0x03, 0x6C, 0x6C, 0xED, 0x00, 0x18, 0x04, 0xE0,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x30, 0xF0, 0x20, 0x6C, 0x30, 0xF0, 0x20, 0x6D,
+0x0F, 0xF7, 0x1C, 0x4C, 0x0F, 0xF7, 0x04, 0x4D,
+0x08, 0x6E, 0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91,
+0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67,
+0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6, 0x1B, 0x4C,
+0x07, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2, 0x93, 0xA2,
+0x10, 0x6B, 0x8C, 0xEB, 0x05, 0x23, 0x96, 0x34,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x80, 0xEC,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6, 0x5C, 0xA2,
+0x1F, 0x6C, 0xFF, 0x68, 0x4C, 0xEC, 0x0C, 0x4C,
+0x01, 0x6A, 0x44, 0xEC, 0x82, 0x67, 0x00, 0x18,
+0xD6, 0xE0, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF7,
+0x6C, 0x9A, 0x08, 0x6C, 0x40, 0xA3, 0x0C, 0xEA,
+0x8D, 0xEA, 0x0C, 0xEA, 0x40, 0xC3, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0xF7, 0x1F, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0x8C, 0xEA, 0x9C, 0xF7, 0x70, 0x9B, 0x10, 0xF0,
+0x24, 0x6C, 0x9C, 0xF7, 0x94, 0x9C, 0xCC, 0xEB,
+0x40, 0xF6, 0xA0, 0x35, 0x8D, 0xEB, 0x1F, 0xF7,
+0x00, 0x6C, 0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74,
+0xAD, 0xEB, 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0,
+0x24, 0x6C, 0xFC, 0xF2, 0x80, 0x9C, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2, 0x84, 0x9C,
+0x89, 0xE2, 0x60, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x1F, 0xF7,
+0x00, 0x6C, 0x4C, 0xEC, 0xFF, 0x6B, 0x02, 0xF0,
+0x00, 0x74, 0xAC, 0xEB, 0x01, 0x60, 0x05, 0x2C,
+0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2, 0x80, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2,
+0x84, 0x9C, 0x91, 0xE2, 0x00, 0x6D, 0xA0, 0xDC,
+0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF7, 0x90, 0x9C,
+0xD4, 0x36, 0x40, 0xF6, 0x60, 0x33, 0x8C, 0xEE,
+0x6D, 0xEE, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF7,
+0x74, 0x9B, 0x6D, 0xEE, 0x1F, 0xF7, 0x00, 0x6B,
+0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60,
+0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2,
+0x60, 0x9B, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF2, 0x64, 0x9B, 0x69, 0xE2, 0xC0, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0x0F, 0xF5, 0x00, 0x6B,
+0x78, 0xEE, 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA,
+0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF7, 0x90, 0x9C,
+0x40, 0xF6, 0xA0, 0x35, 0x12, 0xEB, 0x8C, 0xEB,
+0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF7, 0x94, 0x9C,
+0xAD, 0xEB, 0x8D, 0xEB, 0x1F, 0xF7, 0x00, 0x6C,
+0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60,
+0x05, 0x2C, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF2,
+0x80, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6C,
+0xFC, 0xF2, 0x84, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF7, 0x40, 0x9A, 0x40, 0x9A, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x4C, 0x9B, 0x8D, 0xEA, 0x4C, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF7, 0x68, 0x9B, 0x80, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7, 0x6C, 0x9B,
+0x40, 0xDB, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7,
+0x70, 0x9A, 0xC0, 0x6A, 0xFF, 0x68, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7, 0x54, 0x9A,
+0x01, 0x6B, 0x05, 0x97, 0x40, 0xA2, 0x0C, 0xEA,
+0x5E, 0x32, 0x6E, 0xEA, 0x6C, 0xEA, 0x0C, 0xEA,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
+0x24, 0x6A, 0xD0, 0xF3, 0x01, 0x4A, 0x40, 0xDB,
+0x00, 0x68, 0x28, 0x10, 0x82, 0xF3, 0x08, 0x70,
+0x11, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x6C, 0x9A, 0x02, 0xF0, 0x00, 0x6C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF7, 0x58, 0x9A, 0x03, 0x6B, 0x6B, 0xEB,
+0x60, 0xC2, 0x18, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
+0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x14, 0x6C, 0x40, 0xEA,
+0x33, 0x58, 0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF7, 0x5C, 0x9A, 0x60, 0xA2, 0x08, 0x6A,
+0x6C, 0xEA, 0x04, 0x2A, 0x00, 0x18, 0xDF, 0xE0,
+0x01, 0x72, 0xD4, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF7, 0x58, 0x9A, 0x02, 0x6B, 0x6B, 0xEB,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2,
+0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A, 0xD0, 0xF3,
+0x02, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0x05, 0x5C, 0x5E, 0x60,
+0x10, 0xF0, 0x24, 0x6A, 0x88, 0x34, 0x9C, 0xF1,
+0x10, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x48, 0x9B,
+0xAD, 0xEA, 0xC0, 0xF1, 0x48, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF7, 0x78, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7, 0x7C, 0x9B,
+0x32, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x41, 0x9B, 0xAD, 0xEA, 0x41, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x60, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7,
+0x64, 0x9B, 0x21, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x42, 0x9B, 0xAD, 0xEA,
+0x42, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7,
+0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF7, 0x6C, 0x9B, 0x10, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x43, 0x9B,
+0xAD, 0xEA, 0x43, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF7, 0x70, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF7, 0x74, 0x9B, 0x40, 0xDB,
+0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x44, 0x9B, 0xAD, 0xEA, 0x44, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x78, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7,
+0x7C, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x05, 0x5C, 0x63, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x88, 0x34, 0xBC, 0xF1, 0x04, 0x4A, 0x89, 0xE2,
+0x40, 0x9A, 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x88, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA,
+0xC0, 0xF1, 0x48, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF7, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF7, 0x58, 0x9A, 0x35, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x81, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x41, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x64, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7,
+0x40, 0x9A, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x82, 0x9B, 0xAF, 0xEA,
+0x8C, 0xEA, 0x42, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF7, 0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF7, 0x48, 0x9A, 0x11, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x83, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x43, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x74, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7,
+0x50, 0x9A, 0xA0, 0xDA, 0x20, 0xE8, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x84, 0x9B,
+0xAF, 0xEA, 0x8C, 0xEA, 0x44, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF7, 0x7C, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7, 0x58, 0x9A,
+0xA0, 0xDA, 0x20, 0xE8, 0x01, 0x74, 0x15, 0x60,
+0x03, 0x24, 0x02, 0x74, 0x23, 0x60, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x4E, 0x9B, 0xAD, 0xEA, 0x4E, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF3, 0x68, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7, 0x60, 0x9B,
+0x21, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x4F, 0x9B, 0xAD, 0xEA, 0x4F, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF7, 0x60, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7,
+0x64, 0x9B, 0x10, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x50, 0x9B, 0xAD, 0xEA,
+0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7,
+0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF7, 0x6C, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
+0x01, 0x74, 0x16, 0x60, 0x03, 0x24, 0x02, 0x74,
+0x25, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x8E, 0x9B, 0xAF, 0xEA,
+0x8C, 0xEA, 0x4E, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF7, 0x60, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A, 0x23, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x8F, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x4F, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7, 0x64, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
+0x40, 0x9A, 0x11, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x90, 0x9B, 0xAF, 0xEA,
+0x8C, 0xEA, 0x50, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF7, 0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF7, 0x48, 0x9A, 0xA0, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6C,
+0xBC, 0xF7, 0x9C, 0x9C, 0x00, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x48, 0xDB, 0xC0, 0xF1,
+0x08, 0x4B, 0x41, 0xDB, 0x42, 0xDB, 0x43, 0xDB,
+0x44, 0xDB, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
+0xDC, 0xF7, 0x84, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
+0x24, 0x6C, 0xDC, 0xF7, 0x8C, 0x9C, 0x40, 0xDC,
+0x10, 0xF0, 0x24, 0x6C, 0xDC, 0xF7, 0x94, 0x9C,
+0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0xDC, 0xF7,
+0x9C, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
+0xFC, 0xF7, 0x80, 0x9C, 0x4E, 0xDB, 0x4F, 0xDB,
+0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF7,
+0x84, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x24, 0x6C,
+0xFC, 0xF7, 0x8C, 0x9C, 0x50, 0xDB, 0x40, 0xDC,
+0x4C, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7,
+0x6C, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7, 0x78, 0x9B,
+0x01, 0x6A, 0x4B, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF7, 0x60, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x68, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7,
+0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF3, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF7, 0x60, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7, 0x6C, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7,
+0x68, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0xFF, 0x6A, 0x4C, 0xEC, 0x05, 0x5C, 0x4C, 0xED,
+0x00, 0x6A, 0x61, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x88, 0x34, 0xBC, 0xF1, 0x18, 0x4A, 0x89, 0xE2,
+0x40, 0x9A, 0x00, 0xEA, 0x05, 0x2D, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF7, 0x58, 0x9A, 0x0A, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7, 0x58, 0x9A,
+0x0C, 0x10, 0x07, 0x2D, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF7, 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x39, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7,
+0x5C, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
+0x46, 0x32, 0x2F, 0x10, 0x09, 0x2D, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF7, 0x5C, 0x9A, 0x60, 0xA2,
+0xFF, 0x6A, 0x6C, 0xEA, 0x4A, 0x32, 0x25, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7, 0x5C, 0x9A,
+0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0x4E, 0x32,
+0x1C, 0x10, 0x09, 0x2D, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF7, 0x5C, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0x6C, 0xEA, 0x52, 0x32, 0x12, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF7, 0x5C, 0x9A, 0x60, 0xA2,
+0xFF, 0x6A, 0x6C, 0xEA, 0x56, 0x32, 0x09, 0x10,
+0x0B, 0x2D, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7,
+0x5C, 0x9A, 0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA,
+0x5A, 0x32, 0x01, 0x6B, 0x6C, 0xEA, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7, 0x5C, 0x9A,
+0x40, 0xA2, 0x00, 0xF6, 0x40, 0x32, 0x00, 0xF6,
+0x43, 0x32, 0xC0, 0xF7, 0x42, 0x32, 0x20, 0xE8,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0x69, 0x8C, 0xE9, 0x00, 0x68, 0xFF, 0x6A,
+0x0C, 0xEA, 0x2E, 0xEA, 0x10, 0x2A, 0x91, 0x67,
+0x00, 0x18, 0x72, 0xEC, 0x91, 0x67, 0x00, 0x18,
+0x61, 0xEC, 0x91, 0x67, 0x00, 0x18, 0x79, 0xEC,
+0x91, 0x67, 0x00, 0x18, 0x33, 0xEC, 0x91, 0x67,
+0x00, 0x18, 0x40, 0xEC, 0x0F, 0x10, 0x90, 0x67,
+0x00, 0x18, 0x98, 0xEC, 0x90, 0x67, 0x00, 0x18,
+0x87, 0xEC, 0x90, 0x67, 0x00, 0x18, 0x9F, 0xEC,
+0x90, 0x67, 0x00, 0x18, 0x57, 0xEC, 0x90, 0x67,
+0x00, 0x18, 0x4D, 0xEC, 0x01, 0x48, 0x05, 0x70,
+0xDA, 0x61, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0xFF, 0xF7, 0x1F, 0x69, 0x8C, 0xE9, 0x1D, 0xF0,
+0x84, 0x9A, 0xFF, 0x6B, 0x8E, 0x6A, 0xA0, 0xA4,
+0x00, 0x68, 0x6C, 0xED, 0xAC, 0xEA, 0x40, 0xC4,
+0x71, 0x6A, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
+0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x88, 0x9A,
+0x01, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
+0x6C, 0xEA, 0x40, 0xC4, 0x19, 0x10, 0x64, 0x70,
+0x0D, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF3,
+0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x00, 0x6A, 0x1C, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
+0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x48, 0x9A,
+0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xDF, 0x2A,
+0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x49, 0x4C, 0xE9,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4, 0x48, 0x9A,
+0x20, 0xCA, 0x01, 0x6A, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0x30, 0xF0, 0x20, 0x6B, 0xFF, 0x69, 0x4E, 0xF2,
+0x4C, 0x9B, 0x2C, 0xED, 0xFF, 0xF7, 0x1F, 0x68,
+0x11, 0xD7, 0x8C, 0xE8, 0x08, 0xD5, 0x04, 0x04,
+0x00, 0x6D, 0xCC, 0xE9, 0x04, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x4C, 0x9B,
+0x05, 0x04, 0x00, 0x6D, 0x04, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0x9B,
+0x11, 0x95, 0x04, 0x04, 0x04, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0x9B,
+0x12, 0x95, 0x06, 0x04, 0x04, 0x6E, 0x40, 0xEA,
+0x00, 0xF1, 0x00, 0x58, 0x08, 0x61, 0x0E, 0xF0,
+0x40, 0x40, 0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA,
+0x00, 0xF1, 0x00, 0x5A, 0x39, 0x60, 0x08, 0x92,
+0x04, 0x72, 0x11, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x40, 0x9A, 0xFF, 0x6B, 0x49, 0xE0,
+0x40, 0xA2, 0x4C, 0xEB, 0x5F, 0x21, 0x06, 0x94,
+0x8F, 0xEA, 0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB,
+0x6D, 0xEA, 0x04, 0xD2, 0x57, 0x10, 0x08, 0x92,
+0x05, 0x72, 0x12, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x40, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0x49, 0xE0, 0x40, 0xAA, 0x4C, 0xEB, 0x7F, 0x21,
+0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA, 0x04, 0x93,
+0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2, 0x77, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A,
+0x49, 0xE0, 0x60, 0x9A, 0x80, 0xF0, 0x1E, 0x21,
+0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA, 0x04, 0x93,
+0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2, 0x96, 0x10,
+0x01, 0xF0, 0x00, 0x58, 0x09, 0x61, 0x0D, 0xF7,
+0x40, 0x40, 0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA,
+0x00, 0xF7, 0x00, 0x5A, 0x80, 0xF0, 0x17, 0x60,
+0x08, 0x92, 0x04, 0x72, 0x31, 0x61, 0x1F, 0xF7,
+0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
+0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x49, 0xE0,
+0x60, 0xA2, 0xFF, 0x6A, 0x6C, 0xEA, 0x07, 0x21,
+0x06, 0x94, 0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92,
+0x8C, 0xEA, 0x4D, 0xEB, 0x04, 0xD3, 0x1F, 0xF7,
+0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
+0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x7D, 0x67,
+0x41, 0xE0, 0x50, 0xA3, 0x40, 0xC0, 0x7E, 0x10,
+0x08, 0x92, 0x05, 0x72, 0x32, 0x61, 0x1F, 0xF7,
+0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
+0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x49, 0xE0,
+0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
+0x07, 0x21, 0x06, 0x94, 0x8F, 0xEB, 0x4C, 0xEB,
+0x04, 0x92, 0x8C, 0xEA, 0x4D, 0xEB, 0x04, 0xD3,
+0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0,
+0x00, 0x72, 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A,
+0x7D, 0x67, 0x41, 0xE0, 0x48, 0xAB, 0x40, 0xC8,
+0x49, 0x10, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
+0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x44, 0x9A, 0x49, 0xE0, 0x60, 0x9A, 0x07, 0x21,
+0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA, 0x04, 0x93,
+0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2, 0x1F, 0xF7,
+0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
+0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x41, 0xE0,
+0x04, 0x92, 0x40, 0xD8, 0x1B, 0x10, 0xFF, 0xF7,
+0x1C, 0x6A, 0x0C, 0xEA, 0x01, 0x6D, 0x82, 0x67,
+0xAB, 0xED, 0x08, 0xD2, 0x00, 0x18, 0x42, 0xE7,
+0x05, 0xD2, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEB,
+0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
+0x04, 0xD3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x50, 0x9A, 0x08, 0x94, 0x04, 0x96, 0x01, 0x6D,
+0xAB, 0xED, 0x40, 0xEA, 0x0D, 0x97, 0x0C, 0x91,
+0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0x41, 0x9C, 0x61, 0xA4, 0x01, 0xAC, 0x06, 0xD2,
+0x42, 0x9C, 0xFF, 0x73, 0x07, 0xD2, 0x00, 0x6A,
+0x59, 0x60, 0x7F, 0x6D, 0x6C, 0xED, 0x4C, 0x45,
+0xFF, 0x6B, 0x6C, 0xEA, 0x0E, 0x5A, 0x08, 0x60,
+0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32, 0xDC, 0xF1,
+0x0C, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
+0x03, 0x6A, 0x48, 0x10, 0x61, 0xA4, 0x80, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6E, 0x07, 0x03,
+0x90, 0x67, 0x4C, 0xEE, 0x06, 0x07, 0x04, 0xD3,
+0x00, 0x18, 0x62, 0xE2, 0x1F, 0x10, 0x81, 0xA4,
+0x80, 0x6A, 0xFF, 0x69, 0x64, 0x67, 0x4C, 0xEB,
+0x0C, 0xE9, 0x02, 0x32, 0x01, 0x6E, 0x82, 0x67,
+0xB1, 0x67, 0xCB, 0xEE, 0x08, 0xD3, 0x09, 0xD2,
+0x00, 0x18, 0x8D, 0xE7, 0x08, 0x93, 0x07, 0x23,
+0x07, 0x94, 0x8F, 0xEB, 0x4C, 0xEB, 0x06, 0x92,
+0x8C, 0xEA, 0x4D, 0xEB, 0x06, 0xD3, 0x09, 0x94,
+0x06, 0x97, 0x01, 0x6E, 0xB1, 0x67, 0xCB, 0xEE,
+0x00, 0x18, 0xA0, 0xE7, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x29, 0xF4, 0x7C, 0x9A,
+0x06, 0x94, 0x61, 0xE0, 0x49, 0xF4, 0x60, 0x9A,
+0x29, 0xF4, 0x1C, 0xDA, 0x6D, 0xE4, 0x49, 0xF4,
+0x60, 0xDA, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x04, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x58, 0x9A, 0x90, 0x67,
+0x40, 0xEA, 0x01, 0x6A, 0x0D, 0x97, 0x0C, 0x91,
+0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7, 0x88, 0x9A,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0xA0, 0x9C, 0x4C, 0x9B, 0xAC, 0xEA, 0x4D, 0xDB,
+0x40, 0xDC, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0xD1,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF7,
+0x38, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7,
+0x00, 0x4A, 0x40, 0x9A, 0x60, 0x99, 0x10, 0xF0,
+0x24, 0x6C, 0xA0, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF7, 0x48, 0x9A, 0xDC, 0xF7, 0x10, 0x4C,
+0x80, 0x9C, 0x00, 0x9A, 0x1A, 0x65, 0x10, 0xF0,
+0x24, 0x6A, 0x80, 0x9C, 0xDC, 0xF7, 0x18, 0x4A,
+0x40, 0x9A, 0x01, 0xD4, 0x30, 0xF0, 0x20, 0x6C,
+0x40, 0x9A, 0xC0, 0xF1, 0xE8, 0x9C, 0x00, 0xD2,
+0x44, 0x67, 0xC0, 0xF1, 0x08, 0x4A, 0xC1, 0x9A,
+0x83, 0x9A, 0x6C, 0xEF, 0xAC, 0xEE, 0x01, 0x93,
+0xA2, 0x9A, 0xE5, 0xDA, 0x6C, 0xEC, 0x0C, 0xED,
+0x64, 0x9A, 0x00, 0x90, 0x88, 0xDA, 0xC6, 0xDA,
+0x0C, 0xEB, 0xA7, 0xDA, 0x69, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF7, 0x00, 0x4A, 0x40, 0x9A,
+0xE0, 0xD9, 0x18, 0x67, 0xC0, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF7, 0x10, 0x4A, 0x40, 0x9A,
+0xA0, 0xD8, 0x80, 0xDA, 0x10, 0xF0, 0x24, 0x6C,
+0xDC, 0xF7, 0x18, 0x4C, 0x80, 0x9C, 0x60, 0xDC,
+0x05, 0x91, 0x04, 0x90, 0x03, 0x63, 0x20, 0xE8,
+0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF3, 0x08, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF7, 0xE0, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF7, 0xC8, 0x9A, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0x98,
+0xAE, 0x9A, 0x60, 0x9F, 0x20, 0x9E, 0x8C, 0xED,
+0x8F, 0x9A, 0xB1, 0xDA, 0x6C, 0xEC, 0x70, 0x9A,
+0x92, 0xDA, 0x2C, 0xEB, 0x73, 0xDA, 0xA0, 0xD8,
+0x80, 0xDF, 0x60, 0xDE, 0x01, 0x91, 0x00, 0x90,
+0x01, 0x63, 0x20, 0xE8, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x50, 0x9A, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x20, 0xE8, 0x00, 0x65,
+0xFF, 0x6A, 0x4C, 0xEC, 0x07, 0x6D, 0xB8, 0xEC,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x01, 0x6E, 0x12, 0xEC, 0x71, 0xE4, 0xE9, 0xF0,
+0xA5, 0xA4, 0xCC, 0xED, 0x1D, 0x25, 0xE9, 0xF0,
+0xA6, 0xA4, 0x29, 0xF1, 0x60, 0x9B, 0xE9, 0xF0,
+0x85, 0xA4, 0x75, 0xE5, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF6, 0x60, 0x9B, 0xBC, 0x35, 0x21, 0x4D,
+0x75, 0xE5, 0xE0, 0xA5, 0x9E, 0x33, 0x9A, 0x34,
+0xCC, 0xEC, 0x78, 0x33, 0x9C, 0x34, 0x4C, 0xEF,
+0x8D, 0xEB, 0xED, 0xEB, 0x00, 0xF6, 0x60, 0x33,
+0x00, 0xF6, 0x63, 0x33, 0x4C, 0xEB, 0x60, 0xC5,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x9D, 0xA2, 0x04, 0x6B, 0x8D, 0xEB,
+0x68, 0xF3, 0x7D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x4C, 0x9A,
+0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0,
+0x50, 0x9A, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
+0x1D, 0xF0, 0x54, 0x9A, 0x40, 0xA2, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF7, 0x5C, 0x9A, 0x40, 0xA2,
+0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x58, 0x9A,
+0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0,
+0x5C, 0x9A, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
+0x3D, 0xF0, 0x40, 0x9A, 0x40, 0xA2, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF3, 0x48, 0x9A, 0x40, 0xA2,
+0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x23, 0x00, 0x6B,
+0x08, 0xF3, 0x6B, 0xC2, 0x08, 0xF3, 0x6C, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x23, 0x00, 0x6B,
+0x08, 0xF3, 0x6B, 0xC2, 0x08, 0xF3, 0x6C, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x23, 0x00, 0x6B,
+0x08, 0xF3, 0x6B, 0xC2, 0x08, 0xF3, 0x6C, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF3, 0x90, 0x9C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x20, 0xE8,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF6, 0x85, 0xA3, 0x6E, 0xF5, 0x58, 0x9A,
+0x40, 0xEA, 0x01, 0x6B, 0x6E, 0xEA, 0x1E, 0x2A,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x68, 0xF3, 0xB4, 0xA3, 0x7F, 0x6C, 0xAC, 0xEC,
+0x15, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0xBC, 0xF3,
+0x9C, 0x9C, 0x00, 0x6D, 0x40, 0xC4, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A, 0x02, 0x6C,
+0x80, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x50, 0x9A, 0xE8, 0xF3, 0xC5, 0xA3, 0xFF, 0x6C,
+0x55, 0x4C, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6D,
+0xC0, 0xF1, 0x08, 0x4D, 0x68, 0xF3, 0xD4, 0xA5,
+0x7F, 0x6B, 0xFF, 0x6A, 0xCC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x0D, 0x2B, 0x08, 0xF3, 0xAA, 0xA5,
+0x01, 0x6B, 0x6C, 0xED, 0x4C, 0xED, 0x07, 0x2D,
+0x30, 0xF0, 0x21, 0x6D, 0x70, 0xF3, 0xBC, 0xA5,
+0xAC, 0xEB, 0x4C, 0xEB, 0x18, 0x23, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2, 0x01, 0x6A,
+0x4C, 0xEB, 0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B,
+0x70, 0xF3, 0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x07, 0x22, 0x00, 0x18, 0x28, 0xF0,
+0x01, 0x72, 0x05, 0x61, 0x00, 0x18, 0xFD, 0xF1,
+0x02, 0x10, 0x00, 0x18, 0x61, 0xCE, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0x24, 0x67, 0x6E, 0xF5,
+0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3, 0xFF, 0x68,
+0x0C, 0xE9, 0x40, 0xEA, 0x01, 0x72, 0x19, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
+0x0C, 0xEB, 0x0F, 0x23, 0x68, 0xF3, 0x9D, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x68, 0xF3,
+0x7D, 0xC2, 0x68, 0xF3, 0x5D, 0xA2, 0x07, 0x6B,
+0x6C, 0xEA, 0x03, 0x2A, 0x91, 0x67, 0x00, 0x18,
+0x7A, 0xCC, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0x24, 0x67, 0x6E, 0xF5,
+0x58, 0x9A, 0xEF, 0xF6, 0x85, 0xA3, 0xFF, 0x68,
+0x0C, 0xE9, 0x40, 0xEA, 0x01, 0x6B, 0x6E, 0xEA,
+0x29, 0x2A, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x68, 0xF3, 0xB4, 0xA3, 0x7F, 0x6C,
+0xAC, 0xEC, 0x0C, 0xEC, 0x1F, 0x24, 0x10, 0xF0,
+0x24, 0x6C, 0xBC, 0xF3, 0x9C, 0x9C, 0x40, 0xC4,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x48, 0x9A,
+0x02, 0x6C, 0x80, 0xC2, 0x68, 0xF3, 0x99, 0xA3,
+0x03, 0x6A, 0x4B, 0xEA, 0x4C, 0xEC, 0x68, 0xF3,
+0x99, 0xC3, 0x68, 0xF3, 0x9D, 0xA3, 0x8C, 0xEA,
+0x68, 0xF3, 0x5D, 0xC3, 0x68, 0xF3, 0x5D, 0xA3,
+0x07, 0x6B, 0x6C, 0xEA, 0x03, 0x2A, 0x91, 0x67,
+0x00, 0x18, 0x7A, 0xCC, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0xBD, 0xA2,
+0x05, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB, 0x68, 0xF3,
+0x7D, 0xC2, 0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18,
+0x7A, 0xCC, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0x24, 0x67, 0x6E, 0xF5, 0x58, 0x9A, 0xEF, 0xF6,
+0x85, 0xA3, 0xFF, 0x68, 0x0C, 0xE9, 0x40, 0xEA,
+0x01, 0x72, 0x1B, 0x61, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0x94, 0xA3,
+0x7F, 0x6A, 0x8C, 0xEA, 0x0C, 0xEA, 0x11, 0x22,
+0x68, 0xF3, 0x75, 0xA3, 0x10, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x0C, 0xEA, 0x20, 0x72, 0x06, 0x60,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
+0x40, 0xEA, 0x03, 0x10, 0x91, 0x67, 0x00, 0x18,
+0x6A, 0xCE, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0x08, 0x2B,
+0xC0, 0xF0, 0x7D, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
+0x4E, 0xE9, 0x02, 0x29, 0x00, 0x18, 0xE2, 0xEE,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0x00, 0xF2, 0xB3, 0xA3, 0x04, 0x67,
+0x01, 0x6C, 0xFF, 0x6A, 0xAC, 0xEC, 0x4C, 0xEC,
+0x4C, 0xE8, 0x13, 0x24, 0xA6, 0x32, 0x07, 0x6C,
+0x8C, 0xEA, 0x0E, 0xEA, 0x0E, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF7, 0x44, 0x9A, 0x40, 0x9A,
+0x20, 0xF2, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF7, 0x40, 0x9A, 0x40, 0x9A, 0x00, 0xF2,
+0x5C, 0xDB, 0x90, 0x67, 0x00, 0x18, 0x42, 0xCA,
+0x80, 0xF0, 0x0E, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF4, 0x72, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
+0x08, 0x2B, 0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3,
+0x7C, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x0C, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x56, 0xA2, 0x02, 0x72, 0x36, 0x60, 0x30, 0xF0,
+0x21, 0x6A, 0x90, 0xF3, 0x57, 0xA2, 0x02, 0x72,
+0x30, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x68, 0xF3, 0xB4, 0xA2, 0x7F, 0x6B,
+0xFF, 0x6C, 0xAC, 0xEB, 0x0D, 0x2B, 0x08, 0xF3,
+0x6A, 0xA2, 0x01, 0x6A, 0x4C, 0xEB, 0x8C, 0xEB,
+0x07, 0x2B, 0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3,
+0x7C, 0xA3, 0x6C, 0xEA, 0x8C, 0xEA, 0x09, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0x02, 0x72, 0x13, 0x60, 0x90, 0x67, 0x00, 0x18,
+0x3A, 0xCF, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0x09, 0x2B,
+0xC0, 0xF0, 0x7D, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
+0x0E, 0xEA, 0x03, 0x2A, 0x90, 0x67, 0x80, 0x18,
+0x6B, 0x0E, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0xF2, 0xA5, 0xA2, 0x01, 0x6C,
+0xFF, 0x6B, 0xAC, 0xEC, 0x39, 0x24, 0xB6, 0x34,
+0x8E, 0xE8, 0x36, 0x28, 0x00, 0xF2, 0xA8, 0xA2,
+0x00, 0xF2, 0xC7, 0xA2, 0x7F, 0x6C, 0x8C, 0xED,
+0x8C, 0xEE, 0x00, 0xF2, 0x88, 0xA2, 0x6C, 0xED,
+0x6C, 0xEE, 0x9E, 0x34, 0x6C, 0xEC, 0x05, 0x2C,
+0xB4, 0x35, 0xD0, 0x4D, 0xFF, 0xF7, 0x1F, 0x6A,
+0x4C, 0xED, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0xF2, 0xE6, 0xA2, 0x7F, 0x6B,
+0xEC, 0xEB, 0x40, 0xF2, 0x6C, 0xC2, 0x00, 0xF2,
+0x65, 0xA2, 0x01, 0x6F, 0x66, 0x30, 0xEC, 0xE8,
+0x40, 0xF2, 0x0D, 0xC2, 0x00, 0xF2, 0x07, 0xA2,
+0x1E, 0x30, 0x40, 0xF2, 0x10, 0xC2, 0x6A, 0x30,
+0x6E, 0x33, 0xEC, 0xEB, 0xEC, 0xE8, 0x40, 0xF2,
+0x6F, 0xC2, 0x00, 0x6B, 0x40, 0xF2, 0x0E, 0xC2,
+0x40, 0xF2, 0x71, 0xC2, 0x00, 0x18, 0xCB, 0xDF,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF0, 0x44, 0x9A,
+0xFF, 0x69, 0x8C, 0xE9, 0x60, 0xA2, 0x03, 0x6A,
+0x6C, 0xEA, 0x03, 0x72, 0x08, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0x3D, 0xF0, 0x68, 0x9A, 0x7F, 0x6A,
+0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2,
+0x93, 0xA2, 0x10, 0x6B, 0x8C, 0xEB, 0x27, 0x23,
+0x96, 0x33, 0x2E, 0xEB, 0x24, 0x2B, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF7, 0x88, 0x9B, 0x8F, 0x6B,
+0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF7, 0x64, 0x9B, 0x60, 0x9B,
+0x20, 0xF2, 0x68, 0xDA, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF7, 0x60, 0x9B, 0x60, 0x9B, 0x20, 0xF2,
+0x64, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF7,
+0x7C, 0x9B, 0x60, 0x9B, 0x20, 0xF2, 0x70, 0xDA,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0x68, 0x9B,
+0x60, 0x9B, 0x20, 0xF2, 0x6C, 0xDA, 0x30, 0xF0,
+0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48, 0x00, 0xF2,
+0x6C, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x66, 0x22,
+0x76, 0x32, 0x2E, 0xEA, 0x63, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF3, 0x48, 0x9A, 0x7D, 0x67,
+0x00, 0xF0, 0x1A, 0x04, 0x40, 0x9A, 0x05, 0x05,
+0x04, 0x6E, 0x05, 0xD2, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF7, 0x5C, 0x9A, 0x40, 0x9A, 0x04, 0xD2,
+0x2D, 0x6A, 0x58, 0xC3, 0x09, 0x6A, 0x53, 0xCB,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0x9B,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2,
+0x50, 0x9B, 0x04, 0x05, 0x04, 0x6E, 0x00, 0xF0,
+0x1E, 0x04, 0x40, 0xEA, 0x5D, 0x67, 0x20, 0xF0,
+0x22, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x58, 0x9A, 0x06, 0x04, 0x40, 0xEA, 0x00, 0xF2,
+0x8F, 0xA0, 0x00, 0xF2, 0xAF, 0xA0, 0x00, 0xF2,
+0xCE, 0xA0, 0xFF, 0x6B, 0x7F, 0x6A, 0x9E, 0x34,
+0x4C, 0xED, 0x4C, 0xEE, 0x6C, 0xEC, 0x6C, 0xED,
+0x6C, 0xEE, 0x05, 0x2C, 0xB4, 0x35, 0xD0, 0x4D,
+0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xED, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x00, 0xF2,
+0xED, 0xA2, 0x7F, 0x6B, 0xEC, 0xEB, 0x40, 0xF2,
+0x6C, 0xC2, 0x00, 0xF2, 0x6C, 0xA2, 0x01, 0x6F,
+0x66, 0x30, 0xEC, 0xE8, 0x40, 0xF2, 0x0D, 0xC2,
+0x00, 0xF2, 0x0E, 0xA2, 0x1E, 0x30, 0x40, 0xF2,
+0x10, 0xC2, 0x6A, 0x30, 0x6E, 0x33, 0xEC, 0xEB,
+0xEC, 0xE8, 0x40, 0xF2, 0x6F, 0xC2, 0x00, 0x6B,
+0x40, 0xF2, 0x0E, 0xC2, 0x40, 0xF2, 0x71, 0xC2,
+0x00, 0x18, 0xCB, 0xDF, 0x0D, 0x97, 0x0C, 0x91,
+0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xDF, 0xD9,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x68, 0xF3, 0x7A, 0xA0, 0x01, 0x6A, 0xFF, 0x69,
+0x6C, 0xEA, 0x2C, 0xEC, 0x2C, 0xEA, 0x04, 0xD4,
+0x19, 0x22, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x00, 0x6D, 0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18,
+0xEC, 0xE1, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
+0x6C, 0xEA, 0xFA, 0x4B, 0x48, 0x32, 0x8C, 0xEB,
+0x4D, 0xEB, 0x04, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x68, 0xF3, 0x7A, 0xC0, 0x03, 0x22, 0x04, 0x94,
+0x00, 0x18, 0x7A, 0xCC, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x68, 0xF3, 0x7A, 0xA0, 0x02, 0x6A, 0xFF, 0x69,
+0x6C, 0xEA, 0x2C, 0xEC, 0x2C, 0xEA, 0x04, 0xD4,
+0x20, 0x22, 0x03, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x01, 0x6D, 0x68, 0xF3, 0x5A, 0xC0, 0x00, 0x18,
+0xEC, 0xE1, 0x68, 0xF3, 0x9A, 0xA0, 0x01, 0x6B,
+0x4C, 0xEB, 0x09, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
+0x68, 0xF3, 0x94, 0xA0, 0x6C, 0x33, 0x6D, 0xEA,
+0x7F, 0x6B, 0x8C, 0xEB, 0x2C, 0xEB, 0x68, 0xF3,
+0x5A, 0xC0, 0x07, 0x23, 0x08, 0x6B, 0x4C, 0xEB,
+0x2C, 0xEB, 0x03, 0x23, 0x04, 0x94, 0x00, 0x18,
+0x7A, 0xCC, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0xA9, 0xF0, 0x68, 0xA0, 0x11, 0x6A,
+0xFF, 0x69, 0x6C, 0xEA, 0x11, 0x72, 0x27, 0x61,
+0xC9, 0xF0, 0x64, 0xA0, 0x02, 0x6A, 0x6C, 0xEA,
+0x2C, 0xEA, 0x21, 0x22, 0x04, 0x94, 0x03, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x01, 0x6D, 0xC9, 0xF0,
+0x44, 0xC0, 0x00, 0x18, 0xEC, 0xE1, 0xC9, 0xF0,
+0x84, 0xA0, 0x01, 0x6B, 0x4C, 0xEB, 0x05, 0x6A,
+0x4B, 0xEA, 0x68, 0x33, 0x8C, 0xEA, 0x6D, 0xEA,
+0x04, 0x6B, 0x4C, 0xEB, 0x2C, 0xEB, 0xC9, 0xF0,
+0x44, 0xC0, 0x09, 0x23, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x66, 0xA2,
+0x01, 0x4B, 0xE0, 0xF0, 0x66, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF6, 0x4B, 0xA2, 0x03, 0x2A,
+0x04, 0x94, 0x80, 0x18, 0x94, 0x0D, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x08, 0xF3,
+0x6A, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x25, 0x22,
+0x08, 0xF3, 0x4D, 0xA0, 0x04, 0x72, 0x21, 0x60,
+0x08, 0xF3, 0x4E, 0xA0, 0x02, 0x72, 0x1D, 0x60,
+0x02, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x18, 0x6D, 0xC5, 0x15, 0x10,
+0x00, 0x18, 0x1C, 0xF2, 0x08, 0xF3, 0x4E, 0xA0,
+0x08, 0x72, 0x06, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x0C, 0x6C, 0x06, 0x10,
+0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x04, 0x6C, 0x00, 0x6D, 0xC5, 0x67,
+0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x08, 0xF3, 0x6A, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x25, 0x22, 0x08, 0xF3, 0x4D, 0xA0,
+0x04, 0x72, 0x21, 0x60, 0x08, 0xF3, 0x4E, 0xA0,
+0x02, 0x72, 0x1D, 0x60, 0x02, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x18,
+0x6D, 0xC5, 0x15, 0x10, 0x00, 0x18, 0x1C, 0xF2,
+0x08, 0xF3, 0x4E, 0xA0, 0x08, 0x72, 0x06, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x0C, 0x6C, 0x06, 0x10, 0x08, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x6C,
+0x00, 0x6D, 0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x08, 0xF3,
+0x6A, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x25, 0x22,
+0x08, 0xF3, 0x4D, 0xA0, 0x04, 0x72, 0x21, 0x60,
+0x08, 0xF3, 0x4E, 0xA0, 0x02, 0x72, 0x1D, 0x60,
+0x02, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x00, 0x18, 0x6D, 0xC5, 0x15, 0x10,
+0x00, 0x18, 0x1C, 0xF2, 0x08, 0xF3, 0x4E, 0xA0,
+0x08, 0x72, 0x06, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x0C, 0x6C, 0x06, 0x10,
+0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x04, 0x6C, 0x00, 0x6D, 0xC5, 0x67,
+0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x08, 0xF3, 0x6A, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x2F, 0x22, 0x08, 0xF3, 0x4D, 0xA0,
+0x04, 0x72, 0x2B, 0x60, 0x08, 0xF3, 0x4E, 0xA0,
+0x02, 0x72, 0x27, 0x60, 0x02, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x18,
+0x6D, 0xC5, 0x1F, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
+0xC4, 0x67, 0x40, 0xEA, 0x00, 0x18, 0xB6, 0xC4,
+0x08, 0xF3, 0x4E, 0xA0, 0x0C, 0x72, 0x07, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x08, 0x6C, 0x00, 0x6D, 0x08, 0x10, 0x04, 0x72,
+0x08, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x00, 0x6C, 0xA4, 0x67, 0xC5, 0x67,
+0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x08, 0xF3, 0x6A, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x2F, 0x22, 0x08, 0xF3, 0x4D, 0xA0,
+0x04, 0x72, 0x2B, 0x60, 0x08, 0xF3, 0x4E, 0xA0,
+0x02, 0x72, 0x27, 0x60, 0x02, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x18,
+0x6D, 0xC5, 0x1F, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
+0xC4, 0x67, 0x40, 0xEA, 0x00, 0x18, 0xB6, 0xC4,
+0x08, 0xF3, 0x4E, 0xA0, 0x0C, 0x72, 0x07, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x08, 0x6C, 0x00, 0x6D, 0x08, 0x10, 0x04, 0x72,
+0x08, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x00, 0x6C, 0xA4, 0x67, 0xC5, 0x67,
+0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x08, 0xF3, 0x6A, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x2F, 0x22, 0x08, 0xF3, 0x4D, 0xA0,
+0x04, 0x72, 0x2B, 0x60, 0x08, 0xF3, 0x4E, 0xA0,
+0x02, 0x72, 0x27, 0x60, 0x02, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x18,
+0x6D, 0xC5, 0x1F, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
+0xC4, 0x67, 0x40, 0xEA, 0x00, 0x18, 0xB6, 0xC4,
+0x08, 0xF3, 0x4E, 0xA0, 0x0C, 0x72, 0x07, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x08, 0x6C, 0x00, 0x6D, 0x08, 0x10, 0x04, 0x72,
+0x08, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x00, 0x6C, 0xA4, 0x67, 0xC5, 0x67,
+0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x00, 0x18, 0xF5, 0xE7, 0x02, 0x67,
+0x01, 0x6A, 0x0C, 0xEA, 0x11, 0x22, 0x00, 0x6C,
+0x01, 0x6D, 0x00, 0x18, 0xE5, 0xC8, 0x10, 0xF0,
+0x24, 0x6A, 0x3D, 0xF0, 0x4C, 0x9A, 0xFF, 0x6C,
+0x01, 0x4C, 0x60, 0x9A, 0x8C, 0xEB, 0x08, 0x23,
+0x60, 0x9A, 0x8D, 0xEB, 0x60, 0xDA, 0x04, 0x10,
+0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xE5, 0xC8,
+0x40, 0x6A, 0x0C, 0xEA, 0x0F, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x3D, 0xF0, 0x50, 0x9A, 0x60, 0xA2,
+0x00, 0xF6, 0x60, 0x33, 0x00, 0xF6, 0x63, 0x33,
+0x00, 0x53, 0x00, 0x6B, 0x02, 0x61, 0x80, 0x6B,
+0x6B, 0xEB, 0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x88, 0xF3, 0x90, 0xA2,
+0x88, 0xF3, 0xB1, 0xA2, 0x88, 0xF3, 0xD7, 0xA2,
+0x02, 0x6F, 0x00, 0x18, 0x3A, 0xC9, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x29, 0xF5, 0x70, 0xA2, 0x02, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x51, 0xEA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x4C, 0xC1,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x68, 0xF3, 0x74, 0xA0, 0x7F, 0x6A, 0xFF, 0x69,
+0x6C, 0xEA, 0x1E, 0x22, 0x68, 0xF3, 0x97, 0xA0,
+0x96, 0x34, 0x2C, 0xEC, 0x00, 0x18, 0x89, 0xE8,
+0x02, 0x6B, 0x4C, 0xEB, 0x2C, 0xEB, 0x07, 0x23,
+0x68, 0xF3, 0x97, 0xA0, 0x96, 0x34, 0x2C, 0xEC,
+0x00, 0x18, 0x27, 0xCE, 0x0D, 0x10, 0x68, 0xF3,
+0x97, 0xA0, 0x68, 0xF3, 0x79, 0xA0, 0x05, 0x6A,
+0x4B, 0xEA, 0x96, 0x34, 0x6C, 0xEA, 0x2C, 0xEC,
+0x68, 0xF3, 0x59, 0xC0, 0x00, 0x18, 0x7A, 0xCC,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x94, 0xA2, 0x7F, 0x6B, 0x8C, 0xEB,
+0x07, 0x23, 0x68, 0xF3, 0x97, 0xA2, 0xFF, 0x6A,
+0x96, 0x34, 0x4C, 0xEC, 0x00, 0x18, 0x85, 0xCE,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
+0x00, 0x18, 0x1B, 0xE0, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3,
+0x01, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x02, 0x23, 0x80, 0x18, 0x0D, 0x08,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x68,
+0x8C, 0xE8, 0x00, 0x18, 0x45, 0xF2, 0x90, 0x67,
+0x00, 0x18, 0x4A, 0xCC, 0x00, 0x6C, 0x00, 0x18,
+0x34, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0x17, 0x2B,
+0xC0, 0xF0, 0x7D, 0xA2, 0x07, 0x6A, 0x6C, 0xEA,
+0x0E, 0xEA, 0x07, 0x2A, 0x00, 0x18, 0x49, 0xD6,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3, 0x5C, 0x9A,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6,
+0x61, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x90, 0x67, 0x80, 0x18, 0x0D, 0x08, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x69, 0xF2, 0x70, 0xA2, 0x01, 0x6A, 0x4C, 0xEB,
+0x0A, 0x23, 0x30, 0xF0, 0x20, 0x6B, 0xCF, 0xF5,
+0x73, 0xA3, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x02, 0x2A, 0x80, 0x18, 0xD1, 0x0D, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0xF4, 0xD3, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0xF1, 0xD3, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0xCE, 0xDA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x4C, 0xDA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x1D, 0xEE, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3,
+0x01, 0x6B, 0xFF, 0x6A, 0xAC, 0xEB, 0x4C, 0xEB,
+0x4C, 0xEC, 0x02, 0x23, 0x80, 0x18, 0x57, 0x08,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
+0x00, 0x18, 0xCB, 0xE6, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x24, 0x67, 0xC0, 0xF0,
+0x9D, 0xA2, 0xFF, 0x6D, 0x07, 0x6B, 0xAC, 0xE9,
+0x8C, 0xEB, 0x2E, 0xEB, 0x12, 0x2B, 0xE0, 0xF0,
+0x8A, 0xA2, 0x03, 0x6B, 0x8C, 0xEB, 0xAC, 0xEB,
+0x07, 0x2B, 0xE0, 0xF0, 0xA9, 0xA2, 0x8A, 0x34,
+0x82, 0xED, 0x07, 0x61, 0xE0, 0xF0, 0x69, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3, 0x40, 0x9A,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x00, 0x18, 0xE4, 0xF1, 0x68, 0xF3,
+0x74, 0xA0, 0x7F, 0x6A, 0x6C, 0xEA, 0x32, 0x22,
+0x68, 0xF3, 0x5A, 0xA0, 0x21, 0x6B, 0x6B, 0xEB,
+0x4C, 0xEB, 0x40, 0x6A, 0x6C, 0xEA, 0x68, 0xF3,
+0x7A, 0xC0, 0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x22,
+0x88, 0xF3, 0x90, 0xA0, 0x88, 0xF3, 0xB1, 0xA0,
+0x88, 0xF3, 0xD7, 0xA0, 0x05, 0x6F, 0x00, 0x18,
+0x3A, 0xC9, 0x68, 0xF3, 0x7A, 0xA0, 0x41, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x68, 0xF3, 0x5A, 0xC0,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x68, 0xF3, 0x99, 0xA2, 0x40, 0x6B, 0x8C, 0xEB,
+0x0D, 0x23, 0x68, 0xF3, 0x7A, 0xA2, 0x10, 0x6A,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
+0x00, 0x18, 0x7A, 0xCA, 0x03, 0x2A, 0x91, 0x67,
+0x00, 0x18, 0x98, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3, 0x69, 0xA2,
+0x2E, 0xEB, 0x11, 0x2B, 0x69, 0xF3, 0x68, 0xA2,
+0x1F, 0x6C, 0x6A, 0x32, 0x8C, 0xEA, 0x47, 0xE9,
+0x01, 0x6C, 0x8C, 0xEA, 0x08, 0x22, 0x02, 0x6A,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22,
+0x00, 0x6C, 0x00, 0x18, 0x51, 0xEA, 0x30, 0xF0,
+0x20, 0x68, 0x91, 0x67, 0xEF, 0xF4, 0x08, 0x48,
+0x00, 0x18, 0xEA, 0xCB, 0x00, 0xF2, 0x43, 0xA0,
+0x0B, 0x2A, 0x91, 0x67, 0x80, 0x18, 0xA2, 0x0B,
+0xE0, 0xF1, 0x79, 0xA0, 0x01, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x91, 0x67, 0x80, 0x18, 0x57, 0x08,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0xD9, 0xE6,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0x63, 0x01, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF6, 0x60, 0x9B, 0xFF, 0x6A, 0x4C, 0xEE,
+0x6D, 0xE4, 0x08, 0x68, 0x80, 0xA3, 0xDB, 0xE0,
+0x02, 0x67, 0x4C, 0xED, 0x07, 0xEE, 0xD0, 0x67,
+0x4C, 0xEF, 0x04, 0xED, 0x4C, 0xEC, 0xCC, 0xEF,
+0x0F, 0xE8, 0x8C, 0xE8, 0xE4, 0xED, 0xED, 0xE8,
+0x4C, 0xE8, 0x00, 0xC3, 0x01, 0x90, 0x01, 0x63,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF6, 0x40, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0x8C, 0xEB, 0x4D, 0xE3, 0x40, 0xA3, 0xFF, 0x6C,
+0x8C, 0xEE, 0x08, 0x6B, 0xDB, 0xE3, 0x8C, 0xED,
+0x8C, 0xEA, 0x64, 0x67, 0x47, 0xED, 0x67, 0xEE,
+0x6C, 0xEA, 0x8C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B,
+0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x69, 0xE2,
+0x00, 0x9A, 0x41, 0x45, 0x25, 0x67, 0x08, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
+0x85, 0x67, 0x2C, 0xE8, 0x40, 0xEA, 0x06, 0xEA,
+0x50, 0x67, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0xF7, 0x1F, 0x68,
+0x41, 0x45, 0x25, 0x67, 0x0C, 0xD6, 0x8C, 0xE8,
+0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x44, 0x9A, 0x41, 0xE0, 0xC0, 0xD8, 0x1A, 0x10,
+0x01, 0x6D, 0x90, 0x67, 0xAB, 0xED, 0x00, 0x18,
+0x42, 0xE7, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF4, 0x50, 0x9A, 0x91, 0x67, 0x40, 0xEA,
+0x0C, 0x93, 0x64, 0xEA, 0x43, 0x67, 0x04, 0x93,
+0x2C, 0xEA, 0x2F, 0xE9, 0x6C, 0xE9, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B, 0x2D, 0xEA,
+0x61, 0xE0, 0x40, 0xD8, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x01, 0x74, 0x0D, 0x60, 0x06, 0x24, 0x02, 0x74,
+0x10, 0x60, 0x03, 0x74, 0x00, 0x6A, 0x1C, 0x61,
+0x14, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xA8, 0x35,
+0x3D, 0xF0, 0x54, 0x9A, 0x0B, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xA8, 0x35, 0x3D, 0xF0, 0x58, 0x9A,
+0x05, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF0,
+0x5C, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0,
+0x40, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x08, 0xF3, 0x00, 0x4A,
+0x88, 0x34, 0x91, 0xE2, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF4, 0x74, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF5, 0xA0, 0x35, 0xCC, 0xEB, 0x10, 0xF0,
+0x24, 0x6E, 0x3C, 0xF6, 0xD4, 0x9E, 0xCE, 0xF4,
+0x50, 0x9A, 0x80, 0xAC, 0xAD, 0xEB, 0x01, 0x6D,
+0xAB, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6B, 0x8C, 0xEB,
+0xFF, 0xF7, 0x1F, 0x6A, 0x81, 0x46, 0x06, 0x67,
+0xAC, 0xEA, 0x06, 0x2C, 0x83, 0x67, 0xA2, 0x67,
+0x00, 0x18, 0x6A, 0xE7, 0x02, 0x67, 0x0D, 0x10,
+0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0x6A, 0xE7,
+0x22, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
+0x50, 0x9A, 0x90, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
+0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x46, 0x67, 0xFF, 0x68, 0xFF, 0xF7, 0x1F, 0x69,
+0x01, 0x4A, 0x0C, 0xD6, 0x0D, 0xD7, 0x8C, 0xE8,
+0xAC, 0xE9, 0x04, 0x2A, 0x90, 0x67, 0xB1, 0x67,
+0xC7, 0x67, 0x15, 0x10, 0xB1, 0x67, 0x90, 0x67,
+0x00, 0x18, 0x6A, 0xE7, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x0C, 0x94, 0xAE, 0xF4, 0x50, 0x9A,
+0x40, 0xEA, 0x0D, 0x96, 0x90, 0x67, 0xB1, 0x67,
+0xC4, 0xEA, 0x0C, 0x92, 0x4C, 0xEE, 0x4F, 0xEB,
+0x04, 0x92, 0x4C, 0xEB, 0x6D, 0xEE, 0x00, 0x18,
+0x7D, 0xE7, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x8C, 0xEA, 0x0E, 0x91, 0x04, 0xD2,
+0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xED, 0x4C, 0xE9,
+0x0C, 0xD6, 0x0D, 0xD7, 0x0F, 0x90, 0x05, 0xD5,
+0x00, 0x6A, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
+0x40, 0xA8, 0x01, 0x4A, 0x40, 0xC8, 0x10, 0xF0,
+0x24, 0x6A, 0x04, 0x94, 0x05, 0x95, 0xDC, 0xF4,
+0xD4, 0x9A, 0x00, 0x18, 0x8D, 0xE7, 0x0C, 0x93,
+0x6C, 0xEA, 0x0D, 0x93, 0x6E, 0xEA, 0x03, 0x22,
+0x40, 0xA8, 0x23, 0xEA, 0xE7, 0x61, 0x40, 0xA8,
+0x09, 0x97, 0x07, 0x90, 0x23, 0xEA, 0x08, 0x91,
+0x58, 0x67, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
+0x24, 0x6A, 0x53, 0xF7, 0x11, 0x4A, 0x40, 0xDB,
+0x00, 0x68, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0,
+0x44, 0x9A, 0x40, 0xA2, 0x12, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x5D, 0xF0, 0x48, 0x9A, 0x40, 0xA2,
+0x0C, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0,
+0x4C, 0x9A, 0x40, 0xA2, 0x06, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x5D, 0xF0, 0x50, 0x9A, 0x40, 0xA2,
+0x18, 0x22, 0xE0, 0xF3, 0x09, 0x70, 0x0A, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
+0x20, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x00, 0x6A, 0x0C, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x32, 0x6C, 0x01, 0x48,
+0x40, 0xEA, 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xE8,
+0xD0, 0x17, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0xD3, 0xF7, 0x15, 0x4A, 0x40, 0xDB, 0x00, 0x6B,
+0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0, 0xB4, 0x9A,
+0xFF, 0x6C, 0x40, 0xA5, 0xA0, 0xA5, 0x8C, 0xEA,
+0xAC, 0xEC, 0x4E, 0xEC, 0x10, 0x24, 0x64, 0x73,
+0x09, 0x61, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3,
+0x8C, 0x9B, 0x40, 0x6D, 0x60, 0x9C, 0xAD, 0xEB,
+0x60, 0xDC, 0x20, 0xE8, 0x01, 0x4B, 0xFF, 0xF7,
+0x1F, 0x6A, 0x4C, 0xEB, 0xE5, 0x17, 0x20, 0xE8,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x69, 0x34, 0xF0,
+0x01, 0x4A, 0x8C, 0xE9, 0x40, 0xDB, 0x00, 0x68,
+0x20, 0x10, 0x82, 0xF3, 0x08, 0x70, 0x09, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A,
+0x10, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x1F, 0x10, 0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48,
+0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x14, 0x6C, 0x40, 0xEA, 0x33, 0x58,
+0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF7,
+0x5C, 0x9A, 0x01, 0x6B, 0x40, 0xA2, 0x6C, 0xEA,
+0x0B, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0,
+0x58, 0x9A, 0x01, 0x6B, 0x40, 0x9A, 0x42, 0x32,
+0x5E, 0x32, 0x6C, 0xEA, 0x2E, 0xEA, 0xD5, 0x2A,
+0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B,
+0x10, 0xF0, 0x24, 0x6A, 0x34, 0xF0, 0x02, 0x4A,
+0x40, 0xDB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0xB4, 0xF0, 0x15, 0x4A, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6A, 0x5D, 0xF0, 0x5C, 0x9A, 0x60, 0xA2,
+0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0,
+0x24, 0x6A, 0xB4, 0xF0, 0x16, 0x4A, 0x40, 0xDB,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x68, 0xF3, 0x99, 0xA2, 0x80, 0x6B,
+0x6B, 0xEB, 0x8D, 0xEB, 0x68, 0xF3, 0x79, 0xC2,
+0x88, 0xF3, 0x68, 0xAA, 0x10, 0xF0, 0x24, 0x6A,
+0x7D, 0xF0, 0x40, 0x9A, 0xFF, 0x68, 0x10, 0x6C,
+0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4,
+0x74, 0x9A, 0x40, 0xA3, 0x0C, 0xEA, 0x8D, 0xEA,
+0x0C, 0xEA, 0x40, 0xC3, 0x01, 0x6C, 0x00, 0x18,
+0x08, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7,
+0x40, 0x9A, 0x00, 0x6B, 0x01, 0x6C, 0x60, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0, 0x7C, 0x9A,
+0x40, 0xA3, 0x0C, 0xEA, 0x8D, 0xEA, 0x0C, 0xEA,
+0x40, 0xC3, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x2D, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF4, 0x74, 0x9A,
+0xEF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x00, 0x6C, 0x00, 0x18, 0x08, 0xE8, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
+0x24, 0x6B, 0x8E, 0x9A, 0xFC, 0xF7, 0x60, 0x9B,
+0x80, 0xDB, 0x68, 0xF3, 0x99, 0xA2, 0x7F, 0x6B,
+0x8C, 0xEB, 0x68, 0xF3, 0x79, 0xC2, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
+0x94, 0x34, 0x4C, 0xED, 0x4C, 0xEC, 0x10, 0xF0,
+0x24, 0x6A, 0x7D, 0xF0, 0x44, 0x9A, 0x80, 0xC2,
+0xA0, 0xC2, 0x20, 0xE8, 0xFF, 0x6A, 0x10, 0xF0,
+0x24, 0x6B, 0x7D, 0xF0, 0x64, 0x9B, 0x4C, 0xEC,
+0x94, 0x34, 0x4C, 0xEC, 0x80, 0xC3, 0x60, 0xA3,
+0x6C, 0xEA, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xED,
+0xFF, 0x75, 0x4C, 0xEC, 0xCC, 0xEA, 0x06, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x71, 0xE4, 0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x71, 0xE4, 0x2C, 0xF7,
+0x6E, 0xA4, 0xAC, 0xEA, 0xAF, 0xED, 0x6C, 0xED,
+0xAD, 0xEA, 0x2C, 0xF7, 0x4E, 0xC4, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6B,
+0x6C, 0xEC, 0x07, 0x6A, 0x6C, 0xED, 0x8C, 0xEA,
+0x01, 0x68, 0xE6, 0x67, 0x04, 0xEA, 0xAB, 0xEE,
+0x30, 0xF0, 0x20, 0x6A, 0xAD, 0xEE, 0xCE, 0xF2,
+0x44, 0x9A, 0x6C, 0xE8, 0xC0, 0xF7, 0xC3, 0x36,
+0x8E, 0x34, 0x6C, 0xEF, 0xB0, 0x67, 0x0C, 0xEE,
+0x6C, 0xEC, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
+0xFF, 0x74, 0xAC, 0xEA, 0x05, 0x61, 0x30, 0xF0,
+0x20, 0x6B, 0x0D, 0xF1, 0x47, 0xC3, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x2C, 0xF7, 0xBF, 0xA3, 0x8C, 0xEA, 0x8F, 0xEC,
+0xAC, 0xEC, 0x8D, 0xEA, 0x2C, 0xF7, 0x5F, 0xC3,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x6A, 0x06, 0x67, 0x4C, 0xE8,
+0x53, 0x70, 0x4C, 0xEC, 0x4C, 0xED, 0x0A, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x2C, 0xF7, 0x9F, 0xA3, 0x2C, 0xF7, 0x7E, 0xA3,
+0x8D, 0xEB, 0x06, 0x10, 0x0C, 0x2C, 0x30, 0xF0,
+0x20, 0x6B, 0x0D, 0xF1, 0x66, 0xA3, 0xAD, 0xEB,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0x4C, 0x9A, 0x60, 0xC2, 0x2C, 0x10, 0x47, 0x70,
+0x12, 0x60, 0x48, 0x58, 0x06, 0x60, 0x17, 0x70,
+0x0E, 0x60, 0x44, 0x70, 0x0C, 0x60, 0x01, 0x70,
+0x09, 0x10, 0x4C, 0x70, 0x08, 0x60, 0x4D, 0x58,
+0x02, 0x60, 0x49, 0x70, 0x03, 0x10, 0x4E, 0x70,
+0x02, 0x60, 0x51, 0x70, 0x06, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x0D, 0xF1, 0x46, 0xA2, 0xAD, 0xEA,
+0x0D, 0x10, 0x00, 0x18, 0xAB, 0xE8, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x2C, 0xF7,
+0x7F, 0xA2, 0x2C, 0xF7, 0x5E, 0xA2, 0x6D, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF3, 0x6C, 0x9B, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xE8, 0xF2, 0x1A, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0x7D, 0xF0, 0x48, 0x9A, 0x00, 0xC2,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0xFF, 0x6A,
+0x25, 0x67, 0xA9, 0xF0, 0xA8, 0xA0, 0x08, 0xF3,
+0x10, 0xA0, 0x4C, 0xEF, 0x1F, 0x65, 0x01, 0x6F,
+0xEC, 0xED, 0x0C, 0xEF, 0x4C, 0xE9, 0x4C, 0xEE,
+0x4C, 0xED, 0x4C, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF4, 0x48, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0x6C, 0xEC, 0x00, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A,
+0x0C, 0xEA, 0x10, 0xF0, 0x24, 0x68, 0x1C, 0xF4,
+0x04, 0x98, 0x51, 0xE4, 0x6C, 0xEC, 0x80, 0xC8,
+0x9C, 0x32, 0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF0,
+0x8C, 0x9C, 0x10, 0xF0, 0x24, 0x68, 0x7D, 0xF0,
+0x10, 0x98, 0x91, 0xE2, 0x80, 0xAC, 0x01, 0xE2,
+0x00, 0x98, 0x6C, 0xEC, 0x05, 0x21, 0x10, 0xF0,
+0x00, 0x69, 0x2B, 0xE9, 0x2D, 0xEC, 0x6C, 0xEC,
+0xD8, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x10, 0xF0,
+0x24, 0x6C, 0x7D, 0xF0, 0x8C, 0x9C, 0x91, 0xE2,
+0x60, 0xCC, 0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF0,
+0x74, 0x9B, 0x6D, 0xE2, 0x80, 0xA3, 0x01, 0x6B,
+0x8C, 0xEB, 0x05, 0x23, 0x03, 0xF7, 0x01, 0x6B,
+0x6B, 0xEB, 0x0C, 0xEB, 0x07, 0x10, 0x1F, 0xF7,
+0x01, 0x6B, 0x6B, 0xEB, 0x0C, 0xEB, 0x18, 0x67,
+0x00, 0x34, 0x8D, 0xEB, 0xFF, 0x76, 0x13, 0x60,
+0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF0, 0x98, 0x9C,
+0x80, 0xF4, 0xC0, 0x36, 0x6C, 0xEC, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF3, 0x74, 0x9B, 0x6D, 0xEE,
+0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF0, 0x70, 0x9B,
+0x8D, 0xEE, 0x6D, 0xE2, 0xC0, 0xDB, 0x01, 0x2F,
+0x15, 0x25, 0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF0,
+0x9C, 0x9B, 0xFF, 0x6D, 0x80, 0x6E, 0x91, 0xE2,
+0x60, 0xA4, 0xCB, 0xEE, 0xAC, 0xEB, 0xCD, 0xEB,
+0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
+0x9D, 0xF0, 0x60, 0x9B, 0x00, 0x6C, 0x80, 0xC3,
+0x00, 0x6C, 0x11, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x7D, 0xF0, 0x9C, 0x9B, 0x7F, 0x6B, 0x91, 0xE2,
+0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0,
+0x24, 0x6B, 0x9D, 0xF0, 0x60, 0x9B, 0x1C, 0x6C,
+0x80, 0xC3, 0x08, 0xF4, 0x13, 0x6C, 0x10, 0xF0,
+0x24, 0x6B, 0x9D, 0xF0, 0x64, 0x9B, 0x80, 0xCB,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF3, 0x90, 0x9B,
+0xF7, 0x6B, 0x91, 0xE2, 0xA0, 0xA4, 0xAC, 0xEB,
+0x60, 0xC4, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
+0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x10, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0x29, 0xF5, 0x51, 0xA2, 0xFF, 0x63, 0x05, 0x5A,
+0x36, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
+0x5C, 0xF2, 0x04, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x48, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B, 0x40, 0x9A,
+0x1A, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x48, 0x9A, 0x09, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x9D, 0xF0, 0x48, 0x9A, 0x0D, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x9D, 0xF0, 0x48, 0x9A, 0x40, 0x9A,
+0x50, 0x32, 0x00, 0xF5, 0x42, 0x32, 0x08, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0, 0x4C, 0x9A,
+0x40, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA,
+0x00, 0xD2, 0x00, 0x93, 0xE0, 0xF3, 0x08, 0x6A,
+0x60, 0x33, 0x68, 0x33, 0x5B, 0xEB, 0x01, 0x2A,
+0xE5, 0xE8, 0x12, 0xEA, 0x01, 0x10, 0x66, 0x6A,
+0x00, 0xD2, 0x00, 0x92, 0x01, 0x63, 0x20, 0xE8,
+0xFF, 0x63, 0x01, 0xD0, 0x0C, 0x2C, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x9D, 0xF0, 0x90, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x58, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF5, 0xDC, 0x9A, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF5, 0x18, 0x4A, 0x00, 0x6D,
+0x18, 0x6F, 0xF8, 0xED, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x12, 0xEF, 0x6D, 0xE7,
+0x00, 0xF1, 0x04, 0xA3, 0x01, 0x6F, 0xEC, 0xE8,
+0x23, 0x20, 0x00, 0xF1, 0x64, 0xA3, 0x66, 0x33,
+0xEC, 0xEB, 0xFF, 0x6F, 0xEC, 0xEB, 0x1C, 0x23,
+0xFF, 0xF7, 0x78, 0x9A, 0x9B, 0xEB, 0x01, 0x2C,
+0xE5, 0xE8, 0x12, 0xEB, 0xFF, 0xF7, 0x7C, 0xDA,
+0x10, 0xEF, 0x03, 0x27, 0x01, 0x4B, 0xFF, 0xF7,
+0x7C, 0xDA, 0x60, 0x9A, 0x78, 0xEE, 0x12, 0xEB,
+0x9B, 0xEB, 0x01, 0x2C, 0xE5, 0xE8, 0x12, 0xEB,
+0x60, 0xDA, 0xFF, 0xF7, 0x7C, 0x9A, 0x04, 0x2B,
+0x01, 0x6F, 0xFF, 0xF7, 0xFC, 0xDA, 0x60, 0xDA,
+0x01, 0x4D, 0x0A, 0x75, 0x18, 0x4A, 0xCC, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0xE0, 0xF0, 0x78, 0x9A, 0xE0, 0xF0, 0x94, 0xDA,
+0x7B, 0xEC, 0x01, 0x2B, 0xE5, 0xE8, 0x12, 0xEB,
+0xE0, 0xF0, 0x7C, 0xDA, 0x78, 0x67, 0x00, 0xF1,
+0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B,
+0x8D, 0xEB, 0x69, 0xF3, 0x68, 0xC2, 0x01, 0x90,
+0x01, 0x63, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x69, 0xF3, 0x48, 0xA0,
+0x03, 0x6B, 0x4C, 0xEB, 0x00, 0x6A, 0x33, 0x2B,
+0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0, 0x54, 0x9A,
+0x30, 0xF0, 0x20, 0x69, 0x30, 0xF0, 0x20, 0x6C,
+0x60, 0xC2, 0x4E, 0xF2, 0x4C, 0x99, 0x29, 0xF5,
+0x10, 0x4C, 0x00, 0x6D, 0xD4, 0x6E, 0x40, 0xEA,
+0x4E, 0xF2, 0x4C, 0x99, 0x30, 0xF0, 0x20, 0x6C,
+0xFF, 0x6E, 0xCF, 0xF5, 0x1C, 0x4C, 0x00, 0x6D,
+0x01, 0x4E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6B, 0x66, 0x6C,
+0xE0, 0xF0, 0x78, 0xDA, 0xE0, 0xF0, 0x94, 0xDA,
+0xE0, 0xF0, 0x9C, 0xDA, 0x01, 0x6A, 0x4B, 0xEA,
+0x69, 0xF3, 0x88, 0xA0, 0x69, 0xF3, 0x49, 0xC0,
+0x7D, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x6D, 0xEA,
+0x69, 0xF3, 0x48, 0xC0, 0x43, 0x67, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x69, 0xF3,
+0x88, 0xA0, 0x01, 0x6B, 0x00, 0x6A, 0x8C, 0xEB,
+0x24, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0,
+0x54, 0x9A, 0x00, 0x6B, 0x60, 0xC2, 0x03, 0x6A,
+0x4B, 0xEA, 0x8C, 0xEA, 0x69, 0xF3, 0x48, 0xC0,
+0x00, 0x18, 0x3F, 0xE9, 0x04, 0xD2, 0x04, 0x94,
+0x00, 0x18, 0x60, 0xE9, 0x69, 0xF3, 0x68, 0xA0,
+0x02, 0x6A, 0x42, 0xF1, 0x1C, 0x6C, 0x6D, 0xEA,
+0x69, 0xF3, 0x48, 0xC0, 0x30, 0xF0, 0x20, 0x6B,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x50, 0x9A,
+0xEF, 0xF5, 0xC0, 0x9B, 0x01, 0x6D, 0x40, 0xEA,
+0x01, 0x6A, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x69, 0xF3, 0xA8, 0xA3,
+0x02, 0x6C, 0x00, 0x6A, 0xAC, 0xEC, 0x0C, 0x24,
+0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0, 0x54, 0x9A,
+0x00, 0x6C, 0x80, 0xC2, 0x03, 0x6A, 0x4B, 0xEA,
+0xAC, 0xEA, 0x69, 0xF3, 0x48, 0xC3, 0x01, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0x00, 0x6A, 0x18, 0x6C,
+0x98, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0x01, 0x4A, 0x0A, 0x72, 0x12, 0xEC,
+0x71, 0xE4, 0x00, 0xF1, 0xA4, 0xA4, 0x02, 0x6B,
+0x6B, 0xEB, 0xAC, 0xEB, 0x00, 0xF1, 0x64, 0xC4,
+0xEE, 0x61, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0x29, 0xF5, 0x50, 0xA2, 0x01, 0x6B, 0x4C, 0xEB,
+0x00, 0x6A, 0x1C, 0x23, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF5, 0x1C, 0x4A, 0x00, 0x6B, 0xA0, 0x9A,
+0x8E, 0xED, 0x0F, 0x2D, 0x18, 0x6E, 0xD8, 0xEB,
+0x30, 0xF0, 0x20, 0x6D, 0xEF, 0xF4, 0x08, 0x4D,
+0x12, 0xEE, 0xB9, 0xE6, 0x00, 0xF1, 0xE4, 0xA6,
+0x02, 0x6D, 0xAB, 0xED, 0xEC, 0xED, 0x00, 0xF1,
+0xA4, 0xC6, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
+0xEA, 0x61, 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x5D, 0x67, 0x20, 0xF0, 0x78, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0x0A, 0xD4, 0x29, 0xF5, 0x90, 0xA2,
+0x01, 0x6A, 0x00, 0xF6, 0xE0, 0x31, 0x8C, 0xEA,
+0x0B, 0xD5, 0x0C, 0xD6, 0x00, 0xF6, 0x23, 0x31,
+0x80, 0xF0, 0x0E, 0x22, 0x24, 0x23, 0x01, 0x73,
+0x80, 0xF0, 0x0A, 0x61, 0x0A, 0x93, 0x80, 0xF0,
+0x07, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0,
+0x58, 0x9A, 0xC3, 0xEA, 0x80, 0xF0, 0x00, 0x61,
+0x7F, 0x71, 0x7E, 0x60, 0xFF, 0xF7, 0x1F, 0x51,
+0x7B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
+0x1C, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
+0x10, 0xEA, 0x12, 0xE8, 0x02, 0x22, 0x01, 0x48,
+0x04, 0x10, 0x03, 0x28, 0x01, 0x68, 0x50, 0x67,
+0x1F, 0x10, 0x01, 0x6B, 0x20, 0x10, 0x0A, 0x95,
+0x67, 0x25, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF0,
+0x58, 0x9A, 0x0C, 0x96, 0xC3, 0xEA, 0x60, 0x61,
+0x7F, 0x71, 0x5E, 0x60, 0xFF, 0xF7, 0x1F, 0x51,
+0x5B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
+0x00, 0x9A, 0x1B, 0xEE, 0x01, 0x28, 0xE5, 0xE8,
+0x10, 0xEA, 0x12, 0xE8, 0x02, 0x22, 0x01, 0x48,
+0x05, 0x10, 0x04, 0x28, 0x01, 0x68, 0x00, 0x6A,
+0x04, 0xD2, 0x02, 0x10, 0x00, 0x6B, 0x04, 0xD3,
+0x0A, 0x94, 0x00, 0x18, 0xE9, 0xE9, 0x00, 0x6C,
+0xFF, 0x6E, 0xA4, 0x67, 0xCC, 0xED, 0x1D, 0x65,
+0x18, 0x6D, 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x01, 0x6D, 0x12, 0xEA,
+0x69, 0xE2, 0x00, 0xF1, 0x44, 0xA2, 0xAC, 0xEA,
+0xCC, 0xEA, 0x2F, 0x2A, 0xD8, 0x67, 0x18, 0x6F,
+0xF8, 0xEE, 0x04, 0x96, 0xC4, 0x36, 0x04, 0xD6,
+0x03, 0x6E, 0xCB, 0xEE, 0x12, 0xEC, 0x71, 0xE4,
+0x00, 0xF1, 0xE4, 0xA4, 0xEC, 0xEE, 0x04, 0x97,
+0xED, 0xEE, 0x00, 0xF1, 0xC4, 0xC4, 0x0A, 0x96,
+0x00, 0xF1, 0xD4, 0xDC, 0x0B, 0x97, 0x00, 0xF1,
+0xF8, 0xDC, 0x0C, 0x96, 0x18, 0x6F, 0x00, 0xF1,
+0xC8, 0xDC, 0xD8, 0x67, 0x01, 0x4E, 0xF8, 0xEE,
+0x12, 0xEE, 0xCD, 0xE3, 0xE0, 0xF0, 0x58, 0xDB,
+0xE0, 0xF0, 0x14, 0xDB, 0x00, 0xF1, 0x46, 0xC4,
+0x00, 0xF1, 0x44, 0xA4, 0x00, 0xF1, 0x27, 0xC4,
+0x4D, 0xED, 0x00, 0xF1, 0xA4, 0xC4, 0x01, 0x6A,
+0x04, 0x10, 0x01, 0x4C, 0x0A, 0x74, 0xBC, 0x61,
+0x00, 0x6A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x06, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF5, 0x18, 0x4A, 0x00, 0x6C,
+0x4F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF5,
+0x18, 0x4A, 0x00, 0x6B, 0x18, 0x6D, 0xB8, 0xEB,
+0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF4, 0x08, 0x4C,
+0x12, 0xED, 0x91, 0xE5, 0x00, 0xF1, 0xC4, 0xA4,
+0x01, 0x6D, 0xAC, 0xEE, 0x08, 0x26, 0x00, 0xF1,
+0x84, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
+0x80, 0x9A, 0x01, 0x4C, 0x80, 0xDA, 0x01, 0x4B,
+0x0A, 0x73, 0x18, 0x4A, 0xE7, 0x61, 0x00, 0x18,
+0x3F, 0xE9, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x68, 0xF3, 0x94, 0xA2,
+0x7F, 0x6B, 0x8C, 0xEB, 0x1A, 0x23, 0x68, 0xF3,
+0x77, 0xA2, 0x69, 0xF3, 0x89, 0xA2, 0x76, 0x33,
+0x8E, 0xEB, 0x13, 0x2B, 0x68, 0xF3, 0x95, 0xA2,
+0x0F, 0x6B, 0x8C, 0xEB, 0xFF, 0x6C, 0x8C, 0xEB,
+0x0C, 0x23, 0x88, 0xF3, 0x82, 0xA2, 0x04, 0x93,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x5C, 0x9A,
+0x78, 0xEC, 0x12, 0xEC, 0x8E, 0xEA, 0x09, 0x2A,
+0x5B, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93,
+0xCF, 0xF5, 0x5C, 0x9A, 0x6E, 0xEA, 0x54, 0x22,
+0x04, 0x94, 0x00, 0x18, 0x60, 0xE9, 0x50, 0x10,
+0x18, 0x6D, 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x12, 0xED, 0x6D, 0xE5,
+0x00, 0xF1, 0xC4, 0xA3, 0x01, 0x6D, 0xAC, 0xEE,
+0x0A, 0x26, 0x00, 0xF1, 0x64, 0xA3, 0x66, 0x33,
+0xAC, 0xEB, 0xFF, 0x6D, 0xAC, 0xEB, 0x03, 0x2B,
+0x60, 0x9A, 0x01, 0x4B, 0x60, 0xDA, 0x01, 0x4C,
+0x0A, 0x74, 0x18, 0x4A, 0xE5, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x29, 0xF5, 0x51, 0xA2, 0xFF, 0x72,
+0x2F, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0xF1, 0x60, 0x9A, 0x01, 0x4B,
+0x00, 0xF1, 0x60, 0xDA, 0xE0, 0xF0, 0x5C, 0x9A,
+0x4E, 0xEB, 0x22, 0x2B, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF5, 0x18, 0x4A, 0x18, 0x6D, 0xB8, 0xEB,
+0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF4, 0x08, 0x4C,
+0x12, 0xED, 0x91, 0xE5, 0x00, 0xF1, 0xC4, 0xA4,
+0x01, 0x6D, 0xAC, 0xEE, 0x08, 0x26, 0x00, 0xF1,
+0x84, 0xA4, 0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24,
+0x80, 0x9A, 0x01, 0x4C, 0x80, 0xDA, 0x01, 0x4B,
+0x0A, 0x73, 0x18, 0x4A, 0xE7, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x78, 0x67, 0xEF, 0xF5, 0x68, 0xDA,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x6C, 0x9A, 0x02, 0xF0, 0x00, 0x6C,
+0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97,
+0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x70, 0x9B, 0x10, 0xF0, 0x24, 0x6A,
+0xB5, 0xF2, 0x15, 0x4A, 0x30, 0xF0, 0x20, 0x68,
+0x40, 0xDB, 0xEF, 0xF5, 0x0E, 0x48, 0x00, 0x69,
+0x18, 0x6A, 0x58, 0xE9, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x12, 0xEA, 0x69, 0xE2,
+0x00, 0xF1, 0x84, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
+0x27, 0x23, 0x00, 0xF0, 0x8A, 0x98, 0x00, 0xF0,
+0x66, 0x98, 0x63, 0xEC, 0x21, 0x61, 0x61, 0x80,
+0x81, 0x43, 0x04, 0xD4, 0x07, 0x2C, 0x00, 0xF0,
+0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98, 0x40, 0xEA,
+0x04, 0x92, 0x14, 0x10, 0x80, 0xA0, 0x01, 0x4C,
+0x80, 0xC0, 0x80, 0xA0, 0x82, 0xEB, 0x08, 0x60,
+0x00, 0xF1, 0x84, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x00, 0xF1, 0x64, 0xC2, 0x08, 0x10,
+0x00, 0xF0, 0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98,
+0x40, 0xEA, 0x00, 0x6A, 0x00, 0xF0, 0x4A, 0xD8,
+0x01, 0x49, 0x0A, 0x71, 0x18, 0x48, 0xC8, 0x61,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xE0, 0x63, 0x3F, 0x62,
+0xFF, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA, 0xBD, 0x67,
+0x56, 0xC5, 0x01, 0x6B, 0x42, 0x32, 0x57, 0xC5,
+0x6B, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0x70, 0xC5,
+0xAE, 0xF2, 0x5C, 0x9A, 0x03, 0x6B, 0x72, 0xC5,
+0x04, 0x6B, 0x94, 0xC5, 0x73, 0xC5, 0x04, 0x04,
+0x40, 0xEA, 0x3F, 0x97, 0x20, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0xA7, 0x44, 0x30, 0xF0,
+0x20, 0x6C, 0x01, 0x4D, 0xAC, 0xF0, 0x08, 0x4C,
+0x14, 0x6E, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x24, 0x67, 0x00, 0x18,
+0xE2, 0xEA, 0x47, 0xA1, 0x66, 0xA1, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x40, 0x32,
+0xEB, 0xF6, 0x80, 0xA0, 0x69, 0xE2, 0x01, 0x69,
+0xEB, 0xF6, 0x52, 0xC8, 0x51, 0x67, 0x8C, 0xEA,
+0xFF, 0x6B, 0x1C, 0x2A, 0xEB, 0xF6, 0xB4, 0xA0,
+0xFE, 0x4A, 0xAC, 0xEA, 0xEB, 0xF6, 0x54, 0xC0,
+0x02, 0x6A, 0x8C, 0xEA, 0x6C, 0xEA, 0x51, 0x22,
+0xEB, 0xF6, 0x43, 0xA0, 0x0F, 0x6D, 0xEB, 0xF6,
+0x84, 0xA0, 0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED,
+0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72, 0x0D, 0x6A,
+0x41, 0x61, 0x3F, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
+0xEB, 0xF6, 0xF0, 0xA8, 0x02, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x00, 0xF1, 0x01, 0x5F, 0xEB, 0xF6,
+0x54, 0xC0, 0x0C, 0x6A, 0x33, 0x60, 0x00, 0x6A,
+0xEB, 0xF6, 0x55, 0xC0, 0xEB, 0xF6, 0x56, 0xC0,
+0x00, 0x6A, 0xEB, 0xF6, 0x58, 0xC8, 0xEB, 0xF6,
+0x5A, 0xC8, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
+0x48, 0x9A, 0xEB, 0xF6, 0xC1, 0xA0, 0x10, 0xF0,
+0x24, 0x6D, 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A,
+0x9D, 0xF0, 0xBC, 0x9D, 0x6C, 0xEA, 0xD9, 0xE2,
+0xDC, 0x36, 0x00, 0x6A, 0xB5, 0xE6, 0x10, 0xF0,
+0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x5C, 0xF4,
+0xD8, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9A, 0xCC, 0xF0,
+0x0E, 0x4B, 0x00, 0x6C, 0xD9, 0xE3, 0x40, 0xEA,
+0xEB, 0xF6, 0x54, 0xA0, 0x4D, 0xE9, 0xEB, 0xF6,
+0x34, 0xC0, 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0xEB, 0xF6,
+0xB8, 0xA8, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x4E, 0xF2, 0x50, 0x9A, 0xCC, 0xF0,
+0x0E, 0x4B, 0x30, 0xF0, 0x20, 0x6C, 0xB5, 0xE3,
+0xCC, 0xF0, 0x08, 0x4C, 0x04, 0x6E, 0x40, 0xEA,
+0x0B, 0xF7, 0x63, 0xA0, 0x80, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x05, 0x2A,
+0xEB, 0xF6, 0x58, 0xA8, 0x04, 0x4A, 0xEB, 0xF6,
+0x58, 0xC8, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x0B, 0xF7, 0x61, 0xA0, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A, 0x0B, 0xF7,
+0x80, 0xA0, 0x0F, 0x6D, 0x6C, 0xED, 0x72, 0x36,
+0x40, 0xEA, 0x0E, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x54, 0x9A, 0x40, 0xEA, 0xEB, 0xF6,
+0x74, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0xEB, 0xF6, 0x54, 0xC0, 0x01, 0x6C, 0x56, 0x10,
+0x0B, 0xF7, 0x63, 0xA0, 0x7F, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x18, 0x22, 0x01, 0x72,
+0x45, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5,
+0x4C, 0x9A, 0x00, 0x6C, 0x40, 0xEA, 0x49, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF3, 0x50, 0x9A,
+0xCB, 0xF6, 0x9D, 0xA0, 0x00, 0x6D, 0x40, 0xEA,
+0x06, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
+0x54, 0x9A, 0x40, 0xEA, 0x3A, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
+0x75, 0xA2, 0x0B, 0xF7, 0x82, 0xA2, 0x01, 0x4B,
+0xEB, 0xF6, 0x75, 0xC2, 0xEB, 0xF6, 0x7A, 0xAA,
+0x6D, 0xE4, 0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6,
+0x95, 0xA2, 0xEB, 0xF6, 0x62, 0xA2, 0x8E, 0xEB,
+0x09, 0x2B, 0x10, 0xF0, 0x24, 0x6C, 0x0B, 0xF7,
+0xC2, 0xA2, 0x35, 0xF6, 0x01, 0x4C, 0x04, 0xD3,
+0x00, 0x6D, 0x09, 0x10, 0x0B, 0xF7, 0xC2, 0xA2,
+0x10, 0xF0, 0x24, 0x6C, 0x00, 0x6A, 0x04, 0xD2,
+0x15, 0xF6, 0x05, 0x4C, 0xA2, 0x67, 0x64, 0x6A,
+0x58, 0xEE, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
+0xFC, 0xE9, 0x1B, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xEB, 0xF6,
+0x54, 0xC0, 0x02, 0x6C, 0xEB, 0xF6, 0xB2, 0xA8,
+0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xEB, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
+0x6B, 0xEB, 0xEB, 0xF6, 0xB2, 0xAA, 0x8C, 0xEB,
+0xEB, 0xF6, 0x74, 0xC2, 0x03, 0x6C, 0x00, 0x18,
+0xD5, 0xEA, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x7C, 0xA2,
+0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0x28, 0xEB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49,
+0xEB, 0xF6, 0x94, 0xA1, 0x01, 0x6A, 0xFF, 0x6B,
+0x8C, 0xEA, 0x00, 0xF1, 0x0C, 0x22, 0xEB, 0xF6,
+0xA0, 0xA1, 0x03, 0x6E, 0xAE, 0x32, 0xCC, 0xEA,
+0x6C, 0xEA, 0x02, 0x72, 0x7E, 0x60, 0x06, 0x67,
+0x4E, 0xE8, 0xE0, 0xF0, 0x02, 0x20, 0x01, 0x72,
+0x25, 0x60, 0x02, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
+0xEB, 0xF6, 0x54, 0xC1, 0x02, 0x6A, 0xAC, 0xEA,
+0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1,
+0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED,
+0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
+0x01, 0x72, 0x01, 0x6C, 0x01, 0x61, 0x00, 0x6C,
+0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x18, 0xD5, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A,
+0x40, 0xEA, 0xD9, 0x10, 0x02, 0x6A, 0xAC, 0xEA,
+0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1,
+0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED,
+0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
+0x01, 0x72, 0xA0, 0xF0, 0x14, 0x61, 0xEB, 0xF6,
+0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0xD5, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x4D, 0xA2,
+0x5A, 0x33, 0x02, 0x73, 0x0D, 0x60, 0x03, 0x73,
+0x0F, 0x60, 0x01, 0x73, 0x05, 0x60, 0x3F, 0x6E,
+0x4C, 0xEE, 0xFF, 0x6A, 0x4C, 0xEE, 0x0E, 0x10,
+0x3F, 0x6B, 0x4C, 0xEB, 0x0A, 0x6E, 0x08, 0x10,
+0x3F, 0x6B, 0x4C, 0xEB, 0x64, 0x6E, 0x04, 0x10,
+0x3F, 0x6B, 0x4C, 0xEB, 0xE0, 0xF3, 0x08, 0x6E,
+0xD8, 0xEB, 0x12, 0xEE, 0x0A, 0x6A, 0x58, 0xEE,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xEB, 0xF6, 0x7A, 0xAA, 0x10, 0xF0, 0x24, 0x6C,
+0x15, 0xF6, 0x05, 0x4C, 0x12, 0xEE, 0x7B, 0xE6,
+0x00, 0x6B, 0xEB, 0xF6, 0x75, 0xC2, 0x00, 0x6B,
+0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6, 0x78, 0xCA,
+0x00, 0x6A, 0x04, 0xD2, 0xA2, 0x67, 0x64, 0x6A,
+0x62, 0x10, 0x02, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA,
+0x10, 0x22, 0xEB, 0xF6, 0x43, 0xA1, 0x0F, 0x6D,
+0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED, 0x52, 0x36,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
+0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72,
+0x62, 0x61, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
+0x00, 0x18, 0xD5, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6, 0x87, 0xA2,
+0xEB, 0xF6, 0x76, 0xA2, 0xFF, 0x4C, 0x6E, 0xEC,
+0x03, 0x2C, 0xEB, 0xF6, 0x66, 0xA2, 0x05, 0x10,
+0x01, 0x4B, 0xEB, 0xF6, 0x76, 0xC2, 0xEB, 0xF6,
+0x65, 0xA2, 0x7A, 0x32, 0x02, 0x72, 0x0D, 0x60,
+0x03, 0x72, 0x0F, 0x60, 0x01, 0x72, 0x05, 0x60,
+0x3F, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x0E, 0x10, 0x3F, 0x6A, 0x6C, 0xEA, 0x0A, 0x6B,
+0x08, 0x10, 0x3F, 0x6A, 0x6C, 0xEA, 0x64, 0x6B,
+0x04, 0x10, 0x3F, 0x6A, 0x6C, 0xEA, 0xE0, 0xF3,
+0x08, 0x6B, 0x78, 0xEA, 0x12, 0xEA, 0x0A, 0x6B,
+0x78, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xCC, 0xF0,
+0x62, 0xAB, 0x00, 0x6C, 0x64, 0x6E, 0x12, 0xEA,
+0x6B, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0xEB, 0xF6, 0x95, 0xC3, 0x00, 0x6C,
+0xEB, 0xF6, 0x9A, 0xCB, 0xEB, 0xF6, 0x98, 0xCB,
+0x00, 0x6B, 0x10, 0xF0, 0x24, 0x6C, 0x04, 0xD3,
+0x15, 0xF6, 0x05, 0x4C, 0xA3, 0x67, 0xD8, 0xEA,
+0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18, 0xFC, 0xE9,
+0x1E, 0x10, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
+0x00, 0x18, 0xD5, 0xEA, 0xEB, 0xF6, 0x15, 0xC1,
+0xEB, 0xF6, 0x1A, 0xC9, 0xEB, 0xF6, 0x18, 0xC9,
+0x00, 0x18, 0x81, 0xEB, 0x10, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
+0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB, 0xEB, 0xF6,
+0xB2, 0xAA, 0x8C, 0xEB, 0xEB, 0xF6, 0x74, 0xC2,
+0x01, 0x6C, 0x00, 0x18, 0xD5, 0xEA, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x04, 0x67, 0x25, 0x67, 0x4C, 0xEE,
+0x4C, 0xE8, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x4C, 0x9A, 0x04, 0xD6, 0x90, 0x67,
+0xB1, 0x67, 0x40, 0xEA, 0x90, 0x67, 0x80, 0x18,
+0xB0, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6,
+0x6B, 0xA2, 0x00, 0x6A, 0x09, 0x2B, 0x04, 0x97,
+0x30, 0xF0, 0x20, 0x6C, 0x25, 0xF6, 0x08, 0x4C,
+0xB0, 0x67, 0xD1, 0x67, 0x80, 0x18, 0x39, 0x2A,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6B, 0x6C, 0xEC,
+0x0F, 0x6A, 0x8C, 0xEA, 0x03, 0x2A, 0x92, 0x32,
+0x6C, 0xEA, 0x20, 0xE8, 0x07, 0x4A, 0x6C, 0xEA,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x08, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A, 0x01, 0x6C,
+0x04, 0xF0, 0x00, 0x6D, 0x09, 0x10, 0xFF, 0x4A,
+0x44, 0x33, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x54, 0x9A, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEB,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x54, 0x9A, 0x01, 0x6C, 0x08, 0xF0, 0x00, 0x6D,
+0x09, 0x10, 0x44, 0x32, 0x6F, 0x42, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x54, 0x9A, 0x01, 0x6D,
+0x02, 0x6C, 0xA4, 0xEB, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x04, 0x2A, 0x01, 0x6C,
+0x08, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0x44, 0x32,
+0xFF, 0x4A, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA,
+0x00, 0x18, 0x98, 0xE1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x04, 0x2A, 0x01, 0x6C,
+0x04, 0xF0, 0x00, 0x6D, 0x05, 0x10, 0xFF, 0x4A,
+0x44, 0x32, 0x01, 0x6D, 0x02, 0x6C, 0xA4, 0xEA,
+0x00, 0x18, 0x98, 0xE1, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6D, 0x8C, 0xED, 0x01, 0x6C, 0x44, 0x67,
+0x15, 0x4D, 0x44, 0xED, 0xA2, 0x67, 0x00, 0x18,
+0x17, 0xE1, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
+0x04, 0x2D, 0x03, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x05, 0x10, 0x1B, 0x4D, 0x01, 0x6A, 0x44, 0xED,
+0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0x17, 0xE1,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
+0x00, 0x18, 0x2D, 0xEC, 0x01, 0x6D, 0x02, 0x6C,
+0xA4, 0xEA, 0x00, 0x18, 0x17, 0xE1, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x2D, 0xEC,
+0x01, 0x6D, 0x03, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
+0x17, 0xE1, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
+0x18, 0x4D, 0x01, 0x6A, 0x44, 0xED, 0x00, 0x6C,
+0xA2, 0x67, 0x00, 0x18, 0x17, 0xE1, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6D, 0x8C, 0xED, 0x01, 0x6C, 0x44, 0x67,
+0x15, 0x4D, 0x44, 0xED, 0xA2, 0x67, 0x00, 0x18,
+0x48, 0xE1, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6D, 0x8C, 0xED,
+0x04, 0x2D, 0x03, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x05, 0x10, 0x1B, 0x4D, 0x01, 0x6A, 0x44, 0xED,
+0x03, 0x6C, 0xA2, 0x67, 0x00, 0x18, 0x48, 0xE1,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
+0x00, 0x18, 0x2D, 0xEC, 0x01, 0x6D, 0x02, 0x6C,
+0xA4, 0xEA, 0x00, 0x18, 0x48, 0xE1, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x2D, 0xEC,
+0x01, 0x6D, 0x03, 0x6C, 0xA4, 0xEA, 0x00, 0x18,
+0x48, 0xE1, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xDE, 0x63, 0x43, 0x62, 0x42, 0xD1, 0x41, 0xD0,
+0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x54, 0xC3,
+0x0F, 0x6A, 0x56, 0xC3, 0x10, 0x6A, 0x57, 0xC3,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7, 0x44, 0x9A,
+0xFF, 0x69, 0x8C, 0xE9, 0x30, 0x31, 0x49, 0xE1,
+0x40, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0x06, 0x04,
+0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x04, 0x05,
+0x04, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF6, 0x48, 0x9A, 0x07, 0x04, 0x04, 0x05,
+0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E, 0x04, 0xD2,
+0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF5, 0x5C, 0x9A, 0x08, 0x04,
+0x04, 0x05, 0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E,
+0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF6, 0x50, 0x9A,
+0x09, 0x04, 0x04, 0x05, 0x45, 0xE1, 0x40, 0x99,
+0x04, 0x6E, 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x05, 0x04, 0x40, 0xEA, 0x43, 0x97,
+0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0xDD, 0xF0, 0x50, 0x9A, 0xDD, 0xF0, 0x74, 0x9B,
+0x00, 0xA2, 0x20, 0xA3, 0xFF, 0x6A, 0x4C, 0xE8,
+0x4C, 0xE9, 0x2A, 0xE8, 0x43, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF7, 0x44, 0x9A, 0x10, 0x33,
+0x49, 0xE3, 0x40, 0xA2, 0xFF, 0x6B, 0x6C, 0xEA,
+0x56, 0x32, 0x6C, 0xEA, 0x07, 0x5A, 0x2C, 0x60,
+0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32, 0x5C, 0xF2,
+0x18, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF6, 0x4B, 0xA2,
+0x1F, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x54, 0x9A, 0x18, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x5C, 0x9A, 0x13, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x40, 0x9A, 0x0E, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x44, 0x9A,
+0x09, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x48, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x4C, 0x9A, 0x90, 0x67, 0x40, 0xEA,
+0x01, 0x48, 0x7F, 0x6A, 0x4C, 0xE8, 0x0A, 0xE9,
+0xC2, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xDD, 0xF0,
+0x50, 0x9A, 0x20, 0xC2, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF0, 0x7C, 0x9A,
+0x02, 0x6C, 0x00, 0xF4, 0x00, 0x6D, 0x40, 0x9B,
+0x30, 0xF0, 0x20, 0x69, 0x8D, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x64, 0x9A,
+0xFF, 0xF7, 0x1F, 0x6C, 0x40, 0xAB, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB, 0x10, 0xF0,
+0x24, 0x6A, 0xDD, 0xF0, 0x18, 0x9A, 0x10, 0xF0,
+0x24, 0x6B, 0xDD, 0xF0, 0x1C, 0x4B, 0x40, 0x98,
+0x60, 0x9B, 0x0A, 0x6C, 0x6C, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF3, 0x74, 0x9B, 0x6D, 0xEA,
+0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA,
+0x40, 0x98, 0xDF, 0xF7, 0x01, 0x6B, 0x6B, 0xEB,
+0x6C, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xFD, 0xF0,
+0x60, 0x9B, 0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8,
+0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6C, 0xDD, 0xF0, 0x1C, 0x4C, 0x40, 0x98,
+0x80, 0x9C, 0x8C, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
+0x5C, 0x99, 0x0A, 0x6C, 0x40, 0xEA, 0x40, 0x98,
+0x1D, 0xF0, 0x01, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xFD, 0xF0, 0x64, 0x9B,
+0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
+0x5C, 0x99, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xFD, 0xF0, 0xA8, 0x9B,
+0xFF, 0x6A, 0x08, 0x6E, 0x60, 0xA5, 0xCB, 0xEE,
+0x4C, 0xEC, 0x4C, 0xEB, 0xCC, 0xEB, 0x6D, 0xEC,
+0x10, 0xF0, 0x24, 0x6B, 0xFD, 0xF0, 0x6C, 0x9B,
+0x4C, 0xEC, 0x80, 0xC5, 0x60, 0xA3, 0x6C, 0xEA,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
+0xFD, 0xF0, 0xC8, 0x9B, 0xFF, 0x6A, 0x08, 0x6F,
+0x60, 0xA6, 0xEB, 0xEF, 0x4C, 0xEC, 0x4C, 0xEB,
+0xEC, 0xEB, 0x6D, 0xEC, 0x4C, 0xED, 0x4C, 0xEC,
+0x10, 0xF0, 0x24, 0x6A, 0xFD, 0xF0, 0x4C, 0x9A,
+0x80, 0xC6, 0xA0, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x00, 0x6C, 0x00, 0x18, 0x39, 0xEE, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x01, 0x68,
+0x0B, 0xE8, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x69,
+0x01, 0xF4, 0x00, 0x6C, 0xB0, 0x67, 0x00, 0x18,
+0x42, 0xE7, 0xCE, 0xF4, 0x70, 0x99, 0x04, 0x6E,
+0xCB, 0xEE, 0x4C, 0xEE, 0x01, 0xF4, 0x00, 0x6C,
+0xB0, 0x67, 0x40, 0xEB, 0x00, 0x6C, 0xA4, 0x67,
+0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7, 0x00, 0x6C,
+0xE4, 0x67, 0x30, 0xF0, 0x20, 0x6B, 0xA4, 0x67,
+0xD0, 0x67, 0x8F, 0xF5, 0x58, 0xCB, 0x00, 0x18,
+0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
+0x7C, 0x9A, 0xFE, 0x6A, 0xB0, 0x67, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0xA1, 0xF0, 0x14, 0x6C,
+0x00, 0x18, 0x42, 0xE7, 0xCE, 0xF4, 0x70, 0x99,
+0x40, 0x6E, 0xA1, 0xF0, 0x14, 0x6C, 0xB0, 0x67,
+0x4D, 0xEE, 0x40, 0xEB, 0x00, 0x18, 0x0C, 0xC9,
+0x01, 0x72, 0x06, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x1D, 0xF0, 0x44, 0x9A, 0x3F, 0x6B, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0xFD, 0xF0, 0x70, 0x9A,
+0xFD, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0xFD, 0xF0, 0x70, 0x9A, 0xFF, 0x69, 0x02, 0x6C,
+0x40, 0xA3, 0x01, 0x68, 0x0B, 0xE8, 0x2C, 0xEA,
+0x8D, 0xEA, 0x2C, 0xEA, 0x40, 0xC3, 0x10, 0xF0,
+0x24, 0x6A, 0x1D, 0xF0, 0x44, 0x9A, 0x01, 0x6B,
+0x6B, 0xEB, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xFD, 0xF0, 0x54, 0x9A, 0x09, 0x6B, 0xB0, 0x67,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5,
+0x44, 0x9A, 0x7A, 0x6B, 0x6B, 0xEB, 0x60, 0xC2,
+0xA1, 0xF0, 0x12, 0x4C, 0x00, 0x18, 0x42, 0xE7,
+0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x70, 0x9C,
+0x41, 0x6E, 0xCB, 0xEE, 0xB0, 0x67, 0x4C, 0xEE,
+0xA1, 0xF0, 0x14, 0x6C, 0x40, 0xEB, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF5, 0x7C, 0x9A, 0x01, 0x6C,
+0x40, 0xA3, 0x2C, 0xEA, 0x8D, 0xEA, 0x2C, 0xEA,
+0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x01, 0xF3, 0x01, 0x49, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x8F, 0xF5, 0xF8, 0xAA,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF3, 0x48, 0x9A,
+0x00, 0x6C, 0xD0, 0x67, 0x4D, 0xEF, 0xA4, 0x67,
+0x00, 0x18, 0xA0, 0xE7, 0x91, 0x67, 0xB0, 0x67,
+0x00, 0x18, 0x42, 0xE7, 0x30, 0xF0, 0x20, 0x6C,
+0xCE, 0xF4, 0x70, 0x9C, 0x03, 0x6E, 0xB0, 0x67,
+0x4D, 0xEE, 0x91, 0x67, 0x40, 0xEB, 0x01, 0x6C,
+0x00, 0x18, 0x39, 0xEE, 0x00, 0x18, 0x00, 0xD6,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0x1D, 0xF1, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x80, 0xA2, 0xEB, 0xF6,
+0xD4, 0xA3, 0xEB, 0xF6, 0x9C, 0xC3, 0xA0, 0xAA,
+0x01, 0xF0, 0x00, 0x6C, 0xAC, 0xEC, 0x83, 0x35,
+0x03, 0x6C, 0xAE, 0x35, 0x8B, 0xEC, 0xA4, 0x35,
+0xCC, 0xEC, 0xAD, 0xEC, 0xEB, 0xF6, 0x94, 0xC3,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF1, 0x90, 0x9C,
+0xA0, 0xAC, 0xEB, 0xF6, 0xBE, 0xCB, 0xA0, 0xAA,
+0xBF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x60, 0xCA,
+0xA0, 0xAA, 0x7F, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB,
+0x60, 0xCA, 0xC0, 0xAA, 0xFE, 0xF7, 0x1F, 0x6B,
+0xFF, 0xF7, 0x1F, 0x6D, 0xCC, 0xEB, 0x60, 0xCA,
+0x40, 0xAC, 0xFF, 0x6B, 0x21, 0x4B, 0xAC, 0xEA,
+0x6D, 0xEA, 0xAC, 0xEA, 0x40, 0xCC, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x10, 0xF0, 0x24, 0x6B, 0xEB, 0xF6, 0x9C, 0xA2,
+0x1D, 0xF1, 0x6C, 0x9B, 0x01, 0x6E, 0x80, 0xC3,
+0x10, 0xF0, 0x24, 0x6C, 0xEB, 0xF6, 0xBE, 0xAA,
+0x1D, 0xF1, 0x90, 0x9C, 0xA0, 0xCC, 0xEB, 0xF6,
+0x54, 0xA2, 0x80, 0xAB, 0xFF, 0xF7, 0x1F, 0x6D,
+0x46, 0x32, 0xCC, 0xEA, 0xAC, 0xEC, 0x40, 0x32,
+0xFE, 0xF7, 0x1E, 0x4E, 0x4C, 0x32, 0xCC, 0xEC,
+0x8D, 0xEA, 0xAC, 0xEA, 0x40, 0xCB, 0x20, 0xE8,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0x6A, 0x04, 0x67, 0x4C, 0xE8, 0x30, 0x70,
+0x26, 0x67, 0x4C, 0xED, 0x09, 0x61, 0x41, 0xA6,
+0x0C, 0x72, 0x06, 0x61, 0x30, 0xF0, 0x21, 0x6A,
+0xD0, 0xF4, 0x4F, 0xA2, 0x00, 0x6B, 0x44, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF6, 0x60, 0x9A,
+0xFF, 0x6C, 0x08, 0x6E, 0x40, 0xA3, 0xCB, 0xEE,
+0x8C, 0xEA, 0xCC, 0xEA, 0x05, 0x6E, 0xCD, 0xEA,
+0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF6, 0x44, 0x9A, 0x60, 0xA2, 0x0F, 0x6A,
+0x6C, 0xEA, 0x04, 0x72, 0x1C, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF3, 0x5C, 0x9A, 0x90, 0x67,
+0xD1, 0x67, 0x40, 0xEA, 0x01, 0x72, 0x01, 0x6B,
+0x23, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3,
+0x58, 0x9A, 0x83, 0x67, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
+0x6C, 0x9A, 0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x02, 0x6B, 0x11, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF3, 0x58, 0x9A, 0x02, 0x6C,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A, 0x04, 0x6C,
+0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x03, 0x6B,
+0x23, 0x70, 0x03, 0x60, 0x30, 0x70, 0x0A, 0x60,
+0x2F, 0x10, 0x03, 0x73, 0x2D, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF3, 0x4C, 0x9A, 0x00, 0x6C,
+0x40, 0xEA, 0x1C, 0x10, 0x41, 0xA1, 0x0D, 0x72,
+0x0E, 0x61, 0x01, 0x6A, 0x6E, 0xEA, 0x06, 0x2A,
+0x30, 0xF0, 0x21, 0x6B, 0xD0, 0xF4, 0x4F, 0xC3,
+0x01, 0x6D, 0x09, 0x10, 0x01, 0x6C, 0x30, 0xF0,
+0x21, 0x6A, 0xD0, 0xF4, 0x8F, 0xC2, 0x01, 0x6A,
+0x4E, 0xEB, 0x01, 0x5B, 0xB8, 0x67, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF3, 0x54, 0x9A, 0xC0, 0xA1,
+0x00, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF1,
+0x54, 0x9A, 0xEF, 0xF7, 0x1F, 0x68, 0x02, 0x6B,
+0x40, 0xAA, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xCF, 0xF5, 0x58, 0xAA, 0x0E, 0xEA, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0xFC, 0xEC, 0x02, 0x6B,
+0x50, 0x67, 0x6C, 0xEA, 0x08, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF5, 0x58, 0xAA, 0x6C, 0xEA,
+0x02, 0x2A, 0x00, 0x18, 0xFC, 0xEC, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF5, 0x58, 0xAA, 0x80, 0x6B,
+0x0E, 0xEA, 0x6C, 0xEA, 0x06, 0x22, 0x0C, 0xEB,
+0x04, 0x2B, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
+0x0A, 0xD6, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
+0x18, 0xCA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x01, 0x74, 0x1C, 0x60, 0x05, 0x24,
+0x02, 0x74, 0x0E, 0x60, 0x03, 0x74, 0x51, 0x60,
+0x5B, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1,
+0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF1,
+0x84, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1, 0x68, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4, 0x80, 0x9C,
+0x40, 0x9B, 0x8C, 0xEA, 0x44, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x3D, 0xF1, 0x60, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x3D, 0xF1, 0x84, 0x9C, 0x40, 0x9B,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0xFC, 0xF3,
+0x84, 0x9C, 0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF5, 0x58, 0xAA, 0x80, 0x6B,
+0x6C, 0xEA, 0x1F, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF5, 0x40, 0xA2, 0x05, 0x5A, 0x19, 0x60,
+0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0x0A, 0xD6,
+0x0A, 0x68, 0x01, 0x6E, 0x00, 0x6C, 0x01, 0x6D,
+0xCB, 0xEE, 0x00, 0x18, 0x8D, 0xE7, 0x04, 0x6B,
+0x4C, 0xEB, 0x02, 0x23, 0x01, 0x68, 0x04, 0x10,
+0x01, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0x0A, 0xD6,
+0xFF, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0xED, 0x28,
+0x04, 0x10, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
+0x0A, 0xD6, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1,
+0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x5C, 0xF4,
+0x9C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x04, 0x67, 0x30, 0xF0, 0x20, 0x6C, 0x69, 0xF2,
+0x10, 0x4C, 0xB0, 0x67, 0x05, 0x6E, 0x40, 0xEA,
+0x40, 0xA0, 0x01, 0x69, 0x2C, 0xEA, 0x56, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x48, 0x9A,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x40, 0xA2, 0xC9, 0xF0, 0x65, 0xA0, 0x04, 0x6C,
+0xC9, 0xF0, 0x48, 0xC0, 0x00, 0x6A, 0xC9, 0xF0,
+0x47, 0xC0, 0x07, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0xC9, 0xF0, 0x45, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF3, 0x5C, 0x9A, 0x40, 0xEA, 0xA9, 0xF0,
+0x68, 0xA0, 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x0E, 0x22, 0x00, 0x6A, 0xC9, 0xF0,
+0x59, 0xC0, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1,
+0x4C, 0x9A, 0xC9, 0xF0, 0x2B, 0xC0, 0x60, 0x9A,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF5, 0x7C, 0xDA,
+0x30, 0xF0, 0x20, 0x6A, 0x69, 0xF2, 0x52, 0xA2,
+0x04, 0x6B, 0x6C, 0xEA, 0x13, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0,
+0x87, 0xA2, 0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x2B,
+0x64, 0x6C, 0x6D, 0xEC, 0xE0, 0xF0, 0x87, 0xC2,
+0x05, 0x10, 0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0xE0, 0xF0, 0x67, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF3, 0x58, 0x9A, 0x03, 0x6B, 0x60, 0xC2,
+0x06, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x89, 0xF2,
+0x71, 0xC2, 0x1E, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF3, 0x58, 0x9A, 0x03, 0x6C, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3, 0x5C, 0x9A,
+0x03, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0, 0x85, 0xA2,
+0x07, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xA9, 0xF0,
+0x8C, 0xA2, 0xC9, 0xF0, 0x65, 0xC2, 0x41, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0xA9, 0xF0, 0x6C, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xC9, 0xF0, 0x84, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
+0x6C, 0xEC, 0xC9, 0xF0, 0x84, 0xC2, 0xC9, 0xF0,
+0x85, 0xA2, 0x8C, 0xEB, 0xC9, 0xF0, 0x65, 0xC2,
+0xA9, 0xF0, 0x6B, 0xA2, 0x80, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3, 0x54, 0x9A,
+0x01, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xA9, 0xF0, 0x6A, 0xA2,
+0x08, 0x6C, 0x8C, 0xEB, 0x0C, 0x23, 0x30, 0xF0,
+0x20, 0x6B, 0xCF, 0xF5, 0x65, 0xA3, 0x68, 0xF3,
+0x54, 0xA2, 0x07, 0x6C, 0x7F, 0x6E, 0x6C, 0xEC,
+0x01, 0x6D, 0x4C, 0xEE, 0x0F, 0x10, 0x68, 0xF3,
+0x74, 0xA2, 0x7F, 0x6A, 0x6C, 0xEA, 0x0C, 0x2A,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x65, 0xA2,
+0x07, 0x6A, 0xFF, 0x6C, 0x6C, 0xEA, 0x00, 0x6D,
+0x4C, 0xEC, 0xC5, 0x67, 0x00, 0x18, 0xE9, 0xCF,
+0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48,
+0xC0, 0xF0, 0x5D, 0xA0, 0x07, 0x6C, 0x00, 0x6D,
+0x4C, 0xEC, 0x00, 0x18, 0x50, 0xD1, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF3, 0x4C, 0x9A, 0x08, 0x6C,
+0x40, 0xEA, 0xE0, 0xF0, 0x4A, 0xA0, 0x4A, 0x32,
+0xE0, 0xF0, 0x49, 0xC0, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xA9, 0xF0, 0x88, 0xA2,
+0x01, 0x6B, 0xFF, 0x6D, 0x6C, 0xEC, 0x31, 0x24,
+0xA9, 0xF0, 0x8A, 0xA2, 0x08, 0x6E, 0xCC, 0xEC,
+0x2C, 0x24, 0xC9, 0xF0, 0x85, 0xA2, 0x6C, 0xEC,
+0xAC, 0xEC, 0x05, 0x2C, 0xA9, 0xF0, 0x4B, 0xA2,
+0x4C, 0xEB, 0xAC, 0xEB, 0x17, 0x23, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0,
+0x70, 0xAA, 0xFF, 0x6C, 0x01, 0x4C, 0x8C, 0xEB,
+0x0D, 0x2B, 0xC0, 0xF0, 0x5D, 0xA2, 0x07, 0x6C,
+0x01, 0x6D, 0x4C, 0xEC, 0x00, 0x18, 0x50, 0xD1,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
+0x40, 0xEA, 0x0B, 0x10, 0x00, 0x6A, 0x10, 0xF0,
+0x24, 0x6C, 0x01, 0x6E, 0x97, 0xF3, 0x09, 0x4C,
+0xA2, 0x67, 0xE6, 0x67, 0x04, 0xD2, 0x00, 0x18,
+0xFC, 0xE9, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0x69, 0x2C, 0xEC, 0xAC, 0xE9, 0x21, 0x24,
+0x91, 0x67, 0x01, 0x6D, 0x30, 0xF0, 0x20, 0x68,
+0x00, 0x18, 0x50, 0xD1, 0xC0, 0xF1, 0x08, 0x48,
+0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF2, 0x9F, 0xA0,
+0x2E, 0xF4, 0x50, 0x9A, 0x01, 0x6D, 0x08, 0x6E,
+0xF1, 0x67, 0x40, 0xEA, 0xC9, 0xF0, 0x84, 0xA0,
+0x01, 0x6B, 0x4C, 0xEB, 0x03, 0x6A, 0x4B, 0xEA,
+0x64, 0x33, 0x8C, 0xEA, 0x6D, 0xEA, 0x05, 0x6B,
+0x6B, 0xEB, 0x6C, 0xEA, 0xC9, 0xF0, 0x44, 0xC0,
+0x1A, 0x10, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0xA9, 0xF0, 0x4A, 0xA0, 0x08, 0x6B,
+0x6C, 0xEA, 0x0F, 0x2A, 0x91, 0x67, 0x00, 0x6D,
+0x00, 0x18, 0x50, 0xD1, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF2, 0x9F, 0xA0, 0x2E, 0xF4, 0x50, 0x9A,
+0x00, 0x6D, 0x08, 0x6E, 0xF1, 0x67, 0x40, 0xEA,
+0x02, 0x10, 0x00, 0x18, 0xE2, 0xEE, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x01, 0x74,
+0xA0, 0xF0, 0x1B, 0x60, 0x03, 0x24, 0x02, 0x74,
+0x22, 0x60, 0xE0, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xA9, 0xF0, 0x88, 0xA2,
+0x20, 0x6B, 0xFF, 0x6D, 0x8C, 0xEB, 0xC0, 0xF0,
+0x15, 0x2B, 0x10, 0x6B, 0x8C, 0xEB, 0xAC, 0xEB,
+0xC0, 0xF0, 0x10, 0x23, 0xC9, 0xF0, 0x84, 0xA2,
+0x01, 0x6B, 0x8D, 0xEB, 0xC9, 0xF0, 0x64, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5, 0x65, 0xA2,
+0x07, 0x6A, 0x00, 0x6C, 0x6C, 0xEA, 0x4C, 0xED,
+0x00, 0x18, 0x02, 0xEF, 0xBF, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xA9, 0xF0,
+0x88, 0xA2, 0x20, 0x6B, 0x8C, 0xEB, 0x07, 0x2B,
+0xA9, 0xF0, 0x6C, 0xA2, 0x08, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x45, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0,
+0x08, 0xA2, 0xA9, 0xF0, 0x49, 0xA2, 0x43, 0xE0,
+0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xE8, 0x20, 0x58,
+0x03, 0x61, 0xEF, 0xF7, 0x1F, 0x68, 0x03, 0x10,
+0x00, 0x30, 0x08, 0x30, 0x4C, 0xE8, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0xA9, 0xF0,
+0x8C, 0xA3, 0x08, 0x6A, 0x8C, 0xEA, 0x08, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x58, 0x9A,
+0xE8, 0xF2, 0x82, 0xA3, 0xB0, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xA9, 0xF0, 0xA8, 0xA2, 0x20, 0x6C, 0xFF, 0x6B,
+0x8C, 0xED, 0x16, 0x25, 0xA9, 0xF0, 0x4C, 0xA2,
+0x8C, 0xEA, 0x6C, 0xEA, 0x11, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xCF, 0xF5, 0x45, 0xA2, 0x07, 0x6F,
+0x02, 0x36, 0x4C, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF3, 0x48, 0x9A, 0xB0, 0x67, 0x00, 0x6C,
+0x6C, 0xED, 0x6C, 0xEE, 0x6C, 0xEF, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0xA9, 0xF0, 0xA8, 0xA3, 0x20, 0x6C, 0xFF, 0x6A,
+0xAC, 0xEC, 0x2B, 0x2C, 0x10, 0x6C, 0xAC, 0xEC,
+0x4C, 0xEC, 0x18, 0x24, 0xC9, 0xF0, 0xA4, 0xA3,
+0x02, 0x6C, 0x8B, 0xEC, 0xAC, 0xEC, 0x30, 0xF0,
+0x20, 0x68, 0xC9, 0xF0, 0x84, 0xC3, 0xEF, 0xF4,
+0x08, 0x48, 0xC0, 0xF0, 0x7D, 0xA0, 0x07, 0x6D,
+0x01, 0x6C, 0x6C, 0xED, 0x4C, 0xED, 0x00, 0x18,
+0x02, 0xEF, 0xC0, 0xF0, 0x5E, 0xA0, 0x01, 0x4A,
+0xC0, 0xF0, 0x5E, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0x69, 0xF2, 0x73, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
+0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0xFF, 0x6C, 0x6F, 0x6D, 0x06, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xC9, 0xF0, 0x85, 0xA2, 0x02, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0xC9, 0xF0, 0x65, 0xC2,
+0x31, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xA9, 0xF0, 0xAB, 0xA2, 0x01, 0x6B,
+0xFF, 0x6C, 0xAC, 0xEB, 0x05, 0x23, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0x1F, 0x10,
+0xA9, 0xF0, 0x68, 0xA2, 0x20, 0x6A, 0x6C, 0xEA,
+0x8C, 0xEA, 0x08, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0x6F, 0x6D,
+0x0E, 0x6E, 0x13, 0x10, 0x10, 0x6A, 0x6C, 0xEA,
+0x8C, 0xEA, 0x10, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0x6F, 0x6D,
+0x0F, 0x6E, 0x07, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0x00, 0x6D,
+0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD0, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF4,
+0x68, 0x9B, 0xE9, 0xA4, 0x48, 0xA4, 0xA0, 0xAB,
+0xE0, 0x37, 0x5D, 0xE7, 0xFF, 0xF7, 0x1F, 0x6A,
+0x4C, 0xEF, 0x4C, 0xED, 0x4A, 0xA4, 0xCB, 0xA4,
+0x02, 0x5A, 0x04, 0x61, 0x02, 0x72, 0x0B, 0x6A,
+0x30, 0x61, 0x0C, 0x10, 0x00, 0xF1, 0x01, 0x5F,
+0x2B, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0xAB, 0xF6, 0x03, 0x4B, 0x2B, 0xF6,
+0xE1, 0xC2, 0x0B, 0x10, 0x00, 0xF1, 0x01, 0x5F,
+0x1F, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0xAB, 0xF7, 0x03, 0x4B, 0x2B, 0xF6,
+0xE2, 0xC2, 0xB5, 0xE6, 0x10, 0xF0, 0x24, 0x6E,
+0x00, 0x6A, 0x3D, 0xF1, 0x14, 0x9E, 0x10, 0xF0,
+0x24, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x5C, 0xF4,
+0xD8, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x40, 0x9A, 0xBC, 0x35, 0x00, 0x6C, 0x15, 0xE5,
+0xD9, 0xE3, 0x40, 0xEA, 0x00, 0x6A, 0x01, 0x10,
+0x0A, 0x6A, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x01, 0x2A, 0x01, 0x6A,
+0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
+0xCB, 0xF6, 0xDD, 0xA4, 0x38, 0x26, 0x8D, 0xE2,
+0x4B, 0xF4, 0x78, 0xA3, 0x34, 0x23, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF4, 0x68, 0x9B, 0xFF, 0xF7,
+0x1F, 0x6D, 0x01, 0x72, 0x60, 0xAB, 0x6C, 0xED,
+0x03, 0x60, 0x02, 0x72, 0x08, 0x60, 0x27, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF6, 0x03, 0x4B,
+0x4B, 0xF4, 0xF9, 0xA4, 0x06, 0x10, 0x4B, 0xF4,
+0xFA, 0xA4, 0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF7,
+0x03, 0x4B, 0xE1, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA,
+0x10, 0xF0, 0x24, 0x6D, 0x5C, 0xF4, 0xB8, 0x9D,
+0xD9, 0xE2, 0x00, 0x6A, 0xB5, 0xE3, 0x10, 0xF0,
+0x24, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0x3D, 0xF1,
+0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x40, 0x9A, 0xDC, 0x36, 0x00, 0x6C, 0x79, 0xE6,
+0x40, 0xEA, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
+0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x21, 0x6C,
+0x70, 0xF3, 0x1C, 0x4C, 0x00, 0x6D, 0x18, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x03, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF6, 0x74, 0xC2,
+0x00, 0x6B, 0xA0, 0xF6, 0x6C, 0xC2, 0xA0, 0xF6,
+0x6D, 0xC2, 0xA0, 0xF6, 0x6E, 0xC2, 0x0C, 0x6B,
+0xA0, 0xF6, 0x6F, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
+0x01, 0x74, 0xAC, 0xEA, 0x09, 0x60, 0x03, 0x24,
+0x02, 0x74, 0x0B, 0x60, 0x20, 0xE8, 0x10, 0xF0,
+0x24, 0x6B, 0x3C, 0xF7, 0x68, 0x9B, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x3D, 0xF1, 0x78, 0x9B,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6B, 0x3D, 0xF1,
+0x7C, 0x9B, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
+0xFF, 0x6B, 0x6C, 0xEC, 0x01, 0x74, 0x0A, 0x60,
+0x04, 0x24, 0x02, 0x74, 0x00, 0x6A, 0x13, 0x61,
+0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7,
+0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x3D, 0xF1, 0x58, 0x9A, 0x40, 0xA2, 0x6C, 0xEA,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x3D, 0xF1,
+0x5C, 0x9A, 0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8,
+0xFF, 0x6B, 0x6C, 0xEC, 0x01, 0x74, 0x0A, 0x60,
+0x04, 0x24, 0x02, 0x74, 0x00, 0x6A, 0x13, 0x61,
+0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF1,
+0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x5D, 0xF1, 0x44, 0x9A, 0x40, 0xA2, 0x6C, 0xEA,
+0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF1,
+0x48, 0x9A, 0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF4, 0x52, 0xA2, 0x01, 0x6B, 0x4C, 0xEB,
+0x00, 0x6A, 0x07, 0x23, 0x10, 0xF0, 0x24, 0x6A,
+0x5D, 0xF1, 0x40, 0x9A, 0x60, 0xA2, 0xFF, 0x6A,
+0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0x80, 0xF6, 0xB4, 0xA3, 0x01, 0x6C,
+0xAC, 0xEC, 0x04, 0x24, 0x80, 0xF6, 0x96, 0xA3,
+0x00, 0x18, 0x1A, 0xF0, 0x05, 0x97, 0xFF, 0x6B,
+0x5E, 0x32, 0x6C, 0xEA, 0x03, 0x63, 0x00, 0xEF,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x80, 0xF6, 0x94, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
+0x05, 0x23, 0x00, 0x6B, 0xA0, 0xF6, 0x6C, 0xC2,
+0xA0, 0xF6, 0x6D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x80, 0xF6, 0x94, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
+0x05, 0x23, 0x00, 0x6B, 0xA0, 0xF6, 0x6C, 0xC2,
+0xA0, 0xF6, 0x6D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x80, 0xF6, 0x94, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
+0x05, 0x23, 0x00, 0x6B, 0xA0, 0xF6, 0x6C, 0xC2,
+0xA0, 0xF6, 0x6D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0xFF, 0x6C, 0x6F, 0x6D, 0x1F, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
+0x88, 0x9B, 0xBF, 0x6B, 0xA0, 0xA4, 0xAC, 0xEB,
+0x60, 0xC4, 0x04, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
+0x30, 0xF0, 0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49,
+0x80, 0xF6, 0x74, 0xA1, 0x02, 0x6A, 0x6C, 0xEA,
+0x0D, 0x22, 0x80, 0xF6, 0x16, 0xA1, 0x90, 0x67,
+0x00, 0x18, 0x0C, 0xF0, 0xBF, 0x6D, 0x4C, 0xED,
+0x90, 0x67, 0x00, 0x18, 0xFF, 0xEF, 0x04, 0x6A,
+0xA0, 0xF6, 0x4E, 0xC1, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
+0x88, 0x9B, 0xBF, 0x6B, 0xA0, 0xA4, 0xAC, 0xEB,
+0x60, 0xC4, 0x00, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
+0x30, 0xF0, 0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49,
+0x80, 0xF6, 0x74, 0xA1, 0x02, 0x6A, 0x6C, 0xEA,
+0x0D, 0x22, 0x80, 0xF6, 0x16, 0xA1, 0x90, 0x67,
+0x00, 0x18, 0x0C, 0xF0, 0xBF, 0x6D, 0x4C, 0xED,
+0x90, 0x67, 0x00, 0x18, 0xFF, 0xEF, 0x00, 0x6A,
+0xA0, 0xF6, 0x4E, 0xC1, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
+0x21, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x03, 0x6B,
+0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2,
+0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x03, 0x6B,
+0xA0, 0xF6, 0x6E, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x01, 0x6B,
+0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2,
+0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x01, 0x6B,
+0xA0, 0xF6, 0x6E, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x9D, 0xF0,
+0x00, 0x18, 0x52, 0xF0, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x9D, 0xF0, 0x00, 0x18, 0x8A, 0xF0,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x08, 0xF3, 0x8A, 0xA3, 0x02, 0x6A, 0xFF, 0x6D,
+0x8C, 0xEA, 0x0D, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF7, 0x88, 0x9A, 0x40, 0x6E, 0x40, 0xA4,
+0xAC, 0xEA, 0xCD, 0xEA, 0xAC, 0xEA, 0x40, 0xC4,
+0x01, 0x6A, 0x08, 0xF3, 0x4D, 0xC3, 0x30, 0xF0,
+0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48, 0x80, 0xF6,
+0x74, 0xA0, 0x02, 0x6A, 0x6C, 0xEA, 0x0F, 0x22,
+0x80, 0xF6, 0x36, 0xA0, 0x91, 0x67, 0x00, 0x18,
+0x0C, 0xF0, 0x40, 0x6B, 0x4D, 0xEB, 0xFF, 0x6D,
+0x91, 0x67, 0x6C, 0xED, 0x00, 0x18, 0xFF, 0xEF,
+0x01, 0x6A, 0xA0, 0xF6, 0x4E, 0xC0, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB4, 0xF0,
+0x00, 0x18, 0x70, 0xF0, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
+0x22, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF3, 0x8A, 0xA3,
+0x02, 0x6A, 0xFF, 0x6D, 0x8C, 0xEA, 0x0D, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7, 0x88, 0x9A,
+0x40, 0x6E, 0x40, 0xA4, 0xAC, 0xEA, 0xCD, 0xEA,
+0xAC, 0xEA, 0x40, 0xC4, 0x03, 0x6A, 0x08, 0xF3,
+0x4D, 0xC3, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
+0x08, 0x48, 0x80, 0xF6, 0x74, 0xA0, 0x02, 0x6A,
+0x6C, 0xEA, 0x0F, 0x22, 0x80, 0xF6, 0x36, 0xA0,
+0x91, 0x67, 0x00, 0x18, 0x0C, 0xF0, 0x40, 0x6B,
+0x4D, 0xEB, 0xFF, 0x6D, 0x91, 0x67, 0x6C, 0xED,
+0x00, 0x18, 0xFF, 0xEF, 0x03, 0x6A, 0xA0, 0xF6,
+0x4E, 0xC0, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x03, 0x23, 0x01, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x03, 0x23, 0x01, 0x6B, 0xA0, 0xF6, 0x6E, 0xC2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xF9, 0xF0,
+0x00, 0x18, 0x70, 0xF0, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0x6F, 0x6D,
+0x25, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x02, 0x6B, 0x8C, 0xEB, 0x0B, 0x23, 0x10, 0xF0,
+0x24, 0x6B, 0x3C, 0xF7, 0x88, 0x9B, 0xBF, 0x6B,
+0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x04, 0x6B,
+0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x69,
+0xEF, 0xF4, 0x08, 0x49, 0x80, 0xF6, 0x74, 0xA1,
+0x02, 0x6A, 0x6C, 0xEA, 0x0D, 0x22, 0x80, 0xF6,
+0x16, 0xA1, 0x90, 0x67, 0x00, 0x18, 0x0C, 0xF0,
+0xBF, 0x6D, 0x4C, 0xED, 0x90, 0x67, 0x00, 0x18,
+0xFF, 0xEF, 0x04, 0x6A, 0xA0, 0xF6, 0x4E, 0xC1,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x01, 0x6B, 0x8C, 0xEB, 0x05, 0x23, 0x08, 0xF3,
+0x4D, 0xA2, 0x02, 0x72, 0x00, 0x6A, 0x10, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x80, 0xF6, 0x54, 0xA3, 0x01, 0x6C, 0x4C, 0xEC,
+0x01, 0x6A, 0x06, 0x24, 0xA0, 0xF6, 0x4E, 0xA3,
+0x02, 0x6B, 0x6E, 0xEA, 0x01, 0x5A, 0x58, 0x67,
+0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x24, 0x67, 0x08, 0xF3,
+0x8A, 0xA3, 0x01, 0x6D, 0xFF, 0x6A, 0xAC, 0xEC,
+0x4C, 0xEC, 0x4C, 0xE9, 0x00, 0x68, 0x05, 0x24,
+0x08, 0xF3, 0x0A, 0xA3, 0x1A, 0x30, 0xAC, 0xE8,
+0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x01, 0x6B,
+0x6C, 0xEC, 0x06, 0x24, 0x80, 0xF6, 0x14, 0xA2,
+0xFF, 0x6A, 0x1A, 0x30, 0x6C, 0xE8, 0x4C, 0xE8,
+0x00, 0x18, 0x28, 0xF0, 0x01, 0x72, 0x25, 0x61,
+0x24, 0x28, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x72, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x08, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x91, 0x67, 0x01, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x80, 0xF6, 0x54, 0xA3, 0x01, 0x6C, 0x4C, 0xEC,
+0x01, 0x6A, 0x0C, 0x24, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x80, 0xF6, 0xD5, 0xA3,
+0x91, 0x67, 0x01, 0x6D, 0x40, 0xEA, 0x01, 0x6A,
+0x01, 0x10, 0x00, 0x6A, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x5D, 0xA2,
+0x05, 0x5A, 0xE0, 0xF0, 0x0C, 0x60, 0x10, 0xF0,
+0x24, 0x6B, 0x48, 0x32, 0x9C, 0xF2, 0x08, 0x4B,
+0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
+0x94, 0xA3, 0x04, 0x6A, 0xFF, 0x6D, 0x8C, 0xEA,
+0x19, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0x8C, 0x9A, 0x02, 0x6E, 0x40, 0xA4, 0xAC, 0xEA,
+0xCD, 0xEA, 0xAC, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
+0x24, 0x6A, 0xFD, 0xF0, 0x88, 0x9A, 0xF8, 0x6A,
+0xA0, 0xA4, 0xAC, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
+0x24, 0x6A, 0x80, 0xF6, 0x78, 0xA3, 0x5D, 0xF1,
+0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x6C, 0x9A, 0x83, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
+0xB4, 0xA3, 0x04, 0x6A, 0xFF, 0x6C, 0xAC, 0xEA,
+0x1D, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0xB0, 0x9A, 0x02, 0x6E, 0x40, 0xA5, 0x8C, 0xEA,
+0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
+0x24, 0x6A, 0xFD, 0xF0, 0xA8, 0x9A, 0xF6, 0x4E,
+0x40, 0xA5, 0x8C, 0xEA, 0xCC, 0xEA, 0x01, 0x6E,
+0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
+0x24, 0x6A, 0x80, 0xF6, 0x78, 0xA3, 0x5D, 0xF1,
+0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x70, 0x9A, 0x57, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
+0xB4, 0xA3, 0x04, 0x6A, 0xFF, 0x6C, 0xAC, 0xEA,
+0x1D, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0xB4, 0x9A, 0x02, 0x6E, 0x08, 0x6F, 0x40, 0xA5,
+0xEB, 0xEF, 0x8C, 0xEA, 0xCD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xFD, 0xF0,
+0xA8, 0x9A, 0x40, 0xA5, 0x8C, 0xEA, 0xEC, 0xEA,
+0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
+0x24, 0x6A, 0x80, 0xF6, 0x78, 0xA3, 0x5D, 0xF1,
+0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x74, 0x9A, 0x2B, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
+0xB4, 0xA3, 0x04, 0x6A, 0xFF, 0x6C, 0xAC, 0xEA,
+0x1D, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0xB8, 0x9A, 0x02, 0x6E, 0x40, 0xA5, 0x8C, 0xEA,
+0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
+0x24, 0x6A, 0xFD, 0xF0, 0xA8, 0x9A, 0xF6, 0x4E,
+0x40, 0xA5, 0x8C, 0xEA, 0xCC, 0xEA, 0x03, 0x6E,
+0xCD, 0xEA, 0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0,
+0x24, 0x6A, 0x80, 0xF6, 0x78, 0xA3, 0x5D, 0xF1,
+0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x78, 0x9A, 0x40, 0xA3, 0xFF, 0x6C,
+0x01, 0x6D, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6, 0x54, 0xA3,
+0x04, 0x6E, 0xFF, 0x6C, 0xCC, 0xEA, 0x1C, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0xBC, 0x9A,
+0x02, 0x6F, 0x40, 0xA5, 0x8C, 0xEA, 0xED, 0xEA,
+0x8C, 0xEA, 0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
+0xFD, 0xF0, 0xA8, 0x9A, 0xF6, 0x4F, 0x40, 0xA5,
+0x8C, 0xEA, 0xEC, 0xEA, 0xCD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x80, 0xF6,
+0x78, 0xA3, 0x5D, 0xF1, 0x4C, 0x9A, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x7C, 0x9A,
+0xFF, 0x6C, 0x01, 0x6D, 0x40, 0xA3, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x8A, 0xA2, 0x01, 0x6B, 0x6C, 0xEC,
+0x02, 0x24, 0x08, 0xF3, 0x6C, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6,
+0x94, 0xA2, 0x01, 0x6B, 0x6C, 0xEC, 0x02, 0x24,
+0xA0, 0xF6, 0x6D, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1, 0x08, 0x4D,
+0x08, 0xF3, 0xCA, 0xA5, 0x02, 0x6B, 0xFF, 0x6A,
+0xCC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x02, 0x2B,
+0x08, 0xF3, 0x8E, 0xC5, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0xB4, 0xA2,
+0x02, 0x6B, 0xAC, 0xEB, 0x02, 0x2B, 0xA0, 0xF6,
+0x8F, 0xC2, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x68, 0xF3, 0x74, 0xA0,
+0x7F, 0x6A, 0xFF, 0x69, 0x6C, 0xEA, 0x02, 0x72,
+0x2A, 0x60, 0x68, 0xF3, 0x75, 0xA0, 0x10, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x2C, 0xEA, 0x23, 0x22,
+0x00, 0x18, 0x0C, 0xC9, 0x20, 0x2A, 0x08, 0xF3,
+0x6A, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x08, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x00, 0x6D, 0x0C, 0x6C, 0xC5, 0x67,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0x80, 0xF6, 0x94, 0xA3, 0x01, 0x6A,
+0x8C, 0xEA, 0x09, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x80, 0xF6, 0xD5, 0xA3,
+0x0C, 0x6C, 0x00, 0x6D, 0x40, 0xEA, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF3, 0x4A, 0xA3,
+0x01, 0x6C, 0x8C, 0xEA, 0x02, 0x2A, 0x0C, 0x6C,
+0x08, 0x10, 0x08, 0xF3, 0x4A, 0xA3, 0x5A, 0x32,
+0x8C, 0xEA, 0xFF, 0x6C, 0x8C, 0xEA, 0x08, 0xF3,
+0x8E, 0xA3, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0x80, 0xF6, 0xD4, 0xA3, 0x01, 0x6D,
+0xAC, 0xEE, 0x08, 0x26, 0x80, 0xF6, 0x54, 0xA3,
+0xFF, 0x6C, 0x5A, 0x32, 0xAC, 0xEA, 0x8C, 0xEA,
+0xA0, 0xF6, 0x8F, 0xA3, 0x24, 0x22, 0x02, 0x74,
+0x26, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4,
+0x72, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x08, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x02, 0x6C, 0x01, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x80, 0xF6, 0x94, 0xA3, 0x01, 0x6A, 0x8C, 0xEA,
+0x0C, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x48, 0x9A, 0x80, 0xF6, 0xD5, 0xA3, 0x02, 0x6C,
+0x01, 0x6D, 0x40, 0xEA, 0x02, 0x10, 0x02, 0x74,
+0x02, 0x60, 0x00, 0x18, 0xFD, 0xF1, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x6A, 0xA2, 0x01, 0x6C, 0xA4, 0x67,
+0x6C, 0xED, 0x09, 0x25, 0x08, 0xF3, 0x8B, 0xC2,
+0x02, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x6D, 0xC5, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6,
+0x74, 0xA2, 0x01, 0x6C, 0xA4, 0x67, 0x6C, 0xED,
+0x09, 0x25, 0xA0, 0xF6, 0x8C, 0xC2, 0x02, 0x6A,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x6D, 0xC5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
+0x08, 0x48, 0x80, 0xF6, 0x74, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x26, 0x22, 0xA0, 0xF6, 0x4E, 0xA0,
+0x04, 0x72, 0x22, 0x60, 0xA0, 0xF6, 0x4F, 0xA0,
+0x02, 0x72, 0x1E, 0x60, 0x02, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x18,
+0x6D, 0xC5, 0x16, 0x10, 0x00, 0x18, 0x1C, 0xF2,
+0xA0, 0xF6, 0x4F, 0xA0, 0x08, 0x72, 0x06, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x0C, 0x6C, 0x06, 0x10, 0x09, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x04, 0x6C,
+0x80, 0xF6, 0xD5, 0xA0, 0x00, 0x6D, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x00, 0xF2, 0x43, 0xA3, 0x51, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3,
+0xD0, 0xA2, 0x01, 0x6D, 0xFF, 0x6C, 0xAC, 0xEE,
+0x47, 0x26, 0x80, 0xF6, 0x74, 0xA3, 0xAC, 0xEB,
+0x8C, 0xEB, 0x42, 0x23, 0x10, 0xF0, 0x30, 0x6B,
+0x00, 0xF0, 0x00, 0x4B, 0xC1, 0xF7, 0xB0, 0xA3,
+0xFF, 0x75, 0x21, 0x60, 0xFF, 0x4D, 0xC1, 0xF7,
+0xB0, 0xC3, 0xC1, 0xF7, 0xD0, 0xA3, 0x1B, 0x2E,
+0xC1, 0xF7, 0xEF, 0xA3, 0x02, 0x6D, 0xAB, 0xED,
+0xEC, 0xED, 0xC1, 0xF7, 0xEE, 0xA3, 0xC1, 0xF7,
+0xAF, 0xC3, 0x71, 0x6D, 0xAB, 0xED, 0xEC, 0xED,
+0xC1, 0xF7, 0xAE, 0xC3, 0x68, 0xF3, 0xB2, 0xA2,
+0x08, 0xF3, 0xD4, 0xC2, 0x08, 0xF3, 0xB3, 0xC2,
+0xC1, 0xF7, 0x72, 0xA3, 0x0F, 0x6A, 0x6C, 0xEA,
+0x4C, 0xEC, 0x00, 0x18, 0x72, 0xEC, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0xB8, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x48, 0x9A, 0x0F, 0x6B,
+0xA6, 0x35, 0x02, 0x6C, 0x6C, 0xED, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6, 0x48, 0x9A,
+0x40, 0xEA, 0x06, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF5, 0x50, 0x9A, 0x06, 0x6C, 0x40, 0xEA,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x5B, 0xF2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x5B, 0xF2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x5B, 0xF2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x04, 0xD2, 0x80, 0xF6, 0x56, 0xA2, 0xFF, 0x69,
+0x04, 0x67, 0x01, 0x72, 0x2C, 0xE8, 0x31, 0x60,
+0x03, 0x22, 0x02, 0x72, 0x60, 0x60, 0xC3, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B,
+0x01, 0x6C, 0xC0, 0x6D, 0x40, 0xEA, 0x20, 0x6A,
+0x4D, 0xE8, 0x04, 0x92, 0x2C, 0xE8, 0x80, 0xF6,
+0x94, 0xA2, 0x04, 0x6A, 0x8C, 0xEA, 0x2C, 0xEA,
+0x0F, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
+0x40, 0x9A, 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x60, 0xA2, 0x6C, 0xE9, 0x20, 0xC2, 0x30, 0xF0,
+0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B, 0x61, 0x10,
+0x02, 0x6B, 0x8C, 0xEB, 0x2C, 0xEB, 0x05, 0x23,
+0x04, 0x93, 0xA0, 0xF6, 0x4C, 0xC3, 0xA0, 0xF6,
+0x4D, 0xC3, 0x01, 0x6C, 0x10, 0xF0, 0x00, 0x6D,
+0x64, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2,
+0x54, 0x9B, 0x01, 0x6C, 0x00, 0xF3, 0x00, 0x6D,
+0x40, 0xEA, 0x20, 0x6A, 0x4D, 0xE8, 0x04, 0x92,
+0x2C, 0xE8, 0x80, 0xF6, 0x94, 0xA2, 0x04, 0x6A,
+0x8C, 0xEA, 0x2C, 0xEA, 0x11, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF7, 0x40, 0x9A, 0x01, 0x6C,
+0x60, 0xA2, 0x6C, 0xE9, 0x20, 0xC2, 0x30, 0xF0,
+0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF3, 0xB0, 0x9B, 0x31, 0x10,
+0x02, 0x6B, 0x8C, 0xEB, 0x2C, 0xEB, 0x05, 0x23,
+0x04, 0x93, 0xA0, 0xF6, 0x4C, 0xC3, 0xA0, 0xF6,
+0x4D, 0xC3, 0x10, 0xF0, 0x24, 0x6A, 0x01, 0x6C,
+0x5C, 0xF3, 0xB0, 0x9A, 0x32, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0x4E, 0xF2, 0x54, 0x9B, 0x01, 0x6C,
+0x01, 0xF4, 0x00, 0x6D, 0x40, 0xEA, 0x20, 0x6A,
+0x4D, 0xE8, 0x04, 0x92, 0x2C, 0xE8, 0x80, 0xF6,
+0x94, 0xA2, 0x04, 0x6A, 0x8C, 0xEA, 0x2C, 0xEA,
+0x12, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF7,
+0x40, 0x9A, 0x01, 0x6C, 0x60, 0xA2, 0x6C, 0xE9,
+0x20, 0xC2, 0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2,
+0x54, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3,
+0xB4, 0x9B, 0x40, 0xEA, 0x10, 0x10, 0x02, 0x6B,
+0x8C, 0xEB, 0x2C, 0xEB, 0x05, 0x23, 0x04, 0x93,
+0xA0, 0xF6, 0x4C, 0xC3, 0xA0, 0xF6, 0x4D, 0xC3,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xB4, 0x9A,
+0x01, 0x6C, 0x00, 0x18, 0x98, 0xE1, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x9C, 0xA2, 0x08, 0x6A,
+0xFF, 0x6B, 0x8C, 0xEA, 0x09, 0x22, 0x10, 0x6A,
+0x8C, 0xEA, 0x6C, 0xEA, 0x02, 0x2A, 0x02, 0x6A,
+0x01, 0x10, 0x04, 0x6A, 0x4D, 0xE8, 0x6C, 0xE8,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x9C, 0xA2,
+0x02, 0x6A, 0xFF, 0x6B, 0x8C, 0xEA, 0x08, 0x22,
+0x20, 0x6A, 0x8C, 0xEA, 0x6C, 0xEA, 0x04, 0x22,
+0x80, 0x6A, 0x4B, 0xEA, 0x4D, 0xE8, 0x6C, 0xE8,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0xBC, 0xA2,
+0x40, 0x6C, 0x44, 0x67, 0xAC, 0xEA, 0xFF, 0x6B,
+0x06, 0x2A, 0x80, 0x4A, 0xAC, 0xEA, 0x6C, 0xEA,
+0x02, 0x2A, 0x8D, 0xE8, 0x6C, 0xE8, 0x50, 0x67,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x42, 0xED, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x02, 0x6B, 0x6C, 0xEC, 0x02, 0x24, 0x08, 0xF3,
+0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
+0x6C, 0xEC, 0x02, 0x24, 0xA0, 0xF6, 0x6E, 0xC2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0x72, 0xA2, 0x02, 0x6A,
+0xFF, 0x6C, 0x6C, 0xEA, 0x0A, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF7, 0x68, 0x9A, 0x40, 0x6D,
+0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
+0x8C, 0xEB, 0x0C, 0x23, 0x80, 0xF6, 0x16, 0xA2,
+0x90, 0x67, 0x00, 0x18, 0x0C, 0xF0, 0x40, 0x6B,
+0x4D, 0xEB, 0xFF, 0x6D, 0x90, 0x67, 0x6C, 0xED,
+0x00, 0x18, 0xFF, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67,
+0x23, 0x6E, 0x40, 0xEA, 0x00, 0x18, 0x42, 0xED,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x6C, 0xEC,
+0x02, 0x24, 0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6,
+0x94, 0xA2, 0x02, 0x6B, 0x6C, 0xEC, 0x02, 0x24,
+0xA0, 0xF6, 0x6E, 0xC2, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0xFF, 0x6C, 0xA4, 0x67, 0x20, 0x6E, 0x40, 0xEA,
+0x00, 0x18, 0x42, 0xED, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x02, 0x6B, 0x6C, 0xEC, 0x02, 0x24, 0x08, 0xF3,
+0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
+0x6C, 0xEC, 0x02, 0x24, 0xA0, 0xF6, 0x6E, 0xC2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x9D, 0xF0,
+0x00, 0x18, 0x53, 0xF3, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x6F, 0xED, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0x8A, 0xA2,
+0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x03, 0x6B,
+0x08, 0xF3, 0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x94, 0xA2,
+0x02, 0x6B, 0x8C, 0xEB, 0x03, 0x23, 0x03, 0x6B,
+0xA0, 0xF6, 0x6E, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x00, 0x18, 0x6F, 0xED,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0xFF, 0x6C, 0x6F, 0x6D, 0x24, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x0B, 0x23, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
+0x88, 0x9B, 0xBF, 0x6B, 0xA0, 0xA4, 0xAC, 0xEB,
+0x60, 0xC4, 0x04, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
+0x30, 0xF0, 0x20, 0x69, 0xEF, 0xF4, 0x08, 0x49,
+0x80, 0xF6, 0x74, 0xA1, 0x02, 0x6A, 0x6C, 0xEA,
+0x0D, 0x22, 0x80, 0xF6, 0x16, 0xA1, 0x90, 0x67,
+0x00, 0x18, 0x0C, 0xF0, 0xBF, 0x6D, 0x4C, 0xED,
+0x90, 0x67, 0x00, 0x18, 0xFF, 0xEF, 0x04, 0x6A,
+0xA0, 0xF6, 0x4E, 0xC1, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x6F, 0xED,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A,
+0x00, 0x6D, 0xFF, 0x6C, 0xC5, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x8A, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x03, 0x23, 0x01, 0x6B, 0x08, 0xF3, 0x6D, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x80, 0xF6, 0x94, 0xA2, 0x02, 0x6B, 0x8C, 0xEB,
+0x03, 0x23, 0x01, 0x6B, 0xA0, 0xF6, 0x6E, 0xC2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x9A, 0xF3,
+0x00, 0x18, 0x70, 0xF0, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1, 0x08, 0x4D,
+0x08, 0xF3, 0xCA, 0xA5, 0x02, 0x6B, 0xFF, 0x6A,
+0xCC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC, 0x00, 0x6A,
+0x02, 0x23, 0x08, 0xF3, 0x4D, 0xA5, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0x80, 0xF6,
+0xD4, 0xA3, 0x02, 0x6D, 0xCC, 0xED, 0x02, 0x25,
+0xA0, 0xF6, 0x4E, 0xA3, 0x8A, 0xEA, 0x69, 0x60,
+0x05, 0x5C, 0x67, 0x60, 0x10, 0xF0, 0x24, 0x6B,
+0x88, 0x34, 0x9C, 0xF2, 0x1C, 0x4B, 0x8D, 0xE3,
+0x60, 0x9B, 0x00, 0xEB, 0x04, 0x72, 0x03, 0x61,
+0x00, 0x18, 0xD4, 0xF0, 0x5A, 0x10, 0x02, 0x72,
+0x03, 0x61, 0x00, 0x18, 0xAE, 0xF3, 0x55, 0x10,
+0x03, 0x72, 0x03, 0x61, 0x00, 0x18, 0x0C, 0xF1,
+0x50, 0x10, 0x01, 0x72, 0x4E, 0x61, 0x00, 0x18,
+0x70, 0xF0, 0x4B, 0x10, 0x04, 0x72, 0x03, 0x61,
+0x00, 0x18, 0xB4, 0xF0, 0x46, 0x10, 0x02, 0x72,
+0x03, 0x61, 0x00, 0x18, 0x9A, 0xF3, 0x41, 0x10,
+0x03, 0x72, 0x03, 0x61, 0x00, 0x18, 0xF9, 0xF0,
+0x3C, 0x10, 0x3B, 0x2A, 0x00, 0x18, 0x9D, 0xF0,
+0x38, 0x10, 0x04, 0x72, 0x03, 0x61, 0x00, 0x18,
+0x2C, 0xF3, 0x33, 0x10, 0x01, 0x72, 0x03, 0x61,
+0x00, 0x18, 0x53, 0xF3, 0x2E, 0x10, 0x03, 0x72,
+0x03, 0x61, 0x00, 0x18, 0x1D, 0xF3, 0x29, 0x10,
+0x28, 0x2A, 0x00, 0x18, 0x66, 0xF3, 0x25, 0x10,
+0x04, 0x72, 0x03, 0x61, 0x00, 0x18, 0xD9, 0xF0,
+0x20, 0x10, 0x01, 0x72, 0x03, 0x61, 0x00, 0x18,
+0x8A, 0xF0, 0x1B, 0x10, 0x02, 0x72, 0x03, 0x61,
+0x00, 0x18, 0x6B, 0xF3, 0x16, 0x10, 0x15, 0x2A,
+0x00, 0x18, 0xAF, 0xF0, 0x12, 0x10, 0x03, 0x72,
+0x03, 0x61, 0x00, 0x18, 0x11, 0xF1, 0x0D, 0x10,
+0x01, 0x72, 0x03, 0x61, 0x00, 0x18, 0x52, 0xF0,
+0x08, 0x10, 0x02, 0x72, 0x03, 0x61, 0x00, 0x18,
+0x7B, 0xF3, 0x03, 0x10, 0x02, 0x2A, 0x00, 0x18,
+0xAA, 0xF0, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0xA7, 0x44, 0x30, 0xF0, 0x21, 0x6C, 0x01, 0x4D,
+0x70, 0xF3, 0x1C, 0x4C, 0x18, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x00, 0xF2, 0x43, 0xA3, 0x6A, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0x98, 0xA2, 0x01, 0x6A,
+0x4C, 0xEC, 0x15, 0x24, 0x80, 0xF6, 0x94, 0xA3,
+0x8C, 0xEA, 0xFF, 0x6C, 0x8C, 0xEA, 0x0F, 0x22,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0xC1, 0xF7, 0xAF, 0xA2, 0x02, 0x6C, 0xAD, 0xEC,
+0xC1, 0xF7, 0x8F, 0xC2, 0xA0, 0xF6, 0x68, 0x9B,
+0xC1, 0xF7, 0x70, 0xC2, 0x4E, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3,
+0xF0, 0xA2, 0x01, 0x6C, 0xA4, 0x67, 0xEC, 0xED,
+0xFF, 0x6B, 0x43, 0x25, 0x30, 0xF0, 0x21, 0x6D,
+0x70, 0xF3, 0xBC, 0xA5, 0x8C, 0xED, 0x6C, 0xED,
+0x3C, 0x2D, 0x10, 0xF0, 0x30, 0x6C, 0x00, 0xF0,
+0x00, 0x4C, 0xC1, 0xF7, 0x0F, 0xA4, 0x02, 0x6E,
+0xCB, 0xEE, 0x0C, 0xEE, 0xC1, 0xF7, 0x0E, 0xA4,
+0xC1, 0xF7, 0xCF, 0xC4, 0x71, 0x6E, 0xCB, 0xEE,
+0x0C, 0xEE, 0xC1, 0xF7, 0xCE, 0xC4, 0x68, 0xF3,
+0x92, 0xA2, 0x08, 0xF3, 0xB4, 0xC2, 0x08, 0xF3,
+0x93, 0xC2, 0x1E, 0x6C, 0xEC, 0xEC, 0x6C, 0xEC,
+0x18, 0x24, 0x08, 0xF3, 0xB0, 0xA2, 0x0F, 0x6A,
+0x02, 0x6C, 0xA6, 0x35, 0x4C, 0xED, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x48, 0x9A, 0x6C, 0xED,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6,
+0x48, 0x9A, 0x40, 0xEA, 0x06, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x50, 0x9A, 0x06, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7,
+0x52, 0xA2, 0x0F, 0x6C, 0x4C, 0xEC, 0x00, 0x18,
+0x72, 0xEC, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4,
+0x08, 0x4B, 0x80, 0xF6, 0x56, 0xA3, 0x01, 0x72,
+0x6C, 0x60, 0x05, 0x22, 0x02, 0x72, 0x00, 0x6C,
+0x20, 0xF1, 0x13, 0x61, 0xC9, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF7, 0x48, 0x9A, 0xFF, 0x6D,
+0x08, 0x6F, 0x80, 0xA2, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF7, 0xCC, 0x9A, 0xEB, 0xEF, 0xAC, 0xEC,
+0x40, 0xA6, 0xAC, 0xEA, 0xEC, 0xEA, 0x80, 0xF6,
+0xF5, 0xA3, 0xED, 0xEA, 0xAC, 0xEA, 0x40, 0xC6,
+0x80, 0xF6, 0x74, 0xA3, 0x08, 0x6A, 0x6C, 0xEA,
+0xAC, 0xEA, 0x00, 0xF1, 0x16, 0x22, 0x10, 0x6E,
+0x43, 0x67, 0xCC, 0xEA, 0xAC, 0xEA, 0x07, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0x5D, 0xF1, 0x70, 0x9A,
+0x8F, 0x6A, 0xA0, 0xA3, 0x0A, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x5D, 0xF1, 0x70, 0x9A, 0x71, 0x6F,
+0xEB, 0xEF, 0x40, 0xA3, 0xAC, 0xEA, 0xEC, 0xEA,
+0xCD, 0xEA, 0xAC, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x10, 0xF0,
+0x24, 0x6B, 0x80, 0xF6, 0xBC, 0x9A, 0x5D, 0xF1,
+0x74, 0x9B, 0x01, 0x6E, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xA0, 0xF6, 0xA0, 0x9A, 0x5D, 0xF1,
+0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF6, 0xA4, 0x9A, 0x5D, 0xF1, 0x7C, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF6,
+0xA8, 0x9A, 0x7D, 0xF1, 0x60, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF1, 0x64, 0x9B,
+0x80, 0xF6, 0x54, 0xA2, 0xFF, 0x6D, 0xE0, 0xA3,
+0x52, 0x32, 0xCC, 0xEA, 0xC4, 0xEA, 0xAC, 0xEF,
+0x46, 0x67, 0xED, 0xEA, 0xAC, 0xEA, 0x40, 0xC3,
+0xCC, 0x10, 0x10, 0xF0, 0x24, 0x6D, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF7, 0x0C, 0x9D, 0x3D, 0xF1,
+0x58, 0x9A, 0x80, 0xF6, 0xB5, 0xA3, 0x71, 0x6E,
+0x80, 0xA2, 0xE0, 0xA0, 0xFF, 0x6A, 0xCB, 0xEE,
+0x4C, 0xEF, 0xB0, 0x35, 0xCC, 0xEF, 0xED, 0xED,
+0x4C, 0xED, 0xA0, 0xC0, 0x80, 0xF6, 0xB4, 0xA3,
+0x08, 0x6B, 0x4C, 0xEC, 0xAC, 0xEB, 0x4C, 0xEB,
+0xA0, 0xF0, 0x0F, 0x23, 0x10, 0x6B, 0xAC, 0xEB,
+0x4C, 0xEB, 0x09, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0x5D, 0xF1, 0xB0, 0x9B, 0x60, 0xA5, 0x4C, 0xEB,
+0xCC, 0xEB, 0x20, 0x6E, 0x08, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x5D, 0xF1, 0xB0, 0x9B, 0x60, 0xA5,
+0x4C, 0xEB, 0xCC, 0xEB, 0x30, 0x6E, 0xCD, 0xEB,
+0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xC5,
+0xEF, 0xF4, 0x08, 0x4A, 0x10, 0xF0, 0x24, 0x6B,
+0x80, 0xF6, 0xBC, 0x9A, 0x5D, 0xF1, 0x74, 0x9B,
+0x01, 0x6F, 0xFF, 0x6E, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xA0, 0xF6, 0xA0, 0x9A, 0x5D, 0xF1,
+0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF6, 0xA4, 0x9A, 0x5D, 0xF1, 0x7C, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF6,
+0xA8, 0x9A, 0x7D, 0xF1, 0x60, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF1, 0xA4, 0x9B,
+0x80, 0xF6, 0x74, 0xA2, 0x00, 0xA5, 0x72, 0x33,
+0xEC, 0xEB, 0xCC, 0xE8, 0x42, 0x43, 0x64, 0x10,
+0x10, 0xF0, 0x24, 0x6D, 0x10, 0xF0, 0x24, 0x6A,
+0x3D, 0xF1, 0x5C, 0x9A, 0x7D, 0xF1, 0xC8, 0x9D,
+0x08, 0x6F, 0x80, 0xA2, 0xA0, 0xA6, 0xFF, 0x6A,
+0xEB, 0xEF, 0x4C, 0xED, 0xEC, 0xED, 0x80, 0xF6,
+0xF5, 0xA3, 0x4C, 0xEC, 0xED, 0xED, 0x4C, 0xED,
+0xA0, 0xC6, 0x80, 0xF6, 0xB4, 0xA3, 0x08, 0x6B,
+0xAC, 0xEB, 0x4C, 0xEB, 0x4E, 0x23, 0x10, 0x6B,
+0xAC, 0xEB, 0x4C, 0xEB, 0x0B, 0x2B, 0x10, 0xF0,
+0x24, 0x6B, 0x5D, 0xF1, 0xB0, 0x9B, 0x71, 0x6E,
+0xCB, 0xEE, 0x60, 0xA5, 0x4C, 0xEB, 0xCC, 0xEB,
+0x40, 0x6E, 0x0A, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x5D, 0xF1, 0xB0, 0x9B, 0x71, 0x6E, 0xCB, 0xEE,
+0x60, 0xA5, 0x4C, 0xEB, 0xCC, 0xEB, 0x50, 0x6E,
+0xCD, 0xEB, 0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
+0x60, 0xC5, 0xEF, 0xF4, 0x08, 0x4A, 0x10, 0xF0,
+0x24, 0x6B, 0x80, 0xF6, 0xBC, 0x9A, 0x5D, 0xF1,
+0x74, 0x9B, 0x01, 0x6F, 0xFF, 0x6E, 0xA0, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF6, 0xA0, 0x9A,
+0x5D, 0xF1, 0x78, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xA0, 0xF6, 0xA4, 0x9A, 0x5D, 0xF1,
+0x7C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF6, 0xA8, 0x9A, 0x7D, 0xF1, 0x60, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0x7D, 0xF1,
+0xA4, 0x9B, 0x80, 0xF6, 0x74, 0xA2, 0x00, 0xA5,
+0x72, 0x33, 0xEC, 0xEB, 0xCC, 0xE8, 0x44, 0x43,
+0xE4, 0xEA, 0x47, 0x67, 0x0D, 0xEA, 0xCC, 0xEA,
+0x40, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF3,
+0x58, 0x9A, 0xFF, 0x69, 0x00, 0x6D, 0x60, 0xA2,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7, 0x50, 0x9A,
+0x2C, 0xEB, 0x30, 0xF0, 0x20, 0x68, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7, 0x74, 0x9B,
+0xEF, 0xF4, 0x08, 0x48, 0xA0, 0xC3, 0x10, 0xF0,
+0x24, 0x6B, 0x3C, 0xF7, 0x78, 0x9B, 0x20, 0x6D,
+0xA0, 0xC3, 0x40, 0xA2, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF7, 0x7C, 0x9B, 0x2C, 0xEA, 0x50, 0x32,
+0x01, 0x4A, 0x2C, 0xEA, 0x40, 0xC3, 0x80, 0xF6,
+0x74, 0xA0, 0x01, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x60, 0x22, 0x00, 0x18, 0xAE, 0xF2, 0x04, 0xD2,
+0x00, 0x18, 0x6A, 0xF1, 0x80, 0xF6, 0x96, 0xA0,
+0x04, 0x95, 0x00, 0x18, 0xFF, 0xEF, 0x80, 0xF6,
+0x74, 0xA0, 0x02, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA,
+0x16, 0x22, 0xA0, 0xF6, 0x4E, 0xA0, 0x03, 0x2A,
+0x01, 0x6C, 0x00, 0x18, 0xB3, 0xF3, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x7C, 0xA2, 0x40, 0x6A,
+0x04, 0x6C, 0x6C, 0xEA, 0x05, 0x2A, 0x00, 0x18,
+0x28, 0xF0, 0x01, 0x6C, 0x01, 0x2A, 0x02, 0x6C,
+0x00, 0x18, 0xB3, 0xF3, 0x33, 0x10, 0x40, 0x6A,
+0x6C, 0xEA, 0x2C, 0xEA, 0x0B, 0x22, 0xA0, 0xF6,
+0x4F, 0xA0, 0x02, 0x72, 0x2B, 0x60, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x02, 0x6C,
+0x00, 0x6D, 0x1A, 0x10, 0xA0, 0xF6, 0x4F, 0xA0,
+0x02, 0x72, 0x1A, 0x61, 0x00, 0x18, 0x9A, 0xCC,
+0x00, 0x18, 0x28, 0xF0, 0x01, 0x72, 0x0A, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0x2E, 0xF4, 0x48, 0x9A, 0x48, 0xF5, 0x80, 0xA3,
+0x01, 0x6D, 0x06, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x2E, 0xF4, 0x48, 0x9A, 0x00, 0x6C, 0xA4, 0x67,
+0x80, 0xF6, 0xD5, 0xA0, 0x40, 0xEA, 0x06, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF5, 0x44, 0xA2,
+0xA0, 0xF6, 0x4F, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF7, 0x44, 0x9A, 0x22, 0x6B, 0x60, 0xC2,
+0x3E, 0x10, 0x80, 0xF6, 0x96, 0xA0, 0x00, 0x6D,
+0x00, 0x18, 0xFF, 0xEF, 0x80, 0xF6, 0x74, 0xA0,
+0x02, 0x6A, 0x6C, 0xEA, 0x2C, 0xEA, 0x08, 0x22,
+0xA0, 0xF6, 0x4E, 0xA0, 0x04, 0x72, 0x2F, 0x61,
+0x00, 0x6C, 0x00, 0x18, 0xB3, 0xF3, 0x2B, 0x10,
+0xA0, 0xF6, 0x4F, 0xA0, 0x02, 0x72, 0x06, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x04, 0x6C, 0x07, 0x10, 0x08, 0x72, 0x09, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x0C, 0x6C, 0x80, 0xF6, 0xD5, 0xA0, 0x01, 0x6D,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
+0x08, 0x48, 0x80, 0xF6, 0x95, 0xA0, 0x00, 0x18,
+0x65, 0xC5, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x48, 0xF5,
+0x80, 0xA3, 0x80, 0xF6, 0xD5, 0xA0, 0x01, 0x6D,
+0x40, 0xEA, 0x00, 0x18, 0xEC, 0xEF, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x00, 0x6A, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x74, 0xA2,
+0x01, 0x6C, 0xFF, 0x6D, 0x6C, 0xEC, 0x3D, 0x24,
+0xA0, 0xF6, 0x8E, 0xA2, 0x04, 0x74, 0x39, 0x60,
+0xA0, 0xF6, 0x8F, 0xA2, 0x02, 0x74, 0x35, 0x60,
+0x02, 0x6C, 0x6C, 0xEC, 0xAC, 0xEC, 0x03, 0x24,
+0x00, 0x18, 0x6D, 0xC5, 0x2E, 0x10, 0x80, 0x6C,
+0x8B, 0xEC, 0x6C, 0xEC, 0xAC, 0xEC, 0x05, 0x24,
+0x80, 0xF6, 0x97, 0xA2, 0x00, 0x18, 0xDE, 0xC4,
+0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0xFF, 0x6C, 0xA4, 0x67, 0xC4, 0x67,
+0x40, 0xEA, 0x00, 0x18, 0xB6, 0xC4, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B, 0xA0, 0xF6,
+0x4F, 0xA3, 0x0C, 0x72, 0x07, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A, 0x08, 0x6C,
+0x00, 0x6D, 0x08, 0x10, 0x04, 0x72, 0x09, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x48, 0x9A,
+0x00, 0x6C, 0xA4, 0x67, 0x80, 0xF6, 0xD5, 0xA3,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0xF2, 0x63, 0xA2, 0xA0, 0xF0,
+0x04, 0x2B, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x08, 0xF3, 0x90, 0xA0, 0x01, 0x6B,
+0xFF, 0x69, 0x6C, 0xEC, 0x80, 0xF0, 0x19, 0x24,
+0x80, 0xF6, 0x54, 0xA2, 0x6C, 0xEA, 0x2C, 0xEA,
+0x80, 0xF0, 0x13, 0x22, 0x10, 0xF0, 0x30, 0x6C,
+0x00, 0xF0, 0x00, 0x4C, 0xC1, 0xF7, 0xAF, 0xA4,
+0x02, 0x6A, 0xAC, 0xEA, 0x2C, 0xEA, 0x48, 0x22,
+0xAD, 0xEB, 0xC1, 0xF7, 0x6F, 0xC4, 0x10, 0xF0,
+0x30, 0x6C, 0xE6, 0xF1, 0x11, 0x4C, 0x00, 0x18,
+0xE9, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6,
+0x98, 0x9A, 0x00, 0x18, 0xE9, 0xE9, 0x08, 0xF3,
+0x52, 0xA0, 0x0F, 0x6B, 0x4C, 0xEB, 0x2C, 0xEB,
+0x00, 0x6A, 0x11, 0x10, 0x1E, 0x6D, 0xB8, 0xEA,
+0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
+0x12, 0xED, 0x91, 0xE5, 0x08, 0xF3, 0xB9, 0xA4,
+0x07, 0x6C, 0xAC, 0xEC, 0x02, 0x74, 0x05, 0x60,
+0x01, 0x4A, 0xFF, 0x6C, 0x8C, 0xEA, 0x62, 0xEA,
+0xED, 0x61, 0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1,
+0x08, 0x4D, 0x08, 0xF3, 0xD0, 0xA5, 0x0F, 0x6C,
+0x1F, 0x6B, 0x8C, 0xEA, 0x6B, 0xEB, 0x44, 0x32,
+0xCC, 0xEB, 0x4D, 0xEB, 0x10, 0xF0, 0x30, 0x68,
+0x08, 0xF3, 0x70, 0xC5, 0x00, 0xF0, 0x00, 0x48,
+0xC1, 0xF7, 0x52, 0xA0, 0x4C, 0xEC, 0x00, 0x18,
+0x98, 0xEC, 0xC1, 0xF7, 0x6F, 0xA0, 0x03, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0xC1, 0xF7, 0x4F, 0xC0,
+0x30, 0xF0, 0x20, 0x6A, 0xC8, 0xF4, 0xB8, 0xA2,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x48, 0x9A,
+0x0F, 0x6B, 0xA6, 0x35, 0x02, 0x6C, 0x6C, 0xED,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6,
+0x48, 0x9A, 0x40, 0xEA, 0x06, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x50, 0x9A, 0x06, 0x6C,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6C, 0xC8, 0xF4,
+0xB8, 0xA4, 0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF7,
+0x5C, 0x9A, 0x0F, 0x6C, 0xA6, 0x35, 0x8C, 0xED,
+0x10, 0xF0, 0x30, 0x6B, 0xE0, 0xF7, 0x08, 0x4D,
+0xE0, 0xA2, 0xA4, 0x35, 0x30, 0xF0, 0x21, 0x6A,
+0x00, 0xF0, 0x00, 0x4B, 0x90, 0xF3, 0x44, 0x9A,
+0x6D, 0xE5, 0x63, 0xA3, 0xFF, 0x6E, 0x42, 0x32,
+0x4A, 0x32, 0x6C, 0xEC, 0xCC, 0xEF, 0x93, 0xE2,
+0x6F, 0x47, 0x30, 0xF0, 0x20, 0x6A, 0x77, 0x33,
+0xEE, 0xF5, 0x54, 0x9A, 0x73, 0xE4, 0xCC, 0xEC,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x41, 0xF5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x41, 0xF5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0x41, 0xF5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xED,
+0x4C, 0xEC, 0x4C, 0xEE, 0xEC, 0xEA, 0x05, 0x25,
+0x01, 0x75, 0x56, 0x61, 0x08, 0x6B, 0x0C, 0x6D,
+0x02, 0x10, 0x0A, 0x6B, 0x0E, 0x6D, 0x01, 0x74,
+0x1D, 0x60, 0x02, 0x74, 0x2A, 0x60, 0x26, 0x67,
+0xE1, 0x45, 0xC4, 0xED, 0x24, 0xEB, 0x82, 0x67,
+0xCD, 0xE9, 0x84, 0xEF, 0xC1, 0x43, 0x8D, 0xE9,
+0x44, 0xEE, 0x4D, 0xE9, 0x01, 0x6A, 0x02, 0x67,
+0x04, 0xEB, 0x62, 0x67, 0x64, 0xED, 0xA2, 0x67,
+0x6D, 0xE8, 0xA4, 0xEF, 0xAD, 0xE8, 0x44, 0xEE,
+0xFF, 0xF7, 0x1F, 0x6C, 0x4D, 0xE8, 0x8C, 0xE9,
+0x8C, 0xE8, 0x1E, 0x10, 0x01, 0x6B, 0x01, 0x45,
+0x22, 0x67, 0x83, 0x67, 0x24, 0xE8, 0xC4, 0xED,
+0x84, 0xE8, 0xCD, 0xE9, 0xFF, 0xF7, 0x1F, 0x6A,
+0x04, 0x67, 0x64, 0xED, 0x4C, 0xE9, 0x6D, 0xE8,
+0x0E, 0x10, 0x01, 0x6C, 0x01, 0x43, 0x22, 0x67,
+0xA4, 0x67, 0x24, 0xE8, 0xC4, 0xEB, 0xA4, 0xE8,
+0xCD, 0xE9, 0xFF, 0xF7, 0x1F, 0x6A, 0x05, 0x67,
+0x84, 0xEB, 0x4C, 0xE9, 0x8D, 0xE8, 0x4C, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF3, 0x4C, 0x9A,
+0x38, 0x6C, 0x0F, 0xE8, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF3, 0x40, 0x9A, 0x40, 0xEA,
+0x4C, 0xE8, 0x04, 0x92, 0x2D, 0xE8, 0xFF, 0xF7,
+0x1F, 0x6D, 0x38, 0x6C, 0x0C, 0xED, 0x40, 0xEA,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
+0xE8, 0xF2, 0x7C, 0xA3, 0xFF, 0x6A, 0xAC, 0xEA,
+0x01, 0x73, 0x03, 0x61, 0xAD, 0xF4, 0x00, 0x6B,
+0x04, 0x10, 0x03, 0x73, 0x04, 0x61, 0xA5, 0xF1,
+0x00, 0x6B, 0x6B, 0xEB, 0x02, 0x10, 0x60, 0xF2,
+0x00, 0x6B, 0x60, 0xCC, 0x30, 0xF0, 0x20, 0x6B,
+0xE8, 0xF2, 0x7C, 0xA3, 0x02, 0x73, 0x0A, 0x61,
+0x10, 0xF0, 0x24, 0x6B, 0x9D, 0xF1, 0x74, 0x9B,
+0x74, 0x6D, 0xA0, 0xC3, 0xA0, 0xAC, 0x80, 0x6B,
+0xAD, 0xEB, 0x60, 0xCC, 0x09, 0x22, 0x60, 0xAC,
+0x00, 0xF2, 0x01, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x41, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA, 0x06, 0x10,
+0x60, 0xAC, 0x00, 0xF2, 0x00, 0x6A, 0x6D, 0xEA,
+0x40, 0x6B, 0x6D, 0xEA, 0x40, 0xCC, 0x20, 0xE8,
+0xFF, 0x63, 0x01, 0xD1, 0x00, 0xD0, 0x30, 0xF0,
+0x20, 0x6B, 0xE8, 0xF2, 0x7C, 0xA3, 0xFF, 0x6A,
+0x8C, 0xEA, 0x02, 0x73, 0x70, 0x61, 0x48, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF6, 0xE0, 0x9A,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x60, 0x9F, 0xC0, 0xF0, 0x64, 0xDA, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF6, 0xCC, 0x9B, 0x60, 0x9E,
+0xA0, 0xF0, 0x78, 0xDA, 0x10, 0xF0, 0x24, 0x6B,
+0x3D, 0xF1, 0xA0, 0x9B, 0x60, 0x9D, 0xA0, 0xF0,
+0x7C, 0xDA, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
+0x80, 0x9B, 0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF7,
+0x64, 0x9B, 0x20, 0x9C, 0xA0, 0xF0, 0x34, 0xDA,
+0x00, 0x9B, 0xC0, 0xF0, 0x00, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0x9D, 0xF1, 0x58, 0x9A, 0x2D, 0xEA,
+0x18, 0xF0, 0x01, 0x69, 0x2B, 0xE9, 0x2C, 0xEA,
+0x10, 0xF0, 0x24, 0x69, 0x3C, 0xF4, 0x2C, 0x99,
+0x0D, 0xE9, 0x02, 0xF0, 0x01, 0x68, 0x0B, 0xE8,
+0x0C, 0xE9, 0x10, 0xF0, 0x24, 0x68, 0x9D, 0xF1,
+0x1C, 0x98, 0x00, 0xDF, 0x04, 0x6F, 0xE0, 0xDE,
+0x10, 0xF0, 0x24, 0x6E, 0xBD, 0xF1, 0xC0, 0x9E,
+0xC0, 0xDD, 0x40, 0xDC, 0x20, 0xDB, 0x27, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x10, 0xF0, 0x24, 0x6B, 0xC0, 0xF0, 0x84, 0x9A,
+0xBC, 0xF6, 0x60, 0x9B, 0x80, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xA0, 0xF0, 0x98, 0x9A, 0x9C, 0xF6,
+0x6C, 0x9B, 0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xA0, 0xF0, 0x9C, 0x9A, 0x3D, 0xF1, 0x60, 0x9B,
+0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xA0, 0xF0,
+0x94, 0x9A, 0x3C, 0xF7, 0x60, 0x9B, 0x80, 0xDB,
+0xC0, 0xF0, 0x60, 0x9A, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF7, 0x44, 0x9A, 0x60, 0xDA, 0x01, 0x91,
+0x00, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0xFF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x06, 0xD3,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF4, 0x68, 0x9B,
+0xFF, 0x6A, 0x8C, 0xEA, 0x80, 0xAB, 0xE1, 0xF7,
+0x1F, 0x6B, 0x00, 0x68, 0x8C, 0xEB, 0x69, 0xE2,
+0x10, 0xF0, 0x24, 0x6B, 0xBD, 0xF1, 0x84, 0x9B,
+0x5C, 0x32, 0x91, 0xE2, 0x04, 0xD4, 0x22, 0x10,
+0x04, 0x92, 0x40, 0x9A, 0x05, 0xD2, 0x0D, 0x28,
+0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4, 0x50, 0x99,
+0x05, 0x96, 0x01, 0x6D, 0x83, 0xF1, 0x18, 0x6C,
+0xAB, 0xED, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x99,
+0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x50, 0x9A, 0x05, 0x96, 0x01, 0x6D, 0x83, 0xF1,
+0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x04, 0x93,
+0x01, 0x48, 0xFF, 0xF7, 0x1F, 0x6A, 0x04, 0x4B,
+0x4C, 0xE8, 0x04, 0xD3, 0x06, 0x92, 0x43, 0xE8,
+0xDB, 0x61, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0xDE, 0x63, 0x43, 0x62,
+0x42, 0xD1, 0x41, 0xD0, 0x01, 0x68, 0x00, 0x6A,
+0x0B, 0xE8, 0x04, 0xD2, 0x00, 0x6C, 0x30, 0xF0,
+0x20, 0x6A, 0x42, 0x6D, 0xD0, 0x67, 0xEF, 0xF4,
+0x30, 0xA2, 0x00, 0x18, 0x8D, 0xE7, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF3, 0x68, 0x9B, 0x4C, 0xEB,
+0x36, 0x2B, 0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67,
+0x00, 0x18, 0x8D, 0xE7, 0x1F, 0xF4, 0x00, 0x6B,
+0x4C, 0xEB, 0x62, 0x32, 0x4A, 0x32, 0x43, 0xE9,
+0x04, 0xD2, 0x02, 0x61, 0x4E, 0xE9, 0x16, 0x29,
+0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x54, 0xC3,
+0x1D, 0x6A, 0x56, 0xC3, 0x04, 0x6A, 0x57, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x06, 0x04, 0x04, 0x05, 0x04, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A,
+0x05, 0x04, 0x40, 0xEA, 0x01, 0x68, 0x0B, 0xE8,
+0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67, 0x00, 0x18,
+0x8D, 0xE7, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF3,
+0xE8, 0x9B, 0x00, 0x6C, 0x42, 0x6D, 0xD0, 0x67,
+0x4D, 0xEF, 0x00, 0x18, 0xA0, 0xE7, 0x43, 0x97,
+0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
+0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x90, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0xBD, 0xF1, 0x48, 0x9A, 0x48, 0x6B, 0x60, 0xC2,
+0x10, 0xF0, 0x24, 0x6A, 0xBD, 0xF1, 0x4C, 0x9A,
+0x01, 0x6B, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xBD, 0xF1, 0x50, 0x9A, 0x01, 0x6B, 0x40, 0xA2,
+0x6C, 0xEA, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
+0xBD, 0xF1, 0x74, 0x9A, 0x01, 0x6D, 0xFF, 0x6C,
+0x40, 0xA3, 0xAC, 0xEA, 0x0B, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF4, 0x4C, 0x9A, 0x40, 0xA2,
+0x4C, 0xEC, 0x8B, 0xEA, 0x8D, 0xEA, 0xC0, 0xF7,
+0x42, 0x32, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF4, 0x4C, 0x9A, 0xC0, 0xA2, 0x01, 0x6A,
+0x06, 0x26, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0x8C, 0xEA, 0x40, 0xC3, 0x01, 0x6A, 0x20, 0xE8,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0x30, 0xF0, 0x20, 0x68, 0x4E, 0xF2,
+0x50, 0x9A, 0xEF, 0xF4, 0x12, 0x48, 0xA4, 0x67,
+0x01, 0x6E, 0x90, 0x67, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x05, 0x6B, 0xEC, 0xF1, 0x60, 0xC2,
+0x00, 0xA0, 0x01, 0x6A, 0x4C, 0xE8, 0x19, 0x28,
+0x10, 0xF0, 0x24, 0x6C, 0x7B, 0xF4, 0x1D, 0x4C,
+0x00, 0x18, 0xE9, 0xE9, 0x10, 0xF0, 0x24, 0x6A,
+0xBD, 0xF1, 0x48, 0x9A, 0x00, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0xBD, 0xF1, 0x4C, 0x9A, 0x00, 0xC2,
+0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x11, 0xC2,
+0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x12, 0xC2,
+0x27, 0x10, 0x00, 0x6B, 0x30, 0xF0, 0x21, 0x6C,
+0xD0, 0xF4, 0x71, 0xC4, 0x30, 0xF0, 0x21, 0x6C,
+0xD0, 0xF4, 0x72, 0xC4, 0x10, 0xF0, 0x24, 0x6B,
+0xBD, 0xF1, 0x68, 0x9B, 0x48, 0x6C, 0x00, 0x6D,
+0x80, 0xC3, 0x10, 0xF0, 0x24, 0x6B, 0xBD, 0xF1,
+0x6C, 0x9B, 0xC8, 0x6E, 0x01, 0x6F, 0x40, 0xC3,
+0x10, 0xF0, 0x24, 0x6B, 0xBD, 0xF1, 0x98, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF4, 0x68, 0x9B,
+0x80, 0xDB, 0x10, 0xF0, 0x24, 0x6C, 0x7B, 0xF4,
+0x1D, 0x4C, 0x04, 0xD2, 0x00, 0x18, 0xFC, 0xE9,
+0x07, 0x97, 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
+0x21, 0x68, 0xD0, 0xF4, 0x71, 0xA0, 0x00, 0x6A,
+0x12, 0x23, 0x00, 0x18, 0xA9, 0xF6, 0x62, 0x67,
+0x01, 0x6A, 0x0D, 0x2B, 0x10, 0xF0, 0x24, 0x6C,
+0x7B, 0xF4, 0x1D, 0x4C, 0x00, 0x6D, 0xC8, 0x6E,
+0xE2, 0x67, 0xD0, 0xF4, 0x71, 0xC0, 0x04, 0xD2,
+0x00, 0x18, 0xFC, 0xE9, 0x00, 0x6A, 0x07, 0x97,
+0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x5D, 0x67,
+0x20, 0xF0, 0x88, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xBD, 0xF1, 0x5C, 0x9A, 0x41, 0x6B, 0x04, 0x00,
+0x60, 0xC2, 0x45, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0xBD, 0xF1, 0x74, 0x9A, 0xFE, 0x6A,
+0x01, 0x6D, 0x80, 0xA3, 0x0A, 0x07, 0xC5, 0x67,
+0x8C, 0xEA, 0x40, 0xC3, 0x00, 0x6A, 0x30, 0xF0,
+0x21, 0x6B, 0xD0, 0xF4, 0x50, 0xC3, 0x30, 0xF0,
+0x21, 0x6B, 0xD0, 0xF4, 0x51, 0xC3, 0x30, 0xF0,
+0x21, 0x6B, 0xD0, 0xF4, 0x52, 0xC3, 0x90, 0x67,
+0x00, 0x6A, 0x04, 0xD2, 0x05, 0xD2, 0x06, 0xD2,
+0x07, 0xD2, 0x00, 0x18, 0x54, 0xD9, 0xFF, 0x6E,
+0xB0, 0x67, 0x02, 0x6C, 0x4C, 0xEE, 0x00, 0x18,
+0x66, 0xD9, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x52, 0xA2, 0x01, 0x68, 0x0C, 0xEA,
+0x53, 0x22, 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4,
+0x31, 0xA2, 0x1E, 0x29, 0x00, 0x18, 0xB3, 0xF6,
+0x17, 0x2A, 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4,
+0x72, 0xA2, 0x01, 0x4B, 0xD0, 0xF4, 0x72, 0xC2,
+0xD0, 0xF4, 0x52, 0xA2, 0x06, 0x5A, 0x10, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x02, 0xF7, 0x10, 0xF0,
+0x24, 0x6C, 0x04, 0xD0, 0x7B, 0xF4, 0x1D, 0x4C,
+0x00, 0x6D, 0xC8, 0x6E, 0xF0, 0x67, 0x32, 0x10,
+0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4, 0x32, 0xC2,
+0x00, 0x18, 0xA9, 0xF6, 0x0F, 0x22, 0x30, 0xF0,
+0x21, 0x6A, 0xD0, 0xF4, 0x71, 0xA2, 0x01, 0x4B,
+0xD0, 0xF4, 0x71, 0xC2, 0xD0, 0xF4, 0x51, 0xA2,
+0x0B, 0x5A, 0x08, 0x61, 0x03, 0x6C, 0x00, 0x18,
+0x02, 0xF7, 0x04, 0x10, 0x30, 0xF0, 0x21, 0x6B,
+0xD0, 0xF4, 0x51, 0xC3, 0x30, 0xF0, 0x21, 0x6A,
+0xD0, 0xF4, 0x51, 0xA2, 0x0A, 0x2A, 0x01, 0x6A,
+0x10, 0xF0, 0x24, 0x6C, 0x04, 0xD2, 0x7B, 0xF4,
+0x1D, 0x4C, 0x00, 0x6D, 0xC8, 0x6E, 0xE2, 0x67,
+0x09, 0x10, 0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6C,
+0x01, 0x6E, 0x04, 0xD2, 0x7B, 0xF4, 0x1D, 0x4C,
+0xA2, 0x67, 0xE6, 0x67, 0x00, 0x18, 0xFC, 0xE9,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x03, 0x22, 0x03, 0x80,
+0x19, 0x22, 0x03, 0x80, 0x2F, 0x22, 0x03, 0x80,
+0x45, 0x22, 0x03, 0x80, 0x5F, 0x22, 0x03, 0x80,
+0xB7, 0x22, 0x03, 0x80, 0xCD, 0x22, 0x03, 0x80,
+0xEB, 0x22, 0x03, 0x80, 0x1D, 0x23, 0x03, 0x80,
+0x47, 0x23, 0x03, 0x80, 0x4F, 0x33, 0x03, 0x80,
+0x55, 0x33, 0x03, 0x80, 0x61, 0x33, 0x03, 0x80,
+0x6D, 0x33, 0x03, 0x80, 0x79, 0x33, 0x03, 0x80,
+0xC1, 0x36, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
+0x23, 0x37, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
+0x69, 0x36, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
+0xA9, 0x37, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
+0x8B, 0x37, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
+0xA9, 0x37, 0x03, 0x80, 0xA9, 0x37, 0x03, 0x80,
+0x03, 0x36, 0x03, 0x80, 0x7F, 0x3B, 0x03, 0x80,
+0x89, 0x3B, 0x03, 0x80, 0x93, 0x3B, 0x03, 0x80,
+0x9D, 0x3B, 0x03, 0x80, 0xA7, 0x3B, 0x03, 0x80,
+0x45, 0x3D, 0x03, 0x80, 0x65, 0x3D, 0x03, 0x80,
+0x85, 0x3D, 0x03, 0x80, 0xA5, 0x3D, 0x03, 0x80,
+0xC5, 0x3D, 0x03, 0x80, 0xCB, 0x3F, 0x03, 0x80,
+0x07, 0x40, 0x03, 0x80, 0x4D, 0x40, 0x03, 0x80,
+0x8F, 0x40, 0x03, 0x80, 0xD5, 0x40, 0x03, 0x80,
+0x43, 0x41, 0x03, 0x80, 0x5F, 0x41, 0x03, 0x80,
+0x81, 0x41, 0x03, 0x80, 0xA3, 0x41, 0x03, 0x80,
+0xC7, 0x41, 0x03, 0x80, 0xA8, 0x06, 0x10, 0x07,
+0x00, 0x16, 0x04, 0x16, 0x08, 0x16, 0x00, 0x00,
+0x8F, 0x45, 0x03, 0x80, 0xEB, 0x45, 0x03, 0x80,
+0x7F, 0x46, 0x03, 0x80, 0x13, 0x47, 0x03, 0x80,
+0xAB, 0x47, 0x03, 0x80, 0x3B, 0x14, 0x03, 0x80,
+0x45, 0x14, 0x03, 0x80, 0x4F, 0x14, 0x03, 0x80,
+0x59, 0x14, 0x03, 0x80, 0x63, 0x14, 0x03, 0x80,
+0x79, 0x4E, 0x03, 0x80, 0x73, 0x4E, 0x03, 0x80,
+0x7F, 0x4E, 0x03, 0x80, 0x85, 0x4E, 0x03, 0x80,
+0x8B, 0x4E, 0x03, 0x80, 0x91, 0x4E, 0x03, 0x80,
+0x94, 0x0C, 0x94, 0x0E, 0x94, 0x18, 0x94, 0x1A,
+0x00, 0x01, 0x02, 0x03, 0x05, 0x00, 0x00, 0x00,
+0x00, 0x01, 0x03, 0x04, 0x05, 0x00, 0x00, 0x00,
+0x09, 0x12, 0x1B, 0x24, 0x9D, 0x6E, 0x10, 0x80,
+0xE3, 0x6E, 0x10, 0x80, 0xA5, 0x6E, 0x10, 0x80,
+0xD5, 0x6E, 0x10, 0x80, 0xE3, 0x6E, 0x10, 0x80,
+0xE3, 0x6E, 0x10, 0x80, 0xE3, 0x6E, 0x10, 0x80,
+0xAD, 0x6E, 0x10, 0x80, 0xB5, 0x6E, 0x10, 0x80,
+0xBD, 0x6E, 0x10, 0x80, 0xE3, 0x6E, 0x10, 0x80,
+0xE3, 0x6E, 0x10, 0x80, 0xDD, 0x6E, 0x10, 0x80,
+0xCD, 0x6E, 0x10, 0x80, 0xC5, 0x6E, 0x10, 0x80,
+0x04, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0A, 0x0A,
+0x0A, 0x00, 0x00, 0x00, 0x00, 0x04, 0x0C, 0x14,
+0x1C, 0x24, 0x2C, 0x36, 0x40, 0x00, 0x00, 0x00,
+0xD7, 0x7D, 0x10, 0x80, 0xED, 0x7D, 0x10, 0x80,
+0xD7, 0x7D, 0x10, 0x80, 0xED, 0x7D, 0x10, 0x80,
+0xD7, 0x7D, 0x10, 0x80, 0xED, 0x7D, 0x10, 0x80,
+0x1D, 0x7E, 0x10, 0x80, 0x1D, 0x7E, 0x10, 0x80,
+0x1D, 0x7E, 0x10, 0x80, 0xDB, 0x7D, 0x10, 0x80,
+0x03, 0x7E, 0x10, 0x80, 0x03, 0x7E, 0x10, 0x80,
+0xDB, 0x7D, 0x10, 0x80, 0x35, 0x7E, 0x10, 0x80,
+0x51, 0x7E, 0x10, 0x80, 0x25, 0x91, 0x10, 0x80,
+0x75, 0x91, 0x10, 0x80, 0xFD, 0x91, 0x10, 0x80,
+0x53, 0x92, 0x10, 0x80, 0x77, 0x92, 0x10, 0x80,
+0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
+0x0F, 0x10, 0x00, 0x00, 0x12, 0x12, 0x14, 0x12,
+0x0F, 0x0F, 0x0C, 0x0C, 0x09, 0x08, 0x08, 0x07,
+0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06, 0x05, 0x04,
+0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
+0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
+0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
+0x0A, 0x0A, 0x08, 0x08, 0x08, 0x07, 0x07, 0x06,
+0x04, 0x04, 0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07,
+0x07, 0x06, 0x05, 0x04, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x05, 0x04, 0x04, 0x0A, 0x0A,
+0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
+0x28, 0x28, 0x32, 0x28, 0x1E, 0x19, 0x19, 0x19,
+0x18, 0x18, 0x12, 0x0F, 0x14, 0x1E, 0x19, 0x1E,
+0x18, 0x16, 0x0C, 0x0C, 0x1E, 0x1E, 0x19, 0x1E,
+0x18, 0x16, 0x0C, 0x0C, 0x1E, 0x1E, 0x19, 0x1C,
+0x18, 0x14, 0x0C, 0x0A, 0x1E, 0x1E, 0x19, 0x1E,
+0x19, 0x18, 0x0F, 0x0E, 0x14, 0x28, 0x21, 0x1E,
+0x1A, 0x16, 0x0B, 0x10, 0x0A, 0x0A, 0x2D, 0x28,
+0x21, 0x1E, 0x1A, 0x16, 0x0B, 0x10, 0x0A, 0x0A,
+0x1E, 0x1E, 0x1E, 0x1E, 0x18, 0x16, 0x0D, 0x0D,
+0x0A, 0x08, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
+0x0A, 0x0A, 0x0A, 0x0A, 0x4A, 0x40, 0x36, 0x2C,
+0x24, 0x1C, 0x14, 0x0C, 0x04, 0x00, 0x00, 0x00,
+0x4B, 0xA6, 0x10, 0x80, 0x9F, 0xA6, 0x10, 0x80,
+0x2D, 0xA7, 0x10, 0x80, 0x2D, 0xA8, 0x10, 0x80,
+0x93, 0xA7, 0x10, 0x80, 0xC3, 0xA7, 0x10, 0x80,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x72, 0x65, 0x61,
+0x64, 0x5F, 0x74, 0x78, 0x61, 0x67, 0x63, 0x5F,
+0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00, 0x00,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x77, 0x72, 0x69,
+0x74, 0x65, 0x5F, 0x74, 0x78, 0x61, 0x67, 0x63,
+0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00,
+0x70, 0x68, 0x79, 0x64, 0x6D, 0x5F, 0x77, 0x72,
+0x69, 0x74, 0x65, 0x5F, 0x74, 0x78, 0x61, 0x67,
+0x63, 0x5F, 0x31, 0x62, 0x79, 0x74, 0x65, 0x5F,
+0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00, 0x00,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x73, 0x77, 0x69,
+0x74, 0x63, 0x68, 0x5F, 0x62, 0x61, 0x6E, 0x64,
+0x77, 0x69, 0x64, 0x74, 0x68, 0x5F, 0x38, 0x38,
+0x32, 0x31, 0x63, 0x00, 0x63, 0x6F, 0x6E, 0x66,
+0x69, 0x67, 0x5F, 0x70, 0x68, 0x79, 0x64, 0x6D,
+0x5F, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5F,
+0x63, 0x68, 0x61, 0x6E, 0x6E, 0x65, 0x6C, 0x5F,
+0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00, 0x00,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x73, 0x77, 0x69,
+0x74, 0x63, 0x68, 0x5F, 0x62, 0x61, 0x6E, 0x64,
+0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x77, 0x72, 0x69,
+0x74, 0x65, 0x5F, 0x72, 0x66, 0x5F, 0x72, 0x65,
+0x67, 0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00,
+0x63, 0x6F, 0x6E, 0x66, 0x69, 0x67, 0x5F, 0x70,
+0x68, 0x79, 0x64, 0x6D, 0x5F, 0x72, 0x65, 0x61,
+0x64, 0x5F, 0x72, 0x66, 0x5F, 0x72, 0x65, 0x67,
+0x5F, 0x38, 0x38, 0x32, 0x31, 0x63, 0x00, 0x00,
+0x6D, 0xA9, 0x10, 0x80, 0x87, 0xA9, 0x10, 0x80,
+0x97, 0xA9, 0x10, 0x80, 0xAD, 0xA9, 0x10, 0x80,
+0xC3, 0xA9, 0x10, 0x80, 0xC3, 0xA9, 0x10, 0x80,
+0xDF, 0xA9, 0x10, 0x80, 0xC9, 0x5A, 0x03, 0x80,
+0xC5, 0x5A, 0x03, 0x80, 0xCF, 0x5A, 0x03, 0x80,
+0xD3, 0x5A, 0x03, 0x80, 0xD7, 0x5A, 0x03, 0x80,
+0xDD, 0x5A, 0x03, 0x80, 0xEB, 0x5A, 0x03, 0x80,
+0x15, 0x5B, 0x03, 0x80, 0x43, 0x5B, 0x03, 0x80,
+0x49, 0x5B, 0x03, 0x80, 0x95, 0x5B, 0x03, 0x80,
+0xA3, 0x5B, 0x03, 0x80, 0xBB, 0x5B, 0x03, 0x80,
+0x91, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
+0x91, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
+0xB1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
+0xB1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
+0xD1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
+0xD1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
+0xF1, 0x17, 0x03, 0x80, 0x8D, 0x17, 0x03, 0x80,
+0xF1, 0x17, 0x03, 0x80, 0x3B, 0x19, 0x03, 0x80,
+0x3F, 0x19, 0x03, 0x80, 0x43, 0x19, 0x03, 0x80,
+0x47, 0x19, 0x03, 0x80, 0x4B, 0x19, 0x03, 0x80,
+0x71, 0x84, 0x03, 0x80, 0x93, 0x84, 0x03, 0x80,
+0xB5, 0x84, 0x03, 0x80, 0xD7, 0x84, 0x03, 0x80,
+0xFB, 0x84, 0x03, 0x80, 0x35, 0x85, 0x03, 0x80,
+0x59, 0x85, 0x03, 0x80, 0x7D, 0x85, 0x03, 0x80,
+0xA1, 0x85, 0x03, 0x80, 0xC7, 0x85, 0x03, 0x80,
+0xCD, 0x87, 0x03, 0x80, 0xE3, 0x87, 0x03, 0x80,
+0x05, 0x88, 0x03, 0x80, 0x2B, 0x88, 0x03, 0x80,
+0x51, 0x88, 0x03, 0x80, 0x2D, 0x8C, 0x03, 0x80,
+0x2D, 0x8C, 0x03, 0x80, 0x2D, 0x8C, 0x03, 0x80,
+0x47, 0x8C, 0x03, 0x80, 0x2D, 0x8C, 0x03, 0x80,
+0x2D, 0x8C, 0x03, 0x80, 0x2D, 0x8C, 0x03, 0x80,
+0x29, 0x8C, 0x03, 0x80, 0x29, 0x8C, 0x03, 0x80,
+0x29, 0x8C, 0x03, 0x80, 0x29, 0x8C, 0x03, 0x80,
+0x29, 0x8C, 0x03, 0x80, 0xA5, 0x8C, 0x03, 0x80,
+0xAF, 0x8C, 0x03, 0x80, 0x55, 0x1E, 0x03, 0x80,
+0x55, 0x1E, 0x03, 0x80, 0x55, 0x1E, 0x03, 0x80,
+0x55, 0x1E, 0x03, 0x80, 0x75, 0x1E, 0x03, 0x80,
+0x75, 0x1E, 0x03, 0x80, 0x75, 0x1E, 0x03, 0x80,
+0x75, 0x1E, 0x03, 0x80, 0x95, 0x1E, 0x03, 0x80,
+0x95, 0x1E, 0x03, 0x80, 0x95, 0x1E, 0x03, 0x80,
+0x95, 0x1E, 0x03, 0x80, 0xB5, 0x1E, 0x03, 0x80,
+0xB5, 0x1E, 0x03, 0x80, 0xB5, 0x1E, 0x03, 0x80,
+0xB5, 0x1E, 0x03, 0x80, 0x1B, 0xA5, 0x03, 0x80,
+0x2B, 0xA5, 0x03, 0x80, 0x35, 0xA5, 0x03, 0x80,
+0x3F, 0xA5, 0x03, 0x80, 0x51, 0xA5, 0x03, 0x80,
+0x89, 0xB3, 0x03, 0x80, 0xBB, 0xB3, 0x03, 0x80,
+0x9D, 0xB3, 0x03, 0x80, 0xC5, 0xB3, 0x03, 0x80,
+0xA7, 0xB3, 0x03, 0x80, 0xD1, 0xB3, 0x03, 0x80,
+0xB1, 0xB3, 0x03, 0x80, 0xCB, 0x39, 0x10, 0x80,
+0xD5, 0x39, 0x10, 0x80, 0xDF, 0x39, 0x10, 0x80,
+0xE9, 0x39, 0x10, 0x80, 0xF3, 0x39, 0x10, 0x80,
+0xC7, 0xC5, 0x03, 0x80, 0x17, 0xC6, 0x03, 0x80,
+0x6F, 0xC6, 0x03, 0x80, 0xC7, 0xC6, 0x03, 0x80,
+0x2D, 0xC7, 0x03, 0x80, 0x1D, 0xCF, 0x03, 0x80,
+0x45, 0xCF, 0x03, 0x80, 0x6B, 0xCF, 0x03, 0x80,
+0x91, 0xCF, 0x03, 0x80, 0xB7, 0xCF, 0x03, 0x80,
+0xFC, 0x10, 0x60, 0xB8, 0xFA, 0xFA, 0xFA, 0xFA,
+0x8C, 0x04, 0x64, 0xB8, 0x90, 0x04, 0x64, 0xB8,
+0x94, 0x04, 0x64, 0xB8, 0x98, 0x04, 0x64, 0xB8,
+0x9C, 0x04, 0x64, 0xB8, 0xA0, 0x04, 0x64, 0xB8,
+0x01, 0x06, 0x64, 0xB8, 0x00, 0x00, 0x68, 0x18,
+0x48, 0x00, 0x68, 0x18, 0x48, 0x04, 0x68, 0x18,
+0x00, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x64, 0xB8,
+0x54, 0x05, 0x64, 0xB8, 0x50, 0x05, 0x64, 0xB8,
+0x51, 0x05, 0x64, 0xB8, 0x78, 0x05, 0x64, 0xB8,
+0x79, 0x05, 0x64, 0xB8, 0x7A, 0x05, 0x64, 0xB8,
+0xFF, 0xFF, 0xFF, 0x8F, 0x60, 0x05, 0x60, 0xB8,
+0x60, 0x05, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x10,
+0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x30,
+0x00, 0x00, 0x00, 0x40, 0xBF, 0x01, 0x64, 0xB8,
+0x89, 0x00, 0x60, 0xB8, 0x8A, 0x00, 0x60, 0xB8,
+0x1A, 0x04, 0x64, 0xB8, 0x1B, 0x04, 0x64, 0xB8,
+0x01, 0x00, 0xFF, 0x00, 0xF0, 0x11, 0x64, 0xB8,
+0x58, 0x05, 0x64, 0xB8, 0x01, 0x00, 0x60, 0xB8,
+0x01, 0x00, 0x64, 0xB8, 0x5B, 0x01, 0x64, 0xB8,
+0x3C, 0x01, 0x64, 0xB8, 0x22, 0x05, 0x64, 0xB8,
+0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
+0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00,
+0x87, 0x02, 0x64, 0xB8, 0x96, 0x02, 0x64, 0xB8,
+0x86, 0x02, 0x64, 0xB8, 0xF8, 0x10, 0x60, 0xB8,
+0x00, 0x00, 0x40, 0x00, 0x0A, 0x06, 0x64, 0xB8,
+0xFE, 0x11, 0x64, 0xB8, 0xA8, 0x06, 0x64, 0xB8,
+0x10, 0x07, 0x64, 0xB8, 0x00, 0x16, 0x64, 0xB8,
+0x04, 0x16, 0x64, 0xB8, 0x08, 0x16, 0x64, 0xB8,
+0xAB, 0x06, 0x64, 0xB8, 0xAA, 0x06, 0x64, 0xB8,
+0x13, 0x07, 0x64, 0xB8, 0x12, 0x07, 0x64, 0xB8,
+0x03, 0x16, 0x64, 0xB8, 0x02, 0x16, 0x64, 0xB8,
+0x07, 0x16, 0x64, 0xB8, 0x06, 0x16, 0x64, 0xB8,
+0x0B, 0x16, 0x64, 0xB8, 0x0A, 0x16, 0x64, 0xB8,
+0xFC, 0x11, 0x64, 0xB8, 0x57, 0x01, 0x64, 0xB8,
+0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x06, 0x00,
+0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x00,
+0x00, 0x00, 0x00, 0x03, 0xB1, 0x05, 0x64, 0xB8,
+0x22, 0x00, 0x60, 0xB8, 0x04, 0x06, 0x64, 0xB8,
+0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x01,
+0x60, 0x16, 0x64, 0xB8, 0x09, 0x00, 0x78, 0xB8,
+0x31, 0x00, 0x78, 0xB8, 0x14, 0x00, 0x78, 0xB8,
+0x1D, 0x04, 0x64, 0xB8, 0x32, 0x00, 0x78, 0xB8,
+0x33, 0x00, 0x78, 0xB8, 0x7A, 0x04, 0x64, 0xB8,
+0x24, 0x04, 0x64, 0xB8, 0xD4, 0x04, 0x64, 0xB8,
+0x88, 0x04, 0x64, 0xB8, 0xD0, 0x04, 0x64, 0xB8,
+0x84, 0x04, 0x64, 0xB8, 0x56, 0x04, 0x64, 0xB8,
+0x1C, 0x04, 0x64, 0xB8, 0x20, 0x04, 0x64, 0xB8,
+0xFF, 0xFF, 0xEF, 0xFF, 0x00, 0x00, 0x10, 0x00,
+0x88, 0x00, 0x60, 0xB8, 0x8B, 0x00, 0x60, 0xB8,
+0x84, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x00, 0x02,
+0xCB, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x60,
+0xE0, 0x00, 0x60, 0xB8, 0xE1, 0x00, 0x60, 0xB8,
+0xE8, 0x12, 0x64, 0xB8, 0xFF, 0xFF, 0x03, 0x00,
+0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x04,
+0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xDF,
+0xFF, 0xFF, 0xFF, 0x1F, 0x04, 0x00, 0x60, 0xB8,
+0x04, 0x00, 0x64, 0xB8, 0x08, 0x00, 0x60, 0xB8,
+0x08, 0x00, 0x64, 0xB8, 0x24, 0x00, 0x60, 0xB8,
+0x80, 0x00, 0x60, 0xB8, 0xFF, 0xFF, 0xFD, 0xFF,
+0xCC, 0x07, 0x64, 0xB8, 0x82, 0x10, 0x60, 0xB8,
+0x42, 0x34, 0x00, 0xB8, 0x00, 0x0C, 0x01, 0x00,
+0x08, 0x00, 0x00, 0xF8, 0x08, 0x70, 0x0A, 0xF8,
+0x08, 0x50, 0x01, 0xF8, 0x00, 0x00, 0x1F, 0x00,
+0x00, 0x00, 0x00, 0xC0, 0x1A, 0x15, 0x64, 0xB8,
+0x77, 0x77, 0x77, 0x77, 0x17, 0x11, 0x17, 0x77,
+0x01, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xFF, 0x0F,
+0x21, 0x00, 0x00, 0xE0, 0x00, 0x1C, 0x01, 0x88,
+0x00, 0x00, 0x00, 0xFF, 0x08, 0x00, 0x45, 0x01,
+0x88, 0x0C, 0x46, 0x01, 0xFF, 0xFF, 0x0F, 0x00,
+0xBA, 0xCB, 0x08, 0x00, 0x18, 0x80, 0x0A, 0x00,
+0x68, 0x10, 0x46, 0x01, 0xF3, 0x10, 0x05, 0x00,
+0x00, 0x9C, 0x0A, 0x00, 0x08, 0x00, 0x45, 0x00,
+0x68, 0x14, 0x46, 0x00, 0x08, 0x00, 0x84, 0x00,
+0xBA, 0xCB, 0x0B, 0x00, 0x18, 0xC0, 0x0A, 0x00,
+0x08, 0x00, 0x44, 0x01, 0xF3, 0x0E, 0x05, 0x00,
+0x18, 0xDC, 0x0A, 0x00, 0xC8, 0x0E, 0x05, 0x00,
+0x18, 0x9C, 0x0A, 0x00, 0x00, 0x00, 0xF0, 0x0F,
+0x00, 0x00, 0x00, 0x0F, 0x02, 0x00, 0x60, 0xB8,
+0x62, 0x06, 0x64, 0xB8, 0xB4, 0x06, 0x64, 0xB8,
+0x06, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x50,
+0x40, 0x00, 0x0F, 0x70, 0x02, 0x04, 0x00, 0xD8,
+0x20, 0x01, 0x00, 0xD1, 0x40, 0x80, 0x0B, 0x70,
+0x02, 0x04, 0x02, 0xD8, 0x20, 0x01, 0x00, 0xDE,
+0x03, 0x29, 0x29, 0x00, 0x48, 0x00, 0x46, 0x01,
+0x60, 0x10, 0x05, 0x00, 0xDE, 0x0F, 0x0E, 0x00,
+0xCE, 0xEF, 0x0D, 0x00, 0xCE, 0xEF, 0x05, 0x00,
+0xFF, 0x3F, 0x0E, 0x00, 0x1F, 0xFF, 0x0F, 0x00,
+0xE7, 0x0E, 0x05, 0x00, 0xE8, 0x0E, 0x05, 0x00,
+0x45, 0x23, 0x01, 0x00, 0x08, 0x08, 0x00, 0xF8,
+0x08, 0x07, 0x00, 0xF8, 0x08, 0x02, 0x00, 0xF8,
+0x08, 0x03, 0x00, 0xF8, 0x18, 0x00, 0x00, 0xF8,
+0xDE, 0xBC, 0x0A, 0x00, 0x01, 0x00, 0x66, 0xB8,
+0x00, 0x00, 0x66, 0xB8, 0xCD, 0x9B, 0x78, 0x56,
+0x00, 0x1C, 0x66, 0xB8, 0x04, 0x1C, 0x66, 0xB8,
+0xFF, 0xFF, 0x3F, 0x00, 0x1F, 0x00, 0x60, 0xB8,
+0x04, 0xEA, 0xEF, 0xFD, 0x07, 0xEA, 0xEF, 0xFD,
+0x08, 0xEA, 0xEF, 0xFD, 0x09, 0xEA, 0xEF, 0xFD,
+0x0A, 0xEA, 0xEF, 0xFD, 0x53, 0x04, 0x64, 0xB8,
+0xF0, 0x10, 0x60, 0xB8, 0xCA, 0x04, 0x64, 0xB8,
+0xCF, 0x04, 0x64, 0xB8, 0xF1, 0x10, 0x60, 0xB8,
+0x06, 0x00, 0x66, 0xB8, 0x52, 0x04, 0x64, 0xB8,
+0x50, 0x04, 0x64, 0xB8, 0x51, 0x04, 0x64, 0xB8,
+0x01, 0x1C, 0x66, 0xB8, 0x02, 0x1C, 0x66, 0xB8,
+0x03, 0x1C, 0x66, 0xB8, 0x05, 0x1C, 0x66, 0xB8,
+0x06, 0x1C, 0x66, 0xB8, 0x07, 0x1C, 0x66, 0xB8,
+0x02, 0x10, 0x66, 0xB8, 0x08, 0x10, 0x66, 0xB8,
+0x03, 0x10, 0x66, 0xB8, 0x09, 0x10, 0x66, 0xB8,
+0x04, 0x10, 0x66, 0xB8, 0x05, 0x10, 0x66, 0xB8,
+0x0C, 0x10, 0x66, 0xB8, 0x0D, 0x10, 0x66, 0xB8,
+0x06, 0x10, 0x66, 0xB8, 0x00, 0x00, 0x7F, 0x00,
+0xFF, 0xFF, 0x0B, 0xFF, 0x00, 0x00, 0x70, 0x00,
+0xFF, 0xFF, 0x7A, 0xFF, 0x00, 0x00, 0xD0, 0x00,
+0xFF, 0xFF, 0xDA, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,
+0x00, 0xFF, 0xF9, 0xFF, 0x00, 0x00, 0xFE, 0x1F,
+0x1C, 0x0C, 0xB8, 0x64, 0x67, 0x56, 0x23, 0x01,
+0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFC, 0xFE, 0xFF,
+0x00, 0x01, 0x01, 0x00, 0x00, 0xFC, 0xCF, 0xFF,
+0x00, 0x00, 0x01, 0x10, 0x00, 0xF3, 0x3F, 0xFF,
+0x01, 0x00, 0x02, 0x20, 0x00, 0xCF, 0xFF, 0xFC,
+0x02, 0x00, 0x04, 0x40, 0x00, 0xFC, 0xCE, 0xEF,
+0x40, 0x02, 0x20, 0x00, 0x80, 0x03, 0x30, 0x00,
+0x00, 0x00, 0x80, 0x01, 0xCC, 0x06, 0x64, 0xB8,
+0xA3, 0x00, 0x60, 0xB8, 0xA0, 0x00, 0x60, 0xB8,
+0x65, 0x07, 0x64, 0xB8, 0x40, 0x00, 0x60, 0xB8,
+0x68, 0x00, 0x60, 0xB8, 0x6E, 0x07, 0x64, 0xB8,
+0x64, 0x07, 0x64, 0xB8, 0x23, 0x05, 0x64, 0xB8,
+0x64, 0x00, 0x60, 0xB8, 0xFF, 0xFF, 0x40, 0xFF,
+0xFF, 0xFF, 0xFF, 0xE0, 0x28, 0x00, 0x60, 0xB8,
+0xFF, 0xFF, 0xFF, 0x81, 0x00, 0x00, 0x70, 0xB8,
+0x18, 0x00, 0x70, 0xB8, 0x0B, 0x00, 0x70, 0xB8,
+0x02, 0x00, 0x70, 0xB8, 0x1C, 0x01, 0x64, 0xB8,
+0x94, 0x02, 0x64, 0xB8, 0x97, 0x02, 0x64, 0xB8,
+0x84, 0x02, 0x64, 0xB8, 0x54, 0x02, 0x64, 0xB8,
+0x50, 0x02, 0x64, 0xB8, 0x4C, 0x02, 0x64, 0xB8,
+0x00, 0x00, 0x78, 0xB8, 0x04, 0x00, 0x78, 0xB8,
+0x48, 0x02, 0x64, 0xB8, 0x44, 0x02, 0x64, 0xB8,
+0xCC, 0x01, 0x64, 0xB8, 0xF4, 0x11, 0x64, 0xB8,
+0xF5, 0x11, 0x64, 0xB8, 0xD4, 0x04, 0x60, 0xB8,
+0x84, 0x04, 0x60, 0xB8, 0xC8, 0x04, 0x60, 0xB8,
+0xC8, 0x04, 0x64, 0xB8, 0x78, 0x04, 0x60, 0xB8,
+0x78, 0x04, 0x64, 0xB8, 0xCF, 0x01, 0x64, 0xB8,
+0x34, 0x01, 0x64, 0xB8, 0x64, 0x05, 0x64, 0xB8,
+0x44, 0x00, 0x60, 0xB8, 0x60, 0x00, 0x60, 0xB8,
+0x27, 0x05, 0x64, 0xB8, 0xB5, 0x05, 0x64, 0xB8,
+0x1D, 0x05, 0x64, 0xB8, 0x1C, 0x05, 0x64, 0xB8,
+0xB7, 0x05, 0x64, 0xB8, 0x31, 0x05, 0x64, 0xB8,
+0x3C, 0x11, 0x64, 0xB8, 0x40, 0x05, 0x64, 0xB8,
+0x01, 0xEA, 0xEF, 0xFD, 0x02, 0xEA, 0xEF, 0xFD,
+0xC8, 0x01, 0x64, 0xB8, 0xC9, 0x01, 0x64, 0xB8,
+0xA0, 0x01, 0x64, 0xB8, 0x48, 0x00, 0x60, 0xB8,
+0xFF, 0xFF, 0xFE, 0xFF, 0x47, 0x00, 0x60, 0xB8,
+0x46, 0x00, 0x60, 0xB8, 0x45, 0x00, 0x60, 0xB8,
+0x63, 0x00, 0x60, 0xB8, 0x62, 0x00, 0x60, 0xB8,
+0x61, 0x00, 0x60, 0xB8, 0xC6, 0x01, 0x64, 0xB8,
+0x68, 0x05, 0x64, 0xB8, 0x6C, 0x05, 0x64, 0xB8,
+0x57, 0x05, 0x64, 0xB8, 0x77, 0x05, 0x64, 0xB8,
+0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x05,
+0x64, 0x01, 0x64, 0xB8, 0x53, 0x05, 0x64, 0xB8,
+0x94, 0x01, 0x64, 0xB8, 0x00, 0x10, 0x66, 0xB8,
+0x54, 0x00, 0x60, 0xB8, 0x50, 0x00, 0x60, 0xB8,
+0x9A, 0x01, 0x64, 0xB8, 0x99, 0x01, 0x64, 0xB8,
+0xC7, 0x01, 0x64, 0xB8, 0x30, 0x01, 0x64, 0xB8,
+0x24, 0x01, 0x64, 0xB8, 0x20, 0x01, 0x64, 0xB8,
+0x24, 0x11, 0x64, 0xB8, 0x20, 0x11, 0x64, 0xB8,
+0x2C, 0x11, 0x64, 0xB8, 0x28, 0x11, 0x64, 0xB8,
+0x34, 0x11, 0x64, 0xB8, 0x30, 0x11, 0x64, 0xB8,
+0x38, 0x01, 0x64, 0xB8, 0x38, 0x11, 0x64, 0xB8,
+0xE4, 0x11, 0x64, 0xB8, 0xE0, 0x11, 0x64, 0xB8,
+0x00, 0x40, 0xE0, 0x03, 0x01, 0x70, 0x00, 0x03,
+0xE0, 0x04, 0x64, 0xB8, 0xE3, 0x04, 0x64, 0xB8,
+0xE0, 0x12, 0x64, 0xB8, 0x00, 0x01, 0x64, 0xB8,
+0x08, 0x02, 0x64, 0xB8, 0x67, 0x05, 0x64, 0xB8,
+0x66, 0x05, 0x64, 0xB8, 0x65, 0x05, 0x64, 0xB8,
+0x63, 0x05, 0x64, 0xB8, 0x62, 0x05, 0x64, 0xB8,
+0x61, 0x05, 0x64, 0xB8, 0x02, 0x01, 0x64, 0xB8,
+0x21, 0x05, 0x64, 0xB8, 0xB4, 0x00, 0x60, 0xB8,
+0x2F, 0x01, 0x64, 0xB8, 0x00, 0x28, 0x64, 0xB8,
+0x00, 0x2C, 0x64, 0xB8, 0x00, 0x38, 0x64, 0xB8,
+0x00, 0x3C, 0x64, 0xB8, 0xF8, 0x05, 0x64, 0xB8,
+0xF9, 0x05, 0x64, 0xB8, 0xFA, 0x05, 0x64, 0xB8,
+0xFB, 0x05, 0x64, 0xB8, 0x83, 0x00, 0x60, 0xB8,
+0x08, 0x01, 0x64, 0xB8, 0x90, 0x00, 0x60, 0xB8,
+0x92, 0x00, 0x60, 0xB8, 0x92, 0x06, 0x64, 0xB8,
+0xF1, 0x11, 0x64, 0xB8, 0x20, 0x00, 0x78, 0xB8,
+0x10, 0x00, 0x78, 0xB8, 0x03, 0x00, 0x78, 0xB8,
+0xFF, 0xFF, 0x01, 0xFF, 0x05, 0x00, 0x78, 0xB8,
+0x12, 0x05, 0x64, 0xB8, 0x10, 0x05, 0x64, 0xB8,
+0xB8, 0x05, 0x64, 0xB8, 0xBC, 0x05, 0x64, 0xB8,
+0x00, 0x00, 0x80, 0x00, 0x5F, 0x11, 0x64, 0xB8,
+0xFE, 0xFF, 0xFF, 0x7F, 0x30, 0x00, 0x78, 0x18,
+0x40, 0x00, 0x00, 0xB5, 0x44, 0x00, 0x00, 0xB5,
+0x48, 0x00, 0x00, 0xB5, 0x4C, 0x00, 0x00, 0xB5,
+0xA4, 0x04, 0x64, 0xB8, 0xA8, 0x04, 0x64, 0xB8,
+0xC0, 0x01, 0x64, 0xB8, 0xAF, 0x01, 0x64, 0xB8,
+0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x08,
+0x00, 0x00, 0x01, 0x01, 0x7E, 0x04, 0x64, 0xB8,
+0x7D, 0x04, 0x64, 0xB8, 0x7C, 0x04, 0x64, 0xB8,
+0x98, 0x01, 0x64, 0xB8, 0xFF, 0xFF, 0xC0, 0xFF,
+0x40, 0x01, 0x00, 0x80, 0x00, 0x98, 0x00, 0x80,
+0x7B, 0x05, 0x64, 0xB8, 0x73, 0x05, 0x64, 0xB8,
+0x01, 0x01, 0x64, 0xB8, 0xB7, 0x06, 0x64, 0xB8,
+0x00, 0x00, 0x00, 0x70, 0x68, 0x06, 0x64, 0xB8,
+0xFF, 0xFF, 0xCF, 0xFF, 0x5C, 0x05, 0x64, 0xB8,
+0x38, 0x06, 0x64, 0xB8, 0x08, 0x06, 0x64, 0xB8,
+0xA0, 0x06, 0x64, 0xB8, 0xAA, 0x00, 0x60, 0xB8,
+0xA8, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x02, 0x80,
+0x4C, 0x00, 0x60, 0xB8, 0xFF, 0xFF, 0x7F, 0xFE,
+0x70, 0x00, 0x60, 0xB8, 0xC4, 0x06, 0x64, 0xB8,
+0xFF, 0xFF, 0xFF, 0xEF, 0x00, 0x00, 0x78, 0x18,
+0xB2, 0x05, 0x64, 0xB8, 0xB3, 0x05, 0x64, 0xB8,
+0x43, 0x05, 0x64, 0xB8, 0x7D, 0x05, 0x64, 0xB8,
+0x7F, 0x05, 0x64, 0xB8, 0x72, 0x05, 0x64, 0xB8,
+0xCF, 0x05, 0x64, 0xB8, 0xE0, 0x05, 0x64, 0xB8,
+0xE4, 0x05, 0x64, 0xB8, 0xE8, 0x05, 0x64, 0xB8,
+0xEC, 0x05, 0x64, 0xB8, 0xF0, 0x05, 0x64, 0xB8,
+0xB6, 0x05, 0x64, 0xB8, 0xE4, 0x00, 0x60, 0xB8,
+0xE8, 0x00, 0x60, 0xB8, 0xE9, 0x00, 0x60, 0xB8,
+0xEA, 0x00, 0x60, 0xB8, 0xEB, 0x00, 0x60, 0xB8,
+0xE5, 0x00, 0x60, 0xB8, 0x44, 0x00, 0x02, 0x00,
+0xA0, 0x07, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0x7F,
+0xF4, 0x00, 0x60, 0xB8, 0x91, 0x00, 0x60, 0xB8,
+0x00, 0x00, 0xC0, 0x00, 0x00, 0x10, 0x24, 0x00,
+0x82, 0x82, 0x62, 0x00, 0x30, 0x00, 0x78, 0xB8,
+0x3A, 0x00, 0x60, 0xB8, 0xF6, 0x00, 0x60, 0xB8,
+0xC2, 0x00, 0x60, 0xB8, 0xEC, 0x00, 0x60, 0xB8,
+0x00, 0x00, 0x12, 0x20, 0x6A, 0x00, 0x60, 0xB8,
+0x5B, 0x49, 0x51, 0x4B, 0x5D, 0x3D, 0x3D, 0x3D,
+0x3D, 0x3D, 0x3E, 0x50, 0x48, 0x59, 0x5F, 0x49,
+0x51, 0x43, 0x61, 0x6C, 0x69, 0x62, 0x72, 0x61,
+0x74, 0x65, 0x5F, 0x49, 0x6E, 0x69, 0x74, 0x0A,
+0x00, 0x00, 0x00, 0x00, 0x63, 0x61, 0x6C, 0x69,
+0x62, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20,
+0x74, 0x69, 0x6D, 0x65, 0x6F, 0x75, 0x74, 0x21,
+0x21, 0x21, 0x0A, 0x00, 0x64, 0x65, 0x6C, 0x61,
+0x79, 0x20, 0x63, 0x6F, 0x75, 0x6E, 0x74, 0x20,
+0x3D, 0x20, 0x30, 0x78, 0x25, 0x78, 0x21, 0x21,
+0x21, 0x0A, 0x00, 0x00, 0x64, 0x65, 0x6C, 0x61,
+0x79, 0x5F, 0x63, 0x6F, 0x75, 0x6E, 0x74, 0x20,
+0x3D, 0x20, 0x30, 0x78, 0x25, 0x78, 0x0A, 0x00,
+0x49, 0x51, 0x4B, 0x73, 0x74, 0x65, 0x70, 0x20,
+0x3D, 0x20, 0x30, 0x78, 0x25, 0x62, 0x78, 0x0A,
+0x00, 0x00, 0x00, 0x00, 0x5B, 0x49, 0x51, 0x4B,
+0x5D, 0x50, 0x61, 0x74, 0x68, 0x41, 0x5F, 0x4C,
+0x4F, 0x4B, 0x5F, 0x6E, 0x6F, 0x74, 0x72, 0x65,
+0x61, 0x64, 0x79, 0x20, 0x3D, 0x20, 0x25, 0x64,
+0x0A, 0x00, 0x00, 0x00, 0x5B, 0x49, 0x51, 0x4B,
+0x5D, 0x50, 0x61, 0x74, 0x68, 0x41, 0x5F, 0x54,
+0x58, 0x49, 0x51, 0x4B, 0x5F, 0x66, 0x61, 0x69,
+0x6C, 0x20, 0x3D, 0x20, 0x25, 0x64, 0x0A, 0x00,
+0x5B, 0x49, 0x51, 0x4B, 0x5D, 0x50, 0x61, 0x74,
+0x68, 0x41, 0x5F, 0x52, 0x58, 0x49, 0x51, 0x4B,
+0x5F, 0x66, 0x61, 0x69, 0x6C, 0x20, 0x3D, 0x20,
+0x25, 0x64, 0x0A, 0x00, 0x5B, 0x49, 0x51, 0x4B,
+0x5D, 0x50, 0x61, 0x74, 0x68, 0x41, 0x5F, 0x54,
+0x58, 0x49, 0x51, 0x4B, 0x5F, 0x72, 0x65, 0x74,
+0x72, 0x79, 0x20, 0x3D, 0x20, 0x25, 0x64, 0x0A,
+0x00, 0x00, 0x00, 0x00, 0x5B, 0x49, 0x51, 0x4B,
+0x5D, 0x50, 0x61, 0x74, 0x68, 0x41, 0x5F, 0x52,
+0x58, 0x4B, 0x31, 0x5F, 0x72, 0x65, 0x74, 0x72,
+0x79, 0x20, 0x3D, 0x20, 0x25, 0x64, 0x2C, 0x20,
+0x50, 0x61, 0x74, 0x68, 0x41, 0x5F, 0x52, 0x58,
+0x4B, 0x32, 0x5F, 0x72, 0x65, 0x74, 0x72, 0x79,
+0x20, 0x3D, 0x20, 0x25, 0x64, 0x0A, 0x00, 0x00,
+0x5B, 0x49, 0x51, 0x4B, 0x5D, 0x50, 0x61, 0x74,
+0x68, 0x41, 0x5F, 0x47, 0x53, 0x31, 0x5F, 0x72,
+0x65, 0x74, 0x72, 0x79, 0x20, 0x3D, 0x20, 0x25,
+0x64, 0x2C, 0x20, 0x50, 0x61, 0x74, 0x68, 0x41,
+0x5F, 0x47, 0x53, 0x32, 0x5F, 0x72, 0x65, 0x74,
+0x72, 0x79, 0x20, 0x3D, 0x20, 0x25, 0x64, 0x0A,
+0x00, 0x00, 0x00, 0x00, 0x46, 0x57, 0x49, 0x51,
+0x4B, 0x20, 0x73, 0x74, 0x61, 0x72, 0x74, 0x20,
+0x76, 0x31, 0x38, 0x21, 0x21, 0x21, 0x00, 0x00,
+0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
+0x38, 0x39, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46,
+0x00, 0x00, 0x00, 0x00, 0x53, 0x65, 0x74, 0x5F,
+0x43, 0x61, 0x6E, 0x64, 0x69, 0x5F, 0x33, 0x3A,
+0x20, 0x5B, 0x31, 0x5D, 0x3D, 0x30, 0x78, 0x25,
+0x62, 0x58, 0x2C, 0x20, 0x20, 0x5B, 0x32, 0x5D,
+0x3D, 0x30, 0x78, 0x25, 0x62, 0x58, 0x2C, 0x20,
+0x20, 0x5B, 0x33, 0x5D, 0x3D, 0x30, 0x78, 0x25,
+0x62, 0x58, 0x00, 0x00, 0x53, 0x65, 0x74, 0x5F,
+0x43, 0x61, 0x6E, 0x64, 0x69, 0x5F, 0x32, 0x3A,
+0x20, 0x5B, 0x31, 0x5D, 0x3D, 0x30, 0x78, 0x25,
+0x62, 0x58, 0x2C, 0x20, 0x20, 0x5B, 0x32, 0x5D,
+0x3D, 0x30, 0x78, 0x25, 0x62, 0x58, 0x20, 0x00,
+0x50, 0x45, 0x52, 0x20, 0x52, 0x50, 0x54, 0x3A,
+0x20, 0x6D, 0x69, 0x64, 0x25, 0x62, 0x58, 0x2C,
+0x52, 0x3A, 0x25, 0x62, 0x78, 0x2C, 0x72, 0x74,
+0x3A, 0x25, 0x62, 0x78, 0x2C, 0x62, 0x77, 0x3A,
+0x25, 0x62, 0x78, 0x00, 0x50, 0x45, 0x52, 0x20,
+0x52, 0x50, 0x54, 0x3A, 0x20, 0x6D, 0x69, 0x64,
+0x25, 0x62, 0x58, 0x2C, 0x54, 0x54, 0x3A, 0x25,
+0x77, 0x78, 0x00, 0x00, 0x50, 0x45, 0x52, 0x20,
+0x52, 0x50, 0x54, 0x3A, 0x20, 0x25, 0x62, 0x58,
+0x2C, 0x25, 0x62, 0x78, 0x2C, 0x25, 0x62, 0x78,
+0x2C, 0x25, 0x62, 0x78, 0x2C, 0x25, 0x62, 0x58,
+0x2C, 0x25, 0x62, 0x78, 0x2C, 0x25, 0x62, 0x78,
+0x2C, 0x25, 0x62, 0x78, 0x2C, 0x25, 0x62, 0x58,
+0x2C, 0x25, 0x62, 0x78, 0x2C, 0x25, 0x62, 0x78,
+0x2C, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x52, 0x65, 0x71, 0x20, 0x50, 0x45, 0x52, 0x20,
+0x43, 0x4D, 0x44, 0x3A, 0x20, 0x47, 0x72, 0x3A,
+0x25, 0x62, 0x58, 0x2C, 0x20, 0x54, 0x59, 0x50,
+0x3A, 0x25, 0x62, 0x78, 0x2C, 0x20, 0x62, 0x74,
+0x6D, 0x70, 0x3A, 0x25, 0x78, 0x00, 0x00, 0x00,
+0x52, 0x65, 0x71, 0x20, 0x50, 0x45, 0x52, 0x20,
+0x43, 0x4D, 0x44, 0x3A, 0x20, 0x49, 0x64, 0x78,
+0x3A, 0x25, 0x62, 0x78, 0x2C, 0x20, 0x6D, 0x69,
+0x64, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x52, 0x65, 0x71, 0x20, 0x50, 0x45, 0x52, 0x20,
+0x43, 0x4D, 0x44, 0x3A, 0x20, 0x49, 0x64, 0x78,
+0x3A, 0x25, 0x62, 0x78, 0x2C, 0x20, 0x4D, 0x69,
+0x64, 0x3A, 0x25, 0x62, 0x78, 0x2C, 0x20, 0x25,
+0x62, 0x78, 0x2C, 0x20, 0x25, 0x62, 0x78, 0x00,
+0x53, 0x65, 0x74, 0x5F, 0x52, 0x41, 0x5F, 0x55,
+0x70, 0x5F, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x5F,
+0x66, 0x6F, 0x72, 0x5F, 0x52, 0x41, 0x5F, 0x64,
+0x65, 0x62, 0x75, 0x67, 0x00, 0x00, 0x00, 0x00,
+0x53, 0x65, 0x74, 0x5F, 0x44, 0x6F, 0x77, 0x6E,
+0x5F, 0x72, 0x61, 0x74, 0x69, 0x6F, 0x00, 0x00,
+0x76, 0x61, 0x6C, 0x75, 0x65, 0x38, 0x3D, 0x30,
+0x78, 0x25, 0x62, 0x58, 0x2C, 0x20, 0x76, 0x61,
+0x6C, 0x75, 0x65, 0x31, 0x36, 0x3D, 0x30, 0x78,
+0x25, 0x77, 0x78, 0x2C, 0x20, 0x76, 0x61, 0x6C,
+0x75, 0x65, 0x33, 0x32, 0x3D, 0x30, 0x78, 0x25,
+0x78, 0x00, 0x00, 0x00, 0x49, 0x44, 0x3D, 0x25,
+0x62, 0x78, 0x2C, 0x44, 0x69, 0x73, 0x52, 0x41,
+0x3D, 0x25, 0x62, 0x78, 0x2C, 0x44, 0x69, 0x73,
+0x50, 0x54, 0x3D, 0x25, 0x62, 0x78, 0x2C, 0x52,
+0x74, 0x49, 0x44, 0x3D, 0x25, 0x62, 0x78, 0x00,
+0x42, 0x57, 0x3D, 0x25, 0x62, 0x78, 0x2C, 0x42,
+0x57, 0x4D, 0x3D, 0x25, 0x62, 0x78, 0x2C, 0x4E,
+0x6F, 0x55, 0x70, 0x42, 0x77, 0x3D, 0x25, 0x62,
+0x78, 0x2C, 0x53, 0x47, 0x49, 0x3D, 0x25, 0x62,
+0x78, 0x2C, 0x56, 0x48, 0x54, 0x3D, 0x25, 0x62,
+0x78, 0x00, 0x00, 0x00, 0x63, 0x63, 0x78, 0x5F,
+0x68, 0x32, 0x63, 0x20, 0x25, 0x62, 0x78, 0x2C,
+0x25, 0x62, 0x78, 0x20, 0x50, 0x65, 0x72, 0x69,
+0x6F, 0x64, 0x3D, 0x25, 0x77, 0x78, 0x00, 0x00,
+0x72, 0x65, 0x61, 0x64, 0x79, 0x3D, 0x25, 0x62,
+0x78, 0x00, 0x00, 0x00, 0x43, 0x6C, 0x6D, 0x52,
+0x70, 0x74, 0x3D, 0x25, 0x77, 0x78, 0x00, 0x00,
+0x43, 0x32, 0x48, 0x20, 0x25, 0x62, 0x78, 0x20,
+0x25, 0x62, 0x78, 0x00, 0x74, 0x62, 0x74, 0x74,
+0x3D, 0x25, 0x62, 0x78, 0x2C, 0x72, 0x5F, 0x63,
+0x6E, 0x74, 0x3D, 0x25, 0x62, 0x78, 0x00, 0x00,
+0x43, 0x4C, 0x4D, 0x5F, 0x44, 0x65, 0x63, 0x00,
+0x43, 0x4C, 0x4D, 0x5F, 0x54, 0x72, 0x69, 0x67,
+0x00, 0x00, 0x00, 0x00, 0x50, 0x45, 0x52, 0x3A,
+0x25, 0x62, 0x78, 0x20, 0x43, 0x75, 0x72, 0x3A,
+0x25, 0x62, 0x78, 0x20, 0x4F, 0x3A, 0x25, 0x62,
+0x78, 0x00, 0x00, 0x00, 0x4D, 0x61, 0x70, 0x3A,
+0x25, 0x62, 0x78, 0x20, 0x44, 0x69, 0x66, 0x3A,
+0x25, 0x62, 0x78, 0x20, 0x6F, 0x66, 0x74, 0x3A,
+0x25, 0x62, 0x78, 0x00, 0x56, 0x61, 0x72, 0x3A,
+0x20, 0x25, 0x62, 0x78, 0x2D, 0x3E, 0x25, 0x62,
+0x78, 0x00, 0x00, 0x00, 0x44, 0x65, 0x63, 0x5F,
+0x6F, 0x66, 0x73, 0x74, 0x7B, 0x50, 0x2C, 0x4E,
+0x7D, 0x3A, 0x20, 0x25, 0x62, 0x78, 0x2C, 0x25,
+0x62, 0x78, 0x00, 0x00, 0x4D, 0x74, 0x42, 0x77,
+0x20, 0x55, 0x70, 0x44, 0x77, 0x25, 0x62, 0x78,
+0x20, 0x42, 0x57, 0x25, 0x62, 0x78, 0x20, 0x52,
+0x74, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x48, 0x69, 0x74, 0x25, 0x62, 0x78, 0x20, 0x52,
+0x74, 0x30, 0x3D, 0x25, 0x77, 0x78, 0x20, 0x52,
+0x74, 0x31, 0x3D, 0x25, 0x77, 0x78, 0x00, 0x00,
+0x72, 0x25, 0x62, 0x78, 0x20, 0x4C, 0x25, 0x62,
+0x78, 0x00, 0x00, 0x00, 0x52, 0x53, 0x53, 0x49,
+0x20, 0x52, 0x6C, 0x73, 0x4C, 0x6D, 0x74, 0x00,
+0x52, 0x53, 0x53, 0x49, 0x20, 0x55, 0x70, 0x4C,
+0x6D, 0x74, 0x00, 0x00, 0x55, 0x70, 0x4C, 0x6D,
+0x74, 0x3A, 0x25, 0x62, 0x78, 0x20, 0x25, 0x62,
+0x78, 0x20, 0x25, 0x62, 0x78, 0x20, 0x25, 0x62,
+0x78, 0x00, 0x00, 0x00, 0x48, 0x52, 0x3A, 0x25,
+0x62, 0x78, 0x2C, 0x4C, 0x52, 0x3A, 0x25, 0x62,
+0x78, 0x2C, 0x4D, 0x53, 0x3A, 0x25, 0x62, 0x78,
+0x00, 0x00, 0x00, 0x00, 0x46, 0x69, 0x78, 0x20,
+0x69, 0x64, 0x3D, 0x25, 0x62, 0x78, 0x20, 0x42,
+0x77, 0x3D, 0x25, 0x62, 0x78, 0x20, 0x52, 0x74,
+0x3D, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x52, 0x61, 0x4F, 0x63, 0x63, 0x4E, 0x75, 0x6D,
+0x25, 0x62, 0x78, 0x00, 0x52, 0x61, 0x44, 0x77,
+0x54, 0x79, 0x20, 0x52, 0x74, 0x3D, 0x25, 0x62,
+0x78, 0x2C, 0x42, 0x77, 0x25, 0x62, 0x78, 0x00,
+0x55, 0x70, 0x52, 0x61, 0x74, 0x65, 0x25, 0x62,
+0x78, 0x20, 0x42, 0x57, 0x25, 0x62, 0x78, 0x20,
+0x4D, 0x61, 0x78, 0x42, 0x57, 0x25, 0x62, 0x78,
+0x00, 0x00, 0x00, 0x00, 0x30, 0x55, 0x70, 0x64,
+0x74, 0x5F, 0x42, 0x57, 0x3D, 0x25, 0x62, 0x78,
+0x00, 0x00, 0x00, 0x00, 0x53, 0x47, 0x49, 0x5F,
+0x52, 0x61, 0x74, 0x65, 0x3D, 0x25, 0x62, 0x78,
+0x00, 0x00, 0x00, 0x00, 0x33, 0x72, 0x61, 0x74,
+0x65, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x34, 0x72, 0x61, 0x74, 0x65, 0x25, 0x62, 0x78,
+0x00, 0x00, 0x00, 0x00, 0x35, 0x72, 0x61, 0x74,
+0x65, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x30, 0x52, 0x74, 0x25, 0x62, 0x78, 0x20, 0x25,
+0x62, 0x78, 0x20, 0x25, 0x62, 0x78, 0x00, 0x00,
+0x31, 0x52, 0x74, 0x25, 0x62, 0x78, 0x20, 0x25,
+0x62, 0x78, 0x20, 0x25, 0x62, 0x78, 0x00, 0x00,
+0x4E, 0x6F, 0x20, 0x55, 0x70, 0x20, 0x52, 0x61,
+0x74, 0x65, 0x00, 0x00, 0x32, 0x52, 0x74, 0x3A,
+0x25, 0x62, 0x78, 0x20, 0x25, 0x62, 0x78, 0x20,
+0x25, 0x62, 0x78, 0x2C, 0x20, 0x54, 0x72, 0x79,
+0x3D, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x44, 0x6E, 0x52, 0x61, 0x74, 0x65, 0x25, 0x62,
+0x78, 0x20, 0x42, 0x57, 0x25, 0x62, 0x78, 0x20,
+0x4D, 0x61, 0x78, 0x42, 0x57, 0x25, 0x62, 0x78,
+0x00, 0x00, 0x00, 0x00, 0x44, 0x5F, 0x52, 0x74,
+0x25, 0x62, 0x78, 0x20, 0x42, 0x77, 0x25, 0x62,
+0x78, 0x00, 0x00, 0x00, 0x50, 0x6B, 0x74, 0x20,
+0x54, 0x72, 0x79, 0x69, 0x6E, 0x67, 0x00, 0x00,
+0x44, 0x72, 0x6F, 0x70, 0x00, 0x00, 0x00, 0x00,
+0x6F, 0x72, 0x69, 0x5F, 0x50, 0x25, 0x62, 0x78,
+0x2C, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x4B, 0x25, 0x62, 0x78, 0x20, 0x54, 0x25, 0x62,
+0x78, 0x20, 0x44, 0x25, 0x62, 0x78, 0x00, 0x00,
+0x42, 0x77, 0x3D, 0x25, 0x62, 0x78, 0x2C, 0x20,
+0x42, 0x77, 0x32, 0x3D, 0x25, 0x62, 0x78, 0x20,
+0x52, 0x74, 0x3D, 0x25, 0x62, 0x78, 0x00, 0x00,
+0x30, 0x55, 0x70, 0x25, 0x62, 0x78, 0x2C, 0x44,
+0x77, 0x6E, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00,
+0x31, 0x55, 0x70, 0x25, 0x62, 0x78, 0x2C, 0x44,
+0x77, 0x6E, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00,
+0x32, 0x55, 0x70, 0x25, 0x62, 0x78, 0x2C, 0x44,
+0x77, 0x6E, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00,
+0x46, 0x77, 0x20, 0x46, 0x69, 0x78, 0x20, 0x52,
+0x61, 0x74, 0x65, 0x00, 0x46, 0x6F, 0x72, 0x63,
+0x65, 0x52, 0x61, 0x74, 0x65, 0x44, 0x77, 0x00,
+0x52, 0x74, 0x44, 0x77, 0x6E, 0x43, 0x6E, 0x74,
+0x3D, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x52, 0x61, 0x74, 0x65, 0x44, 0x6F, 0x77, 0x6E,
+0x00, 0x00, 0x00, 0x00, 0x52, 0x74, 0x55, 0x70,
+0x43, 0x6E, 0x74, 0x3D, 0x25, 0x62, 0x78, 0x00,
+0x52, 0x61, 0x74, 0x65, 0x55, 0x50, 0x00, 0x00,
+0x52, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x79,
+0x00, 0x00, 0x00, 0x00, 0x54, 0x72, 0x79, 0x53,
+0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x00, 0x00,
+0x54, 0x72, 0x79, 0x66, 0x61, 0x69, 0x6C, 0x00,
+0x4D, 0x74, 0x54, 0x72, 0x79, 0x3D, 0x25, 0x62,
+0x78, 0x00, 0x00, 0x00, 0x42, 0x57, 0x25, 0x62,
+0x78, 0x20, 0x52, 0x74, 0x25, 0x62, 0x78, 0x00,
+0x6F, 0x6B, 0x25, 0x62, 0x78, 0x20, 0x74, 0x74,
+0x25, 0x62, 0x78, 0x20, 0x64, 0x70, 0x25, 0x62,
+0x78, 0x20, 0x6F, 0x61, 0x25, 0x62, 0x78, 0x00,
+0x5B, 0x54, 0x52, 0x59, 0x5D, 0x20, 0x50, 0x25,
+0x62, 0x78, 0x2C, 0x25, 0x62, 0x78, 0x20, 0x42,
+0x77, 0x3D, 0x25, 0x62, 0x78, 0x20, 0x52, 0x74,
+0x3D, 0x25, 0x62, 0x78, 0x00, 0x00, 0x00, 0x00,
+0x50, 0x72, 0x20, 0x25, 0x62, 0x78, 0x20, 0x25,
+0x62, 0x78, 0x00, 0x00, 0x52, 0x74, 0x20, 0x25,
+0x62, 0x78, 0x20, 0x25, 0x62, 0x78, 0x00, 0x00,
+0x54, 0x70, 0x25, 0x77, 0x78, 0x20, 0x25, 0x77,
+0x78, 0x00, 0x00, 0x00, 0x55, 0x70, 0x46, 0x61,
+0x69, 0x6C, 0x00, 0x00, 0x54, 0x79, 0x53, 0x75,
+0x63, 0x52, 0x74, 0x20, 0x25, 0x62, 0x78, 0x00,
+0x72, 0x61, 0x5F, 0x69, 0x64, 0x78, 0x25, 0x62,
+0x78, 0x2C, 0x63, 0x74, 0x72, 0x6C, 0x25, 0x62,
+0x78, 0x00, 0x00, 0x00, 0x31, 0x52, 0x74, 0x3D,
+0x25, 0x62, 0x78, 0x2D, 0x3E, 0x25, 0x62, 0x78,
+0x20, 0x52, 0x5B, 0x25, 0x62, 0x78, 0x5D, 0x4F,
+0x6B, 0x3A, 0x25, 0x62, 0x78, 0x2B, 0x44, 0x70,
+0x3A, 0x25, 0x62, 0x78, 0x3D, 0x54, 0x3A, 0x25,
+0x62, 0x78, 0x20, 0x54, 0x61, 0x6C, 0x6C, 0x25,
+0x62, 0x78, 0x00, 0x00, 0x43, 0x25, 0x62, 0x78,
+0x20, 0x4E, 0x25, 0x62, 0x78, 0x20, 0x50, 0x25,
+0x62, 0x78, 0x00, 0x00, 0x43, 0x32, 0x48, 0x50,
+0x6B, 0x74, 0x3A, 0x25, 0x62, 0x78, 0x20, 0x25,
+0x62, 0x78, 0x00, 0x00, 0x54, 0x62, 0x74, 0x74,
+0x52, 0x41, 0x20, 0x25, 0x62, 0x78, 0x00, 0x00,
+0x32, 0x52, 0x74, 0x3D, 0x25, 0x62, 0x78, 0x2D,
+0x3E, 0x25, 0x62, 0x78, 0x20, 0x52, 0x5B, 0x25,
+0x62, 0x78, 0x5D, 0x4F, 0x6B, 0x3A, 0x25, 0x62,
+0x78, 0x2B, 0x44, 0x70, 0x3A, 0x25, 0x62, 0x78,
+0x21, 0x54, 0x3A, 0x25, 0x62, 0x78, 0x20, 0x54,
+0x61, 0x6C, 0x6C, 0x25, 0x62, 0x78, 0x00, 0x00,
+0x44, 0x69, 0x73, 0x52, 0x61, 0x49, 0x44, 0x20,
+0x25, 0x62, 0x78, 0x00, 0x5B, 0x25, 0x73, 0x5D,
+0x3A, 0x20, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6C,
+0x65, 0x20, 0x50, 0x48, 0x59, 0x20, 0x41, 0x50,
+0x49, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x64, 0x65,
+0x62, 0x75, 0x67, 0x21, 0x21, 0x0A, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x75, 0x6E,
+0x73, 0x75, 0x70, 0x70, 0x6F, 0x72, 0x74, 0x65,
+0x64, 0x20, 0x70, 0x61, 0x74, 0x68, 0x20, 0x28,
+0x25, 0x64, 0x29, 0x0A, 0x00, 0x00, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x50, 0x61,
+0x74, 0x68, 0x2D, 0x25, 0x64, 0x20, 0x52, 0x61,
+0x74, 0x65, 0x20, 0x69, 0x6E, 0x64, 0x65, 0x78,
+0x20, 0x30, 0x78, 0x25, 0x78, 0x20, 0x28, 0x30,
+0x78, 0x25, 0x78, 0x29, 0x20, 0x3D, 0x20, 0x30,
+0x78, 0x25, 0x78, 0x0A, 0x00, 0x00, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x50, 0x61,
+0x74, 0x68, 0x2D, 0x25, 0x64, 0x20, 0x72, 0x61,
+0x74, 0x65, 0x20, 0x69, 0x6E, 0x64, 0x65, 0x78,
+0x20, 0x30, 0x78, 0x25, 0x78, 0x20, 0x3D, 0x20,
+0x30, 0x78, 0x25, 0x78, 0x0A, 0x00, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x52, 0x46,
+0x2D, 0x25, 0x64, 0x20, 0x30, 0x78, 0x25, 0x78,
+0x20, 0x3D, 0x20, 0x30, 0x78, 0x25, 0x78, 0x2C,
+0x20, 0x62, 0x69, 0x74, 0x20, 0x6D, 0x61, 0x73,
+0x6B, 0x20, 0x3D, 0x20, 0x30, 0x78, 0x25, 0x78,
+0x0A, 0x00, 0x00, 0x00, 0x5B, 0x25, 0x73, 0x5D,
+0x3A, 0x20, 0x57, 0x72, 0x69, 0x74, 0x65, 0x20,
+0x66, 0x61, 0x69, 0x6C, 0x2C, 0x20, 0x52, 0x46,
+0x20, 0x69, 0x73, 0x20, 0x64, 0x69, 0x73, 0x61,
+0x62, 0x6C, 0x65, 0x0A, 0x00, 0x00, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x52, 0x46,
+0x2D, 0x25, 0x64, 0x20, 0x30, 0x78, 0x25, 0x78,
+0x20, 0x3D, 0x20, 0x30, 0x78, 0x25, 0x78, 0x20,
+0x28, 0x6F, 0x72, 0x69, 0x67, 0x69, 0x6E, 0x61,
+0x6C, 0x3A, 0x20, 0x30, 0x78, 0x25, 0x78, 0x29,
+0x2C, 0x20, 0x62, 0x69, 0x74, 0x20, 0x6D, 0x61,
+0x73, 0x6B, 0x20, 0x3D, 0x20, 0x30, 0x78, 0x25,
+0x78, 0x0A, 0x00, 0x00, 0x5B, 0x25, 0x73, 0x5D,
+0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D,
+0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D,
+0x3D, 0x3D, 0x3D, 0x3D, 0x3E, 0x0A, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x46, 0x61,
+0x69, 0x6C, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x77,
+0x69, 0x74, 0x63, 0x68, 0x20, 0x63, 0x68, 0x61,
+0x6E, 0x6E, 0x65, 0x6C, 0x20, 0x28, 0x52, 0x46,
+0x31, 0x38, 0x29, 0x20, 0x28, 0x63, 0x68, 0x3A,
+0x20, 0x25, 0x64, 0x29, 0x0A, 0x00, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x46, 0x61,
+0x69, 0x6C, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x77,
+0x69, 0x74, 0x63, 0x68, 0x20, 0x63, 0x68, 0x61,
+0x6E, 0x6E, 0x65, 0x6C, 0x20, 0x28, 0x41, 0x47,
+0x43, 0x29, 0x20, 0x28, 0x63, 0x68, 0x3A, 0x20,
+0x25, 0x64, 0x29, 0x0A, 0x00, 0x00, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x46, 0x61,
+0x69, 0x6C, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x77,
+0x69, 0x74, 0x63, 0x68, 0x20, 0x63, 0x68, 0x61,
+0x6E, 0x6E, 0x65, 0x6C, 0x20, 0x28, 0x66, 0x63,
+0x5F, 0x61, 0x72, 0x65, 0x61, 0x29, 0x20, 0x28,
+0x63, 0x68, 0x3A, 0x20, 0x25, 0x64, 0x29, 0x0A,
+0x00, 0x00, 0x00, 0x00, 0x5B, 0x25, 0x73, 0x5D,
+0x3A, 0x20, 0x46, 0x61, 0x69, 0x6C, 0x20, 0x74,
+0x6F, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
+0x20, 0x62, 0x61, 0x6E, 0x64, 0x20, 0x28, 0x63,
+0x68, 0x3A, 0x20, 0x25, 0x64, 0x29, 0x0A, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x46, 0x61,
+0x69, 0x6C, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x77,
+0x69, 0x74, 0x63, 0x68, 0x20, 0x63, 0x68, 0x61,
+0x6E, 0x6E, 0x65, 0x6C, 0x20, 0x28, 0x63, 0x68,
+0x3A, 0x20, 0x25, 0x64, 0x29, 0x2C, 0x20, 0x62,
+0x65, 0x63, 0x61, 0x75, 0x73, 0x65, 0x20, 0x77,
+0x72, 0x69, 0x74, 0x69, 0x6E, 0x67, 0x20, 0x52,
+0x46, 0x20, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
+0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x66, 0x61,
+0x69, 0x6C, 0x0A, 0x00, 0x5B, 0x25, 0x73, 0x5D,
+0x3A, 0x20, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
+0x73, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x77, 0x69,
+0x74, 0x63, 0x68, 0x20, 0x63, 0x68, 0x61, 0x6E,
+0x6E, 0x65, 0x6C, 0x20, 0x28, 0x63, 0x68, 0x3A,
+0x20, 0x25, 0x64, 0x29, 0x0A, 0x00, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3D, 0x3D, 0x3D, 0x3D,
+0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D,
+0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D,
+0x3D, 0x3D, 0x3E, 0x0A, 0x00, 0x00, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x46, 0x61,
+0x69, 0x6C, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x77,
+0x69, 0x74, 0x63, 0x68, 0x20, 0x62, 0x61, 0x6E,
+0x64, 0x20, 0x28, 0x63, 0x68, 0x3A, 0x20, 0x25,
+0x64, 0x29, 0x2C, 0x20, 0x62, 0x65, 0x63, 0x61,
+0x75, 0x73, 0x65, 0x20, 0x77, 0x72, 0x69, 0x74,
+0x69, 0x6E, 0x67, 0x20, 0x52, 0x46, 0x20, 0x72,
+0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x20,
+0x69, 0x73, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x0A,
+0x00, 0x00, 0x00, 0x00, 0x5B, 0x25, 0x73, 0x5D,
+0x3A, 0x20, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
+0x73, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x77, 0x69,
+0x74, 0x63, 0x68, 0x20, 0x62, 0x61, 0x6E, 0x64,
+0x20, 0x28, 0x63, 0x68, 0x3A, 0x20, 0x25, 0x64,
+0x29, 0x0A, 0x00, 0x00, 0x5B, 0x25, 0x73, 0x5D,
+0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D,
+0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D,
+0x3D, 0x3D, 0x3D, 0x3E, 0x0A, 0x00, 0x00, 0x00,
+0x5B, 0x25, 0x73, 0x5D, 0x3A, 0x20, 0x46, 0x61,
+0x69, 0x6C, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x77,
+0x69, 0x74, 0x63, 0x68, 0x20, 0x62, 0x61, 0x6E,
+0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x20, 0x28,
+0x62, 0x77, 0x3A, 0x20, 0x25, 0x64, 0x2C, 0x20,
+0x70, 0x72, 0x69, 0x6D, 0x61, 0x72, 0x79, 0x20,
+0x63, 0x68, 0x3A, 0x20, 0x25, 0x64, 0x29, 0x0A,
+0x00, 0x00, 0x00, 0x00, 0x5B, 0x25, 0x73, 0x5D,
+0x3A, 0x20, 0x46, 0x61, 0x69, 0x6C, 0x20, 0x74,
+0x6F, 0x20, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
+0x20, 0x62, 0x61, 0x6E, 0x64, 0x77, 0x69, 0x64,
+0x74, 0x68, 0x20, 0x28, 0x62, 0x77, 0x3A, 0x20,
+0x25, 0x64, 0x2C, 0x20, 0x70, 0x72, 0x69, 0x6D,
+0x61, 0x72, 0x79, 0x20, 0x63, 0x68, 0x3A, 0x20,
+0x25, 0x64, 0x29, 0x2C, 0x20, 0x62, 0x65, 0x63,
+0x61, 0x75, 0x73, 0x65, 0x20, 0x77, 0x72, 0x69,
+0x74, 0x69, 0x6E, 0x67, 0x20, 0x52, 0x46, 0x20,
+0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
+0x20, 0x69, 0x73, 0x20, 0x66, 0x61, 0x69, 0x6C,
+0x0A, 0x00, 0x00, 0x00, 0x5B, 0x25, 0x73, 0x5D,
+0x3A, 0x20, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
+0x73, 0x20, 0x74, 0x6F, 0x20, 0x73, 0x77, 0x69,
+0x74, 0x63, 0x68, 0x20, 0x62, 0x61, 0x6E, 0x64,
+0x77, 0x69, 0x64, 0x74, 0x68, 0x20, 0x28, 0x62,
+0x77, 0x3A, 0x20, 0x25, 0x64, 0x2C, 0x20, 0x70,
+0x72, 0x69, 0x6D, 0x61, 0x72, 0x79, 0x20, 0x63,
+0x68, 0x3A, 0x20, 0x25, 0x64, 0x29, 0x0A, 0x00,
+0x53, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x10, 0xF0, 0x23, 0x6A, 0x40, 0xF2, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x44, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x00, 0xF4, 0x15, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x48, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xA0, 0xF4, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x4C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x20, 0xF5, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x50, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x23, 0xF7, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x54, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x24, 0xF0, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x58, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF7, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE2, 0xF5, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x40, 0xF4, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x00, 0xF2, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x60, 0xF5, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA0, 0xF6, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA0, 0xF5, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x00, 0xF1, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x61, 0xF6, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x21, 0xF5, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF5, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x02, 0xF1, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE2, 0xF6, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x62, 0xF1, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA2, 0xF0, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x01, 0xF6, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x80, 0xF5, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x60, 0xF0, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x7F, 0xF6, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC2, 0xF5, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x5F, 0xF6, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF1, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF7, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x42, 0xF6, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC1, 0xF6, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x21, 0xF6, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x00, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF1, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xE3, 0xF6, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xFF, 0xF7, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xBF, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x80, 0xF0, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE0, 0xF1, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x40, 0xF3, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x80, 0xF1, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x02, 0xF3, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x02, 0xF4, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE2, 0xF1, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x62, 0xF4, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC2, 0xF4, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF1, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x41, 0xF4, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC1, 0xF2, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC1, 0xF1, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x00, 0xF7, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x61, 0xF0, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x01, 0xF0, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x40, 0xF7, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x01, 0xF1, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x21, 0xF1, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x22, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x82, 0xF7, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA2, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x1F, 0xF6, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x63, 0xF0, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA3, 0xF0, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC3, 0xF0, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x23, 0xF3, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x83, 0xF3, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC3, 0xF3, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x03, 0xF4, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x23, 0xF4, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x63, 0xF4, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA3, 0xF6, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE3, 0xF6, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x23, 0xF7, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA4, 0xF0, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x04, 0xF1, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x64, 0xF1, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x84, 0xF3, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE4, 0xF3, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x04, 0xF4, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x44, 0xF4, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x5C, 0xDB,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
+0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF6, 0x04, 0x4C,
+0x00, 0x6D, 0x07, 0x6E, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x04, 0x6B, 0xC8, 0xF3,
+0x7C, 0xC2, 0x03, 0x6B, 0xC8, 0xF3, 0x7D, 0xC2,
+0x64, 0x6B, 0xC8, 0xF3, 0x7E, 0xCA, 0x01, 0x6B,
+0xE8, 0xF3, 0x60, 0xC2, 0x05, 0x6B, 0xE8, 0xF3,
+0x61, 0xC2, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0x70, 0x6E, 0x28, 0xF5, 0x1C, 0x4C, 0x00, 0x6D,
+0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA, 0xC0, 0xF1,
+0x08, 0x48, 0x00, 0x18, 0x6E, 0xCA, 0x02, 0x6A,
+0x68, 0xF3, 0x56, 0xC0, 0x10, 0x6A, 0x88, 0xF3,
+0x44, 0xC0, 0x05, 0x6A, 0x88, 0xF3, 0x4A, 0xC8,
+0x88, 0xF3, 0x5B, 0xA0, 0x01, 0x69, 0x88, 0xF3,
+0x22, 0xC0, 0x04, 0x4A, 0x88, 0xF3, 0x56, 0xC0,
+0x10, 0x6A, 0x88, 0xF3, 0x57, 0xC0, 0x88, 0xF3,
+0x23, 0xC0, 0x80, 0x18, 0x79, 0x05, 0x00, 0x6C,
+0xA4, 0x67, 0x00, 0x18, 0xE5, 0xC8, 0x02, 0x6C,
+0x0C, 0x6D, 0x00, 0x18, 0xE5, 0xC8, 0x01, 0x6C,
+0x0C, 0x6D, 0x00, 0x18, 0xE5, 0xC8, 0x30, 0xF0,
+0x20, 0x6C, 0x00, 0x6D, 0x48, 0xF5, 0x10, 0x4C,
+0x00, 0x18, 0xFF, 0xF5, 0xE8, 0xF3, 0x66, 0xA0,
+0x0F, 0x6A, 0xE8, 0xF3, 0x45, 0xC0, 0x01, 0x6A,
+0x6C, 0xEA, 0x28, 0x6B, 0x6D, 0xEA, 0xE8, 0xF3,
+0x46, 0xC0, 0x07, 0x6A, 0xE8, 0xF3, 0x47, 0xC0,
+0x88, 0xF3, 0x5B, 0xA0, 0x01, 0x6C, 0xE8, 0xF3,
+0x24, 0xC0, 0x04, 0x4A, 0x88, 0xF3, 0x56, 0xC0,
+0x10, 0x6A, 0x88, 0xF3, 0x57, 0xC0, 0x00, 0x18,
+0xAE, 0xC9, 0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18,
+0x50, 0xD1, 0x01, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x50, 0xD1, 0x02, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x50, 0xD1, 0x03, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x50, 0xD1, 0x04, 0x6C, 0x00, 0x6D, 0x00, 0x18,
+0x50, 0xD1, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x74, 0x9A, 0xF8, 0x6A, 0x00, 0x6D, 0x80, 0xA3,
+0xC5, 0x67, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x58, 0x9A, 0xFF, 0x6C,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0x00, 0x6B, 0xC1, 0xF6,
+0x62, 0xC2, 0xC1, 0xF6, 0x63, 0xC2, 0xC1, 0xF6,
+0x64, 0xC2, 0xC1, 0xF6, 0x65, 0xC2, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0x24, 0xF0, 0x1D, 0x4B, 0x40, 0xF1, 0x68, 0xDA,
+0x10, 0xF0, 0x23, 0x6B, 0x40, 0xF1, 0x08, 0x4A,
+0x40, 0xF5, 0x09, 0x4B, 0x61, 0xDA, 0x10, 0xF0,
+0x23, 0x6B, 0xC0, 0xF5, 0x05, 0x4B, 0x62, 0xDA,
+0x10, 0xF0, 0x23, 0x6B, 0xA0, 0xF5, 0x15, 0x4B,
+0x63, 0xDA, 0x10, 0xF0, 0x23, 0x6B, 0xA0, 0xF5,
+0x05, 0x4B, 0x64, 0xDA, 0x10, 0xF0, 0x23, 0x6B,
+0x80, 0xF5, 0x15, 0x4B, 0x65, 0xDA, 0x10, 0xF0,
+0x23, 0x6B, 0x80, 0xF5, 0x05, 0x4B, 0x66, 0xDA,
+0x10, 0xF0, 0x23, 0x6B, 0x60, 0xF5, 0x15, 0x4B,
+0x67, 0xDA, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xA8, 0xF4, 0x17, 0x4A, 0x67, 0x42, 0x09, 0x4B,
+0x00, 0x6C, 0x80, 0xC2, 0x01, 0x4A, 0x6A, 0xEA,
+0xFB, 0x61, 0x42, 0xF4, 0x10, 0x6A, 0x1F, 0xF7,
+0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
+0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF2, 0x60, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B, 0x6D, 0xE2,
+0x04, 0x4A, 0x00, 0x6C, 0x62, 0xF4, 0x00, 0x72,
+0x80, 0xDB, 0xE9, 0x61, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0xEF, 0xF4, 0x0F, 0x4C, 0x00, 0x6D, 0x03, 0x6E,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF4, 0x5C, 0x9A, 0x03, 0x6D, 0xFF, 0x6B,
+0x80, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4,
+0x40, 0x9A, 0x00, 0xF5, 0x82, 0x34, 0xAC, 0xEC,
+0x40, 0x9A, 0x01, 0x74, 0x42, 0x32, 0x52, 0x32,
+0xAC, 0xEA, 0x06, 0x60, 0x0A, 0x2C, 0x02, 0x5A,
+0x28, 0x6C, 0x0D, 0x60, 0x50, 0x6C, 0x0B, 0x10,
+0x02, 0x5A, 0x14, 0x6C, 0x08, 0x60, 0x28, 0x6C,
+0x04, 0x10, 0x02, 0x5A, 0x0A, 0x6C, 0x03, 0x60,
+0x14, 0x6C, 0x84, 0xEA, 0x6C, 0xEC, 0x80, 0x18,
+0x05, 0x07, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0x6B, 0x00, 0xF2, 0x63, 0xC2,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3, 0x6C, 0x9B,
+0x00, 0x6A, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF2, 0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0x3C, 0xF4, 0x78, 0x9B, 0x40, 0xC3,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x68, 0x04, 0xD2, 0x04, 0x94,
+0x4E, 0xF2, 0x4C, 0x98, 0x00, 0x6D, 0x4C, 0xF7,
+0x14, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x05, 0xD2, 0x05, 0x94,
+0x4E, 0xF2, 0x4C, 0x98, 0x00, 0x6D, 0xA0, 0xF6,
+0x10, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x30, 0x69,
+0x4E, 0xF2, 0x4C, 0x98, 0x00, 0xF0, 0x00, 0x49,
+0x91, 0x67, 0x00, 0x6D, 0xC2, 0xF0, 0x10, 0x6E,
+0x40, 0xEA, 0x80, 0x18, 0xC5, 0x05, 0x04, 0x92,
+0x00, 0x68, 0x40, 0xF0, 0x00, 0xC1, 0x80, 0xF0,
+0x0C, 0xDA, 0x80, 0x18, 0xCC, 0x05, 0x00, 0x18,
+0x65, 0xDE, 0x05, 0x92, 0x30, 0xF0, 0x20, 0x6C,
+0xED, 0xF0, 0x16, 0x4C, 0x00, 0xF2, 0x04, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xED, 0xF0, 0x06, 0x4A,
+0x00, 0x6B, 0x60, 0xC2, 0x70, 0xC2, 0x01, 0x4A,
+0x62, 0x67, 0x8E, 0xEB, 0xF9, 0x2B, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x28, 0xF1,
+0x73, 0xC2, 0x2C, 0xF7, 0x7E, 0xC2, 0x2C, 0xF7,
+0x7F, 0xC2, 0x28, 0xF1, 0x72, 0xC2, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x80, 0x18, 0xE3, 0x05, 0x80, 0x18, 0x7E, 0x06,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x58, 0x9A,
+0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48,
+0x40, 0xEA, 0x80, 0x18, 0xF7, 0x17, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF3, 0x58, 0x9A, 0x01, 0x69,
+0x2B, 0xE9, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0x1C, 0x6E, 0xAF, 0xF5, 0x1C, 0x4C, 0x00, 0x6D,
+0x40, 0xEA, 0xC0, 0xF0, 0x7D, 0xA0, 0x08, 0x6A,
+0x4B, 0xEA, 0xB1, 0x67, 0x41, 0xF4, 0x18, 0x6C,
+0x6C, 0xEA, 0xC0, 0xF0, 0x5D, 0xC0, 0x00, 0x18,
+0x42, 0xE7, 0x30, 0xF0, 0x20, 0x6B, 0x89, 0xF2,
+0x58, 0xDB, 0x1E, 0x6A, 0xE0, 0xF0, 0x48, 0xC0,
+0x04, 0x6A, 0xE0, 0xF0, 0x4A, 0xC0, 0x80, 0x18,
+0x83, 0x05, 0x80, 0x18, 0x71, 0x05, 0x00, 0x18,
+0xA3, 0xC4, 0x00, 0x18, 0xEC, 0xEF, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF5, 0x44, 0x9A, 0x40, 0xEA,
+0x80, 0x18, 0x16, 0x07, 0x00, 0x18, 0xAB, 0xDE,
+0x00, 0x18, 0x95, 0xE9, 0x10, 0xF0, 0x24, 0x6C,
+0xF1, 0x67, 0xF4, 0xF4, 0x05, 0x4C, 0x00, 0x6D,
+0x64, 0x6E, 0x01, 0x6A, 0x04, 0xD2, 0x00, 0x18,
+0xFC, 0xE9, 0x80, 0x18, 0xF6, 0x05, 0x00, 0x18,
+0xB8, 0xE9, 0x80, 0x18, 0x72, 0x08, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0x6B, 0xEF, 0xF4,
+0x08, 0x4A, 0xA0, 0xF0, 0x6C, 0xC2, 0xA0, 0xF0,
+0x6D, 0xC2, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0x40, 0xF0, 0x60, 0xC2, 0x40, 0xF0,
+0x61, 0xC2, 0x20, 0xE8, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF7, 0x58, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF7, 0x9C, 0x9A, 0xFF, 0x6B, 0x20, 0x6D,
+0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF7,
+0x8C, 0x9A, 0x08, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF7, 0x60, 0x9A,
+0xFD, 0x6A, 0xFF, 0x6C, 0xA0, 0xA3, 0xAC, 0xEA,
+0x40, 0xC3, 0x40, 0xA3, 0x01, 0x6D, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF5, 0x10, 0x9A, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A, 0x90, 0x67,
+0x00, 0x6D, 0x02, 0xF0, 0x00, 0x6E, 0x40, 0xEA,
+0x04, 0x6A, 0x40, 0xC0, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF7, 0x44, 0x9A, 0x20, 0x48, 0x0E, 0xEA,
+0xF7, 0x2A, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0x9C, 0xF5, 0x98, 0x9B, 0x4E, 0xF2,
+0x4C, 0x9A, 0x00, 0x6D, 0x00, 0xF4, 0x00, 0x6E,
+0x40, 0xEA, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF7, 0xB0, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0xE0, 0xF3, 0x12, 0x6E, 0xC0, 0xF1, 0xC8, 0xDB,
+0x01, 0xF7, 0x01, 0x6A, 0xC0, 0xF1, 0x08, 0x4B,
+0x00, 0x6C, 0x42, 0xDB, 0x43, 0xDB, 0xA1, 0xDB,
+0x84, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7,
+0x7C, 0x9B, 0xC0, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF7, 0x64, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF7, 0x6C, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF7, 0x74, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF7,
+0x5C, 0x9A, 0x80, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0x80, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x58, 0xDB, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF7,
+0x6C, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF7, 0x94, 0x9B,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xC0, 0xF1, 0x06, 0x6D, 0xFF, 0x6B, 0xAE, 0xDA,
+0x8F, 0xDA, 0x70, 0xDA, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF7, 0x40, 0x9A, 0xA0, 0xDA, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF7, 0x44, 0x9A, 0x80, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF7, 0x4C, 0x9A,
+0x60, 0xDA, 0x20, 0xE8, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0x05, 0x08,
+0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x5C, 0xC3,
+0x80, 0x18, 0x96, 0x06, 0x00, 0x18, 0xFC, 0xEC,
+0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF0, 0x40, 0x9A,
+0x3F, 0x6B, 0x60, 0xC2, 0x80, 0x18, 0x87, 0x06,
+0x80, 0x18, 0x8B, 0x06, 0x80, 0x18, 0x0B, 0x07,
+0x80, 0x18, 0x9E, 0x06, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0x00, 0x6A,
+0xC0, 0xF1, 0x08, 0x48, 0x01, 0x6C, 0x02, 0x6D,
+0x00, 0x6E, 0x40, 0xF0, 0x50, 0xC8, 0x00, 0x18,
+0x5D, 0xD3, 0x40, 0xF0, 0xD0, 0xA8, 0x01, 0x6C,
+0x03, 0x6D, 0xC2, 0x36, 0x00, 0x18, 0x5D, 0xD3,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB7, 0xE1,
+0x00, 0x18, 0xD6, 0xE1, 0x80, 0x18, 0xB3, 0x06,
+0x80, 0x18, 0xD0, 0x06, 0x80, 0x18, 0xCA, 0x06,
+0x80, 0x18, 0xEF, 0x06, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0xC0, 0xD4, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x54, 0x9A, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x81, 0xF4, 0x10, 0x6B,
+0x28, 0xF1, 0x78, 0xDA, 0x00, 0xF2, 0x00, 0x4B,
+0x28, 0xF1, 0x7C, 0xDA, 0x01, 0xF2, 0x00, 0x4B,
+0x48, 0xF1, 0x60, 0xDA, 0x00, 0xF2, 0x00, 0x4B,
+0x48, 0xF1, 0x64, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0xDD, 0xF0, 0x4C, 0x9A, 0xE0, 0xF1, 0x1B, 0x6B,
+0x6B, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x24, 0x6A,
+0x3C, 0xF4, 0x64, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x23, 0x6A, 0x2A, 0xF4, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x4C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x4A, 0xF4, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xF0, 0xF5, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x43, 0xF4, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x58, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x36, 0xF3, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x50, 0xDB,
+0x10, 0xF0, 0x31, 0x6A, 0x52, 0xF4, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x54, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF2, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x5C, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xD4, 0xF2, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x58, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x94, 0xF3, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF6, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF2, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x29, 0xF6, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xC9, 0xF5, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x44, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xB3, 0xF4, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x48, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x50, 0xF2, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x4C, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x90, 0xF2, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x50, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x76, 0xF0, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x54, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0xC6, 0xF6, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x48, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x17, 0xF7, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF5, 0x4C, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x97, 0xF6, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF5, 0x44, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x96, 0xF6, 0x15, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x50, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x16, 0xF7, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x54, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF1, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x58, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF3, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x5C, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x53, 0xF7, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF2, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x03, 0xF6, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF2, 0x44, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xB7, 0xF1, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF3, 0x48, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x87, 0xF1, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF3, 0x50, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x97, 0xF4, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF3, 0x5C, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x47, 0xF5, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF3, 0x50, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x47, 0xF4, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF3, 0x58, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x46, 0xF7, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF3, 0x4C, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0xE6, 0xF7, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF3, 0x5C, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x07, 0xF2, 0x15, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF3, 0x40, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x56, 0xF7, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF3, 0x44, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0xA7, 0xF2, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF3, 0x44, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x3A, 0xF7, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF3, 0x54, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xA6, 0xF5, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x48, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x49, 0xF0, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x4C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x69, 0xF3, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x50, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xC9, 0xF0, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x54, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x09, 0xF2, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x58, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0x53, 0xF5, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xCA, 0xF3, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x54, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x0A, 0xF4, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xEA, 0xF3, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x58, 0xDB,
+0x10, 0xF0, 0x24, 0x6A, 0xF1, 0xF3, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x40, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x05, 0xF6, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF6, 0x44, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x05, 0xF1, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF5, 0x4C, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x86, 0xF5, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF5, 0x50, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x66, 0xF3, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF5, 0x54, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0xA6, 0xF1, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF6, 0x40, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0xC5, 0xF6, 0x15, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF6, 0x48, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0xA6, 0xF2, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF6, 0x50, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x25, 0xF2, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF6, 0x54, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x25, 0xF3, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF6, 0x58, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0xC5, 0xF3, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF6, 0x5C, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x26, 0xF4, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF6, 0x40, 0xDB,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0x9D, 0xF1, 0x50, 0x9A, 0x60, 0x9A, 0x03, 0x6A,
+0x62, 0x33, 0x72, 0x33, 0x4C, 0xEB, 0x02, 0x6A,
+0x04, 0x23, 0x01, 0x73, 0x01, 0x6A, 0x01, 0x60,
+0x03, 0x6A, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x20, 0x72, 0x2B, 0x60,
+0x21, 0x5A, 0x04, 0x60, 0x08, 0x22, 0x10, 0x72,
+0x16, 0x60, 0x56, 0x10, 0x30, 0x72, 0x33, 0x60,
+0x40, 0x72, 0x41, 0x60, 0x51, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x1C, 0xF3, 0x8C, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
+0xCF, 0xF6, 0x9C, 0xA2, 0x3F, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x1C, 0xF3, 0x98, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
+0xCF, 0xF6, 0x9D, 0xA2, 0x2F, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x1C, 0xF3, 0x8C, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
+0xCF, 0xF6, 0x9E, 0xA2, 0x1F, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x1C, 0xF3, 0x98, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
+0xCF, 0xF6, 0x9F, 0xA2, 0x0F, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF4, 0x60, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x1C, 0xF3, 0x8C, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF6, 0x80, 0xA2, 0x00, 0x18, 0x74, 0xC5,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xE0, 0x63, 0x3F, 0x62, 0xFF, 0x6A, 0x01, 0x6B,
+0x8C, 0xEA, 0x6B, 0xEB, 0x9D, 0x67, 0x70, 0xC4,
+0x23, 0x6B, 0x72, 0xC4, 0x20, 0x72, 0x10, 0x6B,
+0x73, 0xC4, 0x0F, 0x60, 0x21, 0x5A, 0x04, 0x60,
+0x12, 0x22, 0x10, 0x72, 0x07, 0x60, 0x11, 0x10,
+0x30, 0x72, 0x09, 0x60, 0x40, 0x72, 0x40, 0x6A,
+0x0A, 0x60, 0x0B, 0x10, 0x9D, 0x67, 0x74, 0xC4,
+0x08, 0x10, 0x20, 0x6A, 0x04, 0x10, 0x30, 0x6A,
+0x9D, 0x67, 0x54, 0xC4, 0x02, 0x10, 0x7D, 0x67,
+0x54, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x3F, 0x97,
+0x20, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x20, 0x74, 0x17, 0x60,
+0x21, 0x5C, 0x04, 0x60, 0x08, 0x24, 0x10, 0x74,
+0x0C, 0x60, 0x27, 0x10, 0x30, 0x74, 0x15, 0x60,
+0x40, 0x74, 0x19, 0x60, 0x22, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3, 0x02, 0x6B,
+0x17, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6,
+0xA1, 0xA3, 0x04, 0x6B, 0x11, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3, 0x08, 0x6B,
+0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF6,
+0xA1, 0xA3, 0x10, 0x6B, 0x05, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xEF, 0xF6, 0xA1, 0xA3, 0x20, 0x6B,
+0xAC, 0xEB, 0x4C, 0xEB, 0x02, 0x23, 0x80, 0x18,
+0x40, 0x08, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x69, 0x4E, 0xF2, 0x4C, 0x99,
+0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF6, 0x01, 0x48,
+0x90, 0x67, 0x00, 0x6D, 0x01, 0x6E, 0x40, 0xEA,
+0x4E, 0xF2, 0x4C, 0x99, 0x81, 0x40, 0x00, 0x6D,
+0x02, 0x6E, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0xA4, 0x67, 0x30, 0xF0,
+0x20, 0x6C, 0xEF, 0xF6, 0x01, 0x4C, 0x01, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0xE0, 0xF1, 0x99, 0xA2, 0x01, 0x6B,
+0x8C, 0xEB, 0x39, 0x23, 0x30, 0xF0, 0x21, 0x6B,
+0xB0, 0xF3, 0x61, 0xA3, 0x0A, 0x2B, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF4, 0x68, 0x9B, 0x80, 0xAB,
+0xE1, 0xF7, 0x1F, 0x6B, 0x8C, 0xEB, 0xE0, 0xF1,
+0x7A, 0xCA, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3,
+0x61, 0xA2, 0x00, 0x6C, 0x01, 0x4B, 0xB0, 0xF3,
+0x61, 0xC2, 0x00, 0x18, 0x72, 0xEC, 0x10, 0x6C,
+0x00, 0x18, 0x72, 0xEC, 0x20, 0x6C, 0x00, 0x18,
+0x72, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x72, 0xEC,
+0x00, 0x6C, 0x00, 0x18, 0x79, 0xEC, 0x10, 0x6C,
+0x00, 0x18, 0x79, 0xEC, 0x20, 0x6C, 0x00, 0x18,
+0x79, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x79, 0xEC,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF4, 0x64, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF4, 0x88, 0x9C,
+0x40, 0x9B, 0x8C, 0xEA, 0x42, 0x10, 0xE0, 0xF1,
+0x5C, 0xA2, 0x0A, 0x2A, 0x10, 0x6C, 0x00, 0x18,
+0x98, 0xEC, 0x20, 0x6C, 0x00, 0x18, 0x98, 0xEC,
+0x30, 0x6C, 0x00, 0x18, 0x98, 0xEC, 0x0F, 0x10,
+0x00, 0x6C, 0x00, 0x18, 0x98, 0xEC, 0x10, 0x6C,
+0x00, 0x18, 0x98, 0xEC, 0x20, 0x6C, 0x00, 0x18,
+0x98, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x98, 0xEC,
+0x00, 0x6C, 0x00, 0x18, 0x9F, 0xEC, 0x10, 0x6C,
+0x00, 0x18, 0x9F, 0xEC, 0x20, 0x6C, 0x00, 0x18,
+0x9F, 0xEC, 0x30, 0x6C, 0x00, 0x18, 0x9F, 0xEC,
+0x00, 0x6B, 0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF3,
+0x61, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
+0x24, 0x6B, 0xEF, 0xF6, 0x42, 0xAA, 0x1C, 0xF4,
+0x68, 0x9B, 0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF4,
+0x8C, 0x9C, 0x40, 0xCB, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF4, 0x7C, 0x9B, 0x40, 0xCB, 0x10, 0xF0,
+0x24, 0x6A, 0x3C, 0xF4, 0x64, 0x9A, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x15, 0xF0, 0xFF, 0x0F,
+0x00, 0x00, 0x00, 0x00, 0x15, 0xF0, 0x0F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x05, 0xF0, 0xFF, 0x0F,
+0x00, 0x00, 0x00, 0x00, 0x05, 0xF0, 0x0F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x10, 0xF0, 0xFF, 0x0F,
+0x00, 0x00, 0x00, 0x00, 0x10, 0xF0, 0x0F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0xF5, 0x0F, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF,
+0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x3F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x15, 0xF0, 0x3F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x15, 0xF0, 0xFF, 0xFF,
+0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF,
+0xFF, 0x03, 0x00, 0x00, 0x15, 0xF0, 0xFF, 0xFF,
+0x0F, 0x00, 0x00, 0x00, 0xFA, 0x63, 0x0B, 0xD1,
+0x0A, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF4,
+0x48, 0x9A, 0xE1, 0xF7, 0x1F, 0x6B, 0x10, 0xF0,
+0x30, 0x6D, 0x40, 0xAA, 0x00, 0xF0, 0x00, 0x4D,
+0x0F, 0x68, 0x4C, 0xEB, 0x02, 0xD3, 0x60, 0xA4,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x7C, 0xCA, 0x61, 0xA4, 0x10, 0xF0,
+0x30, 0x6F, 0x42, 0xF0, 0x10, 0x4F, 0x28, 0xF3,
+0x7A, 0xCA, 0x62, 0xA4, 0x48, 0xF3, 0x78, 0xCA,
+0x63, 0xA4, 0xC1, 0xF7, 0xCE, 0xA5, 0x01, 0x6A,
+0x6C, 0xEA, 0x7F, 0x6B, 0x5C, 0x32, 0xCC, 0xEB,
+0x4D, 0xEB, 0xC1, 0xF7, 0x6E, 0xC5, 0xC3, 0xA4,
+0x10, 0x6A, 0x4B, 0xEA, 0xD2, 0x36, 0x6C, 0xEA,
+0xCD, 0xEA, 0x4C, 0xE8, 0xC1, 0xF7, 0x4E, 0xC5,
+0x00, 0x6E, 0x03, 0xD0, 0x6F, 0x10, 0xCD, 0xE4,
+0xA4, 0xA3, 0x02, 0x91, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF4, 0x64, 0x9B, 0x35, 0xE5, 0xA0, 0xCB,
+0xBC, 0x35, 0x10, 0x2A, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF6, 0x60, 0x9B, 0x6D, 0xE5, 0x60, 0xA3,
+0x01, 0x4D, 0x60, 0xC7, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF6, 0x60, 0x9B, 0x08, 0xD2, 0x75, 0xE5,
+0x00, 0x6B, 0x46, 0x10, 0x01, 0x72, 0xF6, 0x61,
+0x40, 0x4D, 0xF4, 0x17, 0x40, 0xA5, 0x08, 0x91,
+0x10, 0xF0, 0x30, 0x68, 0x1A, 0x65, 0x0C, 0x6A,
+0x58, 0xE9, 0x7C, 0x6A, 0x00, 0xF0, 0x00, 0x48,
+0x12, 0xE9, 0x04, 0xD1, 0x58, 0xEE, 0x04, 0x92,
+0x12, 0xE9, 0x29, 0xE2, 0x05, 0xE2, 0x06, 0xD2,
+0x65, 0xE1, 0x58, 0x67, 0x22, 0xF0, 0x58, 0xC1,
+0x21, 0x45, 0x20, 0xA1, 0x5D, 0x67, 0x20, 0xC2,
+0x22, 0x45, 0x20, 0xA1, 0x21, 0xC2, 0x23, 0x45,
+0x20, 0xA1, 0x22, 0xC2, 0x24, 0xA5, 0x05, 0x4D,
+0x23, 0xC2, 0x1F, 0x69, 0x38, 0xEE, 0x04, 0x91,
+0x12, 0xEA, 0x29, 0xE2, 0x65, 0xE2, 0xE0, 0xF3,
+0x16, 0x49, 0x28, 0x31, 0x05, 0xE1, 0x5D, 0x67,
+0x19, 0x65, 0x22, 0xA2, 0x03, 0xA2, 0x40, 0xA2,
+0x20, 0x31, 0x20, 0x31, 0x00, 0xF6, 0x00, 0x30,
+0x2D, 0xE8, 0x3D, 0x67, 0x21, 0xA1, 0x4D, 0xE8,
+0x58, 0x67, 0x04, 0xD1, 0x20, 0x31, 0x2D, 0xE8,
+0x00, 0xDA, 0x01, 0x4B, 0xFF, 0x68, 0x0C, 0xEB,
+0x00, 0xA7, 0x03, 0xEB, 0xBB, 0x61, 0x08, 0x92,
+0xFF, 0x6B, 0x01, 0x4A, 0x6C, 0xEA, 0x03, 0x93,
+0x62, 0xEA, 0x95, 0x61, 0x01, 0x4E, 0x02, 0x76,
+0x7C, 0x4F, 0x02, 0x60, 0x00, 0x6A, 0xF7, 0x17,
+0x0B, 0x91, 0x0A, 0x90, 0x06, 0x63, 0x20, 0xE8,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x60, 0xA4, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x0F, 0x6A, 0x4C, 0xEB, 0x08, 0xF3,
+0x52, 0xA0, 0x24, 0x67, 0x0F, 0x6C, 0x70, 0x33,
+0x8C, 0xEA, 0x6D, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x08, 0xF3, 0x52, 0xC0, 0xEE, 0xF5, 0x50, 0x9B,
+0x09, 0x6C, 0x40, 0xEA, 0x60, 0xA1, 0x08, 0xF3,
+0x52, 0xA0, 0x0F, 0x6C, 0x72, 0x33, 0x70, 0x33,
+0x8C, 0xEA, 0x6D, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x08, 0xF3, 0x52, 0xC0, 0xEE, 0xF5, 0x50, 0x9B,
+0x09, 0x6C, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x08, 0xF3, 0x7A, 0xC2, 0x61, 0xA4,
+0x08, 0xF3, 0x7B, 0xC2, 0x62, 0xA4, 0x28, 0xF3,
+0x78, 0xC2, 0x63, 0xA4, 0x28, 0xF3, 0x79, 0xC2,
+0x64, 0xA4, 0x48, 0xF3, 0x76, 0xC2, 0x65, 0xA4,
+0x48, 0xF3, 0x77, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x45, 0xA4, 0x01, 0x69, 0x04, 0x67, 0x2C, 0xEA,
+0x3A, 0x22, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0xC1, 0xF7, 0x69, 0xA2, 0x2D, 0xEB,
+0xC1, 0xF7, 0x69, 0xC2, 0x81, 0xA4, 0xE0, 0xF3,
+0x08, 0x6B, 0x80, 0x34, 0x88, 0x34, 0x7A, 0xEC,
+0x01, 0x2B, 0xE5, 0xE8, 0x12, 0xEB, 0xC1, 0xF7,
+0x6A, 0xC2, 0x65, 0xA0, 0x66, 0x33, 0xC1, 0xF7,
+0x6B, 0xC2, 0x82, 0xA0, 0x6F, 0xE4, 0xC1, 0xF7,
+0x6C, 0xC2, 0x62, 0xA0, 0xC1, 0xF7, 0x6D, 0xC2,
+0xC1, 0xF7, 0x6D, 0xA2, 0x64, 0x73, 0x06, 0x60,
+0x96, 0x73, 0x04, 0x61, 0x03, 0x6B, 0xC1, 0xF7,
+0x6D, 0xC2, 0x02, 0x10, 0xC1, 0xF7, 0x2D, 0xC2,
+0x30, 0xF0, 0x20, 0x6B, 0x80, 0xA0, 0xC0, 0xF1,
+0x08, 0x4B, 0x68, 0xF3, 0xB0, 0xA3, 0x86, 0x34,
+0x01, 0x6A, 0x84, 0x34, 0xAC, 0xEA, 0x8D, 0xEA,
+0x68, 0xF3, 0x50, 0xC3, 0x3A, 0x10, 0x10, 0xF0,
+0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7,
+0x89, 0xA2, 0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0xC1, 0xF7, 0x69, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0x28, 0xF5, 0x18, 0x4C, 0xB0, 0x67, 0x04, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x68, 0xF3, 0x91, 0xA2, 0xE0, 0xF3,
+0x08, 0x6B, 0x80, 0x34, 0x88, 0x34, 0x7A, 0xEC,
+0x01, 0x2B, 0xE5, 0xE8, 0x12, 0xEB, 0x68, 0xF3,
+0x71, 0xC2, 0x68, 0xF3, 0x72, 0xA2, 0x64, 0x73,
+0x06, 0x60, 0x96, 0x73, 0x04, 0x61, 0x03, 0x6B,
+0x68, 0xF3, 0x72, 0xC2, 0x02, 0x10, 0x68, 0xF3,
+0x32, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x68, 0xF3, 0x72, 0xA2, 0x08, 0xF3,
+0x73, 0xC2, 0x10, 0xF0, 0x30, 0x6B, 0x00, 0xF0,
+0x00, 0x4B, 0xA4, 0xA0, 0xC1, 0xF7, 0xC8, 0xA3,
+0x10, 0x6A, 0x0F, 0x6C, 0x4B, 0xEA, 0x8C, 0xED,
+0xCC, 0xEA, 0xAD, 0xEA, 0xC1, 0xF7, 0x48, 0xC3,
+0xA4, 0xA0, 0x8C, 0xEA, 0xB2, 0x35, 0xB0, 0x35,
+0xAD, 0xEA, 0xC1, 0xF7, 0x48, 0xC3, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x40, 0xA4, 0x10, 0x69, 0x04, 0x67, 0x2B, 0xE9,
+0x0F, 0x6C, 0x4C, 0xEC, 0xFF, 0x6D, 0x2C, 0xEA,
+0xFF, 0x6B, 0xAC, 0xEA, 0x8C, 0xEB, 0xF0, 0x72,
+0x04, 0xD3, 0x2C, 0x61, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF3, 0xB0, 0xA3,
+0x02, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA, 0x1F, 0x6D,
+0xAB, 0xED, 0x84, 0x34, 0xAC, 0xEA, 0x8D, 0xEA,
+0x08, 0xF3, 0x50, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF5, 0x4C, 0x9A, 0x04, 0x94, 0x40, 0xEA,
+0x01, 0x72, 0x0D, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF5, 0x48, 0x9A, 0x00, 0x6C, 0xA4, 0x67,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
+0x50, 0x9A, 0x02, 0x6C, 0x05, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x50, 0x9A, 0x04, 0x6C,
+0x40, 0xEA, 0xC9, 0x10, 0x04, 0x92, 0x1E, 0x6C,
+0x30, 0xF0, 0x20, 0x6B, 0x98, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0xC8, 0xF4,
+0x1E, 0x4B, 0xA1, 0x40, 0x04, 0x6E, 0x12, 0xEC,
+0x91, 0xE3, 0x40, 0xEA, 0x04, 0x92, 0x85, 0xA0,
+0x10, 0xF0, 0x30, 0x6B, 0xE0, 0xF7, 0x08, 0x4A,
+0x00, 0xF0, 0x00, 0x4B, 0x44, 0x32, 0x69, 0xE2,
+0x0F, 0x6B, 0x6C, 0xEC, 0x62, 0xA2, 0xFF, 0x6D,
+0x2C, 0xEB, 0x8D, 0xEB, 0x62, 0xC2, 0x85, 0xA0,
+0x63, 0xA2, 0x92, 0x34, 0x2C, 0xEB, 0x8D, 0xEB,
+0x0F, 0x6C, 0x6C, 0xEC, 0xAC, 0xEC, 0x63, 0xC2,
+0x04, 0x2C, 0x6C, 0xE9, 0x02, 0x6B, 0x6D, 0xE9,
+0x23, 0xC2, 0x04, 0x94, 0x1E, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0x78, 0xEC, 0xC0, 0xF1, 0x08, 0x4A,
+0xE0, 0xF3, 0x08, 0x6C, 0xFF, 0x6E, 0x12, 0xEB,
+0x4D, 0xE3, 0x08, 0xF3, 0xB8, 0xA3, 0xA0, 0x35,
+0xA8, 0x35, 0x9A, 0xED, 0x01, 0x2C, 0xE5, 0xE8,
+0x12, 0xEC, 0x08, 0xF3, 0x98, 0xC3, 0x60, 0xA0,
+0x04, 0x94, 0x72, 0x33, 0xFF, 0x4B, 0x8E, 0xEB,
+0x7E, 0x2B, 0x68, 0xF3, 0x74, 0xA2, 0x7F, 0x6F,
+0xEC, 0xEB, 0xCC, 0xEB, 0x06, 0x2B, 0x08, 0xF3,
+0x6A, 0xA2, 0x01, 0x6D, 0xAC, 0xEB, 0xCC, 0xEB,
+0x07, 0x23, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
+0x50, 0x9A, 0x05, 0x6C, 0x40, 0xEA, 0x83, 0x10,
+0x08, 0xF3, 0x70, 0xA2, 0x1F, 0x6C, 0x8B, 0xEC,
+0x6C, 0xEC, 0x08, 0xF3, 0x90, 0xC2, 0x20, 0xA0,
+0x10, 0x6B, 0x6B, 0xEB, 0x32, 0x31, 0xF9, 0x65,
+0x08, 0xF3, 0x32, 0xA2, 0x19, 0x65, 0x38, 0x67,
+0x2C, 0xEB, 0x3F, 0x67, 0x2D, 0xEB, 0x08, 0xF3,
+0x72, 0xC2, 0x04, 0xA0, 0x61, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0x3C, 0xF3,
+0x98, 0x9C, 0x1A, 0x30, 0x14, 0x30, 0x0D, 0xEB,
+0x02, 0x68, 0x00, 0xC4, 0x68, 0xF3, 0x90, 0xA2,
+0xAC, 0xEC, 0xCC, 0xEC, 0x0A, 0x24, 0xEC, 0xEB,
+0x08, 0xF3, 0x91, 0xA2, 0x08, 0xF3, 0x70, 0xC2,
+0x20, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xAD, 0xEB,
+0x0A, 0x10, 0x80, 0x6C, 0x8B, 0xEC, 0x6D, 0xEC,
+0x08, 0xF3, 0x90, 0xC2, 0x08, 0xF3, 0x91, 0xA2,
+0x20, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x08, 0xF3,
+0x71, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x08, 0xF3, 0x90, 0xA2, 0x01, 0x6B,
+0x10, 0xF0, 0x30, 0x68, 0x8D, 0xEB, 0x08, 0xF3,
+0x70, 0xC2, 0x00, 0x6B, 0x00, 0xF0, 0x00, 0x48,
+0x08, 0xF3, 0x74, 0xC2, 0xC1, 0xF7, 0x6F, 0xA0,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xC1, 0xF7,
+0x4F, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
+0x50, 0x9A, 0x03, 0x6C, 0x0F, 0x69, 0x40, 0xEA,
+0xC1, 0xF7, 0x92, 0xA0, 0x2C, 0xEC, 0x00, 0x18,
+0x72, 0xEC, 0xC1, 0xF7, 0x92, 0xA0, 0x2C, 0xEC,
+0x00, 0x18, 0x40, 0xEC, 0xC1, 0xF7, 0x94, 0xA0,
+0x2C, 0xEC, 0x00, 0x18, 0x40, 0xEC, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF6, 0x80, 0x9A, 0x00, 0x18,
+0xE9, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6,
+0x9C, 0x9A, 0x00, 0x18, 0xE9, 0xE9, 0x30, 0xF0,
+0x20, 0x6A, 0x0E, 0xF6, 0x98, 0x9A, 0x00, 0x18,
+0xE9, 0xE9, 0x10, 0xF0, 0x30, 0x6C, 0xE6, 0xF1,
+0x11, 0x4C, 0x00, 0x18, 0xE9, 0xE9, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0xFF, 0x68, 0x5C, 0xF3,
+0x4C, 0x9A, 0x0C, 0xEC, 0x04, 0xD4, 0x40, 0xA2,
+0x30, 0xF0, 0x20, 0x69, 0x90, 0x67, 0x62, 0x67,
+0x6E, 0xF2, 0x58, 0x99, 0x0C, 0xEB, 0x05, 0xD3,
+0xB0, 0x67, 0x17, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA,
+0x01, 0x72, 0x4A, 0x61, 0x04, 0x93, 0x1E, 0x69,
+0x30, 0xF0, 0x20, 0x6A, 0x38, 0xEB, 0xC0, 0xF1,
+0x08, 0x4A, 0x0F, 0x6D, 0x12, 0xE9, 0x45, 0xE1,
+0x08, 0xF3, 0x57, 0xA1, 0x08, 0xF3, 0x96, 0xA1,
+0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x54, 0x9A, 0x0C, 0xED, 0x0C, 0xEE,
+0x40, 0xEA, 0x08, 0xF3, 0x79, 0xA1, 0x01, 0x6C,
+0x76, 0x32, 0x8C, 0xEA, 0x0C, 0xEA, 0x23, 0x2A,
+0x07, 0x6A, 0x6C, 0xEA, 0x0C, 0xEA, 0x02, 0x22,
+0x02, 0x72, 0x1D, 0x61, 0x04, 0x93, 0x1E, 0x6C,
+0x30, 0xF0, 0x20, 0x6A, 0x98, 0xEB, 0xC0, 0xF1,
+0x08, 0x4A, 0xE0, 0xF7, 0x08, 0x4B, 0x64, 0x33,
+0x0F, 0x6F, 0x00, 0x6D, 0xFF, 0x6E, 0x12, 0xEC,
+0x51, 0xE4, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0x49, 0xE3, 0x62, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0x2E, 0xF4, 0x50, 0x9A, 0x08, 0xF3,
+0x9C, 0xAC, 0x6C, 0xEF, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x48, 0x9A, 0x04, 0x95,
+0x01, 0x6C, 0x40, 0xEA, 0x01, 0x6A, 0x07, 0x10,
+0x6E, 0xF2, 0x58, 0x99, 0x05, 0x95, 0x00, 0x6C,
+0x4B, 0x6E, 0x40, 0xEA, 0x00, 0x6A, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6C,
+0xC0, 0xF1, 0x08, 0x4C, 0x08, 0xF3, 0x50, 0xA4,
+0x0F, 0x6B, 0x1E, 0x6D, 0x46, 0x32, 0x6C, 0xEA,
+0xB8, 0xEA, 0xE0, 0xF7, 0x08, 0x4A, 0x44, 0x32,
+0xFF, 0x6E, 0x12, 0xED, 0x91, 0xE5, 0x10, 0xF0,
+0x30, 0x6D, 0x00, 0xF0, 0x00, 0x4D, 0xB5, 0xE2,
+0xE2, 0xA5, 0x30, 0xF0, 0x20, 0x6A, 0x08, 0xF3,
+0x9C, 0xAC, 0x2E, 0xF4, 0x50, 0x9A, 0x6C, 0xEF,
+0x00, 0x6D, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6C,
+0xC0, 0xF1, 0x08, 0x4C, 0x08, 0xF3, 0xB0, 0xA4,
+0x01, 0x6B, 0x0F, 0x6F, 0xA6, 0x30, 0xAC, 0xEB,
+0xEC, 0xE8, 0xFF, 0x6A, 0x60, 0x23, 0x1E, 0x69,
+0x38, 0xE8, 0x07, 0x6D, 0x12, 0xEB, 0x8D, 0xE3,
+0x08, 0xF3, 0xD9, 0xA3, 0xCC, 0xED, 0x08, 0xF3,
+0xD4, 0xA4, 0x4C, 0xED, 0x02, 0x76, 0x06, 0x60,
+0x03, 0x6A, 0xCE, 0xEA, 0x4E, 0x22, 0x01, 0x76,
+0x46, 0x60, 0x4D, 0x10, 0x01, 0x75, 0x04, 0x60,
+0x2E, 0x25, 0x04, 0x5D, 0x48, 0x60, 0x2B, 0x10,
+0x08, 0xF3, 0xD2, 0xA4, 0xA1, 0x40, 0x4C, 0xED,
+0xCC, 0xEF, 0xAE, 0xEF, 0xEB, 0xEE, 0xED, 0xEE,
+0xC0, 0xF7, 0xC3, 0x36, 0xCC, 0xED, 0x38, 0xED,
+0x12, 0xE9, 0x85, 0xE1, 0x08, 0xF3, 0x98, 0xA1,
+0x20, 0x5C, 0x0A, 0x61, 0x08, 0xF3, 0x9C, 0xAB,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x78, 0x9B,
+0x4C, 0xEC, 0x0F, 0xF4, 0x00, 0x6D, 0x0E, 0x10,
+0x08, 0xF3, 0xB8, 0xA1, 0x08, 0xF3, 0x9C, 0xAB,
+0x30, 0xF0, 0x20, 0x6B, 0xA0, 0x35, 0x2E, 0xF4,
+0x78, 0x9B, 0xA8, 0x35, 0x4C, 0xEC, 0xFF, 0xF7,
+0x1F, 0x6A, 0x4C, 0xED, 0x40, 0xEB, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x48, 0x9A, 0x02, 0x6C,
+0xB0, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x0E, 0xF6, 0x48, 0x9A, 0x40, 0xEA, 0x0F, 0x2A,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x50, 0x9A,
+0x06, 0x6C, 0x40, 0xEA, 0x08, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x0E, 0xF6, 0x50, 0x9A, 0x40, 0xEA,
+0x02, 0x10, 0x08, 0xF3, 0x54, 0xC4, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x08, 0xF3, 0x70, 0xA0, 0x01, 0x6A, 0x6C, 0xEA,
+0x39, 0x22, 0x10, 0xF0, 0x30, 0x69, 0x00, 0xF0,
+0x00, 0x49, 0xC1, 0xF7, 0x6E, 0xA1, 0x07, 0x6C,
+0x72, 0x32, 0x8C, 0xEA, 0x01, 0x4A, 0x8C, 0xEA,
+0x50, 0x34, 0x71, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x8D, 0xEA, 0xC1, 0xF7, 0x4E, 0xC1, 0x30, 0xF0,
+0x20, 0x6A, 0x0E, 0xF6, 0x54, 0x9A, 0x40, 0xEA,
+0x08, 0xF3, 0x50, 0xA0, 0x0F, 0x6B, 0xFF, 0x6C,
+0x46, 0x32, 0x6C, 0xEA, 0x8C, 0xEA, 0xC1, 0xF7,
+0x8E, 0xA1, 0x07, 0x6D, 0x92, 0x34, 0xAC, 0xEC,
+0x68, 0xF3, 0xB2, 0xA0, 0x82, 0xED, 0x12, 0x61,
+0x1E, 0x6C, 0x98, 0xEA, 0xE0, 0xF7, 0x08, 0x4A,
+0x44, 0x32, 0x25, 0xE2, 0x43, 0xA1, 0x4C, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x54, 0x9A,
+0x12, 0xEC, 0x01, 0xE4, 0x08, 0xF3, 0x98, 0xA0,
+0x73, 0xE4, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x90, 0xA2, 0x0F, 0x6D, 0x86, 0x33,
+0x9E, 0x34, 0xAC, 0xEB, 0x80, 0xF0, 0x1D, 0x24,
+0x08, 0xF3, 0x93, 0xA2, 0x01, 0x4C, 0x08, 0xF3,
+0x93, 0xC2, 0x08, 0xF3, 0xB3, 0xA2, 0x68, 0xF3,
+0x92, 0xA2, 0x83, 0xED, 0x80, 0xF0, 0x11, 0x61,
+0x1E, 0x6C, 0x98, 0xEB, 0x01, 0x6C, 0x12, 0xEB,
+0x4D, 0xE3, 0x08, 0xF3, 0x79, 0xA3, 0x6E, 0x33,
+0x8C, 0xEB, 0x07, 0x23, 0x08, 0xF3, 0x74, 0xA2,
+0x03, 0x6C, 0x8E, 0xEB, 0x02, 0x2B, 0x08, 0xF3,
+0x74, 0xC2, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0xC1, 0xF7, 0x89, 0xA2, 0x01, 0x6B,
+0x8C, 0xEB, 0x19, 0x23, 0x02, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0xC1, 0xF7, 0x8A, 0xA2, 0xC1, 0xF7,
+0x69, 0xC2, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x68, 0xF3, 0x91, 0xC3, 0xC1, 0xF7,
+0x8D, 0xA2, 0x68, 0xF3, 0x92, 0xC3, 0xC1, 0xF7,
+0x8B, 0xA2, 0x08, 0xF3, 0x98, 0xC3, 0xC1, 0xF7,
+0x4C, 0xA2, 0x28, 0xF3, 0x56, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3,
+0xB0, 0xA2, 0x1E, 0x6B, 0xAC, 0xEB, 0x30, 0x23,
+0x08, 0xF3, 0x72, 0xA2, 0x0F, 0x6C, 0x8C, 0xEB,
+0xFF, 0x4B, 0x8C, 0xEB, 0x64, 0x36, 0x1F, 0x6B,
+0x6B, 0xEB, 0xAC, 0xEB, 0xCD, 0xEB, 0x08, 0xF3,
+0x70, 0xC2, 0x08, 0xF3, 0xB0, 0xA2, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x48, 0x9A, 0xA6, 0x35,
+0x8C, 0xED, 0xFF, 0x6B, 0x02, 0x6C, 0x6C, 0xED,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6,
+0x48, 0x9A, 0x40, 0xEA, 0x06, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x50, 0x9A, 0x06, 0x6C,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x08, 0xF3, 0x90, 0xA2, 0x1F, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0x08, 0xF3, 0x70, 0xC2,
+0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49,
+0x08, 0xF3, 0x50, 0xA1, 0x0F, 0x6B, 0x10, 0xF0,
+0x30, 0x68, 0x46, 0x32, 0x6C, 0xEA, 0xE0, 0xF7,
+0x08, 0x4A, 0x00, 0xF0, 0x00, 0x48, 0x44, 0x32,
+0x09, 0xE2, 0x43, 0xA2, 0x68, 0xF3, 0x91, 0xA1,
+0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
+0x54, 0x9A, 0x73, 0xE4, 0x40, 0xEA, 0x00, 0x6A,
+0x08, 0xF3, 0x53, 0xC1, 0xC1, 0xF7, 0x6E, 0xA0,
+0x71, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xC1, 0xF7,
+0x4E, 0xC0, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0x20, 0xE8, 0x00, 0x65,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x61, 0xA4, 0x04, 0x67,
+0xAE, 0xF2, 0x54, 0x9A, 0x80, 0xA4, 0x0F, 0x6D,
+0x6C, 0xED, 0x72, 0x36, 0x40, 0xEA, 0x10, 0xF0,
+0x30, 0x6A, 0xC1, 0xF7, 0x6E, 0xA2, 0x80, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x00, 0x6B, 0x08, 0xD3, 0x28, 0x2A, 0x32, 0x10,
+0x08, 0x94, 0x0C, 0x6A, 0x08, 0x96, 0x58, 0xEC,
+0x30, 0xF0, 0x20, 0x6C, 0x25, 0xF6, 0x08, 0x4C,
+0x12, 0xEA, 0x35, 0xE2, 0xE0, 0xF3, 0x16, 0x4D,
+0x69, 0xE2, 0xA8, 0x35, 0x29, 0xE2, 0x75, 0xE5,
+0xA0, 0x9D, 0x22, 0xF0, 0xF8, 0xA2, 0x01, 0x49,
+0x80, 0x18, 0xCF, 0x26, 0xFF, 0x6A, 0x4C, 0xE9,
+0x10, 0xF0, 0x30, 0x6B, 0x00, 0xF0, 0x00, 0x4B,
+0x42, 0xF0, 0x50, 0xA3, 0x43, 0xE9, 0xE0, 0x61,
+0x08, 0x92, 0x01, 0x4A, 0x08, 0xD2, 0x08, 0x93,
+0xFF, 0x6A, 0x4C, 0xEB, 0x08, 0xD3, 0x10, 0xF0,
+0x30, 0x6A, 0xC1, 0xF7, 0x6E, 0xA2, 0x08, 0x94,
+0x0F, 0x6A, 0x6C, 0xEA, 0x42, 0xEC, 0x02, 0x60,
+0x00, 0x69, 0xE6, 0x17, 0x62, 0xA0, 0x02, 0x6A,
+0x6C, 0xEA, 0x06, 0x22, 0x80, 0x18, 0x1A, 0x13,
+0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xC0, 0xD5,
+0x7D, 0x67, 0x10, 0x6A, 0x50, 0xC3, 0x07, 0x6A,
+0x4F, 0xCB, 0x40, 0xA0, 0x9D, 0x67, 0x52, 0xC3,
+0x42, 0xA0, 0x01, 0x6B, 0x46, 0x32, 0x6C, 0xEA,
+0x73, 0xA4, 0x6D, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xE8, 0xF2, 0x75, 0xA3, 0x64, 0x33, 0x4D, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A,
+0x73, 0xC4, 0x04, 0x04, 0x40, 0xEA, 0x0D, 0x97,
+0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0x1A, 0x13,
+0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xC0, 0xD5,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x68, 0xF3, 0x90, 0xA3,
+0x01, 0x6A, 0xFF, 0x6E, 0x8C, 0xEA, 0x1D, 0x22,
+0x08, 0xF3, 0xF1, 0xA3, 0x1F, 0x6C, 0xA7, 0x67,
+0x8C, 0xED, 0x45, 0x67, 0xCC, 0xEA, 0x15, 0x22,
+0x20, 0x6A, 0x1F, 0x4D, 0x4B, 0xEA, 0x8C, 0xED,
+0xEC, 0xEA, 0xAD, 0xEA, 0x08, 0xF3, 0x51, 0xC3,
+0x8C, 0xEA, 0xCC, 0xEA, 0x0A, 0x2A, 0x30, 0xF0,
+0x20, 0x6B, 0x2E, 0xF6, 0x80, 0x9B, 0x00, 0x6D,
+0x14, 0x6E, 0x01, 0x6F, 0x04, 0xD2, 0x00, 0x18,
+0xFC, 0xE9, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x30, 0x6B,
+0x00, 0xF0, 0x00, 0x4B, 0xC1, 0xF7, 0xCF, 0xA3,
+0x01, 0x6F, 0xFF, 0x6A, 0xEC, 0xEE, 0x4C, 0xEE,
+0x4C, 0xEC, 0x14, 0x2E, 0xC1, 0xF7, 0x72, 0xA3,
+0x0F, 0x6D, 0x6C, 0xED, 0x8E, 0xED, 0x0E, 0x2D,
+0x30, 0xF0, 0x20, 0x6B, 0xC8, 0xF4, 0x78, 0xA3,
+0xEC, 0xEB, 0x4C, 0xEB, 0x07, 0x23, 0x30, 0xF0,
+0x20, 0x6A, 0x0E, 0xF6, 0x5C, 0x9A, 0x40, 0xEA,
+0x80, 0x18, 0x8C, 0x0B, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x00, 0x6B,
+0x40, 0xF1, 0x14, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x08, 0xF3, 0xB0, 0xA2,
+0x0F, 0x6C, 0xFF, 0x6F, 0xA6, 0x33, 0x8C, 0xEB,
+0xC3, 0x67, 0xEC, 0xEE, 0x07, 0xD6, 0x01, 0x4B,
+0x1F, 0x6E, 0x8C, 0xEB, 0xCB, 0xEE, 0x64, 0x33,
+0xCC, 0xED, 0x6D, 0xED, 0x08, 0xF3, 0xB0, 0xC2,
+0x08, 0xF3, 0xB0, 0xA2, 0x08, 0xF3, 0x72, 0xA2,
+0xA6, 0x30, 0x0E, 0xEB, 0x8C, 0xEB, 0xEC, 0xEB,
+0x04, 0x2B, 0x66, 0x67, 0xAC, 0xEB, 0x08, 0xF3,
+0x70, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x08, 0xF3, 0x10, 0xA2, 0x0F, 0x6B,
+0x06, 0x30, 0x6C, 0xE8, 0x1E, 0x6B, 0x78, 0xE8,
+0x12, 0xEC, 0x51, 0xE4, 0x08, 0xF3, 0x96, 0xA4,
+0x0F, 0x5C, 0x08, 0x60, 0x07, 0x94, 0x78, 0xEC,
+0x12, 0xEB, 0x49, 0xE3, 0x08, 0xF3, 0x56, 0xA2,
+0x0F, 0x5A, 0x14, 0x61, 0x1E, 0x6B, 0x78, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x12, 0xEC, 0x51, 0xE4, 0x08, 0xF3, 0x96, 0xA4,
+0x24, 0x5C, 0x12, 0x61, 0x07, 0x94, 0x78, 0xEC,
+0x12, 0xEB, 0x49, 0xE3, 0x08, 0xF3, 0x56, 0xA2,
+0x24, 0x5A, 0x0A, 0x61, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7, 0x91, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0x08, 0x10,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0xC1, 0xF7, 0x91, 0xA2, 0x01, 0x6B, 0x8D, 0xEB,
+0x1E, 0x6C, 0x98, 0xE8, 0xC1, 0xF7, 0x71, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x0F, 0x6D, 0x12, 0xEC, 0x51, 0xE4, 0x08, 0xF3,
+0x77, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0x08, 0xF3,
+0x96, 0xA4, 0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED,
+0x72, 0x36, 0x40, 0xEA, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7, 0x91, 0xA2,
+0x02, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xC1, 0xF7,
+0x71, 0xC2, 0xC1, 0xF7, 0x6E, 0xA2, 0x80, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x00, 0x6B, 0x06, 0xD3, 0x30, 0x2A, 0x3A, 0x10,
+0x1F, 0x6D, 0xB8, 0xE8, 0x06, 0x96, 0x0C, 0x6A,
+0x12, 0xED, 0x58, 0xEE, 0x12, 0xEA, 0x55, 0xE5,
+0x35, 0xE5, 0x89, 0xE2, 0xE0, 0xF3, 0x16, 0x4D,
+0x69, 0xE2, 0xA8, 0x35, 0x29, 0xE2, 0x75, 0xE5,
+0xA0, 0x9D, 0x22, 0xF0, 0xF8, 0xA2, 0x30, 0xF0,
+0x20, 0x6C, 0x25, 0xF6, 0x08, 0x4C, 0x80, 0x18,
+0xCF, 0x26, 0x01, 0x49, 0xFF, 0x6A, 0x4C, 0xE9,
+0x7C, 0x6C, 0x98, 0xE8, 0x10, 0xF0, 0x30, 0x6B,
+0x00, 0xF0, 0x00, 0x4B, 0x12, 0xEC, 0x69, 0xE4,
+0x42, 0xF0, 0x50, 0xA2, 0x43, 0xE9, 0xD8, 0x61,
+0x06, 0x92, 0x01, 0x4A, 0x06, 0xD2, 0x06, 0x93,
+0xFF, 0x6A, 0x4C, 0xEB, 0x06, 0xD3, 0x10, 0xF0,
+0x30, 0x6A, 0xC1, 0xF7, 0x6E, 0xA2, 0x06, 0x94,
+0x0F, 0x6A, 0x6C, 0xEA, 0x42, 0xEC, 0x02, 0x60,
+0x00, 0x69, 0xE2, 0x17, 0x30, 0xF0, 0x20, 0x6A,
+0x0E, 0xF6, 0x44, 0x9A, 0x90, 0x67, 0x1E, 0x69,
+0x40, 0xEA, 0x07, 0x93, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x38, 0xEB, 0x02, 0x6B,
+0x6B, 0xEB, 0x12, 0xEC, 0x51, 0xE4, 0x08, 0xF3,
+0xBE, 0xA4, 0x38, 0xE8, 0xAC, 0xEB, 0x08, 0xF3,
+0x7E, 0xC4, 0xFF, 0x6B, 0x12, 0xE9, 0x45, 0xE1,
+0x08, 0xF3, 0xB9, 0xA1, 0x01, 0x6A, 0xB6, 0x34,
+0x4C, 0xEC, 0x57, 0x2C, 0x10, 0xF0, 0x30, 0x6C,
+0x00, 0xF0, 0x00, 0x4C, 0xC1, 0xF7, 0xCF, 0xA4,
+0x4C, 0xEE, 0x6C, 0xEE, 0x2C, 0x26, 0x07, 0x6A,
+0xAC, 0xEA, 0x6C, 0xEA, 0x10, 0x2A, 0xE0, 0xF7,
+0x48, 0x40, 0x44, 0x32, 0x91, 0xE2, 0x42, 0xA4,
+0x0F, 0x6F, 0x08, 0xF3, 0x9C, 0xA9, 0x4C, 0xEF,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4, 0x50, 0x9A,
+0x00, 0x6D, 0xC3, 0x67, 0x38, 0x10, 0x02, 0x6B,
+0x6E, 0xEA, 0x37, 0x2A, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0xA0, 0xF6, 0xC0, 0x9B,
+0x80, 0xF6, 0x7C, 0x9B, 0x10, 0xF0, 0x30, 0x6C,
+0xE5, 0xF1, 0x11, 0x4C, 0x7B, 0xE6, 0xC2, 0x36,
+0x00, 0x6D, 0xCE, 0x36, 0x01, 0x6F, 0x04, 0xD2,
+0x00, 0x18, 0xFC, 0xE9, 0x22, 0x10, 0x07, 0x6A,
+0xAC, 0xEA, 0x6C, 0xEA, 0x02, 0x22, 0x02, 0x72,
+0x1C, 0x61, 0x1E, 0x6C, 0x98, 0xE8, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE0, 0xF7,
+0x68, 0x40, 0x64, 0x33, 0x00, 0x6D, 0xFF, 0x6E,
+0x0F, 0x6F, 0x12, 0xEC, 0x51, 0xE4, 0x10, 0xF0,
+0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0x49, 0xE3,
+0x62, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF4,
+0x50, 0x9A, 0x08, 0xF3, 0x9C, 0xAC, 0x6C, 0xEF,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
+0x48, 0x9A, 0x01, 0x6C, 0xB0, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0x6B, 0xC0, 0xF1,
+0x08, 0x4A, 0x08, 0xF3, 0x74, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF5, 0x50, 0x9A, 0x00, 0x6C,
+0x40, 0xEA, 0x01, 0x6B, 0x0B, 0x97, 0x0A, 0x91,
+0x09, 0x90, 0x43, 0x67, 0x06, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x07, 0x6A, 0x7D, 0x67,
+0x58, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
+0x50, 0x9A, 0xFF, 0xF7, 0x1F, 0x6E, 0x8C, 0xEE,
+0x00, 0x6B, 0x82, 0x67, 0x06, 0x05, 0x01, 0x6F,
+0x04, 0xD3, 0x00, 0x18, 0xFC, 0xE9, 0x09, 0x97,
+0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xFF, 0x6E, 0x8C, 0xEE,
+0x0E, 0xF6, 0x98, 0x9A, 0x00, 0x6A, 0xA2, 0x67,
+0x01, 0x6F, 0x04, 0xD2, 0x00, 0x18, 0xFC, 0xE9,
+0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0x30, 0xA2, 0x08, 0xF3, 0x94, 0xA2,
+0x0F, 0x6B, 0x26, 0x31, 0x03, 0x74, 0x6C, 0xE9,
+0x4A, 0x60, 0x1E, 0x68, 0x18, 0xE9, 0xE0, 0xF7,
+0x88, 0x41, 0x84, 0x34, 0xFF, 0x6E, 0x01, 0x6D,
+0x12, 0xE8, 0x41, 0xE0, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0x49, 0xE4, 0xE2, 0xA2,
+0x30, 0xF0, 0x20, 0x6A, 0x08, 0xF3, 0x9C, 0xA8,
+0x6C, 0xEF, 0x2E, 0xF4, 0x70, 0x9A, 0xCC, 0xEF,
+0x40, 0xEB, 0x01, 0x72, 0x06, 0x61, 0x08, 0xF3,
+0x7E, 0xA0, 0x01, 0x6A, 0x6D, 0xEA, 0x08, 0xF3,
+0x5E, 0xC0, 0x10, 0xF0, 0x30, 0x6B, 0xE0, 0xF7,
+0x08, 0x49, 0x00, 0xF0, 0x00, 0x4B, 0x24, 0x31,
+0x65, 0xE1, 0x82, 0xA1, 0x07, 0x6D, 0x92, 0x32,
+0xAC, 0xEA, 0x01, 0x4A, 0xAC, 0xEA, 0x50, 0x35,
+0x71, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0xAD, 0xEA,
+0x42, 0xC1, 0xC1, 0xF7, 0x6F, 0xA3, 0x01, 0x6A,
+0x6C, 0xEA, 0x0C, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF4, 0x5C, 0xA2, 0x07, 0x2A, 0x63, 0xA1,
+0x0F, 0x6A, 0xFF, 0x6C, 0x6C, 0xEA, 0x4C, 0xEC,
+0x80, 0x18, 0x73, 0x0C, 0x01, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0x7C, 0xC2, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x08, 0xF3, 0xB0, 0xA2, 0x0F, 0x6B, 0xA6, 0x35,
+0x6C, 0xED, 0x1E, 0x6B, 0x78, 0xED, 0x12, 0xEB,
+0x49, 0xE3, 0x08, 0xF3, 0x19, 0xA2, 0x01, 0x6A,
+0x12, 0x30, 0x4C, 0xE8, 0x1F, 0x28, 0x10, 0xF0,
+0x30, 0x6A, 0xE0, 0xF7, 0x28, 0x45, 0x00, 0xF0,
+0x00, 0x4A, 0x24, 0x31, 0x45, 0xE1, 0x42, 0xA1,
+0x07, 0x6B, 0x52, 0x32, 0x6C, 0xEA, 0x02, 0x52,
+0x11, 0x60, 0x80, 0x18, 0x7C, 0x0C, 0xC3, 0xA1,
+0x30, 0xF0, 0x20, 0x6A, 0x0E, 0xF6, 0x94, 0x9A,
+0x0F, 0x6A, 0x4C, 0xEE, 0xFF, 0x6A, 0x00, 0x6D,
+0x4C, 0xEE, 0x01, 0x6F, 0x04, 0xD0, 0x00, 0x18,
+0xFC, 0xE9, 0x24, 0x10, 0x1E, 0x6B, 0x78, 0xED,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x01, 0x6C, 0x12, 0xEB, 0x4D, 0xE3, 0x08, 0xF3,
+0x79, 0xA3, 0x6E, 0x33, 0x8C, 0xEB, 0x13, 0x2B,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x48, 0x9A,
+0x02, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x0E, 0xF6, 0x48, 0x9A, 0x40, 0xEA, 0x0A, 0x2A,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x50, 0x9A,
+0x06, 0x6C, 0x40, 0xEA, 0x03, 0x10, 0x03, 0x6B,
+0x08, 0xF3, 0x74, 0xC2, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x44, 0x67, 0x30, 0xF0,
+0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x08, 0xF3,
+0x70, 0xA4, 0x0F, 0x6D, 0x66, 0x33, 0xAC, 0xEB,
+0x1E, 0x6D, 0xB8, 0xEB, 0x12, 0xED, 0x91, 0xE5,
+0x08, 0xF3, 0xB9, 0xA4, 0x07, 0x6C, 0xAC, 0xEC,
+0x01, 0x74, 0x31, 0x60, 0x05, 0x24, 0x02, 0x74,
+0x03, 0x60, 0x03, 0x74, 0x2C, 0x60, 0x40, 0x10,
+0x1E, 0x6D, 0xB8, 0xEB, 0x30, 0xF0, 0x20, 0x6C,
+0xC0, 0xF1, 0x08, 0x4C, 0x01, 0x6E, 0x12, 0xED,
+0x95, 0xE5, 0x08, 0xF3, 0xB9, 0xA5, 0xB6, 0x35,
+0xCC, 0xED, 0x19, 0x2D, 0x10, 0xF0, 0x30, 0x6C,
+0xE0, 0xF7, 0x08, 0x4B, 0x00, 0xF0, 0x00, 0x4C,
+0x64, 0x33, 0x8D, 0xE3, 0xC2, 0xA3, 0x71, 0x6C,
+0x8B, 0xEC, 0xCC, 0xEC, 0x82, 0xC3, 0xFF, 0xF7,
+0x1F, 0x6E, 0x10, 0xF0, 0x30, 0x6C, 0xE6, 0xF1,
+0x11, 0x4C, 0x4C, 0xEE, 0x01, 0x6F, 0x04, 0xD5,
+0x00, 0x18, 0xFC, 0xE9, 0x19, 0x10, 0x02, 0x6D,
+0x08, 0xF3, 0xB4, 0xC4, 0x05, 0x10, 0x02, 0x6D,
+0x30, 0xF0, 0x20, 0x6C, 0xC8, 0xF4, 0xBC, 0xC4,
+0x10, 0xF0, 0x30, 0x6C, 0xE0, 0xF7, 0x08, 0x4B,
+0x64, 0x33, 0x00, 0xF0, 0x00, 0x4C, 0x91, 0xE3,
+0x63, 0xA4, 0x0F, 0x6C, 0x6C, 0xEC, 0x91, 0xE2,
+0xFF, 0x6B, 0x6C, 0xEC, 0x80, 0x18, 0x73, 0x0C,
+0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x4C, 0x9A,
+0x30, 0xF0, 0x20, 0x6C, 0xFF, 0x6B, 0x40, 0xA2,
+0x10, 0xF0, 0x30, 0x68, 0x00, 0xF0, 0x00, 0x48,
+0x4C, 0xEB, 0x6E, 0xF2, 0x58, 0x9C, 0x50, 0x6E,
+0x05, 0xD3, 0x00, 0x6C, 0xFF, 0x6D, 0x40, 0xEA,
+0xC1, 0xF7, 0x48, 0xA0, 0xFF, 0x6B, 0x00, 0x6D,
+0x52, 0x32, 0xE0, 0xF7, 0x08, 0x4A, 0x44, 0x32,
+0x09, 0xE2, 0x82, 0xA2, 0x0F, 0x6A, 0x30, 0xF0,
+0x20, 0x69, 0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18,
+0x7A, 0xC8, 0xC1, 0xF7, 0x48, 0xA0, 0x0F, 0x6C,
+0xFF, 0x6B, 0x8C, 0xEA, 0xE0, 0xF7, 0x08, 0x4A,
+0x44, 0x32, 0x09, 0xE2, 0x82, 0xA2, 0x0F, 0x6A,
+0x01, 0x6D, 0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18,
+0xA3, 0xC8, 0x04, 0xD2, 0xC1, 0xF7, 0x48, 0xA0,
+0x0F, 0x6C, 0xFF, 0x6B, 0x8C, 0xEA, 0xE0, 0xF7,
+0x08, 0x4A, 0x44, 0x32, 0x09, 0xE2, 0x82, 0xA2,
+0x0F, 0x6A, 0xC0, 0xF1, 0x08, 0x49, 0x4C, 0xEC,
+0x6C, 0xEC, 0x00, 0x6D, 0x00, 0x18, 0xA3, 0xC8,
+0x68, 0xF3, 0x70, 0xA1, 0x04, 0x94, 0x10, 0xF0,
+0x24, 0x6E, 0x66, 0x33, 0x60, 0x33, 0x68, 0x33,
+0x6D, 0xE2, 0x43, 0xEB, 0x58, 0x67, 0x51, 0xE4,
+0x04, 0xD4, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2,
+0xA8, 0x9A, 0xC1, 0xF7, 0x48, 0xA0, 0xFD, 0xF0,
+0xD8, 0x9E, 0x80, 0x9D, 0x52, 0x32, 0xE0, 0xF7,
+0x08, 0x4A, 0x44, 0x32, 0x01, 0xE2, 0x42, 0xA0,
+0x00, 0xF7, 0x40, 0x32, 0xCC, 0xEA, 0x10, 0xF0,
+0x24, 0x6E, 0x1C, 0xF3, 0xC0, 0x9E, 0xCC, 0xEC,
+0x8D, 0xEA, 0x40, 0xDD, 0x10, 0xF0, 0x24, 0x6A,
+0x04, 0x94, 0x1C, 0xF7, 0x5C, 0x9A, 0x01, 0x6D,
+0x80, 0xDA, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
+0x48, 0x9A, 0x60, 0xDA, 0x82, 0xA0, 0x0F, 0x6A,
+0xFF, 0x6B, 0x4C, 0xEC, 0x6C, 0xEC, 0x00, 0x18,
+0x7A, 0xC8, 0x30, 0xF0, 0x20, 0x6C, 0x6E, 0xF2,
+0x58, 0x9C, 0x05, 0x95, 0x50, 0x6E, 0x00, 0x6C,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
+0x50, 0x9A, 0x08, 0x6C, 0x40, 0xEA, 0x08, 0xF3,
+0x71, 0xA1, 0x20, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x14, 0x6B, 0x6D, 0xEA, 0x08, 0xF3, 0x70, 0xA1,
+0x08, 0xF3, 0x51, 0xC1, 0x80, 0x6A, 0x4B, 0xEA,
+0x6D, 0xEA, 0x08, 0xF3, 0x50, 0xC1, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0xFF, 0x6A, 0x04, 0x67, 0x4C, 0xE8, 0x6C, 0x40,
+0x4C, 0xEB, 0x03, 0x5B, 0x01, 0x6C, 0x03, 0x61,
+0x0E, 0xEC, 0x01, 0x5C, 0x98, 0x67, 0x30, 0xF0,
+0x20, 0x6A, 0xC8, 0xF4, 0x78, 0xA2, 0x60, 0x6A,
+0x6C, 0xEA, 0x40, 0x72, 0x09, 0x60, 0x20, 0x72,
+0x01, 0x61, 0x06, 0x2C, 0x03, 0x70, 0x04, 0x60,
+0x02, 0x70, 0x02, 0x60, 0x09, 0x70, 0x43, 0x61,
+0x09, 0x70, 0x06, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xC8, 0xF4, 0x3A, 0xA2, 0x32, 0x31, 0x06, 0x10,
+0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7, 0x52, 0xA2,
+0x0F, 0x69, 0x4C, 0xE9, 0x91, 0x67, 0x00, 0x6D,
+0x00, 0x18, 0xA3, 0xC8, 0x91, 0x67, 0x01, 0x6D,
+0x08, 0xD2, 0x00, 0x18, 0xA3, 0xC8, 0x9D, 0x67,
+0x17, 0x6B, 0x70, 0xC4, 0x0A, 0x6B, 0x6F, 0xCC,
+0x12, 0xC4, 0x30, 0xF0, 0x20, 0x6B, 0xC8, 0xF4,
+0x78, 0xA3, 0x0F, 0x6C, 0x66, 0x33, 0x8C, 0xEB,
+0x9D, 0x67, 0x73, 0xC4, 0x67, 0x44, 0x19, 0x4B,
+0x60, 0xA3, 0x74, 0xC4, 0x08, 0x94, 0x82, 0x33,
+0x9D, 0x67, 0x75, 0xC4, 0x62, 0x33, 0x76, 0xC4,
+0x08, 0x94, 0x00, 0xF6, 0x82, 0x33, 0x9D, 0x67,
+0x77, 0xC4, 0x58, 0xC4, 0x42, 0x33, 0x00, 0xF6,
+0x42, 0x32, 0x5B, 0xC4, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x58, 0x9A, 0x79, 0xC4, 0x62, 0x33,
+0x7A, 0xC4, 0x04, 0x04, 0x40, 0xEA, 0x0D, 0x97,
+0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49,
+0x08, 0xF3, 0xB0, 0xA1, 0x01, 0x6B, 0xFF, 0x6A,
+0xA6, 0x30, 0x0F, 0x6E, 0x6C, 0xED, 0xCC, 0xE8,
+0x4C, 0xED, 0x4C, 0xEC, 0x4C, 0xE8, 0x2C, 0x25,
+0x08, 0xF3, 0xB4, 0xA1, 0x01, 0x75, 0x28, 0x61,
+0x10, 0xF0, 0x30, 0x6D, 0xE0, 0xF7, 0xE8, 0x40,
+0xE4, 0x37, 0x00, 0xF0, 0x00, 0x4D, 0xB5, 0xE7,
+0xA2, 0xA5, 0xAC, 0xEE, 0x8E, 0xEE, 0x1C, 0x2E,
+0x1E, 0x6D, 0xB8, 0xE8, 0x12, 0xED, 0x35, 0xE5,
+0x08, 0xF3, 0xDE, 0xA5, 0xCC, 0xEB, 0x4C, 0xEB,
+0x13, 0x23, 0xFF, 0xF6, 0x1F, 0x4A, 0xCC, 0xEA,
+0x08, 0xF3, 0x5E, 0xC5, 0x01, 0x6D, 0x00, 0x18,
+0xEC, 0xE1, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF5, 0x48, 0x9A, 0x02, 0x6C, 0xB0, 0x67,
+0x40, 0xEA, 0x02, 0x6A, 0x08, 0xF3, 0x54, 0xC1,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6B,
+0xFD, 0xF0, 0x7C, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
+0x60, 0x9B, 0x80, 0xF1, 0x01, 0x6C, 0x8B, 0xEC,
+0x8C, 0xEB, 0x10, 0xF0, 0x24, 0x6C, 0x7C, 0xF4,
+0x9C, 0x9C, 0x01, 0x72, 0x80, 0x9C, 0x05, 0x60,
+0x02, 0x72, 0x05, 0x61, 0xFF, 0x6A, 0x01, 0x4A,
+0x01, 0x10, 0x80, 0x6A, 0x4D, 0xEB, 0x10, 0xF0,
+0x24, 0x6A, 0xFD, 0xF0, 0x5C, 0x9A, 0x60, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF1, 0x40, 0x9A,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF4, 0x7C, 0x9B,
+0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x24, 0x6B,
+0x1D, 0xF1, 0x64, 0x9B, 0x50, 0x6A, 0x40, 0xC3,
+0x10, 0xF0, 0x24, 0x6B, 0x1D, 0xF1, 0x68, 0x9B,
+0x40, 0xC3, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x6C, 0xA2,
+0x01, 0x4B, 0xE0, 0xF0, 0x6C, 0xC2, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x69, 0xF2, 0x74, 0xA2, 0x04, 0x6A, 0x6C, 0xEA,
+0x05, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3,
+0x50, 0x9A, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x89, 0xF2, 0x6C, 0xA2,
+0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x05, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF3, 0x50, 0x9A, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0,
+0x85, 0xA2, 0x21, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0xC9, 0xF0, 0x65, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0x1D, 0xF1, 0x54, 0x9A, 0x10, 0xF0, 0x24, 0x6C,
+0x1D, 0xF1, 0x9C, 0x9C, 0x60, 0xAA, 0xEF, 0xF7,
+0x1F, 0x6A, 0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xCF, 0xF5, 0x58, 0xCB, 0x10, 0xF0, 0x24, 0x6A,
+0x1D, 0xF1, 0x78, 0x9A, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0xE0, 0xF0, 0x8A, 0xA2, 0x03, 0x6B, 0x8C, 0xEB,
+0x0D, 0x2B, 0xE0, 0xF0, 0x69, 0xA2, 0x01, 0x4B,
+0xE0, 0xF0, 0x69, 0xC2, 0xE0, 0xF0, 0x69, 0xA2,
+0xE0, 0xF0, 0x4A, 0xA2, 0x4A, 0x32, 0x42, 0xEB,
+0x41, 0x60, 0xB3, 0x10, 0xE0, 0xF0, 0x69, 0xA2,
+0xE0, 0xF0, 0x4A, 0xA2, 0x4A, 0x32, 0x42, 0xEB,
+0x0B, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3,
+0x80, 0x9A, 0x00, 0x6A, 0xA2, 0x67, 0xC2, 0x67,
+0x01, 0x6F, 0x04, 0xD2, 0x00, 0x18, 0xFC, 0xE9,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0xE0, 0xF0, 0x69, 0xA2, 0x22, 0x23, 0xE0, 0xF0,
+0x6A, 0xA2, 0x03, 0x6A, 0x6C, 0xEA, 0x03, 0x6B,
+0x6E, 0xEA, 0x08, 0x2A, 0x30, 0xF0, 0x20, 0x6B,
+0x8E, 0xF3, 0x9C, 0x9B, 0x04, 0xD2, 0x00, 0x6D,
+0x34, 0x6E, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF3, 0x9C, 0x9A, 0x00, 0x6A, 0x04, 0xD2,
+0xA2, 0x67, 0x66, 0x6E, 0x01, 0x6F, 0x00, 0x18,
+0xFC, 0xE9, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0xE0, 0xF0, 0x69, 0xA2, 0xFF, 0x4B,
+0x03, 0x10, 0xE0, 0xF0, 0x6A, 0xA2, 0x6A, 0x33,
+0xE0, 0xF0, 0x69, 0xC2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xA9, 0xF0, 0xA8, 0xA2,
+0x01, 0x6B, 0xFF, 0x6C, 0xAC, 0xEB, 0x45, 0x23,
+0xC9, 0xF0, 0xC4, 0xA2, 0x00, 0x6B, 0xC9, 0xF0,
+0x69, 0xC2, 0x10, 0x6B, 0xCC, 0xEB, 0x8C, 0xEB,
+0x60, 0x2B, 0x80, 0x6F, 0xEB, 0xEF, 0xCD, 0xEF,
+0x04, 0x6E, 0xAC, 0xEE, 0x8C, 0xEE, 0xC9, 0xF0,
+0xE4, 0xC2, 0x1F, 0x26, 0x30, 0xF0, 0x20, 0x6C,
+0xEF, 0xF4, 0x08, 0x4C, 0xC9, 0xF0, 0xB9, 0xA2,
+0xC0, 0xF0, 0xDC, 0xA4, 0xC3, 0xED, 0x0A, 0x61,
+0xC0, 0xF0, 0xB8, 0x9C, 0x10, 0xF0, 0x24, 0x6C,
+0x3D, 0xF1, 0x8C, 0x9C, 0xA0, 0xDC, 0xC9, 0xF0,
+0x79, 0xC2, 0x19, 0x10, 0x7C, 0x4C, 0x10, 0xF0,
+0x24, 0x6B, 0x96, 0x9C, 0x3D, 0xF1, 0x6C, 0x9B,
+0x01, 0x4D, 0x80, 0xDB, 0xC9, 0xF0, 0xB9, 0xC2,
+0x0E, 0x10, 0xC9, 0xF0, 0x6B, 0xA2, 0x0B, 0x23,
+0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF5, 0x9C, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x3D, 0xF1, 0x6C, 0x9B,
+0x80, 0xDB, 0xC9, 0xF0, 0xCB, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF3, 0x50, 0x9A, 0x40, 0xEA,
+0x24, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x1D, 0xF1,
+0x54, 0x9A, 0xEF, 0xF7, 0x1F, 0x6B, 0xA0, 0xAA,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0xAC, 0xEB, 0xE0, 0xF0, 0x70, 0xCA, 0xE0, 0xF0,
+0x50, 0xAA, 0x10, 0x6B, 0x6C, 0xEA, 0x09, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6, 0x7C, 0x9A,
+0x03, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0x06, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6,
+0x7C, 0x9A, 0xFC, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
+0x40, 0xC3, 0x07, 0x97, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xFF, 0x6E, 0x8C, 0xEE, 0xAE, 0xF3, 0x84, 0x9A,
+0x00, 0x6A, 0xA2, 0x67, 0x01, 0x6F, 0x04, 0xD2,
+0x00, 0x18, 0xFC, 0xE9, 0x07, 0x97, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x05, 0x5A, 0x00, 0x6B,
+0x24, 0x60, 0x10, 0xF0, 0x24, 0x6B, 0x48, 0x32,
+0x7C, 0xF2, 0x14, 0x4B, 0x4D, 0xE3, 0x40, 0x9B,
+0x00, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x5C, 0x9A, 0x13, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x9C, 0xF3, 0x40, 0x9A, 0x0E, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF3, 0x44, 0x9A, 0x09, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF3,
+0x4C, 0x9A, 0x40, 0xAA, 0xFF, 0xF7, 0x1F, 0x6B,
+0x4C, 0xEB, 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0xE2, 0xEE, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xC9, 0xF0, 0x85, 0xA3,
+0x03, 0x6D, 0xFF, 0x69, 0x86, 0x32, 0xAC, 0xEA,
+0x02, 0x72, 0x01, 0x6A, 0x2F, 0x61, 0xC9, 0xF0,
+0x47, 0xA3, 0x03, 0x5A, 0x06, 0x60, 0xC9, 0xF0,
+0xC4, 0xA3, 0x04, 0x6D, 0xCC, 0xED, 0x2C, 0xED,
+0x0A, 0x25, 0x07, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
+0xC9, 0xF0, 0x45, 0xC3, 0x05, 0x6A, 0xC9, 0xF0,
+0x49, 0xC3, 0x01, 0x6A, 0x1B, 0x10, 0x01, 0x4A,
+0xC9, 0xF0, 0x47, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF3, 0x50, 0x9A, 0x30, 0xF0, 0x20, 0x68,
+0xEF, 0xF4, 0x08, 0x48, 0x03, 0x6C, 0x40, 0xEA,
+0xC0, 0xF0, 0x5D, 0xA0, 0x07, 0x6D, 0x01, 0x6C,
+0x4C, 0xED, 0x2C, 0xED, 0x00, 0x18, 0x02, 0xEF,
+0xC0, 0xF0, 0x5F, 0xA0, 0x01, 0x4A, 0xC0, 0xF0,
+0x5F, 0xC0, 0x00, 0x6A, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xA9, 0xF0, 0x08, 0xA2, 0x01, 0x6B, 0xFF, 0x6C,
+0x0C, 0xEB, 0x7C, 0x23, 0xC9, 0xF0, 0xA4, 0xA2,
+0x10, 0x6B, 0xAC, 0xEB, 0x8C, 0xEB, 0x05, 0x23,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF3, 0x4C, 0x9A,
+0x70, 0x10, 0xA9, 0xF0, 0x6C, 0xA2, 0x40, 0x6A,
+0x6C, 0xEA, 0x8C, 0xEA, 0x06, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF3, 0x40, 0x9A, 0x40, 0xEA,
+0x65, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xC9, 0xF0, 0x69, 0xA2, 0x06, 0x5B,
+0x5D, 0x60, 0xC9, 0xF0, 0x69, 0x82, 0x01, 0x6A,
+0x44, 0xEB, 0x62, 0x67, 0x24, 0x6A, 0x6C, 0xEA,
+0x0C, 0x2A, 0x12, 0x6A, 0x6C, 0xEA, 0x04, 0x2A,
+0x09, 0x6A, 0x6C, 0xEA, 0x32, 0x2A, 0x4E, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3, 0x54, 0x9A,
+0x48, 0x10, 0x30, 0x6A, 0x0C, 0xEA, 0x20, 0x72,
+0x0B, 0x60, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
+0x08, 0x48, 0xE0, 0xF0, 0x2B, 0xA0, 0x01, 0x6B,
+0xFF, 0x6A, 0x6C, 0xE9, 0x4C, 0xE9, 0x05, 0x21,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3, 0x58, 0x9A,
+0x34, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0xB0, 0x9A, 0x01, 0x6C, 0x00, 0x18, 0x17, 0xE1,
+0xE0, 0xF0, 0x4B, 0xA0, 0x01, 0x6B, 0x10, 0xF0,
+0x30, 0x6C, 0x6C, 0xEA, 0xE0, 0xF0, 0x4B, 0xC0,
+0xC7, 0xF3, 0x01, 0x4C, 0x00, 0x6D, 0x05, 0x6E,
+0xE3, 0x67, 0x04, 0xD1, 0x00, 0x18, 0xFC, 0xE9,
+0x1D, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
+0x53, 0xA2, 0x01, 0x6B, 0x6C, 0xEA, 0x06, 0x2A,
+0x10, 0xF0, 0x30, 0x6C, 0xC7, 0xF3, 0x01, 0x4C,
+0x00, 0x18, 0xE9, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xF0, 0x84, 0xA2,
+0x80, 0x6B, 0x6B, 0xEB, 0x8D, 0xEB, 0xC9, 0xF0,
+0x64, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF3,
+0x50, 0x9A, 0x40, 0xEA, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x6B, 0xA2,
+0x02, 0x4B, 0xE0, 0xF0, 0x6B, 0xC2, 0xE0, 0xF0,
+0x6C, 0xA2, 0x19, 0x23, 0xE0, 0xF0, 0x6B, 0xA2,
+0x66, 0x33, 0x05, 0x53, 0x14, 0x60, 0x00, 0x6B,
+0xE0, 0xF0, 0x6C, 0xC2, 0xE0, 0xF0, 0x6E, 0xA2,
+0x10, 0xF0, 0x30, 0x6C, 0xC7, 0xF3, 0x01, 0x4C,
+0x01, 0x4B, 0xE0, 0xF0, 0x6E, 0xC2, 0x00, 0x6A,
+0xA2, 0x67, 0x05, 0x6E, 0x01, 0x6F, 0x04, 0xD2,
+0x00, 0x18, 0xFC, 0xE9, 0x15, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF3, 0xB0, 0x9A, 0x01, 0x6C,
+0x00, 0x18, 0x48, 0xE1, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0, 0x6F, 0xA2,
+0x01, 0x4B, 0xE0, 0xF0, 0x6F, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF3, 0x58, 0x9A, 0x40, 0xEA,
+0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xE0, 0xF0,
+0x6D, 0xA2, 0x01, 0x6C, 0x01, 0x4B, 0xE0, 0xF0,
+0x6D, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3,
+0x5C, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF3, 0x4C, 0x9A, 0x01, 0x6C, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3, 0x58, 0x9A,
+0x01, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x69, 0xF2, 0x73, 0xA2, 0x80, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3, 0x54, 0x9A,
+0x00, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x69, 0xF2, 0x74, 0xA2, 0x02, 0x6A, 0x6C, 0xEA,
+0x11, 0x22, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6,
+0x5C, 0x9A, 0x02, 0xF0, 0x01, 0x6C, 0x8B, 0xEC,
+0x60, 0x9A, 0x8C, 0xEB, 0x60, 0xDA, 0x10, 0xF0,
+0x24, 0x6C, 0x60, 0x9A, 0x3D, 0xF1, 0x90, 0x9C,
+0x8C, 0xEB, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x00, 0x6B, 0xC9, 0xF0,
+0x69, 0xC2, 0xA9, 0xF0, 0x6A, 0xA2, 0x04, 0x6C,
+0x8C, 0xEB, 0x1B, 0x23, 0xA9, 0xF0, 0x6C, 0xA2,
+0x6C, 0xEC, 0x17, 0x24, 0xC9, 0xF0, 0x85, 0xA2,
+0x20, 0x6B, 0x01, 0x6F, 0x8D, 0xEB, 0xC9, 0xF0,
+0x65, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF5,
+0xCF, 0xA2, 0x00, 0x6A, 0x04, 0xD2, 0xC6, 0x36,
+0x10, 0xF0, 0x30, 0x6C, 0xA2, 0x67, 0xFF, 0x6A,
+0x66, 0xF7, 0x1D, 0x4C, 0x4C, 0xEE, 0x00, 0x18,
+0xFC, 0xE9, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
+0x08, 0x48, 0xC0, 0xF0, 0x5D, 0xA0, 0x07, 0x6C,
+0x00, 0x6D, 0x4C, 0xEC, 0x00, 0x18, 0xA3, 0xC8,
+0xE0, 0xF0, 0x40, 0xD8, 0xE0, 0xF0, 0x4B, 0xA0,
+0x7D, 0x67, 0x42, 0x6C, 0x46, 0x32, 0x58, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF3, 0x44, 0x9A,
+0x01, 0x6D, 0x06, 0x06, 0x40, 0xEA, 0x09, 0x97,
+0x08, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0xC9, 0xF0,
+0x65, 0xA0, 0x01, 0x6A, 0x82, 0x67, 0x6C, 0xEC,
+0x5B, 0x2C, 0x6D, 0xEA, 0xC9, 0xF0, 0x45, 0xC0,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3, 0x4C, 0x9A,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3,
+0x58, 0x9A, 0x00, 0x6C, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF3, 0x5C, 0x9A, 0x00, 0x6C,
+0x40, 0xEA, 0xA9, 0xF0, 0x6B, 0xA0, 0x80, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x06, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF3,
+0x54, 0x9A, 0x01, 0x6C, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x69, 0xF2, 0x74, 0xA2, 0x02, 0x6A,
+0x6C, 0xEA, 0x10, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF6, 0x5C, 0x9A, 0x02, 0xF0, 0x00, 0x6C,
+0x60, 0x9A, 0x8D, 0xEB, 0x60, 0xDA, 0x10, 0xF0,
+0x24, 0x6C, 0x60, 0x9A, 0x1C, 0xF3, 0x8C, 0x9C,
+0x8D, 0xEB, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x68,
+0xEF, 0xF4, 0x08, 0x48, 0xC0, 0xF0, 0x5D, 0xA0,
+0x07, 0x6C, 0x00, 0x6D, 0x4C, 0xEC, 0x00, 0x18,
+0xA3, 0xC8, 0x30, 0xF0, 0x20, 0x6B, 0x69, 0xF2,
+0x94, 0xA3, 0x04, 0x6B, 0x8C, 0xEB, 0x10, 0x23,
+0xE0, 0xF0, 0x60, 0x98, 0x43, 0xEB, 0x0C, 0x60,
+0xE0, 0xF0, 0x88, 0xA0, 0x6F, 0xE2, 0x80, 0x34,
+0x88, 0x34, 0x63, 0xEC, 0x05, 0x60, 0xE0, 0xF0,
+0x44, 0xA0, 0x01, 0x4A, 0xE0, 0xF0, 0x44, 0xC0,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFF, 0x6A, 0x4C, 0xEC, 0x03, 0x6B, 0x8C, 0xEB,
+0x4C, 0xEE, 0x3C, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0x7D, 0xF1, 0x6C, 0x9B, 0x80, 0xC3, 0x0F, 0x6B,
+0xCC, 0xEB, 0x34, 0x23, 0x01, 0x6C, 0x6C, 0xEC,
+0x06, 0x24, 0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF1,
+0x90, 0x9C, 0xAC, 0xEA, 0x40, 0xC4, 0x02, 0x6A,
+0x6C, 0xEA, 0x08, 0x22, 0xFF, 0x6C, 0xA2, 0x32,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF1,
+0x94, 0x9C, 0x40, 0xC4, 0x04, 0x6A, 0x6C, 0xEA,
+0x09, 0x22, 0xA2, 0x32, 0xFF, 0x6C, 0x42, 0x32,
+0x8C, 0xEA, 0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF1,
+0x98, 0x9C, 0x40, 0xC4, 0x6E, 0x32, 0x07, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x7D, 0xF1, 0x5C, 0x9A,
+0x00, 0xF6, 0xA2, 0x35, 0xA0, 0xC2, 0x20, 0x6A,
+0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x9D, 0xF1,
+0x60, 0x9B, 0x40, 0xC3, 0x00, 0x6A, 0x40, 0xC3,
+0x01, 0x6A, 0x20, 0xE8, 0x00, 0x6A, 0x20, 0xE8,
+0xFF, 0x6A, 0x8C, 0xEA, 0x03, 0x6B, 0x4C, 0xEB,
+0x03, 0x23, 0x01, 0x6A, 0x4B, 0xEA, 0x20, 0xE8,
+0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF1, 0x8C, 0x9C,
+0x40, 0xC4, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF1,
+0x80, 0x9A, 0x30, 0x6A, 0x40, 0xC4, 0x10, 0xF0,
+0x24, 0x6A, 0x7D, 0xF1, 0x50, 0x9A, 0x40, 0x9A,
+0x60, 0xC4, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF1, 0xA4, 0x9A,
+0xE0, 0xF3, 0x10, 0x6C, 0x0F, 0x6E, 0x80, 0x18,
+0x8C, 0x0F, 0xE0, 0xF3, 0x0C, 0x6C, 0x80, 0x18,
+0xAE, 0x0F, 0xFF, 0x6B, 0x4C, 0xEB, 0x0B, 0x73,
+0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x9D, 0xF1,
+0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF1,
+0x8C, 0x9C, 0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x05, 0x6B, 0x65, 0xF4, 0x64, 0xDA, 0x00, 0x6B,
+0x65, 0xF4, 0x60, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0xE5, 0x63, 0x35, 0x62, 0x34, 0xD1, 0x33, 0xD0,
+0x10, 0xF0, 0x24, 0x6D, 0x07, 0x04, 0x7B, 0xF7,
+0x10, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0xB3, 0xD4,
+0x10, 0xF0, 0x24, 0x6D, 0x1C, 0x04, 0x1B, 0xF7,
+0x1C, 0x4D, 0x54, 0x6E, 0x00, 0x18, 0xB3, 0xD4,
+0x10, 0xF0, 0x24, 0x6A, 0x1B, 0xF7, 0x70, 0x9A,
+0x1B, 0xF7, 0x10, 0x4A, 0x00, 0x69, 0x04, 0xD3,
+0x61, 0x9A, 0x44, 0xAA, 0x05, 0xD3, 0x7D, 0x67,
+0x4C, 0xCB, 0x52, 0x68, 0x18, 0xE9, 0x30, 0xF0,
+0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A, 0x61, 0x6F,
+0xEB, 0xEF, 0x00, 0x6C, 0x01, 0x49, 0x12, 0xE8,
+0x01, 0xE2, 0x3F, 0x6A, 0x20, 0xF0, 0x65, 0xA0,
+0xFA, 0x65, 0x40, 0xC0, 0x09, 0x6A, 0x44, 0xC0,
+0x0D, 0x6A, 0x4B, 0xEA, 0x20, 0xF0, 0xA6, 0xA0,
+0x6C, 0xEA, 0x04, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
+0x04, 0x6B, 0xAD, 0xEB, 0x31, 0x6D, 0xAB, 0xED,
+0xAC, 0xEA, 0x40, 0x6D, 0xAD, 0xEA, 0x80, 0x4D,
+0x20, 0xF0, 0xC7, 0xA0, 0xC0, 0x4D, 0xAD, 0xEA,
+0x20, 0xF0, 0xB5, 0xA0, 0x20, 0xF0, 0x45, 0xC0,
+0x03, 0x6A, 0x1E, 0x65, 0x4B, 0xEA, 0xD8, 0x67,
+0xAC, 0xEA, 0x41, 0x6D, 0xAB, 0xED, 0xCC, 0xEF,
+0x20, 0xF0, 0xE7, 0xC0, 0xAC, 0xEB, 0x20, 0xF0,
+0xE0, 0xA0, 0x20, 0xF0, 0x66, 0xC0, 0x08, 0x6B,
+0x6B, 0xEB, 0xEC, 0xEB, 0x20, 0xF0, 0x60, 0xC0,
+0x01, 0x6B, 0x6B, 0xEB, 0x68, 0xC0, 0x21, 0x6B,
+0xAC, 0xEA, 0x6B, 0xEB, 0x6C, 0xEA, 0x20, 0xF0,
+0x55, 0xC0, 0x40, 0xF0, 0x61, 0xA0, 0x5F, 0x67,
+0x47, 0xC0, 0x40, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x00, 0x6F, 0xAC, 0xEA, 0x81, 0xC0, 0x83, 0xC0,
+0x20, 0xF0, 0x94, 0xC0, 0x20, 0xF0, 0x81, 0xC0,
+0xF6, 0xC8, 0xE9, 0xC0, 0x40, 0xF0, 0x82, 0xC0,
+0x40, 0xF0, 0x41, 0xC0, 0x30, 0xF0, 0x20, 0x6E,
+0x4E, 0xF2, 0x4C, 0x9E, 0x87, 0x40, 0x3E, 0x4C,
+0xFF, 0x6D, 0x02, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6F, 0x4E, 0xF2, 0x4C, 0x9F, 0x87, 0x40,
+0xFF, 0x68, 0x40, 0x4C, 0x00, 0x6D, 0x02, 0x6E,
+0x0C, 0xE9, 0x40, 0xEA, 0x80, 0x71, 0x8D, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0x6B, 0xC0, 0xF1,
+0x08, 0x4A, 0xE5, 0xF2, 0x76, 0xC2, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF5, 0x48, 0x9A, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF5, 0x54, 0x9A,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF5,
+0x40, 0x9A, 0x32, 0x6B, 0x30, 0xF0, 0x20, 0x6C,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF5,
+0x44, 0x9A, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF5,
+0x68, 0x9B, 0x40, 0xA2, 0x05, 0xF4, 0x10, 0x4C,
+0x1C, 0x05, 0x0C, 0xEA, 0xFF, 0x4A, 0x0C, 0xEA,
+0x40, 0xC3, 0x30, 0xF0, 0x20, 0x68, 0x4E, 0xF2,
+0x50, 0x98, 0x54, 0x6E, 0x40, 0xEA, 0x4E, 0xF2,
+0x50, 0x98, 0x30, 0xF0, 0x20, 0x6C, 0x65, 0xF4,
+0x04, 0x4C, 0x07, 0x05, 0x54, 0x6E, 0x40, 0xEA,
+0x4E, 0xF2, 0x50, 0x98, 0x30, 0xF0, 0x20, 0x6C,
+0x05, 0xF6, 0x1A, 0x4C, 0x04, 0x05, 0x0A, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xC5, 0xF4, 0x0A, 0x4A, 0x65, 0xF5,
+0x12, 0x4B, 0x0A, 0x6C, 0x80, 0xCA, 0x00, 0x6C,
+0xA0, 0xF0, 0x88, 0xCA, 0x02, 0x4A, 0x6A, 0xEA,
+0xF8, 0x61, 0x35, 0x97, 0x34, 0x91, 0x33, 0x90,
+0x1B, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A,
+0x06, 0xD4, 0x09, 0xD7, 0x07, 0xD5, 0x08, 0xD6,
+0x06, 0x04, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x46, 0x67, 0x01, 0x4A,
+0x05, 0x67, 0x0C, 0xD6, 0x27, 0x67, 0x1F, 0x22,
+0x1F, 0xF7, 0x00, 0x6A, 0xAC, 0xEA, 0x02, 0xF0,
+0x00, 0x72, 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A,
+0x49, 0xE0, 0x40, 0x9A, 0x0C, 0x94, 0x04, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
+0x40, 0xEA, 0x0C, 0x93, 0x24, 0xEA, 0x6F, 0xEA,
+0x04, 0x93, 0x6C, 0xEA, 0x4D, 0xE9, 0x1F, 0xF7,
+0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
+0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x41, 0xE0,
+0x20, 0xD8, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x1F, 0xF7, 0x00, 0x6A,
+0xAC, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x26, 0x67,
+0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x40, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x44, 0x9A, 0x55, 0xE5,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0x9D, 0xAE, 0xF4,
+0x50, 0x9A, 0x91, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
+0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x68, 0xEE, 0xF3, 0x54, 0x98, 0x00, 0x6C,
+0xA4, 0x67, 0xE4, 0x67, 0x01, 0x6E, 0x40, 0xEA,
+0xEE, 0xF3, 0x54, 0x98, 0x01, 0x6D, 0xE5, 0x67,
+0x00, 0x6C, 0xC5, 0x67, 0x40, 0xEA, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68,
+0x9C, 0xF4, 0x18, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
+0xC0, 0x9B, 0x03, 0xF3, 0x00, 0x69, 0x01, 0x6D,
+0x91, 0x67, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x9C, 0xF4,
+0xDC, 0x9B, 0x01, 0x6D, 0x91, 0x67, 0xAB, 0xED,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
+0x50, 0x98, 0xBC, 0xF4, 0xC0, 0x9B, 0x01, 0x6D,
+0x91, 0x67, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF4, 0x18, 0x4B, 0xCE, 0xF4,
+0x50, 0x98, 0xC0, 0x9B, 0x01, 0x6D, 0x91, 0x67,
+0xAB, 0xED, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x00, 0x6A, 0x0B, 0xD7, 0xE0, 0xAE, 0x1F, 0xF7,
+0x00, 0x6B, 0xEC, 0xEB, 0x02, 0xF0, 0x00, 0x73,
+0x01, 0x60, 0x09, 0x2B, 0x10, 0xF0, 0x24, 0x6B,
+0xE0, 0xAE, 0xFC, 0xF2, 0x60, 0x9B, 0x6D, 0xE7,
+0xE0, 0xA4, 0xE0, 0xC3, 0x07, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF2, 0x64, 0x9B, 0x7D, 0xE7,
+0x60, 0xA4, 0x60, 0xC7, 0x01, 0x4A, 0xFF, 0x6B,
+0x6C, 0xEA, 0x04, 0x72, 0x02, 0x4E, 0x01, 0x4C,
+0xE1, 0x61, 0x25, 0x67, 0x00, 0x68, 0x0B, 0x92,
+0xC0, 0x99, 0x01, 0x6D, 0x0D, 0xE2, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x80, 0xAB,
+0xAB, 0xED, 0x02, 0x48, 0x40, 0xEA, 0x16, 0x70,
+0x04, 0x49, 0xF1, 0x61, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0x4C, 0x9A,
+0x7F, 0x6B, 0xFF, 0x6C, 0x60, 0xC2, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF2, 0x4C, 0x9A, 0x14, 0x6B,
+0x01, 0x6D, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x50, 0x9A, 0x10, 0x6B, 0x30, 0xF0,
+0x20, 0x68, 0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF4, 0x6C, 0x9A, 0x01, 0x6E, 0x81, 0xF4,
+0x14, 0x69, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0x8C, 0xEA, 0x40, 0xC3, 0xCE, 0xF4, 0x50, 0x98,
+0x01, 0xF0, 0x0D, 0x4C, 0xEF, 0xF7, 0x1F, 0x4D,
+0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
+0x91, 0x67, 0xC5, 0x67, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0x91, 0x67, 0x01, 0xF4, 0x00, 0x6D,
+0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0x01, 0x6D, 0x01, 0xF4, 0x00, 0x6C, 0xAB, 0xED,
+0x04, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0xFF, 0x6D, 0x01, 0xF3, 0x00, 0x6C, 0x01, 0x4D,
+0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF3, 0xAC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x01, 0xF0, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF0, 0x18, 0x6C,
+0x0E, 0x6D, 0x07, 0x6E, 0x40, 0xEA, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0x6A, 0x8C, 0xEA, 0x1E, 0x22, 0x30, 0xF0,
+0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B, 0xBC, 0xF4,
+0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
+0x2B, 0xE9, 0xA1, 0xF4, 0x10, 0x6C, 0xB1, 0x67,
+0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4,
+0x14, 0x6C, 0xB1, 0x67, 0x6E, 0xF7, 0x17, 0x6E,
+0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4,
+0x1C, 0x6C, 0xB1, 0x67, 0x21, 0xF0, 0x1B, 0x6E,
+0x1D, 0x10, 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0,
+0x24, 0x6B, 0xBC, 0xF4, 0xD4, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9, 0xA1, 0xF4,
+0x10, 0x6C, 0xB1, 0x67, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C, 0xB1, 0x67,
+0x62, 0xF1, 0x17, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0xA1, 0xF4, 0x1C, 0x6C, 0xB1, 0x67,
+0x00, 0xF4, 0x04, 0x6E, 0x40, 0xEA, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x00, 0x6B, 0x0B, 0xD7, 0xE0, 0xAE, 0x1F, 0xF7,
+0x00, 0x6A, 0xEC, 0xEA, 0x02, 0xF0, 0x00, 0x72,
+0x01, 0x60, 0x08, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0xE0, 0xAE, 0xFC, 0xF2, 0x40, 0x9A, 0x49, 0xE7,
+0xE0, 0xA2, 0x06, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF2, 0x44, 0x9A, 0x5D, 0xE7, 0xE0, 0xA7,
+0xFF, 0x6A, 0xEC, 0xEA, 0x7D, 0xE4, 0x01, 0x4B,
+0x04, 0x73, 0x40, 0xC7, 0x02, 0x4E, 0xE2, 0x61,
+0x25, 0x67, 0x00, 0x68, 0x0B, 0x93, 0x01, 0x6D,
+0xAB, 0xED, 0x09, 0xE3, 0x80, 0xAA, 0x02, 0x48,
+0x00, 0x18, 0x42, 0xE7, 0x16, 0x70, 0x40, 0xD9,
+0x04, 0x49, 0xF4, 0x61, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x10, 0xF0, 0x24, 0x6B, 0xFF, 0x69, 0x9C, 0xF4,
+0x78, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0x2C, 0xEC,
+0xCE, 0xF4, 0x50, 0x98, 0xAC, 0xE9, 0x24, 0x36,
+0x01, 0x6D, 0x04, 0xD4, 0xAB, 0xED, 0x03, 0xF3,
+0x00, 0x6C, 0x6D, 0xEE, 0x40, 0xEA, 0x04, 0x92,
+0x08, 0x2A, 0xCE, 0xF4, 0x50, 0x98, 0x03, 0xF3,
+0x0C, 0x6C, 0x06, 0xF0, 0x00, 0x6D, 0x03, 0x6E,
+0x07, 0x10, 0xCE, 0xF4, 0x50, 0x98, 0x03, 0xF3,
+0x0C, 0x6C, 0x06, 0xF0, 0x00, 0x6D, 0x01, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0xBC, 0xF4,
+0xA4, 0x9B, 0xC3, 0xF3, 0x14, 0x6C, 0x10, 0x6E,
+0x40, 0xEA, 0x04, 0x94, 0x24, 0x31, 0x30, 0xF0,
+0x20, 0x6A, 0x25, 0xE4, 0x30, 0x33, 0xC0, 0xF1,
+0x08, 0x4A, 0x30, 0x31, 0x6D, 0xE2, 0x29, 0xE2,
+0xE7, 0xF7, 0x0C, 0x4A, 0x04, 0xD2, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF4, 0x38, 0x9A, 0xE7, 0xF6,
+0x0C, 0x4B, 0x05, 0xD3, 0x30, 0xF0, 0x20, 0x68,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0xD1, 0x67,
+0xC3, 0xF3, 0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0x01, 0x6D, 0xE3, 0xF3, 0x1C, 0x6C, 0xAB, 0xED,
+0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF4, 0x7C, 0x9B, 0x05, 0x94, 0x04, 0x49,
+0x4C, 0xEB, 0x62, 0x33, 0x62, 0x33, 0x60, 0xCC,
+0xE1, 0xF7, 0x1F, 0x6B, 0x4C, 0xEB, 0x04, 0x92,
+0x02, 0x4C, 0x05, 0xD4, 0x60, 0xCA, 0x02, 0x4A,
+0x04, 0xD2, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0x40, 0x9A, 0x2E, 0xEA, 0xD7, 0x2A, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3, 0x18, 0x6C,
+0xAB, 0xED, 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0x03, 0xF3, 0x0C, 0x6C, 0x06, 0xF0,
+0x00, 0x6D, 0x00, 0x6E, 0x40, 0xEA, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x28, 0xF1, 0x4C, 0xA0, 0x69, 0x2A, 0x10, 0xF0,
+0x24, 0x6C, 0xDD, 0xF1, 0x00, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x01, 0x6A, 0xA7, 0xF6, 0x46, 0xC0,
+0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3, 0x0E, 0x4A,
+0x30, 0xF0, 0x20, 0x6F, 0x30, 0xF0, 0x20, 0x6E,
+0x30, 0xF0, 0x20, 0x6C, 0xA8, 0xF0, 0x0C, 0x4F,
+0xA8, 0xF2, 0x14, 0x4E, 0xA4, 0x42, 0xC8, 0xF0,
+0x04, 0x4C, 0x00, 0x6B, 0x1A, 0x65, 0x00, 0x6A,
+0x18, 0x67, 0x40, 0xDF, 0x40, 0xC8, 0x40, 0xDE,
+0xD0, 0xF7, 0x05, 0x43, 0x30, 0xF0, 0x20, 0x6A,
+0x0C, 0x30, 0xC0, 0xF1, 0x08, 0x4A, 0x09, 0xE2,
+0x0A, 0x4A, 0x05, 0xD2, 0x58, 0x67, 0x04, 0xD4,
+0x00, 0x69, 0xFA, 0x65, 0x05, 0x90, 0x01, 0x6A,
+0x09, 0xD3, 0x40, 0xC0, 0x6C, 0x30, 0x01, 0xE1,
+0x18, 0x65, 0x10, 0x32, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x49, 0xE0, 0xE7, 0xF6,
+0x0C, 0x4A, 0x08, 0xD2, 0x58, 0x67, 0x50, 0x32,
+0x41, 0xE0, 0x08, 0x92, 0xE7, 0xF7, 0x0C, 0x48,
+0x06, 0xD0, 0x06, 0x93, 0x00, 0x68, 0x00, 0xCA,
+0x00, 0xCB, 0x02, 0x4B, 0x06, 0xD3, 0x04, 0x93,
+0x02, 0x4A, 0x6A, 0xEA, 0xF6, 0x61, 0x05, 0x92,
+0x01, 0x49, 0x02, 0x71, 0x01, 0x4A, 0x05, 0xD2,
+0x04, 0x92, 0x09, 0x93, 0x10, 0x4A, 0x04, 0xD2,
+0xD5, 0x61, 0x00, 0xC5, 0x01, 0xC5, 0x02, 0xC5,
+0x01, 0x4B, 0x1F, 0x67, 0x02, 0x6A, 0x02, 0x48,
+0x7F, 0x4C, 0x6E, 0xEA, 0x04, 0x4F, 0x10, 0x4E,
+0x18, 0x65, 0x03, 0x4D, 0x01, 0x4C, 0xB3, 0x2A,
+0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x50, 0x9A, 0xDC, 0xF4, 0xC4, 0x9B,
+0x01, 0x6D, 0x03, 0xF3, 0x10, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90,
+0x07, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x21, 0x6A,
+0x70, 0xF3, 0x40, 0xA2, 0xFF, 0x69, 0x8C, 0xE9,
+0x53, 0x22, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
+0x20, 0x68, 0x9C, 0xF4, 0x78, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0x24, 0x36, 0x01, 0x6D, 0x6D, 0xEE,
+0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0xA8, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C,
+0x80, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0x01, 0x6D, 0xC3, 0xF3, 0x0C, 0x6C, 0xAB, 0xED,
+0x09, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xCE, 0xF4, 0x50, 0x98, 0xDC, 0xF4, 0xCC, 0x9B,
+0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4,
+0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
+0x23, 0xF3, 0x04, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xF8, 0x9A,
+0x00, 0x6C, 0x78, 0x6D, 0xD0, 0x67, 0x00, 0x18,
+0xA0, 0xE7, 0x00, 0x6C, 0x5C, 0x6D, 0xD0, 0x67,
+0x20, 0xF3, 0x00, 0x6F, 0x00, 0x18, 0xA0, 0xE7,
+0x10, 0xF0, 0x24, 0x6A, 0x00, 0x6C, 0x8F, 0x6D,
+0xD0, 0x67, 0xDC, 0xF4, 0xFC, 0x9A, 0x79, 0x10,
+0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF4, 0x78, 0x9B,
+0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98,
+0x24, 0x36, 0x01, 0x6D, 0x03, 0xF3, 0x00, 0x6C,
+0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x48, 0xF0, 0x54, 0xA2, 0x03, 0x22,
+0x01, 0x72, 0x28, 0x60, 0x64, 0x10, 0xCE, 0xF4,
+0x50, 0x98, 0xC3, 0xF3, 0x0C, 0x6C, 0xFF, 0x6D,
+0x12, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF4, 0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0xCC, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
+0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x01, 0x6D,
+0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98,
+0x23, 0xF3, 0x04, 0x6C, 0xAB, 0xED, 0xFC, 0xF4,
+0xC0, 0x9B, 0x26, 0x10, 0xCE, 0xF4, 0x50, 0x98,
+0xC3, 0xF3, 0x0C, 0x6C, 0xFF, 0x6D, 0x09, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4,
+0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3,
+0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF4, 0xCC, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C,
+0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xCE, 0xF4, 0x50, 0x98, 0xFC, 0xF4, 0xD0, 0x9B,
+0x01, 0x6D, 0x23, 0xF3, 0x04, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0x14, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4,
+0xE4, 0x9A, 0x91, 0x67, 0x56, 0x6D, 0xD0, 0x67,
+0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF4, 0xE8, 0x9A, 0x91, 0x67, 0x8F, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2,
+0xFF, 0x6E, 0x8C, 0xEE, 0x48, 0x22, 0x10, 0xF0,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x9C, 0xF4,
+0x78, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
+0x2B, 0xE9, 0xC4, 0x36, 0x6D, 0xEE, 0xB1, 0x67,
+0x03, 0xF3, 0x00, 0x6C, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0xB1, 0x67, 0xC3, 0xF3, 0x0C, 0x6C,
+0x1B, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF4, 0xD4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xB1, 0x67, 0x23, 0xF3, 0x00, 0x6C, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x34, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4, 0xF8, 0x9A,
+0x00, 0x6C, 0x78, 0x6D, 0xD1, 0x67, 0x00, 0x18,
+0xA0, 0xE7, 0x00, 0x6C, 0x5C, 0x6D, 0xD1, 0x67,
+0x28, 0xF3, 0x00, 0x6F, 0x00, 0x18, 0xA0, 0xE7,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4, 0xFC, 0x9A,
+0x00, 0x6C, 0x8F, 0x6D, 0xD1, 0x67, 0x00, 0x18,
+0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
+0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C, 0xDC, 0xF4,
+0xA8, 0x9B, 0x80, 0x6E, 0x5D, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF4, 0x78, 0x9B, 0x30, 0xF0,
+0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69,
+0x2B, 0xE9, 0xC4, 0x36, 0x6D, 0xEE, 0x03, 0xF3,
+0x00, 0x6C, 0xB1, 0x67, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0xC3, 0xF3, 0x0C, 0x6C, 0xB1, 0x67,
+0x09, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xCE, 0xF4, 0x50, 0x98, 0x1C, 0xF5, 0xC0, 0x9B,
+0x23, 0xF3, 0x00, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0, 0x54, 0xA2,
+0x03, 0x22, 0x01, 0x72, 0x16, 0x60, 0x35, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x34, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5, 0xE4, 0x9A,
+0x00, 0x6C, 0x56, 0x6D, 0xD1, 0x67, 0x00, 0x18,
+0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0x00, 0x6C,
+0x8F, 0x6D, 0xD1, 0x67, 0x1C, 0xF5, 0xE8, 0x9A,
+0x14, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0x34, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
+0xEC, 0x9A, 0x00, 0x6C, 0x56, 0x6D, 0xD1, 0x67,
+0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF5, 0xF0, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
+0xD1, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0xDC, 0xF4,
+0xA8, 0x9B, 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD0, 0x00, 0x6A, 0x7D, 0x67, 0x4C, 0xCB,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xD4, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3, 0xF0, 0x9A,
+0x00, 0x6C, 0xA4, 0x67, 0x00, 0x18, 0xA0, 0xE7,
+0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF5, 0xB4, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0xE1, 0xF0, 0x18, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0xE1, 0xF0,
+0x1C, 0x6C, 0xAB, 0xED, 0x00, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0x07, 0x6D, 0xC5, 0x67,
+0x83, 0xF1, 0x0C, 0x6C, 0x40, 0xEA, 0x06, 0x02,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
+0x54, 0x9A, 0xA1, 0xF3, 0x18, 0x6F, 0xA1, 0xF7,
+0x00, 0x6C, 0x08, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0xF0, 0x08, 0x6C,
+0xFF, 0x6D, 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x1C, 0xF5,
+0xB8, 0x9B, 0x01, 0xF2, 0x04, 0x6C, 0x00, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF5,
+0x7C, 0x9A, 0xFF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA,
+0xFE, 0x6C, 0x4C, 0xEC, 0x80, 0xC3, 0x40, 0xC3,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5, 0x40, 0x9A,
+0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0x09, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5, 0x68, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF5, 0x44, 0x9A,
+0x60, 0xDA, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
+0x37, 0x22, 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x3C, 0xF5,
+0xCC, 0x9B, 0x01, 0x69, 0x2B, 0xE9, 0xB1, 0x67,
+0x61, 0xF4, 0x00, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x98, 0x3C, 0xF5,
+0xD0, 0x9B, 0xB1, 0x67, 0x61, 0xF4, 0x00, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
+0x50, 0x98, 0x3C, 0xF5, 0xD4, 0x9B, 0xB1, 0x67,
+0x41, 0xF4, 0x18, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x3C, 0xF5, 0xD8, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0xB1, 0x67, 0x41, 0xF4, 0x1C, 0x6C,
+0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0x61, 0xF4,
+0x0C, 0x6C, 0xB1, 0x67, 0x01, 0xF2, 0x15, 0x6E,
+0x40, 0xEA, 0x80, 0x18, 0x89, 0x12, 0x34, 0x10,
+0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF5, 0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x01, 0x69, 0x2B, 0xE9, 0x61, 0xF4, 0x00, 0x6C,
+0xB1, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF5, 0xDC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x61, 0xF4, 0x00, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF5, 0xC0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x41, 0xF4, 0x18, 0x6C,
+0xB1, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xCE, 0xF4, 0x50, 0x98, 0x5C, 0xF5, 0xC4, 0x9B,
+0x41, 0xF4, 0x1C, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0x61, 0xF4, 0x0C, 0x6C,
+0xB1, 0x67, 0x22, 0xF2, 0x0A, 0x6E, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x50, 0x9A, 0x5C, 0xF4, 0xB8, 0x9B,
+0xA1, 0xF1, 0x04, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x68, 0x8C, 0xE8,
+0x00, 0x69, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0x14, 0x4A, 0xC0, 0x9A, 0x90, 0x67, 0xEF, 0x6D,
+0x00, 0x6F, 0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF4, 0x14, 0x4B, 0xC0, 0x9B,
+0x90, 0x67, 0x08, 0x6D, 0x00, 0x6F, 0x00, 0x18,
+0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0x14, 0x4A, 0xC0, 0x9A, 0x90, 0x67, 0x08, 0x6D,
+0x00, 0x18, 0x8D, 0xE7, 0x07, 0x22, 0x01, 0x49,
+0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xE9, 0x2E, 0xF5,
+0x10, 0x71, 0xDB, 0x61, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF4, 0xD4, 0x9A, 0x00, 0x6C, 0x18, 0x6D,
+0x00, 0x18, 0x8D, 0xE7, 0x30, 0xF0, 0x20, 0x6B,
+0x01, 0xF4, 0x00, 0x6C, 0xC0, 0xF1, 0x08, 0x4B,
+0x4C, 0xEC, 0x87, 0xF6, 0x50, 0xDB, 0x82, 0x32,
+0x4A, 0x32, 0x02, 0x72, 0x0A, 0x60, 0x03, 0x6C,
+0x4E, 0xEC, 0x04, 0x24, 0x01, 0x72, 0x02, 0x6A,
+0x05, 0x60, 0x06, 0x10, 0x87, 0xF6, 0x8D, 0xC3,
+0x03, 0x10, 0x01, 0x6A, 0x87, 0xF6, 0x4D, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0x70, 0x9B,
+0x87, 0xF6, 0x90, 0x9A, 0x8C, 0xEB, 0x62, 0x33,
+0x62, 0x33, 0x87, 0xF6, 0x6C, 0xC2, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC, 0x05, 0x67,
+0x01, 0x74, 0x4C, 0xE8, 0x5D, 0x60, 0x03, 0x24,
+0x04, 0x5C, 0x71, 0x60, 0x6B, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE7, 0xF6,
+0x64, 0x9A, 0x30, 0xF0, 0x20, 0x6C, 0xC8, 0xF0,
+0x04, 0x4C, 0xE7, 0xF6, 0x68, 0xDA, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x60, 0xF6,
+0x66, 0xAA, 0x00, 0x6D, 0x60, 0xF6, 0x68, 0xCA,
+0x60, 0xF6, 0x74, 0xA2, 0x60, 0xF6, 0x75, 0xC2,
+0x30, 0xF0, 0x20, 0x6B, 0x68, 0xF0, 0x1A, 0x4B,
+0x40, 0xA3, 0xB0, 0x36, 0x48, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC9, 0xE2,
+0xE7, 0xF6, 0x0C, 0x4A, 0xC0, 0xAA, 0x80, 0xF0,
+0xC0, 0xCA, 0x00, 0xF1, 0xC0, 0xAA, 0x80, 0xF1,
+0xC0, 0xCA, 0x02, 0x4A, 0x8A, 0xEA, 0xF6, 0x61,
+0x01, 0x4D, 0x02, 0x75, 0x01, 0x4B, 0x10, 0x4C,
+0xE7, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x78, 0x67, 0x60, 0xF6, 0x74, 0xC2,
+0x78, 0x67, 0x60, 0xF6, 0x66, 0xCA, 0x30, 0xF0,
+0x20, 0x6B, 0x00, 0x6C, 0xC0, 0xF1, 0x08, 0x4B,
+0x60, 0xF6, 0x90, 0xC2, 0x60, 0xF6, 0x91, 0xC2,
+0x60, 0xF6, 0x8A, 0xC2, 0x60, 0xF6, 0x8B, 0xC2,
+0x60, 0xF6, 0x8C, 0xC2, 0x87, 0xF6, 0x50, 0x9B,
+0x01, 0x6D, 0xA7, 0xF6, 0xB2, 0xC3, 0xA7, 0xF6,
+0xB3, 0xC3, 0xE7, 0xF6, 0x44, 0xDB, 0x17, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xD4, 0x9A,
+0x00, 0x6C, 0x58, 0x6D, 0x00, 0x18, 0x8D, 0xE7,
+0x22, 0xF0, 0x1A, 0x48, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x08, 0x30, 0x0D, 0xE3,
+0x41, 0xDB, 0x05, 0x10, 0xFE, 0x4C, 0x4C, 0xEC,
+0xB0, 0x67, 0x80, 0x18, 0x38, 0x11, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0xE8, 0xF2, 0x56, 0xA2, 0x0C, 0x2A, 0x01, 0x6C,
+0x00, 0x6D, 0x80, 0x18, 0x35, 0x13, 0x02, 0x6C,
+0x00, 0x6D, 0x80, 0x18, 0x35, 0x13, 0x03, 0x6C,
+0x00, 0x6D, 0x80, 0x18, 0x35, 0x13, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x00, 0x68, 0x09, 0xD5,
+0x24, 0x67, 0x09, 0x93, 0x00, 0x6C, 0x09, 0xE3,
+0xA0, 0xA2, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0xD4, 0x9A, 0x01, 0x48, 0x00, 0x18, 0x8D, 0xE7,
+0x05, 0x70, 0x40, 0xD9, 0x04, 0x49, 0xF1, 0x61,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0x0C, 0xD6, 0xFF, 0x68, 0xDC, 0xF4, 0xD4, 0x9A,
+0xFF, 0xF7, 0x1F, 0x69, 0x0C, 0x97, 0x8C, 0xE8,
+0xAC, 0xE9, 0x90, 0x67, 0xB1, 0x67, 0x00, 0x18,
+0xA0, 0xE7, 0x00, 0x6A, 0x04, 0xD2, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF4, 0x14, 0x4B, 0xC0, 0x9B,
+0x90, 0x67, 0xB1, 0x67, 0x00, 0x18, 0x8D, 0xE7,
+0x0C, 0x93, 0x6E, 0xEA, 0x16, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0x14, 0x4A, 0xC0, 0x9A, 0x0C, 0x97, 0x90, 0x67,
+0xB1, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x04, 0x93,
+0x01, 0x4B, 0xE0, 0xF3, 0x08, 0x73, 0x04, 0xD3,
+0xDE, 0x61, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xFF, 0x6A, 0x24, 0x67, 0xEF, 0xF4, 0x08, 0x48,
+0x4C, 0xED, 0x4C, 0xE9, 0x60, 0xF6, 0x58, 0xA0,
+0x04, 0xD5, 0x60, 0x22, 0x06, 0x25, 0x12, 0x6A,
+0x40, 0xF6, 0x5D, 0xC0, 0x02, 0x6A, 0x60, 0xF6,
+0x40, 0xD8, 0x10, 0xF0, 0x24, 0x6B, 0x30, 0xF0,
+0x20, 0x68, 0x9C, 0xF4, 0x78, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0x24, 0x36, 0x01, 0x6D, 0x6D, 0xEE,
+0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0xA8, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C,
+0x80, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6B,
+0x50, 0xF3, 0xC5, 0xA3, 0xCE, 0xF4, 0x50, 0x98,
+0xC3, 0xF3, 0x0C, 0x6C, 0xFF, 0x6D, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF5, 0xC8, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x03, 0xF3,
+0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF4, 0xCC, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C,
+0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xFC, 0xF4, 0xD0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x01, 0x6D, 0x23, 0xF3, 0x04, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0xD8, 0x9A, 0x91, 0x67, 0x78, 0x6D, 0x80, 0x18,
+0x8F, 0x13, 0x91, 0x67, 0x5C, 0x6D, 0x20, 0xF3,
+0x00, 0x6E, 0x80, 0x18, 0x8F, 0x13, 0x10, 0xF0,
+0x24, 0x6A, 0x91, 0x67, 0x8F, 0x6D, 0xDC, 0xF4,
+0xDC, 0x9A, 0xB2, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF4, 0x78, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x50, 0x9A, 0x24, 0x36, 0x01, 0x6D,
+0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x6D, 0xEE,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0,
+0x54, 0xA2, 0x03, 0x22, 0x01, 0x72, 0x4B, 0x60,
+0x9D, 0x10, 0x04, 0x92, 0x06, 0x22, 0x12, 0x6A,
+0x40, 0xF6, 0x5D, 0xC0, 0x02, 0x6A, 0x60, 0xF6,
+0x40, 0xD8, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x20, 0x68, 0xEF, 0xF4, 0x08, 0x4B, 0x40, 0xF6,
+0xDD, 0xA3, 0xCE, 0xF4, 0x50, 0x98, 0x04, 0xD3,
+0xC3, 0xF3, 0x0C, 0x6C, 0xFF, 0x6D, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0xA8, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x23, 0xF3, 0x08, 0x6C,
+0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF4, 0xCC, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x01, 0x6D, 0x23, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x04, 0x94, 0x10, 0xF0, 0x24, 0x6A,
+0x5B, 0xF6, 0x18, 0x4A, 0x60, 0xF6, 0x60, 0x9C,
+0x01, 0x6D, 0x23, 0xF3, 0x04, 0x6C, 0x49, 0xE3,
+0xC0, 0xA2, 0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF5,
+0x6C, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x36,
+0xC8, 0x36, 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x91, 0x67, 0x56, 0x6D,
+0xFC, 0xF4, 0xC4, 0x9A, 0x49, 0x10, 0x04, 0x92,
+0x06, 0x22, 0x1B, 0x6A, 0x40, 0xF6, 0x5D, 0xC0,
+0x02, 0x6A, 0x60, 0xF6, 0x40, 0xD8, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
+0x08, 0x4B, 0x40, 0xF6, 0xDD, 0xA3, 0xCE, 0xF4,
+0x50, 0x98, 0x04, 0xD3, 0xC3, 0xF3, 0x0C, 0x6C,
+0xFF, 0x6D, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF4, 0xA8, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF4, 0xCC, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D, 0x23, 0xF3,
+0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x04, 0x94,
+0x10, 0xF0, 0x24, 0x6A, 0x7B, 0xF6, 0x00, 0x4A,
+0x60, 0xF6, 0x60, 0x9C, 0x01, 0x6D, 0x23, 0xF3,
+0x04, 0x6C, 0x49, 0xE3, 0xC0, 0xA2, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF5, 0x6C, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0xC0, 0x36, 0xC8, 0x36, 0xAB, 0xED,
+0x6D, 0xEE, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF5, 0xD0, 0x9A, 0x91, 0x67, 0x56, 0x6D,
+0x80, 0x18, 0x8F, 0x13, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF4, 0xC8, 0x9A, 0x91, 0x67, 0x8F, 0x6D,
+0x80, 0x18, 0x8F, 0x13, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x34, 0x9A,
+0x08, 0xD4, 0x00, 0x6C, 0x05, 0x67, 0xD1, 0x67,
+0xE4, 0x67, 0xEF, 0x6D, 0x00, 0x18, 0xA0, 0xE7,
+0x00, 0x6C, 0xE4, 0x67, 0xD1, 0x67, 0xEE, 0x6D,
+0x00, 0x18, 0xA0, 0xE7, 0xC0, 0x98, 0x11, 0x6A,
+0x4B, 0xEA, 0x4C, 0xEE, 0x00, 0x6C, 0xDF, 0x6D,
+0x80, 0x18, 0x8F, 0x13, 0xC1, 0x98, 0x11, 0x6A,
+0x4B, 0xEA, 0x4C, 0xEE, 0x00, 0x6C, 0xDE, 0x6D,
+0x80, 0x18, 0x8F, 0x13, 0x08, 0x92, 0xE2, 0x98,
+0xD1, 0x67, 0xA2, 0xA2, 0x00, 0x6C, 0x00, 0x18,
+0xA0, 0xE7, 0x08, 0x92, 0xE3, 0x98, 0xD1, 0x67,
+0xA3, 0xA2, 0x00, 0x6C, 0x00, 0x18, 0xA0, 0xE7,
+0x44, 0x98, 0x02, 0x6F, 0xEB, 0xEF, 0xD1, 0x67,
+0x4C, 0xEF, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
+0xA0, 0xE7, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0x30, 0xF0, 0x20, 0x68, 0x9C, 0xF4, 0xD8, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9,
+0x03, 0xF3, 0x00, 0x6C, 0xB1, 0x67, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0xA3, 0xF3, 0x18, 0x6C,
+0xB1, 0x67, 0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A, 0x00, 0x6C,
+0xDF, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7,
+0x01, 0xF0, 0x13, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
+0x01, 0xF0, 0x02, 0x6E, 0x00, 0x6C, 0xDF, 0x6D,
+0x6D, 0xEE, 0x80, 0x18, 0x8F, 0x13, 0x30, 0xF0,
+0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2, 0x10, 0x22,
+0x00, 0x6C, 0xDE, 0x6D, 0xD0, 0x67, 0x00, 0x18,
+0x8D, 0xE7, 0x10, 0xF0, 0x11, 0x6B, 0x6B, 0xEB,
+0x4C, 0xEB, 0x10, 0xF0, 0x00, 0x6E, 0x00, 0x6C,
+0xDE, 0x6D, 0x6D, 0xEE, 0x80, 0x18, 0x8F, 0x13,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2,
+0x5C, 0x2A, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0x1C, 0x9A, 0x00, 0x6C, 0xEF, 0x6D, 0xD0, 0x67,
+0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C, 0x33, 0x6D,
+0x24, 0x6E, 0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C,
+0x3E, 0x6D, 0x3F, 0x6E, 0x80, 0x18, 0x8F, 0x13,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF5, 0xD4, 0x9A,
+0x00, 0x6C, 0x3F, 0x6D, 0x80, 0x18, 0x8F, 0x13,
+0x00, 0x6C, 0xEF, 0x6D, 0xC4, 0x67, 0x80, 0x18,
+0x8F, 0x13, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0,
+0x54, 0xA2, 0x01, 0x72, 0x17, 0x61, 0x01, 0x6F,
+0x00, 0x6C, 0xEF, 0x6D, 0xD0, 0x67, 0x00, 0x18,
+0xA0, 0xE7, 0x00, 0x6C, 0x33, 0x6D, 0x26, 0x6E,
+0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C, 0x3E, 0x6D,
+0x37, 0x6E, 0x80, 0x18, 0x8F, 0x13, 0x10, 0xF0,
+0x24, 0x6A, 0x00, 0x6C, 0x3F, 0x6D, 0x5C, 0xF5,
+0xD8, 0x9A, 0x16, 0x10, 0x01, 0x6F, 0x00, 0x6C,
+0xEF, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0xA0, 0xE7,
+0x00, 0x6C, 0x33, 0x6D, 0x26, 0x6E, 0x80, 0x18,
+0x8F, 0x13, 0x00, 0x6C, 0x3E, 0x6D, 0x37, 0x6E,
+0x80, 0x18, 0x8F, 0x13, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF5, 0xDC, 0x9A, 0x00, 0x6C, 0x3F, 0x6D,
+0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C, 0xEF, 0x6D,
+0xD0, 0x67, 0xE4, 0x67, 0x00, 0x18, 0xA0, 0xE7,
+0x16, 0x10, 0x00, 0x6C, 0xEE, 0x6D, 0x02, 0xF0,
+0x00, 0x6E, 0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C,
+0x33, 0x6D, 0x04, 0x6E, 0x80, 0x18, 0x8F, 0x13,
+0x00, 0x6C, 0x3F, 0x6D, 0xC3, 0xF6, 0x01, 0x6E,
+0x80, 0x18, 0x8F, 0x13, 0x00, 0x6C, 0xEE, 0x6D,
+0xC4, 0x67, 0x80, 0x18, 0x8F, 0x13, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x68, 0xFF, 0xF7, 0x1F, 0x69, 0x8C, 0xE8,
+0xAC, 0xE9, 0x90, 0x67, 0xB1, 0x67, 0x0C, 0xD6,
+0x0D, 0xD7, 0x00, 0x18, 0xA0, 0xE7, 0x00, 0x6A,
+0x04, 0xD2, 0x0C, 0x96, 0x90, 0x67, 0xB1, 0x67,
+0x00, 0x18, 0x8D, 0xE7, 0x0D, 0x93, 0x6E, 0xEA,
+0x12, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA, 0x0C, 0x96,
+0x0D, 0x97, 0x90, 0x67, 0xB1, 0x67, 0x00, 0x18,
+0xA0, 0xE7, 0x04, 0x92, 0x01, 0x4A, 0xE0, 0xF3,
+0x08, 0x72, 0x04, 0xD2, 0xE6, 0x61, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x24, 0x67, 0x4C, 0xED, 0x4C, 0xE9,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x40, 0xA2,
+0x04, 0xD5, 0x56, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0x30, 0xF0, 0x20, 0x68, 0x9C, 0xF4, 0x58, 0x9A,
+0xCE, 0xF4, 0x70, 0x98, 0x24, 0x36, 0x01, 0x6D,
+0x4D, 0xEE, 0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED,
+0x40, 0xEB, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
+0xC3, 0xF3, 0x0C, 0x6C, 0xAB, 0xED, 0x1B, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4,
+0x08, 0x4B, 0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9B,
+0x23, 0xF3, 0x00, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0x08, 0x4B,
+0xCE, 0xF4, 0x50, 0x98, 0xA0, 0x9B, 0x23, 0xF3,
+0x08, 0x6C, 0x80, 0x6E, 0x40, 0xEA, 0x04, 0x93,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A,
+0x60, 0x32, 0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF5,
+0x60, 0x9B, 0x58, 0x32, 0x91, 0x67, 0x6D, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0xFC, 0xF4, 0xF8, 0x9B,
+0x78, 0x6D, 0xD0, 0x67, 0x4C, 0xEF, 0x00, 0x18,
+0xA0, 0xE7, 0x91, 0x67, 0x5C, 0x6D, 0xD0, 0x67,
+0x2A, 0xF3, 0x00, 0x6F, 0x00, 0x18, 0xA0, 0xE7,
+0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF4, 0xFC, 0x9A,
+0x91, 0x67, 0x8F, 0x6D, 0xD0, 0x67, 0x00, 0x18,
+0xA0, 0xE7, 0x00, 0x6C, 0xEE, 0x6D, 0x55, 0x10,
+0x10, 0xF0, 0x24, 0x6A, 0x30, 0xF0, 0x20, 0x68,
+0x9C, 0xF4, 0x58, 0x9A, 0xCE, 0xF4, 0x70, 0x98,
+0x24, 0x36, 0x01, 0x6D, 0x4D, 0xEE, 0x03, 0xF3,
+0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEB, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x6D, 0xC3, 0xF3, 0x0C, 0x6C,
+0xAB, 0xED, 0x09, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF4, 0x08, 0x4B, 0xCE, 0xF4,
+0x50, 0x98, 0xA0, 0x9B, 0x23, 0xF3, 0x00, 0x6C,
+0x00, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x48, 0xF0, 0x54, 0xA2, 0x03, 0x22, 0x01, 0x72,
+0x35, 0x60, 0x69, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF4, 0x08, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
+0xA0, 0x9B, 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E,
+0x40, 0xEA, 0x04, 0x93, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF4, 0x14, 0x9A, 0x74, 0x32, 0x10, 0xF0,
+0x24, 0x6B, 0x7C, 0xF5, 0x64, 0x9B, 0x00, 0x6C,
+0x56, 0x6D, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x7C, 0xF5, 0xE8, 0x9B, 0xD0, 0x67, 0x4C, 0xEF,
+0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF5, 0xE8, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x00, 0x6C,
+0xEF, 0x6D, 0x10, 0x6E, 0x01, 0x6F, 0x80, 0x18,
+0xC2, 0x14, 0x00, 0x6C, 0x33, 0x6D, 0x08, 0x6E,
+0xE4, 0x67, 0x33, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF4, 0x08, 0x4B, 0xCE, 0xF4, 0x50, 0x98,
+0xA0, 0x9B, 0x23, 0xF3, 0x08, 0x6C, 0x00, 0x6E,
+0x40, 0xEA, 0x04, 0x93, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF4, 0x14, 0x9A, 0x74, 0x32, 0x10, 0xF0,
+0x24, 0x6B, 0x7C, 0xF5, 0x64, 0x9B, 0x00, 0x6C,
+0x56, 0x6D, 0x6D, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x7C, 0xF5, 0xEC, 0x9B, 0xD0, 0x67, 0x4C, 0xEF,
+0x00, 0x18, 0xA0, 0xE7, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF5, 0xE8, 0x9A, 0x00, 0x6C, 0x8F, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0xA0, 0xE7, 0x00, 0x6C,
+0xEF, 0x6D, 0x10, 0x6E, 0x01, 0x6F, 0x80, 0x18,
+0xC2, 0x14, 0x00, 0x6C, 0x33, 0x6D, 0x08, 0x6E,
+0x01, 0x6F, 0x00, 0x18, 0xA0, 0xE7, 0x04, 0x97,
+0x91, 0x67, 0x33, 0x6D, 0x07, 0x6E, 0x00, 0x18,
+0xA0, 0xE7, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xF9, 0x63, 0x0D, 0x62,
+0x0C, 0xD1, 0x0B, 0xD0, 0x00, 0x6A, 0x7D, 0x67,
+0x4C, 0xCB, 0x2E, 0xF5, 0x10, 0x6A, 0xFF, 0x68,
+0x04, 0xD2, 0x06, 0x02, 0x0C, 0xEC, 0x05, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0x08, 0xD4, 0xDC, 0xF4,
+0xD4, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x08, 0x94,
+0x7C, 0xF5, 0xF0, 0x9A, 0x0C, 0xED, 0x09, 0xD5,
+0x08, 0x6D, 0x00, 0x18, 0xBA, 0xE7, 0x0E, 0x22,
+0x09, 0x92, 0x00, 0x69, 0x12, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF4, 0xBC, 0x9A, 0x03, 0xF3,
+0x08, 0x6C, 0x00, 0x18, 0x42, 0xE7, 0x22, 0x67,
+0x0C, 0xE9, 0x07, 0x10, 0x10, 0xF0, 0x24, 0x6C,
+0xFD, 0xF1, 0x04, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x01, 0x69, 0x08, 0x94, 0x80, 0x18, 0x01, 0x13,
+0x7D, 0x67, 0xAC, 0xAB, 0x10, 0xF0, 0x24, 0x6C,
+0xFD, 0xF1, 0x1C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x51, 0x67, 0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90,
+0x07, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0x24, 0x67,
+0x4C, 0xED, 0x4C, 0xE9, 0x05, 0xD5, 0x06, 0x2D,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0, 0x15, 0xA2,
+0x04, 0x48, 0x22, 0x10, 0x05, 0x92, 0x01, 0x72,
+0x16, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0,
+0x55, 0xA2, 0x02, 0x72, 0x08, 0x61, 0x44, 0x41,
+0x01, 0x68, 0x04, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF5, 0x54, 0x9A, 0x1A, 0x10, 0x44, 0x41,
+0x01, 0x68, 0x04, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF5, 0x58, 0x9A, 0x12, 0x10, 0x05, 0x93,
+0x00, 0x68, 0x02, 0x73, 0x0F, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x48, 0xF0, 0x15, 0xA2, 0x09, 0x48,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x58, 0x9A,
+0x00, 0x30, 0x64, 0x41, 0x4D, 0xE8, 0x01, 0x6A,
+0x44, 0xEB, 0x4D, 0xE8, 0x80, 0x18, 0x82, 0x10,
+0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x50, 0x9C,
+0x01, 0x6D, 0xD0, 0x67, 0x03, 0xF3, 0x00, 0x6C,
+0xAB, 0xED, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x01, 0x6D, 0xC1, 0x40,
+0xAB, 0xED, 0x03, 0xF3, 0x00, 0x6C, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x58, 0x9A,
+0x02, 0x6C, 0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA,
+0x91, 0x67, 0x01, 0x6D, 0x80, 0x18, 0x5B, 0x15,
+0x04, 0xD2, 0xEF, 0xF4, 0x08, 0x48, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF3, 0x48, 0x9A, 0x60, 0xF6,
+0xBC, 0x98, 0x38, 0x6C, 0x40, 0xEA, 0x24, 0x34,
+0x30, 0xF0, 0x20, 0x6A, 0x06, 0xD4, 0xCE, 0xF4,
+0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4,
+0xD8, 0x9A, 0x06, 0x92, 0x01, 0x6D, 0x03, 0xF3,
+0x00, 0x6C, 0xAB, 0xED, 0x4D, 0xEE, 0x40, 0xEB,
+0x05, 0x93, 0x16, 0x2B, 0x04, 0x94, 0x0F, 0x24,
+0x06, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF6,
+0x10, 0x4A, 0x4D, 0xE4, 0x30, 0xF0, 0x20, 0x6C,
+0xCE, 0xF4, 0x50, 0x9C, 0x80, 0xAB, 0x01, 0x6D,
+0x00, 0x6E, 0x40, 0xEA, 0x7C, 0x10, 0x02, 0x6C,
+0xB1, 0x67, 0x80, 0x18, 0x35, 0x13, 0x77, 0x10,
+0x05, 0x92, 0x02, 0x72, 0x62, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF4, 0xD4, 0x9A, 0x91, 0x67,
+0x00, 0x6D, 0x00, 0x18, 0x8D, 0xE7, 0x56, 0x32,
+0xFF, 0x6C, 0x8C, 0xEA, 0x40, 0xF6, 0x9D, 0xA0,
+0x30, 0xF3, 0x60, 0x41, 0x64, 0x33, 0x80, 0x34,
+0x8D, 0xEA, 0x0D, 0xE3, 0x43, 0xCB, 0x30, 0xF0,
+0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF3, 0xD0, 0x9B, 0x01, 0x6D,
+0x23, 0xF3, 0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0x04, 0x94, 0x10, 0x24, 0x06, 0x94, 0x10, 0xF0,
+0x24, 0x6A, 0x5B, 0xF6, 0x10, 0x4A, 0x4D, 0xE4,
+0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x50, 0x9C,
+0x80, 0xAB, 0x01, 0xF4, 0x00, 0x6D, 0x00, 0x6E,
+0x40, 0xEA, 0x2F, 0x10, 0x03, 0x6C, 0xB1, 0x67,
+0x80, 0x18, 0x35, 0x13, 0x2A, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x5B, 0xF6, 0x10, 0x4A, 0x24, 0x33,
+0x4D, 0xE3, 0x01, 0x6D, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x50, 0x9A, 0x80, 0xAB, 0xC5, 0x67,
+0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x5B, 0xF6,
+0x10, 0x4A, 0x24, 0x33, 0x4D, 0xE3, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x80, 0xAB,
+0x01, 0x6D, 0x00, 0x6E, 0x40, 0xEA, 0x7D, 0x67,
+0x87, 0x43, 0x09, 0x4C, 0x30, 0xF0, 0x20, 0x6A,
+0x43, 0xF7, 0x14, 0x49, 0x60, 0xA4, 0x24, 0x31,
+0xC0, 0xF1, 0x08, 0x4A, 0x49, 0xE1, 0x6A, 0xC2,
+0x0C, 0x10, 0x7D, 0x67, 0x87, 0x43, 0x09, 0x4C,
+0x30, 0xF0, 0x20, 0x6A, 0x60, 0xA4, 0x24, 0x31,
+0xC0, 0xF1, 0x08, 0x4A, 0x49, 0xE1, 0xA7, 0xF6,
+0x73, 0xC2, 0x04, 0x92, 0x0B, 0x97, 0x0A, 0x91,
+0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x04, 0x94,
+0xC2, 0x24, 0xCF, 0x17, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x69, 0x8C, 0xE9,
+0x44, 0x41, 0x01, 0x68, 0x04, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF4, 0x58, 0x9A, 0x4D, 0xE8,
+0x80, 0x18, 0x82, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x01, 0x6D, 0xD0, 0x67,
+0x03, 0xF3, 0x00, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
+0x01, 0x6D, 0xC1, 0x40, 0xAB, 0xED, 0x03, 0xF3,
+0x00, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x58, 0x9A, 0x01, 0x6C, 0x40, 0xEA,
+0x91, 0x67, 0x00, 0x6D, 0x80, 0x18, 0x5B, 0x15,
+0x02, 0x67, 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0x70, 0xF3, 0xA4, 0x9B, 0xEE, 0xF3,
+0x48, 0x9A, 0x38, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6C, 0x1D, 0xF2, 0x14, 0x4C, 0x00, 0x6D,
+0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x45, 0xE1, 0x00, 0x6C,
+0xA7, 0xF6, 0x06, 0xC1, 0xE4, 0x67, 0xEF, 0x6D,
+0x10, 0x6E, 0x00, 0x18, 0xA0, 0xE7, 0x50, 0x67,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
+0x4C, 0xED, 0x30, 0xF0, 0x21, 0x6A, 0x50, 0xF3,
+0x45, 0xA2, 0x04, 0xD4, 0x06, 0xD5, 0x09, 0x72,
+0x00, 0x68, 0x0C, 0x60, 0x12, 0x72, 0x01, 0x68,
+0x09, 0x60, 0x1B, 0x72, 0x02, 0x68, 0x06, 0x60,
+0x24, 0x68, 0x4E, 0xE8, 0x01, 0x58, 0x18, 0x67,
+0x04, 0x6A, 0x03, 0xE2, 0x04, 0x92, 0x30, 0xF0,
+0x20, 0x69, 0xCE, 0xF4, 0x70, 0x99, 0x44, 0x36,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF4, 0x58, 0x9A,
+0x01, 0x6D, 0x03, 0xF3, 0x00, 0x6C, 0x4D, 0xEE,
+0xAB, 0xED, 0x40, 0xEB, 0x30, 0xF0, 0x21, 0x6B,
+0x50, 0xF3, 0xC5, 0xA3, 0xCE, 0xF4, 0x50, 0x99,
+0x01, 0x6D, 0xC3, 0xF3, 0x0C, 0x6C, 0xAB, 0xED,
+0x40, 0xEA, 0x06, 0x93, 0x01, 0x73, 0x09, 0x61,
+0x04, 0x92, 0x01, 0x69, 0x04, 0x4A, 0x24, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF5, 0x5C, 0x9A,
+0x08, 0x10, 0x04, 0x92, 0x01, 0x69, 0x04, 0x4A,
+0x24, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5,
+0x40, 0x9A, 0x4D, 0xE9, 0x80, 0x18, 0x82, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
+0x01, 0x6D, 0xD1, 0x67, 0x03, 0xF3, 0x00, 0x6C,
+0xAB, 0xED, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x01, 0x6D, 0xC1, 0x41,
+0xAB, 0xED, 0x03, 0xF3, 0x00, 0x6C, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x58, 0x9A,
+0x02, 0x6C, 0x30, 0xF0, 0x20, 0x69, 0x40, 0xEA,
+0x04, 0x94, 0x01, 0x6D, 0xEF, 0xF4, 0x08, 0x49,
+0x80, 0x18, 0x5B, 0x15, 0x05, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xEE, 0xF3, 0x48, 0x9A, 0x60, 0xF6,
+0xBC, 0x99, 0x38, 0x6C, 0x40, 0xEA, 0x06, 0x92,
+0x02, 0x72, 0x80, 0xF0, 0x02, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0x04, 0x94, 0xDC, 0xF4, 0xD4, 0x9A,
+0x00, 0x6D, 0x00, 0x18, 0x8D, 0xE7, 0xE3, 0xF7,
+0x00, 0x6B, 0x4C, 0xEB, 0x76, 0x32, 0x1F, 0x6B,
+0x6C, 0xEA, 0x02, 0x5A, 0x0D, 0x60, 0x60, 0xF6,
+0x60, 0x99, 0x02, 0x23, 0xFF, 0x4B, 0x15, 0x10,
+0x03, 0x70, 0x01, 0x48, 0x0A, 0x61, 0x01, 0x6B,
+0x60, 0xF6, 0x76, 0xC1, 0x03, 0x68, 0x13, 0x10,
+0x0A, 0x5A, 0x00, 0x6C, 0x11, 0x61, 0x04, 0x20,
+0xFF, 0x48, 0xFF, 0x6B, 0x6C, 0xE8, 0x0B, 0x10,
+0x60, 0xF6, 0x60, 0x99, 0x04, 0x73, 0x04, 0x60,
+0x01, 0x4B, 0x60, 0xF6, 0x60, 0xD9, 0x03, 0x10,
+0x01, 0x6B, 0x60, 0xF6, 0x76, 0xC1, 0x01, 0x6C,
+0x10, 0xF0, 0x24, 0x6D, 0x7B, 0xF6, 0x08, 0x4D,
+0xB5, 0xE0, 0xA0, 0xA5, 0x30, 0xF0, 0x20, 0x6B,
+0xEF, 0xF4, 0x08, 0x4B, 0x03, 0x70, 0x40, 0xF6,
+0xBD, 0xC3, 0x0D, 0x61, 0x01, 0x72, 0x0B, 0x61,
+0x60, 0xF6, 0x40, 0x9B, 0x08, 0x2A, 0x01, 0x6D,
+0x60, 0xF6, 0xB7, 0xC3, 0x60, 0xF6, 0xB6, 0xC3,
+0x1B, 0x6D, 0x40, 0xF6, 0xBD, 0xC3, 0x30, 0xF0,
+0x20, 0x68, 0xEF, 0xF4, 0x08, 0x48, 0x60, 0xF6,
+0x56, 0xA0, 0x01, 0x72, 0x2C, 0x60, 0x2B, 0x24,
+0x04, 0x93, 0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4,
+0x50, 0x99, 0x64, 0x36, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF4, 0x78, 0x9B, 0x01, 0x6D, 0x03, 0xF3,
+0x00, 0x6C, 0x6D, 0xEE, 0xAB, 0xED, 0x40, 0xEA,
+0xCE, 0xF4, 0x30, 0x99, 0x01, 0x6D, 0xAB, 0xED,
+0x04, 0xD1, 0x23, 0xF3, 0x04, 0x69, 0x91, 0x67,
+0x00, 0x18, 0x42, 0xE7, 0x60, 0xF6, 0xC0, 0x98,
+0x07, 0xF4, 0x01, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB,
+0xC0, 0x36, 0x04, 0x92, 0xC8, 0x36, 0x01, 0x6D,
+0x6D, 0xEE, 0x91, 0x67, 0xAB, 0xED, 0x40, 0xEA,
+0x01, 0x6B, 0x05, 0xD3, 0x02, 0x10, 0x00, 0x6A,
+0x05, 0xD2, 0x05, 0x92, 0x0B, 0x97, 0x0A, 0x91,
+0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x04, 0xD2, 0x40, 0xF6, 0x5C, 0xA2, 0x02, 0x68,
+0xFF, 0x69, 0x4E, 0xE8, 0x8C, 0xE9, 0x24, 0x20,
+0x03, 0x5A, 0x03, 0x60, 0x01, 0x72, 0x07, 0x60,
+0x04, 0x10, 0x03, 0x72, 0x37, 0x60, 0x04, 0x72,
+0x50, 0x60, 0x01, 0x6A, 0x76, 0x10, 0x91, 0x67,
+0x80, 0x18, 0xBF, 0x11, 0x91, 0x67, 0x01, 0x6D,
+0x80, 0x18, 0x2D, 0x16, 0x65, 0x22, 0x30, 0xF0,
+0x20, 0x6B, 0x30, 0xF3, 0x84, 0x41, 0x84, 0x34,
+0xEF, 0xF4, 0x08, 0x4B, 0x71, 0xE4, 0xA8, 0xA4,
+0x02, 0x5D, 0x03, 0x60, 0x01, 0x4D, 0xA8, 0xC4,
+0xED, 0x17, 0x65, 0xE1, 0x00, 0x6C, 0x50, 0x10,
+0x91, 0x67, 0x01, 0x6D, 0x80, 0x18, 0xAD, 0x13,
+0x04, 0x93, 0x60, 0xF6, 0x16, 0xC3, 0x91, 0x67,
+0x02, 0x6D, 0x80, 0x18, 0x2D, 0x16, 0x48, 0x22,
+0x30, 0xF0, 0x20, 0x6B, 0x24, 0x34, 0xEF, 0xF4,
+0x08, 0x4B, 0x6D, 0xE4, 0x60, 0xF6, 0x91, 0xA3,
+0x0A, 0x5C, 0x3E, 0x60, 0x01, 0x4C, 0x60, 0xF6,
+0x91, 0xC3, 0xED, 0x17, 0x91, 0x67, 0x80, 0x18,
+0xBF, 0x11, 0x91, 0x67, 0x01, 0x6D, 0x80, 0x18,
+0x7D, 0x15, 0x32, 0x22, 0x03, 0x6C, 0x98, 0xE9,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x12, 0xEC, 0x71, 0xE4, 0x60, 0xF6, 0xAB, 0xA4,
+0x02, 0x5D, 0x04, 0x60, 0x01, 0x4D, 0x60, 0xF6,
+0xAB, 0xC4, 0xEB, 0x17, 0x65, 0xE1, 0x01, 0x6C,
+0x1B, 0x10, 0x91, 0x67, 0x00, 0x6D, 0x80, 0x18,
+0xAD, 0x13, 0x91, 0x67, 0x02, 0x6D, 0x80, 0x18,
+0x7D, 0x15, 0x16, 0x22, 0x03, 0x6C, 0x98, 0xE9,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x12, 0xEC, 0x71, 0xE4, 0x60, 0xF6, 0xAC, 0xA4,
+0x02, 0x5D, 0x04, 0x60, 0x01, 0x4D, 0x60, 0xF6,
+0xAC, 0xC4, 0xEB, 0x17, 0x65, 0xE1, 0x02, 0x6C,
+0x60, 0xF6, 0x94, 0xC1, 0x05, 0x6C, 0x07, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x40, 0xF6, 0x9C, 0xA3, 0x01, 0x4C, 0x40, 0xF6,
+0x9C, 0xC3, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0xFF, 0x69, 0x87, 0xF6,
+0xB4, 0xA0, 0x8C, 0xE9, 0x10, 0xF0, 0x24, 0x6C,
+0x3D, 0xF2, 0x08, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x87, 0xF6, 0x4D, 0xA0, 0x02, 0x72, 0x02, 0x6A,
+0x04, 0xD2, 0x02, 0x60, 0x04, 0x6B, 0x04, 0xD3,
+0x30, 0xF0, 0x20, 0x6A, 0x48, 0xF0, 0xBC, 0xA2,
+0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF2, 0x08, 0x4C,
+0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x68,
+0xC0, 0xF1, 0x08, 0x48, 0x87, 0xF6, 0x54, 0xA0,
+0x02, 0x72, 0x10, 0x60, 0x03, 0x72, 0x31, 0x60,
+0x01, 0x72, 0x00, 0x68, 0x4A, 0x61, 0xB0, 0x67,
+0x00, 0x6C, 0x80, 0x18, 0xDA, 0x14, 0x01, 0x48,
+0x00, 0x6C, 0x80, 0x18, 0x03, 0x16, 0x08, 0x70,
+0xF6, 0x61, 0x19, 0x10, 0x00, 0x6C, 0x80, 0x18,
+0x2E, 0x12, 0x00, 0x6C, 0xA4, 0x67, 0x80, 0x18,
+0x7D, 0x15, 0x87, 0xF6, 0x75, 0xA0, 0x01, 0x4B,
+0x87, 0xF6, 0x75, 0xC0, 0x0C, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x60, 0xF6,
+0x6A, 0xA2, 0x03, 0x5B, 0x04, 0x60, 0x01, 0x4B,
+0x60, 0xF6, 0x6A, 0xC2, 0x26, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x87, 0xF6,
+0x74, 0xA2, 0x01, 0x4B, 0x87, 0xF6, 0x74, 0xC2,
+0x1C, 0x10, 0x00, 0x6C, 0x80, 0x18, 0xB0, 0x16,
+0x30, 0xF0, 0x20, 0x6B, 0xEF, 0xF4, 0x08, 0x4B,
+0x40, 0xF6, 0x5C, 0xA3, 0x05, 0x72, 0xF5, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x87, 0xF6, 0x94, 0xA2, 0x01, 0x4C, 0x87, 0xF6,
+0x94, 0xC2, 0x01, 0x6C, 0x40, 0xF6, 0x9C, 0xC3,
+0x87, 0xF6, 0x75, 0xA2, 0x01, 0x4B, 0x87, 0xF6,
+0x75, 0xC2, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x87, 0xF6, 0x54, 0xA0, 0x04, 0x72,
+0x6B, 0x61, 0xA7, 0xF6, 0xA6, 0xA0, 0x10, 0xF0,
+0x24, 0x6C, 0x3D, 0xF2, 0x1C, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0xA7, 0xF6, 0xB2, 0xA0, 0x10, 0xF0,
+0x24, 0x6C, 0x5D, 0xF2, 0x1C, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0xA7, 0xF6, 0xB3, 0xA0, 0x10, 0xF0,
+0x24, 0x6C, 0x30, 0xF0, 0x20, 0x68, 0xEF, 0xF4,
+0x08, 0x48, 0x7D, 0xF2, 0x18, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x60, 0xF6, 0xAA, 0xA0, 0x10, 0xF0,
+0x24, 0x6C, 0x9D, 0xF2, 0x14, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x60, 0xF6, 0xAB, 0xA0, 0x60, 0xF6,
+0xCC, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF2,
+0x14, 0x4C, 0x80, 0x18, 0x35, 0x19, 0x60, 0xF6,
+0xB1, 0xA0, 0x60, 0xF6, 0xD2, 0xA0, 0x10, 0xF0,
+0x24, 0x6C, 0xFD, 0xF2, 0x08, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x30, 0xF0, 0x20, 0x68, 0x10, 0xF0,
+0x24, 0x6B, 0x9C, 0xF5, 0xC4, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0x69, 0x2B, 0xE9, 0xB1, 0x67,
+0x03, 0xF3, 0x00, 0x6C, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0xB1, 0x67, 0x23, 0xF3, 0x0C, 0x6C,
+0x07, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0xB1, 0x67, 0xC3, 0xF3, 0x0C, 0x6C, 0x00, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3,
+0x10, 0x4B, 0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x9B,
+0xB1, 0x67, 0x23, 0xF3, 0x18, 0x6C, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0x10, 0x4B,
+0xCE, 0xF4, 0x50, 0x98, 0xC0, 0x9B, 0x23, 0xF3,
+0x1C, 0x6C, 0xB1, 0x67, 0x40, 0xEA, 0x09, 0x10,
+0x01, 0x71, 0x3F, 0xF7, 0x13, 0x61, 0x87, 0xF6,
+0x55, 0xA0, 0x04, 0x93, 0x6E, 0xEA, 0x3F, 0xF7,
+0x0D, 0x2A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0x30, 0xF0, 0x20, 0x68, 0x9C, 0xF4, 0xD8, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0xFF, 0x69, 0x01, 0x6D,
+0xAB, 0xED, 0x8C, 0xE9, 0x03, 0xF3, 0x00, 0x6C,
+0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
+0xA3, 0xF3, 0x18, 0x6C, 0xAB, 0xED, 0x00, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3,
+0x40, 0xA2, 0x11, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF4, 0x14, 0x9A, 0x00, 0x6C, 0x01, 0x6D,
+0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7, 0x2E, 0x6B,
+0x6B, 0xEB, 0x4C, 0xEB, 0x00, 0x6C, 0x01, 0x6D,
+0xD0, 0x67, 0x25, 0x6F, 0x10, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF4, 0x14, 0x9A, 0x00, 0x6C,
+0x01, 0x6D, 0xD0, 0x67, 0x00, 0x18, 0x8D, 0xE7,
+0x2E, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB, 0x00, 0x6C,
+0x01, 0x6D, 0xD0, 0x67, 0x05, 0x6F, 0x6D, 0xEF,
+0x00, 0x18, 0xA0, 0xE7, 0x91, 0x67, 0x80, 0x18,
+0xFB, 0x16, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xF2, 0x63, 0x1B, 0x62,
+0x1A, 0xD1, 0x19, 0xD0, 0x88, 0xA4, 0x02, 0x6A,
+0x30, 0xF0, 0x20, 0x68, 0x8C, 0xEA, 0x46, 0x32,
+0x16, 0xD4, 0x17, 0xD2, 0x80, 0x18, 0x7C, 0x11,
+0x80, 0x18, 0x1A, 0x13, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0xB0, 0x9A, 0xA1, 0xF4, 0x18, 0x6C,
+0xEF, 0xF4, 0x08, 0x48, 0x00, 0x18, 0x42, 0xE7,
+0x60, 0xF6, 0x58, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF3, 0x5C, 0x9A, 0x38, 0x6C, 0x01, 0x69,
+0x40, 0xEA, 0x16, 0x94, 0x00, 0x6D, 0x60, 0xF6,
+0x5C, 0xD8, 0x2C, 0xEC, 0x00, 0x18, 0xC0, 0xD5,
+0x16, 0xD2, 0x72, 0x2A, 0x10, 0xF0, 0x24, 0x6C,
+0x1D, 0xF3, 0x1C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x28, 0xF1, 0x6C, 0xA2, 0x9D, 0x67, 0x87, 0xF6,
+0x34, 0xC2, 0x01, 0x4B, 0x28, 0xF1, 0x6C, 0xC2,
+0x67, 0x44, 0x51, 0x4B, 0x80, 0xA3, 0x28, 0xF1,
+0x2E, 0xC2, 0x40, 0xF6, 0x3C, 0xC0, 0x87, 0xF6,
+0x95, 0xC2, 0x00, 0x6C, 0xA4, 0x67, 0x80, 0x18,
+0x35, 0x13, 0x30, 0xF0, 0x20, 0x6E, 0x30, 0xF0,
+0x20, 0x6F, 0x04, 0x04, 0x0A, 0x05, 0x6F, 0xF0,
+0x0C, 0x4E, 0x6F, 0xF0, 0x14, 0x4F, 0x80, 0x18,
+0x1C, 0x11, 0x30, 0xF0, 0x20, 0x6D, 0x05, 0x04,
+0x8F, 0xF0, 0x0C, 0x4D, 0x80, 0x18, 0x81, 0x13,
+0x80, 0x18, 0xC8, 0x10, 0x01, 0x6C, 0x80, 0x18,
+0xBF, 0x12, 0x00, 0x6C, 0x80, 0x18, 0xF8, 0x10,
+0x80, 0x18, 0x8E, 0x10, 0x80, 0x18, 0x63, 0x14,
+0x17, 0x94, 0x80, 0x18, 0x79, 0x17, 0x00, 0x6C,
+0x80, 0x18, 0xBF, 0x12, 0x30, 0xF0, 0x20, 0x6E,
+0x30, 0xF0, 0x20, 0x6F, 0x04, 0x04, 0x0A, 0x05,
+0x6F, 0xF0, 0x0C, 0x4E, 0x6F, 0xF0, 0x14, 0x4F,
+0x80, 0x18, 0xAA, 0x10, 0x30, 0xF0, 0x20, 0x6C,
+0x8F, 0xF0, 0x0C, 0x4C, 0x05, 0x05, 0x80, 0x18,
+0x42, 0x14, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x87, 0xF6, 0x74, 0xA2, 0x04, 0x73,
+0x0A, 0x60, 0x00, 0x6B, 0x87, 0xF6, 0x75, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x58, 0x9A,
+0x32, 0x6C, 0x40, 0xEA, 0xC9, 0x17, 0x17, 0x92,
+0x04, 0x22, 0x00, 0x6C, 0x01, 0x6D, 0x00, 0x18,
+0x4F, 0xD5, 0x00, 0x6C, 0x00, 0x18, 0x1A, 0xD5,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xD4, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0xE8, 0x9A,
+0x00, 0x6C, 0x08, 0x6D, 0x00, 0x18, 0xA0, 0xE7,
+0x1B, 0x97, 0x1A, 0x91, 0x19, 0x90, 0x00, 0x6A,
+0x0E, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x6A, 0x10, 0xF0, 0x24, 0x6B, 0x9C, 0xF5,
+0x6C, 0x9B, 0x54, 0x34, 0x01, 0x4A, 0x71, 0xE4,
+0xA0, 0xA4, 0xF8, 0x6B, 0xAC, 0xEB, 0x60, 0xC4,
+0xFF, 0x6B, 0x6C, 0xEA, 0x80, 0x72, 0xF1, 0x61,
+0x80, 0x18, 0xCC, 0x0F, 0x80, 0x18, 0xD2, 0x0F,
+0x80, 0x18, 0xC0, 0x24, 0x80, 0x18, 0xD5, 0x1B,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0xD1, 0x08, 0xD0, 0x0A, 0xD4,
+0x44, 0x67, 0x82, 0x10, 0x25, 0x73, 0x04, 0x60,
+0x60, 0xA5, 0x60, 0xC2, 0x01, 0x4A, 0x7B, 0x10,
+0x61, 0x85, 0x62, 0x73, 0x7D, 0x67, 0x20, 0x61,
+0x62, 0x85, 0x78, 0x73, 0x03, 0x60, 0x58, 0x73,
+0x7D, 0x67, 0x1A, 0x61, 0x82, 0x85, 0x60, 0xA6,
+0x78, 0x6F, 0xEE, 0xEC, 0x10, 0xF0, 0x24, 0x6F,
+0x72, 0x30, 0x3D, 0xF3, 0x10, 0x4F, 0xE1, 0xE0,
+0x00, 0xA0, 0x01, 0x5C, 0x98, 0x67, 0x94, 0x34,
+0x8D, 0xE8, 0x3D, 0x67, 0x00, 0xC1, 0x0F, 0x68,
+0x6C, 0xE8, 0xFD, 0xE0, 0x60, 0xA7, 0x02, 0x4D,
+0x8D, 0xEB, 0x61, 0xC1, 0x00, 0xF0, 0x02, 0x03,
+0x81, 0x85, 0x77, 0x74, 0x26, 0x61, 0x82, 0x85,
+0x78, 0x74, 0x02, 0x60, 0x58, 0x74, 0x21, 0x61,
+0x80, 0xAE, 0x06, 0xD3, 0x07, 0xD4, 0x82, 0x85,
+0x78, 0x74, 0xF8, 0x67, 0x01, 0x5F, 0x18, 0x67,
+0x14, 0x30, 0x18, 0x65, 0x0C, 0x6C, 0x07, 0x97,
+0x0F, 0x68, 0x10, 0xF0, 0x24, 0x69, 0xE7, 0xEC,
+0x0C, 0xEF, 0x3D, 0xF3, 0x10, 0x49, 0x3D, 0xE7,
+0xE0, 0xA7, 0x06, 0x90, 0x38, 0x67, 0x2D, 0xEF,
+0xFC, 0x4C, 0xE0, 0xC0, 0x01, 0x48, 0xE4, 0x44,
+0x06, 0xD0, 0xED, 0x2F, 0x04, 0x4B, 0x02, 0x4D,
+0x25, 0x10, 0x81, 0x85, 0x78, 0x74, 0x02, 0x60,
+0x58, 0x74, 0x20, 0x61, 0x81, 0x85, 0x20, 0x9E,
+0x06, 0xD3, 0x78, 0x74, 0x98, 0x67, 0x01, 0x5C,
+0xF8, 0x67, 0xF4, 0x37, 0x07, 0xD1, 0x1F, 0x65,
+0x1C, 0x6C, 0x07, 0x97, 0x0F, 0x68, 0x10, 0xF0,
+0x24, 0x69, 0xE6, 0xEC, 0x0C, 0xEF, 0x3D, 0xF3,
+0x10, 0x49, 0x3D, 0xE7, 0xE0, 0xA7, 0x06, 0x91,
+0x18, 0x67, 0x0D, 0xEF, 0xFC, 0x4C, 0xE0, 0xC1,
+0x01, 0x49, 0xE4, 0x44, 0x06, 0xD1, 0xED, 0x2F,
+0x08, 0x4B, 0x01, 0x4D, 0x9D, 0x67, 0x04, 0x10,
+0xE0, 0xA4, 0x01, 0x4C, 0xE0, 0xC2, 0x01, 0x4A,
+0x63, 0xEC, 0xFA, 0x61, 0x04, 0x4E, 0x01, 0x4D,
+0x60, 0x85, 0x7F, 0xF7, 0x1B, 0x2B, 0x0A, 0x94,
+0x01, 0x24, 0x60, 0xC2, 0x0A, 0x97, 0x09, 0x91,
+0x08, 0x90, 0xEB, 0xE2, 0x05, 0x63, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0x01, 0x6B, 0xEF, 0xF4,
+0x08, 0x4A, 0x6B, 0xEB, 0x40, 0xF6, 0x74, 0xC2,
+0x40, 0xF6, 0x75, 0xC2, 0x40, 0xF6, 0x76, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD0, 0x60, 0xA4, 0x41, 0xA4, 0x82, 0xA4,
+0x00, 0xF0, 0x12, 0x06, 0x00, 0xF0, 0x1E, 0x07,
+0x00, 0x6D, 0xA0, 0xC6, 0x01, 0x4E, 0xA6, 0x67,
+0xEE, 0xED, 0xFA, 0x2D, 0x01, 0x6E, 0xE4, 0x67,
+0xCC, 0xEF, 0x1D, 0x27, 0x81, 0x5B, 0x1B, 0x61,
+0x81, 0x5A, 0x19, 0x61, 0x5D, 0x67, 0xD2, 0xC2,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x87, 0xF1, 0x68, 0x9A, 0x9D, 0x67, 0xDD, 0x67,
+0x73, 0xC4, 0x62, 0x34, 0x00, 0xF6, 0x62, 0x33,
+0x76, 0xC6, 0x0D, 0x6B, 0x94, 0xC6, 0x70, 0xC6,
+0x82, 0x34, 0x05, 0x6B, 0x95, 0xC6, 0x6F, 0xCE,
+0x87, 0xF1, 0xA8, 0xDA, 0xA0, 0x10, 0x02, 0x6E,
+0xA4, 0x67, 0xCC, 0xED, 0x44, 0x25, 0xFD, 0x67,
+0x81, 0x5B, 0xD2, 0xC7, 0x18, 0x60, 0x43, 0xF5,
+0xA4, 0x43, 0x30, 0xF0, 0x20, 0x6C, 0xC3, 0xF4,
+0x04, 0x4B, 0xC0, 0xF1, 0x08, 0x4C, 0x64, 0x33,
+0xA4, 0x35, 0x95, 0xE5, 0x91, 0xE3, 0x62, 0xAC,
+0xC2, 0xAD, 0x75, 0xC7, 0x62, 0x33, 0xD3, 0xC7,
+0x76, 0xC7, 0xC2, 0x36, 0x00, 0x6B, 0x62, 0xCD,
+0xD4, 0xC7, 0x62, 0xCC, 0x04, 0x10, 0x16, 0x6B,
+0x6B, 0xEB, 0x1D, 0x67, 0x73, 0xC0, 0x81, 0x5A,
+0x19, 0x60, 0x43, 0xF5, 0x84, 0x42, 0x30, 0xF0,
+0x20, 0x6B, 0xC3, 0xF4, 0x04, 0x4A, 0xC0, 0xF1,
+0x08, 0x4B, 0x44, 0x32, 0x84, 0x34, 0x71, 0xE4,
+0x6D, 0xE2, 0x42, 0xAB, 0xA2, 0xAC, 0xDD, 0x67,
+0x59, 0xC6, 0x42, 0x32, 0xB7, 0xC6, 0x5A, 0xC6,
+0xA2, 0x35, 0x00, 0x6A, 0x42, 0xCC, 0xB8, 0xC6,
+0x42, 0xCB, 0x04, 0x10, 0x16, 0x6A, 0x4B, 0xEA,
+0xFD, 0x67, 0x57, 0xC7, 0x0D, 0x6A, 0x1D, 0x67,
+0x50, 0xC0, 0x09, 0x6A, 0x52, 0x10, 0x53, 0x2C,
+0x81, 0x5B, 0x22, 0x60, 0xBD, 0x67, 0x72, 0xC5,
+0xC3, 0xF3, 0xC4, 0x43, 0x30, 0xF0, 0x20, 0x6D,
+0xC0, 0xF1, 0x08, 0x4D, 0xC4, 0x36, 0xB9, 0xE6,
+0xE0, 0xAE, 0x1D, 0x67, 0xF3, 0xC0, 0xE2, 0x37,
+0xF4, 0xC0, 0x43, 0xF4, 0xE4, 0x43, 0xE4, 0x37,
+0xB5, 0xE7, 0xE0, 0xAD, 0x74, 0x33, 0xF5, 0xC0,
+0xE2, 0x37, 0xF6, 0xC0, 0x10, 0xF0, 0x24, 0x6F,
+0x9C, 0xF5, 0xF0, 0x9F, 0xED, 0xE3, 0x60, 0xA3,
+0x80, 0xCE, 0x80, 0xCD, 0x77, 0xC0, 0x02, 0x10,
+0x9D, 0x67, 0x72, 0xC4, 0x81, 0x5A, 0x23, 0x60,
+0xC3, 0xF3, 0x84, 0x42, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x84, 0x34, 0x71, 0xE4,
+0xBD, 0x67, 0x58, 0xC5, 0xA0, 0xAC, 0xDD, 0x67,
+0xB9, 0xC6, 0xA2, 0x35, 0xBA, 0xC6, 0x43, 0xF4,
+0xA4, 0x42, 0xA4, 0x35, 0x6D, 0xE5, 0xA0, 0xAB,
+0x54, 0x32, 0xBB, 0xC6, 0xA2, 0x35, 0xBC, 0xC6,
+0x10, 0xF0, 0x24, 0x6D, 0x9C, 0xF5, 0xB0, 0x9D,
+0xA9, 0xE2, 0x40, 0xA2, 0x5D, 0xC6, 0x00, 0x6A,
+0x40, 0xCC, 0x40, 0xCB, 0x02, 0x10, 0xFD, 0x67,
+0x58, 0xC7, 0x04, 0x6A, 0x1D, 0x67, 0x50, 0xC0,
+0x0C, 0x6A, 0x4F, 0xC8, 0x04, 0x10, 0x7D, 0x67,
+0x04, 0x6A, 0x50, 0xC3, 0xAF, 0xCB, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A, 0x04, 0x04,
+0x40, 0xEA, 0x09, 0x97, 0x08, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xC5, 0xF6, 0x71, 0xC2, 0x61, 0xA4,
+0x65, 0xF4, 0x6A, 0xC2, 0x62, 0xA4, 0xC5, 0xF6,
+0x70, 0xC2, 0xA3, 0xA4, 0x0F, 0x6B, 0xAC, 0xEB,
+0xC5, 0xF6, 0x74, 0xC2, 0x63, 0xA4, 0x72, 0x33,
+0xC5, 0xF6, 0x75, 0xC2, 0x80, 0x18, 0x4A, 0x2A,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x68, 0xA4, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC5, 0xF6,
+0x71, 0xC2, 0x69, 0xA4, 0x65, 0xF4, 0x6A, 0xC2,
+0x6A, 0xA4, 0xC5, 0xF6, 0x70, 0xC2, 0xAB, 0xA4,
+0x0F, 0x6B, 0xAC, 0xEB, 0xC5, 0xF6, 0x74, 0xC2,
+0x6B, 0xA4, 0x72, 0x33, 0xC5, 0xF6, 0x75, 0xC2,
+0x80, 0x18, 0x4A, 0x2A, 0x05, 0x97, 0x00, 0x6A,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x0E, 0x72, 0x03, 0x60,
+0x11, 0x72, 0x05, 0x60, 0x08, 0x10, 0x85, 0x67,
+0x80, 0x18, 0x9F, 0x17, 0x10, 0x10, 0x85, 0x67,
+0x80, 0x18, 0xD4, 0x18, 0x0C, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x6C, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x5C, 0xF3, 0x94, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0xFF, 0x6A, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xF8, 0x63, 0x0F, 0x62,
+0x0E, 0xD1, 0x0D, 0xD0, 0x00, 0x6A, 0x10, 0xD4,
+0x01, 0x68, 0x62, 0x67, 0xA0, 0xA4, 0x0E, 0x25,
+0xFF, 0x6D, 0x01, 0x4B, 0xAC, 0xEB, 0x01, 0x4A,
+0x0B, 0x73, 0xAC, 0xEA, 0x03, 0x61, 0x01, 0x48,
+0xAC, 0xE8, 0x00, 0x6B, 0x37, 0x72, 0x01, 0x4C,
+0xF1, 0x61, 0x37, 0x6A, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xE5, 0xF2, 0x97, 0xA3,
+0x0F, 0x5C, 0x01, 0x4C, 0x01, 0x61, 0x00, 0x6C,
+0xE5, 0xF2, 0x97, 0xC3, 0x30, 0xF0, 0x20, 0x6B,
+0xA5, 0xF4, 0x7F, 0xA3, 0x0B, 0x6D, 0x2F, 0x40,
+0x70, 0x33, 0x0A, 0xD3, 0x0A, 0x94, 0xFF, 0x6B,
+0x6C, 0xE9, 0x6C, 0xEC, 0x0A, 0xD4, 0x01, 0x6C,
+0x13, 0xE4, 0xB8, 0xEC, 0x12, 0xEC, 0x91, 0xE2,
+0x6C, 0xEC, 0x09, 0xD4, 0x00, 0x6A, 0x01, 0x4C,
+0x0B, 0xD4, 0x08, 0xD2, 0x3C, 0x10, 0x08, 0x94,
+0x0B, 0x6B, 0x0A, 0x95, 0x78, 0xEC, 0x9D, 0x67,
+0x12, 0xEB, 0x4C, 0xEB, 0x0F, 0x6A, 0x2C, 0xEA,
+0xAD, 0xEA, 0x08, 0x95, 0x52, 0xC4, 0x4F, 0x40,
+0xAE, 0xEA, 0x07, 0x22, 0x10, 0x92, 0x00, 0xF0,
+0x1E, 0x04, 0x6D, 0xE2, 0x00, 0xF0, 0x13, 0x02,
+0x0F, 0x10, 0x10, 0x94, 0x09, 0x95, 0x00, 0xF0,
+0x13, 0x02, 0x6D, 0xE4, 0xB1, 0xE2, 0x04, 0x10,
+0xA0, 0xA3, 0x01, 0x4B, 0xA0, 0xC2, 0x01, 0x4A,
+0x8A, 0xEA, 0xFA, 0x61, 0x0B, 0x92, 0x07, 0x10,
+0xA0, 0xA3, 0x01, 0x4B, 0xA0, 0xC2, 0x01, 0x4A,
+0x8A, 0xEA, 0xFA, 0x61, 0x0C, 0x6A, 0x9D, 0x67,
+0x00, 0x6B, 0x4F, 0xCC, 0x70, 0xC4, 0x05, 0x95,
+0x04, 0x94, 0x06, 0x96, 0x07, 0x97, 0xFF, 0x49,
+0x80, 0x18, 0x47, 0x10, 0x08, 0x95, 0xFF, 0x6A,
+0x4C, 0xE9, 0x01, 0x4D, 0x08, 0xD5, 0x08, 0x93,
+0xFF, 0x6A, 0x4C, 0xEB, 0x03, 0xEB, 0xBF, 0x61,
+0x0F, 0x97, 0x0E, 0x91, 0x0D, 0x90, 0x08, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x6A, 0xC5, 0xF4,
+0x40, 0xAA, 0x07, 0xD5, 0x08, 0xD6, 0x01, 0x72,
+0x09, 0xD7, 0x06, 0xD4, 0x0C, 0x61, 0x30, 0xF0,
+0x21, 0x68, 0x06, 0x95, 0xB0, 0xF3, 0x10, 0x48,
+0x90, 0x67, 0x07, 0x06, 0x80, 0x18, 0x06, 0x18,
+0x90, 0x67, 0x80, 0x18, 0xF3, 0x18, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x60, 0xA4, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE5, 0xF2,
+0x73, 0xC2, 0xA1, 0xA4, 0x03, 0x73, 0xE5, 0xF2,
+0xB4, 0xC2, 0x1C, 0x61, 0x62, 0xA4, 0xE5, 0xF2,
+0x70, 0xC2, 0x63, 0xA4, 0xE5, 0xF2, 0x71, 0xC2,
+0x64, 0xA4, 0x65, 0xF4, 0x80, 0x9A, 0xE5, 0xF2,
+0x72, 0xC2, 0x04, 0xF0, 0x00, 0x6B, 0x8C, 0xEB,
+0x29, 0x23, 0xE5, 0xF2, 0xB0, 0xA2, 0xE5, 0xF2,
+0xD1, 0xA2, 0xE5, 0xF2, 0xF2, 0xA2, 0x10, 0xF0,
+0x24, 0x6C, 0x5D, 0xF3, 0x04, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x1C, 0x10, 0x02, 0x73, 0x1A, 0x61,
+0x62, 0xA4, 0xE5, 0xF2, 0x70, 0xC2, 0x63, 0xA4,
+0x65, 0xF4, 0x80, 0x9A, 0xE5, 0xF2, 0x71, 0xC2,
+0x01, 0x6B, 0x6B, 0xEB, 0xE5, 0xF2, 0x72, 0xC2,
+0x04, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x0A, 0x23,
+0xE5, 0xF2, 0xB0, 0xA2, 0xE5, 0xF2, 0xD1, 0xA2,
+0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF3, 0x14, 0x4C,
+0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6A,
+0x05, 0x97, 0xC0, 0xF1, 0x08, 0x4A, 0x01, 0x6B,
+0xE5, 0xF2, 0x76, 0xC2, 0x00, 0x6B, 0xE5, 0xF2,
+0x75, 0xC2, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xF3, 0x63, 0x19, 0x62, 0x18, 0xD1, 0x17, 0xD0,
+0xFF, 0x6A, 0x8C, 0xEA, 0x14, 0xD2, 0x40, 0xF0,
+0x06, 0x03, 0x20, 0xF0, 0x1A, 0x02, 0x00, 0x6C,
+0x80, 0xC2, 0x01, 0x4A, 0x6A, 0xEA, 0xFB, 0x61,
+0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF3, 0x1C, 0x4B,
+0x00, 0x68, 0x12, 0xD3, 0x13, 0xD0, 0x65, 0x10,
+0x12, 0x93, 0x20, 0xA3, 0xFF, 0x71, 0x0A, 0x61,
+0x7D, 0x67, 0x09, 0xE3, 0x01, 0x6B, 0x6B, 0xEB,
+0x20, 0xF0, 0x7A, 0xC2, 0x01, 0x48, 0xFF, 0x6A,
+0x4C, 0xE8, 0x5B, 0x10, 0x52, 0x6A, 0x58, 0xE9,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0x04, 0x11, 0xE4,
+0x60, 0xF2, 0x08, 0x4B, 0x22, 0xC4, 0x03, 0x6D,
+0x04, 0x48, 0x12, 0xEA, 0x49, 0xE3, 0x76, 0xAA,
+0x63, 0xC4, 0x63, 0xA2, 0x64, 0xC4, 0x20, 0xF0,
+0x65, 0xA2, 0x6A, 0x33, 0xAC, 0xEB, 0x30, 0xF0,
+0x20, 0x6D, 0x25, 0xF6, 0xA8, 0x9D, 0x65, 0xC4,
+0xFF, 0x6C, 0x8C, 0xE8, 0x07, 0xF7, 0x01, 0x4C,
+0xAC, 0xEC, 0x0A, 0x24, 0xD6, 0xAA, 0xE3, 0xA2,
+0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF3, 0x18, 0x4C,
+0xB1, 0x67, 0x04, 0xD3, 0x80, 0x18, 0x35, 0x19,
+0x14, 0x93, 0x02, 0x6A, 0x4E, 0xEB, 0x21, 0x2B,
+0x30, 0xF0, 0x20, 0x6A, 0x2C, 0x34, 0x2F, 0xF7,
+0x1C, 0x4A, 0x89, 0xE2, 0xA3, 0xAA, 0x0E, 0x04,
+0x11, 0xE4, 0xA2, 0xC4, 0xA3, 0xAA, 0x02, 0x48,
+0xA2, 0x35, 0xA3, 0xC4, 0x63, 0xCA, 0x30, 0xF0,
+0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0xFF, 0x6A,
+0x4C, 0xE8, 0x07, 0xF7, 0x01, 0x4A, 0x6C, 0xEA,
+0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF3,
+0x1C, 0x4C, 0xB1, 0x67, 0x00, 0x6E, 0x80, 0x18,
+0x35, 0x19, 0x13, 0x93, 0xFF, 0x6A, 0x01, 0x4B,
+0x4C, 0xEB, 0x12, 0x92, 0x13, 0xD3, 0x01, 0x4A,
+0x12, 0xD2, 0x13, 0x93, 0x14, 0x92, 0x43, 0xEB,
+0x97, 0x61, 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6,
+0x68, 0x9B, 0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA,
+0x28, 0x22, 0x7D, 0x67, 0x20, 0xF0, 0x5D, 0xA3,
+0x20, 0xF0, 0xBA, 0xA3, 0x20, 0xF0, 0xDB, 0xA3,
+0x20, 0xF0, 0xFC, 0xA3, 0x04, 0xD2, 0x20, 0xF0,
+0x5E, 0xA3, 0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF3,
+0x14, 0x4C, 0x05, 0xD2, 0x20, 0xF0, 0x5F, 0xA3,
+0x06, 0xD2, 0x40, 0xF0, 0x40, 0xA3, 0x07, 0xD2,
+0x40, 0xF0, 0x41, 0xA3, 0x08, 0xD2, 0x40, 0xF0,
+0x42, 0xA3, 0x09, 0xD2, 0x40, 0xF0, 0x43, 0xA3,
+0x0A, 0xD2, 0x40, 0xF0, 0x44, 0xA3, 0x0B, 0xD2,
+0x40, 0xF0, 0x45, 0xA3, 0x0C, 0xD2, 0x80, 0x18,
+0x35, 0x19, 0x7D, 0x67, 0x2C, 0x6A, 0x40, 0xF0,
+0x06, 0xCB, 0x20, 0xF0, 0x58, 0xC3, 0x11, 0x97,
+0x0E, 0x94, 0x0F, 0x95, 0x10, 0x96, 0x80, 0x18,
+0x47, 0x10, 0x19, 0x97, 0x18, 0x91, 0x17, 0x90,
+0x0D, 0x63, 0x00, 0xEF, 0xF9, 0x63, 0x0D, 0x62,
+0x0C, 0xD1, 0x0B, 0xD0, 0x43, 0xA4, 0x62, 0xA4,
+0xC0, 0xA4, 0x40, 0x32, 0x40, 0x32, 0x60, 0x33,
+0x4D, 0xE3, 0x41, 0xA4, 0x0F, 0x6D, 0xCC, 0xED,
+0x4D, 0xE3, 0x44, 0xA4, 0xD2, 0x36, 0x01, 0x5E,
+0x00, 0xF6, 0x40, 0x32, 0x49, 0xE3, 0x08, 0xD2,
+0xB4, 0x32, 0x06, 0xD2, 0x06, 0x93, 0xFF, 0x6A,
+0x4C, 0xEB, 0x06, 0xD3, 0x03, 0x6A, 0x78, 0x67,
+0x6F, 0xE2, 0x07, 0xD3, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x68, 0x9B, 0xE7, 0xF7, 0x1D, 0x4A,
+0x6C, 0xEA, 0x07, 0x22, 0x08, 0x97, 0x10, 0xF0,
+0x24, 0x6C, 0x1D, 0xF4, 0x10, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x80, 0x18, 0x50, 0x18, 0x00, 0x68,
+0x06, 0x91, 0x4A, 0x10, 0x08, 0x93, 0x01, 0x6A,
+0x44, 0xE9, 0x6C, 0xEA, 0x1A, 0x22, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x30, 0xF0,
+0x20, 0x6B, 0x49, 0xE0, 0x25, 0xF6, 0x68, 0x9B,
+0x40, 0xF6, 0x34, 0xC2, 0x01, 0x48, 0xFF, 0x6A,
+0x4C, 0xE8, 0x07, 0xF7, 0x01, 0x4A, 0x6C, 0xEA,
+0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF4,
+0x18, 0x4C, 0xB0, 0x67, 0xD1, 0x67, 0x80, 0x18,
+0x35, 0x19, 0x07, 0x92, 0x4A, 0xE8, 0x04, 0x60,
+0x06, 0x92, 0x1F, 0x4A, 0x2E, 0xEA, 0x21, 0x2A,
+0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
+0x08, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x12, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x40, 0xF6, 0xD4, 0xA2, 0x40, 0xF6, 0xF5, 0xA2,
+0x40, 0xF6, 0x56, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
+0x5D, 0xF4, 0x18, 0x4C, 0xB0, 0x67, 0x04, 0xD2,
+0x80, 0x18, 0x35, 0x19, 0x0D, 0x20, 0x07, 0x94,
+0x00, 0x68, 0x80, 0x18, 0x6E, 0x19, 0x80, 0x18,
+0x50, 0x18, 0x01, 0x49, 0xFF, 0x6A, 0x4C, 0xE9,
+0x06, 0x92, 0x20, 0x4A, 0x42, 0xE9, 0xB2, 0x61,
+0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xF6, 0x63, 0x13, 0x62,
+0x12, 0xD1, 0x11, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0xFF, 0x6A, 0x8C, 0xEA, 0xBB, 0xF6, 0x94, 0x9B,
+0xBB, 0xF6, 0x14, 0x4B, 0x08, 0x72, 0x04, 0xD4,
+0x81, 0x9B, 0x68, 0xA3, 0x05, 0xD4, 0x9D, 0x67,
+0x78, 0xC4, 0x10, 0xF0, 0x24, 0x6B, 0xBB, 0xF6,
+0x88, 0x9B, 0xBB, 0xF6, 0x08, 0x4B, 0x07, 0xD4,
+0x81, 0x9B, 0x68, 0xA3, 0x08, 0xD4, 0x9D, 0x67,
+0x20, 0xF0, 0x64, 0xC4, 0x37, 0x61, 0x20, 0xF0,
+0x05, 0x02, 0x07, 0x00, 0x04, 0x01, 0x0E, 0xD2,
+0x40, 0xA0, 0x0B, 0x5A, 0x01, 0x61, 0x0A, 0x6A,
+0xFF, 0x6B, 0x4C, 0xEB, 0x9D, 0x67, 0x42, 0x43,
+0x5B, 0xCC, 0x0E, 0x6A, 0x20, 0xF0, 0x48, 0xC4,
+0x08, 0x6A, 0x20, 0xF0, 0x4A, 0xC4, 0x40, 0xA1,
+0x20, 0xF0, 0x4B, 0xC4, 0x00, 0x6A, 0x0E, 0x10,
+0x9D, 0x67, 0x55, 0xE4, 0xC0, 0xA1, 0x30, 0xF0,
+0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x91, 0xE2,
+0xD1, 0xE4, 0x45, 0xF2, 0x88, 0xA4, 0x01, 0x4A,
+0x20, 0xF0, 0x8C, 0xC5, 0xFF, 0x6C, 0x4C, 0xEC,
+0x63, 0xEC, 0xEE, 0x61, 0x0A, 0x94, 0x0B, 0x95,
+0x0C, 0x96, 0x0D, 0x97, 0x01, 0x48, 0x01, 0x49,
+0x80, 0x18, 0x47, 0x10, 0x0E, 0x92, 0x4A, 0xE8,
+0xCF, 0x61, 0x38, 0x10, 0x09, 0x72, 0x36, 0x61,
+0x20, 0xF0, 0x05, 0x04, 0x07, 0x00, 0x04, 0x01,
+0x0F, 0xD4, 0x40, 0xA0, 0x0B, 0x5A, 0x01, 0x61,
+0x0A, 0x6A, 0xFF, 0x6B, 0x4C, 0xEB, 0x9D, 0x67,
+0x42, 0x43, 0x5B, 0xCC, 0x0E, 0x6A, 0x20, 0xF0,
+0x48, 0xC4, 0x09, 0x6A, 0x20, 0xF0, 0x4A, 0xC4,
+0x40, 0xA1, 0x20, 0xF0, 0x4B, 0xC4, 0x00, 0x6A,
+0x0E, 0x10, 0x9D, 0x67, 0x55, 0xE4, 0xC0, 0xA1,
+0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
+0x91, 0xE2, 0xD1, 0xE4, 0x85, 0xF2, 0x9C, 0xA4,
+0x01, 0x4A, 0x20, 0xF0, 0x8C, 0xC5, 0xFF, 0x6C,
+0x4C, 0xEC, 0x63, 0xEC, 0xEE, 0x61, 0x0A, 0x94,
+0x0B, 0x95, 0x0C, 0x96, 0x0D, 0x97, 0x01, 0x48,
+0x01, 0x49, 0x80, 0x18, 0x47, 0x10, 0x0F, 0x92,
+0x4A, 0xE8, 0xCF, 0x61, 0x13, 0x97, 0x12, 0x91,
+0x11, 0x90, 0x0A, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x44, 0x67, 0x65, 0xA2, 0x02, 0x6D, 0x81, 0xA4,
+0xAC, 0xEB, 0x03, 0x23, 0x80, 0x18, 0x13, 0x1A,
+0x34, 0x10, 0x04, 0xA2, 0x22, 0xA2, 0x43, 0xA2,
+0x10, 0x30, 0x08, 0x74, 0x4D, 0xE8, 0x0E, 0x61,
+0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF4, 0x00, 0x4C,
+0x80, 0x18, 0xF3, 0x18, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x45, 0xE1, 0x45, 0xF2,
+0x08, 0xC1, 0x1F, 0x10, 0x09, 0x74, 0x0E, 0x61,
+0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF4, 0x00, 0x4C,
+0x80, 0x18, 0xF3, 0x18, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x45, 0xE1, 0x85, 0xF2,
+0x1C, 0xC1, 0x0F, 0x10, 0x0A, 0x74, 0x0D, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0xF4, 0x9A,
+0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF4, 0x10, 0x4C,
+0xF9, 0x6D, 0x28, 0xF3, 0x01, 0x6E, 0x80, 0x18,
+0x35, 0x19, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x52, 0x6B, 0x78, 0xEC,
+0x30, 0xF0, 0x20, 0x6E, 0x60, 0xF2, 0x08, 0x4E,
+0xAC, 0xEA, 0x05, 0x6D, 0x12, 0xEB, 0x6D, 0xE6,
+0xDD, 0x67, 0xAF, 0xCE, 0x0F, 0x6D, 0xB0, 0xC6,
+0x92, 0xC6, 0x53, 0xC6, 0x20, 0xF0, 0x5D, 0xA3,
+0x07, 0x97, 0x04, 0x94, 0x54, 0xC6, 0x20, 0xF0,
+0x5E, 0xA3, 0x55, 0xC6, 0x20, 0xF0, 0x5F, 0xA3,
+0x56, 0xC6, 0x05, 0x95, 0x06, 0x96, 0x80, 0x18,
+0x47, 0x10, 0x09, 0x97, 0x05, 0x63, 0x00, 0xEF,
+0xF8, 0x63, 0x0F, 0x62, 0x0E, 0xD1, 0x0D, 0xD0,
+0x14, 0x92, 0x15, 0x93, 0x16, 0x90, 0x0A, 0xD2,
+0xFF, 0x6A, 0x1A, 0x65, 0xAC, 0xEA, 0x08, 0xD2,
+0x58, 0x67, 0xCC, 0xEA, 0x17, 0x91, 0x1A, 0x65,
+0x0A, 0x92, 0xFF, 0xF7, 0x1F, 0x6D, 0xAC, 0xEF,
+0xAC, 0xEA, 0xAC, 0xEB, 0xAC, 0xE8, 0xAC, 0xE9,
+0x30, 0xF0, 0x20, 0x6D, 0xC0, 0xF1, 0x08, 0x4D,
+0x65, 0xF4, 0xC0, 0x9D, 0x0A, 0xD2, 0x8C, 0xEE,
+0x30, 0x26, 0x65, 0xF4, 0x84, 0x9D, 0x05, 0x6A,
+0x4E, 0xEC, 0x2B, 0x2C, 0xE5, 0xF2, 0x98, 0xAD,
+0x01, 0x6A, 0x4E, 0xEC, 0x26, 0x2C, 0x9D, 0x67,
+0x47, 0x44, 0x19, 0x4A, 0x40, 0xA2, 0xF4, 0xC4,
+0xE2, 0x37, 0x52, 0xC4, 0x58, 0x67, 0x53, 0xC4,
+0x47, 0x44, 0x21, 0x4A, 0x40, 0xA2, 0xF5, 0xC4,
+0x56, 0xC4, 0x0A, 0x94, 0x82, 0x32, 0x9D, 0x67,
+0x57, 0xC4, 0x02, 0x6A, 0x4B, 0xEA, 0x78, 0xC4,
+0x1A, 0xC4, 0x3C, 0xC4, 0x50, 0xC4, 0x62, 0x33,
+0x02, 0x30, 0x22, 0x31, 0x0C, 0x6A, 0x79, 0xC4,
+0x1B, 0xC4, 0x3D, 0xC4, 0x4F, 0xCC, 0x05, 0x95,
+0x04, 0x94, 0x06, 0x96, 0x07, 0x97, 0x80, 0x18,
+0x47, 0x10, 0x0F, 0x97, 0x0E, 0x91, 0x0D, 0x90,
+0x08, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x20, 0xA4, 0x52, 0x68,
+0x30, 0xF0, 0x20, 0x6A, 0x18, 0xE9, 0x60, 0xF2,
+0x08, 0x4A, 0x21, 0x6B, 0x20, 0x6E, 0x6B, 0xEB,
+0x12, 0xE8, 0x01, 0xE2, 0x20, 0xF0, 0x52, 0xA0,
+0x04, 0xD2, 0x42, 0xA4, 0x20, 0xF0, 0xF5, 0xA0,
+0x20, 0xF0, 0x52, 0xC0, 0xA3, 0xA4, 0xEC, 0xEB,
+0x01, 0x6A, 0xCC, 0xED, 0xAD, 0xEB, 0x20, 0xF0,
+0x75, 0xC0, 0xA3, 0xA4, 0xAC, 0xEA, 0x02, 0x6D,
+0xAB, 0xED, 0x6C, 0xED, 0x4D, 0xED, 0x20, 0xF0,
+0xB5, 0xC0, 0x43, 0xA4, 0x02, 0x6B, 0x6C, 0xEA,
+0xFB, 0x4B, 0xAC, 0xEB, 0x4D, 0xEB, 0x20, 0xF0,
+0x75, 0xC0, 0xA3, 0xA4, 0x40, 0x6A, 0x4C, 0xED,
+0x80, 0x4A, 0xFF, 0x4A, 0x6C, 0xEA, 0xAD, 0xEA,
+0x20, 0xF0, 0x55, 0xC0, 0x64, 0xA4, 0xCC, 0xEA,
+0x40, 0xF0, 0x60, 0xC0, 0x0F, 0x22, 0x91, 0x67,
+0x80, 0x18, 0xE1, 0x24, 0x20, 0xF0, 0xC5, 0xA0,
+0x03, 0x6A, 0x20, 0xF0, 0xB2, 0xA0, 0xCA, 0x36,
+0x4C, 0xEE, 0xFF, 0x6A, 0x91, 0x67, 0x4C, 0xEE,
+0x80, 0x18, 0x2B, 0x24, 0x20, 0xF0, 0xF5, 0xA0,
+0x20, 0xF0, 0xD2, 0xA0, 0x04, 0x95, 0x01, 0x6A,
+0xF6, 0x37, 0x91, 0x67, 0x4C, 0xEF, 0x80, 0x18,
+0x8B, 0x1E, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x03, 0xA4, 0x44, 0xA4, 0xC0, 0xA4,
+0x00, 0x30, 0x00, 0x30, 0x00, 0xF6, 0x40, 0x32,
+0xA5, 0xA4, 0xE6, 0xA4, 0x0D, 0xEA, 0x01, 0xA4,
+0x82, 0xA4, 0x30, 0xF0, 0x20, 0x6B, 0x0D, 0xEA,
+0x80, 0x34, 0xC0, 0xF1, 0x08, 0x4B, 0x8D, 0xEA,
+0x65, 0xF4, 0x40, 0xDB, 0xE5, 0xF2, 0xD8, 0xC3,
+0x0A, 0x26, 0x01, 0x6C, 0x4C, 0xEC, 0x07, 0x24,
+0xE5, 0xF2, 0xB9, 0xC3, 0xE5, 0xF2, 0xFA, 0xC3,
+0x02, 0x25, 0x80, 0x18, 0x39, 0x24, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x20, 0xA4, 0x52, 0x68, 0x62, 0xA4, 0x18, 0xE9,
+0x08, 0x6A, 0x6C, 0xEA, 0x4E, 0x32, 0x06, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A,
+0x7E, 0x33, 0x7C, 0x33, 0x12, 0xE8, 0x01, 0xE2,
+0x20, 0xF0, 0xA5, 0xA0, 0x7F, 0x6A, 0xAC, 0xEA,
+0x6D, 0xEA, 0x20, 0xF0, 0x45, 0xC0, 0xA2, 0xA4,
+0x40, 0x6B, 0x6C, 0xED, 0x80, 0x4B, 0xFF, 0x4B,
+0x4C, 0xEB, 0xAD, 0xEB, 0x20, 0xF0, 0x65, 0xC0,
+0xA1, 0xA4, 0x1F, 0x6A, 0xAC, 0xEA, 0x44, 0xC0,
+0x41, 0xA4, 0x03, 0x6D, 0x07, 0xD2, 0xC2, 0xA4,
+0x04, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xAC, 0xEE,
+0xCD, 0xEA, 0x20, 0xF0, 0x45, 0xC0, 0x06, 0x93,
+0x09, 0x2B, 0x62, 0xA4, 0x6C, 0xED, 0x0D, 0x6B,
+0x6B, 0xEB, 0xA8, 0x35, 0x4C, 0xEB, 0xAD, 0xEB,
+0x20, 0xF0, 0x65, 0xC0, 0x61, 0xA4, 0x20, 0xF0,
+0xA6, 0xA0, 0x05, 0x6A, 0x7E, 0x33, 0x4B, 0xEA,
+0x68, 0x33, 0xAC, 0xEA, 0x6D, 0xEA, 0x20, 0xF0,
+0x46, 0xC0, 0x62, 0xA4, 0x20, 0xF0, 0xA5, 0xA0,
+0x30, 0x6A, 0x4C, 0xEB, 0x9F, 0x4A, 0xAC, 0xEA,
+0x6D, 0xEA, 0x20, 0xF0, 0x45, 0xC0, 0x10, 0xF0,
+0x24, 0x6D, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5,
+0x58, 0x9A, 0x9C, 0xF5, 0xBC, 0x9D, 0x2C, 0x33,
+0x49, 0xE3, 0x03, 0x4C, 0xAD, 0xE3, 0xA0, 0xA4,
+0x01, 0x4C, 0xA0, 0xC2, 0x01, 0x4A, 0x6A, 0xEA,
+0xFA, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
+0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x0F, 0x22,
+0x20, 0xF0, 0xC5, 0xA0, 0x44, 0xA0, 0x10, 0xF0,
+0x24, 0x6C, 0xDA, 0x37, 0x04, 0xD2, 0x01, 0x6A,
+0xDD, 0xF4, 0x1C, 0x4C, 0xB1, 0x67, 0xDE, 0x36,
+0x4C, 0xEF, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
+0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
+0x6C, 0xEA, 0x16, 0x22, 0x20, 0xF0, 0x66, 0xA0,
+0x20, 0xF0, 0xC5, 0xA0, 0x01, 0x6C, 0x6A, 0x33,
+0x8C, 0xEB, 0x06, 0x97, 0x03, 0x6A, 0xCA, 0x35,
+0x04, 0xD3, 0x10, 0xF0, 0x24, 0x6C, 0xD2, 0x33,
+0x4C, 0xEB, 0x1D, 0xF5, 0x00, 0x4C, 0x4C, 0xED,
+0x4C, 0xEE, 0x05, 0xD3, 0x80, 0x18, 0x35, 0x19,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x58, 0x9A,
+0x2C, 0x33, 0x49, 0xE3, 0x60, 0x9A, 0x30, 0xF0,
+0x20, 0x6A, 0xCC, 0xF1, 0x56, 0xA2, 0x01, 0x72,
+0x16, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
+0x40, 0x9A, 0x63, 0xEA, 0x10, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
+0x68, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
+0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x20, 0xF0,
+0x45, 0xA0, 0x03, 0x6B, 0x4A, 0x32, 0x6C, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xCC, 0xF1, 0x74, 0xA3,
+0x05, 0x73, 0x11, 0x61, 0x38, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
+0x6C, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
+0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x06, 0x73,
+0x12, 0x61, 0x02, 0x5A, 0x24, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
+0x70, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
+0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x07, 0x73,
+0x12, 0x61, 0x03, 0x72, 0x10, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
+0x74, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
+0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x30, 0xF0,
+0x20, 0x6A, 0xCC, 0xF1, 0x57, 0xA2, 0x02, 0x72,
+0x16, 0x61, 0x20, 0xF0, 0x45, 0xA0, 0x03, 0x6B,
+0x52, 0x32, 0x6C, 0xEA, 0x10, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0xBC, 0xF5, 0x44, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF5,
+0x78, 0x9A, 0x10, 0xF0, 0x24, 0x6A, 0xBC, 0xF2,
+0x50, 0x9A, 0x60, 0xDA, 0xF0, 0x17, 0x07, 0x93,
+0x60, 0x6A, 0x91, 0x67, 0x6C, 0xEA, 0x56, 0x32,
+0x06, 0xD2, 0x80, 0x18, 0x69, 0x1F, 0x06, 0x92,
+0x10, 0x22, 0x06, 0x93, 0x20, 0xF0, 0xC5, 0xA0,
+0x04, 0x6A, 0x6B, 0xE2, 0x09, 0x6D, 0xA4, 0xEA,
+0xCA, 0x36, 0x03, 0x6A, 0x4C, 0xEE, 0xFF, 0x6A,
+0x91, 0x67, 0x4C, 0xED, 0x4C, 0xEE, 0x80, 0x18,
+0x2B, 0x24, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0xC0, 0x4C, 0x4C, 0xEC,
+0x0F, 0x5C, 0x2B, 0x60, 0x10, 0xF0, 0x24, 0x6A,
+0x88, 0x34, 0x7B, 0xF6, 0x0C, 0x4A, 0x89, 0xE2,
+0x40, 0x9A, 0x00, 0xEA, 0x85, 0x67, 0x80, 0x18,
+0x02, 0x1B, 0x1F, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xBF, 0x1A, 0x1B, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x5E, 0x1A, 0x17, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x44, 0x19, 0x13, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xED, 0x1A, 0x0F, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xCF, 0x19, 0x0B, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xDD, 0x1B, 0x07, 0x10, 0x85, 0x67, 0x80, 0x18,
+0x57, 0x18, 0x03, 0x10, 0x85, 0x67, 0x80, 0x18,
+0xC5, 0x18, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x21, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x70, 0xF3,
+0xD6, 0xAB, 0xCE, 0xF4, 0x50, 0x98, 0x81, 0xF1,
+0x10, 0x6C, 0xFF, 0xF7, 0x1F, 0x6D, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0xFF, 0x6D, 0x81, 0xF1,
+0x14, 0x6C, 0x01, 0x4D, 0x01, 0x6E, 0x40, 0xEA,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98,
+0x81, 0xF1, 0x14, 0x69, 0x91, 0x67, 0x01, 0x6D,
+0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0x01, 0x6D, 0x91, 0x67, 0xC5, 0x67, 0x40, 0xEA,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x00, 0x6B, 0x80, 0xF6,
+0x6B, 0xC2, 0x80, 0xF6, 0x6A, 0xC2, 0x05, 0x6B,
+0x80, 0xF6, 0x69, 0xC2, 0x00, 0x6B, 0x80, 0xF6,
+0x70, 0xDA, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x60, 0xA4, 0x80, 0x6A,
+0x30, 0xF0, 0x20, 0x68, 0x4B, 0xEA, 0xEF, 0xF4,
+0x08, 0x48, 0x6C, 0xEA, 0x80, 0xF6, 0x4B, 0xC0,
+0x60, 0xA4, 0x0F, 0x6A, 0x24, 0x67, 0x6C, 0xEA,
+0x80, 0xF6, 0x48, 0xC0, 0x41, 0xA4, 0x80, 0xF6,
+0x68, 0xA0, 0x80, 0xF6, 0x49, 0xC0, 0x00, 0x6A,
+0x01, 0x4B, 0x80, 0xF6, 0x4A, 0xC0, 0x01, 0x6A,
+0x44, 0xEB, 0xFF, 0x4A, 0x80, 0xF6, 0x4E, 0xC8,
+0x80, 0x18, 0xBA, 0x1B, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x0A, 0x22, 0xA1, 0xA1, 0xC0, 0xA1,
+0x80, 0xF6, 0xEE, 0xA8, 0x10, 0xF0, 0x24, 0x6C,
+0x3D, 0xF5, 0x0C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF3,
+0xB0, 0x9A, 0xA1, 0xF7, 0x04, 0x6C, 0x00, 0x18,
+0x42, 0xE7, 0x01, 0x22, 0x01, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x02, 0x67,
+0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x07, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF5, 0x08, 0x4C,
+0xB0, 0x67, 0x80, 0x18, 0x35, 0x19, 0x50, 0x67,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xA1, 0xF7, 0x04, 0x6C,
+0xFF, 0xF7, 0x1F, 0x6D, 0x00, 0x18, 0x42, 0xE7,
+0x30, 0xF0, 0x20, 0x6C, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x88, 0x9C, 0xEF, 0xF4, 0x08, 0x4B,
+0x80, 0xF6, 0x4C, 0xCB, 0x10, 0xF0, 0x00, 0x6A,
+0x8C, 0xEA, 0x08, 0x22, 0x80, 0xF6, 0xAC, 0xAB,
+0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF5, 0x14, 0x4C,
+0x80, 0x18, 0x35, 0x19, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
+0xFF, 0x69, 0x04, 0x67, 0x6C, 0xEA, 0x2C, 0xE8,
+0xAC, 0xE9, 0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0x7D, 0xF5, 0x00, 0x4C, 0xB0, 0x67, 0xD1, 0x67,
+0x80, 0x18, 0x35, 0x19, 0x5D, 0x67, 0x12, 0xC2,
+0x33, 0xC2, 0x7D, 0x67, 0x2A, 0x6A, 0x50, 0xC3,
+0x02, 0x6A, 0x4F, 0xCB, 0x07, 0x97, 0x04, 0x94,
+0x05, 0x95, 0x06, 0x96, 0x80, 0x18, 0x47, 0x10,
+0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A,
+0x80, 0xF6, 0x6B, 0xA2, 0x68, 0x23, 0x80, 0xF6,
+0xCA, 0xA2, 0x80, 0xF6, 0x69, 0xA2, 0xC3, 0xEB,
+0x62, 0x61, 0x30, 0xF0, 0x20, 0x6C, 0x25, 0xF6,
+0x88, 0x9C, 0x10, 0xF0, 0x00, 0x6B, 0x8C, 0xEB,
+0x08, 0x23, 0x80, 0xF6, 0xB0, 0x9A, 0x10, 0xF0,
+0x24, 0x6C, 0x7D, 0xF5, 0x0C, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3,
+0x78, 0x9A, 0x03, 0x6A, 0x5B, 0xEB, 0x01, 0x2A,
+0xE5, 0xE8, 0x10, 0xEA, 0x3F, 0x2A, 0x80, 0x18,
+0xFB, 0x1B, 0x2C, 0x22, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0x9D, 0xF5, 0x00, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x80, 0x18, 0x0C, 0x1C, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x6E, 0xAA,
+0xFF, 0xF7, 0x1F, 0x73, 0x13, 0x61, 0x80, 0xF6,
+0x8C, 0xAA, 0x64, 0x6B, 0x78, 0xEC, 0x8F, 0xF7,
+0x1C, 0x4B, 0x12, 0xEC, 0x71, 0xE4, 0x80, 0xF6,
+0x6A, 0xA2, 0x82, 0x34, 0x82, 0x34, 0x01, 0x4B,
+0x80, 0xF6, 0x6A, 0xC2, 0x80, 0xF6, 0xAA, 0xA2,
+0x80, 0x18, 0x1D, 0x1C, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x68, 0x9B, 0x10, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0x9D, 0xF5, 0x08, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x80, 0x18, 0xC8, 0x1B, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x70, 0x9A,
+0x01, 0x4B, 0x80, 0xF6, 0x70, 0xDA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
+0xFF, 0x6B, 0x8C, 0xEB, 0xDB, 0xF7, 0x84, 0x9A,
+0xFE, 0x63, 0xDB, 0xF7, 0x04, 0x4A, 0x00, 0xD4,
+0x81, 0x9A, 0x44, 0xAA, 0x00, 0xF0, 0x0A, 0x05,
+0x01, 0xD4, 0x9D, 0x67, 0x44, 0xCC, 0x40, 0xA4,
+0x43, 0xEB, 0x05, 0x61, 0x01, 0x4B, 0x4B, 0xE3,
+0xFF, 0x6B, 0x6C, 0xEA, 0x04, 0x10, 0x01, 0x4C,
+0xAA, 0xEC, 0xF5, 0x61, 0x00, 0x6A, 0x02, 0x63,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x6A, 0x04, 0x67, 0x4C, 0xE8,
+0xAC, 0xEA, 0x7F, 0x6B, 0x82, 0x67, 0x6C, 0xEC,
+0x80, 0x18, 0x6D, 0x1C, 0x14, 0x6C, 0x98, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x4A, 0x48, 0x0C, 0x30,
+0xEF, 0xF4, 0x08, 0x4B, 0x6D, 0xE0, 0x12, 0xEA,
+0x48, 0xC3, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD1,
+0x00, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA, 0x05, 0x67,
+0x30, 0xF0, 0x20, 0x69, 0x43, 0xF4, 0xA4, 0x42,
+0xC0, 0xF1, 0x08, 0x49, 0xA4, 0x35, 0x06, 0x93,
+0x35, 0xE5, 0xFF, 0xF7, 0x1F, 0x6C, 0x20, 0xAD,
+0x8C, 0xEE, 0x8C, 0xEF, 0x8C, 0xEB, 0xD3, 0xE4,
+0x22, 0xEC, 0x03, 0x61, 0x39, 0xE6, 0xC0, 0xCD,
+0x03, 0x10, 0x01, 0x6C, 0x8B, 0xEC, 0x80, 0xCD,
+0x30, 0xF0, 0x20, 0x6D, 0xC3, 0xF3, 0x84, 0x42,
+0xC0, 0xF1, 0x08, 0x4D, 0x84, 0x34, 0xB1, 0xE4,
+0xA0, 0xAC, 0xFF, 0xF7, 0x1F, 0x6E, 0xFB, 0xE6,
+0xA2, 0xEE, 0x03, 0x61, 0xBD, 0xE7, 0xE0, 0xCC,
+0x03, 0x10, 0x01, 0x6D, 0xAB, 0xED, 0xA0, 0xCC,
+0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
+0x87, 0xF1, 0xA8, 0x9C, 0x6F, 0xEE, 0xA3, 0xEE,
+0xAD, 0xE3, 0x02, 0x60, 0x01, 0x6B, 0x6B, 0xEB,
+0x87, 0xF1, 0x68, 0xDC, 0x30, 0xF0, 0x20, 0x6C,
+0xC3, 0xF4, 0x64, 0x42, 0xC0, 0xF1, 0x08, 0x4C,
+0x64, 0x33, 0x07, 0x96, 0x8D, 0xE3, 0x82, 0xAB,
+0xFF, 0xF7, 0x1F, 0x6D, 0xD7, 0xE5, 0x83, 0xED,
+0x91, 0xE6, 0x02, 0x60, 0x01, 0x6C, 0x8B, 0xEC,
+0x82, 0xCB, 0x43, 0xF5, 0x04, 0x4A, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x44, 0x32,
+0x69, 0xE2, 0x62, 0xAA, 0xFF, 0xF7, 0x1F, 0x6C,
+0x13, 0xE4, 0x63, 0xEC, 0x03, 0x61, 0x61, 0xE0,
+0x02, 0xCA, 0x03, 0x10, 0x01, 0x6B, 0x6B, 0xEB,
+0x62, 0xCA, 0x01, 0x91, 0x00, 0x90, 0x01, 0x63,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x24, 0x6A,
+0xBC, 0xF5, 0xBC, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xA5, 0xE5, 0xF2,
+0xDB, 0xA2, 0x10, 0x6B, 0x8C, 0xEB, 0x02, 0x6C,
+0x8B, 0xEC, 0x72, 0x33, 0xCC, 0xEC, 0x6D, 0xEC,
+0xE5, 0xF2, 0x9B, 0xC2, 0xC0, 0xA5, 0x20, 0x6B,
+0xCC, 0xEB, 0x77, 0x33, 0x68, 0x36, 0x05, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0xCD, 0xEB, 0xE5, 0xF2,
+0x7B, 0xC2, 0xA0, 0xA5, 0x40, 0x6C, 0xAC, 0xEC,
+0x9A, 0x34, 0x84, 0x35, 0x03, 0x6C, 0x8B, 0xEC,
+0x6C, 0xEC, 0xAD, 0xEC, 0xE5, 0xF2, 0x9B, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0xF8, 0x63, 0x0F, 0x62,
+0x0E, 0xD1, 0x0D, 0xD0, 0xFF, 0x6A, 0x4C, 0xEE,
+0x52, 0x68, 0x18, 0xEE, 0x30, 0xF0, 0x20, 0x6B,
+0x60, 0xF2, 0x08, 0x4B, 0x4C, 0xEC, 0x4C, 0xEF,
+0x4C, 0xED, 0x0A, 0xD6, 0x06, 0xD7, 0x12, 0xE8,
+0x01, 0xE3, 0x7F, 0x6B, 0x6C, 0xEC, 0x1D, 0x2D,
+0x0C, 0x5C, 0x05, 0x60, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF0, 0x04, 0x4A, 0x1C, 0x10, 0x06, 0x93,
+0xF4, 0x4C, 0x4C, 0xEC, 0x08, 0x2B, 0x03, 0x6A,
+0x58, 0xEC, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF2,
+0x1C, 0x4A, 0x12, 0xEC, 0x36, 0x10, 0xE0, 0x4C,
+0x4C, 0xEC, 0x03, 0x6A, 0x58, 0xEC, 0x30, 0xF0,
+0x20, 0x6A, 0x2F, 0xF2, 0x00, 0x4A, 0x12, 0xEC,
+0x2C, 0x10, 0x0C, 0x5C, 0x15, 0x60, 0x30, 0xF0,
+0x20, 0x6A, 0xAF, 0xF0, 0x10, 0x4A, 0x91, 0xE2,
+0x30, 0xF0, 0x20, 0x6A, 0x80, 0xA4, 0x4E, 0xF5,
+0x58, 0x9A, 0x0A, 0x95, 0x06, 0x96, 0x40, 0xEA,
+0x20, 0xF0, 0x86, 0xA0, 0x19, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x20, 0xF0, 0x66, 0xC0, 0xB5, 0x10,
+0x06, 0x93, 0xF4, 0x4C, 0x4C, 0xEC, 0x08, 0x2B,
+0x03, 0x6A, 0x58, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
+0x2F, 0xF3, 0x00, 0x4A, 0x12, 0xEC, 0x09, 0x10,
+0xE0, 0x4C, 0x4C, 0xEC, 0x03, 0x6A, 0x58, 0xEC,
+0x30, 0xF0, 0x20, 0x6A, 0xCF, 0xF2, 0x04, 0x4A,
+0x12, 0xEC, 0x91, 0xE2, 0x01, 0x6A, 0x4B, 0xEA,
+0x7D, 0x67, 0x09, 0xD4, 0x00, 0x6C, 0x50, 0xC3,
+0x51, 0xC3, 0x52, 0xC3, 0x07, 0xD4, 0x24, 0x67,
+0x08, 0xD4, 0x0B, 0xD0, 0x09, 0x96, 0x00, 0xA6,
+0x2C, 0x70, 0x04, 0x61, 0x06, 0x92, 0x2C, 0x68,
+0x01, 0x2A, 0x0C, 0x68, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF5, 0x58, 0x9A, 0x0A, 0x95, 0x06, 0x96,
+0x90, 0x67, 0x01, 0x49, 0x40, 0xEA, 0xFF, 0x72,
+0xFF, 0x6B, 0x6C, 0xE9, 0x07, 0x61, 0x46, 0x70,
+0x11, 0x60, 0x08, 0x94, 0x91, 0xE1, 0x6C, 0xEC,
+0x08, 0xD4, 0x07, 0x10, 0x07, 0x96, 0xBD, 0x67,
+0xD1, 0xE5, 0x01, 0x4E, 0x6C, 0xEE, 0x50, 0xC4,
+0x07, 0xD6, 0x09, 0x92, 0x03, 0x71, 0x01, 0x4A,
+0x09, 0xD2, 0xD8, 0x61, 0x07, 0x92, 0x0B, 0x90,
+0x03, 0x6C, 0xFF, 0x4A, 0x8C, 0xEA, 0x20, 0xF0,
+0xA6, 0xA0, 0x4C, 0x33, 0x19, 0x6A, 0x4B, 0xEA,
+0xAC, 0xEA, 0x6D, 0xEA, 0x20, 0xF0, 0x46, 0xC0,
+0x08, 0x93, 0xFF, 0x6A, 0x06, 0x5B, 0x59, 0x60,
+0x20, 0xF0, 0x67, 0xA0, 0x02, 0x6A, 0x76, 0x33,
+0x8C, 0xEB, 0x20, 0xF0, 0x95, 0xA0, 0x8C, 0xEA,
+0x18, 0x22, 0x06, 0x94, 0x05, 0x24, 0x30, 0xF0,
+0x20, 0x6A, 0xAF, 0xF4, 0x08, 0x4A, 0x04, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x00, 0x4A,
+0xAF, 0x43, 0x01, 0x6C, 0xA3, 0xEC, 0x09, 0x61,
+0xDD, 0x67, 0xB1, 0xA6, 0x40, 0x9A, 0x84, 0xED,
+0x4C, 0xEC, 0x03, 0x24, 0x50, 0xA6, 0xB0, 0xC6,
+0x51, 0xC6, 0x20, 0xF0, 0x95, 0xA0, 0x40, 0x6A,
+0x8C, 0xEA, 0x19, 0x22, 0x06, 0x92, 0x05, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
+0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4,
+0x10, 0x4A, 0xFF, 0x4B, 0x01, 0x6C, 0x63, 0xEC,
+0x0A, 0x61, 0xBD, 0x67, 0x71, 0xA5, 0x40, 0x9A,
+0x84, 0xEB, 0x4C, 0xEC, 0x04, 0x24, 0x01, 0x6A,
+0x4B, 0xEA, 0x70, 0xC5, 0x51, 0xC5, 0xDD, 0x67,
+0x71, 0xA6, 0xFF, 0x73, 0x05, 0x60, 0x52, 0xA6,
+0xFF, 0x72, 0x02, 0x60, 0x66, 0xC0, 0x0E, 0x10,
+0x7D, 0x67, 0x51, 0xA3, 0xFF, 0x72, 0x03, 0x60,
+0x72, 0xA3, 0xFF, 0x73, 0x07, 0x60, 0x9D, 0x67,
+0x51, 0xA4, 0xFF, 0x72, 0x04, 0x61, 0x52, 0xA4,
+0xFF, 0x72, 0x01, 0x60, 0x45, 0xC0, 0xBD, 0x67,
+0x50, 0xA5, 0x0F, 0x97, 0x0E, 0x91, 0x0D, 0x90,
+0x08, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
+0x4C, 0xEE, 0x52, 0x6A, 0x58, 0xEC, 0x30, 0xF0,
+0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A, 0xFF, 0xF7,
+0x1F, 0x6B, 0x6C, 0xED, 0x0F, 0xD7, 0x04, 0xD5,
+0x05, 0xD6, 0x12, 0xEC, 0x89, 0xE2, 0x86, 0x67,
+0x06, 0xD2, 0x62, 0xF5, 0x1C, 0x4C, 0x30, 0xF0,
+0x20, 0x6A, 0x84, 0x34, 0xC0, 0xF1, 0x08, 0x4A,
+0x49, 0xE4, 0x05, 0xAA, 0x03, 0xED, 0x0B, 0xE5,
+0x02, 0x60, 0x04, 0x94, 0x8B, 0xE0, 0x6C, 0xEA,
+0xFF, 0x4A, 0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA,
+0x07, 0x5A, 0x1B, 0x60, 0x04, 0x92, 0x03, 0xEA,
+0x0C, 0x60, 0x05, 0x93, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x62, 0xF5, 0x1C, 0x4B,
+0x64, 0x33, 0x49, 0xE3, 0x65, 0xAA, 0xFF, 0x4B,
+0x1A, 0x10, 0x05, 0x93, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x62, 0xF5, 0x1C, 0x4B,
+0x64, 0x33, 0x49, 0xE3, 0x65, 0xAA, 0x01, 0x4B,
+0x0E, 0x10, 0x05, 0x93, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x62, 0xF5, 0x1C, 0x4B,
+0x64, 0x33, 0x04, 0x94, 0x49, 0xE3, 0x0C, 0x33,
+0x0F, 0xE3, 0x8D, 0xE3, 0x6F, 0x33, 0x65, 0xCA,
+0x05, 0x93, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x62, 0xF5, 0x1C, 0x4B, 0x64, 0x33,
+0x4D, 0xE3, 0x65, 0xAB, 0x65, 0xF4, 0x40, 0x9A,
+0x07, 0xD3, 0x02, 0x6B, 0x6C, 0xEA, 0x09, 0x22,
+0x07, 0x95, 0x04, 0x96, 0x10, 0xF0, 0x24, 0x6C,
+0x9D, 0xF5, 0x14, 0x4C, 0xF0, 0x67, 0x80, 0x18,
+0x35, 0x19, 0x04, 0x92, 0x43, 0xE8, 0x17, 0x61,
+0x06, 0x94, 0x43, 0xE0, 0xFF, 0xF7, 0x1F, 0x6A,
+0x20, 0xF0, 0x64, 0xA4, 0x4C, 0xE8, 0x0F, 0x6C,
+0x6E, 0x32, 0x8C, 0xEA, 0x44, 0x32, 0x01, 0x6D,
+0xAD, 0xEA, 0x8C, 0xEA, 0x80, 0x4C, 0xF8, 0x4C,
+0x4C, 0x32, 0x6C, 0xEC, 0x4D, 0xEC, 0x06, 0x92,
+0x20, 0xF0, 0x84, 0xC2, 0x15, 0x10, 0x04, 0x93,
+0x06, 0x94, 0xFF, 0xF7, 0x1F, 0x6A, 0x03, 0xE3,
+0x20, 0xF0, 0x64, 0xA4, 0x4C, 0xE8, 0x0F, 0x6C,
+0x6E, 0x32, 0x8C, 0xEA, 0x44, 0x32, 0x8C, 0xEA,
+0x4C, 0x34, 0x79, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x06, 0x93, 0x8D, 0xEA, 0x20, 0xF0, 0x44, 0xC3,
+0x05, 0x93, 0x30, 0xF0, 0x20, 0x6A, 0x06, 0x94,
+0xC2, 0xF5, 0x10, 0x4B, 0x64, 0x33, 0xC0, 0xF1,
+0x08, 0x4A, 0x49, 0xE3, 0x25, 0xAA, 0x20, 0xF0,
+0x44, 0xA4, 0x03, 0x6B, 0x4E, 0x32, 0x6C, 0xEA,
+0xFF, 0x4A, 0x02, 0x5A, 0x03, 0x61, 0x03, 0x58,
+0x08, 0x61, 0x3E, 0x10, 0x09, 0x58, 0x09, 0x6A,
+0x01, 0x60, 0x50, 0x67, 0xFF, 0xF7, 0x1F, 0x68,
+0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x65, 0xF4, 0x60, 0x9A, 0x02, 0x6C,
+0x8C, 0xEB, 0x10, 0x23, 0x06, 0x93, 0x49, 0xE0,
+0x45, 0xF4, 0xF2, 0xA2, 0x20, 0xF0, 0xA4, 0xA3,
+0x10, 0xF0, 0x24, 0x6C, 0x0F, 0x6B, 0xAE, 0x35,
+0xBD, 0xF5, 0x0C, 0x4C, 0x6C, 0xED, 0xD0, 0x67,
+0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x41, 0xE0, 0x45, 0xF4,
+0x52, 0xA0, 0xFF, 0xF7, 0x1F, 0x6B, 0x49, 0xE1,
+0x6C, 0xEA, 0x0A, 0x5A, 0x00, 0x69, 0x06, 0x61,
+0x28, 0x42, 0xFE, 0x49, 0x6C, 0xE9, 0x1F, 0x59,
+0x01, 0x61, 0x1E, 0x69, 0x05, 0x93, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC2, 0xF5,
+0x10, 0x4B, 0x64, 0x33, 0x49, 0xE3, 0x25, 0xCA,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x65, 0xF4, 0x60, 0x9A, 0x02, 0x6C, 0x8C, 0xEB,
+0x0D, 0x23, 0x05, 0x93, 0x10, 0xF0, 0x24, 0x6C,
+0xDD, 0xF5, 0x04, 0x4C, 0xC2, 0xF5, 0x10, 0x4B,
+0x64, 0x33, 0x49, 0xE3, 0xA5, 0xAA, 0xD1, 0x67,
+0x80, 0x18, 0x35, 0x19, 0x07, 0x92, 0x11, 0x67,
+0x0B, 0x5A, 0x10, 0x61, 0x15, 0x59, 0x01, 0x6A,
+0x06, 0x60, 0x0B, 0x59, 0x58, 0x67, 0x01, 0x5A,
+0x58, 0x67, 0x03, 0x6B, 0x4B, 0xE3, 0x07, 0x90,
+0xF6, 0x48, 0x07, 0xEA, 0x01, 0xE1, 0xFF, 0xF7,
+0x1F, 0x6A, 0x4C, 0xE8, 0x28, 0x58, 0x01, 0x61,
+0x28, 0x68, 0x03, 0x59, 0x00, 0x69, 0x02, 0x60,
+0x04, 0x92, 0x4A, 0x31, 0x30, 0xF0, 0x20, 0x6A,
+0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
+0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF5,
+0x14, 0x4C, 0xB1, 0x67, 0xD0, 0x67, 0x80, 0x18,
+0x35, 0x19, 0x10, 0x92, 0x20, 0xCA, 0x0F, 0x93,
+0x00, 0xCB, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
+0x52, 0x68, 0x18, 0xEC, 0x4C, 0xEF, 0x30, 0xF0,
+0x20, 0x6B, 0x0E, 0xD6, 0x06, 0xD4, 0x0D, 0xD5,
+0x05, 0xD7, 0x60, 0xF2, 0x08, 0x4B, 0x20, 0xA5,
+0x12, 0xE8, 0x01, 0xE3, 0x60, 0xA6, 0x04, 0xD3,
+0x20, 0xF0, 0xA5, 0xA0, 0x03, 0x6B, 0x04, 0x96,
+0xAC, 0xEB, 0x83, 0x67, 0x4C, 0xEC, 0xC2, 0xEC,
+0x03, 0x60, 0x0E, 0x92, 0x60, 0xC2, 0xB0, 0x10,
+0xA0, 0xF0, 0x0E, 0x24, 0x2F, 0x59, 0xA0, 0xF0,
+0x0B, 0x60, 0x30, 0x6B, 0xAC, 0xEB, 0x4C, 0xEB,
+0xA0, 0xF0, 0x06, 0x23, 0x30, 0xF0, 0x20, 0x6A,
+0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
+0x09, 0x22, 0x05, 0x95, 0x04, 0x96, 0x10, 0xF0,
+0x24, 0x6C, 0xFD, 0xF5, 0x0C, 0x4C, 0xF1, 0x67,
+0x80, 0x18, 0x35, 0x19, 0x05, 0x93, 0x01, 0x73,
+0x03, 0x60, 0x01, 0x6A, 0x05, 0x6B, 0x53, 0x10,
+0x00, 0x6A, 0x04, 0x6B, 0x50, 0x10, 0x05, 0x94,
+0x01, 0x74, 0x02, 0x61, 0x01, 0x4A, 0x01, 0x10,
+0xFF, 0x4A, 0xFF, 0x6B, 0x6C, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0x48, 0x34, 0x0F, 0xF2, 0x0C, 0x4B,
+0x6D, 0xE4, 0xC0, 0xAB, 0xFF, 0x6C, 0x03, 0x6D,
+0x66, 0x67, 0x8C, 0xEB, 0x04, 0xD3, 0xC2, 0x33,
+0x8C, 0xEB, 0x20, 0xF0, 0x85, 0xA0, 0x00, 0x69,
+0xE4, 0x67, 0xAC, 0xEF, 0x62, 0xEF, 0x09, 0x61,
+0x0D, 0x6F, 0x6C, 0xED, 0xEB, 0xEF, 0xA8, 0x35,
+0x8C, 0xEF, 0xAD, 0xEF, 0x20, 0xF0, 0xE5, 0xC0,
+0x01, 0x69, 0x30, 0xF0, 0x20, 0x6C, 0x0F, 0xF2,
+0x0C, 0x4C, 0x48, 0x32, 0x49, 0xE4, 0xE1, 0xAA,
+0x20, 0xF0, 0xA5, 0xA0, 0x03, 0x6C, 0xE2, 0x32,
+0xAC, 0xEC, 0x42, 0xEC, 0x3F, 0x61, 0xE5, 0xC0,
+0x06, 0x95, 0x30, 0xF0, 0x20, 0x6C, 0xEF, 0xF4,
+0x08, 0x4C, 0x4A, 0x4D, 0xAC, 0x35, 0x91, 0xE5,
+0x46, 0xC4, 0x45, 0xA0, 0xFF, 0x72, 0x32, 0x60,
+0x20, 0xF0, 0x86, 0xA0, 0x19, 0x6A, 0x4B, 0xEA,
+0x8C, 0xEA, 0x08, 0x6C, 0x8D, 0xEA, 0x20, 0xF0,
+0x46, 0xC0, 0x28, 0x10, 0x01, 0x4A, 0xFF, 0x6C,
+0x8C, 0xEA, 0x63, 0xEA, 0x44, 0x60, 0x30, 0xF0,
+0x20, 0x6C, 0x48, 0x35, 0x0F, 0xF2, 0x0C, 0x4C,
+0x91, 0xE5, 0xA0, 0xAC, 0xFF, 0x6C, 0xC5, 0x67,
+0x8C, 0xEE, 0x2E, 0xEE, 0x05, 0x2E, 0xA2, 0x35,
+0x8C, 0xED, 0x04, 0x94, 0x8E, 0xED, 0x9F, 0x25,
+0x30, 0xF0, 0x20, 0x6C, 0x48, 0x35, 0x0F, 0xF2,
+0x0C, 0x4C, 0xB1, 0xE4, 0xA1, 0xAC, 0xFF, 0x6C,
+0xC5, 0x67, 0x8C, 0xEE, 0x2E, 0xEE, 0xDE, 0x2E,
+0x04, 0x96, 0xA2, 0x35, 0x8C, 0xED, 0xCE, 0xED,
+0xD9, 0x2D, 0x8D, 0x17, 0x00, 0x68, 0x09, 0x21,
+0x5D, 0x67, 0x87, 0x42, 0x09, 0x4C, 0x0D, 0x92,
+0x80, 0xA4, 0x01, 0x68, 0x80, 0xC2, 0x0E, 0x92,
+0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
+0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x09, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF6, 0x08, 0x4C,
+0xB0, 0x67, 0x80, 0x18, 0x35, 0x19, 0x01, 0x10,
+0x00, 0x68, 0x50, 0x67, 0x0B, 0x97, 0x0A, 0x91,
+0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x68,
+0xF0, 0x67, 0xD0, 0x67, 0xE6, 0x17, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x68, 0x0C, 0xEC, 0xAC, 0xE8, 0xFF, 0x70,
+0x3A, 0x60, 0x52, 0x6A, 0x58, 0xEC, 0x30, 0xF0,
+0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A, 0x7F, 0x69,
+0x0C, 0xE9, 0x12, 0xEC, 0x89, 0xE2, 0x04, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF5, 0x48, 0x9A,
+0x91, 0x67, 0x40, 0xEA, 0x4B, 0xEB, 0x4D, 0xEB,
+0x04, 0x92, 0xC0, 0xF7, 0x62, 0x33, 0x7F, 0x6C,
+0x6D, 0xE2, 0x40, 0xF0, 0x65, 0xA3, 0x30, 0xF0,
+0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x04, 0xD3,
+0x8C, 0xEB, 0x05, 0xD3, 0x04, 0x6B, 0x6C, 0xEA,
+0x08, 0x22, 0x04, 0x96, 0x10, 0xF0, 0x24, 0x6C,
+0x3D, 0xF6, 0x00, 0x4C, 0xB0, 0x67, 0x80, 0x18,
+0x35, 0x19, 0x05, 0x92, 0x23, 0xEA, 0x0B, 0x61,
+0x4E, 0xE9, 0x0A, 0x29, 0x04, 0x94, 0x80, 0x6B,
+0x80, 0x6A, 0x6B, 0xEB, 0x0C, 0xEA, 0x8C, 0xEB,
+0x4E, 0xEB, 0x01, 0x23, 0x01, 0x22, 0xFF, 0x68,
+0x50, 0x67, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6A, 0x4C, 0xEE,
+0x4C, 0xED, 0x62, 0x46, 0xA2, 0xEB, 0x4C, 0xEC,
+0xEC, 0xEA, 0x04, 0x61, 0xFE, 0x4E, 0xC2, 0xED,
+0x01, 0x61, 0x25, 0x22, 0x52, 0x69, 0x38, 0xEC,
+0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x68, 0xFF, 0x6D, 0x02, 0x6E,
+0x12, 0xE9, 0x25, 0xE2, 0x4E, 0xF2, 0x4C, 0x98,
+0x87, 0x41, 0x3E, 0x4C, 0x40, 0xEA, 0x4E, 0xF2,
+0x4C, 0x98, 0x87, 0x41, 0x40, 0x4C, 0x00, 0x6D,
+0x02, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF4, 0x00, 0x6A,
+0x6C, 0xEA, 0x13, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0x3D, 0xF6, 0x0C, 0x4C, 0x0C, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF4,
+0x00, 0x6A, 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0,
+0x24, 0x6C, 0x3D, 0xF6, 0x18, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD0, 0x00, 0x68, 0x52, 0x6A, 0x58, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0x60, 0xF2, 0x08, 0x4B,
+0x12, 0xEA, 0x49, 0xE3, 0x20, 0xF0, 0x85, 0xA2,
+0x80, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB, 0xFF, 0x6C,
+0x8C, 0xEB, 0x3D, 0x2B, 0x40, 0xF0, 0x85, 0xA2,
+0xFF, 0x74, 0x0E, 0x60, 0x40, 0xF0, 0x87, 0xA2,
+0x63, 0x5C, 0x04, 0x60, 0x01, 0x4C, 0x40, 0xF0,
+0x87, 0xC2, 0x06, 0x10, 0x40, 0xF0, 0x67, 0xC2,
+0x01, 0x6B, 0x6B, 0xEB, 0x40, 0xF0, 0x65, 0xC2,
+0x40, 0xF0, 0x66, 0xA2, 0xFF, 0x73, 0x0F, 0x60,
+0x40, 0xF0, 0x68, 0xA2, 0x63, 0x5B, 0x08, 0x61,
+0x00, 0x6B, 0x40, 0xF0, 0x68, 0xC2, 0x01, 0x6B,
+0x6B, 0xEB, 0x40, 0xF0, 0x66, 0xC2, 0x03, 0x10,
+0x01, 0x4B, 0x40, 0xF0, 0x68, 0xC2, 0x17, 0x28,
+0x30, 0xF0, 0x20, 0x6C, 0x25, 0xF6, 0x88, 0x9C,
+0x00, 0xF4, 0x00, 0x6B, 0x8C, 0xEB, 0x0F, 0x23,
+0x40, 0xF0, 0xA5, 0xA2, 0x40, 0xF0, 0xC6, 0xA2,
+0x40, 0xF0, 0xE7, 0xA2, 0x40, 0xF0, 0x48, 0xA2,
+0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF6, 0x04, 0x4C,
+0x04, 0xD2, 0x80, 0x18, 0x35, 0x19, 0x01, 0x48,
+0xFF, 0x6A, 0x4C, 0xE8, 0x80, 0x70, 0xAE, 0x61,
+0x07, 0x97, 0x06, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0xFF, 0x6B, 0x6C, 0xEE, 0x52, 0x68, 0x18, 0xEE,
+0x12, 0x91, 0x13, 0x92, 0x6C, 0xEF, 0x6C, 0xE9,
+0x6C, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0x60, 0xF2,
+0x08, 0x4B, 0x08, 0xD7, 0x12, 0xE8, 0x01, 0xE3,
+0x20, 0xF0, 0x73, 0xA0, 0xEE, 0xEB, 0x06, 0x2B,
+0x7E, 0xA0, 0x03, 0x6C, 0x6A, 0x33, 0x8C, 0xEB,
+0x2E, 0xEB, 0x25, 0x23, 0x7D, 0x67, 0x87, 0x43,
+0x19, 0x4C, 0x80, 0xA4, 0x55, 0xC3, 0x00, 0x6A,
+0xD3, 0xC3, 0x92, 0xC3, 0x56, 0xC3, 0x56, 0xA8,
+0x38, 0xC3, 0x06, 0x96, 0x57, 0xC3, 0x0C, 0x6A,
+0x50, 0xC3, 0x07, 0x6A, 0x4F, 0xCB, 0x04, 0x94,
+0x05, 0x95, 0x07, 0x97, 0x80, 0x18, 0x47, 0x10,
+0x7D, 0x67, 0x87, 0x43, 0x19, 0x4C, 0x60, 0xA4,
+0x03, 0x6A, 0x2C, 0xEA, 0x9E, 0xA0, 0x20, 0xF0,
+0x73, 0xC0, 0x48, 0x33, 0x0D, 0x6A, 0x4B, 0xEA,
+0x8C, 0xEA, 0x6D, 0xEA, 0x5E, 0xC0, 0x0D, 0x97,
+0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
+0xF8, 0x63, 0x0F, 0x62, 0x0E, 0xD1, 0x0D, 0xD0,
+0xFF, 0x6A, 0x8C, 0xEA, 0xFF, 0x6B, 0x06, 0xD2,
+0x6C, 0xED, 0xFF, 0x6C, 0x7F, 0x6A, 0xEC, 0xEC,
+0xAC, 0xEA, 0x0A, 0xD4, 0x07, 0xD2, 0xCC, 0xEB,
+0x06, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x0B, 0xD3,
+0x9C, 0xF5, 0x4C, 0x9A, 0x80, 0x6B, 0xAC, 0xEB,
+0x09, 0xD3, 0x94, 0x33, 0x49, 0xE3, 0x40, 0xA2,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF5, 0x4C, 0x9A,
+0x07, 0x95, 0x09, 0x96, 0x0A, 0x97, 0x40, 0xEA,
+0xFF, 0x72, 0x22, 0x67, 0xA0, 0xF0, 0x05, 0x60,
+0x06, 0x92, 0x52, 0x68, 0x06, 0x95, 0x18, 0xEA,
+0x05, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF2,
+0x08, 0x4A, 0x12, 0xE8, 0x01, 0xE2, 0x30, 0xF0,
+0x20, 0x6A, 0x78, 0xED, 0xC0, 0xF1, 0x08, 0x4A,
+0xFF, 0x6D, 0x12, 0xEC, 0x49, 0xE4, 0x07, 0xF4,
+0x4C, 0xA2, 0x07, 0x6C, 0x4C, 0xEC, 0x0B, 0x92,
+0xAC, 0xEC, 0x08, 0xD4, 0x29, 0x2A, 0x63, 0xA0,
+0x5F, 0xA0, 0x6E, 0xEA, 0x0C, 0x22, 0x06, 0x94,
+0x30, 0xF0, 0x20, 0x6A, 0xBD, 0x67, 0x8C, 0x33,
+0x2F, 0xF7, 0x1C, 0x4A, 0x69, 0xE2, 0x67, 0x45,
+0x25, 0x4B, 0xA0, 0xAB, 0xA3, 0xCA, 0x20, 0xF0,
+0x66, 0xA0, 0x41, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x20, 0xF0, 0x46, 0xC0, 0x23, 0xC0, 0x06, 0x94,
+0xB1, 0x67, 0x80, 0x18, 0x7D, 0x1C, 0x0A, 0x93,
+0x06, 0x96, 0x00, 0x6A, 0x82, 0x67, 0xA2, 0x67,
+0xF1, 0x67, 0x05, 0xD2, 0x04, 0xD3, 0x80, 0x18,
+0xDC, 0x1E, 0x00, 0x6A, 0x82, 0x67, 0x29, 0x10,
+0x20, 0xF0, 0x86, 0xA0, 0x40, 0x6A, 0x23, 0xC0,
+0x8D, 0xEA, 0x20, 0xF0, 0x46, 0xC0, 0x0A, 0x95,
+0x06, 0x96, 0x00, 0x6C, 0x04, 0xD5, 0xF1, 0x67,
+0xA4, 0x67, 0x05, 0xD3, 0x80, 0x18, 0xDC, 0x1E,
+0x07, 0x93, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF1,
+0x04, 0x4A, 0x49, 0xE3, 0x40, 0xA2, 0x30, 0xF0,
+0x20, 0x6B, 0x6F, 0xF3, 0x08, 0x4B, 0x20, 0xF0,
+0x48, 0xC0, 0x07, 0x94, 0x6D, 0xE4, 0x60, 0xA3,
+0x20, 0xF0, 0x92, 0xA0, 0x63, 0xEC, 0x03, 0x60,
+0x04, 0x4A, 0x20, 0xF0, 0x48, 0xC0, 0x01, 0x6A,
+0x40, 0x6C, 0x0A, 0x95, 0xAC, 0x33, 0x08, 0x95,
+0x6D, 0xE5, 0x8D, 0xEB, 0x00, 0xF6, 0x60, 0x33,
+0xFF, 0x6C, 0x00, 0xF6, 0x63, 0x33, 0x8C, 0xEB,
+0x06, 0x94, 0x03, 0x5C, 0x0A, 0x60, 0x10, 0xF0,
+0x24, 0x6C, 0xDC, 0xF5, 0x80, 0x9C, 0x20, 0xC4,
+0x10, 0xF0, 0x24, 0x6C, 0xDC, 0xF5, 0x8C, 0x9C,
+0x60, 0xC4, 0x30, 0xF0, 0x20, 0x6C, 0xC5, 0xF4,
+0xA3, 0xA4, 0x04, 0x6C, 0xAC, 0xEC, 0x05, 0x24,
+0x07, 0x94, 0x09, 0x91, 0x8D, 0xE9, 0xFF, 0x6C,
+0x8C, 0xE9, 0x06, 0x95, 0xB4, 0x34, 0x10, 0xF0,
+0x24, 0x6D, 0x9C, 0xF5, 0xB0, 0x9D, 0xB5, 0xE4,
+0x20, 0xC5, 0x10, 0xF0, 0x24, 0x6D, 0x9C, 0xF5,
+0xAC, 0x9D, 0xB5, 0xE4, 0x60, 0xC5, 0x10, 0xF0,
+0x24, 0x6B, 0xDC, 0xF5, 0x70, 0x9B, 0x71, 0xE4,
+0x40, 0xC4, 0x0F, 0x97, 0x0E, 0x91, 0x0D, 0x90,
+0x08, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x69, 0x8C, 0xE9,
+0x52, 0x68, 0x18, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
+0x60, 0xF2, 0x08, 0x4A, 0x12, 0xE8, 0x01, 0xE2,
+0x84, 0xA0, 0x0F, 0x5C, 0x53, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x88, 0x33, 0xDB, 0xF6, 0x00, 0x4A,
+0x69, 0xE2, 0x40, 0x9A, 0x00, 0xEA, 0x1B, 0x6A,
+0x2E, 0x10, 0x3D, 0x6A, 0x20, 0xF0, 0x60, 0xA0,
+0x47, 0xC0, 0x08, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x02, 0x6B, 0x3A, 0x10, 0x20, 0xF0, 0x60, 0xA0,
+0x13, 0x6A, 0x47, 0xC0, 0x08, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x01, 0x6B, 0x6D, 0xEA, 0x20, 0xF0,
+0x40, 0xC0, 0x20, 0xF0, 0x60, 0xA0, 0x33, 0x6A,
+0x47, 0xC0, 0x08, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x01, 0x6B, 0x6D, 0xEA, 0x20, 0xF0, 0x40, 0xC0,
+0x04, 0x6D, 0x30, 0x10, 0x20, 0xF0, 0x60, 0xA0,
+0x0B, 0x6A, 0x47, 0xC0, 0x08, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x03, 0x6E, 0x20, 0xF0, 0x40, 0xC0,
+0x04, 0xD6, 0x25, 0x10, 0x47, 0x6A, 0x20, 0xF0,
+0x60, 0xA0, 0x47, 0xC0, 0x08, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x03, 0x6B, 0x6D, 0xEA, 0x20, 0xF0,
+0x40, 0xC0, 0x05, 0x6A, 0x04, 0xD2, 0x17, 0x10,
+0x23, 0x6A, 0x20, 0xF0, 0x60, 0xA0, 0x47, 0xC0,
+0x08, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x03, 0x6B,
+0x6D, 0xEA, 0x05, 0x6B, 0x20, 0xF0, 0x40, 0xC0,
+0x04, 0xD3, 0x09, 0x10, 0x20, 0xF0, 0x60, 0xA0,
+0x08, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0,
+0x40, 0xC0, 0x03, 0x6D, 0x04, 0xD5, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF5, 0x58, 0x9A, 0x2C, 0x35,
+0x8C, 0x34, 0x55, 0xE5, 0x10, 0xF0, 0x30, 0x6A,
+0x24, 0xF3, 0x0C, 0x4A, 0x91, 0xE2, 0xE5, 0x67,
+0xFD, 0x65, 0x00, 0x6A, 0x05, 0xD5, 0x05, 0x96,
+0x48, 0x33, 0x20, 0xF0, 0xA5, 0xA0, 0xCD, 0xE3,
+0x60, 0x9B, 0xC0, 0x9C, 0x1D, 0x65, 0xB8, 0x67,
+0xCC, 0xEB, 0x03, 0x6E, 0xAC, 0xEE, 0x02, 0x76,
+0x07, 0x61, 0xFF, 0x6E, 0x4C, 0xEE, 0x01, 0x76,
+0x03, 0x61, 0x41, 0x6E, 0xCB, 0xEE, 0xCC, 0xEB,
+0x48, 0x36, 0xF5, 0xE6, 0x60, 0xDD, 0x01, 0x4A,
+0x7F, 0x67, 0x79, 0xE6, 0x02, 0x72, 0x60, 0x9E,
+0x04, 0x4C, 0xE1, 0x61, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF5, 0x78, 0x9B, 0x2C, 0x32, 0x91, 0x67,
+0x6D, 0xE2, 0xA0, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
+0x9C, 0xF5, 0x7C, 0x9B, 0x69, 0xE2, 0xC0, 0x9A,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x50, 0x9A,
+0x34, 0x33, 0x49, 0xE3, 0x40, 0xA2, 0xFF, 0x6B,
+0x4C, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x40, 0x9A, 0x05, 0xD3, 0x40, 0xEA, 0x05, 0x96,
+0x20, 0xF0, 0xE5, 0xA0, 0x80, 0x6D, 0xAB, 0xED,
+0xCC, 0xED, 0x4D, 0xED, 0xEA, 0x37, 0x03, 0x6A,
+0x4C, 0xEF, 0xFF, 0x6A, 0x4C, 0xEF, 0x4C, 0xED,
+0x00, 0x6E, 0x91, 0x67, 0x80, 0x18, 0x00, 0x1F,
+0x7D, 0x67, 0xA7, 0x43, 0x09, 0x4D, 0x60, 0xA5,
+0x30, 0xF0, 0x20, 0x6A, 0x91, 0x67, 0x62, 0xC0,
+0x6E, 0xF5, 0x44, 0x9A, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF5, 0x48, 0x9A, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
+0x01, 0x6B, 0x6C, 0xEA, 0x09, 0x22, 0xA0, 0xA0,
+0xC1, 0xA0, 0xE2, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
+0x5D, 0xF6, 0x1C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF5, 0x54, 0x9A, 0x00, 0x68, 0x60, 0xA2,
+0xFF, 0x6A, 0x83, 0x67, 0x10, 0xF0, 0x24, 0x6B,
+0xBC, 0xF5, 0x7C, 0x9B, 0x4C, 0xEC, 0x06, 0xD4,
+0x60, 0xA3, 0x01, 0x6C, 0x6C, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x56, 0x32,
+0x8C, 0xEA, 0xE5, 0xF2, 0xBB, 0xA3, 0x48, 0x34,
+0x05, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA, 0x8D, 0xEA,
+0xE5, 0xF2, 0x5B, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF5, 0x58, 0x9A, 0x90, 0x67, 0x40, 0xEA,
+0x69, 0x22, 0x52, 0x69, 0x38, 0xE8, 0x30, 0xF0,
+0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A, 0x04, 0x6B,
+0xFF, 0x6C, 0x12, 0xE9, 0x25, 0xE2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE5, 0xF2,
+0xBB, 0xA2, 0xAC, 0xEB, 0x26, 0x23, 0x06, 0x93,
+0x0A, 0xEB, 0x23, 0x61, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF5, 0x78, 0x9B, 0x65, 0xF4, 0x40, 0x9A,
+0x60, 0xA3, 0xA3, 0x67, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF5, 0x7C, 0x9B, 0x8C, 0xED, 0x04, 0xD5,
+0x60, 0xA3, 0x6C, 0xEC, 0x10, 0x6B, 0x6C, 0xEA,
+0x05, 0xD4, 0x09, 0x22, 0x05, 0x96, 0x04, 0x97,
+0x10, 0xF0, 0x24, 0x6C, 0x7D, 0xF6, 0x14, 0x4C,
+0xB0, 0x67, 0x80, 0x18, 0x35, 0x19, 0x04, 0x95,
+0x05, 0x97, 0x90, 0x67, 0x00, 0x6E, 0x80, 0x18,
+0x00, 0x1F, 0x67, 0x40, 0x30, 0xF0, 0x20, 0x6A,
+0x43, 0x4B, 0x6C, 0x33, 0xEF, 0xF4, 0x08, 0x4A,
+0x49, 0xE3, 0x45, 0xA2, 0x05, 0x2A, 0x20, 0xF0,
+0x67, 0xA1, 0x80, 0x4A, 0x6D, 0xEA, 0x04, 0x10,
+0x20, 0xF0, 0x67, 0xA1, 0x7F, 0x6A, 0x6C, 0xEA,
+0x20, 0xF0, 0x47, 0xC1, 0x11, 0x28, 0x30, 0xF0,
+0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x10, 0x6B,
+0x6C, 0xEA, 0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0x2F, 0xF7, 0xBD, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
+0x9D, 0xF6, 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x67, 0x40, 0x30, 0xF0, 0x20, 0x6A, 0x43, 0x4B,
+0x6C, 0x33, 0xEF, 0xF4, 0x08, 0x4A, 0x49, 0xE3,
+0x00, 0x6B, 0x65, 0xC2, 0x01, 0x48, 0xFF, 0x6A,
+0x4C, 0xE8, 0x80, 0x70, 0x8B, 0x61, 0x80, 0x18,
+0xAF, 0x1E, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF5,
+0x48, 0x9A, 0x40, 0xEA, 0x80, 0x18, 0x33, 0x1C,
+0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x8C, 0xEA,
+0x52, 0x68, 0x18, 0xEA, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A, 0x03, 0x6B,
+0x12, 0xE8, 0x01, 0xE2, 0x20, 0xF0, 0x86, 0xA0,
+0x20, 0xF0, 0xA5, 0xA0, 0x3F, 0xA0, 0x8C, 0xEB,
+0x68, 0x34, 0x0D, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB,
+0x8D, 0xEB, 0x40, 0xA0, 0x20, 0xF0, 0x65, 0xC0,
+0x7F, 0x6B, 0x2C, 0xEB, 0x63, 0xEA, 0x01, 0x60,
+0x22, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
+0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x0C, 0x22,
+0x20, 0xF0, 0xC5, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
+0x03, 0x6A, 0xCA, 0x36, 0x9D, 0xF6, 0x1C, 0x4C,
+0xB1, 0x67, 0x4C, 0xEE, 0x80, 0x18, 0x35, 0x19,
+0x5F, 0xA0, 0x80, 0x6D, 0xAB, 0xED, 0x4C, 0xED,
+0x20, 0xF0, 0xE5, 0xA0, 0x2D, 0xED, 0x00, 0xF6,
+0xA0, 0x35, 0x04, 0x94, 0xFF, 0x6A, 0x00, 0xF6,
+0xA3, 0x35, 0x4C, 0xED, 0xEA, 0x37, 0x03, 0x6A,
+0x4C, 0xEF, 0x00, 0x6E, 0x80, 0x18, 0x00, 0x1F,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xF6, 0x63, 0x13, 0x62,
+0x12, 0xD1, 0x11, 0xD0, 0xFF, 0x6F, 0xEC, 0xEC,
+0x52, 0x68, 0x18, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
+0x60, 0xF2, 0x08, 0x4A, 0x94, 0x33, 0xEC, 0xED,
+0x09, 0xD4, 0x0C, 0xD5, 0x7F, 0x69, 0x12, 0xE8,
+0x01, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5,
+0x50, 0x9A, 0x49, 0xE3, 0x40, 0xA2, 0x7D, 0x67,
+0x58, 0xC3, 0x98, 0xA3, 0x03, 0x6B, 0x1B, 0x65,
+0x08, 0xD4, 0xA0, 0xA0, 0x8C, 0xE9, 0x98, 0x67,
+0x0A, 0xD5, 0x20, 0xF0, 0xC5, 0xA0, 0xBD, 0x67,
+0xD2, 0x32, 0x6C, 0xEA, 0xEC, 0xEA, 0x0B, 0xD2,
+0x47, 0x45, 0xCA, 0x33, 0x19, 0x4A, 0x40, 0xA2,
+0x8C, 0xEB, 0x79, 0xC5, 0x20, 0xF0, 0x86, 0xA0,
+0x5F, 0xC0, 0x04, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
+0x6D, 0xEA, 0x01, 0x6B, 0x6B, 0xEB, 0x65, 0xC0,
+0x66, 0xC0, 0x09, 0x95, 0x30, 0xF0, 0x20, 0x6C,
+0xEF, 0xF4, 0x08, 0x4C, 0x4A, 0x4D, 0xAC, 0x35,
+0x95, 0xE5, 0x66, 0xC5, 0x09, 0x95, 0xAC, 0x35,
+0x91, 0xE5, 0x0E, 0xD5, 0x40, 0xF2, 0x77, 0xC4,
+0x20, 0xF0, 0x87, 0xA0, 0x11, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x20, 0xF0, 0x67, 0xC0, 0x80, 0x6B,
+0x6B, 0xEB, 0x6D, 0xEA, 0x67, 0x4B, 0x6C, 0xEA,
+0x20, 0xF0, 0x46, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
+0x0C, 0x22, 0x58, 0x67, 0x7D, 0x67, 0xCC, 0xEA,
+0x08, 0x95, 0xD9, 0xA3, 0x10, 0xF0, 0x24, 0x6C,
+0xBD, 0xF6, 0x10, 0x4C, 0x4C, 0xEF, 0x80, 0x18,
+0x35, 0x19, 0x0A, 0x94, 0x83, 0xE9, 0x79, 0x60,
+0x09, 0x94, 0x06, 0x05, 0x00, 0xF0, 0x19, 0x06,
+0x01, 0x6F, 0x80, 0x18, 0xF7, 0x1D, 0xA0, 0xF0,
+0x09, 0x2A, 0xBD, 0x67, 0x20, 0xF0, 0x45, 0xA0,
+0x99, 0xA5, 0x03, 0x6B, 0xA3, 0x67, 0x4C, 0xED,
+0xA2, 0xEC, 0x1A, 0x60, 0xDD, 0x67, 0x01, 0x4C,
+0x0D, 0x6D, 0x99, 0xC6, 0xAB, 0xED, 0x6C, 0xEC,
+0x4C, 0xED, 0x88, 0x34, 0x8D, 0xED, 0x38, 0xC6,
+0x30, 0xF0, 0x20, 0x6A, 0x20, 0xF0, 0xA5, 0xC0,
+0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
+0x07, 0x22, 0xB9, 0xA6, 0x10, 0xF0, 0x24, 0x6C,
+0xDD, 0xF6, 0x0C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xDD, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x4C, 0x9A, 0x09, 0x94, 0xB8, 0xA6, 0x40, 0xEA,
+0xFF, 0x72, 0x08, 0xD2, 0x08, 0x61, 0x47, 0x41,
+0x4C, 0x4A, 0x08, 0xD2, 0x08, 0x93, 0xFF, 0x6A,
+0x4C, 0xEB, 0x08, 0xD3, 0x17, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B,
+0x6C, 0xEA, 0x07, 0x22, 0x08, 0x95, 0x10, 0xF0,
+0x24, 0x6C, 0xDD, 0xF6, 0x1C, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x9D, 0x67, 0xA7, 0x44, 0x19, 0x4D,
+0xA0, 0xA5, 0xB8, 0xC4, 0x5F, 0x10, 0x01, 0x49,
+0xFF, 0x6A, 0x4C, 0xE9, 0x09, 0x96, 0x0B, 0x97,
+0x91, 0x67, 0x00, 0x6D, 0x80, 0x18, 0xD7, 0x1C,
+0xDD, 0x67, 0x58, 0xC6, 0x58, 0xA6, 0xFF, 0x72,
+0x08, 0x61, 0x0A, 0x92, 0x43, 0xE9, 0x02, 0x61,
+0x58, 0xC6, 0x03, 0x10, 0x08, 0x94, 0x8A, 0xE9,
+0xEA, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
+0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x42, 0x22,
+0xDD, 0x67, 0xB8, 0xA6, 0x10, 0xF0, 0x24, 0x6C,
+0xFD, 0xF6, 0x0C, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x39, 0x10, 0x0A, 0x92, 0x4E, 0xE9, 0x21, 0x29,
+0x20, 0xF0, 0x46, 0xA0, 0x04, 0x6B, 0x6C, 0xEA,
+0xE0, 0xF0, 0x0C, 0x22, 0x08, 0x92, 0x80, 0x6C,
+0x8B, 0xEC, 0x8C, 0xEA, 0xFF, 0x6D, 0xAC, 0xEA,
+0xE0, 0xF0, 0x04, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0x0A, 0x95, 0x25, 0xF6, 0x48, 0x9A, 0xDD, 0x67,
+0xAD, 0xEC, 0x6C, 0xEA, 0x98, 0xC6, 0xA0, 0xF0,
+0x1F, 0x22, 0xB8, 0xA6, 0x10, 0xF0, 0x24, 0x6C,
+0xFD, 0xF6, 0x18, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0xB7, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
+0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x08, 0x22,
+0x5D, 0x67, 0xB8, 0xA2, 0x10, 0xF0, 0x24, 0x6C,
+0x1D, 0xF7, 0x04, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x7D, 0x67, 0x87, 0x43, 0x21, 0x4C, 0x80, 0xA4,
+0x98, 0xC3, 0x9F, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
+0x0A, 0x22, 0xDD, 0x67, 0xB8, 0xA6, 0xE6, 0xA0,
+0xC5, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x1D, 0xF7,
+0x10, 0x4C, 0x80, 0x18, 0x35, 0x19, 0x5D, 0x67,
+0x09, 0x94, 0xB8, 0xA2, 0x80, 0x18, 0x66, 0x1E,
+0x7D, 0x67, 0x58, 0xC3, 0x09, 0x94, 0xA5, 0xA0,
+0x80, 0x18, 0x66, 0x1E, 0x45, 0xC0, 0x09, 0x94,
+0xA6, 0xA0, 0x80, 0x18, 0x66, 0x1E, 0x46, 0xC0,
+0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
+0x04, 0x6B, 0x6C, 0xEA, 0x0A, 0x22, 0xDD, 0x67,
+0xB8, 0xA6, 0xE6, 0xA0, 0xC5, 0xA0, 0x10, 0xF0,
+0x24, 0x6C, 0x3D, 0xF7, 0x00, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x46, 0xA0, 0xFF, 0x6B, 0x85, 0xA0,
+0x4E, 0xEB, 0x01, 0x5B, 0x78, 0x67, 0xFF, 0x74,
+0x05, 0x61, 0x45, 0xC0, 0x01, 0x6A, 0x4B, 0xEA,
+0x46, 0xC0, 0x01, 0x4B, 0x9D, 0x67, 0x58, 0xA4,
+0xFF, 0x72, 0x09, 0x61, 0x45, 0xA0, 0x01, 0x4B,
+0x58, 0xC4, 0x01, 0x6A, 0x4B, 0xEA, 0x45, 0xC0,
+0xFF, 0x6A, 0x4C, 0xEB, 0x08, 0x10, 0x07, 0x2B,
+0x20, 0xF0, 0x66, 0xA0, 0x19, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x10, 0x6B, 0x08, 0x10, 0x01, 0x73,
+0x08, 0x61, 0x20, 0xF0, 0x66, 0xA0, 0x19, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x08, 0x6B, 0x6D, 0xEA,
+0x07, 0x10, 0x02, 0x73, 0x0F, 0x61, 0x20, 0xF0,
+0x66, 0xA0, 0x19, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x20, 0xF0, 0x46, 0xC0, 0x30, 0xF0, 0x20, 0x6A,
+0x25, 0xF6, 0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA,
+0x33, 0x22, 0x22, 0x10, 0x20, 0xF0, 0x66, 0xA0,
+0x19, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0,
+0x46, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
+0x48, 0x9A, 0x04, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x3D, 0xF7, 0x10, 0x4C,
+0x80, 0x18, 0x35, 0x19, 0x20, 0xF0, 0x66, 0xA0,
+0x03, 0x6A, 0x20, 0xF0, 0x85, 0xA0, 0x6C, 0xEA,
+0x48, 0x33, 0x0D, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
+0x6D, 0xEA, 0x20, 0xF0, 0x45, 0xC0, 0x2A, 0x10,
+0x20, 0xF0, 0x46, 0xA0, 0xDD, 0x67, 0xB8, 0xA6,
+0xE6, 0xA0, 0xC5, 0xA0, 0x4E, 0x32, 0x03, 0x6B,
+0x10, 0xF0, 0x24, 0x6C, 0x6C, 0xEA, 0x3D, 0xF7,
+0x1C, 0x4C, 0x04, 0xD2, 0x80, 0x18, 0x35, 0x19,
+0x0C, 0x92, 0x01, 0x6E, 0x01, 0x72, 0x08, 0x61,
+0x20, 0xF0, 0x66, 0xA0, 0x19, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x20, 0xF0, 0x46, 0xC0, 0x00, 0x6E,
+0x20, 0xF0, 0x63, 0xA0, 0x0F, 0x6A, 0x6C, 0xEA,
+0x10, 0x6B, 0x6D, 0xEA, 0x20, 0xF0, 0x43, 0xC0,
+0x7D, 0x67, 0x09, 0x94, 0xB8, 0xA3, 0xF9, 0xA3,
+0x80, 0x18, 0x00, 0x1F, 0x13, 0x97, 0x12, 0x91,
+0x11, 0x90, 0x0A, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xF7, 0x63, 0x11, 0x62, 0x10, 0xD1, 0x0F, 0xD0,
+0xFF, 0x6F, 0xEC, 0xEC, 0x52, 0x68, 0x18, 0xEC,
+0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF2, 0x08, 0x4A,
+0x94, 0x33, 0xEC, 0xED, 0xEC, 0xEE, 0x08, 0xD4,
+0x0C, 0xD6, 0x07, 0xD5, 0x7F, 0x69, 0x12, 0xE8,
+0x01, 0xE2, 0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5,
+0x50, 0x9A, 0x49, 0xE3, 0x40, 0xA2, 0x7D, 0x67,
+0x50, 0xC3, 0x40, 0xA0, 0xD0, 0xA3, 0x06, 0xD2,
+0x61, 0xA0, 0xFE, 0x65, 0xCC, 0xE9, 0x0A, 0xD3,
+0x20, 0xF0, 0xC5, 0xA0, 0xD2, 0x32, 0x09, 0xD2,
+0x09, 0x93, 0x03, 0x6A, 0xCA, 0x34, 0x4C, 0xEB,
+0x0B, 0xD6, 0x4C, 0xEC, 0xEC, 0xEB, 0xDD, 0x67,
+0x09, 0xD3, 0x91, 0xC6, 0x20, 0xF0, 0xA6, 0xA0,
+0x04, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB, 0x8D, 0xEB,
+0x01, 0x6C, 0x8B, 0xEC, 0x85, 0xC0, 0x86, 0xC0,
+0x08, 0x96, 0x30, 0xF0, 0x20, 0x6D, 0xEF, 0xF4,
+0x08, 0x4D, 0x4A, 0x4E, 0xCC, 0x36, 0xB9, 0xE6,
+0x86, 0xC6, 0x08, 0x96, 0xCC, 0x36, 0xB5, 0xE6,
+0x40, 0xF2, 0x97, 0xC5, 0x20, 0xF0, 0xA7, 0xA0,
+0x11, 0x6C, 0x8B, 0xEC, 0xAC, 0xEC, 0x20, 0xF0,
+0x87, 0xC0, 0x80, 0x6C, 0x8B, 0xEC, 0x8D, 0xEB,
+0x67, 0x4C, 0x8C, 0xEB, 0x20, 0xF0, 0x66, 0xC0,
+0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
+0x08, 0x6C, 0x8C, 0xEB, 0x0C, 0x23, 0x0B, 0x93,
+0x10, 0xF0, 0x24, 0x6C, 0x5D, 0xF7, 0x18, 0x4C,
+0x6C, 0xEA, 0x7D, 0x67, 0xD1, 0xA3, 0xBF, 0x67,
+0x4C, 0xEF, 0x80, 0x18, 0x35, 0x19, 0x06, 0x96,
+0x23, 0xEE, 0x02, 0x60, 0x5D, 0x67, 0xD0, 0xC2,
+0x07, 0x92, 0x00, 0x6E, 0x06, 0xD6, 0x50, 0x22,
+0x7D, 0x67, 0x50, 0xA3, 0x04, 0x05, 0x00, 0xF0,
+0x11, 0x06, 0x5F, 0xC0, 0x08, 0x94, 0x02, 0x6F,
+0x80, 0x18, 0xF7, 0x1D, 0x43, 0x2A, 0xDD, 0x67,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x48, 0x9A,
+0x08, 0x94, 0xB0, 0xA6, 0x40, 0xEA, 0xFF, 0x72,
+0x08, 0x60, 0x07, 0x96, 0x7D, 0x67, 0x50, 0xC3,
+0xFF, 0x4E, 0xFF, 0x6A, 0x4C, 0xEE, 0x07, 0xD6,
+0x31, 0x26, 0x0A, 0x92, 0x00, 0x6B, 0x06, 0xD3,
+0x23, 0xEA, 0x22, 0x61, 0xDD, 0x67, 0x47, 0x46,
+0x21, 0x4A, 0x40, 0xA2, 0x50, 0xC6, 0x28, 0x10,
+0x08, 0x96, 0x09, 0x97, 0x91, 0x67, 0x01, 0x6D,
+0x80, 0x18, 0xD7, 0x1C, 0xDD, 0x67, 0x50, 0xC6,
+0x0A, 0x92, 0x23, 0xEA, 0x02, 0x61, 0x50, 0xC6,
+0x0A, 0x10, 0xDD, 0x67, 0x50, 0xA6, 0xFF, 0x72,
+0x06, 0x61, 0xFF, 0x6A, 0xFF, 0x49, 0x4C, 0xE9,
+0x0B, 0x92, 0x4A, 0xE9, 0xE9, 0x61, 0x06, 0x93,
+0xFF, 0x6A, 0x01, 0x4B, 0x4C, 0xEB, 0x06, 0xD3,
+0x06, 0x96, 0x07, 0x92, 0x43, 0xEE, 0x06, 0x60,
+0x68, 0x41, 0xB4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB,
+0x0B, 0xD3, 0xDA, 0x17, 0x01, 0x6E, 0x06, 0xD6,
+0x0C, 0x92, 0x01, 0x72, 0x09, 0x61, 0x20, 0xF0,
+0x66, 0xA0, 0x19, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x00, 0x6B, 0x20, 0xF0, 0x46, 0xC0, 0x06, 0xD3,
+0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
+0x08, 0x6B, 0x6C, 0xEA, 0x09, 0x22, 0xDD, 0x67,
+0xB0, 0xA6, 0xD1, 0xA6, 0x10, 0xF0, 0x24, 0x6C,
+0x7D, 0xF7, 0x14, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x20, 0xF0, 0x63, 0xA0, 0x0F, 0x6A, 0x6C, 0xEA,
+0x20, 0x6B, 0x6D, 0xEA, 0x20, 0xF0, 0x43, 0xC0,
+0x5D, 0x67, 0xF1, 0xA2, 0x08, 0x94, 0xB0, 0xA2,
+0x06, 0x96, 0x80, 0x18, 0x00, 0x1F, 0x11, 0x97,
+0x10, 0x91, 0x0F, 0x90, 0x09, 0x63, 0x00, 0xEF,
+0xF6, 0x63, 0x13, 0x62, 0x12, 0xD1, 0x11, 0xD0,
+0xFF, 0x6A, 0x4C, 0xEC, 0x52, 0x68, 0x18, 0xEC,
+0x30, 0xF0, 0x20, 0x6B, 0x60, 0xF2, 0x08, 0x4B,
+0x09, 0xD4, 0x9D, 0x67, 0x12, 0xE8, 0x01, 0xE3,
+0x00, 0x6B, 0x6C, 0xCC, 0x6D, 0xCC, 0x20, 0xF0,
+0x86, 0xA0, 0x40, 0x6B, 0x8C, 0xEB, 0x4C, 0xEB,
+0x0D, 0x23, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
+0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x20, 0xF2,
+0x11, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF7,
+0x04, 0x4C, 0x2A, 0x12, 0x09, 0x95, 0x10, 0xF0,
+0x24, 0x6C, 0x9C, 0xF5, 0x90, 0x9C, 0xB4, 0x33,
+0x7F, 0x6E, 0x91, 0xE3, 0x20, 0xA4, 0x80, 0x6C,
+0x4C, 0xE9, 0x2C, 0xEE, 0x2C, 0xEC, 0x0A, 0xD6,
+0x0E, 0xD4, 0x20, 0xF0, 0x85, 0xA0, 0x40, 0xF0,
+0x24, 0xC0, 0x0A, 0x95, 0x8A, 0x34, 0x0C, 0xD4,
+0x0C, 0x96, 0x03, 0x6C, 0x8C, 0xEE, 0x10, 0xF0,
+0x24, 0x6C, 0x9C, 0xF5, 0x8C, 0x9C, 0x4C, 0xEE,
+0x0C, 0xD6, 0x8D, 0xE3, 0x60, 0xA3, 0x83, 0x67,
+0x4C, 0xEC, 0x0F, 0xD4, 0x60, 0xA0, 0xA3, 0xEB,
+0x08, 0x60, 0x0E, 0x96, 0x0A, 0xD3, 0x23, 0x67,
+0x04, 0x26, 0x80, 0x69, 0x2B, 0xE9, 0x6D, 0xE9,
+0x4C, 0xE9, 0x09, 0x93, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xA2, 0xF7, 0x14, 0x4B,
+0x64, 0x33, 0x4D, 0xE3, 0x60, 0xAB, 0xE0, 0xF1,
+0x11, 0x23, 0x09, 0x93, 0x23, 0xF0, 0x14, 0x4B,
+0x64, 0x33, 0x4D, 0xE3, 0x60, 0xAB, 0x03, 0x5B,
+0x0B, 0x61, 0x65, 0xF4, 0x40, 0x9A, 0x02, 0x6B,
+0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0x9D, 0xF7, 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x30, 0xF0, 0x20, 0x6A, 0x08, 0xD2, 0x09, 0x92,
+0x08, 0x93, 0x30, 0xF0, 0x20, 0x6E, 0xA2, 0xF7,
+0x14, 0x4A, 0xC0, 0xF1, 0x08, 0x4B, 0x44, 0x32,
+0x69, 0xE2, 0xA0, 0xAA, 0x09, 0x92, 0x08, 0xD3,
+0xA3, 0xF0, 0x14, 0x4A, 0x44, 0x32, 0x69, 0xE2,
+0x80, 0xAA, 0x0B, 0xD2, 0x4E, 0xF5, 0x40, 0x9E,
+0x93, 0xE5, 0x40, 0xEA, 0x0D, 0xD2, 0x09, 0x92,
+0x08, 0x93, 0x0B, 0x96, 0x23, 0xF1, 0x14, 0x4A,
+0x44, 0x32, 0x69, 0xE2, 0xA0, 0xAA, 0x30, 0xF0,
+0x20, 0x6B, 0x80, 0xAE, 0x4E, 0xF5, 0x40, 0x9B,
+0x93, 0xE5, 0x40, 0xEA, 0x9D, 0x67, 0xA7, 0x44,
+0x2D, 0x4D, 0x80, 0xAD, 0x0B, 0xD2, 0x02, 0x6B,
+0x96, 0xC8, 0x08, 0x95, 0x65, 0xF4, 0x40, 0x9D,
+0x6C, 0xEA, 0x08, 0x22, 0x0D, 0x95, 0x0B, 0x96,
+0x10, 0xF0, 0x24, 0x6C, 0x9D, 0xF7, 0x18, 0x4C,
+0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6C,
+0xC0, 0xF1, 0x08, 0x4C, 0x65, 0xF4, 0x40, 0x9C,
+0x02, 0x6B, 0x6C, 0xEA, 0x18, 0x22, 0x09, 0x92,
+0x09, 0x96, 0x09, 0x93, 0xA3, 0xF0, 0x14, 0x4A,
+0xA2, 0xF7, 0x14, 0x4E, 0x23, 0xF0, 0x14, 0x4B,
+0x44, 0x32, 0xC4, 0x36, 0x64, 0x33, 0x89, 0xE2,
+0x99, 0xE6, 0x8D, 0xE3, 0xA0, 0xAA, 0xC0, 0xAE,
+0xE0, 0xAB, 0x10, 0xF0, 0x24, 0x6C, 0xBD, 0xF7,
+0x08, 0x4C, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
+0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
+0x6C, 0xEA, 0x0C, 0x22, 0x0F, 0x96, 0x18, 0x6D,
+0x10, 0xF0, 0x24, 0x6C, 0xCC, 0xED, 0x0C, 0x96,
+0xBD, 0xF7, 0x18, 0x4C, 0xAE, 0x35, 0xF1, 0x67,
+0x80, 0x18, 0x35, 0x19, 0x09, 0x94, 0x0D, 0x95,
+0x0A, 0x96, 0x00, 0xF0, 0x1A, 0x02, 0x06, 0x07,
+0x04, 0xD2, 0x80, 0x18, 0x59, 0x1D, 0x0E, 0x93,
+0x0A, 0x6A, 0x08, 0x2B, 0x0A, 0x94, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x49, 0xE4,
+0x85, 0xF2, 0x5C, 0xA2, 0xBD, 0x67, 0x8C, 0xAD,
+0xDD, 0x67, 0x6D, 0xAE, 0xA3, 0x44, 0x55, 0xE5,
+0xA2, 0xEB, 0x00, 0x69, 0x05, 0x60, 0x23, 0x44,
+0x67, 0xE1, 0x25, 0xE2, 0xFF, 0x6A, 0x4C, 0xE9,
+0x0A, 0x93, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x49, 0xE3, 0xBD, 0x67, 0x45, 0xF2,
+0x48, 0xA2, 0x8C, 0xAD, 0xDD, 0x67, 0x6D, 0xAE,
+0x95, 0xE2, 0xA2, 0xEB, 0x00, 0x6D, 0x08, 0xD5,
+0x05, 0x60, 0x6F, 0xE4, 0x4D, 0xE3, 0xFF, 0x6A,
+0x4C, 0xEB, 0x08, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x65, 0xF4, 0x60, 0x9A,
+0x02, 0x6C, 0x8C, 0xEB, 0x0C, 0x23, 0x0A, 0x96,
+0x10, 0xF0, 0x24, 0x6C, 0xDD, 0xF7, 0x10, 0x4C,
+0x49, 0xE6, 0x45, 0xF2, 0xA8, 0xA2, 0x85, 0xF2,
+0xDC, 0xA2, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
+0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A, 0x02, 0x6B,
+0x6C, 0xEA, 0x08, 0x22, 0x08, 0x95, 0x10, 0xF0,
+0x24, 0x6C, 0xFD, 0xF7, 0x00, 0x4C, 0xD1, 0x67,
+0x80, 0x18, 0x35, 0x19, 0x40, 0xF0, 0x40, 0xA0,
+0x3F, 0x6B, 0x6C, 0xEA, 0x40, 0xF0, 0x60, 0x80,
+0x00, 0x53, 0x13, 0x60, 0x43, 0xE9, 0x02, 0x60,
+0x00, 0x69, 0x03, 0x10, 0x47, 0xE1, 0xFF, 0x6B,
+0x6C, 0xE9, 0x08, 0x93, 0x43, 0xEB, 0x03, 0x60,
+0x00, 0x6C, 0x08, 0xD4, 0x0E, 0x10, 0x08, 0x95,
+0x57, 0xE5, 0xFF, 0x6A, 0x4C, 0xED, 0x08, 0xD5,
+0x08, 0x10, 0x07, 0x22, 0x08, 0x96, 0xFF, 0x6B,
+0x45, 0xE1, 0x59, 0xE6, 0x6C, 0xEE, 0x6C, 0xE9,
+0x08, 0xD6, 0x5B, 0x59, 0x51, 0x67, 0x01, 0x61,
+0x5A, 0x6A, 0xFF, 0x6B, 0x82, 0x67, 0x6C, 0xEC,
+0x0A, 0xD4, 0x08, 0x94, 0xBD, 0x67, 0xC7, 0x45,
+0x8C, 0xEB, 0x19, 0x4E, 0x42, 0x5B, 0x40, 0xA6,
+0x01, 0x61, 0x41, 0x6A, 0xFF, 0x69, 0x4C, 0xE9,
+0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
+0x02, 0x6B, 0x6C, 0xEA, 0x08, 0x22, 0x0A, 0x96,
+0x10, 0xF0, 0x24, 0x6C, 0xFD, 0xF7, 0x10, 0x4C,
+0xB1, 0x67, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xE5, 0xF2,
+0x9B, 0xA2, 0x04, 0x6B, 0x8C, 0xEB, 0x0B, 0x23,
+0x65, 0xF4, 0x40, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
+0xA0, 0xF0, 0x1C, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0x1E, 0xF0, 0x00, 0x4C, 0xB5, 0x10, 0x0D, 0x95,
+0x0A, 0x96, 0xC3, 0xED, 0x03, 0x60, 0x0B, 0x93,
+0x1E, 0x5B, 0x59, 0x61, 0x0B, 0x94, 0x50, 0x5C,
+0x1D, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
+0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x1E, 0xF0, 0x0C, 0x4C,
+0x80, 0x18, 0x35, 0x19, 0x09, 0x94, 0x01, 0x6D,
+0xC5, 0x67, 0x80, 0x18, 0x4E, 0x21, 0x20, 0xF0,
+0x60, 0xA0, 0x39, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x20, 0xF0, 0x40, 0xC0, 0x00, 0x6A, 0x20, 0xF0,
+0x41, 0xC0, 0x90, 0x10, 0x20, 0xF0, 0x80, 0xA0,
+0x07, 0x6A, 0x8E, 0x33, 0x4C, 0xEB, 0x01, 0x4B,
+0x4C, 0xEB, 0x6C, 0x35, 0x39, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0xAD, 0xEB, 0x20, 0xF0, 0x60, 0xC0,
+0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
+0x02, 0x6C, 0x8C, 0xEB, 0x0A, 0x23, 0x20, 0xF0,
+0xA0, 0xA0, 0x10, 0xF0, 0x24, 0x6C, 0x1E, 0xF0,
+0x18, 0x4C, 0xAE, 0x35, 0x4C, 0xED, 0x80, 0x18,
+0x35, 0x19, 0x20, 0xF0, 0x40, 0xA0, 0x07, 0x6B,
+0x4E, 0x32, 0x6C, 0xEA, 0x02, 0x52, 0x6A, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
+0x02, 0x6B, 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0,
+0x24, 0x6C, 0x3E, 0xF0, 0x08, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x09, 0x94, 0x01, 0x6D, 0x00, 0x6E,
+0x80, 0x18, 0x4E, 0x21, 0x2A, 0x10, 0x0D, 0x95,
+0x23, 0xED, 0x32, 0x60, 0x20, 0xF0, 0x61, 0xA0,
+0x01, 0x4B, 0x20, 0xF0, 0x61, 0xC0, 0x65, 0xF4,
+0x40, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x08, 0x22,
+0x20, 0xF0, 0xA1, 0xA0, 0x10, 0xF0, 0x24, 0x6C,
+0x3E, 0xF0, 0x14, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x20, 0xF0, 0x41, 0xA0, 0x03, 0x5A, 0x3E, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
+0x02, 0x6B, 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0,
+0x24, 0x6C, 0x5E, 0xF0, 0x00, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x09, 0x94, 0x00, 0x6D, 0x80, 0x18,
+0x5D, 0x20, 0x00, 0x6A, 0x20, 0xF0, 0x60, 0xA0,
+0x20, 0xF0, 0x41, 0xC0, 0x39, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x20, 0xF0, 0x40, 0xC0, 0x22, 0x10,
+0x20, 0xF0, 0x41, 0xA0, 0x03, 0x22, 0xFF, 0x4A,
+0x20, 0xF0, 0x41, 0xC0, 0x20, 0xF0, 0x60, 0xA0,
+0x07, 0x6C, 0x6E, 0x32, 0x8C, 0xEA, 0x09, 0x22,
+0xFF, 0x4A, 0x8C, 0xEA, 0x4C, 0x34, 0x39, 0x6A,
+0x4B, 0xEA, 0x6C, 0xEA, 0x8D, 0xEA, 0x20, 0xF0,
+0x40, 0xC0, 0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6,
+0x48, 0x9A, 0x02, 0x6B, 0x6C, 0xEA, 0x06, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF0, 0x08, 0x4C,
+0x80, 0x18, 0x35, 0x19, 0x09, 0x94, 0x80, 0x18,
+0xEF, 0x24, 0x13, 0x97, 0x12, 0x91, 0x11, 0x90,
+0x0A, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
+0x52, 0x68, 0x18, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
+0x60, 0xF2, 0x08, 0x4B, 0x04, 0xD4, 0x4C, 0xED,
+0x12, 0xE8, 0x01, 0xE3, 0x94, 0x33, 0x10, 0xF0,
+0x24, 0x6C, 0x9C, 0xF5, 0x90, 0x9C, 0x91, 0xE3,
+0x80, 0xA4, 0xC4, 0x67, 0x10, 0xF0, 0x24, 0x6C,
+0x4C, 0xEE, 0x9C, 0xF5, 0x8C, 0x9C, 0x05, 0xD6,
+0x20, 0xF0, 0xC6, 0xA0, 0x8D, 0xE3, 0x80, 0xA3,
+0x40, 0x6B, 0xCC, 0xEB, 0x4C, 0xEB, 0x4C, 0xEC,
+0xA0, 0xF0, 0x01, 0x23, 0x18, 0x69, 0x8C, 0xE9,
+0x2F, 0x31, 0x01, 0x75, 0x4C, 0xE9, 0x23, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
+0x00, 0xF1, 0x01, 0x4A, 0x6C, 0xEA, 0x06, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF0, 0x14, 0x4C,
+0x80, 0x18, 0x35, 0x19, 0x20, 0xF0, 0x63, 0xA0,
+0x10, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x20, 0xF0,
+0x43, 0xC0, 0x04, 0x94, 0x05, 0x95, 0x00, 0x6E,
+0xF1, 0x67, 0x80, 0x18, 0x00, 0x1F, 0x20, 0xF0,
+0x66, 0xA0, 0x19, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0x20, 0xF0, 0x46, 0xC0, 0x78, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2,
+0x00, 0x6A, 0x6C, 0xEA, 0x06, 0x22, 0x10, 0xF0,
+0x24, 0x6C, 0x7E, 0xF0, 0x00, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x20, 0xF0, 0x83, 0xA0, 0x0F, 0x6A,
+0x20, 0xF0, 0xA6, 0xA0, 0x64, 0x67, 0x4C, 0xEB,
+0x01, 0x4B, 0x4C, 0xEB, 0xE1, 0x4A, 0x8C, 0xEA,
+0x6D, 0xEA, 0xAE, 0x35, 0x03, 0x6B, 0x6C, 0xED,
+0x20, 0xF0, 0x43, 0xC0, 0x43, 0x45, 0x6C, 0xEA,
+0x02, 0x5A, 0x52, 0x60, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
+0x6C, 0xEA, 0x08, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0xFF, 0x6A, 0x7E, 0xF0, 0x08, 0x4C, 0x4C, 0xED,
+0x80, 0x18, 0x35, 0x19, 0x20, 0xF0, 0xA6, 0xA0,
+0x03, 0x6C, 0xFF, 0x6E, 0xAE, 0x32, 0x8C, 0xEA,
+0x6F, 0x42, 0xCC, 0xEB, 0x79, 0xE0, 0xC5, 0xA6,
+0x03, 0x4A, 0x8C, 0xEA, 0x05, 0xD6, 0x4C, 0x36,
+0x19, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA, 0xCD, 0xEA,
+0x20, 0xF0, 0x46, 0xC0, 0x04, 0x96, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0xCC, 0x35,
+0x49, 0xE5, 0x6D, 0xE2, 0x40, 0xF2, 0x56, 0xA3,
+0xFF, 0x72, 0x0B, 0x60, 0x20, 0xF0, 0x65, 0xA0,
+0x4C, 0xEC, 0x22, 0x67, 0x0D, 0x6A, 0x4B, 0xEA,
+0x88, 0x34, 0x6C, 0xEA, 0x8D, 0xEA, 0x20, 0xF0,
+0x45, 0xC0, 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6,
+0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
+0x08, 0x22, 0x05, 0x96, 0x10, 0xF0, 0x24, 0x6C,
+0x7E, 0xF0, 0x14, 0x4C, 0xB1, 0x67, 0x80, 0x18,
+0x35, 0x19, 0x04, 0x94, 0x05, 0x95, 0x01, 0x6E,
+0xF1, 0x67, 0x80, 0x18, 0x00, 0x1F, 0x03, 0x10,
+0x04, 0x94, 0x80, 0x18, 0x35, 0x20, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xF6, 0x63, 0x13, 0x62, 0x12, 0xD1, 0x11, 0xD0,
+0xFF, 0x6A, 0x24, 0x67, 0x4C, 0xE9, 0x52, 0x68,
+0x18, 0xE9, 0x30, 0xF0, 0x20, 0x6B, 0x60, 0xF2,
+0x08, 0x4B, 0x7F, 0x6E, 0x12, 0xE8, 0x01, 0xE3,
+0x76, 0xA8, 0x83, 0x67, 0x4C, 0xEC, 0x0D, 0xD4,
+0x10, 0xF0, 0x24, 0x6C, 0x9C, 0xF5, 0x90, 0x9C,
+0x34, 0x33, 0x91, 0xE3, 0x80, 0xA4, 0x8C, 0xEA,
+0x09, 0xD2, 0xCC, 0xEA, 0x08, 0xD2, 0x10, 0xF0,
+0x24, 0x6A, 0x9C, 0xF5, 0x4C, 0x9A, 0x4D, 0xE3,
+0x60, 0xA3, 0x18, 0x6A, 0x6C, 0xEA, 0x4E, 0x32,
+0x0C, 0xD2, 0x33, 0xF0, 0x64, 0x41, 0x30, 0xF0,
+0x20, 0x6A, 0x64, 0x33, 0xC0, 0xF1, 0x08, 0x4A,
+0x4D, 0xE3, 0x60, 0xAB, 0x03, 0x5B, 0x15, 0x61,
+0x65, 0xF4, 0x40, 0x9A, 0x00, 0xF2, 0x00, 0x6B,
+0x4C, 0xEB, 0x06, 0x23, 0x10, 0xF0, 0x24, 0x6C,
+0x9D, 0xF7, 0x10, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x01, 0x6D, 0x91, 0x67, 0xC5, 0x67, 0x80, 0x18,
+0x4E, 0x21, 0x91, 0x67, 0x00, 0x6D, 0x80, 0x18,
+0xF5, 0x22, 0x30, 0xF0, 0x20, 0x6F, 0x33, 0xF2,
+0x44, 0x41, 0xC0, 0xF1, 0x08, 0x4F, 0x44, 0x32,
+0xE9, 0xE2, 0xA0, 0xAA, 0x0E, 0xD2, 0xB3, 0xF1,
+0x44, 0x41, 0x44, 0x32, 0xE9, 0xE2, 0x30, 0xF0,
+0x20, 0x6B, 0x80, 0xAA, 0x07, 0xD2, 0x4E, 0xF5,
+0x40, 0x9B, 0x93, 0xE5, 0x06, 0xD7, 0x40, 0xEA,
+0x06, 0x94, 0x0B, 0xD2, 0x07, 0x96, 0x33, 0xF3,
+0x44, 0x41, 0x44, 0x32, 0x89, 0xE2, 0xA0, 0xAA,
+0x80, 0xAE, 0x30, 0xF0, 0x20, 0x6F, 0x0F, 0xD2,
+0x4E, 0xF5, 0x40, 0x9F, 0x93, 0xE5, 0x40, 0xEA,
+0x06, 0x94, 0x0A, 0xD2, 0x00, 0xF2, 0x00, 0x6A,
+0x65, 0xF4, 0x60, 0x9C, 0x6C, 0xEA, 0x12, 0x22,
+0x07, 0x96, 0x0E, 0x97, 0xB3, 0xF2, 0x44, 0x41,
+0x0F, 0x93, 0x44, 0x32, 0x89, 0xE2, 0xA0, 0xAE,
+0xC0, 0xAF, 0xE0, 0xAA, 0x40, 0xAB, 0x10, 0xF0,
+0x24, 0x6C, 0x9E, 0xF0, 0x00, 0x4C, 0x04, 0xD2,
+0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
+0x6C, 0xEA, 0x0B, 0x22, 0x09, 0x94, 0x0B, 0x95,
+0x0A, 0x96, 0x0C, 0x97, 0x04, 0xD4, 0x10, 0xF0,
+0x24, 0x6C, 0x9E, 0xF0, 0x18, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x09, 0x96, 0xDE, 0x32, 0x12, 0x22,
+0x08, 0x97, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF3,
+0x1C, 0x4A, 0xE4, 0x33, 0x49, 0xE3, 0x60, 0xAA,
+0x72, 0x34, 0x76, 0x32, 0x49, 0xE4, 0x49, 0xE3,
+0x7E, 0x33, 0x69, 0xE2, 0xFF, 0xF7, 0x1F, 0x6B,
+0x6C, 0xEA, 0x08, 0x10, 0x08, 0x94, 0x30, 0xF0,
+0x20, 0x6A, 0xAF, 0xF3, 0x1C, 0x4A, 0x84, 0x33,
+0x49, 0xE3, 0x40, 0xAA, 0x40, 0xF0, 0x64, 0x80,
+0x00, 0x53, 0x15, 0x60, 0x40, 0xF0, 0x84, 0xA0,
+0x7F, 0x6B, 0x6C, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
+0xAF, 0xF3, 0x1C, 0x4B, 0x84, 0x34, 0x71, 0xE4,
+0x80, 0xAC, 0x92, 0x35, 0x96, 0x33, 0x6D, 0xE5,
+0x6D, 0xE4, 0x9E, 0x34, 0x8D, 0xE3, 0xFF, 0xF7,
+0x1F, 0x6C, 0x8C, 0xEB, 0x0B, 0x10, 0x40, 0xF0,
+0x84, 0xA0, 0x7F, 0x6D, 0x30, 0xF0, 0x20, 0x6B,
+0xAC, 0xEC, 0xAF, 0xF3, 0x1C, 0x4B, 0x84, 0x34,
+0x71, 0xE4, 0x60, 0xAC, 0x20, 0xF0, 0xA3, 0xA0,
+0x10, 0x6C, 0x8B, 0xEC, 0xAC, 0xEC, 0xFF, 0x6D,
+0xAC, 0xEC, 0x10, 0x6D, 0x8E, 0xED, 0x01, 0x5D,
+0x0D, 0x97, 0xB8, 0x67, 0xAB, 0xED, 0x05, 0x6C,
+0xAC, 0xEC, 0x64, 0x6D, 0xFB, 0xE5, 0xD8, 0xEB,
+0x64, 0x4C, 0x0B, 0x97, 0x12, 0xEB, 0x98, 0xEB,
+0x20, 0xF0, 0x86, 0xA0, 0x03, 0x6B, 0x8C, 0xEB,
+0x0C, 0x94, 0x12, 0xEE, 0xC4, 0xEB, 0xEF, 0xE5,
+0xB8, 0xEB, 0x07, 0xD6, 0x12, 0xED, 0x58, 0xED,
+0x00, 0xF2, 0x00, 0x6A, 0x12, 0xEB, 0x64, 0xEC,
+0x06, 0xD3, 0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6,
+0x68, 0x9B, 0x6C, 0xEA, 0x08, 0x22, 0x0D, 0x95,
+0x10, 0xF0, 0x24, 0x6C, 0xBE, 0xF0, 0x18, 0x4C,
+0xC7, 0x67, 0x80, 0x18, 0x35, 0x19, 0x30, 0xF0,
+0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2,
+0x00, 0x6A, 0x6C, 0xEA, 0x09, 0x22, 0x40, 0xF0,
+0xA4, 0xA0, 0x08, 0x96, 0x10, 0xF0, 0x24, 0x6C,
+0xDE, 0xF0, 0x04, 0x4C, 0x80, 0x18, 0x35, 0x19,
+0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
+0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x0C, 0x22,
+0x07, 0x96, 0x06, 0x97, 0x10, 0xF0, 0x24, 0x6C,
+0xC2, 0x35, 0xE2, 0x36, 0xDE, 0xF0, 0x10, 0x4C,
+0xAA, 0x35, 0xCA, 0x36, 0x80, 0x18, 0x35, 0x19,
+0x06, 0x92, 0x07, 0x93, 0x63, 0xEA, 0x03, 0x61,
+0x0A, 0x94, 0x1E, 0x5C, 0x2F, 0x61, 0x20, 0xF0,
+0x63, 0xA0, 0x10, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x72, 0x4C, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0x25, 0xF6, 0x68, 0x9B,
+0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA, 0x06, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0xDE, 0xF0, 0x1C, 0x4C,
+0x80, 0x18, 0x35, 0x19, 0x0A, 0x96, 0x1E, 0x5E,
+0x3B, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x2E, 0xF5,
+0x48, 0x9A, 0x08, 0x94, 0x40, 0xEA, 0x07, 0x22,
+0xFD, 0x67, 0x47, 0x47, 0x1D, 0x4A, 0xE0, 0xA2,
+0x40, 0xF0, 0xE6, 0xC0, 0x2D, 0x10, 0x5D, 0x67,
+0x67, 0x42, 0x1D, 0x4B, 0x40, 0xA3, 0x40, 0xF0,
+0x45, 0xC0, 0x26, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0x25, 0xF6, 0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
+0x6C, 0xEA, 0x07, 0x22, 0x09, 0x95, 0x10, 0xF0,
+0x24, 0x6C, 0xFE, 0xF0, 0x04, 0x4C, 0x80, 0x18,
+0x35, 0x19, 0x00, 0x6A, 0x20, 0xF0, 0x63, 0xA0,
+0x40, 0xF0, 0x42, 0xC0, 0x10, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x10, 0x72,
+0x01, 0x6D, 0x0B, 0x61, 0x20, 0xF0, 0x60, 0xA0,
+0x39, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x08, 0x6B,
+0x6D, 0xEA, 0x20, 0xF0, 0x40, 0xC0, 0x01, 0x10,
+0x00, 0x6D, 0x91, 0x67, 0x80, 0x18, 0xF5, 0x22,
+0x13, 0x97, 0x12, 0x91, 0x11, 0x90, 0x0A, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x6A,
+0xFF, 0x6B, 0x04, 0x67, 0x26, 0x67, 0x4E, 0xF5,
+0x5C, 0x9A, 0x6C, 0xE8, 0x6C, 0xE9, 0x6C, 0xED,
+0x90, 0x67, 0xD1, 0x67, 0x40, 0xEA, 0xA2, 0x67,
+0x90, 0x67, 0xF1, 0x67, 0x00, 0x6E, 0x80, 0x18,
+0x00, 0x1F, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0xE5, 0xF2, 0x9A, 0xA3, 0x52, 0x6A, 0xE5, 0xF2,
+0x79, 0xA3, 0x58, 0xEC, 0x30, 0xF0, 0x20, 0x6D,
+0x60, 0xF2, 0x08, 0x4D, 0xFF, 0x4B, 0x12, 0xEA,
+0x49, 0xE5, 0xFF, 0x6D, 0xAC, 0xEB, 0x05, 0x5B,
+0xE0, 0xF0, 0x13, 0x60, 0x10, 0xF0, 0x24, 0x6D,
+0x68, 0x33, 0xFB, 0xF6, 0x1C, 0x4D, 0x75, 0xE5,
+0x60, 0x9D, 0x00, 0xEB, 0x0C, 0x6B, 0x9D, 0x67,
+0x6F, 0xCC, 0xBD, 0x67, 0x0E, 0x6C, 0x90, 0xC5,
+0x72, 0xC5, 0x20, 0xF0, 0x72, 0xA2, 0x03, 0x6C,
+0xDD, 0x67, 0x73, 0xC5, 0x63, 0xA2, 0x74, 0xC5,
+0x20, 0xF0, 0x65, 0xA2, 0x6A, 0x35, 0x8C, 0xED,
+0xB5, 0xC6, 0xA3, 0x67, 0x8C, 0xED, 0xB6, 0xC6,
+0xA5, 0xA2, 0xB7, 0xC6, 0xA6, 0xA2, 0xB8, 0xC6,
+0x7E, 0x35, 0x72, 0x33, 0x8C, 0xEB, 0x7A, 0xC6,
+0xB9, 0xC6, 0x20, 0xF0, 0x46, 0xA2, 0x01, 0x6B,
+0x4A, 0x32, 0x6C, 0xEA, 0x5B, 0xC6, 0x00, 0x6A,
+0x5C, 0xC6, 0x6D, 0x10, 0xBD, 0x67, 0x0C, 0x6B,
+0x6F, 0xCD, 0x0E, 0x6B, 0x70, 0xC5, 0x0D, 0x6B,
+0x72, 0xC5, 0x64, 0xA2, 0x8C, 0x34, 0x73, 0xC5,
+0x60, 0xA2, 0x74, 0xC5, 0x41, 0xA2, 0x55, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x58, 0x9A,
+0x49, 0xE4, 0x40, 0xA2, 0x56, 0xC5, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF5, 0x40, 0x9A, 0x49, 0xE4,
+0x40, 0xA2, 0x57, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF5, 0x44, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x58, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF5,
+0x48, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x59, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x5C, 0x9A,
+0x49, 0xE4, 0x40, 0xA2, 0x5A, 0xC5, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF5, 0x4C, 0x9A, 0x49, 0xE4,
+0x40, 0xA2, 0x5B, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF5, 0x50, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x5C, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF5,
+0x54, 0x9A, 0x76, 0x10, 0xDD, 0x67, 0x0C, 0x6A,
+0x4F, 0xCE, 0x0E, 0x6A, 0x50, 0xC6, 0x52, 0xC6,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x45, 0xF4, 0x72, 0xA2, 0x73, 0xC6, 0x45, 0xF4,
+0x73, 0xA2, 0x74, 0xC6, 0x45, 0xF4, 0x74, 0xA2,
+0x75, 0xC6, 0x45, 0xF4, 0x75, 0xA2, 0x76, 0xC6,
+0x45, 0xF4, 0x76, 0xA2, 0x77, 0xC6, 0x45, 0xF4,
+0x77, 0xA2, 0x78, 0xC6, 0x45, 0xF4, 0x78, 0xA2,
+0x79, 0xC6, 0x45, 0xF4, 0x79, 0xA2, 0x7A, 0xC6,
+0x45, 0xF4, 0x7A, 0xA2, 0x45, 0xF4, 0x5B, 0xA2,
+0x7B, 0xC6, 0x5C, 0xC6, 0x00, 0x6A, 0x5D, 0xC6,
+0x4E, 0x10, 0x7D, 0x67, 0x03, 0x6A, 0x4F, 0xCB,
+0x0E, 0x6A, 0x50, 0xC3, 0x0F, 0x6A, 0x52, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4, 0x60, 0xA2,
+0xEF, 0xF4, 0x00, 0x4A, 0x41, 0xA2, 0x9D, 0x67,
+0x73, 0xC4, 0x54, 0xC4, 0x3C, 0x10, 0xBD, 0x67,
+0x0C, 0x6B, 0x6F, 0xCD, 0x0E, 0x6B, 0x70, 0xC5,
+0x10, 0x6B, 0x72, 0xC5, 0x40, 0xF0, 0x64, 0xA2,
+0x8C, 0x34, 0x73, 0xC5, 0x77, 0xAA, 0x04, 0x4B,
+0x6F, 0x33, 0x74, 0xC5, 0x76, 0xAA, 0x04, 0x4B,
+0x6F, 0x33, 0x75, 0xC5, 0x60, 0xA2, 0x76, 0xC5,
+0x65, 0xA2, 0x77, 0xC5, 0x46, 0xA2, 0x58, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x58, 0x9A,
+0x49, 0xE4, 0x40, 0xA2, 0x59, 0xC5, 0x10, 0xF0,
+0x24, 0x6A, 0xFC, 0xF5, 0x40, 0x9A, 0x49, 0xE4,
+0x40, 0xA2, 0x5A, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
+0xFC, 0xF5, 0x44, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x5B, 0xC5, 0x10, 0xF0, 0x24, 0x6A, 0xFC, 0xF5,
+0x48, 0x9A, 0x49, 0xE4, 0x40, 0xA2, 0x5C, 0xC5,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x5C, 0x9A,
+0x51, 0xE4, 0x40, 0xA4, 0x5D, 0xC5, 0x04, 0x94,
+0x05, 0x95, 0x06, 0x96, 0x07, 0x97, 0x80, 0x18,
+0x47, 0x10, 0x09, 0x97, 0x05, 0x63, 0x00, 0xEF,
+0x00, 0x6A, 0xB3, 0xF0, 0xA4, 0x42, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0xA4, 0x35,
+0x00, 0x6C, 0x75, 0xE5, 0x80, 0xCD, 0x33, 0xF0,
+0xA4, 0x42, 0xA4, 0x35, 0x75, 0xE5, 0x80, 0xCD,
+0xB2, 0xF7, 0xA4, 0x42, 0xA4, 0x35, 0x75, 0xE5,
+0x80, 0xCD, 0xB3, 0xF1, 0xA4, 0x42, 0xA4, 0x35,
+0x75, 0xE5, 0x80, 0xCD, 0x33, 0xF2, 0xA4, 0x42,
+0xA4, 0x35, 0x75, 0xE5, 0x80, 0xCD, 0xB3, 0xF2,
+0xA4, 0x42, 0xA4, 0x35, 0x75, 0xE5, 0x80, 0xCD,
+0x43, 0xF4, 0xA4, 0x42, 0xA4, 0x35, 0x75, 0xE5,
+0x80, 0xCD, 0xC3, 0xF3, 0xA4, 0x42, 0xA4, 0x35,
+0x75, 0xE5, 0x80, 0xCD, 0xC3, 0xF4, 0xA4, 0x42,
+0xA4, 0x35, 0x75, 0xE5, 0x82, 0xCD, 0x43, 0xF5,
+0xA4, 0x42, 0xA4, 0x35, 0x75, 0xE5, 0x82, 0xCD,
+0x01, 0x4A, 0xFF, 0x6C, 0x8C, 0xEA, 0x80, 0x72,
+0xC4, 0x61, 0x58, 0x67, 0x87, 0xF1, 0x48, 0xDB,
+0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6A, 0x8C, 0xEA,
+0x43, 0xF4, 0xA4, 0x42, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xA4, 0x35, 0x00, 0x6C,
+0x75, 0xE5, 0x80, 0xCD, 0xC3, 0xF3, 0xA4, 0x42,
+0xA4, 0x35, 0x75, 0xE5, 0x80, 0xCD, 0xC3, 0xF4,
+0xA4, 0x42, 0x43, 0xF5, 0x04, 0x4A, 0xA4, 0x35,
+0x44, 0x32, 0x75, 0xE5, 0x6D, 0xE2, 0x82, 0xCD,
+0x82, 0xCB, 0x20, 0xE8, 0xFF, 0x6A, 0x8C, 0xEA,
+0xB3, 0xF0, 0xA4, 0x42, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xA4, 0x35, 0x00, 0x6C,
+0x75, 0xE5, 0x80, 0xCD, 0x33, 0xF1, 0xA4, 0x42,
+0xA4, 0x35, 0x75, 0xE5, 0x80, 0xCD, 0x33, 0xF0,
+0xA4, 0x42, 0xA2, 0xF7, 0x14, 0x4A, 0xA4, 0x35,
+0x44, 0x32, 0x75, 0xE5, 0x6D, 0xE2, 0x80, 0xCD,
+0x80, 0xCB, 0x20, 0xE8, 0xFF, 0x6A, 0x8C, 0xEA,
+0xB3, 0xF1, 0xA4, 0x42, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xA4, 0x35, 0x00, 0x6C,
+0x75, 0xE5, 0x80, 0xCD, 0x33, 0xF3, 0xA4, 0x42,
+0xA4, 0x35, 0x75, 0xE5, 0x80, 0xCD, 0x33, 0xF2,
+0xA4, 0x42, 0xA4, 0x35, 0x75, 0xE5, 0x80, 0xCD,
+0xB3, 0xF2, 0xA4, 0x42, 0xA4, 0x35, 0x75, 0xE5,
+0x80, 0xCD, 0x52, 0x6C, 0x98, 0xEA, 0x80, 0x4C,
+0xEE, 0x4C, 0x12, 0xEA, 0x6D, 0xE2, 0xE0, 0xF0,
+0x41, 0xA3, 0x4C, 0xEC, 0xE0, 0xF0, 0x81, 0xC3,
+0x20, 0xE8, 0x00, 0x65, 0xF4, 0x63, 0x17, 0x62,
+0x16, 0xD1, 0x15, 0xD0, 0x10, 0xF0, 0x24, 0x6B,
+0xFF, 0x6A, 0xFC, 0xF5, 0x78, 0x9B, 0x4C, 0xEC,
+0x90, 0x34, 0x6D, 0xE4, 0x00, 0xA3, 0x10, 0xF0,
+0x24, 0x6B, 0xFC, 0xF5, 0x7C, 0x9B, 0x4C, 0xE8,
+0x6D, 0xE4, 0xA0, 0xA3, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF6, 0x60, 0x9B, 0x4C, 0xED, 0x6D, 0xE4,
+0x60, 0xA3, 0xC3, 0x67, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF6, 0x64, 0x9B, 0x4C, 0xEE, 0x0F, 0xD6,
+0x6D, 0xE4, 0x60, 0xA3, 0xE3, 0x67, 0x10, 0xF0,
+0x24, 0x6B, 0x1C, 0xF6, 0xC8, 0x9B, 0x4C, 0xEF,
+0x10, 0xD7, 0xD9, 0xE4, 0x60, 0xA6, 0xE3, 0x67,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF6, 0x6C, 0x9B,
+0x4C, 0xEF, 0x09, 0xD7, 0x6D, 0xE4, 0x60, 0xA3,
+0xE3, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF6,
+0x70, 0x9B, 0x4C, 0xEF, 0x0B, 0xD7, 0x6D, 0xE4,
+0xE0, 0xA3, 0x4C, 0xEF, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF6, 0x54, 0x9A, 0x49, 0xE4, 0x40, 0xA2,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF6, 0x58, 0x9A,
+0x51, 0xE4, 0x60, 0xA4, 0x01, 0x6A, 0x4C, 0xEB,
+0xA0, 0xF2, 0x06, 0x2B, 0x52, 0x69, 0x38, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0x60, 0xF2, 0x08, 0x4B,
+0x12, 0xE9, 0x25, 0xE3, 0x60, 0xA6, 0x00, 0xF6,
+0x60, 0x33, 0x00, 0xF6, 0x63, 0x33, 0x00, 0x53,
+0x00, 0x6B, 0x0E, 0xD3, 0x05, 0x60, 0x20, 0xF0,
+0x66, 0xA1, 0x7A, 0x33, 0x4C, 0xEB, 0x0E, 0xD3,
+0x10, 0xF0, 0x24, 0x6A, 0x9C, 0xF5, 0x50, 0x9A,
+0x14, 0x33, 0x0F, 0x94, 0x49, 0xE3, 0xC0, 0xA2,
+0xFF, 0x6B, 0x6C, 0xEE, 0xCA, 0xEC, 0x10, 0x60,
+0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
+0x01, 0x6B, 0x6C, 0xEA, 0x60, 0xF2, 0x1C, 0x22,
+0x0F, 0x95, 0x10, 0xF0, 0x24, 0x6C, 0xFE, 0xF0,
+0x10, 0x4C, 0x80, 0x18, 0x35, 0x19, 0x74, 0x12,
+0x20, 0xF0, 0x85, 0xA1, 0x80, 0x6A, 0x4B, 0xEA,
+0x8C, 0xEA, 0x6C, 0xEA, 0x40, 0xF2, 0x1E, 0x2A,
+0x0E, 0x96, 0x19, 0x26, 0x30, 0xF0, 0x20, 0x6A,
+0xB3, 0xF1, 0x64, 0x40, 0xC0, 0xF1, 0x08, 0x4A,
+0x64, 0x33, 0x4D, 0xE3, 0x60, 0xAB, 0x0A, 0xD3,
+0x33, 0xF3, 0x64, 0x40, 0x64, 0x33, 0x4D, 0xE3,
+0x60, 0xAB, 0x11, 0xD3, 0xB3, 0xF2, 0x64, 0x40,
+0x64, 0x33, 0x4D, 0xE3, 0x60, 0xAB, 0x12, 0xD3,
+0x33, 0xF2, 0x64, 0x40, 0x18, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xB3, 0xF0, 0x64, 0x40, 0xC0, 0xF1,
+0x08, 0x4A, 0x64, 0x33, 0x4D, 0xE3, 0x60, 0xAB,
+0x0A, 0xD3, 0x33, 0xF1, 0x64, 0x40, 0x64, 0x33,
+0x4D, 0xE3, 0x60, 0xAB, 0x11, 0xD3, 0x33, 0xF0,
+0x64, 0x40, 0x64, 0x33, 0x4D, 0xE3, 0x60, 0xAB,
+0x12, 0xD3, 0xB2, 0xF7, 0x64, 0x40, 0x64, 0x33,
+0x49, 0xE3, 0x40, 0xAA, 0x08, 0xD2, 0x40, 0xF0,
+0x61, 0xA1, 0x40, 0x6A, 0x6C, 0xEA, 0x05, 0x22,
+0x40, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0x40, 0xF0,
+0x41, 0xC1, 0x09, 0x93, 0x0B, 0x94, 0x7F, 0x6A,
+0xAC, 0xEA, 0x0D, 0xD2, 0x3F, 0x6A, 0x4C, 0xEB,
+0x4C, 0xEC, 0x4C, 0xEF, 0x69, 0xE4, 0xEE, 0xEA,
+0x09, 0xD3, 0x0B, 0xD4, 0x0C, 0xD7, 0x40, 0xF1,
+0x1D, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x65, 0xF4, 0x60, 0x9A, 0x01, 0x6C,
+0x8C, 0xEB, 0x14, 0x23, 0x09, 0x95, 0x0B, 0x96,
+0xB2, 0xF7, 0x64, 0x40, 0x64, 0x33, 0x04, 0xD5,
+0x05, 0xD6, 0x06, 0xD7, 0x49, 0xE3, 0x40, 0xAA,
+0x0F, 0x95, 0x10, 0x96, 0x0D, 0x97, 0x10, 0xF0,
+0x24, 0x6C, 0x1E, 0xF1, 0x04, 0x4C, 0x07, 0xD2,
+0x80, 0x18, 0x35, 0x19, 0x10, 0x92, 0x0F, 0x97,
+0xEE, 0xEA, 0x26, 0x22, 0x0E, 0x92, 0x05, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xC5, 0xF4, 0x68, 0xA2,
+0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC5, 0xF4,
+0x67, 0xA2, 0x40, 0xF0, 0x81, 0xA1, 0x3F, 0x6A,
+0x01, 0x6D, 0x8C, 0xEA, 0x62, 0xEA, 0x03, 0x60,
+0x57, 0xE3, 0xFF, 0x6A, 0x4C, 0xED, 0x40, 0xF0,
+0x61, 0xA1, 0x40, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x01, 0x4D, 0xFF, 0x6A, 0x4C, 0xED, 0x0C, 0x92,
+0x6F, 0x45, 0x08, 0x94, 0x78, 0xEA, 0xFF, 0xF7,
+0x1F, 0x6A, 0x12, 0xEB, 0x6D, 0xE4, 0x1F, 0x10,
+0x40, 0xF0, 0xC1, 0xA1, 0x0D, 0x97, 0x3F, 0x6B,
+0x40, 0x6A, 0xFF, 0x6C, 0xCC, 0xEB, 0xCC, 0xEA,
+0x77, 0xE7, 0x8C, 0xEA, 0x8C, 0xED, 0x03, 0x22,
+0x01, 0x4D, 0x8C, 0xED, 0x04, 0x10, 0x0D, 0x92,
+0x42, 0xEB, 0x01, 0x61, 0x01, 0x6D, 0x0A, 0x93,
+0x09, 0x94, 0xFF, 0xF7, 0x1F, 0x6A, 0x08, 0x96,
+0x8D, 0xE3, 0x0C, 0x94, 0x4C, 0xEB, 0x0A, 0xD3,
+0x98, 0xED, 0x12, 0xEB, 0x6D, 0xE6, 0x4C, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0x25, 0xF6, 0x48, 0x9A,
+0x01, 0x6E, 0x08, 0xD3, 0xCC, 0xEA, 0x0C, 0x22,
+0x40, 0xF0, 0x41, 0xA1, 0x10, 0xF0, 0x24, 0x6C,
+0x3F, 0x6F, 0x5A, 0x33, 0x3E, 0xF1, 0x14, 0x4C,
+0x6C, 0xEE, 0x4C, 0xEF, 0x80, 0x18, 0x35, 0x19,
+0x0B, 0x92, 0x09, 0x94, 0x12, 0x97, 0x11, 0x93,
+0x5D, 0xE7, 0x8D, 0xE3, 0xFF, 0xF7, 0x1F, 0x6A,
+0x4C, 0xEB, 0x4C, 0xEF, 0x0B, 0xD7, 0x09, 0xD3,
+0x40, 0xF0, 0x61, 0xA1, 0x40, 0x6A, 0x6D, 0xEA,
+0x40, 0xF0, 0x41, 0xC1, 0x30, 0xF0, 0x20, 0x6A,
+0x25, 0xF6, 0x48, 0x9A, 0x08, 0x95, 0x01, 0x6B,
+0x6C, 0xEA, 0x0C, 0xD5, 0x08, 0x22, 0x08, 0x96,
+0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF1, 0x04, 0x4C,
+0xB0, 0x67, 0x80, 0x18, 0x35, 0x19, 0x09, 0x96,
+0x0A, 0x97, 0x08, 0x94, 0x0B, 0x95, 0xEB, 0xE6,
+0xFF, 0xF7, 0x1F, 0x6B, 0x6C, 0xEA, 0x04, 0xD2,
+0xCB, 0xE4, 0xAB, 0xE2, 0x0B, 0x96, 0x0C, 0x95,
+0x09, 0x97, 0x90, 0x67, 0x05, 0xD2, 0x80, 0x18,
+0x8B, 0x1C, 0x0E, 0x96, 0x38, 0x26, 0xFD, 0x67,
+0x87, 0x47, 0x21, 0x4C, 0xE0, 0xAC, 0x30, 0xF0,
+0x20, 0x6A, 0x9D, 0x67, 0xB3, 0xF1, 0x64, 0x40,
+0xC0, 0xF1, 0x08, 0x4A, 0xA7, 0x44, 0x64, 0x33,
+0x4D, 0xE3, 0x1D, 0x4D, 0xE0, 0xCB, 0x80, 0xAD,
+0x33, 0xF3, 0x64, 0x40, 0xBD, 0x67, 0xC7, 0x45,
+0x64, 0x33, 0x4D, 0xE3, 0x25, 0x4E, 0x80, 0xCB,
+0xA0, 0xAE, 0xB3, 0xF2, 0x64, 0x40, 0xDD, 0x67,
+0xE7, 0x46, 0x64, 0x33, 0x4D, 0xE3, 0x19, 0x4F,
+0xA0, 0xCB, 0xC0, 0xAF, 0x33, 0xF2, 0x64, 0x40,
+0x64, 0x33, 0x49, 0xE3, 0xC0, 0xCA, 0x20, 0xF0,
+0x48, 0xA1, 0x08, 0x93, 0xFF, 0xF7, 0x1F, 0x6F,
+0xEC, 0xEA, 0x43, 0xEB, 0x00, 0xF1, 0x1E, 0x61,
+0x90, 0x67, 0x80, 0x18, 0x5C, 0x23, 0x90, 0x67,
+0x80, 0x18, 0xFD, 0x24, 0x17, 0x11, 0xBD, 0x67,
+0xC7, 0x45, 0x30, 0xF0, 0x20, 0x6A, 0x2F, 0xF7,
+0x1C, 0x4A, 0x21, 0x4E, 0x0C, 0x34, 0xA0, 0xAE,
+0x91, 0xE2, 0xDD, 0x67, 0x30, 0xF0, 0x20, 0x6A,
+0xB3, 0xF0, 0x64, 0x40, 0xC0, 0xF1, 0x08, 0x4A,
+0xE7, 0x46, 0x64, 0x33, 0x4D, 0xE3, 0x1D, 0x4F,
+0xA0, 0xCB, 0xC0, 0xAF, 0x33, 0xF1, 0x64, 0x40,
+0xFD, 0x67, 0xA7, 0x47, 0x64, 0x33, 0x4D, 0xE3,
+0x25, 0x4D, 0xC0, 0xCB, 0xE0, 0xAD, 0x33, 0xF0,
+0x64, 0x40, 0x64, 0x33, 0x4D, 0xE3, 0xE0, 0xCB,
+0xB2, 0xF7, 0x64, 0x40, 0x64, 0x33, 0x49, 0xE3,
+0x7D, 0x67, 0xA7, 0x43, 0x19, 0x4D, 0x60, 0xAD,
+0x08, 0x96, 0xFF, 0xF7, 0x1F, 0x6D, 0x60, 0xCA,
+0x43, 0xAC, 0xCF, 0xE5, 0x62, 0xEA, 0x02, 0x60,
+0x49, 0xE6, 0x43, 0xCC, 0xA7, 0x40, 0x30, 0xF0,
+0x20, 0x6B, 0x43, 0x4D, 0x30, 0xF0, 0x20, 0x6A,
+0xB2, 0xF7, 0x84, 0x40, 0xAC, 0x35, 0xEF, 0xF4,
+0x08, 0x4B, 0x6D, 0xE5, 0x84, 0x34, 0xC0, 0xF1,
+0x08, 0x4A, 0x51, 0xE4, 0x0A, 0xD3, 0x80, 0xAC,
+0x68, 0xA3, 0x63, 0xEC, 0x08, 0x61, 0x90, 0x67,
+0x80, 0x18, 0xC8, 0x21, 0x0A, 0x97, 0x45, 0xA7,
+0x01, 0x4A, 0x45, 0xC7, 0xC3, 0x10, 0x20, 0xF0,
+0x87, 0xA1, 0x80, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0xFF, 0x6C, 0x8C, 0xEB, 0xA0, 0xF0, 0x1A, 0x23,
+0x65, 0xF4, 0x40, 0x9A, 0x01, 0x6B, 0x6C, 0xEA,
+0x07, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF1,
+0x14, 0x4C, 0xB0, 0x67, 0x80, 0x18, 0x35, 0x19,
+0x90, 0x67, 0x80, 0x18, 0xC8, 0x21, 0x20, 0xF0,
+0x67, 0xA1, 0x7F, 0x6A, 0x6C, 0xEA, 0x20, 0xF0,
+0x47, 0xC1, 0xA4, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x65, 0xF4, 0x60, 0x9A,
+0x01, 0x6C, 0x8C, 0xEB, 0x15, 0x23, 0x09, 0x93,
+0x0B, 0x94, 0x0C, 0x95, 0x04, 0xD3, 0xB2, 0xF7,
+0x64, 0x40, 0x64, 0x33, 0x05, 0xD4, 0x06, 0xD5,
+0x49, 0xE3, 0x40, 0xAA, 0x0F, 0x95, 0x10, 0x96,
+0x0D, 0x97, 0x10, 0xF0, 0x24, 0x6C, 0x7E, 0xF1,
+0x00, 0x4C, 0x07, 0xD2, 0x80, 0x18, 0x35, 0x19,
+0x10, 0x92, 0x0F, 0x96, 0x00, 0x6D, 0xCE, 0xEA,
+0x21, 0x2A, 0x40, 0xF0, 0xC1, 0xA1, 0x0D, 0x97,
+0x3F, 0x6B, 0x40, 0x6A, 0xFF, 0x6C, 0xCC, 0xEB,
+0xCC, 0xEA, 0x77, 0xE7, 0x8C, 0xEA, 0x8C, 0xED,
+0x03, 0x22, 0x01, 0x4D, 0x8C, 0xED, 0x04, 0x10,
+0x0D, 0x92, 0x42, 0xEB, 0x01, 0x61, 0x01, 0x6D,
+0x0A, 0x93, 0x09, 0x94, 0xFF, 0xF7, 0x1F, 0x6A,
+0x08, 0x96, 0x8D, 0xE3, 0x0C, 0x94, 0x4C, 0xEB,
+0x0A, 0xD3, 0x98, 0xED, 0x12, 0xEB, 0x79, 0xE6,
+0x4C, 0xEE, 0x08, 0xD6, 0x30, 0xF0, 0x20, 0x6A,
+0x25, 0xF6, 0x48, 0x9A, 0x01, 0x6E, 0xCC, 0xEA,
+0x0C, 0x22, 0x40, 0xF0, 0x41, 0xA1, 0x10, 0xF0,
+0x24, 0x6C, 0x3F, 0x6F, 0x5A, 0x33, 0x3E, 0xF1,
+0x14, 0x4C, 0x6C, 0xEE, 0x4C, 0xEF, 0x80, 0x18,
+0x35, 0x19, 0x12, 0x97, 0x0B, 0x93, 0x11, 0x95,
+0x09, 0x96, 0x69, 0xE7, 0xFF, 0xF7, 0x1F, 0x6C,
+0xCD, 0xE5, 0x40, 0xF0, 0xA1, 0xA1, 0x8C, 0xEA,
+0x8C, 0xEB, 0x41, 0x6C, 0x8B, 0xEC, 0xAC, 0xEC,
+0x40, 0xF0, 0x81, 0xC1, 0x0E, 0x97, 0x1A, 0x27,
+0xDD, 0x67, 0xE7, 0x46, 0x21, 0x4F, 0xB3, 0xF1,
+0xA4, 0x40, 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xAF,
+0xC0, 0xF1, 0x08, 0x4C, 0xA4, 0x35, 0x95, 0xE5,
+0xC0, 0xCD, 0x33, 0xF3, 0xA4, 0x40, 0xA4, 0x35,
+0x95, 0xE5, 0x60, 0xCD, 0xB3, 0xF2, 0x64, 0x40,
+0x64, 0x33, 0x8D, 0xE3, 0x40, 0xCB, 0x23, 0xF2,
+0x14, 0x48, 0x19, 0x10, 0xDD, 0x67, 0xE7, 0x46,
+0x21, 0x4F, 0xB3, 0xF0, 0xA4, 0x40, 0x30, 0xF0,
+0x20, 0x6C, 0xC0, 0xAF, 0xC0, 0xF1, 0x08, 0x4C,
+0xA4, 0x35, 0x95, 0xE5, 0xC0, 0xCD, 0x33, 0xF1,
+0xA4, 0x40, 0xA4, 0x35, 0x95, 0xE5, 0x60, 0xCD,
+0x33, 0xF0, 0x64, 0x40, 0x64, 0x33, 0x8D, 0xE3,
+0x40, 0xCB, 0xA2, 0xF7, 0x14, 0x48, 0xFD, 0x67,
+0x47, 0x47, 0x19, 0x4A, 0xE0, 0xAA, 0x04, 0x30,
+0x91, 0xE0, 0xE0, 0xCC, 0x0D, 0x92, 0x40, 0xF0,
+0x81, 0xA1, 0x3F, 0x6B, 0x4C, 0xEB, 0x40, 0x6A,
+0x4B, 0xEA, 0x8C, 0xEA, 0x6D, 0xEA, 0x40, 0xF0,
+0x41, 0xC1, 0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x25, 0xF6, 0x48, 0x9A, 0x01, 0x6B, 0x6C, 0xEA,
+0x07, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x9E, 0xF1,
+0x10, 0x4C, 0xB0, 0x67, 0x80, 0x18, 0x35, 0x19,
+0x17, 0x97, 0x16, 0x91, 0x15, 0x90, 0x0C, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x01, 0x6A, 0x20, 0xE8,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x01, 0x75, 0x1F, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3, 0x34, 0x9A,
+0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98,
+0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E,
+0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
+0x41, 0xF1, 0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4, 0x38, 0x9A,
+0x21, 0xF4, 0x00, 0x6C, 0xCE, 0xF4, 0x50, 0x98,
+0xB1, 0x67, 0x00, 0x6E, 0x46, 0x10, 0x02, 0x75,
+0x26, 0x61, 0x10, 0xF0, 0x24, 0x6A, 0x1C, 0xF3,
+0x34, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C,
+0x02, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0xB1, 0x67, 0x41, 0xF1, 0x0C, 0x6C, 0x01, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF4,
+0x38, 0x9A, 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF4,
+0x00, 0x6C, 0xB1, 0x67, 0x00, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0xE1, 0xF0, 0x10, 0x6C,
+0xB1, 0x67, 0x01, 0x6E, 0x25, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0x1C, 0xF3, 0x34, 0x9A, 0x30, 0xF0,
+0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
+0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1,
+0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF4, 0x38, 0x9A, 0xCE, 0xF4,
+0x50, 0x98, 0x21, 0xF4, 0x00, 0x6C, 0xB1, 0x67,
+0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0xE1, 0xF0, 0x10, 0x6C, 0xB1, 0x67, 0x00, 0x6E,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x0B, 0xD5, 0x6B, 0xA4,
+0xFF, 0x6A, 0x27, 0x67, 0x04, 0x67, 0x4C, 0xE9,
+0x12, 0x23, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x50, 0x9A, 0x60, 0x9C, 0x6C, 0xEA, 0x4B, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
+0x9E, 0xF1, 0x1C, 0x4C, 0x1C, 0xF0, 0x08, 0x4D,
+0x80, 0x18, 0x35, 0x19, 0x40, 0x10, 0x02, 0x2E,
+0x54, 0x59, 0x14, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x70, 0x9A, 0x40, 0x98, 0x4C, 0xEB,
+0x00, 0x6A, 0x36, 0x23, 0x10, 0xF0, 0x24, 0x6C,
+0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF1, 0x00, 0x4C,
+0x1C, 0xF0, 0x08, 0x4D, 0x80, 0x18, 0x35, 0x19,
+0x00, 0x6A, 0x2A, 0x10, 0x04, 0x6C, 0x8B, 0xEC,
+0x2C, 0xEC, 0x4C, 0xEC, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x50, 0x9A, 0x0B, 0x96, 0xFF, 0xF7,
+0x1F, 0x6B, 0x03, 0xF5, 0x00, 0x4C, 0x01, 0x6D,
+0x6C, 0xEC, 0xAB, 0xED, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98,
+0x6C, 0xEA, 0x11, 0x22, 0x03, 0xF5, 0x40, 0x41,
+0x04, 0xD2, 0x0B, 0x92, 0x10, 0xF0, 0x24, 0x6C,
+0x10, 0xF0, 0x24, 0x6D, 0xFE, 0xF1, 0x00, 0x4C,
+0x1C, 0xF0, 0x08, 0x4D, 0x00, 0x6E, 0xF1, 0x67,
+0x05, 0xD2, 0x80, 0x18, 0x35, 0x19, 0x01, 0x6A,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x69, 0x2C, 0xEE,
+0x0C, 0xD4, 0x45, 0x67, 0x06, 0xD6, 0x02, 0x2D,
+0x54, 0x5E, 0x15, 0x61, 0x0C, 0x95, 0x10, 0xF0,
+0x24, 0x6B, 0x7C, 0xF3, 0x70, 0x9B, 0x80, 0x9D,
+0xFF, 0x69, 0x8C, 0xEB, 0x54, 0x23, 0x10, 0xF0,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF1,
+0x00, 0x4C, 0xFB, 0xF7, 0x08, 0x4D, 0xC2, 0x67,
+0x80, 0x18, 0x35, 0x19, 0x48, 0x10, 0x10, 0xF0,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x5C, 0xF3,
+0x10, 0x4B, 0xA0, 0x9B, 0xCE, 0xF4, 0x50, 0x98,
+0x83, 0xF1, 0x18, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0x06, 0x96, 0x83, 0xF1,
+0x18, 0x6C, 0xFF, 0x6D, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF3, 0x10, 0x4B, 0xA0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6E, 0x83, 0xF1,
+0x18, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6A,
+0x1C, 0xF6, 0xBC, 0x9A, 0x21, 0xF5, 0x10, 0x6C,
+0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF3, 0x10, 0x4B, 0xA0, 0x9B, 0x4C, 0xE9,
+0xCE, 0xF4, 0x50, 0x98, 0x83, 0xF1, 0x18, 0x6C,
+0x00, 0x6E, 0x40, 0xEA, 0x0C, 0x94, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x9C,
+0x6C, 0xEA, 0x0D, 0x22, 0x06, 0x97, 0x10, 0xF0,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x1E, 0xF2,
+0x10, 0x4C, 0xFB, 0xF7, 0x08, 0x4D, 0x00, 0x6E,
+0x04, 0xD1, 0x80, 0x18, 0x35, 0x19, 0x51, 0x67,
+0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
+0x0C, 0xD1, 0x0B, 0xD0, 0xFF, 0x68, 0xEC, 0xE8,
+0xFC, 0x6A, 0x03, 0x6B, 0x0C, 0xEA, 0x0C, 0xEB,
+0x0E, 0xD4, 0x0F, 0xD5, 0x08, 0xD2, 0x09, 0xD3,
+0x06, 0x2E, 0x54, 0x58, 0x04, 0x60, 0x00, 0x69,
+0x07, 0xD2, 0x06, 0xD1, 0x15, 0x10, 0x0E, 0x94,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x70, 0x9A,
+0x40, 0x9C, 0x4C, 0xEB, 0x00, 0x6A, 0x4F, 0x23,
+0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
+0xDE, 0xF1, 0x00, 0x4C, 0x3C, 0xF0, 0x08, 0x4D,
+0x80, 0x18, 0x35, 0x19, 0x00, 0x6A, 0x43, 0x10,
+0x09, 0x93, 0xFF, 0x6A, 0x2C, 0xEA, 0x6E, 0xEA,
+0x06, 0x22, 0x0E, 0x94, 0x07, 0x96, 0x00, 0x6D,
+0x80, 0x18, 0x01, 0x27, 0x03, 0x10, 0x0F, 0x93,
+0x3F, 0x6A, 0x6C, 0xEA, 0x06, 0x94, 0x2C, 0x33,
+0x44, 0xEB, 0x4D, 0xEC, 0x07, 0x92, 0x01, 0x49,
+0x04, 0x71, 0x01, 0x4A, 0x07, 0xD2, 0x07, 0x93,
+0xFF, 0x6A, 0x06, 0xD4, 0x4C, 0xEB, 0x07, 0xD3,
+0xE3, 0x61, 0x08, 0x94, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x50, 0x9A, 0x06, 0x96, 0x01, 0x6D,
+0x03, 0xF5, 0x00, 0x4C, 0xAB, 0xED, 0x40, 0xEA,
+0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x70, 0x9A, 0x40, 0x9C, 0x4C, 0xEB, 0x01, 0x6A,
+0x12, 0x23, 0x03, 0xF5, 0x40, 0x40, 0x04, 0xD2,
+0x0F, 0x92, 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0,
+0x24, 0x6D, 0xFE, 0xF1, 0x00, 0x4C, 0x3C, 0xF0,
+0x08, 0x4D, 0x00, 0x6E, 0xF0, 0x67, 0x05, 0xD2,
+0x80, 0x18, 0x35, 0x19, 0x01, 0x6A, 0x0D, 0x97,
+0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x0C, 0xD4, 0x45, 0x67, 0x1A, 0x25, 0x10, 0xF0,
+0x24, 0x6B, 0x7C, 0xF3, 0x70, 0x9B, 0x80, 0x9C,
+0x8C, 0xEB, 0x04, 0x2B, 0x01, 0x6A, 0x4B, 0xEA,
+0x06, 0xD2, 0x34, 0x10, 0x10, 0xF0, 0x24, 0x6C,
+0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF1, 0x00, 0x4C,
+0xDC, 0xF0, 0x10, 0x4D, 0xC2, 0x67, 0x80, 0x18,
+0x35, 0x19, 0x01, 0x6C, 0x8B, 0xEC, 0x06, 0xD4,
+0x25, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0x14, 0x9A, 0xFF, 0x69, 0xCC, 0xE9, 0xEC, 0xE8,
+0x28, 0x34, 0xB0, 0x67, 0x05, 0xF0, 0x00, 0x4C,
+0x00, 0x18, 0x42, 0xE7, 0x0C, 0x95, 0x06, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A,
+0x60, 0x9D, 0x6C, 0xEA, 0x0F, 0x22, 0x06, 0x92,
+0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
+0x3E, 0xF2, 0x18, 0x4C, 0xDC, 0xF0, 0x10, 0x4D,
+0x00, 0x6E, 0xF1, 0x67, 0x04, 0xD2, 0x05, 0xD0,
+0x80, 0x18, 0x35, 0x19, 0x06, 0x92, 0x0B, 0x97,
+0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0x0E, 0xD4, 0x45, 0x67, 0x12, 0x91, 0x13, 0x25,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF3, 0x70, 0x9B,
+0x80, 0x9C, 0x8C, 0xEB, 0x7F, 0x23, 0x10, 0xF0,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF1,
+0x00, 0x4C, 0xBC, 0xF0, 0x10, 0x4D, 0xC2, 0x67,
+0x80, 0x18, 0x35, 0x19, 0x73, 0x10, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF4, 0x54, 0x9A, 0xFF, 0x68,
+0x00, 0x6B, 0x4C, 0xEF, 0x4A, 0xEF, 0xCC, 0xE8,
+0x08, 0xD7, 0x09, 0xD3, 0x30, 0x60, 0x0E, 0x94,
+0xA3, 0x67, 0xD0, 0x67, 0xE2, 0x67, 0x80, 0x18,
+0x72, 0x27, 0x09, 0xD2, 0x01, 0x4A, 0x13, 0x2A,
+0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x50, 0x9A, 0x60, 0x9C, 0x6C, 0xEA, 0x56, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
+0x7E, 0xF2, 0x04, 0x4C, 0xBC, 0xF0, 0x10, 0x4D,
+0x80, 0x18, 0x35, 0x19, 0x4B, 0x10, 0x00, 0x6B,
+0x43, 0x67, 0x08, 0x94, 0x01, 0x6D, 0x86, 0xEB,
+0xAC, 0xEC, 0x07, 0x2C, 0x01, 0x4A, 0xFF, 0x6C,
+0x8C, 0xEA, 0x14, 0x72, 0x01, 0x4B, 0xF5, 0x61,
+0x14, 0x6A, 0x08, 0x95, 0x09, 0x93, 0x24, 0xEA,
+0xAF, 0xEA, 0x6C, 0xEA, 0x4D, 0xE9, 0x10, 0xF0,
+0x24, 0x6A, 0xDC, 0xF4, 0x54, 0x9A, 0x00, 0xF5,
+0x00, 0x33, 0x01, 0x6D, 0x2C, 0xEA, 0x6D, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0xF0, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x3C, 0xF6, 0xD4, 0x9B,
+0x81, 0xF4, 0x10, 0x6C, 0xAB, 0xED, 0x4C, 0xEE,
+0x40, 0xEF, 0x0E, 0x94, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x9C, 0x6C, 0xEA,
+0x11, 0x22, 0x09, 0x95, 0x08, 0x92, 0x10, 0xF0,
+0x24, 0x6C, 0x05, 0xD5, 0x10, 0xF0, 0x24, 0x6D,
+0x9E, 0xF2, 0x08, 0x4C, 0xBC, 0xF0, 0x10, 0x4D,
+0x00, 0x6E, 0xF0, 0x67, 0x04, 0xD1, 0x06, 0xD2,
+0x80, 0x18, 0x35, 0x19, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x0D, 0x6C, 0x40, 0xEA,
+0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x0D, 0x97,
+0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
+0xF9, 0x63, 0x0D, 0x62, 0x0C, 0xD1, 0x0B, 0xD0,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A,
+0x60, 0x9C, 0xFF, 0x68, 0x24, 0x67, 0x6C, 0xEA,
+0xAC, 0xE8, 0x0A, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF2, 0x04, 0x4C,
+0x7C, 0xF0, 0x0C, 0x4D, 0x80, 0x18, 0x35, 0x19,
+0x4B, 0xA1, 0x13, 0x22, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
+0xC0, 0xF1, 0x1A, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0x10, 0xF0, 0x24, 0x6D, 0x9E, 0xF1, 0x1C, 0x4C,
+0x7C, 0xF0, 0x0C, 0x4D, 0x80, 0x18, 0x35, 0x19,
+0xCF, 0x11, 0x30, 0xF0, 0x21, 0x6A, 0xD0, 0xF4,
+0x00, 0xC2, 0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4,
+0xF4, 0x9A, 0x91, 0x67, 0x00, 0x6D, 0x18, 0x6E,
+0x80, 0x18, 0x72, 0x27, 0x09, 0xD2, 0x09, 0x93,
+0x00, 0x6A, 0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A,
+0x01, 0x6B, 0x4C, 0xEB, 0x07, 0xD3, 0x60, 0xF2,
+0x50, 0xA1, 0x00, 0x6B, 0x08, 0xD3, 0x12, 0x2A,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xF4, 0x9A,
+0xA3, 0x67, 0x91, 0x67, 0xB8, 0x6E, 0x80, 0x18,
+0x72, 0x27, 0x08, 0xD2, 0x08, 0x93, 0x00, 0x6A,
+0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A, 0x07, 0x93,
+0x4C, 0xEB, 0x07, 0xD3, 0x0F, 0x58, 0x71, 0x60,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF6, 0x58, 0x9A,
+0x09, 0x93, 0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7,
+0x00, 0x6D, 0x4C, 0xEB, 0x0D, 0xEB, 0x06, 0xD3,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
+0x00, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
+0x3C, 0xF6, 0xBC, 0x9B, 0x61, 0xF0, 0x00, 0x6C,
+0x61, 0xF1, 0x0A, 0x6E, 0x40, 0xEA, 0x60, 0xF2,
+0x50, 0xA1, 0x07, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0x08, 0x93, 0x5C, 0xF3, 0x5C, 0x9A, 0x4D, 0xEB,
+0x08, 0xD3, 0x0E, 0x70, 0x20, 0x61, 0x30, 0xF0,
+0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B, 0x01, 0x6D,
+0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x17, 0xF0,
+0x1C, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x21, 0xF2, 0x08, 0x6C,
+0xFF, 0xF7, 0x1F, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x01, 0x6D, 0xCE, 0xF4,
+0x50, 0x9B, 0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED,
+0x66, 0xF6, 0x07, 0x6E, 0x24, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x70, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF6, 0xC0, 0x9A, 0x01, 0x6D,
+0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x40, 0xEB,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
+0x21, 0xF2, 0x08, 0x6C, 0xFF, 0xF7, 0x1F, 0x6D,
+0x11, 0xF0, 0x10, 0x6E, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF6, 0xC4, 0x9B, 0x01, 0x6D,
+0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0xE5, 0x10, 0x24, 0x58, 0xC0, 0xF0, 0x16, 0x61,
+0x10, 0xF0, 0x24, 0x6A, 0x3C, 0xF6, 0x58, 0x9A,
+0x09, 0x93, 0x4C, 0xEB, 0x0D, 0xEB, 0x06, 0xD3,
+0x68, 0x40, 0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB,
+0x1D, 0x5B, 0x21, 0x61, 0x68, 0x40, 0xA4, 0x4B,
+0x4C, 0xEB, 0x29, 0x5B, 0x05, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF3, 0x54, 0x9A, 0x06, 0x10,
+0x8D, 0x58, 0x08, 0x61, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0x58, 0x9A, 0x06, 0x93, 0x4D, 0xEB,
+0x06, 0xD3, 0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
+0x00, 0xF1, 0x04, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0xFE, 0xF2, 0x00, 0x4C, 0xE3, 0x10, 0x68, 0x40,
+0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB, 0x1D, 0x5B,
+0x0A, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x50, 0x9A, 0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7,
+0x00, 0x6D, 0x01, 0x6E, 0x1A, 0x10, 0x68, 0x40,
+0xA4, 0x4B, 0x4C, 0xEB, 0x2D, 0x5B, 0x0A, 0x60,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
+0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
+0x02, 0x6E, 0x0B, 0x10, 0x95, 0x58, 0x11, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
+0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
+0x03, 0x6E, 0x40, 0xEA, 0x68, 0x40, 0xE4, 0x4B,
+0xFF, 0x6A, 0x4C, 0xEB, 0x0D, 0x5B, 0x1B, 0x60,
+0x0D, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA, 0xC0, 0xF0,
+0x05, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x1E, 0xF3,
+0x10, 0x4C, 0xA4, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x9A,
+0x61, 0xF0, 0x00, 0x6C, 0x3C, 0xF6, 0xBC, 0x9B,
+0x80, 0xF4, 0x14, 0x6E, 0x35, 0x10, 0x68, 0x40,
+0xD4, 0x4B, 0x4C, 0xEB, 0x0D, 0x5B, 0x0D, 0x60,
+0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0, 0x00, 0x6C,
+0x3C, 0xF6, 0xBC, 0x9B, 0x40, 0xF4, 0x13, 0x6E,
+0x23, 0x10, 0x68, 0x40, 0xA4, 0x4B, 0x4C, 0xEB,
+0x11, 0x5B, 0x0D, 0x60, 0x30, 0xF0, 0x20, 0x6A,
+0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4, 0x50, 0x9A,
+0x61, 0xF0, 0x00, 0x6C, 0x3C, 0xF6, 0xBC, 0x9B,
+0x40, 0xF4, 0x12, 0x6E, 0x11, 0x10, 0x68, 0x40,
+0x92, 0x4B, 0x4C, 0xEB, 0x3C, 0x5B, 0x11, 0x60,
+0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0, 0x24, 0x6B,
+0xCE, 0xF4, 0x50, 0x9A, 0x3C, 0xF6, 0xBC, 0x9B,
+0x61, 0xF0, 0x00, 0x6C, 0x00, 0xF4, 0x12, 0x6E,
+0x40, 0xEA, 0x60, 0xF2, 0x50, 0xA1, 0x2E, 0x2A,
+0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA, 0x72, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x5E, 0xF3, 0x00, 0x4C,
+0x51, 0x10, 0x48, 0x40, 0xCF, 0x4A, 0xFF, 0x6B,
+0x6C, 0xEA, 0x13, 0x5A, 0x07, 0x60, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF6, 0x48, 0x9A, 0x08, 0x93,
+0x4C, 0xEB, 0x06, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x5C, 0xF3, 0x5C, 0x9A, 0x08, 0x93, 0x4D, 0xEB,
+0x08, 0xD3, 0x0C, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
+0x51, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x7E, 0xF3,
+0x14, 0x4C, 0x30, 0x10, 0x10, 0xF0, 0x24, 0x6B,
+0xDC, 0xF4, 0x14, 0x4B, 0x06, 0x92, 0xE0, 0x9B,
+0x91, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x04, 0xD2,
+0x80, 0x18, 0x98, 0x27, 0x07, 0x93, 0x4C, 0xEB,
+0x07, 0xD3, 0x60, 0xF2, 0x50, 0xA1, 0x11, 0x2A,
+0x10, 0xF0, 0x24, 0x6B, 0xDC, 0xF4, 0x14, 0x4B,
+0x08, 0x92, 0xE0, 0x9B, 0x91, 0x67, 0x00, 0x6D,
+0xB8, 0x6E, 0x04, 0xD2, 0x80, 0x18, 0x98, 0x27,
+0x07, 0x93, 0x4C, 0xEB, 0xFF, 0x6A, 0x4C, 0xEB,
+0x07, 0xD3, 0x07, 0x92, 0x13, 0x2A, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99,
+0x6C, 0xEA, 0x20, 0x22, 0x10, 0xF0, 0x24, 0x6C,
+0x9E, 0xF3, 0x18, 0x4C, 0x10, 0xF0, 0x24, 0x6D,
+0x7C, 0xF0, 0x0C, 0x4D, 0xD0, 0x67, 0x80, 0x18,
+0x35, 0x19, 0x14, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x99, 0x6C, 0xEA,
+0x0B, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0,
+0x24, 0x6D, 0xFE, 0xF3, 0x04, 0x4C, 0x7C, 0xF0,
+0x0C, 0x4D, 0xD0, 0x67, 0x80, 0x18, 0x35, 0x19,
+0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x0D, 0x97,
+0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63, 0x00, 0xEF,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0xFF, 0x6A, 0xAC, 0xEA, 0x06, 0xD2, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x9C,
+0x04, 0x67, 0x6C, 0xEA, 0x0A, 0x22, 0x10, 0xF0,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x1E, 0xF4,
+0x10, 0x4C, 0x9C, 0xF0, 0x10, 0x4D, 0x80, 0x18,
+0x35, 0x19, 0x4B, 0xA0, 0x13, 0x22, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98,
+0x6C, 0xEA, 0xC0, 0xF0, 0x13, 0x22, 0x10, 0xF0,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0x9E, 0xF1,
+0x1C, 0x4C, 0x9C, 0xF0, 0x10, 0x4D, 0x80, 0x18,
+0x35, 0x19, 0xC8, 0x10, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF4, 0xF4, 0x9A, 0x90, 0x67, 0x00, 0x6D,
+0x18, 0x6E, 0x80, 0x18, 0x72, 0x27, 0x07, 0xD2,
+0x06, 0x92, 0x0F, 0x5A, 0x48, 0x60, 0x30, 0xF0,
+0x20, 0x69, 0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3,
+0xAC, 0x9B, 0xCE, 0xF4, 0x50, 0x99, 0x01, 0xF0,
+0x08, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x99, 0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D,
+0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0xCE, 0xF4, 0x50, 0x99, 0x5C, 0xF3, 0xB8, 0x9B,
+0x81, 0xF2, 0x00, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x99, 0x01, 0xF0, 0x14, 0x6C,
+0x1F, 0xF4, 0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA,
+0x10, 0xF0, 0x24, 0x6A, 0x5C, 0xF6, 0x2C, 0x9A,
+0x07, 0x92, 0x4C, 0xE9, 0x30, 0xF0, 0x21, 0x6A,
+0x70, 0xF3, 0x4D, 0xA2, 0x03, 0x22, 0x90, 0x67,
+0x00, 0x6D, 0x02, 0x10, 0x90, 0x67, 0x01, 0x6D,
+0x00, 0x18, 0x86, 0xC5, 0x10, 0xF0, 0x24, 0x6A,
+0xDC, 0xF4, 0xF4, 0x9A, 0x90, 0x67, 0x00, 0x6D,
+0x18, 0x6E, 0x04, 0xD1, 0x80, 0x18, 0x98, 0x27,
+0x06, 0x95, 0x90, 0x67, 0x22, 0x67, 0x80, 0x18,
+0x8F, 0x26, 0x43, 0x2A, 0x71, 0x10, 0x06, 0x92,
+0x24, 0x5A, 0x33, 0x61, 0x30, 0xF0, 0x20, 0x69,
+0x10, 0xF0, 0x24, 0x6B, 0x5C, 0xF3, 0xB8, 0x9B,
+0xCE, 0xF4, 0x50, 0x99, 0x81, 0xF2, 0x00, 0x6C,
+0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x99,
+0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D, 0x01, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B, 0xCE, 0xF4,
+0x50, 0x99, 0x1C, 0xF3, 0xAC, 0x9B, 0x01, 0xF0,
+0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x99, 0x01, 0xF0, 0x14, 0x6C, 0x1F, 0xF4,
+0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF6, 0x2C, 0x9A, 0x07, 0x92,
+0x90, 0x67, 0x02, 0x6D, 0x4C, 0xE9, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF6, 0x50, 0x9A, 0x4D, 0xE9,
+0xB7, 0x17, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA, 0x34, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x7E, 0xF3, 0x14, 0x4C,
+0x14, 0x10, 0x07, 0x92, 0x00, 0x6B, 0x01, 0x4A,
+0x01, 0x22, 0x01, 0x6B, 0xFF, 0x6A, 0x2C, 0xEA,
+0x6C, 0xEA, 0x13, 0x2A, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
+0x1F, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0x3E, 0xF4,
+0x10, 0x4C, 0x06, 0x96, 0x10, 0xF0, 0x24, 0x6D,
+0x9C, 0xF0, 0x10, 0x4D, 0x80, 0x18, 0x35, 0x19,
+0x13, 0x10, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3,
+0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA, 0x0E, 0x22,
+0x06, 0x96, 0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0,
+0x24, 0x6D, 0x7E, 0xF4, 0x1C, 0x4C, 0x9C, 0xF0,
+0x10, 0x4D, 0x80, 0x18, 0x35, 0x19, 0x02, 0x10,
+0x00, 0x6A, 0x01, 0x10, 0x01, 0x6A, 0x0B, 0x97,
+0x0A, 0x91, 0x09, 0x90, 0x06, 0x63, 0x00, 0xEF,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0xFF, 0x6A, 0xAC, 0xEA, 0x06, 0xD2, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x9C,
+0x04, 0x67, 0x26, 0x67, 0x6C, 0xEA, 0x0A, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
+0xBE, 0xF4, 0x04, 0x4C, 0x5C, 0xF0, 0x08, 0x4D,
+0x80, 0x18, 0x35, 0x19, 0x4B, 0xA0, 0x13, 0x22,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A,
+0x60, 0x98, 0x6C, 0xEA, 0x80, 0xF1, 0x01, 0x22,
+0x10, 0xF0, 0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D,
+0x9E, 0xF1, 0x1C, 0x4C, 0x5C, 0xF0, 0x08, 0x4D,
+0x80, 0x18, 0x35, 0x19, 0x76, 0x11, 0x06, 0x59,
+0x0A, 0x60, 0x01, 0x71, 0x03, 0x61, 0x06, 0x93,
+0x03, 0x5B, 0x04, 0x10, 0x02, 0x71, 0x10, 0x61,
+0x06, 0x94, 0x05, 0x5C, 0x0D, 0x61, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98,
+0x6C, 0xEA, 0x60, 0xF1, 0x04, 0x22, 0x10, 0xF0,
+0x24, 0x6C, 0xDE, 0xF4, 0x00, 0x4C, 0x3D, 0x11,
+0x30, 0xF0, 0x21, 0x6A, 0xB0, 0xF4, 0x3C, 0xDA,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xF4, 0x9A,
+0x90, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
+0x72, 0x27, 0x06, 0x59, 0x07, 0xD2, 0xE0, 0xF0,
+0x19, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x28, 0x33,
+0xDB, 0xF7, 0x10, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
+0x00, 0xEA, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
+0xAB, 0xED, 0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0,
+0x24, 0x6B, 0x5C, 0xF6, 0x74, 0x9B, 0x01, 0x6D,
+0xA1, 0xF0, 0x0C, 0x6C, 0x4C, 0xEB, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0xF0, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0x5C, 0xF6, 0xD8, 0x9A, 0xAB, 0xED,
+0x6D, 0xEE, 0x40, 0xEF, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF3, 0xB8, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x01, 0x6E, 0x40, 0xEA, 0x07, 0x94, 0x01, 0xF4,
+0x00, 0x6A, 0x8D, 0xEA, 0xDC, 0x10, 0x06, 0x92,
+0x01, 0x72, 0x09, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x50, 0x9A, 0x01, 0xF2, 0x00, 0x6C,
+0x10, 0x6D, 0x01, 0x6E, 0x08, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x01, 0xF2,
+0x00, 0x6C, 0x10, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
+0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED,
+0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0, 0x24, 0x6B,
+0x5C, 0xF6, 0x7C, 0x9B, 0x06, 0x94, 0x0F, 0x6E,
+0x4C, 0xEB, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6,
+0x40, 0x9A, 0x8C, 0xEE, 0xC8, 0x36, 0x30, 0xF0,
+0x20, 0x6C, 0x4D, 0xEE, 0xCE, 0xF4, 0x50, 0x9C,
+0x01, 0x6D, 0x6D, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C,
+0xAB, 0xED, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF3, 0xB8, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x01, 0x6E, 0x40, 0xEA, 0x07, 0x94, 0x01, 0xF4,
+0x01, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA, 0x01, 0xF0,
+0x00, 0x6B, 0x31, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
+0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0x42, 0xE7,
+0x10, 0xF0, 0x24, 0x6B, 0x7C, 0xF6, 0x64, 0x9B,
+0x0F, 0x6E, 0x30, 0xF0, 0x20, 0x6C, 0x4C, 0xEB,
+0x06, 0x92, 0x01, 0x6D, 0xAB, 0xED, 0x4C, 0xEE,
+0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6, 0x48, 0x9A,
+0xC8, 0x36, 0x4D, 0xEE, 0xCE, 0xF4, 0x50, 0x9C,
+0x6D, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
+0x10, 0xF0, 0x24, 0x6B, 0x1C, 0xF3, 0xB8, 0x9B,
+0xC1, 0xF0, 0x04, 0x6C, 0x01, 0x6E, 0x40, 0xEA,
+0x07, 0x94, 0x01, 0xF4, 0x01, 0x6A, 0x4B, 0xEA,
+0x8C, 0xEA, 0x00, 0xF4, 0x00, 0x6B, 0x6D, 0xEA,
+0x62, 0x10, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
+0xAB, 0xED, 0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0,
+0x24, 0x6B, 0x7C, 0xF6, 0x6C, 0x9B, 0x01, 0x6D,
+0xA1, 0xF0, 0x0C, 0x6C, 0x4C, 0xEB, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0xF0, 0x9A, 0x10, 0xF0,
+0x24, 0x6A, 0xAB, 0xED, 0x7C, 0xF6, 0xD0, 0x9A,
+0x17, 0x10, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
+0xAB, 0xED, 0x00, 0x18, 0x42, 0xE7, 0x10, 0xF0,
+0x24, 0x6B, 0x7C, 0xF6, 0x6C, 0x9B, 0x30, 0xF0,
+0x20, 0x6C, 0x01, 0x6D, 0x4C, 0xEB, 0x10, 0xF0,
+0x24, 0x6A, 0x7C, 0xF6, 0xD4, 0x9A, 0xCE, 0xF4,
+0xF0, 0x9C, 0xAB, 0xED, 0xA1, 0xF0, 0x0C, 0x6C,
+0x6D, 0xEE, 0x40, 0xEF, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x24, 0x6B,
+0x1C, 0xF3, 0xB8, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x00, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x24, 0x6B,
+0x30, 0xF0, 0x20, 0x6C, 0xCE, 0xF4, 0x50, 0x9C,
+0x5C, 0xF4, 0xB8, 0x9B, 0xC1, 0xF0, 0x08, 0x6C,
+0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4, 0x00, 0x6A,
+0x07, 0x93, 0xB1, 0x17, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x70, 0x9A, 0x40, 0x98, 0x4C, 0xEB,
+0x07, 0x92, 0x0D, 0x23, 0x06, 0x97, 0x10, 0xF0,
+0x24, 0x6C, 0x10, 0xF0, 0x24, 0x6D, 0xDE, 0xF4,
+0x00, 0x4C, 0x5C, 0xF0, 0x08, 0x4D, 0xD1, 0x67,
+0x80, 0x18, 0x35, 0x19, 0x07, 0x92, 0x04, 0xD2,
+0x10, 0xF0, 0x24, 0x6A, 0xDC, 0xF4, 0xF4, 0x9A,
+0x90, 0x67, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
+0x98, 0x27, 0x07, 0x93, 0x00, 0x6C, 0x01, 0x4B,
+0x01, 0x23, 0x01, 0x6C, 0xFF, 0x6B, 0x4C, 0xEB,
+0x8C, 0xEB, 0x14, 0x2B, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
+0x26, 0x22, 0x10, 0xF0, 0x24, 0x6C, 0xFE, 0xF4,
+0x1C, 0x4C, 0x06, 0x97, 0x10, 0xF0, 0x24, 0x6D,
+0x5C, 0xF0, 0x08, 0x4D, 0xD1, 0x67, 0x80, 0x18,
+0x35, 0x19, 0x19, 0x10, 0x90, 0x67, 0xB1, 0x67,
+0x80, 0x18, 0x93, 0x26, 0x10, 0xF0, 0x24, 0x6A,
+0x7C, 0xF3, 0x50, 0x9A, 0x60, 0x98, 0x6C, 0xEA,
+0x0C, 0x22, 0x06, 0x97, 0x10, 0xF0, 0x24, 0x6C,
+0x10, 0xF0, 0x24, 0x6D, 0x5E, 0xF5, 0x1C, 0x4C,
+0x5C, 0xF0, 0x08, 0x4D, 0xD1, 0x67, 0x80, 0x18,
+0x35, 0x19, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
+0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x68, 0x0C, 0xED,
+0x24, 0x67, 0x0D, 0xD7, 0x04, 0xD5, 0xCC, 0xE8,
+0x80, 0x18, 0xE4, 0x28, 0x0F, 0x22, 0x04, 0x95,
+0x91, 0x67, 0x80, 0x18, 0xE2, 0x27, 0x0A, 0x22,
+0x0D, 0x96, 0x91, 0x67, 0xB0, 0x67, 0x80, 0x18,
+0x62, 0x29, 0x4B, 0xEB, 0x4D, 0xEB, 0xC0, 0xF7,
+0x62, 0x32, 0x01, 0x10, 0x00, 0x6A, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0x30, 0xF0, 0x20, 0x6B, 0x86, 0xF0, 0x99, 0xA3,
+0x30, 0xF0, 0x20, 0x6A, 0x1F, 0x6B, 0x8C, 0xEB,
+0xEF, 0xF4, 0x08, 0x4A, 0x80, 0xF6, 0x60, 0xC2,
+0xFF, 0x6D, 0xFF, 0x4B, 0xAC, 0xEB, 0x00, 0x6C,
+0x07, 0x5B, 0x80, 0xF6, 0x83, 0xC2, 0x08, 0x60,
+0x10, 0xF0, 0x24, 0x6A, 0x68, 0x33, 0xFC, 0xF0,
+0x10, 0x4A, 0x69, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x01, 0x6B, 0x80, 0xF6, 0x61, 0xC2, 0x80, 0xF6,
+0x82, 0xC2, 0x0A, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6B, 0x80, 0xF6,
+0x61, 0xC2, 0x80, 0xF6, 0x62, 0xC2, 0x00, 0x6C,
+0x80, 0xF6, 0x85, 0xC2, 0x38, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6B,
+0x80, 0xF6, 0x61, 0xC2, 0x08, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x01, 0x6B, 0xEF, 0xF4, 0x08, 0x4A,
+0x80, 0xF6, 0x61, 0xC2, 0x00, 0x6B, 0x80, 0xF6,
+0x62, 0xC2, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6C, 0x00, 0x6B,
+0x80, 0xF6, 0x81, 0xC2, 0x80, 0xF6, 0x62, 0xC2,
+0xDF, 0x17, 0x30, 0xF0, 0x20, 0x6A, 0xEF, 0xF4,
+0x08, 0x4A, 0x00, 0x6B, 0x02, 0x6C, 0x80, 0xF6,
+0x61, 0xC2, 0x80, 0xF6, 0x65, 0xC2, 0x80, 0xF6,
+0x82, 0xC2, 0x01, 0x6B, 0x0C, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xEF, 0xF4, 0x08, 0x4A, 0x01, 0x6B,
+0x00, 0x6C, 0x80, 0xF6, 0x61, 0xC2, 0x80, 0xF6,
+0x82, 0xC2, 0x80, 0xF6, 0x65, 0xC2, 0x80, 0xF6,
+0x64, 0xC2, 0x20, 0xE8, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0xFF, 0x6A, 0xEF, 0xF4, 0x08, 0x4B, 0x8C, 0xEA,
+0x80, 0xF6, 0x81, 0xA3, 0x4F, 0x24, 0x80, 0xF6,
+0x63, 0xA3, 0x00, 0x69, 0x01, 0x23, 0x01, 0x69,
+0x30, 0xF0, 0x21, 0x6B, 0x70, 0xF3, 0x6C, 0xA3,
+0x02, 0x2B, 0x01, 0x6B, 0x6E, 0xE9, 0x05, 0x2A,
+0x3B, 0x10, 0x01, 0x6A, 0x4E, 0xE9, 0x04, 0xD2,
+0x02, 0x10, 0x00, 0x6A, 0x04, 0xD2, 0x10, 0xF0,
+0x24, 0x6B, 0x30, 0xF0, 0x20, 0x68, 0x7C, 0xF6,
+0xB8, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x4C, 0x6C,
+0x02, 0x6E, 0x40, 0xEA, 0x04, 0x93, 0x14, 0x2B,
+0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C,
+0xFF, 0x6D, 0x77, 0x6E, 0x40, 0xEA, 0x01, 0x59,
+0x38, 0x67, 0x10, 0xF0, 0x24, 0x6B, 0x02, 0x6E,
+0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C,
+0x1C, 0xF3, 0xB4, 0x9B, 0x3B, 0xE6, 0x12, 0x10,
+0xCE, 0xF4, 0x50, 0x98, 0xA1, 0xF4, 0x14, 0x6C,
+0xFF, 0x6D, 0x66, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x24, 0x6B, 0x01, 0x59, 0xCE, 0xF4, 0x50, 0x98,
+0x1C, 0xF3, 0xB4, 0x9B, 0xD8, 0x67, 0xA1, 0xF4,
+0x14, 0x6C, 0x01, 0x4E, 0x40, 0xEA, 0x06, 0x10,
+0x30, 0xF0, 0x21, 0x6A, 0x70, 0xF3, 0x4D, 0xA2,
+0xC0, 0x22, 0xC3, 0x17, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x30, 0x6B,
+0xC1, 0xF7, 0xB1, 0xA3, 0xFF, 0x6A, 0x4C, 0xEC,
+0x01, 0x6B, 0xAC, 0xEB, 0x0F, 0x5C, 0x4C, 0xEB,
+0x0A, 0x60, 0x10, 0xF0, 0x24, 0x6A, 0x7C, 0xF6,
+0x9C, 0x9A, 0xFC, 0x6A, 0xA0, 0xA4, 0xAC, 0xEA,
+0x40, 0xC4, 0x00, 0x6C, 0x0E, 0x10, 0x24, 0x5C,
+0x00, 0x6C, 0x0B, 0x61, 0x10, 0xF0, 0x24, 0x6C,
+0x7C, 0xF6, 0xBC, 0x9C, 0x03, 0x6E, 0x80, 0xA5,
+0x4C, 0xEC, 0xCD, 0xEC, 0x4C, 0xEC, 0x80, 0xC5,
+0x01, 0x6C, 0x02, 0x23, 0x80, 0x18, 0x7F, 0x2A,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x21, 0x6A, 0x84, 0xF4, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x24, 0xF5, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC4, 0xF5, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x24, 0xF6, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x64, 0xF6, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE4, 0xF6, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE4, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x65, 0xF1, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x45, 0xF2, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x45, 0xF3, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC5, 0xF5, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA5, 0xF7, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA5, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x06, 0xF1, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC6, 0xF1, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x40, 0xDB,
+0x20, 0xE8, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00,
+0xC4, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+};
+
+u32 array_length_mp_8821c_fw_nic = 138984;
+
+u8 array_mp_8821c_fw_spic[] = {
+0x21, 0x88, 0x00, 0x00, 0x18, 0x00, 0x08, 0x00,
+0x0C, 0xBC, 0x11, 0xA2, 0x00, 0x00, 0x00, 0x00,
+0x01, 0x0C, 0x12, 0x0E, 0xE4, 0x07, 0x00, 0x00,
+0x18, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x20, 0x80, 0xB8, 0x7C, 0x00, 0x00,
+0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
+0xA8, 0x75, 0x00, 0x00, 0x48, 0x2B, 0x00, 0x00,
+0x00, 0x00, 0x10, 0x80, 0x00, 0x00, 0x03, 0x80,
+0x00, 0x00, 0x04, 0x04, 0x08, 0x08, 0x08, 0x08,
+0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,
+0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
+0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10,
+0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
+0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
+0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
+0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14, 0x14,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x03, 0x00, 0x01, 0xFE, 0x03, 0x01, 0x01, 0xFE,
+0x03, 0x02, 0x01, 0xFE, 0x03, 0x03, 0x01, 0xFE,
+0x03, 0x04, 0x01, 0xFE, 0x03, 0x05, 0x01, 0xFE,
+0x03, 0x06, 0x01, 0xFE, 0x03, 0x07, 0x01, 0xFE,
+0x06, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
+0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
+0x00, 0x01, 0x10, 0x00, 0x01, 0x00, 0x03, 0x80,
+0xA9, 0x01, 0x03, 0x80, 0xA9, 0x01, 0x03, 0x80,
+0x5D, 0x29, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x0D, 0x29, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00,
+0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0xD4, 0x88, 0x20, 0x80, 0x06, 0x09, 0x0C, 0x12,
+0x18, 0x24, 0x30, 0x36, 0x01, 0x02, 0x05, 0x0B,
+0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x06,
+0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x2C,
+0xFF, 0x00, 0x01, 0x02, 0x02, 0x04, 0x05, 0x06,
+0x07, 0x08, 0x09, 0x0A, 0x28, 0x28, 0x32, 0x28,
+0x1E, 0x19, 0x19, 0x19, 0x18, 0x18, 0x12, 0x0F,
+0x1E, 0x1E, 0x19, 0x1E, 0x18, 0x16, 0x0C, 0x0C,
+0x1E, 0x1E, 0x19, 0x1E, 0x18, 0x16, 0x0C, 0x0C,
+0x1E, 0x1E, 0x19, 0x1C, 0x18, 0x14, 0x0C, 0x0A,
+0x1E, 0x1E, 0x19, 0x1E, 0x19, 0x18, 0x0F, 0x0E,
+0x1E, 0x1E, 0x1E, 0x1E, 0x1C, 0x16, 0x14, 0x12,
+0x0C, 0x0A, 0x1E, 0x1E, 0x1E, 0x1E, 0x1A, 0x16,
+0x12, 0x10, 0x0C, 0x0A, 0x1E, 0x1E, 0x1E, 0x1E,
+0x18, 0x16, 0x0D, 0x0E, 0x0C, 0x0A, 0x0A, 0x0A,
+0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
+0x12, 0x12, 0x14, 0x12, 0x0F, 0x0F, 0x0C, 0x0C,
+0x09, 0x08, 0x08, 0x07, 0x0A, 0x0A, 0x09, 0x07,
+0x07, 0x06, 0x05, 0x04, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x06, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x06, 0x0C, 0x0C, 0x0A, 0x0A,
+0x09, 0x07, 0x07, 0x06, 0x0A, 0x0A, 0x08, 0x08,
+0x08, 0x07, 0x07, 0x06, 0x04, 0x04, 0x0C, 0x0C,
+0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06, 0x05, 0x04,
+0x0C, 0x0C, 0x0A, 0x0A, 0x09, 0x07, 0x07, 0x06,
+0x05, 0x04, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A,
+0x0A, 0x0A, 0x0A, 0x0A, 0x02, 0x02, 0x02, 0x04,
+0x02, 0x04, 0x06, 0x06, 0x08, 0x08, 0x09, 0x09,
+0x04, 0x08, 0x08, 0x08, 0x0C, 0x10, 0x10, 0x18,
+0x04, 0x08, 0x08, 0x08, 0x0C, 0x10, 0x10, 0x18,
+0x05, 0x08, 0x08, 0x09, 0x10, 0x14, 0x1C, 0x20,
+0x04, 0x06, 0x08, 0x0A, 0x10, 0x18, 0x18, 0x20,
+0x03, 0x05, 0x08, 0x09, 0x10, 0x14, 0x1C, 0x24,
+0x2A, 0x2C, 0x05, 0x07, 0x09, 0x0A, 0x10, 0x14,
+0x1C, 0x28, 0x2C, 0x30, 0x06, 0x08, 0x0A, 0x0C,
+0x12, 0x18, 0x1E, 0x30, 0x38, 0x42, 0x0A, 0x0C,
+0x0C, 0x12, 0x16, 0x1C, 0x20, 0x24, 0x24, 0x30,
+0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x03, 0x04,
+0x05, 0x06, 0x07, 0x08, 0x01, 0x02, 0x03, 0x04,
+0x05, 0x06, 0x07, 0x08, 0x02, 0x04, 0x06, 0x07,
+0x08, 0x0A, 0x0B, 0x0C, 0x03, 0x05, 0x06, 0x07,
+0x08, 0x0A, 0x0B, 0x0C, 0x05, 0x06, 0x07, 0x08,
+0x09, 0x0A, 0x0B, 0x0C, 0x02, 0x04, 0x06, 0x07,
+0x08, 0x09, 0x0B, 0x0C, 0x0C, 0x0C, 0x03, 0x05,
+0x06, 0x07, 0x08, 0x09, 0x0B, 0x0C, 0x0C, 0x0C,
+0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C,
+0x0C, 0x0C, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A,
+0x0B, 0x0C, 0x0C, 0x0C, 0x2C, 0x00, 0x04, 0x00,
+0x2D, 0x00, 0x2C, 0x01, 0x2D, 0x01, 0x2C, 0x02,
+0x2E, 0x01, 0xFF, 0x00, 0x2D, 0x02, 0xFF, 0x00,
+0x36, 0x2D, 0xFF, 0x36, 0x2E, 0xFF, 0x37, 0x2F,
+0xFF, 0x41, 0x38, 0x30, 0x39, 0x42, 0x31, 0x42,
+0x3A, 0x32, 0x43, 0x3A, 0x33, 0x43, 0x3A, 0x34,
+0x3A, 0x44, 0x35, 0x44, 0x3B, 0xFF, 0x37, 0x2E,
+0x40, 0x38, 0x30, 0x41, 0x39, 0x42, 0x31, 0x3A,
+0x43, 0x32, 0x3B, 0x43, 0x35, 0x3C, 0x44, 0xFF,
+0x3D, 0x45, 0xFF, 0x3E, 0x45, 0xFF, 0x45, 0x3F,
+0xFF, 0x46, 0xFF, 0xFF, 0x37, 0x41, 0x2F, 0x39,
+0x42, 0x31, 0x43, 0x3A, 0x33, 0x44, 0x3B, 0x35,
+0x45, 0x3D, 0xFF, 0x46, 0x47, 0x3E, 0x47, 0xFF,
+0xFF, 0x48, 0xFF, 0xFF, 0x49, 0xFF, 0xFF, 0xFF,
+0xFF, 0xFF, 0x00, 0x00, 0x0D, 0x14, 0xFF, 0x15,
+0x0E, 0xFF, 0x15, 0x0F, 0xFF, 0x16, 0x10, 0xFF,
+0x17, 0x1E, 0x11, 0x1E, 0x18, 0x12, 0x1F, 0x18,
+0x13, 0x18, 0x1F, 0xFF, 0x15, 0x0E, 0xFF, 0x16,
+0x1D, 0x10, 0x17, 0x1E, 0x10, 0x18, 0x1E, 0x11,
+0x19, 0x1F, 0xFF, 0x1A, 0x20, 0xFF, 0x21, 0x1B,
+0xFF, 0x21, 0xFF, 0xFF, 0x15, 0x13, 0x0F, 0x17,
+0x1E, 0x11, 0x18, 0x1F, 0x13, 0x20, 0x19, 0xFF,
+0x21, 0x1B, 0xFF, 0x22, 0xFF, 0xFF, 0x23, 0xFF,
+0xFF, 0xFF, 0xFF, 0xFF, 0x04, 0x04, 0x04, 0x36,
+0x2C, 0xFF, 0x2D, 0xFF, 0xFF, 0x2E, 0x37, 0xFF,
+0x38, 0x41, 0x2F, 0x39, 0x42, 0x30, 0x43, 0x39,
+0x31, 0x42, 0x39, 0x32, 0x43, 0x3A, 0x33, 0x43,
+0x3A, 0x34, 0x2D, 0x2C, 0xFF, 0x36, 0x2E, 0xFF,
+0x37, 0x2F, 0x40, 0x38, 0x30, 0x41, 0x42, 0x33,
+0x39, 0x43, 0x35, 0x3A, 0x3B, 0x43, 0x34, 0x44,
+0x3C, 0x3B, 0x45, 0x3D, 0x3C, 0x45, 0x3E, 0x3D,
+0x37, 0x2E, 0xFF, 0x38, 0x2F, 0x40, 0x39, 0x31,
+0x41, 0x3A, 0x42, 0xFF, 0x43, 0x3B, 0xFF, 0x44,
+0x3C, 0xFF, 0x45, 0x3D, 0x3C, 0x46, 0x3F, 0x45,
+0x47, 0x46, 0x45, 0x48, 0x47, 0x47, 0x00, 0x00,
+0x04, 0xFF, 0xFF, 0x0C, 0xFF, 0xFF, 0x0D, 0x14,
+0xFF, 0x0E, 0x15, 0xFF, 0x16, 0x0F, 0xFF, 0x17,
+0x10, 0xFF, 0x17, 0x11, 0xFF, 0x17, 0x12, 0xFF,
+0x0D, 0x0C, 0xFF, 0x14, 0x0E, 0xFF, 0x15, 0x0F,
+0xFF, 0x16, 0x1D, 0x10, 0x17, 0x1E, 0x12, 0x18,
+0x1F, 0x13, 0x19, 0x20, 0x19, 0x20, 0x1A, 0x19,
+0x14, 0x0E, 0xFF, 0x15, 0x1C, 0xFF, 0x17, 0x1D,
+0x11, 0x18, 0x1E, 0x13, 0x19, 0x1F, 0x1E, 0x20,
+0x1A, 0x1F, 0x21, 0x1B, 0x20, 0x22, 0x21, 0x1B,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x24, 0x26, 0x2A, 0x00, 0x00, 0x00, 0x1F,
+0x21, 0x25, 0x27, 0x28, 0x00, 0x00, 0x00, 0x00,
+0x23, 0x26, 0x28, 0x30, 0x00, 0x00, 0x00, 0x00,
+0x23, 0x26, 0x28, 0x2A, 0x00, 0x00, 0x00, 0x00,
+0x23, 0x26, 0x28, 0x2A, 0x00, 0x00, 0x00, 0x00,
+0x24, 0x28, 0x2A, 0x2C, 0x2E, 0x30, 0x00, 0x00,
+0x00, 0x00, 0x26, 0x29, 0x2B, 0x2D, 0x2F, 0x31,
+0x00, 0x00, 0x00, 0x00, 0x28, 0x2A, 0x2C, 0x2E,
+0x30, 0x32, 0x00, 0x00, 0x00, 0x1F, 0x23, 0x26,
+0x28, 0x2A, 0x2A, 0x2A, 0x01, 0x00, 0x02, 0x00,
+0x05, 0x00, 0x0B, 0x00, 0x06, 0x00, 0x09, 0x00,
+0x0C, 0x00, 0x12, 0x00, 0x18, 0x00, 0x24, 0x00,
+0x30, 0x00, 0x36, 0x00, 0x0E, 0x00, 0x1B, 0x00,
+0x29, 0x00, 0x36, 0x00, 0x51, 0x00, 0x6C, 0x00,
+0x7A, 0x00, 0x87, 0x00, 0x1B, 0x00, 0x36, 0x00,
+0x51, 0x00, 0x6C, 0x00, 0xA2, 0x00, 0xD8, 0x00,
+0xF3, 0x00, 0x0E, 0x01, 0x29, 0x00, 0x51, 0x00,
+0x7A, 0x00, 0xA2, 0x00, 0xF3, 0x00, 0x44, 0x01,
+0x6D, 0x01, 0x95, 0x01, 0x36, 0x00, 0x6C, 0x00,
+0xA2, 0x00, 0xD8, 0x00, 0x44, 0x01, 0xB0, 0x01,
+0xE6, 0x01, 0x1C, 0x02, 0x0E, 0x00, 0x1B, 0x00,
+0x29, 0x00, 0x36, 0x00, 0x51, 0x00, 0x6C, 0x00,
+0x7A, 0x00, 0x87, 0x00, 0xA2, 0x00, 0xB4, 0x00,
+0x1B, 0x00, 0x36, 0x00, 0x51, 0x00, 0x6C, 0x00,
+0xA2, 0x00, 0xD8, 0x00, 0xF3, 0x00, 0xFF, 0x00,
+0x23, 0x01, 0x44, 0x01, 0x29, 0x00, 0x51, 0x00,
+0x7A, 0x00, 0xA2, 0x00, 0xF3, 0x00, 0x44, 0x01,
+0x64, 0x01, 0x64, 0x01, 0xB5, 0x01, 0xE6, 0x01,
+0x36, 0x00, 0x6C, 0x00, 0xA2, 0x00, 0xD8, 0x00,
+0x44, 0x01, 0xB0, 0x01, 0xE6, 0x01, 0x1C, 0x02,
+0x88, 0x02, 0xD0, 0x02, 0x14, 0x14, 0x15, 0x15,
+0x16, 0x17, 0x17, 0x18, 0x1C, 0x1C, 0x1C, 0x1C,
+0x1D, 0x1D, 0x1E, 0x1E, 0x1C, 0x1C, 0x1D, 0x1E,
+0x1F, 0x20, 0x20, 0x20, 0x36, 0x36, 0x37, 0x37,
+0x38, 0x39, 0x39, 0x3A, 0x3A, 0x3A, 0x00, 0x00,
+0x40, 0x40, 0x40, 0x40, 0x41, 0x41, 0x42, 0x42,
+0x43, 0x43, 0x00, 0x00, 0x40, 0x40, 0x41, 0x42,
+0x43, 0x44, 0x44, 0x44, 0x45, 0x46, 0x00, 0x00,
+0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x30, 0xC0,
+0xE0, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0E, 0x38,
+0x18, 0x00, 0x00, 0x00, 0x00, 0x83, 0x01, 0x06,
+0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x70, 0xE0,
+0x26, 0x9D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x30, 0xF0, 0x21, 0x6C, 0x18, 0xF0, 0x00, 0x4C,
+0xBC, 0x65, 0x1F, 0xF7, 0x00, 0x6C, 0x8C, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x77, 0xF0,
+0x20, 0x6C, 0x80, 0xF0, 0x80, 0x9C, 0x80, 0xF0,
+0x20, 0x6E, 0xCC, 0xEC, 0x1E, 0x24, 0x30, 0xF0,
+0x21, 0x6C, 0xF4, 0xF7, 0x1C, 0x4C, 0x80, 0x9C,
+0xBC, 0x65, 0x30, 0xF0, 0x21, 0x6C, 0xF4, 0xF7,
+0x18, 0x4C, 0x80, 0x9C, 0xFC, 0x65, 0x9F, 0x67,
+0x77, 0xF0, 0x24, 0x6D, 0xE0, 0xF2, 0x90, 0xDD,
+0x9D, 0x67, 0x77, 0xF0, 0x24, 0x6D, 0xE0, 0xF2,
+0x94, 0xDD, 0x9D, 0x67, 0x85, 0x9C, 0x77, 0xF0,
+0x24, 0x6D, 0xE0, 0xF2, 0x98, 0xDD, 0x20, 0xE8,
+0x00, 0x65, 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1,
+0x08, 0x4C, 0x00, 0x6E, 0x30, 0xF0, 0x20, 0x6F,
+0x2F, 0xF0, 0x08, 0x4F, 0xC0, 0xDC, 0x04, 0x4C,
+0xE3, 0xEC, 0xB8, 0x67, 0xFB, 0x2D, 0x30, 0xF0,
+0x21, 0x6C, 0xD1, 0xF0, 0x14, 0x4C, 0x00, 0x6E,
+0x30, 0xF0, 0x21, 0x6F, 0x31, 0xF1, 0x00, 0x4F,
+0xC0, 0xDC, 0x04, 0x4C, 0xE3, 0xEC, 0xB8, 0x67,
+0xFB, 0x2D, 0x30, 0xF0, 0x21, 0x6C, 0x15, 0xF0,
+0x00, 0x4C, 0x00, 0x6E, 0x30, 0xF0, 0x21, 0x6F,
+0x18, 0xF0, 0x00, 0x4F, 0xC0, 0xDC, 0x04, 0x4C,
+0xE3, 0xEC, 0xB8, 0x67, 0xFB, 0x2D, 0x10, 0xF0,
+0x23, 0x6C, 0xC0, 0xF0, 0x01, 0x4C, 0x00, 0xEC,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xC0, 0xF0, 0x01, 0x4A, 0x40, 0xDB,
+0x00, 0x1C, 0x94, 0x00, 0x80, 0x18, 0x6A, 0x06,
+0x80, 0x18, 0x66, 0x05, 0x80, 0x18, 0x88, 0x05,
+0x80, 0x18, 0x16, 0x06, 0x80, 0x18, 0xA6, 0x05,
+0x80, 0x18, 0x33, 0x06, 0x80, 0x18, 0xF8, 0x03,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF7, 0x54, 0x9A,
+0x30, 0xF0, 0x20, 0x68, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6C, 0x30, 0xF0, 0x21, 0x6A, 0x80, 0xF1,
+0x08, 0x4C, 0x15, 0xF0, 0x00, 0x4A, 0x43, 0xDC,
+0xCE, 0xF7, 0x40, 0x98, 0x00, 0x6D, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x2D, 0xF1, 0x50, 0xDB,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF7, 0x50, 0x9A,
+0x30, 0xF0, 0x20, 0x6C, 0x6F, 0xF0, 0x08, 0x4C,
+0x01, 0x6D, 0x40, 0xEA, 0x30, 0xF0, 0x21, 0x6B,
+0x11, 0xF1, 0x54, 0xDB, 0x30, 0xF0, 0x20, 0x6C,
+0x30, 0xF0, 0x21, 0x6A, 0x2F, 0xF0, 0x08, 0x4C,
+0x15, 0xF4, 0x00, 0x4A, 0x43, 0xDC, 0xCE, 0xF7,
+0x40, 0x98, 0x00, 0x6D, 0x40, 0xEA, 0x30, 0xF0,
+0x21, 0x6B, 0x11, 0xF1, 0x4C, 0xDB, 0x00, 0x18,
+0xFC, 0xCF, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF2,
+0x74, 0x9A, 0xFF, 0xF7, 0x1F, 0x6C, 0x10, 0xF0,
+0x00, 0x6D, 0x40, 0xAB, 0xAB, 0xED, 0x01, 0x6E,
+0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB,
+0x00, 0x6C, 0x7F, 0xF7, 0x1F, 0x6D, 0x00, 0x18,
+0xA9, 0xC9, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF7,
+0x58, 0x9A, 0x40, 0xEA, 0x00, 0x1C, 0x95, 0x45,
+0xFF, 0x17, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x6D, 0xB8, 0x00, 0x65, 0x00, 0xF0, 0x20, 0x6A,
+0x7C, 0x4A, 0x6C, 0xEA, 0x1C, 0x22, 0x00, 0xF0,
+0x20, 0x6B, 0x28, 0x4B, 0x6A, 0xEA, 0x0B, 0x61,
+0x4E, 0xB8, 0x00, 0x65, 0x00, 0xF0, 0x20, 0x6B,
+0x01, 0x4B, 0x6B, 0xE2, 0x60, 0xAA, 0xBF, 0xF6,
+0x1A, 0x6A, 0x6A, 0xEA, 0x31, 0x60, 0x77, 0xF0,
+0x24, 0x6A, 0xA0, 0xF1, 0x1C, 0x4A, 0x1D, 0xF4,
+0x00, 0x6B, 0x60, 0xDA, 0x10, 0xF0, 0x23, 0x6A,
+0xA3, 0xF7, 0x09, 0x4A, 0x00, 0xEA, 0x00, 0xF0,
+0x20, 0x6A, 0x1F, 0xF7, 0x00, 0x6A, 0x4C, 0xEB,
+0x4C, 0xB8, 0x00, 0x65, 0x6C, 0xEA, 0x42, 0x32,
+0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF0, 0x00, 0x4B,
+0x49, 0xE3, 0x40, 0xA2, 0x30, 0xF0, 0x20, 0x6B,
+0x40, 0xF1, 0x08, 0x4B, 0x69, 0xE2, 0x30, 0xF0,
+0x20, 0x6B, 0x4E, 0xF2, 0x08, 0x4B, 0x60, 0x9B,
+0x05, 0x2B, 0x10, 0xF0, 0x23, 0x6B, 0x80, 0xF3,
+0x0D, 0x4B, 0x00, 0xEB, 0x10, 0xF0, 0x23, 0x6B,
+0x20, 0xF4, 0x01, 0x4B, 0x00, 0xEB, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0x0D, 0xF1, 0x1C, 0x4A,
+0x00, 0xF0, 0x20, 0x6B, 0x01, 0x6B, 0x60, 0xDA,
+0x10, 0xF0, 0x23, 0x6B, 0x40, 0xF2, 0x15, 0x4B,
+0x00, 0xEB, 0x00, 0x65, 0x5A, 0xB8, 0x00, 0x65,
+0x7B, 0xB8, 0x00, 0x65, 0x40, 0xE8, 0x5A, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x7B, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x30, 0xF0,
+0x20, 0x6A, 0x0D, 0xF1, 0x1C, 0x4A, 0x00, 0xF0,
+0x20, 0x6B, 0x60, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0x2D, 0xF1, 0x18, 0x4A, 0x60, 0x9A, 0x41, 0x9A,
+0x6A, 0xEA, 0x0D, 0x61, 0x6E, 0xB8, 0x00, 0x65,
+0x62, 0x43, 0xCB, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x5A, 0xB8, 0x00, 0x65, 0x7B, 0xB8,
+0x00, 0x65, 0x00, 0xBA, 0x00, 0x65, 0x36, 0x23,
+0xDF, 0xF7, 0x00, 0x03, 0x86, 0xDB, 0xA7, 0xDB,
+0xC8, 0xDB, 0xE9, 0xDB, 0x0A, 0xDB, 0x2B, 0xDB,
+0x98, 0x67, 0x8C, 0xDB, 0x9F, 0x67, 0x8E, 0xDB,
+0x12, 0xEC, 0x10, 0xED, 0x82, 0xDB, 0xA3, 0xDB,
+0x9A, 0xB8, 0x00, 0x65, 0x84, 0xDB, 0x9B, 0xB8,
+0x00, 0x65, 0x85, 0xDB, 0x8E, 0xB8, 0x00, 0x65,
+0x82, 0x44, 0x81, 0xDB, 0x8C, 0xB8, 0x00, 0x65,
+0x80, 0xDB, 0x30, 0xF0, 0x20, 0x6B, 0x2D, 0xF1,
+0x18, 0x4B, 0x60, 0x9B, 0x9D, 0x67, 0x89, 0xDB,
+0x6A, 0x9B, 0xCF, 0xF7, 0x80, 0x44, 0x62, 0xEC,
+0x0D, 0x60, 0x77, 0xF0, 0x24, 0x6C, 0xA0, 0xF1,
+0x1C, 0x4C, 0x1D, 0xF4, 0x01, 0x6B, 0x60, 0xDC,
+0x10, 0xF0, 0x23, 0x6C, 0xA3, 0xF7, 0x09, 0x4C,
+0x00, 0xEC, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6B,
+0x2D, 0xF1, 0x18, 0x4B, 0x41, 0x9B, 0x40, 0xDB,
+0x89, 0x9A, 0xBC, 0x65, 0x7D, 0x67, 0xDF, 0xF7,
+0x00, 0x03, 0x4C, 0xB8, 0x00, 0x65, 0x00, 0xF0,
+0x20, 0x6D, 0x05, 0x4D, 0xAF, 0xED, 0xAC, 0xEA,
+0xA0, 0x9B, 0x04, 0x6C, 0x8C, 0xED, 0xAD, 0xEA,
+0x82, 0x9B, 0xA3, 0x9B, 0x32, 0xEC, 0x30, 0xED,
+0x8E, 0x9B, 0xFC, 0x65, 0x8C, 0x9B, 0x1C, 0x65,
+0x84, 0x9B, 0x5C, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x85, 0x9B, 0x7C, 0xB9, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x2B, 0x9B, 0x0A, 0x9B,
+0xE9, 0x9B, 0xC8, 0x9B, 0xA7, 0x9B, 0x86, 0x9B,
+0x61, 0x9B, 0xCB, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x8A, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x7B, 0xB8, 0x00, 0x65, 0x5A, 0xB8,
+0x00, 0x65, 0x00, 0xBA, 0xDF, 0xF7, 0x00, 0x03,
+0x86, 0xDB, 0xA7, 0xDB, 0xC8, 0xDB, 0xE9, 0xDB,
+0x0A, 0xDB, 0x2B, 0xDB, 0x98, 0x67, 0x8C, 0xDB,
+0x9F, 0x67, 0x8E, 0xDB, 0x12, 0xEC, 0x10, 0xED,
+0x82, 0xDB, 0xA3, 0xDB, 0x9A, 0xB8, 0x00, 0x65,
+0x84, 0xDB, 0x9B, 0xB8, 0x00, 0x65, 0x85, 0xDB,
+0x7D, 0x67, 0x5B, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x40, 0x9A, 0x30, 0xF0, 0x20, 0x6C,
+0xAD, 0xF1, 0x08, 0x4C, 0x00, 0xF4, 0x00, 0x4C,
+0xBC, 0x65, 0x82, 0x67, 0x40, 0xEA, 0x00, 0x65,
+0x7A, 0xB8, 0x00, 0x65, 0xBB, 0x65, 0xDF, 0xF7,
+0x00, 0x03, 0x82, 0x9B, 0xA3, 0x9B, 0x32, 0xEC,
+0x30, 0xED, 0x8E, 0x9B, 0xFC, 0x65, 0x8C, 0x9B,
+0x1C, 0x65, 0x84, 0x9B, 0x5C, 0xB9, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x85, 0x9B, 0x7C, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x2B, 0x9B,
+0x0A, 0x9B, 0xE9, 0x9B, 0xC8, 0x9B, 0xA7, 0x9B,
+0x86, 0x9B, 0x5A, 0xB8, 0x00, 0x65, 0x7B, 0xB8,
+0x00, 0x65, 0x00, 0xBA, 0x00, 0x65, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6B, 0x0D, 0xF1, 0x1C, 0x4B,
+0x40, 0xDB, 0xDF, 0xF7, 0x00, 0x03, 0x86, 0xDB,
+0xA7, 0xDB, 0xC8, 0xDB, 0xE9, 0xDB, 0x0A, 0xDB,
+0x2B, 0xDB, 0x98, 0x67, 0x8C, 0xDB, 0x9F, 0x67,
+0x8E, 0xDB, 0x12, 0xEC, 0x10, 0xED, 0x82, 0xDB,
+0xA3, 0xDB, 0x9A, 0xB8, 0x00, 0x65, 0x84, 0xDB,
+0x9B, 0xB8, 0x00, 0x65, 0x85, 0xDB, 0x8E, 0xB8,
+0x00, 0x65, 0x81, 0xDB, 0x8C, 0xB8, 0x00, 0x65,
+0x80, 0xDB, 0x30, 0xF0, 0x20, 0x6B, 0x2D, 0xF1,
+0x18, 0x4B, 0x60, 0x9B, 0x9D, 0x67, 0x89, 0xDB,
+0x6A, 0x9B, 0xCF, 0xF7, 0x80, 0x44, 0x62, 0xEC,
+0x0D, 0x60, 0x77, 0xF0, 0x24, 0x6C, 0xA0, 0xF1,
+0x1C, 0x4C, 0x1D, 0xF4, 0x01, 0x6B, 0x60, 0xDC,
+0x10, 0xF0, 0x23, 0x6C, 0xA3, 0xF7, 0x09, 0x4C,
+0x00, 0xEC, 0x00, 0x65, 0x40, 0x9A, 0x30, 0xF0,
+0x20, 0x6C, 0xAD, 0xF1, 0x08, 0x4C, 0x00, 0xF4,
+0x00, 0x4C, 0xBC, 0x65, 0x82, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6C, 0x0D, 0xF1, 0x1C, 0x4C,
+0x00, 0xF0, 0x20, 0x6D, 0xA0, 0xDC, 0x30, 0xF0,
+0x20, 0x6A, 0x2D, 0xF1, 0x18, 0x4A, 0x10, 0xF0,
+0x23, 0x6B, 0xC0, 0xF4, 0x09, 0x4B, 0x00, 0xEB,
+0x61, 0x9A, 0x60, 0xDA, 0x49, 0x9B, 0xBA, 0x65,
+0xDF, 0xF7, 0x00, 0x03, 0x4C, 0xB8, 0x00, 0x65,
+0x00, 0xF0, 0x20, 0x6D, 0x05, 0x4D, 0xAF, 0xED,
+0xAC, 0xEA, 0xA0, 0x9B, 0x00, 0xF0, 0x20, 0x6C,
+0x04, 0x4C, 0x8C, 0xED, 0xAD, 0xEA, 0x82, 0x9B,
+0xA3, 0x9B, 0x32, 0xEC, 0x30, 0xED, 0x8E, 0x9B,
+0xFC, 0x65, 0x8C, 0x9B, 0x1C, 0x65, 0x84, 0x9B,
+0x5C, 0xB9, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x85, 0x9B, 0x7C, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x2B, 0x9B, 0x0A, 0x9B, 0xE9, 0x9B,
+0xC8, 0x9B, 0xA7, 0x9B, 0x86, 0x9B, 0x61, 0x9B,
+0xCB, 0xB9, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x8A, 0xB9, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x7B, 0xB8, 0x00, 0x65, 0x5A, 0xB8, 0x00, 0x65,
+0x00, 0xBA, 0x00, 0x65, 0x5F, 0x67, 0x5A, 0xB9,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x18,
+0x69, 0xC0, 0x00, 0x1C, 0xA9, 0x41, 0x5A, 0xB8,
+0x00, 0x65, 0x00, 0xEA, 0x6D, 0xB8, 0x00, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x00, 0x4A, 0x4F, 0xEA,
+0x4C, 0xEB, 0xAB, 0xB9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x5F, 0x67, 0x5A, 0xB9, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x1C, 0x6C, 0x41,
+0x5A, 0xB8, 0x00, 0x65, 0x00, 0xEA, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x84, 0xC1,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x7E, 0xC1,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xB2, 0xC1,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x2C, 0xC2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x4B, 0xC2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x78, 0xC1,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6A, 0xE0, 0xF5, 0x01, 0x4A,
+0x40, 0xDB, 0x01, 0x4A, 0x40, 0xDB, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6A, 0xE0, 0xF5, 0x19, 0x4A,
+0x40, 0xDB, 0x01, 0x4A, 0x40, 0xDB, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6A, 0x00, 0xF6, 0x11, 0x4A,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
+0x58, 0x9A, 0xC0, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0xA0, 0x9A, 0x10, 0xF0,
+0x23, 0x6A, 0xEE, 0xF4, 0x40, 0x9A, 0x80, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF4, 0x44, 0x9A,
+0x40, 0x9A, 0x33, 0x22, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6F,
+0xEE, 0xF4, 0xE8, 0x9F, 0x40, 0x9B, 0xED, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF4,
+0x4C, 0x9A, 0xFF, 0x6B, 0xC0, 0xDA, 0x10, 0xF0,
+0x23, 0x6A, 0xEE, 0xF4, 0x50, 0x9A, 0xA0, 0xDA,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF4, 0x54, 0x9A,
+0x10, 0x6D, 0xAB, 0xED, 0x80, 0xDA, 0x10, 0xF0,
+0x23, 0x6A, 0xEE, 0xF4, 0x98, 0x9A, 0x40, 0xA4,
+0x6C, 0xEA, 0xAC, 0xEA, 0x02, 0x6D, 0xAD, 0xEA,
+0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x90, 0x9A, 0x80, 0x6D, 0xAB, 0xED,
+0x40, 0xA4, 0x6C, 0xEA, 0xAE, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x00, 0xF6,
+0x12, 0x4A, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x23, 0x6B,
+0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0xC0, 0xF6, 0x09, 0x4A, 0x40, 0xDB, 0x00, 0x18,
+0x21, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x6C, 0x9A, 0x6C, 0x23, 0x01, 0x6A, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x56, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x02, 0x6B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x57, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
+0x04, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0x58, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x4C, 0x9A, 0x08, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x59, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x4C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x5A, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A, 0x20, 0x6B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x5B, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x4C, 0x9A,
+0x40, 0x6B, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0x5C, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2,
+0x4C, 0x9A, 0x80, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x90, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x6C, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x73, 0xD2,
+0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
+0x04, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x5D, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0x00, 0xF2, 0x6C, 0x9B, 0x08, 0xF0, 0x00, 0x6A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x5E, 0xD2,
+0x30, 0xF0, 0x20, 0x6B, 0x00, 0xF2, 0x6C, 0x9B,
+0x10, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x5F, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x70, 0x9A, 0x14, 0x23, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x58, 0x9A, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x63, 0xD2, 0x10, 0xF0,
+0x23, 0x6A, 0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2,
+0x4C, 0x9A, 0x00, 0xF2, 0x70, 0x9B, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x6F, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF2, 0x74, 0x9A, 0x55, 0x23,
+0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
+0x00, 0x18, 0x60, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x54, 0x9A, 0x02, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x01, 0x6C, 0x00, 0x18, 0x61, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
+0x04, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C,
+0x00, 0x18, 0x60, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x54, 0x9A, 0x08, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x61, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
+0x10, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x03, 0x6C,
+0x00, 0x18, 0x60, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x54, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x61, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF2, 0x54, 0x9A,
+0x40, 0x6B, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
+0x00, 0x18, 0x60, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF2, 0x54, 0x9A, 0x80, 0x6B, 0x6C, 0xEA,
+0x03, 0x22, 0x04, 0x6C, 0x00, 0x18, 0x61, 0xD2,
+0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6A, 0xC0, 0xF6, 0x0A, 0x4A,
+0x40, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xA1, 0xF0, 0x11, 0x4A, 0x40, 0xDB,
+0x00, 0x18, 0xB8, 0xD3, 0x00, 0x18, 0xF1, 0xD1,
+0x00, 0x18, 0xF9, 0xD3, 0x30, 0xF0, 0x20, 0x6A,
+0xE0, 0xF1, 0x5C, 0x9A, 0x23, 0x22, 0x00, 0x68,
+0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x7C, 0x9B,
+0x02, 0xF0, 0x00, 0x6A, 0x44, 0xE8, 0x6C, 0xEA,
+0x03, 0x22, 0x90, 0x67, 0x00, 0x18, 0x55, 0xD2,
+0x01, 0x48, 0x10, 0x70, 0xF1, 0x61, 0x30, 0xF0,
+0x20, 0x6B, 0xE0, 0xF1, 0x7C, 0x9B, 0xFF, 0x6A,
+0x01, 0x4A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0xA4, 0xD2, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xA1, 0xF0,
+0x12, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B,
+0x10, 0xF0, 0x23, 0x6A, 0x21, 0xF1, 0x0D, 0x4A,
+0x40, 0xDB, 0x00, 0x18, 0xF8, 0xD1, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x7C, 0x9A, 0x34, 0x23,
+0x02, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0x35, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x5C, 0x9A, 0x10, 0x6B, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0xA0, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x5C, 0x9A, 0x20, 0x6B, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x18, 0x9C, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x5C, 0x9A, 0x40, 0x6B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x3A, 0xD2,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x7C, 0x9B,
+0xFF, 0x6A, 0x01, 0x4A, 0x6C, 0xEA, 0x02, 0x22,
+0x00, 0x18, 0x98, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x7C, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18, 0x94, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0xE0, 0xF1, 0x64, 0x9A,
+0x32, 0x23, 0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x00, 0x6C, 0x00, 0x18, 0x8B, 0xD2, 0x30, 0xF0,
+0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B, 0xFF, 0x6A,
+0x01, 0x4A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
+0x00, 0x18, 0x8B, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0xE0, 0xF1, 0x64, 0x9B, 0x00, 0xF2, 0x00, 0x6A,
+0x6C, 0xEA, 0x03, 0x22, 0x02, 0x6C, 0x00, 0x18,
+0x8B, 0xD2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x64, 0x9B, 0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x03, 0x6C, 0x00, 0x18, 0x8B, 0xD2,
+0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x64, 0x9B,
+0x01, 0xF0, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x04, 0x6C, 0x00, 0x18, 0x8B, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xE0, 0xF1, 0x68, 0x9A, 0x32, 0x23,
+0x01, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x00, 0x6C,
+0x00, 0x18, 0x53, 0xD2, 0x30, 0xF0, 0x20, 0x6B,
+0xE0, 0xF1, 0x68, 0x9B, 0xFF, 0x6A, 0x01, 0x4A,
+0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C, 0x00, 0x18,
+0x53, 0xD2, 0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1,
+0x68, 0x9B, 0x00, 0xF2, 0x00, 0x6A, 0x6C, 0xEA,
+0x03, 0x22, 0x02, 0x6C, 0x00, 0x18, 0x53, 0xD2,
+0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B,
+0x00, 0xF4, 0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22,
+0x03, 0x6C, 0x00, 0x18, 0x53, 0xD2, 0x30, 0xF0,
+0x20, 0x6B, 0xE0, 0xF1, 0x68, 0x9B, 0x01, 0xF0,
+0x00, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x04, 0x6C,
+0x00, 0x18, 0x53, 0xD2, 0x10, 0xF0, 0x23, 0x6B,
+0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x21, 0xF1, 0x0E, 0x4A, 0x40, 0xDB, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x80, 0x63, 0xFF, 0x62,
+0xFE, 0xD1, 0xFD, 0xD0, 0xF9, 0x63, 0x20, 0xF4,
+0x18, 0xD4, 0x00, 0x6D, 0x85, 0x04, 0x00, 0xF2,
+0x00, 0x6E, 0x00, 0x18, 0xBE, 0xCA, 0x00, 0x6C,
+0x0F, 0x10, 0x01, 0x6D, 0xAB, 0xED, 0xA0, 0xCB,
+0x01, 0x4A, 0xFF, 0xF7, 0x1F, 0x6D, 0xAC, 0xEA,
+0x04, 0x72, 0x02, 0x4B, 0xF6, 0x61, 0xFF, 0x6B,
+0x04, 0x4C, 0x01, 0x4B, 0x8E, 0xEB, 0x05, 0x23,
+0x84, 0x32, 0x85, 0x03, 0x4D, 0xE3, 0x00, 0x6A,
+0xEC, 0x17, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
+0x44, 0x9A, 0x9D, 0x67, 0x72, 0xC4, 0x71, 0xC4,
+0x70, 0xC4, 0x04, 0x05, 0x00, 0x6C, 0x40, 0xEA,
+0x7D, 0x67, 0x50, 0xA3, 0x01, 0x68, 0xFF, 0x72,
+0x00, 0x6A, 0x80, 0xF0, 0x1D, 0x61, 0xCF, 0x10,
+0x1F, 0x6A, 0x2C, 0xEA, 0x0F, 0x72, 0x2C, 0x61,
+0x30, 0xF0, 0x20, 0x6C, 0xEE, 0xF4, 0x44, 0x9C,
+0x00, 0xF0, 0x11, 0x05, 0x90, 0x67, 0x40, 0xEA,
+0x5D, 0x67, 0x91, 0xA2, 0xFF, 0x74, 0x0F, 0x60,
+0x0F, 0x6B, 0x8C, 0xEB, 0x01, 0x48, 0xFF, 0xF7,
+0x1F, 0x6A, 0x0F, 0x73, 0x4C, 0xE8, 0x10, 0x61,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x44, 0x9B,
+0x90, 0x67, 0x04, 0x05, 0x40, 0xEA, 0x00, 0x6D,
+0x05, 0x04, 0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18,
+0xBE, 0xCA, 0x01, 0x6D, 0x00, 0x6B, 0x92, 0x10,
+0xF0, 0x6A, 0x8C, 0xEA, 0x47, 0x32, 0x36, 0x31,
+0x2D, 0xEA, 0x00, 0xF4, 0x18, 0xD3, 0x05, 0x10,
+0x0F, 0x6C, 0x2C, 0xEC, 0x32, 0x32, 0x00, 0xF4,
+0x18, 0xD4, 0x40, 0x5A, 0x00, 0x6B, 0x49, 0x60,
+0x4C, 0x32, 0x85, 0x01, 0x45, 0xE1, 0x20, 0xF4,
+0x00, 0xD1, 0x00, 0xF4, 0x1C, 0xD3, 0x00, 0xF4,
+0x1C, 0x93, 0x00, 0xF4, 0x18, 0x92, 0x47, 0xEB,
+0x01, 0x6B, 0x6C, 0xEA, 0x2C, 0x2A, 0x90, 0x67,
+0x30, 0xF0, 0x20, 0x6B, 0xFF, 0xF7, 0x1F, 0x6A,
+0x01, 0x48, 0x4C, 0xE8, 0xEE, 0xF4, 0x44, 0x9B,
+0x00, 0xF0, 0x12, 0x05, 0x40, 0xEA, 0x9D, 0x67,
+0x52, 0xA4, 0x20, 0xF4, 0x00, 0x93, 0x00, 0xF2,
+0x00, 0x58, 0x40, 0xCB, 0x36, 0x60, 0x90, 0x67,
+0x30, 0xF0, 0x20, 0x6B, 0xFF, 0xF7, 0x1F, 0x6A,
+0x01, 0x48, 0x4C, 0xE8, 0xEE, 0xF4, 0x44, 0x9B,
+0x00, 0xF0, 0x12, 0x05, 0x40, 0xEA, 0x9D, 0x67,
+0x52, 0xA4, 0x60, 0xA9, 0x00, 0xF2, 0x00, 0x70,
+0x40, 0x32, 0x6D, 0xEA, 0x40, 0xC9, 0x03, 0x61,
+0x00, 0xF2, 0x00, 0x68, 0x1E, 0x10, 0x00, 0xF4,
+0x1C, 0x92, 0x20, 0xF4, 0x00, 0x93, 0x02, 0x49,
+0x01, 0x4A, 0x02, 0x4B, 0x04, 0x72, 0x00, 0xF4,
+0x1C, 0xD2, 0x20, 0xF4, 0x00, 0xD3, 0xBF, 0x61,
+0x10, 0x10, 0x00, 0xF4, 0x18, 0x92, 0x01, 0x6C,
+0x47, 0xEB, 0x8C, 0xEA, 0x07, 0x2A, 0x02, 0x48,
+0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xE8, 0x00, 0xF2,
+0x00, 0x58, 0x03, 0x60, 0x01, 0x4B, 0x04, 0x73,
+0xF0, 0x61, 0xFF, 0xF7, 0x1F, 0x6A, 0x90, 0x67,
+0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x44, 0x9A, 0x04, 0x05, 0x40, 0xEA,
+0x9D, 0x67, 0x30, 0xA4, 0xFF, 0x71, 0x7F, 0xF7,
+0x1E, 0x60, 0x00, 0xF2, 0x00, 0x58, 0x5F, 0xF7,
+0x1B, 0x61, 0x79, 0x17, 0x20, 0xAC, 0x01, 0x4A,
+0x02, 0x4C, 0x20, 0xC0, 0x20, 0xAF, 0x02, 0x48,
+0x02, 0x4F, 0x22, 0x31, 0x20, 0xC6, 0xFF, 0xF7,
+0x1F, 0x69, 0x2C, 0xEA, 0x04, 0x72, 0x02, 0x4E,
+0xF1, 0x61, 0x04, 0x4B, 0x00, 0xF1, 0x00, 0x73,
+0x08, 0x4D, 0x09, 0x60, 0x64, 0x30, 0x85, 0x04,
+0x11, 0xE4, 0x05, 0x06, 0x01, 0xE6, 0xE4, 0x67,
+0xB9, 0xE6, 0x00, 0x6A, 0xE3, 0x17, 0x7D, 0x67,
+0xA0, 0xF1, 0x54, 0xA3, 0x20, 0xF4, 0x18, 0x94,
+0x01, 0x6B, 0x40, 0xC4, 0x30, 0xF0, 0x21, 0x6A,
+0xB1, 0xF0, 0x65, 0xC2, 0x01, 0x6A, 0x07, 0x63,
+0xFF, 0x97, 0xFE, 0x91, 0xFD, 0x90, 0x00, 0xF4,
+0x00, 0x63, 0x00, 0xEF, 0x1F, 0x75, 0x0D, 0x60,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A,
+0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF2, 0x8C, 0x9C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A,
+0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2,
+0x48, 0x9A, 0x60, 0x9C, 0x4E, 0xEB, 0x01, 0x6A,
+0x0C, 0x23, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF2,
+0x8C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x00, 0x6A, 0x20, 0xE8, 0x6D, 0xA4, 0x0F, 0x6A,
+0x6C, 0xEA, 0x0A, 0x22, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0x6E, 0xF2, 0x9C, 0x9C, 0x40, 0x9B, 0x2F, 0x10,
+0x4E, 0xA4, 0x1F, 0x6B, 0x6C, 0xEA, 0x1F, 0x4A,
+0x6C, 0xEA, 0x10, 0x5A, 0x0A, 0x61, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0,
+0x23, 0x6C, 0xCE, 0xF2, 0x90, 0x9C, 0x40, 0x9B,
+0x1E, 0x10, 0x4C, 0xA4, 0x0C, 0x22, 0x80, 0x72,
+0x0A, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF2,
+0x94, 0x9C, 0x40, 0x9B, 0x10, 0x10, 0x6D, 0xA4,
+0x10, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xFF, 0x6D,
+0xAC, 0xEA, 0x0D, 0x22, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0x8E, 0xF2, 0x90, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0x00, 0x6A, 0x20, 0xE8, 0x4E, 0xA4,
+0x20, 0x6B, 0x6B, 0xEB, 0x4C, 0xEB, 0xAC, 0xEB,
+0x01, 0x6A, 0x0C, 0x23, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0x6E, 0xF2, 0x8C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0x00, 0x6A, 0x20, 0xE8, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF4, 0x18, 0x4B,
+0xE1, 0xF3, 0x4B, 0xA3, 0x04, 0x2A, 0x01, 0x6C,
+0xE1, 0xF3, 0x8B, 0xC3, 0x20, 0xE8, 0x8F, 0x42,
+0xE1, 0xF3, 0x8B, 0xC3, 0x20, 0xE8, 0x00, 0x65,
+0xA2, 0xDC, 0x20, 0xE8, 0xAC, 0xC4, 0x20, 0xE8,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0x68, 0xAC, 0xE8, 0x00, 0x30, 0x30, 0xF0,
+0x21, 0x6A, 0x90, 0xF4, 0x1C, 0x4A, 0x04, 0x30,
+0x01, 0xE2, 0x24, 0x67, 0x00, 0x6D, 0x90, 0x67,
+0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18, 0xBE, 0xCA,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x58, 0x9A,
+0x40, 0xD8, 0x41, 0x99, 0x41, 0xD8, 0x07, 0x97,
+0x50, 0x67, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xDB, 0x63, 0x49, 0x62,
+0x48, 0xD1, 0x47, 0xD0, 0xFF, 0x6E, 0x04, 0x67,
+0x25, 0x67, 0x04, 0x04, 0x00, 0x6D, 0x01, 0x4E,
+0x00, 0x18, 0xBE, 0xCA, 0x6E, 0x10, 0x00, 0x6A,
+0x08, 0x58, 0x44, 0xD2, 0x0A, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x5C, 0x9A, 0x91, 0x67,
+0xF8, 0x48, 0x40, 0xEA, 0x02, 0xF0, 0x00, 0x49,
+0x60, 0x10, 0xFF, 0x6E, 0x04, 0x04, 0x00, 0x6D,
+0x01, 0x4E, 0x00, 0x18, 0xBE, 0xCA, 0x44, 0x93,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF5, 0x44, 0x9A,
+0xFF, 0x6D, 0x31, 0xE3, 0x01, 0x4D, 0x04, 0x06,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x44, 0x94,
+0xCE, 0xF2, 0x7C, 0x9B, 0x04, 0x02, 0x6D, 0xE4,
+0x44, 0x04, 0xA0, 0xA2, 0x01, 0x4A, 0x8A, 0xEA,
+0xA0, 0xC3, 0x01, 0x4B, 0xFA, 0x61, 0x44, 0x92,
+0x00, 0xF1, 0x00, 0x4A, 0x02, 0xF0, 0x00, 0x72,
+0x44, 0xD2, 0xDB, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x5C, 0x9A, 0x91, 0x67, 0x00, 0x30,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x48, 0x9A, 0x04, 0x30, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C,
+0x40, 0xEA, 0x2D, 0xE0, 0x44, 0xD3, 0xFF, 0x6E,
+0x04, 0x04, 0x00, 0x6D, 0x01, 0x4E, 0x00, 0x18,
+0xBE, 0xCA, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2,
+0x7C, 0x9A, 0x44, 0x04, 0x04, 0x02, 0x6D, 0xE0,
+0xA0, 0xA3, 0x01, 0x4B, 0xA0, 0xC2, 0x01, 0x4A,
+0x8A, 0xEA, 0xFA, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0x44, 0x94, 0xAE, 0xF5, 0x40, 0x9A, 0xFF, 0x6D,
+0x01, 0x4D, 0x04, 0x06, 0x40, 0xEA, 0x44, 0x94,
+0x00, 0xF1, 0x00, 0x48, 0x02, 0xF0, 0x00, 0x58,
+0x00, 0xF1, 0x00, 0x4C, 0x44, 0xD4, 0xDB, 0x61,
+0x00, 0x68, 0x91, 0x28, 0x49, 0x97, 0x48, 0x91,
+0x47, 0x90, 0x25, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xF8, 0x63, 0x0F, 0x62, 0x0E, 0xD1, 0x0D, 0xD0,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF0, 0x7C, 0x9A,
+0xEE, 0xF0, 0x1C, 0x4A, 0x41, 0x9A, 0x10, 0xF0,
+0x23, 0x6D, 0x07, 0x04, 0xEE, 0xF0, 0x0C, 0x4D,
+0x10, 0x6E, 0x05, 0xD3, 0x06, 0xD2, 0x00, 0x18,
+0xC3, 0xCA, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF0,
+0x48, 0x9A, 0x04, 0xD2, 0x00, 0x18, 0x6E, 0xC3,
+0x40, 0x30, 0x22, 0x67, 0x30, 0xF0, 0x21, 0x6A,
+0x90, 0xF4, 0x1C, 0x4A, 0x04, 0x30, 0x01, 0xE2,
+0x90, 0x67, 0x00, 0x6D, 0x00, 0xF2, 0x00, 0x6E,
+0x00, 0x18, 0xBE, 0xCA, 0x30, 0xF0, 0x21, 0x6A,
+0xB1, 0xF0, 0x45, 0xA2, 0x08, 0x2A, 0x30, 0xF0,
+0x21, 0x6C, 0xD1, 0xF0, 0x10, 0x4C, 0x00, 0x18,
+0xAB, 0xC2, 0x01, 0x72, 0x09, 0x61, 0x30, 0xF0,
+0x21, 0x6A, 0xD1, 0xF0, 0x50, 0xA2, 0x02, 0x6B,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x6A, 0x01, 0x10,
+0x05, 0x6A, 0x40, 0xC0, 0x80, 0x6A, 0x4B, 0xEA,
+0x41, 0xC0, 0x01, 0x6A, 0x43, 0xC0, 0x87, 0x40,
+0x1F, 0x6A, 0x05, 0x05, 0x44, 0xC0, 0x01, 0x4C,
+0x08, 0x6E, 0x00, 0x18, 0xC3, 0xCA, 0x87, 0x40,
+0x07, 0x05, 0x09, 0x4C, 0x10, 0x6E, 0x00, 0x18,
+0xC3, 0xCA, 0x87, 0x40, 0x04, 0x05, 0x19, 0x4C,
+0x04, 0x6E, 0x00, 0x18, 0xC3, 0xCA, 0x91, 0x67,
+0x24, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x0F, 0x97, 0x0E, 0x91, 0x0D, 0x90, 0x01, 0x6A,
+0x08, 0x63, 0x00, 0xEF, 0xD4, 0x63, 0x57, 0x62,
+0x56, 0xD1, 0x55, 0xD0, 0x59, 0xD5, 0x10, 0xF0,
+0x23, 0x6D, 0xCE, 0xF0, 0x00, 0x4D, 0x28, 0x6E,
+0x24, 0x67, 0x04, 0x04, 0x00, 0x18, 0xC3, 0xCA,
+0xFF, 0x6E, 0x0E, 0x04, 0x00, 0x6D, 0x01, 0x4E,
+0x00, 0x18, 0xBE, 0xCA, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF4, 0x18, 0x4A, 0x4E, 0xD2, 0xE1, 0xF3,
+0x4C, 0xA2, 0x00, 0xF6, 0x1A, 0x2A, 0x59, 0x95,
+0x91, 0x67, 0x00, 0x18, 0x31, 0xC3, 0x20, 0xF2,
+0x10, 0x22, 0x59, 0x95, 0x91, 0x67, 0x00, 0x18,
+0x43, 0xC3, 0x20, 0xF2, 0x0A, 0x22, 0x4F, 0xA1,
+0x2A, 0x72, 0x20, 0xF5, 0x07, 0x60, 0x2B, 0x5A,
+0x20, 0x60, 0x1B, 0x72, 0x00, 0xF4, 0x10, 0x60,
+0x1C, 0x5A, 0x0D, 0x60, 0x03, 0x72, 0x60, 0x60,
+0x04, 0x5A, 0x03, 0x60, 0xA0, 0xF2, 0x0E, 0x22,
+0xA2, 0x12, 0x12, 0x72, 0x37, 0x60, 0x1A, 0x72,
+0xC0, 0xF0, 0x1A, 0x60, 0x9C, 0x12, 0x23, 0x72,
+0xA0, 0xF1, 0x08, 0x60, 0x24, 0x5A, 0x04, 0x60,
+0x1E, 0x72, 0xE0, 0xF1, 0x1A, 0x60, 0x93, 0x12,
+0x25, 0x72, 0x00, 0xF2, 0x15, 0x60, 0x28, 0x72,
+0x22, 0x10, 0x51, 0x72, 0x00, 0xF3, 0x19, 0x60,
+0x52, 0x5A, 0x10, 0x60, 0x43, 0x72, 0x40, 0xF3,
+0x04, 0x60, 0x44, 0x5A, 0x04, 0x60, 0x35, 0x72,
+0xE0, 0xF1, 0x17, 0x60, 0x80, 0x12, 0x46, 0x72,
+0x20, 0xF3, 0x1B, 0x60, 0x4A, 0x72, 0xC0, 0xF2,
+0x19, 0x60, 0x79, 0x12, 0x5A, 0x72, 0x00, 0xF1,
+0x03, 0x60, 0x5B, 0x5A, 0x04, 0x60, 0x52, 0x72,
+0x20, 0xF3, 0x0F, 0x60, 0x70, 0x12, 0xA4, 0x72,
+0x80, 0xF5, 0x16, 0x60, 0xA8, 0x72, 0xE0, 0xF3,
+0x07, 0x60, 0x69, 0x12, 0x62, 0x99, 0x4E, 0xD3,
+0x00, 0x18, 0xCA, 0xC3, 0x50, 0xD2, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0x4E, 0x94, 0x02, 0x67,
+0x24, 0x5C, 0x04, 0x61, 0x4E, 0x95, 0x82, 0x67,
+0xDC, 0x4D, 0x02, 0x10, 0x82, 0x67, 0x00, 0x6D,
+0x00, 0x18, 0x76, 0xC3, 0x50, 0x95, 0x01, 0x75,
+0xA0, 0xF2, 0x09, 0x60, 0x90, 0x67, 0x01, 0x6D,
+0x00, 0x18, 0x77, 0xC3, 0x4F, 0x94, 0x6E, 0x10,
+0x00, 0x18, 0x6E, 0xC3, 0x50, 0xD2, 0x40, 0x30,
+0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4, 0x1C, 0x4A,
+0x04, 0x30, 0x01, 0xE2, 0x90, 0x67, 0x00, 0x6D,
+0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18, 0xBE, 0xCA,
+0x42, 0x99, 0x08, 0x5A, 0x4F, 0xD2, 0x60, 0x61,
+0x70, 0x6A, 0x40, 0xC0, 0x4F, 0x92, 0xF8, 0x4A,
+0x47, 0xC0, 0x4E, 0x93, 0x01, 0xF4, 0x5A, 0xA3,
+0x01, 0x72, 0x16, 0x61, 0x05, 0x6A, 0x42, 0xC0,
+0x00, 0x6C, 0x20, 0x6A, 0x4C, 0xC0, 0x8D, 0xC0,
+0x4F, 0x92, 0x50, 0x94, 0xFF, 0xF7, 0x1F, 0x6D,
+0x4C, 0xED, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
+0x00, 0x6B, 0x01, 0xF4, 0x7A, 0xC2, 0x29, 0x10,
+0x30, 0xF0, 0x21, 0x6A, 0xD1, 0xF0, 0x51, 0xA2,
+0x01, 0x6B, 0x4E, 0xEB, 0x06, 0x2B, 0x02, 0x6A,
+0x42, 0xC0, 0x3A, 0x6A, 0x4C, 0xC0, 0x6D, 0xC0,
+0x08, 0x10, 0x02, 0x6B, 0x6E, 0xEA, 0x0B, 0x2A,
+0x06, 0x6B, 0x62, 0xC0, 0x28, 0x6B, 0x6C, 0xC0,
+0x4D, 0xC0, 0x4F, 0x92, 0xFF, 0xF7, 0x1F, 0x6D,
+0x50, 0x94, 0x4C, 0xED, 0x0B, 0x10, 0x05, 0x6A,
+0x42, 0xC0, 0x20, 0x6A, 0x4C, 0xC0, 0x00, 0x6A,
+0x4D, 0xC0, 0x4F, 0x93, 0x50, 0x94, 0xFF, 0xF7,
+0x1F, 0x6D, 0x6C, 0xED, 0x00, 0x6E, 0x00, 0x18,
+0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
+0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
+0x02, 0x67, 0x90, 0x67, 0x00, 0x6D, 0x00, 0x18,
+0x76, 0xC3, 0x90, 0x67, 0x00, 0x6D, 0x00, 0x18,
+0x77, 0xC3, 0x4E, 0x94, 0x0D, 0x6D, 0x00, 0x6E,
+0x00, 0x18, 0x0B, 0xD4, 0xC0, 0xF5, 0x0A, 0x10,
+0x50, 0x94, 0x00, 0x6D, 0xC5, 0x67, 0x00, 0x18,
+0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
+0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
+0x02, 0x67, 0x82, 0x67, 0x4F, 0x95, 0x43, 0x11,
+0x00, 0x18, 0x6E, 0xC3, 0x4E, 0xD2, 0x40, 0x30,
+0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4, 0x1C, 0x4A,
+0x04, 0x30, 0x01, 0xE2, 0x90, 0x67, 0x00, 0x6D,
+0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18, 0xBE, 0xCA,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
+0x01, 0xF4, 0x78, 0xA2, 0x02, 0x6C, 0x8C, 0xEB,
+0x04, 0x2B, 0x01, 0xF4, 0x5B, 0xA2, 0x01, 0x72,
+0x31, 0x61, 0x03, 0x6A, 0x40, 0xC0, 0x30, 0xF0,
+0x21, 0x6A, 0xB1, 0xF0, 0x45, 0xA2, 0x08, 0x2A,
+0x30, 0xF0, 0x21, 0x6C, 0xD1, 0xF0, 0x10, 0x4C,
+0x00, 0x18, 0xAB, 0xC2, 0x01, 0x72, 0x0C, 0x61,
+0x30, 0xF0, 0x21, 0x6A, 0xD1, 0xF0, 0x70, 0xA2,
+0x02, 0x6A, 0x6C, 0xEA, 0x05, 0x22, 0x04, 0x6A,
+0x6C, 0xEA, 0x02, 0x22, 0x00, 0x6A, 0x02, 0x10,
+0x80, 0x6A, 0x4B, 0xEA, 0x42, 0xC0, 0x4E, 0x94,
+0x04, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67,
+0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3, 0xA2, 0x99,
+0x02, 0x67, 0x04, 0x5D, 0x96, 0x61, 0x82, 0x67,
+0xFC, 0x4D, 0x95, 0x17, 0x4E, 0x94, 0xE5, 0x10,
+0x00, 0x18, 0x6E, 0xC3, 0x4F, 0xD2, 0x40, 0x33,
+0x30, 0xF0, 0x21, 0x6A, 0x64, 0x33, 0x90, 0xF4,
+0x1C, 0x4A, 0x69, 0xE2, 0x82, 0x67, 0x00, 0x6D,
+0x00, 0xF2, 0x00, 0x6E, 0x51, 0xD2, 0x00, 0x18,
+0xBE, 0xCA, 0x4E, 0x95, 0x82, 0x99, 0x02, 0x6B,
+0x01, 0xF4, 0x58, 0xA5, 0x50, 0xD4, 0x6C, 0xEA,
+0x04, 0x2A, 0x01, 0xF4, 0x5B, 0xA5, 0x01, 0x72,
+0x55, 0x61, 0x16, 0xA1, 0x57, 0xA1, 0x00, 0x30,
+0x41, 0xE0, 0x50, 0x20, 0x00, 0x18, 0x6E, 0xC3,
+0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18,
+0x78, 0xC3, 0x29, 0x58, 0x22, 0x67, 0x06, 0x61,
+0x4F, 0x94, 0x00, 0x6D, 0xC5, 0x67, 0x00, 0x18,
+0x0B, 0xD4, 0x37, 0x13, 0x30, 0xF0, 0x21, 0x6A,
+0xB1, 0xF0, 0x45, 0xA2, 0x08, 0x2A, 0x30, 0xF0,
+0x21, 0x6C, 0xD1, 0xF0, 0x10, 0x4C, 0x00, 0x18,
+0xAB, 0xC2, 0x01, 0x72, 0x16, 0x61, 0x30, 0xF0,
+0x21, 0x6A, 0xD1, 0xF0, 0x70, 0xA2, 0x02, 0x6A,
+0x6C, 0xEA, 0x0A, 0x22, 0x04, 0x6A, 0x6C, 0xEA,
+0x02, 0x22, 0x00, 0x6A, 0x0C, 0x10, 0x80, 0x6A,
+0x4B, 0xEA, 0x9D, 0x67, 0x53, 0xC4, 0x09, 0x10,
+0x80, 0x6A, 0x4B, 0xEA, 0xBD, 0x67, 0x53, 0xC5,
+0x04, 0x10, 0x80, 0x6A, 0x4B, 0xEA, 0x7D, 0x67,
+0x53, 0xC3, 0x51, 0x94, 0x04, 0x05, 0x28, 0x6E,
+0x00, 0x18, 0xC3, 0xCA, 0x4F, 0x94, 0xFF, 0xF7,
+0x1F, 0x6D, 0x0C, 0xED, 0x00, 0x6E, 0x00, 0x18,
+0x0B, 0xD4, 0x50, 0x94, 0x03, 0xEC, 0x04, 0x61,
+0x50, 0x92, 0x91, 0x67, 0x17, 0xE2, 0x02, 0x10,
+0x91, 0x67, 0x00, 0x6D, 0x00, 0x18, 0x76, 0xC3,
+0x91, 0x67, 0x24, 0x17, 0x4F, 0x94, 0x00, 0x6D,
+0xC5, 0x67, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0x02, 0x67, 0x82, 0x67,
+0x50, 0x95, 0x71, 0x10, 0x00, 0x18, 0x6E, 0xC3,
+0x4F, 0xD2, 0x40, 0x30, 0x30, 0xF0, 0x21, 0x6A,
+0x90, 0xF4, 0x1C, 0x4A, 0x04, 0x30, 0x01, 0xE2,
+0x90, 0x67, 0x00, 0x6D, 0x00, 0xF2, 0x00, 0x6E,
+0x00, 0x18, 0xBE, 0xCA, 0x4E, 0x93, 0x01, 0xF4,
+0x58, 0xA3, 0x02, 0x6B, 0x6C, 0xEA, 0x05, 0x2A,
+0x4E, 0x94, 0x01, 0xF4, 0x5B, 0xA4, 0x01, 0x72,
+0x47, 0x61, 0x08, 0x6A, 0x43, 0xC0, 0x10, 0xF0,
+0x23, 0x6B, 0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7,
+0x58, 0x9A, 0xEE, 0xF2, 0x64, 0x9B, 0x43, 0xEB,
+0x20, 0x60, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF2,
+0x68, 0x9B, 0x49, 0xE3, 0xE0, 0xF1, 0x1F, 0x6B,
+0x4C, 0xEB, 0x04, 0x2B, 0x42, 0x32, 0x64, 0xC0,
+0x46, 0x32, 0x05, 0x10, 0x42, 0x32, 0x00, 0x6B,
+0x46, 0x32, 0x64, 0xC0, 0x01, 0x4A, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF2, 0x6C, 0x9B, 0x4C, 0xEB,
+0x62, 0x33, 0x62, 0x33, 0x65, 0xC0, 0x1F, 0xF7,
+0x00, 0x6B, 0x4C, 0xEB, 0x62, 0x33, 0x66, 0xC0,
+0x04, 0x10, 0x00, 0x6A, 0x44, 0xC0, 0x45, 0xC0,
+0x46, 0xC0, 0x47, 0xC0, 0x02, 0x6B, 0x00, 0x6A,
+0x68, 0xC0, 0x49, 0xC0, 0x6A, 0xC0, 0x4B, 0xC0,
+0x4F, 0x94, 0x0C, 0x6D, 0x00, 0x6E, 0x00, 0x18,
+0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
+0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
+0x02, 0x67, 0x82, 0x67, 0xA2, 0x99, 0xAF, 0x16,
+0x4F, 0x94, 0x00, 0x6D, 0xC5, 0x67, 0x00, 0x18,
+0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
+0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
+0x02, 0x67, 0x82, 0x67, 0x00, 0x6D, 0x00, 0x18,
+0x76, 0xC3, 0x90, 0x67, 0x01, 0x6D, 0x9F, 0x16,
+0x00, 0x18, 0x6E, 0xC3, 0x4E, 0xD2, 0x40, 0x30,
+0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4, 0x1C, 0x4A,
+0x04, 0x30, 0x01, 0xE2, 0x90, 0x67, 0x00, 0x6D,
+0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18, 0xBE, 0xCA,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
+0x01, 0xF4, 0x78, 0xA2, 0x02, 0x6C, 0x8C, 0xEB,
+0x04, 0x2B, 0x01, 0xF4, 0x5B, 0xA2, 0x01, 0x72,
+0x59, 0x61, 0x56, 0xA1, 0x01, 0x6B, 0x6C, 0xEA,
+0x52, 0x2A, 0x71, 0xA1, 0x50, 0x2B, 0x42, 0x99,
+0x08, 0x5A, 0x4D, 0x61, 0x10, 0xF0, 0x30, 0x6A,
+0x10, 0xF0, 0x23, 0x6C, 0xC1, 0xF7, 0x58, 0x9A,
+0xEE, 0xF2, 0x90, 0x9C, 0x43, 0xEC, 0x28, 0x60,
+0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF2, 0x88, 0x9C,
+0x51, 0xE4, 0xE0, 0xF1, 0x1F, 0x6A, 0x8C, 0xEA,
+0x0D, 0x2A, 0x00, 0xF2, 0x00, 0x5C, 0x05, 0x60,
+0x40, 0xC0, 0x41, 0xC0, 0x42, 0xC0, 0x43, 0xC0,
+0x1B, 0x10, 0x82, 0x34, 0x86, 0x34, 0x40, 0xC0,
+0xFF, 0x4C, 0x03, 0x10, 0x82, 0x34, 0x60, 0xC0,
+0x86, 0x34, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF2,
+0x4C, 0x9A, 0x83, 0xC0, 0x8C, 0xEA, 0x42, 0x32,
+0x42, 0x32, 0x41, 0xC0, 0x1F, 0xF7, 0x00, 0x6A,
+0x8C, 0xEA, 0x42, 0x32, 0x42, 0xC0, 0x04, 0x10,
+0x60, 0xC0, 0x61, 0xC0, 0x62, 0xC0, 0x63, 0xC0,
+0x00, 0x6A, 0x02, 0x6B, 0x66, 0xC0, 0x44, 0xC0,
+0x45, 0xC0, 0x47, 0xC0, 0x4E, 0x94, 0x08, 0x6D,
+0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0xA2, 0x99, 0x02, 0x67,
+0x82, 0x67, 0xF8, 0x4D, 0x28, 0x16, 0x4E, 0x94,
+0x00, 0x6D, 0x02, 0x10, 0x00, 0x6C, 0xA4, 0x67,
+0xC5, 0x67, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0x02, 0x67, 0x82, 0x67,
+0xA2, 0x99, 0x75, 0x17, 0xA2, 0x99, 0x13, 0x5D,
+0x4E, 0xD5, 0x12, 0x61, 0x00, 0x18, 0x6E, 0xC3,
+0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2, 0x00, 0x18,
+0x78, 0xC3, 0x4E, 0x95, 0x02, 0x67, 0x82, 0x67,
+0x00, 0x18, 0x76, 0xC3, 0x90, 0x67, 0x01, 0x6D,
+0x00, 0x18, 0x77, 0xC3, 0x4F, 0x94, 0x63, 0x10,
+0x30, 0xF0, 0x20, 0x68, 0xAF, 0xF4, 0x18, 0x48,
+0x01, 0xF4, 0x58, 0xA0, 0x02, 0x6B, 0x6C, 0xEA,
+0x26, 0x2A, 0x01, 0xF4, 0x5B, 0xA0, 0x23, 0x2A,
+0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67,
+0x4F, 0xD2, 0x00, 0x18, 0x78, 0xC3, 0x4E, 0x95,
+0x22, 0x67, 0x82, 0x67, 0x00, 0x18, 0x76, 0xC3,
+0x91, 0x67, 0x01, 0x6D, 0x00, 0x18, 0x77, 0xC3,
+0x4F, 0x94, 0x0D, 0x6D, 0x00, 0x6E, 0x00, 0x18,
+0x0B, 0xD4, 0x01, 0xF4, 0x59, 0xA0, 0x01, 0x4A,
+0x01, 0xF4, 0x59, 0xC0, 0x01, 0xF4, 0x59, 0xA0,
+0x03, 0x5A, 0xA0, 0xF3, 0x0B, 0x61, 0x01, 0x6A,
+0x01, 0xF4, 0x5B, 0xC0, 0xA7, 0x13, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0x4E, 0x95, 0x02, 0x67,
+0x82, 0x67, 0x00, 0x18, 0x76, 0xC3, 0x90, 0x67,
+0x00, 0x6D, 0x56, 0x15, 0x00, 0x18, 0x6E, 0xC3,
+0x02, 0x67, 0x40, 0x34, 0x30, 0xF0, 0x21, 0x6A,
+0x90, 0xF4, 0x1C, 0x4A, 0x84, 0x34, 0x91, 0xE2,
+0x00, 0x6D, 0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18,
+0xBE, 0xCA, 0x00, 0x6D, 0xC5, 0x67, 0x90, 0x67,
+0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18, 0x6E, 0xC3,
+0xA2, 0x67, 0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18,
+0x78, 0xC3, 0xA2, 0x99, 0x02, 0x67, 0x82, 0x67,
+0x00, 0x18, 0x76, 0xC3, 0x90, 0x67, 0x01, 0x6D,
+0x00, 0x18, 0x77, 0xC3, 0x4E, 0x94, 0x0D, 0x6D,
+0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4, 0x01, 0x6B,
+0x30, 0xF0, 0x21, 0x6A, 0xD1, 0xF0, 0x72, 0xC2,
+0x69, 0x13, 0x00, 0x18, 0x6E, 0xC3, 0x02, 0x67,
+0x40, 0x34, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4,
+0x1C, 0x4A, 0x84, 0x34, 0x91, 0xE2, 0x00, 0x6D,
+0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18, 0xBE, 0xCA,
+0x42, 0x99, 0x00, 0x6D, 0xC5, 0x67, 0x90, 0x67,
+0x50, 0xD2, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0x50, 0x95, 0x02, 0x67,
+0x82, 0x67, 0x00, 0x18, 0x76, 0xC3, 0x90, 0x67,
+0x01, 0x6D, 0x00, 0x18, 0x77, 0xC3, 0x4F, 0x94,
+0x0D, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x4E, 0x93, 0x01, 0x6A, 0x01, 0xF4, 0x5A, 0xC3,
+0x39, 0x13, 0x00, 0x18, 0x6E, 0xC3, 0x4F, 0xD2,
+0x40, 0x30, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4,
+0x1C, 0x4A, 0x04, 0x30, 0x01, 0xE2, 0x90, 0x67,
+0x00, 0x6D, 0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18,
+0xBE, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0x82, 0x99,
+0xAF, 0xF4, 0x18, 0x4A, 0x01, 0xF4, 0x78, 0xA2,
+0x4E, 0xD4, 0x02, 0x6C, 0x8C, 0xEB, 0x05, 0x2B,
+0x01, 0xF4, 0x5B, 0xA2, 0x01, 0x72, 0x80, 0xF0,
+0x03, 0x61, 0x6F, 0xA1, 0x43, 0x6A, 0x6E, 0xEA,
+0x39, 0x2A, 0x12, 0x6B, 0x61, 0xC0, 0x01, 0x6B,
+0x62, 0xC0, 0x63, 0xC0, 0x66, 0xC0, 0x56, 0x6B,
+0x14, 0x6C, 0x6B, 0xEB, 0x85, 0xC0, 0x8D, 0xC0,
+0x6E, 0xC0, 0x52, 0xC0, 0x53, 0xC0, 0x58, 0xA1,
+0x40, 0x72, 0x03, 0x60, 0x51, 0xA1, 0x01, 0x72,
+0x03, 0x61, 0x0A, 0x6A, 0x41, 0xC0, 0x05, 0x10,
+0x50, 0xA1, 0x02, 0x72, 0x02, 0x61, 0x02, 0x6A,
+0x4B, 0xC0, 0x4E, 0x95, 0x15, 0x5D, 0x06, 0x60,
+0x4E, 0x92, 0xFF, 0xF7, 0x1F, 0x6D, 0x4F, 0x94,
+0x4C, 0xED, 0x02, 0x10, 0x4F, 0x94, 0x14, 0x6D,
+0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0x4E, 0x93, 0x02, 0x67,
+0x14, 0x5B, 0x47, 0x61, 0xA3, 0x67, 0x82, 0x67,
+0xEC, 0x4D, 0x3F, 0x17, 0x46, 0x73, 0x18, 0x61,
+0x4E, 0x94, 0x08, 0x5C, 0x41, 0x61, 0x04, 0x6A,
+0x43, 0xC0, 0x08, 0x6A, 0x47, 0xC0, 0x4F, 0x94,
+0x08, 0x6D, 0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67,
+0x4F, 0xD2, 0x00, 0x18, 0x78, 0xC3, 0x4E, 0x95,
+0x02, 0x67, 0x82, 0x67, 0xF8, 0x4D, 0x25, 0x17,
+0x2E, 0x6A, 0x41, 0xC0, 0x01, 0x6A, 0x42, 0xC0,
+0x43, 0xC0, 0x46, 0xC0, 0x02, 0x6A, 0x47, 0xC0,
+0x10, 0x6A, 0x57, 0xC0, 0x10, 0xF0, 0x23, 0x6A,
+0xEE, 0xF2, 0x54, 0x9A, 0x04, 0x6B, 0x65, 0xC0,
+0x46, 0xD8, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2,
+0x48, 0x9A, 0x20, 0x6D, 0x00, 0x6E, 0x47, 0xD8,
+0x4F, 0x94, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0x4E, 0x95, 0x02, 0x67,
+0x20, 0x5D, 0x03, 0x61, 0x82, 0x67, 0xE0, 0x4D,
+0xFC, 0x16, 0x90, 0x67, 0x00, 0x6D, 0xF9, 0x16,
+0x00, 0x6D, 0x4F, 0x94, 0xC5, 0x67, 0xE5, 0x11,
+0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67,
+0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3, 0x02, 0x67,
+0x82, 0x67, 0x00, 0x6D, 0x00, 0x18, 0x76, 0xC3,
+0x90, 0x67, 0x00, 0x6D, 0x00, 0x18, 0x77, 0xC3,
+0x4E, 0x94, 0x0D, 0x6D, 0x00, 0x6E, 0x00, 0x18,
+0x0B, 0xD4, 0x00, 0x18, 0xBF, 0xD3, 0x7A, 0x12,
+0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7, 0x58, 0x9A,
+0x02, 0x99, 0x4F, 0xD2, 0x52, 0xA1, 0x71, 0xA1,
+0x40, 0x32, 0x00, 0xF6, 0x60, 0x33, 0x40, 0x32,
+0x49, 0xE3, 0x74, 0xA1, 0x69, 0xE2, 0x73, 0xA1,
+0x60, 0x33, 0x69, 0xE2, 0x80, 0xF1, 0x00, 0x4A,
+0x40, 0x32, 0x44, 0x32, 0x4E, 0xD2, 0x00, 0xF2,
+0x01, 0x58, 0x65, 0x60, 0x4E, 0x92, 0x4F, 0x93,
+0x09, 0xE2, 0x43, 0xEB, 0x51, 0xD2, 0x23, 0x61,
+0x00, 0x18, 0x6E, 0xC3, 0x50, 0xD2, 0x40, 0x33,
+0x30, 0xF0, 0x21, 0x6A, 0x64, 0x33, 0x90, 0xF4,
+0x1C, 0x4A, 0x69, 0xE2, 0x82, 0x67, 0x00, 0x6D,
+0x00, 0xF2, 0x00, 0x6E, 0x4F, 0xD2, 0x00, 0x18,
+0xBE, 0xCA, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0x94,
+0x4F, 0x96, 0xAE, 0xF5, 0x44, 0x9A, 0xB0, 0x67,
+0x40, 0xEA, 0x50, 0x94, 0xFF, 0xF7, 0x1F, 0x6D,
+0x0C, 0xED, 0x01, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x80, 0xF0, 0x1E, 0x2A, 0x9A, 0x10, 0x4E, 0x94,
+0x4F, 0x95, 0xA3, 0xEC, 0x2A, 0x60, 0x00, 0x18,
+0x6E, 0xC3, 0x52, 0xD2, 0x40, 0x33, 0x30, 0xF0,
+0x21, 0x6A, 0x64, 0x33, 0x90, 0xF4, 0x1C, 0x4A,
+0x69, 0xE2, 0x82, 0x67, 0x00, 0x6D, 0x00, 0xF2,
+0x00, 0x6E, 0x50, 0xD2, 0x00, 0x18, 0xBE, 0xCA,
+0x4E, 0x93, 0x4F, 0x92, 0x50, 0x96, 0x83, 0x67,
+0x6B, 0xE2, 0x53, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x53, 0x95, 0xAE, 0xF5, 0x44, 0x9A, 0x40, 0xEA,
+0x53, 0x92, 0x52, 0x94, 0xFF, 0xF7, 0x1F, 0x6D,
+0x4C, 0xED, 0x01, 0x6E, 0x00, 0x18, 0x0B, 0xD4,
+0x70, 0x22, 0x51, 0x93, 0x4F, 0x94, 0x83, 0xE3,
+0x69, 0x10, 0x00, 0x18, 0x6E, 0xC3, 0xA2, 0x67,
+0x91, 0x67, 0x4E, 0xD2, 0x00, 0x18, 0x78, 0xC3,
+0x22, 0x67, 0x91, 0x67, 0xB0, 0x67, 0x00, 0x18,
+0x76, 0xC3, 0x91, 0x67, 0x87, 0x15, 0x4E, 0x92,
+0x4F, 0x93, 0x00, 0xF2, 0x00, 0x4A, 0x43, 0xEB,
+0x51, 0xD2, 0x27, 0x61, 0x00, 0x18, 0x6E, 0xC3,
+0x52, 0xD2, 0x40, 0x33, 0x30, 0xF0, 0x21, 0x6A,
+0x64, 0x33, 0x90, 0xF4, 0x1C, 0x4A, 0x69, 0xE2,
+0x82, 0x67, 0x00, 0x6D, 0x00, 0xF2, 0x00, 0x6E,
+0x50, 0xD2, 0x00, 0x18, 0xBE, 0xCA, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0x94, 0x50, 0x96, 0xAE, 0xF5,
+0x44, 0x9A, 0x00, 0xF2, 0x00, 0x6D, 0x40, 0xEA,
+0x52, 0x94, 0x00, 0xF2, 0x00, 0x6D, 0x01, 0x6E,
+0x00, 0x18, 0x0B, 0xD4, 0x36, 0x22, 0x1F, 0xF6,
+0x00, 0x48, 0x36, 0x20, 0x51, 0x94, 0x4E, 0xD4,
+0x6A, 0x17, 0x4E, 0x95, 0x4F, 0x92, 0x43, 0xED,
+0xC0, 0x60, 0x00, 0x18, 0x6E, 0xC3, 0x51, 0xD2,
+0x40, 0x33, 0x30, 0xF0, 0x21, 0x6A, 0x64, 0x33,
+0x90, 0xF4, 0x1C, 0x4A, 0x69, 0xE2, 0x82, 0x67,
+0x00, 0x6D, 0x00, 0xF2, 0x00, 0x6E, 0x50, 0xD2,
+0x00, 0x18, 0xBE, 0xCA, 0x4E, 0x94, 0x4F, 0x93,
+0x30, 0xF0, 0x20, 0x6A, 0x50, 0x96, 0xAE, 0xF5,
+0x44, 0x9A, 0x8F, 0xE3, 0xA3, 0x67, 0x52, 0xD3,
+0x40, 0xEA, 0x52, 0x92, 0x51, 0x94, 0xFF, 0xF7,
+0x1F, 0x6D, 0x4C, 0xED, 0x01, 0x6E, 0x00, 0x18,
+0x0B, 0xD4, 0x07, 0x22, 0x4E, 0x93, 0x4F, 0x94,
+0x01, 0xE3, 0x83, 0xE0, 0x01, 0x6D, 0x4E, 0xD5,
+0x06, 0x10, 0x00, 0x6A, 0x4E, 0xD2, 0x03, 0x10,
+0x01, 0x6B, 0x00, 0x68, 0x4E, 0xD3, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0x4E, 0x94, 0x22, 0x67,
+0x06, 0x24, 0x82, 0x67, 0xB0, 0x67, 0x00, 0x18,
+0x76, 0xC3, 0x91, 0x67, 0xED, 0x15, 0x82, 0x67,
+0x00, 0x6D, 0x00, 0x18, 0x76, 0xC3, 0x91, 0x67,
+0x3F, 0xF3, 0x1D, 0x10, 0x76, 0xA1, 0x57, 0xA1,
+0x82, 0x99, 0x60, 0x33, 0x49, 0xE3, 0x4E, 0xD2,
+0x4E, 0x95, 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xED,
+0xA0, 0x32, 0x44, 0x32, 0x8E, 0xEA, 0x4E, 0xD5,
+0x7F, 0xF5, 0x19, 0x2A, 0x4C, 0xA1, 0x7F, 0xF5,
+0x16, 0x2A, 0x52, 0xA1, 0x71, 0xA1, 0x40, 0x32,
+0x40, 0x32, 0x00, 0xF6, 0x60, 0x33, 0x4D, 0xE3,
+0x54, 0xA1, 0x4D, 0xE3, 0x53, 0xA1, 0x40, 0x32,
+0x4D, 0xE3, 0x80, 0xF1, 0x40, 0x43, 0x40, 0x35,
+0xA4, 0x35, 0x91, 0xE5, 0x51, 0xD5, 0x10, 0xF0,
+0x30, 0x6D, 0xC1, 0xF7, 0xB8, 0x9D, 0x83, 0xED,
+0x5F, 0xF5, 0x1D, 0x61, 0x07, 0x68, 0x6C, 0xE8,
+0x05, 0x28, 0x4E, 0x94, 0x51, 0x95, 0x00, 0x18,
+0x89, 0xC3, 0x62, 0x10, 0x0B, 0xE2, 0x40, 0x32,
+0x44, 0x32, 0x50, 0xD2, 0x00, 0x6A, 0x4F, 0xD2,
+0xFF, 0x6E, 0x0E, 0x04, 0x00, 0x6D, 0x01, 0x4E,
+0x00, 0x18, 0xBE, 0xCA, 0x4F, 0x93, 0x50, 0x95,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF5, 0x44, 0x9A,
+0xB1, 0xE3, 0xFF, 0x6D, 0x01, 0x4D, 0x0E, 0x06,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x4F, 0x94,
+0xEE, 0xF2, 0x60, 0x9B, 0x0E, 0x02, 0x6D, 0xE4,
+0x4E, 0x04, 0xA0, 0xA2, 0x01, 0x4A, 0x8A, 0xEA,
+0xA0, 0xC3, 0x01, 0x4B, 0xFA, 0x61, 0x4F, 0x95,
+0x00, 0xF1, 0x00, 0x4D, 0x02, 0xF0, 0x00, 0x75,
+0x4F, 0xD5, 0xDA, 0x61, 0x4E, 0x92, 0x50, 0x95,
+0x51, 0xE0, 0x00, 0x18, 0x89, 0xC3, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x48, 0x9A, 0x00, 0x30,
+0x04, 0x30, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C, 0x40, 0xEA,
+0x4F, 0xD0, 0x00, 0x68, 0xFF, 0x6E, 0x0E, 0x04,
+0x00, 0x6D, 0x01, 0x4E, 0x00, 0x18, 0xBE, 0xCA,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF2, 0x60, 0x9A,
+0x4E, 0x04, 0x0E, 0x02, 0x6D, 0xE0, 0xA0, 0xA3,
+0x01, 0x4B, 0xA0, 0xC2, 0x01, 0x4A, 0x8A, 0xEA,
+0xFA, 0x61, 0x50, 0x93, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF5, 0x40, 0x9A, 0xFF, 0x6D, 0x71, 0xE0,
+0x01, 0x4D, 0x0E, 0x06, 0x40, 0xEA, 0x4F, 0x94,
+0x00, 0xF1, 0x00, 0x48, 0x83, 0xE8, 0xDE, 0x61,
+0x51, 0x93, 0x4E, 0x95, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF4, 0x18, 0x4A, 0x30, 0xF0, 0x21, 0x68,
+0xB1, 0xF0, 0x10, 0x48, 0xE1, 0xF3, 0x70, 0xDA,
+0x01, 0x6B, 0x90, 0x67, 0xE1, 0xF3, 0xB4, 0xDA,
+0xE1, 0xF3, 0x6C, 0xC2, 0x00, 0x6D, 0x20, 0x6E,
+0x00, 0x18, 0xBE, 0xCA, 0x90, 0x67, 0xB1, 0x67,
+0x20, 0x6E, 0x00, 0x18, 0xC3, 0xCA, 0xCE, 0x10,
+0x00, 0x18, 0x6E, 0xC3, 0x4F, 0xD2, 0x40, 0x30,
+0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF4, 0x1C, 0x4A,
+0x04, 0x30, 0x01, 0xE2, 0x90, 0x67, 0x00, 0x6D,
+0x00, 0xF2, 0x00, 0x6E, 0x00, 0x18, 0xBE, 0xCA,
+0x82, 0x99, 0x06, 0x6A, 0xFF, 0xF7, 0x1F, 0x6D,
+0x4E, 0xD4, 0x41, 0xC0, 0x25, 0x6A, 0x44, 0xC0,
+0x01, 0x6A, 0x4B, 0xEA, 0x45, 0xC0, 0x01, 0x6A,
+0x46, 0xC0, 0x4E, 0x92, 0x4F, 0x94, 0x00, 0x6E,
+0x4C, 0xED, 0x00, 0x18, 0x0B, 0xD4, 0x00, 0x18,
+0x6E, 0xC3, 0xA2, 0x67, 0x91, 0x67, 0x4F, 0xD2,
+0x00, 0x18, 0x78, 0xC3, 0x4E, 0x95, 0x82, 0x67,
+0x02, 0x67, 0x00, 0x18, 0x76, 0xC3, 0x5F, 0xF2,
+0x19, 0x10, 0x4E, 0x93, 0xE1, 0xF3, 0x14, 0x9B,
+0x24, 0x28, 0x00, 0x18, 0x6E, 0xC3, 0x30, 0xF0,
+0x21, 0x6C, 0xB1, 0xF0, 0x10, 0x4C, 0xA2, 0x67,
+0x4F, 0xD2, 0x00, 0x18, 0x78, 0xC3, 0x4E, 0x94,
+0x22, 0x67, 0xE1, 0xF3, 0xB4, 0x9C, 0x82, 0x67,
+0xA0, 0x35, 0xA4, 0x35, 0x00, 0x18, 0x76, 0xC3,
+0x91, 0x67, 0x01, 0x6D, 0x00, 0x18, 0x77, 0xC3,
+0x4F, 0x94, 0x0D, 0x6D, 0x00, 0x6E, 0x00, 0x18,
+0x0B, 0xD4, 0x4E, 0x95, 0xE1, 0xF3, 0x0C, 0xC5,
+0xE1, 0xF3, 0x10, 0xDD, 0xE1, 0xF3, 0x14, 0xDD,
+0x75, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x48, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C, 0x40, 0xEA,
+0x59, 0x93, 0x4E, 0x94, 0xFF, 0xF7, 0x1F, 0x6A,
+0x4C, 0xEB, 0x00, 0x6D, 0x4F, 0xD3, 0xE1, 0xF3,
+0x10, 0x9C, 0x4E, 0xD5, 0x2A, 0x10, 0x4F, 0x92,
+0x00, 0xF1, 0x00, 0x5A, 0x19, 0x61, 0x4E, 0x93,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF5, 0x40, 0x9A,
+0xFF, 0x6D, 0x90, 0x67, 0x01, 0x4D, 0x79, 0xE1,
+0x40, 0xEA, 0x4F, 0x94, 0x4E, 0x95, 0xFF, 0xF7,
+0x1F, 0x6A, 0x80, 0x4C, 0x80, 0x4C, 0x00, 0xF1,
+0x00, 0x4D, 0x4C, 0xEC, 0x4C, 0xED, 0x4F, 0xD4,
+0x4E, 0xD5, 0x00, 0xF1, 0x00, 0x48, 0x0D, 0x10,
+0x4E, 0x93, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0x95,
+0xAE, 0xF5, 0x40, 0x9A, 0x90, 0x67, 0x79, 0xE1,
+0x40, 0xEA, 0x4F, 0x94, 0x00, 0x6D, 0x4F, 0xD5,
+0x81, 0xE0, 0x4F, 0x92, 0xD4, 0x2A, 0x30, 0xF0,
+0x20, 0x68, 0xAF, 0xF4, 0x18, 0x48, 0xE1, 0xF3,
+0x50, 0x98, 0x59, 0x93, 0x49, 0xE3, 0xE1, 0xF3,
+0x50, 0xD8, 0xE1, 0xF3, 0x54, 0x98, 0xFF, 0x4A,
+0xE1, 0xF3, 0x54, 0xD8, 0x23, 0x2A, 0x00, 0x18,
+0x6E, 0xC3, 0x30, 0xF0, 0x21, 0x6C, 0xB1, 0xF0,
+0x10, 0x4C, 0xA2, 0x67, 0x4E, 0xD2, 0x00, 0x18,
+0x78, 0xC3, 0x22, 0x67, 0x82, 0x67, 0x00, 0x6D,
+0x00, 0x18, 0x76, 0xC3, 0x91, 0x67, 0x00, 0x6D,
+0x00, 0x18, 0x77, 0xC3, 0x4E, 0x94, 0x0D, 0x6D,
+0x00, 0x6E, 0x00, 0x18, 0x0B, 0xD4, 0x9D, 0x67,
+0x30, 0xF1, 0xAC, 0x44, 0x80, 0xA5, 0x4F, 0x95,
+0xE1, 0xF3, 0x8C, 0xC0, 0xE1, 0xF3, 0xB0, 0xD8,
+0xE1, 0xF3, 0xB4, 0xD8, 0x57, 0x97, 0x56, 0x91,
+0x55, 0x90, 0x2C, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3, 0x04, 0x4B,
+0x30, 0xF0, 0x20, 0x69, 0xFF, 0x68, 0xAC, 0xE8,
+0xCE, 0xF4, 0x50, 0x99, 0xA0, 0x9B, 0x82, 0xF0,
+0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x23, 0x6B, 0x8E, 0xF2, 0xB0, 0x9B, 0xCE, 0xF4,
+0x50, 0x99, 0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA,
+0x01, 0x6D, 0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED,
+0x00, 0x18, 0xC2, 0xD2, 0x01, 0x70, 0x0F, 0x60,
+0x03, 0x20, 0x02, 0x70, 0x16, 0x60, 0x1F, 0x10,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3, 0x04, 0x4B,
+0x60, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
+0x0E, 0xF3, 0x68, 0x9B, 0x13, 0x10, 0x10, 0xF0,
+0x23, 0x6B, 0x0E, 0xF3, 0x6C, 0x9B, 0x6D, 0xEA,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3, 0x70, 0x9B,
+0x09, 0x10, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3,
+0x74, 0x9B, 0x6D, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
+0x0E, 0xF3, 0x78, 0x9B, 0x6C, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0xCE, 0xF4, 0x70, 0x9B, 0x01, 0x6D,
+0xA1, 0xF4, 0x18, 0x6C, 0xAB, 0xED, 0xC2, 0x67,
+0x40, 0xEB, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x4C, 0x9A,
+0x42, 0xF1, 0x18, 0x6C, 0x01, 0x6D, 0x02, 0x6E,
+0x40, 0xEA, 0x05, 0x97, 0x05, 0x6A, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6B,
+0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x63, 0xF6, 0x15, 0x4A, 0x40, 0xDB, 0x01, 0x4A,
+0x40, 0xDB, 0xF4, 0x17, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x23, 0x6A,
+0xEE, 0xF1, 0x7C, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
+0xEE, 0xF1, 0x58, 0x9A, 0x01, 0x6C, 0xA4, 0x67,
+0x60, 0xDA, 0x00, 0x18, 0x76, 0xC9, 0x30, 0xF0,
+0x20, 0x6A, 0x00, 0xF1, 0x00, 0x4A, 0x10, 0xF0,
+0x23, 0x6B, 0xEF, 0x9A, 0x0E, 0xF2, 0x60, 0x9B,
+0x8C, 0x9A, 0xCE, 0x9A, 0xAD, 0x9A, 0xE0, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF2, 0x64, 0x9B,
+0x00, 0x68, 0xC0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x0E, 0xF2, 0x68, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x0E, 0xF2, 0x6C, 0x9B, 0x80, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x89, 0x9A, 0x0E, 0xF2,
+0x70, 0x9B, 0x80, 0xDB, 0x68, 0x9A, 0x10, 0xF0,
+0x23, 0x6A, 0x0E, 0xF2, 0x54, 0x9A, 0x60, 0xDA,
+0x30, 0xF0, 0x20, 0x6A, 0x60, 0xF1, 0x48, 0xAA,
+0x0B, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0x08, 0x34,
+0x2E, 0xF2, 0x0C, 0x4B, 0x6D, 0xE4, 0x60, 0x9B,
+0x05, 0x23, 0x01, 0x48, 0xFF, 0x6B, 0x6C, 0xE8,
+0x43, 0xE8, 0xF3, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF2, 0x78, 0x9A, 0x7F, 0x6A, 0x00, 0x69,
+0x80, 0xA3, 0x20, 0xF0, 0x20, 0x6D, 0x00, 0xF1,
+0x00, 0x4D, 0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0,
+0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0,
+0x23, 0x6B, 0x0E, 0xF2, 0xDC, 0x9B, 0x91, 0x67,
+0x48, 0x6F, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0xC0, 0x9B,
+0x20, 0xF0, 0x20, 0x6D, 0x91, 0x67, 0xAD, 0xF1,
+0x08, 0x4D, 0x00, 0xF4, 0x00, 0x6F, 0x04, 0xD1,
+0x05, 0xD1, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xAE, 0xF2, 0x40, 0x9B, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF2, 0xC4, 0x9B, 0x20, 0xF0, 0x21, 0x6D,
+0x00, 0x37, 0x91, 0x67, 0x15, 0xF0, 0x00, 0x4D,
+0xE8, 0x37, 0x04, 0xD1, 0x05, 0xD1, 0x40, 0xEA,
+0x00, 0x1C, 0x96, 0x45, 0xFF, 0x17, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0xF1, 0x00, 0x4A,
+0x60, 0xDA, 0x81, 0xDA, 0xA2, 0xDA, 0xC3, 0xDA,
+0xE4, 0xDA, 0x05, 0xDA, 0x26, 0xDA, 0x78, 0x67,
+0x67, 0xDA, 0x7D, 0x67, 0x68, 0xDA, 0x7F, 0x67,
+0x69, 0xDA, 0x12, 0xEB, 0x6A, 0xDA, 0x10, 0xEB,
+0x6B, 0xDA, 0x6D, 0xB8, 0x00, 0x65, 0x6C, 0xDA,
+0x68, 0xB8, 0x00, 0x65, 0x6D, 0xDA, 0x6C, 0xB8,
+0x00, 0x65, 0x6E, 0xDA, 0x6E, 0xB8, 0x00, 0x65,
+0x6F, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x83, 0xF6,
+0x0D, 0x4A, 0x00, 0xEA, 0x00, 0x65, 0x00, 0x65,
+0xFF, 0x63, 0x01, 0xD0, 0xFF, 0x6A, 0x4C, 0xEC,
+0x4C, 0xED, 0x8E, 0x37, 0x4C, 0xEF, 0x07, 0x6E,
+0x01, 0x75, 0x8C, 0xEE, 0x52, 0xF4, 0x60, 0x47,
+0x42, 0x61, 0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1,
+0x08, 0x4C, 0x9D, 0xE7, 0xE8, 0xF2, 0x8F, 0xA7,
+0x01, 0x6D, 0xA4, 0xEE, 0xAD, 0xEC, 0xE8, 0xF2,
+0x8F, 0xC7, 0x1F, 0xF7, 0x00, 0x6C, 0x6C, 0xEC,
+0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x22, 0x2C,
+0x1F, 0xF7, 0x00, 0x6A, 0x6C, 0xEA, 0x02, 0xF0,
+0x00, 0x72, 0x01, 0x60, 0x07, 0x2A, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x88, 0x9A, 0x91, 0xE3,
+0x60, 0xA4, 0x0B, 0x10, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x88, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x4C, 0x9A, 0x91, 0xE3, 0x4D, 0xE3,
+0x60, 0xA3, 0x01, 0x6A, 0x00, 0xF6, 0x60, 0x33,
+0x44, 0xEE, 0x00, 0xF6, 0x63, 0x33, 0x4F, 0xEA,
+0x6C, 0xEA, 0x41, 0x10, 0x10, 0xF0, 0x23, 0x6C,
+0x2E, 0xF2, 0x8C, 0x9C, 0xAF, 0xED, 0x8D, 0xE3,
+0x80, 0xA3, 0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6,
+0x83, 0x34, 0xAC, 0xEC, 0x43, 0x10, 0x30, 0xF0,
+0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C, 0x9D, 0xE7,
+0xE8, 0xF2, 0x0F, 0xA7, 0x01, 0x6D, 0xA4, 0xEE,
+0xAF, 0xEC, 0x0C, 0xEC, 0xE8, 0xF2, 0x8F, 0xC7,
+0x1F, 0xF7, 0x00, 0x6C, 0x6C, 0xEC, 0x02, 0xF0,
+0x00, 0x74, 0x01, 0x60, 0x24, 0x2C, 0x1F, 0xF7,
+0x00, 0x6A, 0x6C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
+0x01, 0x60, 0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x88, 0x9A, 0x91, 0xE3, 0x60, 0xA4,
+0x0B, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x88, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x4C, 0x9A, 0x91, 0xE3, 0x4D, 0xE3, 0x60, 0xA3,
+0x00, 0xF6, 0x60, 0x33, 0x01, 0x6A, 0x00, 0xF6,
+0x63, 0x33, 0x44, 0xEE, 0x6D, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x40, 0xC4, 0x0D, 0x10, 0x10, 0xF0,
+0x23, 0x6C, 0x2E, 0xF2, 0x8C, 0x9C, 0x8D, 0xE3,
+0x80, 0xA3, 0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6,
+0x83, 0x34, 0xAD, 0xEC, 0x4C, 0xEC, 0x80, 0xC3,
+0x01, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0xFF, 0x6A, 0x4C, 0xEC, 0xAC, 0xEA, 0x0B, 0x2A,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0xB0, 0x9B,
+0x10, 0xF0, 0x23, 0x6E, 0x2E, 0xF2, 0xD4, 0x9E,
+0x60, 0x9D, 0xCC, 0xEB, 0x0C, 0x10, 0x01, 0x72,
+0x0B, 0x61, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2,
+0xB0, 0x9B, 0x10, 0xF0, 0x23, 0x6E, 0x2E, 0xF2,
+0xD8, 0x9E, 0x60, 0x9D, 0xCD, 0xEB, 0x60, 0xDD,
+0x05, 0x5C, 0x60, 0xF1, 0x06, 0x60, 0x10, 0xF0,
+0x23, 0x6B, 0x88, 0x34, 0x8E, 0xF0, 0x14, 0x4B,
+0x8D, 0xE3, 0x60, 0x9B, 0x00, 0xEB, 0x05, 0x2A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x70, 0x9A,
+0x0D, 0x11, 0x01, 0x72, 0x10, 0x61, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x70, 0x9A, 0xFF, 0x6C,
+0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0x8C, 0xEA, 0x40, 0xC3, 0x40, 0xA3, 0x80, 0x4D,
+0xC0, 0x4D, 0x8C, 0xEA, 0x14, 0x10, 0x02, 0x72,
+0x07, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x70, 0x9A, 0xBF, 0x6A, 0x80, 0xA3, 0xF4, 0x10,
+0x03, 0x72, 0x20, 0xF1, 0x1A, 0x61, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x70, 0x9A, 0xFF, 0x6C,
+0x40, 0x6D, 0x40, 0xA3, 0x8C, 0xEA, 0xAD, 0xEA,
+0xE7, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x7C, 0x9A, 0xFD, 0x6A, 0x80, 0xA3,
+0xDF, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x90, 0x9A, 0xFF, 0x6A,
+0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF2, 0x9C, 0x9B, 0x01, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x60, 0xA4, 0x02, 0x6D, 0x4C, 0xEB, 0xE1, 0x10,
+0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x70, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x7C, 0x9A, 0xFE, 0x6A, 0x80, 0xA3,
+0xB3, 0x10, 0x03, 0x72, 0xE0, 0xF0, 0x19, 0x61,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x90, 0x9A,
+0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x9C, 0x9A, 0x01, 0x6D,
+0x40, 0xA4, 0x6C, 0xEA, 0x92, 0x10, 0x07, 0x2A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x7C, 0x9A,
+0xF7, 0x6A, 0x80, 0xA3, 0x95, 0x10, 0x01, 0x72,
+0x19, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x90, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0x9C, 0x9B,
+0x04, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x60, 0xA4, 0x08, 0x6D,
+0x4C, 0xEB, 0x97, 0x10, 0x02, 0x72, 0x0F, 0x61,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x70, 0x9A,
+0xBF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x7C, 0x9A,
+0xFB, 0x6A, 0x80, 0xA3, 0x69, 0x10, 0x03, 0x72,
+0xA0, 0xF0, 0x0F, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x90, 0x9A, 0xFF, 0x6B, 0x40, 0x6D,
+0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x9C, 0x9A, 0x04, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0x48, 0x10, 0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x7C, 0x9A, 0xDF, 0x6A, 0x80, 0xA3,
+0x4B, 0x10, 0x01, 0x72, 0x19, 0x61, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x90, 0x9A, 0xFF, 0x6A,
+0x40, 0x6D, 0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF2, 0x9C, 0x9B, 0x10, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x60, 0xA4, 0x20, 0x6D, 0x4C, 0xEB, 0x4D, 0x10,
+0x02, 0x72, 0x0F, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x70, 0x9A, 0xBF, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x7C, 0x9A, 0xEF, 0x6A, 0x80, 0xA3,
+0x1F, 0x10, 0x03, 0x72, 0x66, 0x61, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x90, 0x9A, 0xFF, 0x6B,
+0x40, 0x6D, 0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA,
+0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x9C, 0x9A, 0x10, 0x6D, 0x40, 0xA4,
+0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
+0x20, 0xE8, 0x09, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x7C, 0x9A, 0x80, 0xA3, 0x7F, 0x6A,
+0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x01, 0x72,
+0x1C, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x90, 0x9A, 0xFF, 0x6A, 0x40, 0x6D, 0x60, 0xA4,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0x9C, 0x9B,
+0x60, 0xA4, 0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB,
+0x60, 0xC4, 0x60, 0xA4, 0x80, 0x4D, 0xC0, 0x4D,
+0x4C, 0xEB, 0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4,
+0x20, 0xE8, 0x02, 0x72, 0x10, 0x61, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x50, 0x9A, 0xBF, 0x6B,
+0x80, 0xA2, 0x6C, 0xEC, 0x80, 0xC2, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x5C, 0x9A, 0x80, 0xA2,
+0x8C, 0xEB, 0x60, 0xC2, 0x20, 0xE8, 0x03, 0x72,
+0x14, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x90, 0x9A, 0xFF, 0x6B, 0x40, 0x6D, 0x40, 0xA4,
+0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x9C, 0x9A,
+0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD0,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF2, 0x60, 0x9B,
+0xFF, 0x6A, 0x4C, 0xEC, 0x6D, 0xE5, 0x00, 0xA3,
+0x3F, 0x6F, 0x01, 0x74, 0x0C, 0xEF, 0x4C, 0xEE,
+0xE0, 0xC3, 0x10, 0x61, 0x10, 0xF0, 0x23, 0x6C,
+0x4E, 0xF2, 0xE4, 0x9C, 0x10, 0x68, 0xFD, 0xE5,
+0x80, 0xA7, 0x4C, 0xEC, 0x0D, 0xEC, 0x4C, 0xEC,
+0x80, 0xC7, 0x80, 0xA3, 0x80, 0x6F, 0xEB, 0xEF,
+0x4C, 0xEC, 0x0D, 0x10, 0x0F, 0x2C, 0x10, 0xF0,
+0x23, 0x6C, 0x4E, 0xF2, 0xE4, 0x9C, 0xEF, 0x6C,
+0xFD, 0xE5, 0x00, 0xA7, 0x0C, 0xEC, 0x80, 0xC7,
+0x80, 0xA3, 0x40, 0x6F, 0x4C, 0xEC, 0xED, 0xEC,
+0x4C, 0xEC, 0x80, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF2, 0x48, 0x9A, 0x80, 0xF4, 0xC0, 0x36,
+0x55, 0xE5, 0x40, 0x9D, 0x4D, 0xEE, 0xC0, 0xDD,
+0x01, 0x90, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0x10, 0xF0, 0x23, 0x6B, 0xFF, 0x6A, 0x4E, 0xF2,
+0x6C, 0x9B, 0x4C, 0xED, 0x4C, 0xEF, 0x04, 0xD5,
+0x05, 0xD7, 0x60, 0xA3, 0xFF, 0xF7, 0x1F, 0x68,
+0x26, 0x67, 0x4C, 0xEB, 0x72, 0x33, 0x4C, 0xEB,
+0x8C, 0xE8, 0x4C, 0xE9, 0x30, 0x23, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF2, 0x70, 0x9B, 0x00, 0x6C,
+0xFF, 0x6D, 0x60, 0xA3, 0x26, 0x6E, 0x6C, 0xEA,
+0x06, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x58, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF2, 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x72,
+0x11, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x5C, 0x9A, 0x90, 0x67, 0x01, 0x6D, 0xD1, 0x67,
+0x00, 0x6F, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x2E, 0xF4, 0x6C, 0x9B, 0x04, 0x94, 0x05, 0x96,
+0xA2, 0x67, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x58, 0x9A, 0x06, 0x95, 0x00, 0x6C,
+0x27, 0x6E, 0x40, 0xEA, 0x11, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x5C, 0x9A, 0x90, 0x67,
+0x01, 0x6D, 0xD1, 0x67, 0x00, 0x6F, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x6C, 0x9B,
+0x04, 0x94, 0x05, 0x96, 0xA2, 0x67, 0x40, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF2, 0x5C, 0x9A,
+0x40, 0xEA, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF2, 0x54, 0x9A, 0xFF, 0x6B, 0x80, 0xA2,
+0x00, 0xF6, 0x80, 0x34, 0x00, 0xF6, 0x83, 0x34,
+0x00, 0x54, 0x24, 0x60, 0xA0, 0xA2, 0x7F, 0x6C,
+0xAC, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0x40, 0x6D,
+0x6C, 0xEC, 0xAD, 0xEC, 0x6C, 0xEC, 0x80, 0xC2,
+0x80, 0xA2, 0x10, 0xF0, 0x23, 0x6C, 0x4E, 0xF2,
+0x98, 0x9C, 0x3F, 0x6D, 0x80, 0xA4, 0x10, 0xF0,
+0x23, 0x6C, 0x4E, 0xF2, 0x9C, 0x9C, 0x80, 0xA4,
+0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF2, 0x80, 0x9C,
+0x80, 0xA4, 0x80, 0xA2, 0x6C, 0xEC, 0xAD, 0xEC,
+0x6C, 0xEC, 0x80, 0xC2, 0x80, 0xA2, 0xBF, 0x6B,
+0x8C, 0xEB, 0x60, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2, 0x64, 0x9B,
+0xFF, 0x6A, 0x4C, 0xEC, 0xC0, 0xA3, 0x4C, 0xED,
+0x0C, 0x26, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF2,
+0x8C, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x20, 0xE8, 0x80, 0xC3, 0x0B, 0x25, 0x10, 0xF0,
+0x23, 0x6B, 0x6E, 0xF2, 0x90, 0x9B, 0x80, 0x6D,
+0xAB, 0xED, 0x60, 0xA4, 0x4C, 0xEB, 0xAE, 0xEB,
+0x4C, 0xEB, 0x60, 0xC4, 0x20, 0xE8, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0xF7, 0x1F, 0x6A, 0x0E, 0x90, 0x24, 0x67,
+0x4C, 0xE9, 0x03, 0x6B, 0x4C, 0xEF, 0x2C, 0xEB,
+0x00, 0x6A, 0x0B, 0xD5, 0x0C, 0xD6, 0x04, 0xD7,
+0x40, 0xC8, 0x00, 0x6A, 0x0A, 0x23, 0x28, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
+0x0A, 0x6C, 0x40, 0xEA, 0x40, 0xA8, 0x01, 0x4A,
+0x40, 0xC8, 0x1F, 0xF7, 0x00, 0x6A, 0x2C, 0xEA,
+0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x4C, 0x9A, 0x49, 0xE1, 0x0B, 0x93, 0x40, 0x9A,
+0x6C, 0xEA, 0x0C, 0x93, 0x6E, 0xEA, 0x04, 0x22,
+0x40, 0xA8, 0x04, 0x93, 0x63, 0xEA, 0xDC, 0x61,
+0x40, 0xA8, 0x04, 0x93, 0x63, 0xEA, 0x58, 0x67,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6B,
+0x6E, 0xF2, 0x74, 0x9B, 0xFF, 0x6A, 0xCC, 0xEA,
+0x6D, 0xEA, 0xE0, 0xF1, 0x1F, 0x6B, 0xAC, 0xEB,
+0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF2, 0x98, 0x9C,
+0x60, 0x33, 0x60, 0x33, 0x6D, 0xEA, 0x40, 0xDC,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x5C, 0x9A,
+0x6D, 0xEA, 0x40, 0xDC, 0x20, 0xE8, 0x00, 0x65,
+0xE0, 0xF1, 0x1F, 0x6A, 0x10, 0xF0, 0x23, 0x6B,
+0x6E, 0xF2, 0x7C, 0x9B, 0xAC, 0xEA, 0x40, 0x32,
+0x40, 0x32, 0x6D, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
+0x6E, 0xF2, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF2, 0x40, 0x9A, 0xFF, 0x6B,
+0x40, 0xA2, 0x6C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x01, 0x68, 0x04, 0xEC, 0x04, 0xF7, 0x10, 0x69,
+0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x01, 0x6C, 0xFF, 0x49, 0x40, 0xEA,
+0x0B, 0x29, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x68, 0x9A, 0x08, 0xF0, 0x00, 0x6C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x0B, 0x10,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x44, 0x9A,
+0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x6C, 0xEA,
+0x0C, 0xEA, 0xE3, 0x2A, 0x01, 0x6A, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x0E, 0x92, 0x04, 0x67, 0x0F, 0x91, 0x04, 0xD2,
+0x04, 0x93, 0xFF, 0x6A, 0x4C, 0xE8, 0x4C, 0xEB,
+0x90, 0x67, 0x0B, 0xD5, 0x0C, 0xD6, 0x0D, 0xD7,
+0x04, 0xD3, 0x4C, 0xE9, 0x00, 0x18, 0xC2, 0xC9,
+0x80, 0xF0, 0x07, 0x22, 0x06, 0x58, 0x80, 0xF0,
+0x04, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0x08, 0x30,
+0xAE, 0xF0, 0x08, 0x4A, 0x09, 0xE2, 0x40, 0x9A,
+0x00, 0xEA, 0x02, 0xF2, 0x10, 0x6A, 0x0E, 0x10,
+0x02, 0xF2, 0x00, 0x6A, 0x0B, 0x10, 0x22, 0xF2,
+0x00, 0x6A, 0x08, 0x10, 0x22, 0xF2, 0x10, 0x6A,
+0x05, 0x10, 0x42, 0xF2, 0x00, 0x6A, 0x02, 0x10,
+0x42, 0xF2, 0x10, 0x6A, 0x10, 0xF0, 0x23, 0x6B,
+0x0D, 0x94, 0x8E, 0xF2, 0x68, 0x9B, 0x8C, 0xEB,
+0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF2, 0x8C, 0x9C,
+0x8D, 0xEB, 0x06, 0x21, 0x10, 0xF0, 0x23, 0x6C,
+0x8E, 0xF2, 0x90, 0x9C, 0x6D, 0xEC, 0x05, 0x10,
+0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF2, 0x94, 0x9C,
+0x6C, 0xEC, 0x04, 0x96, 0x06, 0x26, 0x10, 0xF0,
+0x23, 0x6B, 0x6E, 0xF2, 0x7C, 0x9B, 0x8D, 0xEB,
+0x05, 0x10, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF2,
+0x78, 0x9B, 0x8C, 0xEB, 0x1F, 0xF7, 0x00, 0x6C,
+0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60,
+0x05, 0x2C, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2,
+0xA8, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C,
+0x2E, 0xF2, 0xAC, 0x9C, 0x10, 0xF0, 0x23, 0x6C,
+0x0B, 0x96, 0x8E, 0xF2, 0x9C, 0x9C, 0xB5, 0xE2,
+0xCC, 0xEC, 0x80, 0xDD, 0x84, 0x42, 0x1F, 0xF7,
+0x00, 0x6D, 0xAC, 0xEC, 0x02, 0xF0, 0x00, 0x74,
+0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0, 0x23, 0x6C,
+0xAE, 0xF2, 0xA0, 0x9C, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6C, 0xAE, 0xF2, 0xA4, 0x9C, 0x10, 0xF0,
+0x23, 0x6C, 0x0C, 0x96, 0x8E, 0xF2, 0x9C, 0x9C,
+0xB5, 0xE2, 0xCC, 0xEC, 0x80, 0xDD, 0x87, 0x42,
+0x01, 0x4C, 0x1F, 0xF7, 0x00, 0x6D, 0xAC, 0xEC,
+0x02, 0xF0, 0x00, 0x74, 0x01, 0x60, 0x05, 0x2C,
+0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF2, 0x88, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF2,
+0x8C, 0x9C, 0x89, 0xE2, 0x60, 0xDA, 0x01, 0x6A,
+0x01, 0x10, 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x04, 0xF7,
+0x10, 0x68, 0x13, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x05, 0x6C, 0xFF, 0x48,
+0x40, 0xEA, 0x0B, 0x28, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0x08, 0xF0, 0x00, 0x6C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A,
+0x09, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2,
+0x44, 0x9A, 0x60, 0xAA, 0x3F, 0x6A, 0x6C, 0xEA,
+0xE5, 0x2A, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
+0x8E, 0xF2, 0x44, 0x9A, 0x40, 0xAA, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x44, 0x9A,
+0x40, 0xAA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x6A, 0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF1,
+0x98, 0x9C, 0x10, 0xF0, 0x23, 0x6B, 0x05, 0xF1,
+0x0D, 0x4B, 0x0A, 0x72, 0x60, 0xDC, 0x0C, 0x61,
+0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF7, 0x54, 0x9A, 0x11, 0xF1, 0x94, 0x9B,
+0x01, 0x6D, 0xAB, 0xED, 0x40, 0xEA, 0x00, 0x6A,
+0x10, 0xF0, 0x23, 0x6C, 0xFF, 0x6B, 0x01, 0x4A,
+0xEE, 0xF1, 0x98, 0x9C, 0x6C, 0xEA, 0x10, 0xF0,
+0x23, 0x6B, 0x05, 0xF1, 0x0E, 0x4B, 0x60, 0xDC,
+0xDC, 0x17, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x00, 0x68, 0x01, 0x6A, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x4E, 0xE8,
+0x10, 0xF0, 0x23, 0x6A, 0x45, 0xF1, 0x1D, 0x4A,
+0x09, 0xE2, 0x40, 0xDB, 0x00, 0x1C, 0x96, 0x45,
+0x00, 0x18, 0x5D, 0xC9, 0x00, 0x1C, 0x95, 0x45,
+0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A,
+0x10, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x08, 0x23,
+0x10, 0xF0, 0x01, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18, 0x69, 0xD4,
+0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x8C, 0x9A, 0x02, 0x6B, 0x8C, 0xEB,
+0x09, 0x23, 0x03, 0x6B, 0x6B, 0xEB, 0x8C, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x00, 0x18, 0x08, 0xCF,
+0x00, 0x18, 0x6A, 0xCF, 0x00, 0x1C, 0x95, 0x45,
+0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x8C, 0x9A,
+0x04, 0x6B, 0x8C, 0xEB, 0x09, 0x23, 0x05, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x00, 0x18, 0x9C, 0xCC, 0x00, 0x18, 0xE5, 0xCB,
+0x00, 0x1C, 0x95, 0x45, 0x00, 0x1C, 0x96, 0x45,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x8C, 0x9A, 0x02, 0xF0, 0x00, 0x6B,
+0x8C, 0xEB, 0x08, 0x23, 0x02, 0xF0, 0x01, 0x6B,
+0x6B, 0xEB, 0x8C, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x00, 0x18, 0x27, 0xD6, 0x00, 0x1C, 0x95, 0x45,
+0x00, 0x1C, 0x96, 0x45, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0, 0x23, 0x6B,
+0xAE, 0xF2, 0x78, 0x9B, 0x80, 0xF0, 0x8C, 0x9A,
+0x8C, 0xEB, 0x09, 0x23, 0x10, 0xF0, 0x23, 0x6B,
+0xAE, 0xF2, 0x7C, 0x9B, 0x8C, 0xEB, 0x80, 0xF0,
+0x6C, 0xDA, 0x00, 0x18, 0xEE, 0xCD, 0x00, 0x1C,
+0x95, 0x45, 0x30, 0xF0, 0x21, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0x11, 0xF1, 0x94, 0x9B, 0xEE, 0xF7,
+0x58, 0x9A, 0x40, 0xEA, 0x73, 0x17, 0x00, 0x65,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x60, 0x9A,
+0xDF, 0x6A, 0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6B,
+0xCE, 0xF2, 0xA0, 0x9B, 0xFF, 0x6A, 0x20, 0x6E,
+0x60, 0xA5, 0x4C, 0xEC, 0x4C, 0xEB, 0xCD, 0xEB,
+0x4C, 0xEB, 0x07, 0xF7, 0x01, 0x4A, 0x4D, 0xEC,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x44, 0x9A,
+0x60, 0xC5, 0x80, 0xCA, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF2, 0x44, 0x9A,
+0x68, 0xF0, 0x04, 0x6B, 0x60, 0xCA, 0x20, 0xE8,
+0x03, 0x6F, 0x8C, 0xEF, 0x64, 0x67, 0x46, 0x67,
+0x04, 0x27, 0x07, 0x10, 0xA0, 0xDB, 0xFC, 0x4A,
+0x04, 0x4B, 0x04, 0x5A, 0xFB, 0x60, 0x03, 0x6A,
+0x4C, 0xEE, 0x04, 0x26, 0xA0, 0xC4, 0xFF, 0x4E,
+0x01, 0x4C, 0xFB, 0x17, 0x00, 0x6A, 0x20, 0xE8,
+0xFF, 0x6A, 0xAC, 0xEA, 0x03, 0x10, 0x40, 0xC4,
+0xFF, 0x4E, 0x01, 0x4C, 0xFC, 0x2E, 0x00, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0x00, 0x6A, 0x07, 0x26,
+0x5D, 0xE5, 0xE0, 0xA7, 0x4D, 0xE4, 0xFF, 0x4E,
+0xE0, 0xC3, 0x01, 0x4A, 0xF8, 0x17, 0x00, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0x09, 0x10, 0x60, 0xA4,
+0x40, 0xA5, 0xFF, 0x4E, 0x4A, 0xEB, 0x02, 0x60,
+0x4B, 0xE3, 0x20, 0xE8, 0x01, 0x4C, 0x01, 0x4D,
+0xF6, 0x2E, 0x00, 0x6A, 0x20, 0xE8, 0x00, 0x65,
+0x06, 0x2C, 0x64, 0x6B, 0x30, 0xF0, 0x21, 0x6A,
+0xF1, 0xF0, 0x60, 0xDA, 0x04, 0x10, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x80, 0xDA, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x40, 0x9A, 0x28, 0x72,
+0x2D, 0x60, 0x29, 0x5A, 0x07, 0x60, 0x14, 0x72,
+0x19, 0x60, 0x19, 0x72, 0x1F, 0x60, 0x0A, 0x72,
+0x0D, 0x60, 0x20, 0xE8, 0x50, 0x72, 0x32, 0x60,
+0x51, 0x5A, 0x03, 0x60, 0x32, 0x72, 0x26, 0x60,
+0x20, 0xE8, 0x64, 0x72, 0x33, 0x60, 0xC8, 0x72,
+0x39, 0x60, 0x20, 0xE8, 0x02, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0xE0, 0xF7,
+0x1E, 0x4B, 0x39, 0x10, 0x03, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0xE1, 0xF3,
+0x1D, 0x4B, 0x31, 0x10, 0x09, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0xE4, 0xF3,
+0x17, 0x4B, 0x29, 0x10, 0x05, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0xE2, 0xF3,
+0x1B, 0x4B, 0x21, 0x10, 0x11, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0xE8, 0xF3,
+0x0F, 0x4B, 0x19, 0x10, 0x0A, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0xE4, 0xF7,
+0x16, 0x4B, 0x11, 0x10, 0x22, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0x11, 0xF0,
+0x00, 0x6B, 0x09, 0x10, 0x43, 0x6B, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x64, 0xDA, 0x10, 0xF0,
+0x23, 0x6A, 0xEE, 0xF2, 0x78, 0x9A, 0x30, 0xF0,
+0x21, 0x6A, 0xF1, 0xF0, 0x68, 0xDA, 0x20, 0xE8,
+0x30, 0xF0, 0x21, 0x6A, 0xF1, 0xF0, 0x40, 0x9A,
+0x20, 0xE8, 0x00, 0x65, 0xFF, 0x63, 0x0C, 0x24,
+0x30, 0xF0, 0x21, 0x6A, 0xF1, 0xF0, 0x48, 0x9A,
+0x58, 0xEC, 0x12, 0xEC, 0x00, 0xD4, 0x00, 0x92,
+0xFF, 0x4A, 0x00, 0xD2, 0x00, 0x92, 0xFB, 0x2A,
+0x01, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x0D, 0x24,
+0x30, 0xF0, 0x21, 0x6A, 0xF1, 0xF0, 0x44, 0x9A,
+0x58, 0xEC, 0x12, 0xEC, 0x00, 0xD4, 0x00, 0x92,
+0x04, 0x22, 0x00, 0x92, 0xFF, 0x4A, 0x00, 0xD2,
+0xFA, 0x17, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xC9, 0xCA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xED,
+0x00, 0x18, 0xBE, 0xCA, 0x05, 0x97, 0x00, 0x6A,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0xFF, 0x6A, 0x04, 0x67, 0x4C, 0xEE,
+0x00, 0x18, 0xC3, 0xCA, 0x50, 0x67, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x00, 0x68,
+0x17, 0x10, 0xE0, 0xF3, 0x08, 0x70, 0x0A, 0x61,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A,
+0x80, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x00, 0x6A, 0x13, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
+0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3, 0x50, 0x9A,
+0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xE1, 0x2A,
+0x01, 0x6A, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0xF7, 0x1F, 0x6A,
+0x8C, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x10, 0xF0,
+0x23, 0x6C, 0x6E, 0xF3, 0x74, 0x9B, 0x6E, 0xF3,
+0x98, 0x9C, 0x6D, 0xE5, 0x91, 0xE5, 0x00, 0x6E,
+0xC0, 0xDB, 0x04, 0x4B, 0x8A, 0xEB, 0xFB, 0x61,
+0xE7, 0xF7, 0x1F, 0x6B, 0x4C, 0xEB, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF2, 0x4C, 0x9A, 0x10, 0x6C,
+0x4D, 0xEB, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3,
+0x54, 0x9A, 0x49, 0xE5, 0x60, 0xDA, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF3, 0x5C, 0x9A, 0xFF, 0x6B,
+0x55, 0xE5, 0x40, 0xA5, 0x6C, 0xEA, 0x8D, 0xEA,
+0x6C, 0xEA, 0x40, 0xC5, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x21, 0x6A, 0x11, 0xF1, 0x61, 0xA2,
+0x08, 0xD4, 0x30, 0xF0, 0x20, 0x69, 0x61, 0xC5,
+0x01, 0x4B, 0x11, 0xF1, 0x61, 0xC2, 0x10, 0xF0,
+0x23, 0x6B, 0x6E, 0xF3, 0x94, 0x9B, 0x08, 0x93,
+0x4E, 0xF2, 0x50, 0x99, 0x02, 0x6E, 0x91, 0xE3,
+0x05, 0x67, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
+0x8E, 0xF3, 0x80, 0x9B, 0x08, 0x93, 0xCE, 0xA0,
+0x4E, 0xF2, 0x50, 0x99, 0xA2, 0x40, 0x91, 0xE3,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x24, 0x67, 0x00, 0x18,
+0x2A, 0xCB, 0x00, 0x6B, 0x36, 0x22, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF3, 0x44, 0x9A, 0xFF, 0xF7,
+0x1F, 0x6E, 0xFF, 0x6F, 0x00, 0x9A, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF2, 0x48, 0x9A, 0x10, 0x6C,
+0x8B, 0xEC, 0x4C, 0xE8, 0x10, 0xF0, 0x23, 0x6A,
+0xA1, 0x40, 0x8E, 0xF3, 0x48, 0x9A, 0x65, 0x67,
+0xCC, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x23, 0x6A,
+0x8E, 0xF3, 0x4C, 0x9A, 0x60, 0xA2, 0xFA, 0x65,
+0xA2, 0x32, 0xEC, 0xEB, 0x8C, 0xEB, 0x42, 0x32,
+0x6D, 0xEA, 0xEC, 0xEA, 0x7F, 0x67, 0x40, 0xC3,
+0x87, 0xA9, 0x02, 0x4C, 0xCC, 0xEC, 0x00, 0x18,
+0x3F, 0xCB, 0x87, 0x40, 0x12, 0x4C, 0xB1, 0x67,
+0x00, 0x18, 0x56, 0xCB, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF3, 0x50, 0x9A, 0x01, 0x6B, 0x60, 0xC2,
+0x01, 0x6B, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x43, 0x67, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
+0x6C, 0x9A, 0xA4, 0x67, 0x04, 0x6C, 0x8D, 0xEB,
+0x30, 0xF0, 0x20, 0x68, 0x80, 0xF0, 0x6C, 0xDA,
+0xAF, 0xF4, 0x18, 0x48, 0xA0, 0xF0, 0x40, 0xA8,
+0x01, 0xF1, 0x00, 0x72, 0x07, 0x60, 0xA0, 0xF0,
+0x40, 0xA0, 0xA0, 0xF0, 0x81, 0xA0, 0xFF, 0x4A,
+0x8E, 0xEA, 0x0A, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0x00, 0xF2, 0x00, 0x6C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x11, 0x10,
+0x90, 0x34, 0x91, 0xE0, 0x10, 0x6E, 0x00, 0x18,
+0xC3, 0xCA, 0xA0, 0xF0, 0x41, 0xA0, 0x0A, 0x6B,
+0x01, 0x4A, 0xA0, 0xF0, 0x41, 0xC0, 0xA0, 0xF0,
+0x41, 0xA0, 0x6E, 0xEA, 0x02, 0x2A, 0xA0, 0xF0,
+0x41, 0xC0, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x21, 0x6B, 0x11, 0xF1,
+0x40, 0xA3, 0xFF, 0x6F, 0xE0, 0xF0, 0xC7, 0xA5,
+0x41, 0xC5, 0x43, 0xA5, 0x11, 0xF1, 0x60, 0xA3,
+0x03, 0x4A, 0xEC, 0xEA, 0x09, 0x10, 0xED, 0x42,
+0xFF, 0x68, 0x0C, 0xEF, 0xFD, 0xE5, 0x64, 0xC7,
+0xE6, 0xA7, 0x03, 0x4F, 0xE9, 0xE2, 0x0C, 0xEA,
+0xEF, 0x46, 0xE2, 0xEA, 0xF4, 0x61, 0x30, 0xF0,
+0x21, 0x6A, 0x11, 0xF1, 0x60, 0xA2, 0x01, 0x4B,
+0x11, 0xF1, 0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6B,
+0x6E, 0xF3, 0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x71, 0xE4, 0x40, 0xEA,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x24, 0x67, 0x00, 0x18, 0x2A, 0xCB, 0x00, 0x6B,
+0x2E, 0x22, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3,
+0x44, 0x9A, 0x0F, 0x6C, 0xFF, 0xF7, 0x1F, 0x6B,
+0x00, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2,
+0x48, 0x9A, 0x4C, 0xE8, 0xA1, 0x40, 0xA2, 0x32,
+0x42, 0x32, 0x8C, 0xEA, 0x10, 0xF0, 0x23, 0x6C,
+0x8E, 0xF3, 0x88, 0x9C, 0xC5, 0x67, 0x6C, 0xEE,
+0xC0, 0xCC, 0x10, 0xF0, 0x23, 0x6C, 0x8E, 0xF3,
+0x8C, 0x9C, 0x40, 0xC4, 0xE0, 0xF0, 0x87, 0xA1,
+0x6C, 0xEC, 0x00, 0x18, 0x3F, 0xCB, 0x87, 0x40,
+0x12, 0x4C, 0xB1, 0x67, 0x00, 0x18, 0xAD, 0xCB,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3, 0x50, 0x9A,
+0x01, 0x6B, 0x60, 0xC2, 0x01, 0x6B, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x43, 0x67, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x85, 0xF7,
+0x15, 0x4A, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xDB,
+0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6, 0x62, 0xA0,
+0xC1, 0xF6, 0x43, 0xA0, 0x6E, 0xEA, 0x39, 0x22,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3, 0x50, 0x9A,
+0x10, 0xF0, 0x23, 0x6C, 0xEE, 0xF2, 0x94, 0x9C,
+0x40, 0x9A, 0x8C, 0xEA, 0x2E, 0x2A, 0xE8, 0x6A,
+0x58, 0xEB, 0x87, 0x40, 0x3B, 0x4C, 0x12, 0xEB,
+0x71, 0xE4, 0x00, 0x18, 0xC6, 0xCB, 0x16, 0x22,
+0xC1, 0xF6, 0x42, 0xA0, 0x10, 0x6B, 0x01, 0x4A,
+0xC1, 0xF6, 0x42, 0xC0, 0xC1, 0xF6, 0x42, 0xA0,
+0x6E, 0xEA, 0x02, 0x2A, 0xC1, 0xF6, 0x42, 0xC0,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0xC1, 0xF6, 0x82, 0xA2, 0xC1, 0xF6, 0x63, 0xA2,
+0x8E, 0xEB, 0x0B, 0x23, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x04, 0x10, 0xC1, 0xF6, 0x84, 0xC2, 0xC1, 0xF6,
+0x65, 0xC2, 0x05, 0x97, 0x04, 0x90, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x10, 0xF0, 0x30, 0x68,
+0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6, 0x42, 0xA8,
+0xA4, 0x67, 0x01, 0xF7, 0x00, 0x72, 0x07, 0x60,
+0xC1, 0xF6, 0x42, 0xA0, 0xC1, 0xF6, 0x83, 0xA0,
+0xFF, 0x4A, 0x8E, 0xEA, 0x09, 0x2A, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0xFF, 0x6A,
+0x80, 0xA3, 0x8C, 0xEA, 0x40, 0xC3, 0xA7, 0x10,
+0x23, 0xA5, 0xC1, 0xF6, 0x45, 0xA0, 0xFF, 0x6B,
+0x04, 0x49, 0x6C, 0xE9, 0x1F, 0x2A, 0xE8, 0x6A,
+0x58, 0xEC, 0x30, 0xF0, 0x20, 0x6A, 0x67, 0x40,
+0x4E, 0xF2, 0x50, 0x9A, 0x3B, 0x4B, 0xD1, 0x67,
+0x12, 0xEC, 0x91, 0xE3, 0x40, 0xEA, 0xC1, 0xF6,
+0x43, 0xA0, 0xC1, 0xF6, 0x62, 0xA0, 0xC1, 0xF6,
+0x25, 0xC0, 0x4E, 0xEB, 0x74, 0x2B, 0x01, 0x4A,
+0xC1, 0xF6, 0x43, 0xC0, 0xC1, 0xF6, 0x43, 0xA0,
+0x10, 0x6B, 0x6E, 0xEA, 0x6C, 0x2A, 0xC1, 0xF6,
+0x43, 0xC0, 0x69, 0x10, 0x82, 0xA5, 0x37, 0x2C,
+0x51, 0xE1, 0xE3, 0x54, 0x34, 0x60, 0xC1, 0xF6,
+0x84, 0xA0, 0xE8, 0x6E, 0xD8, 0xEC, 0x12, 0xEC,
+0x11, 0xE4, 0x40, 0xF0, 0xC4, 0xA4, 0x2B, 0x2E,
+0x40, 0xF0, 0xC5, 0xA4, 0xFC, 0x4A, 0x6C, 0xEA,
+0xFF, 0x4E, 0x40, 0xF0, 0xC5, 0xC4, 0xC1, 0xF6,
+0x85, 0xA0, 0xE8, 0x6E, 0xFF, 0x4C, 0xC1, 0xF6,
+0x85, 0xC0, 0xC1, 0xF6, 0x84, 0xA0, 0xD8, 0xEC,
+0xD1, 0x67, 0x12, 0xEC, 0x91, 0xE0, 0x51, 0xE4,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x45, 0x4C, 0x40, 0xEA, 0xC1, 0xF6, 0x44, 0xA0,
+0xE8, 0x6B, 0x78, 0xEA, 0x12, 0xEA, 0x09, 0xE2,
+0x40, 0xF0, 0x65, 0xA2, 0x6D, 0xE1, 0x40, 0xF0,
+0x65, 0xC2, 0xC1, 0xF6, 0x45, 0xA0, 0x45, 0xE1,
+0xC1, 0xF6, 0x25, 0xC0, 0x30, 0x10, 0x10, 0xF0,
+0x30, 0x68, 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF6,
+0x63, 0xA0, 0xE8, 0x6A, 0x87, 0x40, 0x58, 0xEB,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0x3B, 0x4C, 0xD1, 0x67, 0x12, 0xEB, 0x71, 0xE4,
+0x40, 0xEA, 0xC1, 0xF6, 0x43, 0xA0, 0x10, 0x6B,
+0xC1, 0xF6, 0x25, 0xC0, 0x01, 0x4A, 0xC1, 0xF6,
+0x43, 0xC0, 0xC1, 0xF6, 0x43, 0xA0, 0x6E, 0xEA,
+0x02, 0x2A, 0xC1, 0xF6, 0x43, 0xC0, 0x10, 0xF0,
+0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF6,
+0x64, 0xA2, 0x10, 0x6C, 0x01, 0x4B, 0xC1, 0xF6,
+0x64, 0xC2, 0xC1, 0xF6, 0x64, 0xA2, 0x8E, 0xEB,
+0x02, 0x2B, 0xC1, 0xF6, 0x64, 0xC2, 0x10, 0xF0,
+0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF6,
+0x84, 0xA2, 0xE8, 0x6B, 0x78, 0xEC, 0x04, 0x6C,
+0x12, 0xEB, 0x4D, 0xE3, 0xC1, 0xF6, 0x45, 0xA2,
+0x20, 0xF1, 0x49, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0xFF, 0xF7, 0x1F, 0x68, 0x0C, 0xED, 0x08, 0xD4,
+0xA0, 0xCC, 0x08, 0x92, 0xCC, 0xE8, 0x22, 0x67,
+0x01, 0xCA, 0x04, 0x49, 0x0B, 0x27, 0x0A, 0x20,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A,
+0xFF, 0x6E, 0x91, 0x67, 0xA7, 0x67, 0x0C, 0xEE,
+0x40, 0xEA, 0x05, 0xE1, 0x08, 0x92, 0x07, 0x97,
+0x05, 0x90, 0x47, 0xE1, 0xFF, 0xF7, 0x1F, 0x6A,
+0x2C, 0xEA, 0x06, 0x91, 0x04, 0x63, 0x00, 0xEF,
+0xDF, 0x63, 0x41, 0x62, 0x40, 0xD1, 0x3F, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2, 0x4C, 0x9A,
+0xFF, 0x68, 0xCC, 0xE8, 0x24, 0x67, 0x43, 0xD5,
+0x04, 0x04, 0x00, 0x6D, 0xE8, 0x6E, 0x40, 0xEA,
+0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x50, 0xC3,
+0x1B, 0x6A, 0x52, 0xC3, 0x44, 0x40, 0x53, 0xC3,
+0x30, 0xF0, 0x20, 0x6A, 0x43, 0x95, 0x4E, 0xF2,
+0x50, 0x9A, 0xD0, 0x67, 0x05, 0xD1, 0x06, 0x04,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x04, 0x04, 0x40, 0xEA, 0x41, 0x97,
+0x40, 0x91, 0x3F, 0x90, 0x21, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x66, 0xF2, 0x11, 0x4A, 0x30, 0xF0,
+0x20, 0x68, 0x40, 0xDB, 0xAF, 0xF4, 0x18, 0x48,
+0xA0, 0xF0, 0x80, 0xA0, 0xA0, 0xF0, 0x41, 0xA0,
+0x8E, 0xEA, 0x3B, 0x22, 0x10, 0xF0, 0x23, 0x6A,
+0x8E, 0xF3, 0x50, 0x9A, 0x10, 0xF0, 0x23, 0x6B,
+0xEE, 0xF2, 0x74, 0x9B, 0x40, 0x9A, 0x6C, 0xEA,
+0x30, 0x2A, 0x90, 0x34, 0x91, 0xE0, 0x00, 0x18,
+0x6B, 0xCB, 0x0B, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A,
+0x04, 0x6C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x22, 0x10, 0xA0, 0xF0, 0x40, 0xA0, 0x01, 0x4A,
+0xA0, 0xF0, 0x40, 0xC0, 0xA0, 0xF0, 0x60, 0xA0,
+0xA0, 0xF0, 0x41, 0xA0, 0x6E, 0xEA, 0x0A, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x6C, 0x9A, 0x04, 0x6C, 0x8D, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF4, 0x18, 0x4A, 0xA0, 0xF0, 0x60, 0xA2,
+0x0A, 0x6C, 0x8E, 0xEB, 0x02, 0x2B, 0xA0, 0xF0,
+0x60, 0xC2, 0x00, 0x18, 0xE9, 0xCC, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD0, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF3, 0x74, 0x9A, 0x10, 0xF0,
+0x23, 0x6C, 0x6E, 0xF2, 0x1C, 0x9C, 0x40, 0x9B,
+0x00, 0xF4, 0x1D, 0x6C, 0x10, 0x6D, 0x0D, 0xEA,
+0x40, 0xDB, 0x06, 0x02, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF4, 0x54, 0x9A, 0x00, 0x6E,
+0x82, 0xF3, 0x08, 0x6F, 0x40, 0xEA, 0x07, 0x2A,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2, 0x88, 0x9B,
+0x60, 0x9C, 0x0D, 0xEB, 0x60, 0xDC, 0x09, 0x97,
+0x08, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x60, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xC8, 0xF2, 0x7D, 0xC2, 0x61, 0xA4,
+0xC8, 0xF2, 0x7E, 0xC2, 0x62, 0xA4, 0xC8, 0xF2,
+0x7F, 0xC2, 0x63, 0xA4, 0xE8, 0xF2, 0x60, 0xC2,
+0x64, 0xA4, 0xE8, 0xF2, 0x61, 0xC2, 0x65, 0xA4,
+0xE8, 0xF2, 0x62, 0xC2, 0x66, 0xA4, 0xE8, 0xF2,
+0x63, 0xC2, 0x20, 0xE8, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x23, 0x6A,
+0x8E, 0xF3, 0x58, 0x9A, 0x60, 0xA2, 0x03, 0x6A,
+0x6C, 0xEA, 0x10, 0x6B, 0x64, 0xEA, 0xFF, 0x6A,
+0x4C, 0xEB, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF3,
+0x5C, 0x9A, 0x04, 0xD3, 0x40, 0x9A, 0x05, 0xD2,
+0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x40, 0x9A,
+0x00, 0x9A, 0x05, 0x92, 0x0A, 0xEA, 0xA0, 0xF0,
+0x15, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A, 0x02, 0x6C,
+0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x10, 0xF0,
+0x30, 0x69, 0x00, 0xF0, 0x00, 0x49, 0xC1, 0xF7,
+0x46, 0xA9, 0x00, 0xF7, 0x00, 0x72, 0x07, 0x60,
+0xC1, 0xF7, 0x66, 0xA1, 0xC1, 0xF7, 0x87, 0xA1,
+0xAF, 0x43, 0x8E, 0xED, 0x0A, 0x2D, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0xFF, 0x6C,
+0x01, 0x4C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x91, 0x10, 0x10, 0xF0, 0x23, 0x6D, 0xAE, 0xF3,
+0xA4, 0x9D, 0x7F, 0x6E, 0xB5, 0xE0, 0xE0, 0xA5,
+0xCC, 0xEF, 0x44, 0x2F, 0x00, 0xF4, 0x00, 0x72,
+0x80, 0xF0, 0x04, 0x60, 0xAC, 0x43, 0x8E, 0xED,
+0x80, 0xF0, 0x00, 0x25, 0x00, 0xF5, 0x01, 0x72,
+0x7D, 0x60, 0x00, 0xF6, 0x02, 0x72, 0x7A, 0x60,
+0x00, 0xF7, 0x03, 0x72, 0x77, 0x60, 0x00, 0xF5,
+0x00, 0x72, 0x74, 0x60, 0xFD, 0x4B, 0x6E, 0xEC,
+0x71, 0x24, 0x10, 0xF0, 0x30, 0x69, 0x00, 0xF0,
+0x00, 0x49, 0xC1, 0xF7, 0x46, 0xA9, 0x00, 0xF6,
+0x01, 0x72, 0x68, 0x60, 0x00, 0xF7, 0x02, 0x72,
+0x65, 0x60, 0x00, 0xF6, 0x00, 0x72, 0x62, 0x60,
+0xC1, 0xF7, 0x66, 0xA1, 0xC1, 0xF7, 0x87, 0xA1,
+0xFE, 0x4B, 0x8E, 0xEB, 0x5B, 0x23, 0x00, 0xF7,
+0x01, 0x72, 0x58, 0x60, 0x10, 0xF0, 0x23, 0x6A,
+0xAE, 0xF3, 0x48, 0x9A, 0x10, 0xF0, 0x23, 0x6D,
+0x76, 0x4C, 0xAE, 0xF3, 0xA4, 0x9D, 0x49, 0xE0,
+0x94, 0x34, 0x60, 0xAA, 0x91, 0xE1, 0x30, 0xF0,
+0x20, 0x6A, 0x4E, 0xF2, 0x50, 0x9A, 0x06, 0x4C,
+0xB5, 0xE0, 0x12, 0x10, 0x40, 0xA5, 0x4C, 0xEE,
+0x01, 0x76, 0x1E, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0xAE, 0xF3, 0x48, 0x9A, 0x76, 0x4C, 0x94, 0x34,
+0x49, 0xE0, 0x60, 0xAA, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0x91, 0xE1, 0x06, 0x4C,
+0xFF, 0x6E, 0x6C, 0xEE, 0x40, 0xEA, 0xC1, 0xF7,
+0x47, 0xA1, 0x08, 0x6B, 0x01, 0x4A, 0xC1, 0xF7,
+0x47, 0xC1, 0xC1, 0xF7, 0x47, 0xA1, 0x6E, 0xEA,
+0x0E, 0x2A, 0xC1, 0xF7, 0x47, 0xC1, 0x0B, 0x10,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2, 0x98, 0x9C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0xAE, 0xF3, 0x4C, 0x9A, 0x04, 0x93,
+0x40, 0x9A, 0x0E, 0xEA, 0x61, 0xE0, 0x05, 0x2A,
+0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x50, 0x9A,
+0x00, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3,
+0x40, 0x9A, 0x00, 0xDA, 0x05, 0x92, 0x4A, 0xE8,
+0x5F, 0xF7, 0x15, 0x61, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFE, 0x63, 0x03, 0xD1, 0x02, 0xD0, 0x10, 0xF0,
+0x23, 0x6A, 0xAE, 0xF3, 0x54, 0x9A, 0x0F, 0x6B,
+0x40, 0xA2, 0x4C, 0xEB, 0x0A, 0x23, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
+0x8C, 0x9A, 0x02, 0x6D, 0xAD, 0xEC, 0x80, 0xF0,
+0x8C, 0xDA, 0x10, 0xF0, 0x30, 0x6A, 0x40, 0xF0,
+0x40, 0xA2, 0xFF, 0x4A, 0x00, 0xD2, 0xE2, 0x10,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0x40, 0xF0, 0x80, 0xAA, 0x00, 0xF7, 0x00, 0x74,
+0x05, 0x60, 0x40, 0xF0, 0x01, 0xA2, 0x00, 0x94,
+0x8A, 0xE8, 0x0A, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0xFF, 0x6C, 0x01, 0x4C,
+0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB, 0xCC, 0x10,
+0x30, 0xF0, 0x21, 0x6D, 0x11, 0xF1, 0x82, 0xA5,
+0xC3, 0x67, 0xC7, 0xEC, 0x86, 0x67, 0x01, 0x6E,
+0xCC, 0xEC, 0xA0, 0xF0, 0x08, 0x24, 0x0C, 0x35,
+0x04, 0x4D, 0xB5, 0xE2, 0x00, 0x6A, 0x30, 0xF0,
+0x21, 0x6E, 0x11, 0xF1, 0xE2, 0xA6, 0xFF, 0x6C,
+0x1F, 0xF7, 0x00, 0x69, 0x8C, 0xEF, 0x74, 0x4F,
+0xE8, 0x37, 0xFD, 0xE2, 0x2C, 0xEF, 0x02, 0xF0,
+0x00, 0x77, 0x08, 0x60, 0x11, 0xF1, 0xE2, 0xA6,
+0x8C, 0xEF, 0x74, 0x4F, 0xE8, 0x37, 0xFD, 0xE2,
+0x2C, 0xEF, 0x0F, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
+0x11, 0xF1, 0x22, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
+0x23, 0x6E, 0x8C, 0xE9, 0x74, 0x49, 0x28, 0x31,
+0xE2, 0x67, 0x25, 0xE2, 0x2E, 0xF2, 0xC8, 0x9E,
+0x0B, 0x10, 0x11, 0xF1, 0x22, 0xA6, 0x10, 0xF0,
+0x23, 0x6E, 0x2E, 0xF2, 0xCC, 0x9E, 0x8C, 0xE9,
+0x74, 0x49, 0x28, 0x31, 0xE2, 0x67, 0x25, 0xE2,
+0xD9, 0xE1, 0xC0, 0xA6, 0x0C, 0x31, 0xFD, 0xE1,
+0xCC, 0xEC, 0x10, 0xF0, 0x30, 0x6E, 0x00, 0xF0,
+0x00, 0x4E, 0xD9, 0xE7, 0x80, 0xC6, 0x30, 0xF0,
+0x21, 0x6E, 0x11, 0xF1, 0xE2, 0xA6, 0xFF, 0x6C,
+0x1F, 0xF7, 0x00, 0x69, 0x8C, 0xEF, 0x7C, 0x4F,
+0xE8, 0x37, 0xFD, 0xE2, 0x2C, 0xEF, 0x02, 0xF0,
+0x00, 0x77, 0x08, 0x60, 0x11, 0xF1, 0xE2, 0xA6,
+0x8C, 0xEF, 0x7C, 0x4F, 0xE8, 0x37, 0xFD, 0xE2,
+0x2C, 0xEF, 0x0E, 0x2F, 0x30, 0xF0, 0x21, 0x6C,
+0x11, 0xF1, 0xC2, 0xA4, 0xFF, 0x6C, 0x10, 0xF0,
+0x23, 0x6F, 0x8C, 0xEE, 0x7C, 0x4E, 0xC8, 0x36,
+0xD9, 0xE2, 0x2E, 0xF2, 0xE8, 0x9F, 0x0A, 0x10,
+0x11, 0xF1, 0xC2, 0xA6, 0x10, 0xF0, 0x23, 0x6F,
+0x2E, 0xF2, 0xEC, 0x9F, 0x8C, 0xEE, 0x7C, 0x4E,
+0xC8, 0x36, 0xD9, 0xE2, 0xF9, 0xE6, 0xC0, 0xA6,
+0x01, 0x4A, 0x04, 0x72, 0xCC, 0xEC, 0x80, 0xC5,
+0x01, 0x4D, 0x8D, 0x61, 0x30, 0xF0, 0x21, 0x6A,
+0x11, 0xF1, 0xA2, 0xA2, 0x01, 0x6C, 0xC4, 0x67,
+0xC4, 0xED, 0xCF, 0xED, 0x11, 0xF1, 0xC2, 0xA2,
+0xAC, 0xEB, 0xFF, 0x6D, 0x84, 0xEE, 0x10, 0xF0,
+0x23, 0x6E, 0xAE, 0xF3, 0xD4, 0x9E, 0xAC, 0xEC,
+0x80, 0xC6, 0x11, 0xF1, 0x82, 0xA2, 0xAC, 0xEC,
+0x01, 0x4C, 0xAC, 0xEC, 0x11, 0xF1, 0x82, 0xC2,
+0x11, 0xF1, 0xA2, 0xA2, 0x03, 0x6C, 0xAC, 0xEC,
+0x11, 0xF1, 0x82, 0xC2, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0, 0x81, 0xA2,
+0x08, 0x6D, 0x01, 0x4C, 0x40, 0xF0, 0x81, 0xC2,
+0x40, 0xF0, 0x81, 0xA2, 0xAE, 0xEC, 0x1A, 0x2C,
+0x40, 0xF0, 0x81, 0xC2, 0x17, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF2, 0x88, 0x9A, 0x02, 0x6E,
+0x40, 0x9C, 0xCD, 0xEA, 0x40, 0xDC, 0x10, 0xF0,
+0x23, 0x6A, 0xAE, 0xF3, 0x58, 0x9A, 0x60, 0xC2,
+0x11, 0xF1, 0x62, 0xA5, 0xFF, 0x6A, 0x4C, 0xEB,
+0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x5C, 0x9A,
+0x60, 0xC2, 0x02, 0x10, 0x1F, 0xF7, 0x1C, 0x2B,
+0x03, 0x91, 0x02, 0x90, 0x02, 0x63, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF3, 0x40, 0x9A, 0xFF, 0x68,
+0x60, 0xA2, 0x6C, 0xE8, 0x1D, 0x20, 0x00, 0x6B,
+0x60, 0xC2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x01, 0x6C, 0x40, 0xEA, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF3, 0x44, 0x9A, 0x20, 0x6B,
+0x20, 0x70, 0x60, 0xC2, 0x0D, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0,
+0x23, 0x6C, 0x80, 0xF0, 0x6C, 0x9A, 0xAE, 0xF2,
+0x98, 0x9C, 0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x1C, 0x96, 0x45,
+0x00, 0x18, 0xC3, 0xD0, 0x05, 0x6C, 0x01, 0x6D,
+0x00, 0x18, 0x76, 0xC9, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0x00, 0x65, 0x00, 0x65, 0x00, 0x65,
+0x00, 0x65, 0xFF, 0x17, 0xDE, 0x63, 0x43, 0x62,
+0x42, 0xD1, 0x41, 0xD0, 0x01, 0x6A, 0x7D, 0x67,
+0x4B, 0xEA, 0x58, 0xC3, 0x01, 0x6A, 0x5A, 0xC3,
+0x08, 0x6A, 0x5B, 0xC3, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2,
+0x76, 0x4B, 0x74, 0x33, 0x49, 0xE3, 0x66, 0xA2,
+0x7F, 0x6A, 0x6C, 0xEA, 0x01, 0x72, 0x7E, 0x30,
+0x80, 0xF0, 0x1C, 0x61, 0x48, 0xA4, 0xBD, 0x67,
+0x5C, 0xC5, 0x41, 0xA4, 0x5D, 0xC5, 0x42, 0xA4,
+0x5E, 0xC5, 0x46, 0xA4, 0x20, 0xF0, 0x40, 0xC5,
+0x43, 0xA4, 0x5F, 0xC5, 0x47, 0xA4, 0x20, 0xF0,
+0x41, 0xC5, 0x5C, 0xA5, 0x80, 0xF0, 0x04, 0x2A,
+0x7D, 0x67, 0x5F, 0xA3, 0x7E, 0xA3, 0x40, 0x32,
+0x6D, 0xEA, 0x03, 0x72, 0x05, 0x60, 0x08, 0x72,
+0x21, 0x60, 0x02, 0x72, 0x37, 0x60, 0x78, 0x10,
+0x06, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x06, 0x04, 0x40, 0xEA, 0x9D, 0x67,
+0x20, 0xF0, 0xE1, 0xA4, 0x20, 0xF0, 0x40, 0xA4,
+0xFF, 0xF7, 0x1F, 0x6B, 0xE0, 0x37, 0x5D, 0xE7,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x50, 0x9A,
+0x30, 0xF0, 0x20, 0x6D, 0x05, 0x6C, 0xEC, 0xF6,
+0x06, 0x4D, 0x00, 0xF2, 0x00, 0x6E, 0x6C, 0xEF,
+0x40, 0xEA, 0x75, 0x10, 0xBD, 0x67, 0x30, 0xF0,
+0x20, 0x6B, 0x10, 0x6A, 0x5B, 0xC5, 0x30, 0xF0,
+0x20, 0x69, 0x4E, 0xF2, 0x50, 0x9B, 0x09, 0xF6,
+0x04, 0x49, 0x09, 0x04, 0xB1, 0x67, 0x04, 0x6E,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6C, 0x4E, 0xF2,
+0x50, 0x9C, 0xA4, 0x41, 0x0A, 0x04, 0x04, 0x6E,
+0x40, 0xEA, 0x42, 0x10, 0x06, 0x20, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x06, 0x04,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0xEB, 0xF6, 0x74, 0xA0, 0x01, 0x6A,
+0x6C, 0xEA, 0x27, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x50, 0x9A, 0x40, 0xEA, 0xEB, 0xF6,
+0x60, 0xA0, 0x04, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B,
+0x6C, 0xEA, 0x18, 0x22, 0x10, 0xF0, 0x23, 0x6A,
+0xCE, 0xF3, 0x48, 0x9A, 0xEB, 0xF6, 0xCC, 0x98,
+0x00, 0x6B, 0x40, 0x9A, 0x10, 0xF0, 0x23, 0x6A,
+0xCE, 0xF3, 0x4C, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0x8B, 0xF2, 0x09, 0x4C, 0x40, 0x9A, 0xA3, 0x67,
+0x01, 0x6F, 0x5B, 0xE6, 0x04, 0xD3, 0x00, 0x18,
+0x87, 0xD5, 0x29, 0x10, 0x00, 0x18, 0xA2, 0xD6,
+0x26, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
+0x54, 0x9A, 0x40, 0xEA, 0xEB, 0xF6, 0xB2, 0xA8,
+0x00, 0x6C, 0x00, 0x18, 0x4F, 0xD6, 0x1B, 0x10,
+0x1A, 0x20, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x13, 0x10, 0x14, 0x2A, 0x69, 0xA4,
+0xBD, 0x67, 0x7C, 0xC5, 0x68, 0xA4, 0x5E, 0xC5,
+0x5F, 0xC5, 0x7D, 0xC5, 0x46, 0xA4, 0x20, 0xF0,
+0x40, 0xC5, 0x67, 0xA4, 0x08, 0x20, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x5C, 0x9A, 0x20, 0xF0,
+0x61, 0xC5, 0x06, 0x04, 0x40, 0xEA, 0x43, 0x97,
+0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x4C, 0xEC,
+0x68, 0x44, 0xFA, 0x4B, 0x4C, 0xEB, 0x04, 0x5B,
+0x03, 0x60, 0x80, 0x18, 0xE6, 0x07, 0x42, 0x10,
+0xFE, 0x4C, 0x4C, 0xEC, 0x0C, 0x5C, 0x32, 0x60,
+0x10, 0xF0, 0x23, 0x6A, 0x88, 0x34, 0x2E, 0xF1,
+0x18, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x48, 0x9A,
+0x08, 0x10, 0x85, 0x67, 0x00, 0x18, 0x65, 0xD6,
+0x2D, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5,
+0x44, 0x9A, 0x85, 0x67, 0x40, 0xEA, 0x26, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x54, 0x9A,
+0x40, 0xEA, 0x20, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF5, 0x58, 0x9A, 0xF2, 0x17, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF5, 0x5C, 0x9A, 0xED, 0x17,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF5, 0x40, 0x9A,
+0xE8, 0x17, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF5,
+0x54, 0x9A, 0xE3, 0x17, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0xAE, 0xF2, 0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0xFF, 0x6A, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0x10, 0xF0, 0x23, 0x6B,
+0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x87, 0xF2, 0x05, 0x4A, 0x07, 0xD4, 0x40, 0xDB,
+0x60, 0xA4, 0x01, 0xA4, 0x02, 0x6A, 0x6C, 0xEA,
+0x24, 0x67, 0x06, 0xD0, 0x1F, 0x22, 0x42, 0xA4,
+0x06, 0xD2, 0x1C, 0x10, 0x07, 0x93, 0x01, 0x6D,
+0x90, 0x67, 0x40, 0xA3, 0x4C, 0xED, 0x00, 0x18,
+0xFE, 0xC7, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x58, 0x9A, 0x90, 0x67, 0x40, 0xEA, 0x05, 0x2A,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x54, 0x9A,
+0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5,
+0x50, 0x9A, 0x90, 0x67, 0x40, 0xEA, 0x01, 0x48,
+0xFF, 0x6A, 0x4C, 0xE8, 0x06, 0x92, 0x03, 0xEA,
+0xE1, 0x60, 0x63, 0xA1, 0x07, 0x6A, 0x01, 0x6C,
+0x6C, 0xEA, 0x60, 0xA1, 0x8C, 0xEB, 0x1E, 0x2B,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x69, 0xF3, 0xC8, 0xA3, 0x84, 0xEA, 0x1F, 0x6F,
+0xCA, 0x35, 0x8F, 0xEC, 0xEC, 0xED, 0x8C, 0xED,
+0x7D, 0x6C, 0x8B, 0xEC, 0xA8, 0x35, 0xCC, 0xEC,
+0xAD, 0xEC, 0x69, 0xF3, 0x88, 0xC3, 0x30, 0xF0,
+0x20, 0x6C, 0x4F, 0xF6, 0x9C, 0xA4, 0x8E, 0xEA,
+0x20, 0x2A, 0x01, 0x6A, 0x4B, 0xEA, 0x69, 0xF3,
+0x49, 0xC3, 0x1B, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x69, 0xF3, 0xC8, 0xA3,
+0x1F, 0x6F, 0x84, 0xEA, 0xCA, 0x35, 0xEC, 0xED,
+0xAD, 0xEC, 0xEC, 0xEC, 0x88, 0x35, 0x7D, 0x6C,
+0x8B, 0xEC, 0xCC, 0xEC, 0xAD, 0xEC, 0x69, 0xF3,
+0x88, 0xC3, 0x30, 0xF0, 0x20, 0x6C, 0x4F, 0xF6,
+0x9C, 0xA4, 0x8E, 0xEA, 0x02, 0x2A, 0x69, 0xF3,
+0x89, 0xC3, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B,
+0x8C, 0xEB, 0x1C, 0x23, 0x03, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0x69, 0xF3, 0x68, 0xC2, 0x00, 0x18,
+0xCA, 0xD4, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0x04, 0x93, 0x4F, 0xF5, 0x5C, 0x9A, 0x6E, 0xEA,
+0x03, 0x22, 0x04, 0x94, 0x00, 0x18, 0xEB, 0xD4,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x69, 0xF3, 0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB,
+0x69, 0xF3, 0x68, 0xC2, 0x0B, 0x97, 0x0A, 0x91,
+0x09, 0x90, 0x06, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0xFF, 0x6A,
+0x4C, 0xEC, 0x68, 0x44, 0xC8, 0x4B, 0x4C, 0xEB,
+0x20, 0x5B, 0x05, 0x67, 0x1B, 0x61, 0x03, 0x24,
+0x01, 0x74, 0x05, 0x60, 0x08, 0x10, 0x85, 0x67,
+0x00, 0x18, 0xDC, 0xCC, 0x13, 0x10, 0x85, 0x67,
+0x00, 0x18, 0xA1, 0xCE, 0x0F, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0x01, 0x6D,
+0x40, 0x9B, 0xAD, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x0E, 0xF2, 0x40, 0x9A, 0x80, 0xC2,
+0x0E, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x40, 0xC0,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x27, 0xF4, 0x01, 0x4A, 0x10, 0xF0,
+0x30, 0x68, 0x40, 0xDB, 0x00, 0xF0, 0x00, 0x48,
+0x40, 0xF0, 0x40, 0xA0, 0x40, 0xF0, 0x61, 0xA0,
+0x4E, 0xEB, 0x29, 0x23, 0x4C, 0x32, 0x0D, 0xE2,
+0x80, 0xA3, 0xA1, 0x42, 0xB5, 0xE0, 0x00, 0x18,
+0xF2, 0xCE, 0x40, 0xF0, 0x40, 0xA0, 0x01, 0x4A,
+0x40, 0xF0, 0x40, 0xC0, 0x40, 0xF0, 0x60, 0xA0,
+0x40, 0xF0, 0x41, 0xA0, 0x6E, 0xEA, 0x0A, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x6C, 0x9A, 0x02, 0x6C, 0x8D, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0, 0x60, 0xA2,
+0x08, 0x6C, 0x8E, 0xEB, 0x02, 0x2B, 0x40, 0xF0,
+0x60, 0xC2, 0x00, 0x18, 0x56, 0xCD, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x30, 0x68, 0x00, 0xF0, 0x00, 0x48, 0xC1, 0xF7,
+0x66, 0xA0, 0x7F, 0x6C, 0xA7, 0x43, 0x6F, 0x4D,
+0xB4, 0x35, 0x15, 0xE5, 0x46, 0xA5, 0x8C, 0xEA,
+0x20, 0x2A, 0x74, 0x33, 0x09, 0xE3, 0xC1, 0xF6,
+0x8E, 0xA2, 0xA2, 0x67, 0xC1, 0xF6, 0x0F, 0x4D,
+0x00, 0x18, 0xF2, 0xCE, 0xC1, 0xF7, 0x46, 0xA0,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x90, 0x9C,
+0x54, 0x33, 0x0D, 0xE3, 0xC1, 0xF6, 0xAC, 0xA3,
+0x76, 0x4A, 0x54, 0x32, 0xA0, 0xC4, 0xC1, 0xF6,
+0x8D, 0xA3, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF3,
+0x74, 0x9B, 0x41, 0xE0, 0x80, 0xC3, 0x86, 0x40,
+0x49, 0x10, 0x01, 0x72, 0x49, 0x61, 0x74, 0x33,
+0x0D, 0xE3, 0xC1, 0xF6, 0x47, 0xA3, 0xFF, 0x72,
+0x0C, 0x61, 0xC1, 0xF6, 0x88, 0xA3, 0x06, 0x4D,
+0x00, 0x18, 0x78, 0xCE, 0xC1, 0xF7, 0x66, 0xA0,
+0x74, 0x33, 0x01, 0xE3, 0xC1, 0xF6, 0x4E, 0xC0,
+0x04, 0x10, 0x01, 0x6A, 0x4B, 0xEA, 0xC1, 0xF6,
+0x4E, 0xC3, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0xC1, 0xF7, 0x66, 0xA2, 0x10, 0xF0,
+0x23, 0x6D, 0xCE, 0xF3, 0xB0, 0x9D, 0x74, 0x34,
+0x51, 0xE4, 0xC1, 0xF6, 0xCC, 0xA4, 0x76, 0x4B,
+0x74, 0x33, 0xC0, 0xC5, 0xC1, 0xF6, 0xAD, 0xA4,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x94, 0x9C,
+0x49, 0xE3, 0xA0, 0xC4, 0x46, 0x82, 0x00, 0x52,
+0x0B, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF2,
+0x90, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0xC1, 0xF7, 0x66, 0xA2, 0x76, 0x4B, 0x74, 0x33,
+0x69, 0xE2, 0x86, 0x42, 0x00, 0x18, 0x0F, 0xCE,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xA7, 0xF5, 0x09, 0x4A, 0x10, 0xF0,
+0x30, 0x68, 0x40, 0xDB, 0x00, 0xF0, 0x00, 0x48,
+0xC1, 0xF7, 0x66, 0xA0, 0xC1, 0xF7, 0x47, 0xA0,
+0x6E, 0xEA, 0x4A, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF4, 0x18, 0x4A, 0xA0, 0xF0, 0x60, 0xAA,
+0x01, 0xF0, 0x00, 0x73, 0x10, 0x60, 0xA0, 0xF0,
+0x81, 0xA2, 0xA0, 0xF0, 0x40, 0xA2, 0xAE, 0x42,
+0x8E, 0xED, 0x09, 0x25, 0x01, 0xF1, 0x01, 0x73,
+0x06, 0x60, 0x01, 0xF1, 0x00, 0x73, 0x03, 0x60,
+0xFF, 0x4A, 0x4E, 0xEC, 0x0D, 0x2C, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x80, 0xF0,
+0x4C, 0x9B, 0x04, 0x6C, 0x8D, 0xEA, 0x02, 0x6C,
+0x8D, 0xEA, 0x80, 0xF0, 0x4C, 0xDB, 0x24, 0x10,
+0x00, 0x18, 0x2A, 0xCF, 0xC1, 0xF7, 0x46, 0xA0,
+0x01, 0x4A, 0xC1, 0xF7, 0x46, 0xC0, 0xC1, 0xF7,
+0x66, 0xA0, 0xC1, 0xF7, 0x47, 0xA0, 0x6E, 0xEA,
+0x0A, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x80, 0xF0, 0x6C, 0x9A, 0x02, 0x6C,
+0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x10, 0xF0,
+0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7,
+0x66, 0xA2, 0x08, 0x6C, 0x8E, 0xEB, 0x02, 0x2B,
+0xC1, 0xF7, 0x66, 0xC2, 0x00, 0x18, 0xE9, 0xCC,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0xFF, 0xF7, 0x1F, 0x6A, 0x10, 0xF0, 0x23, 0x6B,
+0x8C, 0xEA, 0xCE, 0xF3, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6C, 0xCE, 0xF3, 0x9C, 0x9C, 0xCC, 0xEB,
+0x40, 0xF6, 0xA0, 0x35, 0x8D, 0xEB, 0x1F, 0xF7,
+0x00, 0x6C, 0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74,
+0xAD, 0xEB, 0x01, 0x60, 0x05, 0x2C, 0x10, 0xF0,
+0x23, 0x6C, 0x2E, 0xF2, 0x88, 0x9C, 0x04, 0x10,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2, 0x8C, 0x9C,
+0x89, 0xE2, 0x60, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x1F, 0xF7,
+0x00, 0x6C, 0x4C, 0xEC, 0xFF, 0x6B, 0x02, 0xF0,
+0x00, 0x74, 0xAC, 0xEB, 0x01, 0x60, 0x05, 0x2C,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2, 0x88, 0x9C,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2,
+0x8C, 0x9C, 0x91, 0xE2, 0x00, 0x6D, 0xA0, 0xDC,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x98, 0x9C,
+0xD4, 0x36, 0x40, 0xF6, 0x60, 0x33, 0x8C, 0xEE,
+0x6D, 0xEE, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF3,
+0x7C, 0x9B, 0x6D, 0xEE, 0x1F, 0xF7, 0x00, 0x6B,
+0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73, 0x01, 0x60,
+0x05, 0x2B, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2,
+0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF2, 0x6C, 0x9B, 0x69, 0xE2, 0xC0, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0x0F, 0xF5, 0x00, 0x6B,
+0x78, 0xEE, 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x98, 0x9C,
+0x40, 0xF6, 0xA0, 0x35, 0x12, 0xEB, 0x8C, 0xEB,
+0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF3, 0x9C, 0x9C,
+0xAD, 0xEB, 0x8D, 0xEB, 0x1F, 0xF7, 0x00, 0x6C,
+0x4C, 0xEC, 0x02, 0xF0, 0x00, 0x74, 0x01, 0x60,
+0x05, 0x2C, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF2,
+0x88, 0x9C, 0x04, 0x10, 0x10, 0xF0, 0x23, 0x6C,
+0x2E, 0xF2, 0x8C, 0x9C, 0x89, 0xE2, 0x60, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
+0xEE, 0xF3, 0x4C, 0x9A, 0x40, 0x9A, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x4C, 0x9B, 0x8D, 0xEA, 0x4C, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x0E, 0xF4, 0x60, 0x9B, 0x80, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4, 0x64, 0x9B,
+0x40, 0xDB, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF4,
+0x68, 0x9A, 0xC0, 0x6A, 0xFF, 0x68, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF4, 0x4C, 0x9A,
+0x01, 0x6B, 0x05, 0x97, 0x40, 0xA2, 0x0C, 0xEA,
+0x5E, 0x32, 0x6E, 0xEA, 0x6C, 0xEA, 0x0C, 0xEA,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0xE7, 0xF7, 0x11, 0x4A, 0x40, 0xDB,
+0x00, 0x68, 0x28, 0x10, 0x82, 0xF3, 0x08, 0x70,
+0x11, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x68, 0x9A, 0x02, 0xF0, 0x00, 0x6C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF4, 0x50, 0x9A, 0x03, 0x6B, 0x6B, 0xEB,
+0x60, 0xC2, 0x18, 0x10, 0xFF, 0xF7, 0x1F, 0x6A,
+0x01, 0x48, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x14, 0x6C, 0x40, 0xEA,
+0x33, 0x58, 0x08, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF4, 0x54, 0x9A, 0x60, 0xA2, 0x08, 0x6A,
+0x6C, 0xEA, 0x04, 0x2A, 0x00, 0x18, 0xEB, 0xCF,
+0x01, 0x72, 0xD4, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF4, 0x50, 0x9A, 0x02, 0x6B, 0x6B, 0xEB,
+0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF1,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0xE7, 0xF7,
+0x12, 0x4A, 0x40, 0xDB, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0x05, 0x5C, 0x5E, 0x60,
+0x10, 0xF0, 0x23, 0x6A, 0x88, 0x34, 0x6E, 0xF1,
+0x08, 0x4A, 0x89, 0xE2, 0x40, 0x9A, 0x00, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x48, 0x9B,
+0xAD, 0xEA, 0xC0, 0xF1, 0x48, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0xCE, 0xF3, 0x64, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4, 0x78, 0x9B,
+0x32, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x41, 0x9B, 0xAD, 0xEA, 0x41, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4, 0x7C, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4,
+0x60, 0x9B, 0x21, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x42, 0x9B, 0xAD, 0xEA,
+0x42, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4,
+0x64, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF4, 0x68, 0x9B, 0x10, 0x10, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x43, 0x9B,
+0xAD, 0xEA, 0x43, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF4, 0x6C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x2E, 0xF4, 0x70, 0x9B, 0x40, 0xDB,
+0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x44, 0x9B, 0xAD, 0xEA, 0x44, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x74, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4,
+0x78, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x05, 0x5C, 0x63, 0x60, 0x10, 0xF0, 0x23, 0x6A,
+0x88, 0x34, 0x6E, 0xF1, 0x1C, 0x4A, 0x89, 0xE2,
+0x40, 0x9A, 0x00, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x88, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA,
+0xC0, 0xF1, 0x48, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x0E, 0xF4, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF3, 0x44, 0x9A, 0x35, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x81, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x41, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x60, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF4,
+0x5C, 0x9A, 0x23, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x82, 0x9B, 0xAF, 0xEA,
+0x8C, 0xEA, 0x42, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF4, 0x68, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF4, 0x44, 0x9A, 0x11, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x83, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x43, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
+0x4C, 0x9A, 0xA0, 0xDA, 0x20, 0xE8, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B, 0x84, 0x9B,
+0xAF, 0xEA, 0x8C, 0xEA, 0x44, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x2E, 0xF4, 0x78, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4, 0x54, 0x9A,
+0xA0, 0xDA, 0x20, 0xE8, 0x01, 0x74, 0x15, 0x60,
+0x03, 0x24, 0x02, 0x74, 0x23, 0x60, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x4E, 0x9B, 0xAD, 0xEA, 0x4E, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x2E, 0xF4, 0x7C, 0x9B, 0xA0, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x60, 0x9B,
+0x21, 0x10, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0x4F, 0x9B, 0xAD, 0xEA, 0x4F, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x64, 0x9B,
+0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4,
+0x68, 0x9B, 0x10, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x50, 0x9B, 0xAD, 0xEA,
+0x50, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4,
+0x6C, 0x9B, 0xA0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x4E, 0xF4, 0x70, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
+0x01, 0x74, 0x16, 0x60, 0x03, 0x24, 0x02, 0x74,
+0x25, 0x60, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x8E, 0x9B, 0xAF, 0xEA,
+0x8C, 0xEA, 0x4E, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x4E, 0xF4, 0x60, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF4, 0x5C, 0x9A, 0x23, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x8F, 0x9B, 0xAF, 0xEA, 0x8C, 0xEA, 0x4F, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x68, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4,
+0x44, 0x9A, 0x11, 0x10, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x90, 0x9B, 0xAF, 0xEA,
+0x8C, 0xEA, 0x50, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x4E, 0xF4, 0x70, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x4E, 0xF4, 0x4C, 0x9A, 0xA0, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6C,
+0x0E, 0xF4, 0x98, 0x9C, 0x00, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xC0, 0xF1, 0x48, 0xDB, 0xC0, 0xF1,
+0x08, 0x4B, 0x41, 0xDB, 0x42, 0xDB, 0x43, 0xDB,
+0x44, 0xDB, 0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
+0x2E, 0xF4, 0x80, 0x9C, 0x40, 0xDC, 0x10, 0xF0,
+0x23, 0x6C, 0x2E, 0xF4, 0x88, 0x9C, 0x40, 0xDC,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF4, 0x90, 0x9C,
+0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF4,
+0x98, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
+0x4E, 0xF4, 0x80, 0x9C, 0x4E, 0xDB, 0x4F, 0xDB,
+0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C, 0x4E, 0xF4,
+0x88, 0x9C, 0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
+0x4E, 0xF4, 0x90, 0x9C, 0x50, 0xDB, 0x40, 0xDC,
+0x4C, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4,
+0x64, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF3, 0x64, 0x9B,
+0x01, 0x6A, 0x4B, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x0E, 0xF4, 0x7C, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x64, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4,
+0x6C, 0x9B, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF4, 0x7C, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF4, 0x64, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4,
+0x60, 0x9B, 0x40, 0xDB, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x23, 0x6A, 0xFF, 0xF7, 0x1F, 0x69,
+0x8C, 0xE9, 0x4E, 0xF4, 0x9C, 0x9A, 0xFF, 0x6B,
+0x8E, 0x6A, 0xA0, 0xA4, 0x00, 0x68, 0x6C, 0xED,
+0xAC, 0xEA, 0x40, 0xC4, 0x71, 0x6A, 0xAD, 0xEA,
+0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF4, 0x80, 0x9A, 0x01, 0x6D, 0x40, 0xA4,
+0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4,
+0x19, 0x10, 0x64, 0x70, 0x0D, 0x61, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0,
+0x23, 0x6C, 0xEE, 0xF2, 0x94, 0x9C, 0x40, 0x9B,
+0x8D, 0xEA, 0x40, 0xDB, 0x00, 0x6A, 0x1C, 0x10,
+0xFF, 0xF7, 0x1F, 0x6A, 0x01, 0x48, 0x4C, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
+0x0A, 0x6C, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF4, 0x40, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x6C, 0xEA, 0xDF, 0x2A, 0xFF, 0xF7, 0x1F, 0x6A,
+0x01, 0x49, 0x4C, 0xE9, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF4, 0x44, 0x9A, 0x20, 0xCA, 0x01, 0x6A,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
+0x0C, 0xD1, 0x0B, 0xD0, 0x30, 0xF0, 0x20, 0x6B,
+0xFF, 0x69, 0x4E, 0xF2, 0x4C, 0x9B, 0x2C, 0xED,
+0xFF, 0xF7, 0x1F, 0x68, 0x11, 0xD7, 0x8C, 0xE8,
+0x08, 0xD5, 0x04, 0x04, 0x00, 0x6D, 0xCC, 0xE9,
+0x04, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x4E, 0xF2, 0x4C, 0x9B, 0x05, 0x04, 0x00, 0x6D,
+0x04, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x4E, 0xF2, 0x50, 0x9B, 0x11, 0x95, 0x04, 0x04,
+0x04, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0x4E, 0xF2, 0x50, 0x9B, 0x12, 0x95, 0x06, 0x04,
+0x04, 0x6E, 0x40, 0xEA, 0x00, 0xF1, 0x00, 0x58,
+0x08, 0x61, 0x0E, 0xF0, 0x40, 0x40, 0xFF, 0xF7,
+0x1F, 0x6B, 0x6C, 0xEA, 0x00, 0xF1, 0x00, 0x5A,
+0x39, 0x60, 0x08, 0x92, 0x04, 0x72, 0x11, 0x61,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
+0xFF, 0x6B, 0x49, 0xE0, 0x40, 0xA2, 0x4C, 0xEB,
+0x5F, 0x21, 0x06, 0x94, 0x8F, 0xEA, 0x6C, 0xEA,
+0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA, 0x04, 0xD2,
+0x57, 0x10, 0x08, 0x92, 0x05, 0x72, 0x12, 0x61,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
+0xFF, 0xF7, 0x1F, 0x6B, 0x49, 0xE0, 0x40, 0xAA,
+0x4C, 0xEB, 0x7F, 0x21, 0x06, 0x94, 0x8F, 0xEA,
+0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
+0x04, 0xD2, 0x77, 0x10, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x48, 0x9A, 0x49, 0xE0, 0x60, 0x9A,
+0x80, 0xF0, 0x1E, 0x21, 0x06, 0x94, 0x8F, 0xEA,
+0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
+0x04, 0xD2, 0x96, 0x10, 0x01, 0xF0, 0x00, 0x58,
+0x09, 0x61, 0x0D, 0xF7, 0x40, 0x40, 0xFF, 0xF7,
+0x1F, 0x6B, 0x6C, 0xEA, 0x00, 0xF7, 0x00, 0x5A,
+0x80, 0xF0, 0x17, 0x60, 0x08, 0x92, 0x04, 0x72,
+0x31, 0x61, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
+0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x4C, 0x9A, 0x49, 0xE0, 0x60, 0xA2, 0xFF, 0x6A,
+0x6C, 0xEA, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEB,
+0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
+0x04, 0xD3, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
+0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x4C, 0x9A, 0x7D, 0x67, 0x41, 0xE0, 0x50, 0xA3,
+0x40, 0xC0, 0x7E, 0x10, 0x08, 0x92, 0x05, 0x72,
+0x32, 0x61, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
+0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x4C, 0x9A, 0x49, 0xE0, 0x60, 0xAA, 0xFF, 0xF7,
+0x1F, 0x6A, 0x6C, 0xEA, 0x07, 0x21, 0x06, 0x94,
+0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92, 0x8C, 0xEA,
+0x4D, 0xEB, 0x04, 0xD3, 0x1F, 0xF7, 0x00, 0x6A,
+0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x01, 0x60,
+0x05, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x4C, 0x9A, 0x7D, 0x67, 0x41, 0xE0,
+0x48, 0xAB, 0x40, 0xC8, 0x49, 0x10, 0x1F, 0xF7,
+0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
+0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x4C, 0x9A, 0x49, 0xE0,
+0x60, 0x9A, 0x07, 0x21, 0x06, 0x94, 0x8F, 0xEA,
+0x6C, 0xEA, 0x04, 0x93, 0x8C, 0xEB, 0x6D, 0xEA,
+0x04, 0xD2, 0x1F, 0xF7, 0x00, 0x6A, 0x0C, 0xEA,
+0x02, 0xF0, 0x00, 0x72, 0x01, 0x60, 0x05, 0x2A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A,
+0x04, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x4C, 0x9A, 0x41, 0xE0, 0x04, 0x92, 0x40, 0xD8,
+0x1B, 0x10, 0xFF, 0xF7, 0x1C, 0x6A, 0x0C, 0xEA,
+0x01, 0x6D, 0x82, 0x67, 0xAB, 0xED, 0x08, 0xD2,
+0x00, 0x18, 0xC2, 0xD2, 0x05, 0xD2, 0x07, 0x21,
+0x06, 0x94, 0x8F, 0xEB, 0x4C, 0xEB, 0x04, 0x92,
+0x8C, 0xEA, 0x4D, 0xEB, 0x04, 0xD3, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x08, 0x94,
+0x04, 0x96, 0x01, 0x6D, 0xAB, 0xED, 0x40, 0xEA,
+0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
+0x0C, 0xD1, 0x0B, 0xD0, 0x41, 0x9C, 0x61, 0xA4,
+0x01, 0xAC, 0x06, 0xD2, 0x42, 0x9C, 0xFF, 0x73,
+0x07, 0xD2, 0x00, 0x6A, 0x59, 0x60, 0x7F, 0x6D,
+0x6C, 0xED, 0x4C, 0x45, 0xFF, 0x6B, 0x6C, 0xEA,
+0x0E, 0x5A, 0x08, 0x60, 0x10, 0xF0, 0x23, 0x6B,
+0x48, 0x32, 0x8E, 0xF1, 0x10, 0x4B, 0x4D, 0xE3,
+0x40, 0x9B, 0x00, 0xEA, 0x03, 0x6A, 0x48, 0x10,
+0x61, 0xA4, 0x80, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0xFF, 0x6E, 0x07, 0x03, 0x90, 0x67, 0x4C, 0xEE,
+0x06, 0x07, 0x04, 0xD3, 0x00, 0x18, 0x21, 0xD1,
+0x1F, 0x10, 0x81, 0xA4, 0x80, 0x6A, 0xFF, 0x69,
+0x64, 0x67, 0x4C, 0xEB, 0x0C, 0xE9, 0x02, 0x32,
+0x01, 0x6E, 0x82, 0x67, 0xB1, 0x67, 0xCB, 0xEE,
+0x08, 0xD3, 0x09, 0xD2, 0x00, 0x18, 0x0D, 0xD3,
+0x08, 0x93, 0x07, 0x23, 0x07, 0x94, 0x8F, 0xEB,
+0x4C, 0xEB, 0x06, 0x92, 0x8C, 0xEA, 0x4D, 0xEB,
+0x06, 0xD3, 0x09, 0x94, 0x06, 0x97, 0x01, 0x6E,
+0xB1, 0x67, 0xCB, 0xEE, 0x00, 0x18, 0x20, 0xD3,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x29, 0xF4, 0x7C, 0x9A, 0x06, 0x94, 0x61, 0xE0,
+0x49, 0xF4, 0x60, 0x9A, 0x29, 0xF4, 0x1C, 0xDA,
+0x6D, 0xE4, 0x49, 0xF4, 0x60, 0xDA, 0x0B, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A,
+0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x58, 0x9A, 0x90, 0x67, 0x40, 0xEA, 0x01, 0x6A,
+0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF4, 0x80, 0x9A, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0xA0, 0x9C, 0x4C, 0x9B,
+0xAC, 0xEA, 0x4D, 0xDB, 0x40, 0xDC, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0xD1, 0x04, 0xD0, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF3, 0x24, 0x9A, 0x10, 0xF0,
+0x23, 0x6A, 0x0E, 0xF4, 0x1C, 0x4A, 0x40, 0x9A,
+0x60, 0x99, 0x10, 0xF0, 0x23, 0x6C, 0xA0, 0x9A,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4, 0x44, 0x9A,
+0x2E, 0xF4, 0x0C, 0x4C, 0x80, 0x9C, 0x00, 0x9A,
+0x1A, 0x65, 0x10, 0xF0, 0x23, 0x6A, 0x80, 0x9C,
+0x2E, 0xF4, 0x14, 0x4A, 0x40, 0x9A, 0x01, 0xD4,
+0x30, 0xF0, 0x20, 0x6C, 0x40, 0x9A, 0xC0, 0xF1,
+0xE8, 0x9C, 0x00, 0xD2, 0x44, 0x67, 0xC0, 0xF1,
+0x08, 0x4A, 0xC1, 0x9A, 0x83, 0x9A, 0x6C, 0xEF,
+0xAC, 0xEE, 0x01, 0x93, 0xA2, 0x9A, 0xE5, 0xDA,
+0x6C, 0xEC, 0x0C, 0xED, 0x64, 0x9A, 0x00, 0x90,
+0x88, 0xDA, 0xC6, 0xDA, 0x0C, 0xEB, 0xA7, 0xDA,
+0x69, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF4,
+0x1C, 0x4A, 0x40, 0x9A, 0xE0, 0xD9, 0x18, 0x67,
+0xC0, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
+0x0C, 0x4A, 0x40, 0x9A, 0xA0, 0xD8, 0x80, 0xDA,
+0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF4, 0x14, 0x4C,
+0x80, 0x9C, 0x60, 0xDC, 0x05, 0x91, 0x04, 0x90,
+0x03, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD1,
+0x00, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
+0x1C, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4,
+0xE4, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4,
+0xCC, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0x80, 0x98, 0xAE, 0x9A, 0x60, 0x9F,
+0x20, 0x9E, 0x8C, 0xED, 0x8F, 0x9A, 0xB1, 0xDA,
+0x6C, 0xEC, 0x70, 0x9A, 0x92, 0xDA, 0x2C, 0xEB,
+0x73, 0xDA, 0xA0, 0xD8, 0x80, 0xDF, 0x60, 0xDE,
+0x01, 0x91, 0x00, 0x90, 0x01, 0x63, 0x20, 0xE8,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x50, 0x9A,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x20, 0xE8, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
+0x07, 0x6D, 0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B,
+0xC0, 0xF1, 0x08, 0x4B, 0x01, 0x6E, 0x12, 0xEC,
+0x71, 0xE4, 0xE9, 0xF0, 0xA5, 0xA4, 0xCC, 0xED,
+0x1D, 0x25, 0xE9, 0xF0, 0xA6, 0xA4, 0x29, 0xF1,
+0x60, 0x9B, 0xE9, 0xF0, 0x85, 0xA4, 0x75, 0xE5,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3, 0x64, 0x9B,
+0xBC, 0x35, 0x21, 0x4D, 0x75, 0xE5, 0xE0, 0xA5,
+0x9E, 0x33, 0x9A, 0x34, 0xCC, 0xEC, 0x78, 0x33,
+0x9C, 0x34, 0x4C, 0xEF, 0x8D, 0xEB, 0xED, 0xEB,
+0x00, 0xF6, 0x60, 0x33, 0x00, 0xF6, 0x63, 0x33,
+0x4C, 0xEB, 0x60, 0xC5, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0x0E, 0xF3, 0x84, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0x20, 0xE8, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0xE9, 0xCC, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x70, 0xA2,
+0x02, 0x6A, 0x6C, 0xEA, 0x03, 0x22, 0x01, 0x6C,
+0x00, 0x18, 0xDC, 0xD5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x69, 0xF3, 0xA9, 0xA3, 0xFF, 0x6A, 0x4C, 0xEC,
+0x8E, 0xED, 0x10, 0x2D, 0x69, 0xF3, 0xA8, 0xA3,
+0x1F, 0x6E, 0xAA, 0x33, 0xCC, 0xEB, 0x67, 0xEC,
+0x01, 0x6C, 0x8C, 0xEB, 0x07, 0x23, 0x02, 0x6B,
+0xAC, 0xEB, 0x4C, 0xEB, 0x03, 0x23, 0x00, 0x6C,
+0x00, 0x18, 0xDC, 0xD5, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6A, 0x4C, 0xEC, 0x00, 0x18, 0x7B, 0xD2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x4F, 0xC1,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x40, 0xCA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x3D, 0xCA,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xD8, 0xCD,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0x56, 0xCD,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xA3, 0xD3,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFF, 0x63, 0x01, 0xD0, 0x10, 0xF0, 0x23, 0x6B,
+0xAE, 0xF3, 0x64, 0x9B, 0xFF, 0x6A, 0x4C, 0xEE,
+0x6D, 0xE4, 0x08, 0x68, 0x80, 0xA3, 0xDB, 0xE0,
+0x02, 0x67, 0x4C, 0xED, 0x07, 0xEE, 0xD0, 0x67,
+0x4C, 0xEF, 0x04, 0xED, 0x4C, 0xEC, 0xCC, 0xEF,
+0x0F, 0xE8, 0x8C, 0xE8, 0xE4, 0xED, 0xED, 0xE8,
+0x4C, 0xE8, 0x00, 0xC3, 0x01, 0x90, 0x01, 0x63,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
+0xAE, 0xF3, 0x44, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0x8C, 0xEB, 0x4D, 0xE3, 0x40, 0xA3, 0xFF, 0x6C,
+0x8C, 0xEE, 0x08, 0x6B, 0xDB, 0xE3, 0x8C, 0xED,
+0x8C, 0xEA, 0x64, 0x67, 0x47, 0xED, 0x67, 0xEE,
+0x6C, 0xEA, 0x8C, 0xEA, 0x20, 0xE8, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2, 0x6C, 0x9B,
+0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA, 0x69, 0xE2,
+0x00, 0x9A, 0x41, 0x45, 0x25, 0x67, 0x08, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
+0x85, 0x67, 0x2C, 0xE8, 0x40, 0xEA, 0x06, 0xEA,
+0x50, 0x67, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0xF7, 0x1F, 0x68,
+0x41, 0x45, 0x25, 0x67, 0x0C, 0xD6, 0x8C, 0xE8,
+0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2,
+0x4C, 0x9A, 0x41, 0xE0, 0xC0, 0xD8, 0x1A, 0x10,
+0x01, 0x6D, 0x90, 0x67, 0xAB, 0xED, 0x00, 0x18,
+0xC2, 0xD2, 0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF4, 0x50, 0x9A, 0x91, 0x67, 0x40, 0xEA,
+0x0C, 0x93, 0x64, 0xEA, 0x43, 0x67, 0x04, 0x93,
+0x2C, 0xEA, 0x2F, 0xE9, 0x6C, 0xE9, 0x10, 0xF0,
+0x23, 0x6B, 0x2E, 0xF2, 0x6C, 0x9B, 0x2D, 0xEA,
+0x61, 0xE0, 0x40, 0xD8, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x01, 0x74, 0x0D, 0x60, 0x06, 0x24, 0x02, 0x74,
+0x10, 0x60, 0x03, 0x74, 0x00, 0x6A, 0x1C, 0x61,
+0x14, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0xA8, 0x35,
+0x6E, 0xF4, 0x48, 0x9A, 0x0B, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0xA8, 0x35, 0x6E, 0xF4, 0x4C, 0x9A,
+0x05, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0x50, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
+0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0x54, 0x9A, 0xA8, 0x35, 0x55, 0xE5, 0x40, 0x9D,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x08, 0xF3, 0x00, 0x4A,
+0x88, 0x34, 0x91, 0xE2, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF3, 0x7C, 0x9A, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0xF5, 0xA0, 0x35, 0xCC, 0xEB, 0x10, 0xF0,
+0x23, 0x6E, 0x2E, 0xF3, 0xC0, 0x9E, 0xCE, 0xF4,
+0x50, 0x9A, 0x80, 0xAC, 0xAD, 0xEB, 0x01, 0x6D,
+0xAB, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x6B, 0x8C, 0xEB,
+0xFF, 0xF7, 0x1F, 0x6A, 0x81, 0x46, 0x06, 0x67,
+0xAC, 0xEA, 0x06, 0x2C, 0x83, 0x67, 0xA2, 0x67,
+0x00, 0x18, 0xEA, 0xD2, 0x02, 0x67, 0x0D, 0x10,
+0x83, 0x67, 0xA2, 0x67, 0x00, 0x18, 0xEA, 0xD2,
+0x22, 0x67, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4,
+0x50, 0x9A, 0x90, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
+0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x46, 0x67, 0xFF, 0x68, 0xFF, 0xF7, 0x1F, 0x69,
+0x01, 0x4A, 0x0C, 0xD6, 0x0D, 0xD7, 0x8C, 0xE8,
+0xAC, 0xE9, 0x04, 0x2A, 0x90, 0x67, 0xB1, 0x67,
+0xC7, 0x67, 0x15, 0x10, 0xB1, 0x67, 0x90, 0x67,
+0x00, 0x18, 0xEA, 0xD2, 0x04, 0xD2, 0x30, 0xF0,
+0x20, 0x6A, 0x0C, 0x94, 0xAE, 0xF4, 0x50, 0x9A,
+0x40, 0xEA, 0x0D, 0x96, 0x90, 0x67, 0xB1, 0x67,
+0xC4, 0xEA, 0x0C, 0x92, 0x4C, 0xEE, 0x4F, 0xEB,
+0x04, 0x92, 0x4C, 0xEB, 0x6D, 0xEE, 0x00, 0x18,
+0xFD, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x8C, 0xEA, 0x0E, 0x91, 0x04, 0xD2,
+0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xED, 0x4C, 0xE9,
+0x0C, 0xD6, 0x0D, 0xD7, 0x0F, 0x90, 0x05, 0xD5,
+0x00, 0x6A, 0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x0A, 0x6C, 0x40, 0xEA,
+0x40, 0xA8, 0x01, 0x4A, 0x40, 0xC8, 0x10, 0xF0,
+0x23, 0x6A, 0x04, 0x94, 0x05, 0x95, 0x0E, 0xF3,
+0xDC, 0x9A, 0x00, 0x18, 0x0D, 0xD3, 0x0C, 0x93,
+0x6C, 0xEA, 0x0D, 0x93, 0x6E, 0xEA, 0x03, 0x22,
+0x40, 0xA8, 0x23, 0xEA, 0xE7, 0x61, 0x40, 0xA8,
+0x09, 0x97, 0x07, 0x90, 0x23, 0xEA, 0x08, 0x91,
+0x58, 0x67, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0,
+0x23, 0x6A, 0x49, 0xF5, 0x11, 0x4A, 0x40, 0xDB,
+0x00, 0x68, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0x58, 0x9A, 0x40, 0xA2, 0x12, 0x2A, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF4, 0x5C, 0x9A, 0x40, 0xA2,
+0x0C, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF4,
+0x40, 0x9A, 0x40, 0xA2, 0x06, 0x2A, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF4, 0x44, 0x9A, 0x40, 0xA2,
+0x18, 0x22, 0xE0, 0xF3, 0x09, 0x70, 0x0A, 0x61,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2, 0x68, 0x9A,
+0x20, 0x6C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x00, 0x6A, 0x0C, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0xCE, 0xF4, 0x5C, 0x9A, 0x32, 0x6C, 0x01, 0x48,
+0x40, 0xEA, 0xFF, 0xF7, 0x1F, 0x6A, 0x4C, 0xE8,
+0xD0, 0x17, 0x01, 0x6A, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFF, 0x6A, 0x4C, 0xEC,
+0x94, 0x34, 0x4C, 0xED, 0x4C, 0xEC, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF4, 0x48, 0x9A, 0x80, 0xC2,
+0xA0, 0xC2, 0x20, 0xE8, 0xFF, 0x6A, 0x10, 0xF0,
+0x23, 0x6B, 0x8E, 0xF4, 0x68, 0x9B, 0x4C, 0xEC,
+0x94, 0x34, 0x4C, 0xEC, 0x80, 0xC3, 0x60, 0xA3,
+0x6C, 0xEA, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0xFF, 0x68, 0x09, 0xD5,
+0x8C, 0xE8, 0x7F, 0xF7, 0x1E, 0x6D, 0x00, 0x6C,
+0x00, 0x18, 0xB6, 0xC9, 0x62, 0x67, 0x67, 0xE8,
+0x01, 0x6A, 0x4C, 0xEB, 0x00, 0x6A, 0x2D, 0x23,
+0x0A, 0x28, 0x82, 0x67, 0x9F, 0xF7, 0x00, 0x6D,
+0x00, 0x18, 0xB6, 0xC9, 0x22, 0x67, 0x00, 0x6C,
+0x9F, 0xF7, 0x01, 0x6D, 0x09, 0x10, 0x00, 0x6C,
+0x9F, 0xF7, 0x02, 0x6D, 0x00, 0x18, 0xB6, 0xC9,
+0x22, 0x67, 0x00, 0x6C, 0x9F, 0xF7, 0x03, 0x6D,
+0x00, 0x18, 0xB6, 0xC9, 0x0F, 0x6B, 0x4C, 0xEB,
+0x60, 0x32, 0x2D, 0xEA, 0xFF, 0xF7, 0x1F, 0x6B,
+0x6C, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF3,
+0x64, 0x9B, 0x00, 0x30, 0x08, 0x30, 0x61, 0xE0,
+0x51, 0xE0, 0x09, 0x93, 0x04, 0x10, 0xA0, 0xA0,
+0x01, 0x48, 0xA0, 0xC3, 0x01, 0x4B, 0x8A, 0xE8,
+0xFA, 0x61, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0x00, 0x6C,
+0x7F, 0xF7, 0x1E, 0x6D, 0xAF, 0xF4, 0x18, 0x48,
+0x00, 0x18, 0xB6, 0xC9, 0xE1, 0xF3, 0x84, 0xA0,
+0x01, 0x6B, 0x47, 0xEC, 0x6C, 0xEA, 0x13, 0x22,
+0x30, 0xF0, 0x21, 0x6D, 0x90, 0xF2, 0x1C, 0x4D,
+0x00, 0x18, 0x81, 0xD3, 0xE1, 0xF3, 0x46, 0xC8,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF0, 0x6C, 0x9A, 0x10, 0xF0, 0x00, 0x6C,
+0x8D, 0xEB, 0x80, 0xF0, 0x6C, 0xDA, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x6C, 0x7F, 0xF7,
+0x1E, 0x6D, 0x00, 0x18, 0xB6, 0xC9, 0x05, 0x97,
+0x30, 0xF0, 0x21, 0x6B, 0xB1, 0xF0, 0x40, 0xC3,
+0x03, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x7F, 0xF7, 0x1D, 0x68,
+0xB0, 0x67, 0x00, 0x6C, 0x00, 0x18, 0xB6, 0xC9,
+0x11, 0x6E, 0xCB, 0xEE, 0x4C, 0xEE, 0x20, 0x6A,
+0x4D, 0xEE, 0xFF, 0x6A, 0x4C, 0xEE, 0xB0, 0x67,
+0x00, 0x6C, 0x01, 0x48, 0x00, 0x18, 0xA9, 0xC9,
+0xB0, 0x67, 0x00, 0x6C, 0x00, 0x18, 0xB6, 0xC9,
+0xB0, 0x67, 0x00, 0x6C, 0x00, 0x18, 0xB6, 0xC9,
+0x60, 0x6E, 0xCB, 0xEE, 0x4D, 0xEE, 0xFF, 0x6A,
+0x4C, 0xEE, 0xB0, 0x67, 0x00, 0x6C, 0x00, 0x18,
+0xA9, 0xC9, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF4,
+0x6C, 0x9A, 0xFD, 0x6A, 0x30, 0xF0, 0x20, 0x69,
+0x80, 0xA3, 0x9F, 0xF6, 0x12, 0x48, 0x8C, 0xEA,
+0x40, 0xC3, 0xCE, 0xF4, 0x58, 0x99, 0x28, 0x6C,
+0x40, 0xEA, 0xB0, 0x67, 0x00, 0x6C, 0x00, 0x18,
+0xB6, 0xC9, 0xFE, 0x6E, 0x4C, 0xEE, 0xB0, 0x67,
+0x00, 0x6C, 0x00, 0x18, 0xA9, 0xC9, 0xCE, 0xF4,
+0x58, 0x99, 0xE0, 0xF3, 0x08, 0x6C, 0x40, 0xEA,
+0xB0, 0x67, 0x00, 0x6C, 0x00, 0x18, 0xB6, 0xC9,
+0x01, 0x6E, 0x4D, 0xEE, 0xFF, 0x6A, 0xB0, 0x67,
+0x00, 0x6C, 0x4C, 0xEE, 0x00, 0x18, 0xA9, 0xC9,
+0x07, 0x97, 0x06, 0x91, 0x05, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xAF, 0xF4,
+0x18, 0x48, 0xE1, 0xF3, 0x64, 0xA0, 0x01, 0x6A,
+0xFF, 0x6E, 0x44, 0xEB, 0x4C, 0xEE, 0x00, 0x6C,
+0x7F, 0xF7, 0x1E, 0x6D, 0x00, 0x18, 0xA9, 0xC9,
+0xE1, 0xF3, 0x44, 0xA0, 0x01, 0x6B, 0x05, 0x97,
+0x6E, 0xEA, 0xE1, 0xF3, 0x44, 0xC0, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
+0xE1, 0xF3, 0x6A, 0xA2, 0x01, 0x6C, 0x8E, 0xEB,
+0x05, 0x2B, 0xE1, 0xF3, 0x6A, 0xC2, 0x00, 0x18,
+0xEB, 0xD3, 0x10, 0x10, 0xE1, 0xF3, 0xC8, 0xA2,
+0xE1, 0xF3, 0x84, 0xA2, 0x01, 0x6B, 0xA6, 0x67,
+0xA7, 0xEC, 0x6C, 0xED, 0x07, 0x25, 0x6E, 0xEC,
+0xC7, 0xEC, 0x86, 0x67, 0x6C, 0xEC, 0x02, 0x24,
+0xE1, 0xF3, 0x69, 0xC2, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0xF7, 0x1F, 0x6B,
+0x05, 0x67, 0x6C, 0xE8, 0xFF, 0x6A, 0x35, 0x58,
+0x4C, 0xEC, 0x40, 0x60, 0x0A, 0x35, 0x6C, 0xED,
+0x80, 0x36, 0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF4,
+0x18, 0x4B, 0xC4, 0x36, 0xD9, 0xE3, 0xAC, 0xEA,
+0xE0, 0xF7, 0x04, 0x4E, 0x00, 0x6B, 0x11, 0x10,
+0x30, 0xF0, 0x21, 0x6F, 0x91, 0xF0, 0xFD, 0xA7,
+0x10, 0xF0, 0x23, 0x69, 0x6E, 0xF3, 0x34, 0x99,
+0xE0, 0x37, 0xE8, 0x37, 0x3D, 0xE7, 0x68, 0x31,
+0x3D, 0xE7, 0x20, 0x9E, 0x01, 0x4B, 0x04, 0x4E,
+0x20, 0xDF, 0xFF, 0x6F, 0x23, 0x67, 0xEC, 0xE9,
+0x43, 0xE9, 0xEA, 0x61, 0x03, 0x6A, 0x0C, 0xEA,
+0xEC, 0xED, 0x3F, 0x22, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF4, 0x18, 0x4A, 0xE1, 0xF3, 0x65, 0xA2,
+0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF3, 0xD4, 0x9E,
+0x60, 0x33, 0x68, 0x33, 0x9C, 0x34, 0xCD, 0xE3,
+0xA8, 0x36, 0xB5, 0xE4, 0xE0, 0xF1, 0x18, 0x4D,
+0xA8, 0x35, 0xA9, 0xE2, 0x41, 0x9A, 0xCD, 0xE3,
+0x40, 0xDB, 0x27, 0x10, 0x80, 0x34, 0x30, 0xF0,
+0x21, 0x6A, 0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF4,
+0x70, 0x9B, 0x84, 0x34, 0x90, 0xF4, 0x1C, 0x4A,
+0x95, 0xE2, 0x30, 0xF0, 0x21, 0x6A, 0x91, 0xF0,
+0xDD, 0xA2, 0x6C, 0xED, 0x00, 0x6A, 0x10, 0xF0,
+0x23, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0x8E, 0xF4,
+0x74, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0x36,
+0xAE, 0xF2, 0x40, 0x9A, 0xC8, 0x36, 0x00, 0x6C,
+0x79, 0xE6, 0xF0, 0x67, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x44, 0x9A, 0x00, 0x6C,
+0x40, 0xEA, 0xFF, 0x69, 0xD0, 0x67, 0x00, 0x6C,
+0x7F, 0xF7, 0x1C, 0x6D, 0x2C, 0xEE, 0x00, 0x18,
+0xA9, 0xC9, 0x02, 0x36, 0x00, 0x6C, 0x7F, 0xF7,
+0x1D, 0x6D, 0x2C, 0xEE, 0x00, 0x18, 0xA9, 0xC9,
+0x30, 0xF0, 0x21, 0x6A, 0x91, 0xF0, 0x5D, 0xA2,
+0x01, 0x6E, 0x00, 0x6C, 0x02, 0x4A, 0xC4, 0xEA,
+0x7F, 0xF7, 0x1E, 0x6D, 0x2C, 0xEE, 0x00, 0x18,
+0xA9, 0xC9, 0x00, 0x68, 0x12, 0x10, 0x01, 0x6A,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xE8, 0xEE, 0xF1,
+0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A, 0x2A, 0xF0,
+0x0D, 0x4A, 0x09, 0xE2, 0x40, 0xDB, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x01, 0x6C,
+0x40, 0xEA, 0x00, 0x6C, 0x7F, 0xF7, 0x1E, 0x6D,
+0x00, 0x18, 0xB6, 0xC9, 0x30, 0xF0, 0x20, 0x6B,
+0xAF, 0xF4, 0x18, 0x4B, 0xE1, 0xF3, 0x85, 0xA3,
+0xA2, 0x44, 0x47, 0xED, 0x01, 0x6D, 0xAC, 0xEA,
+0xDE, 0x2A, 0xAE, 0xEC, 0xE1, 0xF3, 0x85, 0xC3,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x45, 0x67,
+0x05, 0x63, 0x00, 0xEF, 0xBC, 0x63, 0x87, 0x62,
+0x86, 0xD1, 0x85, 0xD0, 0x30, 0xF0, 0x20, 0x69,
+0xAF, 0xF4, 0x18, 0x49, 0xE1, 0xF3, 0xA6, 0xA9,
+0x30, 0xF0, 0x21, 0x6C, 0x90, 0xF2, 0x1C, 0x4C,
+0x00, 0x18, 0xFD, 0xC3, 0x00, 0x18, 0xEB, 0xD3,
+0xE1, 0xF3, 0x84, 0xA1, 0x04, 0x00, 0xB0, 0x67,
+0x00, 0x18, 0x81, 0xD3, 0x11, 0x22, 0x90, 0x67,
+0xA2, 0x67, 0x00, 0x18, 0xFD, 0xC3, 0xE1, 0xF3,
+0x09, 0xA1, 0x01, 0x6A, 0x4E, 0xE8, 0x05, 0x28,
+0x00, 0x18, 0xEB, 0xD3, 0xE1, 0xF3, 0x09, 0xC1,
+0x03, 0x10, 0x01, 0x6A, 0xE1, 0xF3, 0x4A, 0xC1,
+0x87, 0x97, 0x86, 0x91, 0x85, 0x90, 0x44, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6B,
+0x4E, 0xF2, 0x70, 0x9B, 0xFF, 0x6A, 0x4C, 0xED,
+0xA0, 0xC3, 0xCC, 0xEA, 0x30, 0xF0, 0x20, 0x6B,
+0xE8, 0xF2, 0x5A, 0xC3, 0x10, 0xF0, 0x23, 0x6B,
+0x8E, 0xF4, 0x78, 0x9B, 0x40, 0xC3, 0x20, 0xE8,
+0xFF, 0x63, 0x01, 0xD0, 0xFF, 0x6A, 0x4C, 0xED,
+0x4C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF4, 0x44, 0x9A, 0xFF, 0xF7, 0x1F, 0x6B,
+0x6C, 0xEC, 0x00, 0xAA, 0xE1, 0xF7, 0x1F, 0x6A,
+0x0C, 0xEA, 0x10, 0xF0, 0x23, 0x68, 0x8E, 0xF4,
+0x1C, 0x98, 0x51, 0xE4, 0x6C, 0xEC, 0x80, 0xC8,
+0x9C, 0x32, 0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF4,
+0x80, 0x9C, 0x10, 0xF0, 0x23, 0x68, 0xAE, 0xF4,
+0x04, 0x98, 0x91, 0xE2, 0x80, 0xAC, 0x01, 0xE2,
+0x00, 0x98, 0x6C, 0xEC, 0x05, 0x25, 0x10, 0xF0,
+0x00, 0x6D, 0xAB, 0xED, 0xAD, 0xEC, 0x6C, 0xEC,
+0xD8, 0xF0, 0x00, 0x6B, 0x8C, 0xEB, 0x10, 0xF0,
+0x23, 0x6C, 0xAE, 0xF4, 0x80, 0x9C, 0x91, 0xE2,
+0x60, 0xCC, 0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF4,
+0x68, 0x9B, 0x6D, 0xE2, 0x80, 0xA3, 0x01, 0x6B,
+0x8C, 0xEB, 0x05, 0x23, 0x03, 0xF7, 0x01, 0x6B,
+0x6B, 0xEB, 0x0C, 0xEB, 0x06, 0x10, 0x1F, 0xF7,
+0x01, 0x6B, 0x6B, 0xEB, 0x0C, 0xEB, 0xE0, 0x37,
+0xED, 0xEB, 0xFF, 0x76, 0x13, 0x60, 0x10, 0xF0,
+0x23, 0x6C, 0xAE, 0xF4, 0x8C, 0x9C, 0x80, 0xF4,
+0xC0, 0x36, 0x6C, 0xEC, 0x10, 0xF0, 0x23, 0x6B,
+0xAE, 0xF2, 0x78, 0x9B, 0x6D, 0xEE, 0x10, 0xF0,
+0x23, 0x6B, 0xAE, 0xF4, 0x64, 0x9B, 0x8D, 0xEE,
+0x6D, 0xE2, 0xC0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0xAE, 0xF4, 0x90, 0x9B, 0x7F, 0x6B, 0x91, 0xE2,
+0xA0, 0xA4, 0xAC, 0xEB, 0x60, 0xC4, 0x10, 0xF0,
+0x23, 0x6B, 0xAE, 0xF4, 0x74, 0x9B, 0x1C, 0x6C,
+0x80, 0xC3, 0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF4,
+0x78, 0x9B, 0x08, 0xF4, 0x13, 0x6C, 0x80, 0xCB,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF2, 0x84, 0x9B,
+0xF7, 0x6B, 0x91, 0xE2, 0xA0, 0xA4, 0xAC, 0xEB,
+0x60, 0xC4, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x51, 0xA2,
+0xFF, 0x63, 0x05, 0x5A, 0x36, 0x60, 0x10, 0xF0,
+0x23, 0x6B, 0x48, 0x32, 0xCE, 0xF1, 0x08, 0x4B,
+0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA, 0x10, 0xF0,
+0x23, 0x6A, 0xAE, 0xF4, 0x5C, 0x9A, 0xFF, 0xF7,
+0x1F, 0x6B, 0x40, 0x9A, 0x1A, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0xAE, 0xF4, 0x5C, 0x9A, 0x09, 0x10,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4, 0x40, 0x9A,
+0x0D, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
+0x40, 0x9A, 0x40, 0x9A, 0x50, 0x32, 0x00, 0xF5,
+0x42, 0x32, 0x08, 0x10, 0x10, 0xF0, 0x23, 0x6A,
+0xCE, 0xF4, 0x44, 0x9A, 0x40, 0x9A, 0xE1, 0xF7,
+0x1F, 0x6B, 0x6C, 0xEA, 0x00, 0xD2, 0x00, 0x93,
+0xE0, 0xF3, 0x08, 0x6A, 0x60, 0x33, 0x68, 0x33,
+0x5B, 0xEB, 0x01, 0x2A, 0xE5, 0xE8, 0x12, 0xEA,
+0x01, 0x10, 0x66, 0x6A, 0x00, 0xD2, 0x00, 0x92,
+0x01, 0x63, 0x20, 0xE8, 0xFF, 0x63, 0x01, 0xD0,
+0x0C, 0x2C, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF2,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0xCE, 0xF4,
+0x88, 0x9C, 0x40, 0x9B, 0x8D, 0xEA, 0x40, 0xDB,
+0x58, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x4F, 0xF5,
+0xDC, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF5,
+0x18, 0x4A, 0x00, 0x6D, 0x18, 0x6F, 0xF8, 0xED,
+0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF4, 0x18, 0x4B,
+0x12, 0xEF, 0x6D, 0xE7, 0xA0, 0xF0, 0x14, 0xA3,
+0x01, 0x6F, 0xEC, 0xE8, 0x23, 0x20, 0xA0, 0xF0,
+0x74, 0xA3, 0x66, 0x33, 0xEC, 0xEB, 0xFF, 0x6F,
+0xEC, 0xEB, 0x1C, 0x23, 0xFF, 0xF7, 0x78, 0x9A,
+0x9B, 0xEB, 0x01, 0x2C, 0xE5, 0xE8, 0x12, 0xEB,
+0xFF, 0xF7, 0x7C, 0xDA, 0x10, 0xEF, 0x03, 0x27,
+0x01, 0x4B, 0xFF, 0xF7, 0x7C, 0xDA, 0x60, 0x9A,
+0x78, 0xEE, 0x12, 0xEB, 0x9B, 0xEB, 0x01, 0x2C,
+0xE5, 0xE8, 0x12, 0xEB, 0x60, 0xDA, 0xFF, 0xF7,
+0x7C, 0x9A, 0x04, 0x2B, 0x01, 0x6F, 0xFF, 0xF7,
+0xFC, 0xDA, 0x60, 0xDA, 0x01, 0x4D, 0x0A, 0x75,
+0x18, 0x4A, 0xCC, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF4, 0x18, 0x4A, 0xA0, 0xF0, 0x68, 0x9A,
+0xA0, 0xF0, 0x84, 0xDA, 0x7B, 0xEC, 0x01, 0x2B,
+0xE5, 0xE8, 0x12, 0xEB, 0xA0, 0xF0, 0x6C, 0xDA,
+0x78, 0x67, 0xA0, 0xF0, 0x70, 0xDA, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x69, 0xF3,
+0x88, 0xA2, 0x02, 0x6B, 0x8D, 0xEB, 0x69, 0xF3,
+0x68, 0xC2, 0x01, 0x90, 0x01, 0x63, 0x20, 0xE8,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48,
+0x69, 0xF3, 0x48, 0xA0, 0x03, 0x6B, 0x4C, 0xEB,
+0x00, 0x6A, 0x33, 0x2B, 0x10, 0xF0, 0x23, 0x6A,
+0xCE, 0xF4, 0x4C, 0x9A, 0x30, 0xF0, 0x20, 0x69,
+0x30, 0xF0, 0x20, 0x6C, 0x60, 0xC2, 0x4E, 0xF2,
+0x4C, 0x99, 0x29, 0xF5, 0x10, 0x4C, 0x00, 0x6D,
+0xD4, 0x6E, 0x40, 0xEA, 0x4E, 0xF2, 0x4C, 0x99,
+0x30, 0xF0, 0x20, 0x6C, 0xFF, 0x6E, 0x4F, 0xF5,
+0x1C, 0x4C, 0x00, 0x6D, 0x01, 0x4E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
+0x01, 0x6B, 0x66, 0x6C, 0xA0, 0xF0, 0x68, 0xDA,
+0xA0, 0xF0, 0x84, 0xDA, 0xA0, 0xF0, 0x8C, 0xDA,
+0x01, 0x6A, 0x4B, 0xEA, 0x69, 0xF3, 0x88, 0xA0,
+0x69, 0xF3, 0x49, 0xC0, 0x7D, 0x6A, 0x4B, 0xEA,
+0x8C, 0xEA, 0x6D, 0xEA, 0x69, 0xF3, 0x48, 0xC0,
+0x43, 0x67, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD0, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x69, 0xF3, 0x88, 0xA0, 0x01, 0x6B,
+0x00, 0x6A, 0x8C, 0xEB, 0x24, 0x23, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF4, 0x4C, 0x9A, 0x00, 0x6B,
+0x60, 0xC2, 0x03, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
+0x69, 0xF3, 0x48, 0xC0, 0x00, 0x18, 0xCA, 0xD4,
+0x04, 0xD2, 0x04, 0x94, 0x00, 0x18, 0xEB, 0xD4,
+0x69, 0xF3, 0x68, 0xA0, 0x02, 0x6A, 0x42, 0xF1,
+0x1C, 0x6C, 0x6D, 0xEA, 0x69, 0xF3, 0x48, 0xC0,
+0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xAE, 0xF2, 0x50, 0x9A, 0x6F, 0xF5, 0xC0, 0x9B,
+0x01, 0x6D, 0x40, 0xEA, 0x01, 0x6A, 0x07, 0x97,
+0x06, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x69, 0xF3, 0xA8, 0xA3, 0x02, 0x6C, 0x00, 0x6A,
+0xAC, 0xEC, 0x0C, 0x24, 0x10, 0xF0, 0x23, 0x6A,
+0xCE, 0xF4, 0x4C, 0x9A, 0x00, 0x6C, 0x80, 0xC2,
+0x03, 0x6A, 0x4B, 0xEA, 0xAC, 0xEA, 0x69, 0xF3,
+0x48, 0xC3, 0x01, 0x6A, 0x20, 0xE8, 0x00, 0x65,
+0x00, 0x6A, 0x18, 0x6C, 0x98, 0xEA, 0x30, 0xF0,
+0x20, 0x6B, 0xAF, 0xF4, 0x18, 0x4B, 0x01, 0x4A,
+0x0A, 0x72, 0x12, 0xEC, 0x71, 0xE4, 0xA0, 0xF0,
+0xB4, 0xA4, 0x02, 0x6B, 0x6B, 0xEB, 0xAC, 0xEB,
+0xA0, 0xF0, 0x74, 0xC4, 0xEE, 0x61, 0x20, 0xE8,
+0x30, 0xF0, 0x20, 0x6A, 0x29, 0xF5, 0x50, 0xA2,
+0x01, 0x6B, 0x4C, 0xEB, 0x00, 0x6A, 0x1C, 0x23,
+0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF5, 0x1C, 0x4A,
+0x00, 0x6B, 0xA0, 0x9A, 0x8E, 0xED, 0x0F, 0x2D,
+0x18, 0x6E, 0xD8, 0xEB, 0x30, 0xF0, 0x20, 0x6D,
+0xAF, 0xF4, 0x18, 0x4D, 0x12, 0xEE, 0xB9, 0xE6,
+0xA0, 0xF0, 0xF4, 0xA6, 0x02, 0x6D, 0xAB, 0xED,
+0xEC, 0xED, 0xA0, 0xF0, 0xB4, 0xC6, 0x01, 0x4B,
+0x0A, 0x73, 0x18, 0x4A, 0xEA, 0x61, 0x01, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x5D, 0x67, 0x20, 0xF0,
+0x78, 0xA2, 0x30, 0xF0, 0x20, 0x6A, 0x0A, 0xD4,
+0x29, 0xF5, 0x90, 0xA2, 0x01, 0x6A, 0x00, 0xF6,
+0xE0, 0x31, 0x8C, 0xEA, 0x0B, 0xD5, 0x0C, 0xD6,
+0x00, 0xF6, 0x23, 0x31, 0x80, 0xF0, 0x0E, 0x22,
+0x24, 0x23, 0x01, 0x73, 0x80, 0xF0, 0x0A, 0x61,
+0x0A, 0x93, 0x80, 0xF0, 0x07, 0x23, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0xC3, 0xEA,
+0x80, 0xF0, 0x00, 0x61, 0x7F, 0x71, 0x7E, 0x60,
+0xFF, 0xF7, 0x1F, 0x51, 0x7B, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x4F, 0xF5, 0x1C, 0x9A, 0x1B, 0xEE,
+0x01, 0x28, 0xE5, 0xE8, 0x10, 0xEA, 0x12, 0xE8,
+0x02, 0x22, 0x01, 0x48, 0x04, 0x10, 0x03, 0x28,
+0x01, 0x68, 0x50, 0x67, 0x1F, 0x10, 0x01, 0x6B,
+0x20, 0x10, 0x0A, 0x95, 0x67, 0x25, 0x10, 0xF0,
+0x23, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x0C, 0x96,
+0xC3, 0xEA, 0x60, 0x61, 0x7F, 0x71, 0x5E, 0x60,
+0xFF, 0xF7, 0x1F, 0x51, 0x5B, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x6F, 0xF5, 0x00, 0x9A, 0x1B, 0xEE,
+0x01, 0x28, 0xE5, 0xE8, 0x10, 0xEA, 0x12, 0xE8,
+0x02, 0x22, 0x01, 0x48, 0x05, 0x10, 0x04, 0x28,
+0x01, 0x68, 0x00, 0x6A, 0x04, 0xD2, 0x02, 0x10,
+0x00, 0x6B, 0x04, 0xD3, 0x0A, 0x94, 0x00, 0x18,
+0x74, 0xD5, 0x00, 0x6C, 0xFF, 0x6E, 0xA4, 0x67,
+0xCC, 0xED, 0x1D, 0x65, 0x18, 0x6D, 0xB8, 0xEC,
+0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF4, 0x18, 0x4B,
+0x01, 0x6D, 0x12, 0xEA, 0x69, 0xE2, 0xA0, 0xF0,
+0x54, 0xA2, 0xAC, 0xEA, 0xCC, 0xEA, 0x2F, 0x2A,
+0xD8, 0x67, 0x18, 0x6F, 0xF8, 0xEE, 0x04, 0x96,
+0xC4, 0x36, 0x04, 0xD6, 0x03, 0x6E, 0xCB, 0xEE,
+0x12, 0xEC, 0x71, 0xE4, 0xA0, 0xF0, 0xF4, 0xA4,
+0xEC, 0xEE, 0x04, 0x97, 0xED, 0xEE, 0xA0, 0xF0,
+0xD4, 0xC4, 0x0A, 0x96, 0xC0, 0xF0, 0xC4, 0xDC,
+0x0B, 0x97, 0xC0, 0xF0, 0xE8, 0xDC, 0x0C, 0x96,
+0x18, 0x6F, 0xA0, 0xF0, 0xD8, 0xDC, 0xD8, 0x67,
+0x01, 0x4E, 0xF8, 0xEE, 0x12, 0xEE, 0xCD, 0xE3,
+0xA0, 0xF0, 0x48, 0xDB, 0xA0, 0xF0, 0x04, 0xDB,
+0xA0, 0xF0, 0x56, 0xC4, 0xA0, 0xF0, 0x54, 0xA4,
+0xA0, 0xF0, 0x37, 0xC4, 0x4D, 0xED, 0xA0, 0xF0,
+0xB4, 0xC4, 0x01, 0x6A, 0x04, 0x10, 0x01, 0x4C,
+0x0A, 0x74, 0xBC, 0x61, 0x00, 0x6A, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x06, 0x22, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF5,
+0x18, 0x4A, 0x00, 0x6C, 0x2C, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6F, 0xF5, 0x18, 0x4A, 0x00, 0x6B,
+0x18, 0x6D, 0xB8, 0xEB, 0x30, 0xF0, 0x20, 0x6C,
+0xAF, 0xF4, 0x18, 0x4C, 0x12, 0xED, 0x91, 0xE5,
+0xA0, 0xF0, 0xD4, 0xA4, 0x01, 0x6D, 0xAC, 0xEE,
+0x08, 0x26, 0xA0, 0xF0, 0x94, 0xA4, 0x86, 0x34,
+0xAC, 0xEC, 0x03, 0x24, 0x80, 0x9A, 0x01, 0x4C,
+0x80, 0xDA, 0x01, 0x4B, 0x0A, 0x73, 0x18, 0x4A,
+0xE7, 0x61, 0x00, 0x18, 0xCA, 0xD4, 0x04, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0x04, 0x93, 0x4F, 0xF5,
+0x5C, 0x9A, 0x6E, 0xEA, 0x54, 0x22, 0x04, 0x94,
+0x00, 0x18, 0xEB, 0xD4, 0x50, 0x10, 0x18, 0x6D,
+0xB8, 0xEC, 0x30, 0xF0, 0x20, 0x6B, 0xAF, 0xF4,
+0x18, 0x4B, 0x12, 0xED, 0x6D, 0xE5, 0xA0, 0xF0,
+0xD4, 0xA3, 0x01, 0x6D, 0xAC, 0xEE, 0x0A, 0x26,
+0xA0, 0xF0, 0x74, 0xA3, 0x66, 0x33, 0xAC, 0xEB,
+0xFF, 0x6D, 0xAC, 0xEB, 0x03, 0x2B, 0x60, 0x9A,
+0x01, 0x4B, 0x60, 0xDA, 0x01, 0x4C, 0x0A, 0x74,
+0x18, 0x4A, 0xE5, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0x29, 0xF5, 0x51, 0xA2, 0xFF, 0x72, 0x2F, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
+0xA0, 0xF0, 0x70, 0x9A, 0x01, 0x4B, 0xA0, 0xF0,
+0x70, 0xDA, 0x7C, 0x4A, 0x4C, 0x9A, 0x4E, 0xEB,
+0x22, 0x2B, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF5,
+0x18, 0x4A, 0x18, 0x6D, 0xB8, 0xEB, 0x30, 0xF0,
+0x20, 0x6C, 0xAF, 0xF4, 0x18, 0x4C, 0x12, 0xED,
+0x91, 0xE5, 0xA0, 0xF0, 0xD4, 0xA4, 0x01, 0x6D,
+0xAC, 0xEE, 0x08, 0x26, 0xA0, 0xF0, 0x94, 0xA4,
+0x86, 0x34, 0xAC, 0xEC, 0x03, 0x24, 0x80, 0x9A,
+0x01, 0x4C, 0x80, 0xDA, 0x01, 0x4B, 0x0A, 0x73,
+0x18, 0x4A, 0xE7, 0x61, 0x30, 0xF0, 0x20, 0x6A,
+0x78, 0x67, 0x6F, 0xF5, 0x68, 0xDA, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0x80, 0xF0,
+0x6C, 0x9A, 0x02, 0xF0, 0x00, 0x6C, 0x8D, 0xEB,
+0x80, 0xF0, 0x6C, 0xDA, 0x07, 0x97, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x10, 0xF0, 0x23, 0x6B,
+0xEE, 0xF1, 0x78, 0x9B, 0x10, 0xF0, 0x23, 0x6A,
+0x8B, 0xF0, 0x1D, 0x4A, 0x30, 0xF0, 0x20, 0x68,
+0x40, 0xDB, 0x6F, 0xF5, 0x0E, 0x48, 0x00, 0x69,
+0x18, 0x6A, 0x58, 0xE9, 0x30, 0xF0, 0x20, 0x6B,
+0xAF, 0xF4, 0x18, 0x4B, 0x12, 0xEA, 0x69, 0xE2,
+0xA0, 0xF0, 0x94, 0xA2, 0x01, 0x6B, 0x8C, 0xEB,
+0x27, 0x23, 0x00, 0xF0, 0x8A, 0x98, 0x00, 0xF0,
+0x66, 0x98, 0x63, 0xEC, 0x21, 0x61, 0x61, 0x80,
+0x81, 0x43, 0x04, 0xD4, 0x07, 0x2C, 0x00, 0xF0,
+0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98, 0x40, 0xEA,
+0x04, 0x92, 0x14, 0x10, 0x80, 0xA0, 0x01, 0x4C,
+0x80, 0xC0, 0x80, 0xA0, 0x82, 0xEB, 0x08, 0x60,
+0xA0, 0xF0, 0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB,
+0x8C, 0xEB, 0xA0, 0xF0, 0x74, 0xC2, 0x08, 0x10,
+0x00, 0xF0, 0x4E, 0x98, 0x00, 0xF0, 0x92, 0x98,
+0x40, 0xEA, 0x00, 0x6A, 0x00, 0xF0, 0x4A, 0xD8,
+0x01, 0x49, 0x0A, 0x71, 0x18, 0x48, 0xC8, 0x61,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xE0, 0x63, 0x3F, 0x62,
+0xFF, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA, 0xBD, 0x67,
+0x56, 0xC5, 0x01, 0x6B, 0x42, 0x32, 0x57, 0xC5,
+0x6B, 0xEB, 0x30, 0xF0, 0x20, 0x6A, 0x70, 0xC5,
+0xAE, 0xF2, 0x5C, 0x9A, 0x03, 0x6B, 0x72, 0xC5,
+0x04, 0x6B, 0x94, 0xC5, 0x73, 0xC5, 0x04, 0x04,
+0x40, 0xEA, 0x3F, 0x97, 0x20, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x50, 0x9A, 0xA7, 0x44, 0x30, 0xF0,
+0x20, 0x6C, 0x01, 0x4D, 0xAC, 0xF0, 0x08, 0x4C,
+0x14, 0x6E, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x24, 0x67, 0x00, 0x18,
+0x5C, 0xD6, 0x47, 0xA1, 0x66, 0xA1, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0x40, 0x32,
+0xEB, 0xF6, 0x80, 0xA0, 0x69, 0xE2, 0x01, 0x69,
+0xEB, 0xF6, 0x52, 0xC8, 0x51, 0x67, 0x8C, 0xEA,
+0xFF, 0x6B, 0x1C, 0x2A, 0xEB, 0xF6, 0xB4, 0xA0,
+0xFE, 0x4A, 0xAC, 0xEA, 0xEB, 0xF6, 0x54, 0xC0,
+0x02, 0x6A, 0x8C, 0xEA, 0x6C, 0xEA, 0x51, 0x22,
+0xEB, 0xF6, 0x43, 0xA0, 0x0F, 0x6D, 0xEB, 0xF6,
+0x84, 0xA0, 0x4C, 0xED, 0x52, 0x36, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A, 0x6C, 0xED,
+0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72, 0x0D, 0x6A,
+0x41, 0x61, 0x3F, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
+0xEB, 0xF6, 0xF0, 0xA8, 0x02, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0x00, 0xF1, 0x01, 0x5F, 0xEB, 0xF6,
+0x54, 0xC0, 0x0C, 0x6A, 0x33, 0x60, 0x00, 0x6A,
+0xEB, 0xF6, 0x55, 0xC0, 0xEB, 0xF6, 0x56, 0xC0,
+0x00, 0x6A, 0xEB, 0xF6, 0x58, 0xC8, 0xEB, 0xF6,
+0x5A, 0xC8, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0x44, 0x9A, 0xEB, 0xF6, 0xC1, 0xA0, 0x10, 0xF0,
+0x23, 0x6D, 0x60, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A,
+0xCE, 0xF4, 0xB4, 0x9D, 0x6C, 0xEA, 0xD9, 0xE2,
+0xDC, 0x36, 0x00, 0x6A, 0xB5, 0xE6, 0x10, 0xF0,
+0x23, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x8E, 0xF2,
+0xCC, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0xAE, 0xF2, 0x40, 0x9A, 0xCC, 0xF0,
+0x0E, 0x4B, 0x00, 0x6C, 0xD9, 0xE3, 0x40, 0xEA,
+0xEB, 0xF6, 0x54, 0xA0, 0x4D, 0xE9, 0xEB, 0xF6,
+0x34, 0xC0, 0x00, 0x6A, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD0, 0x30, 0xF0,
+0x20, 0x68, 0xC0, 0xF1, 0x08, 0x48, 0xEB, 0xF6,
+0xB8, 0xA8, 0x30, 0xF0, 0x20, 0x6A, 0x30, 0xF0,
+0x20, 0x6B, 0x4E, 0xF2, 0x50, 0x9A, 0xCC, 0xF0,
+0x0E, 0x4B, 0x30, 0xF0, 0x20, 0x6C, 0xB5, 0xE3,
+0xCC, 0xF0, 0x08, 0x4C, 0x04, 0x6E, 0x40, 0xEA,
+0x0B, 0xF7, 0x63, 0xA0, 0x80, 0x6A, 0x4B, 0xEA,
+0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA, 0x05, 0x2A,
+0xEB, 0xF6, 0x58, 0xA8, 0x04, 0x4A, 0xEB, 0xF6,
+0x58, 0xC8, 0x30, 0xF0, 0x20, 0x68, 0xC0, 0xF1,
+0x08, 0x48, 0x0B, 0xF7, 0x61, 0xA0, 0x30, 0xF0,
+0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A, 0x0B, 0xF7,
+0x80, 0xA0, 0x0F, 0x6D, 0x6C, 0xED, 0x72, 0x36,
+0x40, 0xEA, 0x0E, 0x2A, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x54, 0x9A, 0x40, 0xEA, 0xEB, 0xF6,
+0x74, 0xA0, 0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA,
+0xEB, 0xF6, 0x54, 0xC0, 0x01, 0x6C, 0x56, 0x10,
+0x0B, 0xF7, 0x63, 0xA0, 0x7F, 0x6A, 0x6C, 0xEA,
+0xFF, 0x6B, 0x6C, 0xEA, 0x18, 0x22, 0x01, 0x72,
+0x45, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5,
+0x4C, 0x9A, 0x00, 0x6C, 0x40, 0xEA, 0x49, 0x22,
+0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF3, 0x50, 0x9A,
+0xCB, 0xF6, 0x9D, 0xA0, 0x00, 0x6D, 0x40, 0xEA,
+0x06, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4,
+0x54, 0x9A, 0x40, 0xEA, 0x3A, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
+0x75, 0xA2, 0x0B, 0xF7, 0x82, 0xA2, 0x01, 0x4B,
+0xEB, 0xF6, 0x75, 0xC2, 0xEB, 0xF6, 0x7A, 0xAA,
+0x6D, 0xE4, 0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6,
+0x95, 0xA2, 0xEB, 0xF6, 0x62, 0xA2, 0x8E, 0xEB,
+0x09, 0x2B, 0x10, 0xF0, 0x23, 0x6C, 0x0B, 0xF7,
+0xC2, 0xA2, 0x0B, 0xF4, 0x09, 0x4C, 0x04, 0xD3,
+0x00, 0x6D, 0x09, 0x10, 0x0B, 0xF7, 0xC2, 0xA2,
+0x10, 0xF0, 0x23, 0x6C, 0x00, 0x6A, 0x04, 0xD2,
+0xEB, 0xF3, 0x0D, 0x4C, 0xA2, 0x67, 0x64, 0x6A,
+0x58, 0xEE, 0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18,
+0x87, 0xD5, 0x1B, 0x10, 0xEB, 0xF6, 0x74, 0xA0,
+0x02, 0x6A, 0x4B, 0xEA, 0x6C, 0xEA, 0xEB, 0xF6,
+0x54, 0xC0, 0x02, 0x6C, 0xEB, 0xF6, 0xB2, 0xA8,
+0x0E, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xEB, 0xF6, 0x94, 0xA2, 0x02, 0x6B,
+0x6B, 0xEB, 0xEB, 0xF6, 0xB2, 0xAA, 0x8C, 0xEB,
+0xEB, 0xF6, 0x74, 0xC2, 0x03, 0x6C, 0x00, 0x18,
+0x4F, 0xD6, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x7C, 0xA2,
+0x01, 0x6A, 0x6C, 0xEA, 0x02, 0x22, 0x00, 0x18,
+0xA2, 0xD6, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x69, 0xC0, 0xF1, 0x08, 0x49,
+0xEB, 0xF6, 0x94, 0xA1, 0x01, 0x6A, 0xFF, 0x6B,
+0x8C, 0xEA, 0x00, 0xF1, 0x0C, 0x22, 0xEB, 0xF6,
+0xA0, 0xA1, 0x03, 0x6E, 0xAE, 0x32, 0xCC, 0xEA,
+0x6C, 0xEA, 0x02, 0x72, 0x7E, 0x60, 0x06, 0x67,
+0x4E, 0xE8, 0xE0, 0xF0, 0x02, 0x20, 0x01, 0x72,
+0x25, 0x60, 0x02, 0x6A, 0x4B, 0xEA, 0x8C, 0xEA,
+0xEB, 0xF6, 0x54, 0xC1, 0x02, 0x6A, 0xAC, 0xEA,
+0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1,
+0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED,
+0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
+0x01, 0x72, 0x01, 0x6C, 0x01, 0x61, 0x00, 0x6C,
+0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x18, 0x4F, 0xD6,
+0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF4, 0x54, 0x9A,
+0x40, 0xEA, 0xD9, 0x10, 0x02, 0x6A, 0xAC, 0xEA,
+0x6C, 0xEA, 0x11, 0x22, 0xEB, 0xF6, 0x43, 0xA1,
+0x0F, 0x6D, 0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED,
+0x52, 0x36, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x54, 0x9A, 0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA,
+0x01, 0x72, 0xA0, 0xF0, 0x14, 0x61, 0xEB, 0xF6,
+0xB2, 0xA9, 0x00, 0x6C, 0x00, 0x18, 0x4F, 0xD6,
+0x30, 0xF0, 0x20, 0x6A, 0xAC, 0xF0, 0x4D, 0xA2,
+0x5A, 0x33, 0x02, 0x73, 0x0D, 0x60, 0x03, 0x73,
+0x0F, 0x60, 0x01, 0x73, 0x05, 0x60, 0x3F, 0x6E,
+0x4C, 0xEE, 0xFF, 0x6A, 0x4C, 0xEE, 0x0E, 0x10,
+0x3F, 0x6B, 0x4C, 0xEB, 0x0A, 0x6E, 0x08, 0x10,
+0x3F, 0x6B, 0x4C, 0xEB, 0x64, 0x6E, 0x04, 0x10,
+0x3F, 0x6B, 0x4C, 0xEB, 0xE0, 0xF3, 0x08, 0x6E,
+0xD8, 0xEB, 0x12, 0xEE, 0x0A, 0x6A, 0x58, 0xEE,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0xEB, 0xF6, 0x7A, 0xAA, 0x10, 0xF0, 0x23, 0x6C,
+0xEB, 0xF3, 0x0D, 0x4C, 0x12, 0xEE, 0x7B, 0xE6,
+0x00, 0x6B, 0xEB, 0xF6, 0x75, 0xC2, 0x00, 0x6B,
+0xEB, 0xF6, 0x7A, 0xCA, 0xEB, 0xF6, 0x78, 0xCA,
+0x00, 0x6A, 0x04, 0xD2, 0xA2, 0x67, 0x64, 0x6A,
+0x62, 0x10, 0x02, 0x6A, 0xAC, 0xEA, 0x6C, 0xEA,
+0x10, 0x22, 0xEB, 0xF6, 0x43, 0xA1, 0x0F, 0x6D,
+0xEB, 0xF6, 0x84, 0xA1, 0x4C, 0xED, 0x52, 0x36,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x54, 0x9A,
+0x6C, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x01, 0x72,
+0x62, 0x61, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
+0x00, 0x18, 0x4F, 0xD6, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6, 0x87, 0xA2,
+0xEB, 0xF6, 0x76, 0xA2, 0xFF, 0x4C, 0x6E, 0xEC,
+0x03, 0x2C, 0xEB, 0xF6, 0x66, 0xA2, 0x05, 0x10,
+0x01, 0x4B, 0xEB, 0xF6, 0x76, 0xC2, 0xEB, 0xF6,
+0x65, 0xA2, 0x7A, 0x32, 0x02, 0x72, 0x0D, 0x60,
+0x03, 0x72, 0x0F, 0x60, 0x01, 0x72, 0x05, 0x60,
+0x3F, 0x6A, 0x6C, 0xEA, 0xFF, 0x6B, 0x6C, 0xEA,
+0x0E, 0x10, 0x3F, 0x6A, 0x6C, 0xEA, 0x0A, 0x6B,
+0x08, 0x10, 0x3F, 0x6A, 0x6C, 0xEA, 0x64, 0x6B,
+0x04, 0x10, 0x3F, 0x6A, 0x6C, 0xEA, 0xE0, 0xF3,
+0x08, 0x6B, 0x78, 0xEA, 0x12, 0xEA, 0x0A, 0x6B,
+0x78, 0xEA, 0x30, 0xF0, 0x20, 0x6B, 0xCC, 0xF0,
+0x62, 0xAB, 0x00, 0x6C, 0x64, 0x6E, 0x12, 0xEA,
+0x6B, 0xE2, 0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1,
+0x08, 0x4B, 0xEB, 0xF6, 0x95, 0xC3, 0x00, 0x6C,
+0xEB, 0xF6, 0x9A, 0xCB, 0xEB, 0xF6, 0x98, 0xCB,
+0x00, 0x6B, 0x10, 0xF0, 0x23, 0x6C, 0x04, 0xD3,
+0xEB, 0xF3, 0x0D, 0x4C, 0xA3, 0x67, 0xD8, 0xEA,
+0x01, 0x6F, 0x12, 0xEE, 0x00, 0x18, 0x87, 0xD5,
+0x1E, 0x10, 0xEB, 0xF6, 0xB2, 0xA9, 0x00, 0x6C,
+0x00, 0x18, 0x4F, 0xD6, 0xEB, 0xF6, 0x15, 0xC1,
+0xEB, 0xF6, 0x1A, 0xC9, 0xEB, 0xF6, 0x18, 0xC9,
+0x00, 0x18, 0xFB, 0xD6, 0x10, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xEB, 0xF6,
+0x94, 0xA2, 0x02, 0x6B, 0x6B, 0xEB, 0xEB, 0xF6,
+0xB2, 0xAA, 0x8C, 0xEB, 0xEB, 0xF6, 0x74, 0xC2,
+0x01, 0x6C, 0x00, 0x18, 0x4F, 0xD6, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x04, 0x67, 0x25, 0x67, 0x4C, 0xEE,
+0x4C, 0xE8, 0x4C, 0xE9, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF4, 0x4C, 0x9A, 0x04, 0xD6, 0x90, 0x67,
+0xB1, 0x67, 0x40, 0xEA, 0x90, 0x67, 0x80, 0x18,
+0x87, 0x0A, 0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF6,
+0x63, 0xA2, 0x00, 0x6A, 0x09, 0x2B, 0x04, 0x97,
+0x30, 0xF0, 0x20, 0x6C, 0x25, 0xF6, 0x08, 0x4C,
+0xB0, 0x67, 0xD1, 0x67, 0x80, 0x18, 0x10, 0x0A,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0xFF, 0x6D, 0x8C, 0xED, 0x18, 0x4D, 0x01, 0x6A,
+0x44, 0xED, 0x00, 0x6C, 0xA2, 0x67, 0x00, 0x18,
+0x23, 0xD0, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xDE, 0x63, 0x43, 0x62, 0x42, 0xD1, 0x41, 0xD0,
+0x01, 0x6A, 0x7D, 0x67, 0x4B, 0xEA, 0x54, 0xC3,
+0x0F, 0x6A, 0x56, 0xC3, 0x10, 0x6A, 0x57, 0xC3,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3, 0x58, 0x9A,
+0xFF, 0x69, 0x8C, 0xE9, 0x30, 0x31, 0x49, 0xE1,
+0x40, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0x06, 0x04,
+0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x04, 0x05,
+0x04, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF5, 0x44, 0x9A, 0x07, 0x04, 0x04, 0x05,
+0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E, 0x04, 0xD2,
+0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA, 0x10, 0xF0,
+0x23, 0x6A, 0x0E, 0xF5, 0x48, 0x9A, 0x08, 0x04,
+0x04, 0x05, 0x49, 0xE1, 0x40, 0x9A, 0x04, 0x6E,
+0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98, 0x40, 0xEA,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF5, 0x4C, 0x9A,
+0x09, 0x04, 0x04, 0x05, 0x45, 0xE1, 0x40, 0x99,
+0x04, 0x6E, 0x04, 0xD2, 0x4E, 0xF2, 0x50, 0x98,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x5C, 0x9A, 0x05, 0x04, 0x40, 0xEA, 0x43, 0x97,
+0x42, 0x91, 0x41, 0x90, 0x22, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x23, 0x6A, 0x10, 0xF0, 0x23, 0x6B,
+0x0E, 0xF5, 0x50, 0x9A, 0x0E, 0xF5, 0x74, 0x9B,
+0x00, 0xA2, 0x20, 0xA3, 0xFF, 0x6A, 0x4C, 0xE8,
+0x4C, 0xE9, 0x2A, 0xE8, 0x43, 0x60, 0x10, 0xF0,
+0x23, 0x6A, 0xEE, 0xF3, 0x58, 0x9A, 0x10, 0x33,
+0x49, 0xE3, 0x40, 0xA2, 0xFF, 0x6B, 0x6C, 0xEA,
+0x56, 0x32, 0x6C, 0xEA, 0x07, 0x5A, 0x2C, 0x60,
+0x10, 0xF0, 0x23, 0x6B, 0x48, 0x32, 0xCE, 0xF1,
+0x1C, 0x4B, 0x4D, 0xE3, 0x40, 0x9B, 0x00, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x6F, 0xF6, 0x43, 0xA2,
+0x1F, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x54, 0x9A, 0x18, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x4E, 0xF2, 0x5C, 0x9A, 0x13, 0x10, 0x30, 0xF0,
+0x20, 0x6A, 0x6E, 0xF2, 0x40, 0x9A, 0x0E, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2, 0x44, 0x9A,
+0x09, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF2,
+0x48, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x6E, 0xF2, 0x4C, 0x9A, 0x90, 0x67, 0x40, 0xEA,
+0x01, 0x48, 0x7F, 0x6A, 0x4C, 0xE8, 0x0A, 0xE9,
+0xC2, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF5,
+0x50, 0x9A, 0x20, 0xC2, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF5, 0x78, 0x9A,
+0x02, 0x6C, 0x00, 0xF4, 0x00, 0x6D, 0x40, 0x9B,
+0x30, 0xF0, 0x20, 0x69, 0x8D, 0xEA, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4, 0x7C, 0x9A,
+0xFF, 0xF7, 0x1F, 0x6C, 0x40, 0xAB, 0x8C, 0xEA,
+0xAD, 0xEA, 0x8C, 0xEA, 0x40, 0xCB, 0x10, 0xF0,
+0x23, 0x6A, 0x0E, 0xF5, 0x1C, 0x9A, 0x10, 0xF0,
+0x23, 0x6B, 0x2E, 0xF5, 0x00, 0x4B, 0x40, 0x98,
+0x60, 0x9B, 0x0A, 0x6C, 0x6C, 0xEA, 0x10, 0xF0,
+0x23, 0x6B, 0xAE, 0xF2, 0x78, 0x9B, 0x6D, 0xEA,
+0x40, 0xD8, 0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA,
+0x40, 0x98, 0xDF, 0xF7, 0x01, 0x6B, 0x6B, 0xEB,
+0x6C, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF5,
+0x64, 0x9B, 0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8,
+0xCE, 0xF4, 0x5C, 0x99, 0x40, 0xEA, 0x10, 0xF0,
+0x23, 0x6C, 0x2E, 0xF5, 0x00, 0x4C, 0x40, 0x98,
+0x80, 0x9C, 0x8C, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
+0x5C, 0x99, 0x0A, 0x6C, 0x40, 0xEA, 0x40, 0x98,
+0x1D, 0xF0, 0x01, 0x6B, 0x6B, 0xEB, 0x6C, 0xEA,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF5, 0x68, 0x9B,
+0x0A, 0x6C, 0x6D, 0xEA, 0x40, 0xD8, 0xCE, 0xF4,
+0x5C, 0x99, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF5, 0x5C, 0x9A,
+0x30, 0xF0, 0x20, 0x6B, 0xC0, 0xF1, 0x08, 0x4B,
+0x80, 0xA2, 0xEB, 0xF6, 0xD4, 0xA3, 0xEB, 0xF6,
+0x9C, 0xC3, 0xA0, 0xAA, 0x01, 0xF0, 0x00, 0x6C,
+0xAC, 0xEC, 0x83, 0x35, 0x03, 0x6C, 0xAE, 0x35,
+0x8B, 0xEC, 0xA4, 0x35, 0xCC, 0xEC, 0xAD, 0xEC,
+0xEB, 0xF6, 0x94, 0xC3, 0x10, 0xF0, 0x23, 0x6C,
+0x4E, 0xF5, 0x80, 0x9C, 0xA0, 0xAC, 0xEB, 0xF6,
+0xBE, 0xCB, 0xA0, 0xAA, 0xBF, 0xF7, 0x1F, 0x6B,
+0xAC, 0xEB, 0x60, 0xCA, 0xA0, 0xAA, 0x7F, 0xF7,
+0x1F, 0x6B, 0xAC, 0xEB, 0x60, 0xCA, 0xC0, 0xAA,
+0xFE, 0xF7, 0x1F, 0x6B, 0xFF, 0xF7, 0x1F, 0x6D,
+0xCC, 0xEB, 0x60, 0xCA, 0x40, 0xAC, 0xFF, 0x6B,
+0x21, 0x4B, 0xAC, 0xEA, 0x6D, 0xEA, 0xAC, 0xEA,
+0x40, 0xCC, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x10, 0xF0, 0x23, 0x6B,
+0xEB, 0xF6, 0x9C, 0xA2, 0x2E, 0xF5, 0x7C, 0x9B,
+0x01, 0x6E, 0x80, 0xC3, 0x10, 0xF0, 0x23, 0x6C,
+0xEB, 0xF6, 0xBE, 0xAA, 0x4E, 0xF5, 0x80, 0x9C,
+0xA0, 0xCC, 0xEB, 0xF6, 0x54, 0xA2, 0x80, 0xAB,
+0xFF, 0xF7, 0x1F, 0x6D, 0x46, 0x32, 0xCC, 0xEA,
+0xAC, 0xEC, 0x40, 0x32, 0xFE, 0xF7, 0x1E, 0x4E,
+0x4C, 0x32, 0xCC, 0xEC, 0x8D, 0xEA, 0xAC, 0xEA,
+0x40, 0xCB, 0x20, 0xE8, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD0, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF4,
+0x64, 0x9B, 0xE9, 0xA4, 0x48, 0xA4, 0xA0, 0xAB,
+0xE0, 0x37, 0x5D, 0xE7, 0xFF, 0xF7, 0x1F, 0x6A,
+0x4C, 0xEF, 0x4C, 0xED, 0x4A, 0xA4, 0xCB, 0xA4,
+0x02, 0x5A, 0x04, 0x61, 0x02, 0x72, 0x0B, 0x6A,
+0x30, 0x61, 0x0C, 0x10, 0x00, 0xF1, 0x01, 0x5F,
+0x2B, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0xAB, 0xF6, 0x03, 0x4B, 0x2B, 0xF6,
+0xE1, 0xC2, 0x0B, 0x10, 0x00, 0xF1, 0x01, 0x5F,
+0x1F, 0x60, 0x30, 0xF0, 0x20, 0x6B, 0x30, 0xF0,
+0x20, 0x6A, 0xAB, 0xF7, 0x03, 0x4B, 0x2B, 0xF6,
+0xE2, 0xC2, 0xB5, 0xE6, 0x10, 0xF0, 0x23, 0x6E,
+0x00, 0x6A, 0x4E, 0xF5, 0x04, 0x9E, 0x10, 0xF0,
+0x23, 0x6E, 0x04, 0xD2, 0x05, 0xD2, 0x8E, 0xF2,
+0xCC, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x40, 0x9A, 0xBC, 0x35, 0x00, 0x6C, 0x15, 0xE5,
+0xD9, 0xE3, 0x40, 0xEA, 0x00, 0x6A, 0x01, 0x10,
+0x0A, 0x6A, 0x07, 0x97, 0x06, 0x90, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0xFF, 0x6A, 0x8C, 0xEA, 0x01, 0x2A, 0x01, 0x6A,
+0x30, 0xF0, 0x20, 0x6C, 0xC0, 0xF1, 0x08, 0x4C,
+0xCB, 0xF6, 0xDD, 0xA4, 0x38, 0x26, 0x8D, 0xE2,
+0x4B, 0xF4, 0x78, 0xA3, 0x34, 0x23, 0x10, 0xF0,
+0x23, 0x6B, 0x6E, 0xF4, 0x64, 0x9B, 0xFF, 0xF7,
+0x1F, 0x6D, 0x01, 0x72, 0x60, 0xAB, 0x6C, 0xED,
+0x03, 0x60, 0x02, 0x72, 0x08, 0x60, 0x27, 0x10,
+0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF6, 0x03, 0x4B,
+0x4B, 0xF4, 0xF9, 0xA4, 0x06, 0x10, 0x4B, 0xF4,
+0xFA, 0xA4, 0x30, 0xF0, 0x20, 0x6B, 0xAB, 0xF7,
+0x03, 0x4B, 0xE1, 0xF7, 0x1F, 0x6A, 0xAC, 0xEA,
+0x10, 0xF0, 0x23, 0x6D, 0x8E, 0xF2, 0xAC, 0x9D,
+0xD9, 0xE2, 0x00, 0x6A, 0xB5, 0xE3, 0x10, 0xF0,
+0x23, 0x6B, 0x04, 0xD2, 0x05, 0xD2, 0x4E, 0xF5,
+0x64, 0x9B, 0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2,
+0x40, 0x9A, 0xDC, 0x36, 0x00, 0x6C, 0x79, 0xE6,
+0x40, 0xEA, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
+0x07, 0x97, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A,
+0xC1, 0xF7, 0x69, 0xA2, 0xFF, 0x6C, 0xFF, 0x4B,
+0x8C, 0xEB, 0xFE, 0x5B, 0x7D, 0x60, 0xC1, 0xF7,
+0x69, 0xA2, 0x20, 0x6C, 0x6E, 0xEC, 0x02, 0x2C,
+0x04, 0x6B, 0x4E, 0x10, 0xC2, 0x6C, 0x6E, 0xEC,
+0x11, 0x2C, 0x02, 0x6B, 0xC1, 0xF7, 0x6C, 0xC2,
+0xC1, 0xF7, 0xAB, 0xA2, 0x08, 0x6B, 0xC1, 0xF7,
+0x74, 0xC2, 0x01, 0x6B, 0xC1, 0xF7, 0x6D, 0xC2,
+0x01, 0x6B, 0x64, 0xED, 0xC1, 0xF7, 0x70, 0xDA,
+0x6C, 0x33, 0x47, 0x10, 0xEF, 0x73, 0x34, 0x61,
+0x03, 0x6B, 0xC1, 0xF7, 0x6C, 0xC2, 0xC1, 0xF7,
+0x6A, 0xA2, 0x0F, 0x6D, 0x01, 0x6C, 0xAC, 0xEB,
+0x01, 0x73, 0xC1, 0xF7, 0x94, 0xC2, 0x0B, 0x61,
+0xC1, 0xF7, 0x8B, 0xA2, 0x02, 0x6B, 0xC1, 0xF7,
+0x6D, 0xC2, 0x01, 0x6B, 0x64, 0xEC, 0xC1, 0xF7,
+0x70, 0xDA, 0x64, 0x33, 0x08, 0x10, 0xC1, 0xF7,
+0x8D, 0xC2, 0xC1, 0xF7, 0x8B, 0xA2, 0x01, 0x6B,
+0x64, 0xEC, 0xC1, 0xF7, 0x70, 0xDA, 0xC1, 0xF7,
+0x78, 0xDA, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF2,
+0x78, 0x9B, 0xC1, 0xF7, 0x90, 0x9A, 0x83, 0xEB,
+0x01, 0x6B, 0x01, 0x61, 0x00, 0x6B, 0xC1, 0xF7,
+0x7C, 0xC2, 0xC1, 0xF7, 0x7D, 0xC2, 0x20, 0xE8,
+0x1C, 0x6C, 0x6E, 0xEC, 0x15, 0x2C, 0x05, 0x6B,
+0xC1, 0xF7, 0xAB, 0xA2, 0xC1, 0xF7, 0x6C, 0xC2,
+0x01, 0x6B, 0xC1, 0xF7, 0x74, 0xC2, 0xC1, 0xF7,
+0x6D, 0xC2, 0x01, 0x6B, 0x64, 0xED, 0xC1, 0xF7,
+0x70, 0xDA, 0xC1, 0xF7, 0x78, 0xDA, 0xC1, 0xF7,
+0x9C, 0xC2, 0xC1, 0xF7, 0x9D, 0xC2, 0x20, 0xE8,
+0xC1, 0xF7, 0x8B, 0xA2, 0x01, 0x6B, 0xC1, 0xF7,
+0x6C, 0xC2, 0xC1, 0xF7, 0x74, 0xC2, 0xC1, 0xF7,
+0x6D, 0xC2, 0x01, 0x6B, 0x64, 0xEC, 0xC1, 0xF7,
+0x70, 0xDA, 0xC1, 0xF7, 0x78, 0xDA, 0x00, 0x6B,
+0xC1, 0xF7, 0x7C, 0xC2, 0xC1, 0xF7, 0x7D, 0xC2,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF5,
+0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C, 0x2E, 0xF3,
+0x8C, 0x9C, 0x40, 0x9B, 0x00, 0x6D, 0x10, 0xF0,
+0x23, 0x6F, 0x8D, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x4E, 0xF5, 0x8C, 0x9A, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF5, 0x70, 0x9B, 0x00, 0x6A,
+0x40, 0xC4, 0x01, 0x6A, 0x40, 0xC3, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF5, 0x74, 0x9B, 0xEE, 0xF2,
+0xE4, 0x9F, 0x10, 0xF0, 0x30, 0x68, 0x40, 0xC3,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF5, 0x78, 0x9B,
+0xC1, 0xF7, 0x08, 0x48, 0xA0, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF5, 0xDC, 0x9B, 0x60, 0x9E,
+0xED, 0xEB, 0x60, 0xDE, 0x10, 0xF0, 0x23, 0x6B,
+0x6E, 0xF5, 0x60, 0x9B, 0x18, 0x6E, 0xA0, 0xC3,
+0x40, 0xC4, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x4C, 0x9A, 0x90, 0x67, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x50, 0x9A, 0x81, 0x40,
+0x40, 0xEA, 0x01, 0x72, 0x21, 0x61, 0x00, 0x18,
+0xAE, 0xD8, 0x10, 0xF0, 0x30, 0x6A, 0x00, 0xF0,
+0x00, 0x4A, 0x10, 0xF0, 0x23, 0x6B, 0xC1, 0xF7,
+0x90, 0x9A, 0x2E, 0xF2, 0x78, 0x9B, 0x83, 0xEB,
+0x09, 0x60, 0xC1, 0xF7, 0x7D, 0xA2, 0x06, 0x2B,
+0xC1, 0xF7, 0x6D, 0xA2, 0x00, 0xF6, 0x60, 0x33,
+0xC1, 0xF7, 0x78, 0xDA, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0xC1, 0xF7, 0x88, 0xA2,
+0x01, 0x6B, 0x8D, 0xEB, 0xC1, 0xF7, 0x68, 0xC2,
+0x05, 0x97, 0x04, 0x90, 0x03, 0x63, 0x00, 0xEF,
+0x10, 0xF0, 0x23, 0x6B, 0xFF, 0x6A, 0x8C, 0xEA,
+0x4E, 0xF5, 0x8C, 0x9B, 0x10, 0xF0, 0x23, 0x6B,
+0x6E, 0xF5, 0xC4, 0x9B, 0x00, 0x6D, 0xA0, 0xC4,
+0x60, 0x9E, 0x00, 0xF3, 0x01, 0x6F, 0xEB, 0xEF,
+0xEC, 0xEB, 0x60, 0xDE, 0x10, 0xF0, 0x23, 0x6E,
+0x6E, 0xF5, 0xC8, 0x9E, 0x01, 0x6B, 0x60, 0xC6,
+0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF5, 0xCC, 0x9E,
+0xA0, 0xC6, 0x10, 0xF0, 0x23, 0x6D, 0x6E, 0xF5,
+0xB0, 0x9D, 0x40, 0xC5, 0x60, 0xC4, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF5, 0xAC, 0x9B,
+0x00, 0x6B, 0xFF, 0x6A, 0x60, 0xC5, 0x10, 0xF0,
+0x23, 0x6B, 0x8C, 0xEA, 0x6E, 0xF5, 0x84, 0x9B,
+0x00, 0xF3, 0x00, 0x6E, 0x10, 0xF0, 0x23, 0x6F,
+0x60, 0x9C, 0x6E, 0xF5, 0xF8, 0x9F, 0xCD, 0xEB,
+0x60, 0xDC, 0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5,
+0x88, 0x9C, 0x01, 0x6B, 0x60, 0xC4, 0x10, 0xF0,
+0x23, 0x6C, 0x6E, 0xF5, 0x94, 0x9C, 0x60, 0xC4,
+0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5, 0x8C, 0x9C,
+0x60, 0xC4, 0x10, 0xF0, 0x23, 0x6C, 0x4E, 0xF5,
+0xDC, 0x9C, 0x80, 0x9E, 0xEC, 0xEC, 0x80, 0xDE,
+0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5, 0x90, 0x9C,
+0x40, 0xC4, 0x60, 0xC5, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x6C, 0xEA, 0xF8, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF5, 0x50, 0x9A, 0xFF, 0x6B, 0x40, 0xA2,
+0x6C, 0xEA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x05, 0x6C, 0x00, 0x18, 0x3C, 0xD9, 0x01, 0x6B,
+0x4C, 0xEB, 0xFA, 0x2B, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x06, 0x6C, 0x00, 0x18, 0x2A, 0xD9, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2,
+0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x00, 0x18,
+0x5D, 0xD9, 0x05, 0x97, 0x01, 0x6A, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF5, 0xAC, 0x9A, 0x00, 0x6A, 0x00, 0xF3,
+0x00, 0x6E, 0x40, 0xC5, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF5, 0x64, 0x9A, 0x10, 0xF0, 0x23, 0x6F,
+0x6E, 0xF5, 0xF8, 0x9F, 0x40, 0x9B, 0xCD, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF5,
+0x68, 0x9B, 0x01, 0x6A, 0x03, 0x6E, 0x40, 0xC3,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF5, 0x74, 0x9B,
+0xC0, 0xC3, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF5,
+0x6C, 0x9B, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6B,
+0x4E, 0xF5, 0xDC, 0x9B, 0x60, 0x9E, 0xEC, 0xEB,
+0x60, 0xDE, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF5,
+0x70, 0x9B, 0x61, 0x6E, 0xCB, 0xEE, 0xC0, 0xC3,
+0x40, 0xC5, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
+0xF8, 0x2A, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x50, 0x9A, 0x60, 0xA2, 0x60, 0xC4, 0x60, 0xA2,
+0x61, 0xC4, 0x40, 0xA2, 0x42, 0xC4, 0x01, 0x6A,
+0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0x8E, 0xF5, 0x48, 0x98, 0x24, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x44, 0x9A,
+0x02, 0x6C, 0x40, 0xEA, 0x8E, 0xF5, 0x48, 0x98,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF5,
+0xAC, 0x9A, 0x00, 0x6A, 0x00, 0xF3, 0x01, 0x6C,
+0x40, 0xC5, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x64, 0x9A, 0x8B, 0xEC, 0x01, 0x6E, 0x40, 0x9B,
+0x22, 0x37, 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF5, 0x48, 0x9A, 0x03, 0x6B,
+0xE2, 0x34, 0xC0, 0xC2, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF5, 0x4C, 0x9A, 0x60, 0xC2, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF5, 0x50, 0x9A, 0x52, 0x6B,
+0x60, 0xC2, 0xFF, 0x6B, 0x6C, 0xEC, 0x6C, 0xEF,
+0x6C, 0xE9, 0x80, 0xC2, 0xE0, 0xC2, 0x20, 0xC2,
+0xC0, 0xC5, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA,
+0xF8, 0x2A, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x40, 0x9A, 0x40, 0xEA, 0x01, 0x6B, 0x4C, 0xEB,
+0xF8, 0x2B, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x48, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x44, 0x9A, 0x3E, 0x6C, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x4C, 0x9A,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x01, 0x6A, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0x8E, 0xF5, 0x48, 0x98,
+0x24, 0x67, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C, 0x40, 0xEA,
+0x8E, 0xF5, 0x48, 0x98, 0x40, 0xEA, 0x10, 0xF0,
+0x23, 0x6A, 0x4E, 0xF5, 0xAC, 0x9A, 0x00, 0x6A,
+0x00, 0xF3, 0x01, 0x6C, 0x40, 0xC5, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF5, 0x64, 0x9A, 0x8B, 0xEC,
+0x01, 0x6E, 0x40, 0x9B, 0x22, 0x37, 0x8C, 0xEA,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x48, 0x9A, 0x03, 0x6B, 0xE2, 0x34, 0xC0, 0xC2,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5, 0x4C, 0x9A,
+0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x50, 0x9A, 0x20, 0x6B, 0x60, 0xC2, 0xFF, 0x6B,
+0x6C, 0xEC, 0x6C, 0xEF, 0x6C, 0xE9, 0x80, 0xC2,
+0xE0, 0xC2, 0x20, 0xC2, 0xC0, 0xC5, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2,
+0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x40, 0x9A, 0x40, 0xEA,
+0x01, 0x6B, 0x4C, 0xEB, 0xF8, 0x2B, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x48, 0x9A, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x44, 0x9A,
+0x3E, 0x6C, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x4C, 0x9A, 0x40, 0xEA, 0x07, 0x97,
+0x06, 0x91, 0x05, 0x90, 0x01, 0x6A, 0x04, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0x63, 0x01, 0xD1,
+0x00, 0xD0, 0x00, 0x6A, 0x04, 0xD6, 0x62, 0x67,
+0x6C, 0x10, 0x10, 0xF0, 0x23, 0x6E, 0x4E, 0xF5,
+0xCC, 0x9E, 0x00, 0x6F, 0x10, 0xF0, 0x23, 0x68,
+0xE0, 0xC6, 0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF5,
+0xE4, 0x9E, 0xEE, 0xF4, 0x08, 0x98, 0x0C, 0x5D,
+0xC0, 0x9F, 0x0C, 0xEE, 0x00, 0xF3, 0x00, 0x68,
+0x0D, 0xEE, 0xC0, 0xDF, 0x10, 0xF0, 0x23, 0x6E,
+0x6E, 0xF5, 0xC8, 0x9E, 0x01, 0x6F, 0x10, 0xF0,
+0x23, 0x68, 0xE0, 0xC6, 0x10, 0xF0, 0x23, 0x6E,
+0x4E, 0xF5, 0xFC, 0x9E, 0x6E, 0xF5, 0x18, 0x98,
+0xC0, 0x9F, 0x0C, 0xEE, 0xC0, 0xDF, 0x08, 0x61,
+0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF5, 0xD4, 0x9E,
+0x0B, 0x6F, 0x0B, 0x4A, 0xE0, 0xC6, 0x08, 0x10,
+0x10, 0xF0, 0x23, 0x6F, 0x6E, 0xF5, 0xF4, 0x9F,
+0xFF, 0x6E, 0xAC, 0xEE, 0xC0, 0xC7, 0xA9, 0xE2,
+0x10, 0xF0, 0x23, 0x6E, 0x6E, 0xF5, 0xCC, 0x9E,
+0x03, 0x6F, 0x82, 0x31, 0xE0, 0xC6, 0x10, 0xF0,
+0x23, 0x6E, 0x6E, 0xF5, 0xD0, 0x9E, 0x22, 0x30,
+0xE0, 0xC6, 0xFF, 0x6F, 0xEC, 0xE8, 0xEC, 0xE9,
+0x8C, 0xEF, 0x00, 0xC6, 0x20, 0xC6, 0xE0, 0xC6,
+0x10, 0xF0, 0x23, 0x6E, 0x4E, 0xF5, 0xCC, 0x9E,
+0x01, 0x6F, 0xE0, 0xC6, 0x10, 0xF0, 0x23, 0x6E,
+0x6E, 0xF5, 0xDC, 0x9E, 0xE0, 0xA6, 0x01, 0x6E,
+0xEC, 0xEE, 0xF8, 0x2E, 0x04, 0x97, 0x79, 0xE7,
+0x08, 0x10, 0x10, 0xF0, 0x23, 0x6F, 0x6E, 0xF5,
+0xF0, 0x9F, 0x01, 0x4B, 0xE0, 0xA7, 0xE0, 0xC6,
+0x01, 0x4E, 0x43, 0xEB, 0xF6, 0x61, 0x0C, 0x5D,
+0x02, 0x60, 0x00, 0x6D, 0x02, 0x10, 0x0B, 0x4C,
+0xF5, 0x4D, 0x93, 0x2D, 0x01, 0x91, 0x00, 0x90,
+0x01, 0x6A, 0x01, 0x63, 0x20, 0xE8, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x48, 0x9A,
+0x0A, 0xD4, 0x0C, 0xD6, 0x05, 0x67, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x44, 0x9A,
+0x02, 0x6C, 0x00, 0x69, 0x40, 0xEA, 0x04, 0xD1,
+0x66, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x48, 0x9A, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF5, 0x4C, 0x9A, 0x00, 0x6B, 0x00, 0xF3,
+0x01, 0x6C, 0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF5, 0x64, 0x9A, 0x8B, 0xEC, 0x0C, 0x58,
+0x40, 0x9B, 0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF5, 0x48, 0x9A, 0x01, 0x6B,
+0x60, 0xC2, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5,
+0x4C, 0x9A, 0x03, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF5, 0x50, 0x9A, 0x02, 0x6B,
+0x60, 0xC2, 0x0A, 0x93, 0x62, 0x35, 0xA2, 0x34,
+0xFF, 0x6B, 0x6C, 0xEC, 0x6C, 0xED, 0x80, 0xC2,
+0xA0, 0xC2, 0x0A, 0x94, 0x8C, 0xEB, 0x60, 0xC2,
+0x05, 0x61, 0x0B, 0x49, 0x0C, 0x93, 0x04, 0x94,
+0x89, 0xE3, 0x0C, 0x10, 0x05, 0xE1, 0xFA, 0x17,
+0x10, 0xF0, 0x23, 0x6B, 0x80, 0xA2, 0x6E, 0xF5,
+0x70, 0x9B, 0x01, 0x4A, 0x80, 0xC3, 0x04, 0x93,
+0x01, 0x4B, 0x04, 0xD3, 0x04, 0x94, 0x23, 0xEC,
+0xF3, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF5,
+0x4C, 0x9A, 0x01, 0x6B, 0x60, 0xC2, 0x10, 0xF0,
+0x23, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2,
+0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x40, 0x9A, 0x40, 0xEA,
+0x01, 0x6B, 0x4C, 0xEB, 0xF8, 0x2B, 0x0C, 0x58,
+0x02, 0x60, 0x00, 0x68, 0x04, 0x10, 0x0A, 0x92,
+0xF5, 0x48, 0x0B, 0x4A, 0x0A, 0xD2, 0x99, 0x28,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x48, 0x9A,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x44, 0x9A, 0x3E, 0x6C, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x4C, 0x9A, 0x40, 0xEA,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x01, 0x6A,
+0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x30, 0xF0, 0x20, 0x68,
+0x8E, 0xF5, 0x48, 0x98, 0xFF, 0x69, 0x8C, 0xE9,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x44, 0x9A, 0x02, 0x6C, 0x40, 0xEA, 0x8E, 0xF5,
+0x48, 0x98, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF5, 0x6C, 0x9A, 0x00, 0x6A, 0x00, 0xF3,
+0x01, 0x6D, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF5, 0x84, 0x9A, 0xAB, 0xED, 0x40, 0x9C,
+0xAC, 0xEA, 0x40, 0xDC, 0x10, 0xF0, 0x23, 0x6C,
+0x6E, 0xF5, 0x88, 0x9C, 0x01, 0x6A, 0x3E, 0x6D,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5,
+0x8C, 0x9C, 0xAB, 0xED, 0x40, 0xC4, 0x10, 0xF0,
+0x23, 0x6C, 0x6E, 0xF5, 0x90, 0x9C, 0xA0, 0xC4,
+0x20, 0xC4, 0x40, 0xC3, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF5, 0x5C, 0x9A, 0x60, 0xA2, 0x01, 0x6A,
+0x6C, 0xEA, 0xF8, 0x2A, 0x00, 0x18, 0x5D, 0xD9,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x40, 0x9A,
+0x40, 0xEA, 0x01, 0x6B, 0x4C, 0xEB, 0xF8, 0x2B,
+0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5, 0x48, 0x9A,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x44, 0x9A, 0x3E, 0x6C, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x4C, 0x9A, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x58, 0x9A,
+0x0A, 0x6C, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x01, 0x6A, 0x04, 0x63, 0x00, 0xEF,
+0xFC, 0x63, 0x07, 0x62, 0x06, 0xD1, 0x05, 0xD0,
+0x30, 0xF0, 0x20, 0x68, 0x8E, 0xF5, 0x48, 0x98,
+0xFF, 0x69, 0x8C, 0xE9, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C,
+0x40, 0xEA, 0x8E, 0xF5, 0x48, 0x98, 0x40, 0xEA,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF5, 0x6C, 0x9A,
+0x00, 0x6A, 0x00, 0xF3, 0x01, 0x6D, 0x40, 0xC3,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5, 0x84, 0x9A,
+0xAB, 0xED, 0x40, 0x9C, 0xAC, 0xEA, 0x40, 0xDC,
+0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5, 0x88, 0x9C,
+0x01, 0x6A, 0x3B, 0x6D, 0x40, 0xC4, 0x10, 0xF0,
+0x23, 0x6C, 0x6E, 0xF5, 0x8C, 0x9C, 0xAB, 0xED,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6C, 0x6E, 0xF5,
+0x90, 0x9C, 0xA0, 0xC4, 0x20, 0xC4, 0x40, 0xC3,
+0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A,
+0x60, 0xA2, 0x01, 0x6A, 0x6C, 0xEA, 0xF8, 0x2A,
+0x00, 0x18, 0x5D, 0xD9, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x40, 0x9A, 0x40, 0xEA, 0x01, 0x6B,
+0x4C, 0xEB, 0xF8, 0x2B, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x48, 0x9A, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x44, 0x9A, 0x3E, 0x6C,
+0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x4C, 0x9A, 0x40, 0xEA, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x01, 0x6A, 0x04, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x10, 0xF0, 0x30, 0x6B, 0x00, 0xF0,
+0x00, 0x4B, 0xEC, 0xEA, 0x05, 0xD2, 0xC1, 0xF7,
+0x50, 0x9B, 0x04, 0x67, 0x0B, 0xD5, 0xC1, 0xF7,
+0x8D, 0xA3, 0x0C, 0xD6, 0x62, 0x67, 0x00, 0x69,
+0x06, 0x10, 0x01, 0x49, 0xFF, 0x6D, 0xAC, 0xE9,
+0x23, 0xEC, 0x01, 0x61, 0x63, 0xE0, 0x43, 0xE8,
+0xF8, 0x60, 0x10, 0xF0, 0x30, 0x6B, 0x00, 0xF0,
+0x00, 0x4B, 0xC1, 0xF7, 0x4E, 0xA3, 0x04, 0xD3,
+0x2E, 0xEA, 0x06, 0x22, 0x91, 0x67, 0x00, 0x18,
+0x7D, 0xDA, 0x04, 0x92, 0xC1, 0xF7, 0x2E, 0xC2,
+0x10, 0xF0, 0x30, 0x6A, 0xC1, 0xF7, 0x5D, 0xA2,
+0x01, 0x72, 0x08, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0xCE, 0xF3, 0x58, 0x9A, 0x00, 0xF6, 0x02, 0x31,
+0x4C, 0xE8, 0x08, 0x10, 0x10, 0xF0, 0x23, 0x6A,
+0xCE, 0xF3, 0x58, 0x9A, 0x00, 0x69, 0x03, 0xEA,
+0x51, 0x67, 0x33, 0x61, 0x10, 0xF0, 0x30, 0x6B,
+0x00, 0xF0, 0x00, 0x4B, 0xC1, 0xF7, 0x4F, 0xA3,
+0x04, 0xD3, 0x2E, 0xEA, 0x06, 0x22, 0x91, 0x67,
+0x00, 0x18, 0xB0, 0xDA, 0x04, 0x92, 0xC1, 0xF7,
+0x2F, 0xC2, 0x05, 0x93, 0x06, 0x2B, 0x0B, 0x95,
+0x0C, 0x96, 0x90, 0x67, 0x00, 0x18, 0xF7, 0xD9,
+0x1C, 0x10, 0x05, 0x92, 0x01, 0x72, 0x06, 0x61,
+0x0B, 0x95, 0x0C, 0x96, 0x90, 0x67, 0x00, 0x18,
+0x34, 0xDA, 0x13, 0x10, 0x05, 0x93, 0x02, 0x73,
+0x04, 0x61, 0x90, 0x67, 0x00, 0x18, 0xC4, 0xD9,
+0x0C, 0x10, 0x05, 0x92, 0x03, 0x72, 0x04, 0x61,
+0x90, 0x67, 0x00, 0x18, 0x91, 0xD9, 0x05, 0x10,
+0x05, 0x93, 0x00, 0x6A, 0x04, 0x73, 0x01, 0x60,
+0x01, 0x6A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xDB, 0xEC, 0x01, 0x2E,
+0xE5, 0xE8, 0x10, 0xEA, 0xAD, 0xE2, 0x63, 0xEE,
+0x78, 0x67, 0x4B, 0xE6, 0x6B, 0xEB, 0x6C, 0xEA,
+0x20, 0xE8, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0xFF, 0x6A, 0x10, 0xF0,
+0x30, 0x6B, 0xEC, 0xEA, 0x00, 0xF0, 0x00, 0x4B,
+0x04, 0xD2, 0xC1, 0xF7, 0x58, 0x9B, 0x0A, 0xD4,
+0x91, 0xE5, 0x83, 0xEA, 0x0B, 0xD5, 0x0C, 0xD6,
+0x00, 0x6A, 0x45, 0x61, 0x0A, 0x94, 0xC1, 0xF7,
+0xD0, 0x9B, 0x00, 0x18, 0x1D, 0xDB, 0x22, 0x67,
+0x1A, 0x22, 0xA2, 0x67, 0x10, 0xF0, 0x23, 0x6A,
+0x0A, 0x94, 0x2E, 0xF2, 0xD8, 0x9A, 0x00, 0x18,
+0x1D, 0xDB, 0x02, 0x67, 0x07, 0x22, 0x0A, 0x94,
+0x0C, 0x96, 0x04, 0x97, 0xA2, 0x67, 0x00, 0x18,
+0xE0, 0xDA, 0x2C, 0x22, 0x0A, 0x93, 0x0C, 0x92,
+0x04, 0x97, 0x71, 0xE0, 0x17, 0xE1, 0x19, 0xE2,
+0x00, 0x18, 0xE0, 0xDA, 0x23, 0x22, 0x0B, 0x92,
+0x0A, 0x93, 0x37, 0xE2, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0xD8, 0x9A, 0x6D, 0xE1, 0x83, 0x67,
+0x05, 0xD3, 0x00, 0x18, 0x1D, 0xDB, 0x02, 0x67,
+0x08, 0x22, 0x0C, 0x93, 0x05, 0x94, 0x04, 0x97,
+0xA2, 0x67, 0x39, 0xE3, 0x00, 0x18, 0xE0, 0xDA,
+0x0D, 0x22, 0x0A, 0x92, 0x0B, 0x93, 0x04, 0x97,
+0x51, 0xE1, 0x0C, 0x92, 0x37, 0xE3, 0x39, 0xE0,
+0x11, 0xE4, 0x17, 0xE5, 0xD9, 0xE2, 0x00, 0x18,
+0xE0, 0xDA, 0x01, 0x10, 0x00, 0x6A, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x6D, 0xC5, 0x67,
+0x03, 0x6F, 0x00, 0x18, 0x23, 0xDB, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x6D, 0xC5, 0x67, 0x02, 0x6F, 0x00, 0x18,
+0x23, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x6F, 0x00, 0x18,
+0x23, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x01, 0x6F, 0x00, 0x18,
+0x23, 0xDB, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xDB, 0x63, 0x49, 0x62, 0x48, 0xD1, 0x47, 0xD0,
+0x52, 0xA4, 0x33, 0xA4, 0x6A, 0xA4, 0x40, 0x32,
+0x40, 0x32, 0x00, 0xF6, 0x20, 0x31, 0x45, 0xE1,
+0x50, 0xA4, 0x60, 0x33, 0x0F, 0xA4, 0x45, 0xE1,
+0x51, 0xA4, 0x00, 0xF6, 0x00, 0x30, 0x40, 0x32,
+0x45, 0xE1, 0x49, 0xA4, 0x4D, 0xE3, 0x4E, 0xA4,
+0x40, 0x32, 0x40, 0x32, 0x41, 0xE0, 0x4C, 0xA4,
+0x41, 0xE0, 0x4D, 0xA4, 0x40, 0x32, 0x41, 0xE0,
+0x48, 0xA4, 0x20, 0x72, 0x17, 0x60, 0x21, 0x5A,
+0x05, 0x60, 0x02, 0x72, 0x1A, 0x60, 0x03, 0x72,
+0x65, 0x60, 0x9A, 0x10, 0x52, 0x72, 0x09, 0x60,
+0x60, 0x72, 0x80, 0xF0, 0x15, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0x8E, 0xF5, 0x54, 0x9A, 0x40, 0xEA,
+0x8F, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x58, 0x9A, 0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x5C, 0x9A, 0x91, 0x67, 0x40, 0xEA,
+0x83, 0x10, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF4,
+0x44, 0x9A, 0x80, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A,
+0x8C, 0xEA, 0x49, 0xE3, 0x5C, 0x32, 0x30, 0x4A,
+0x45, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0x8E, 0xF5,
+0x48, 0x9A, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0x8E, 0xF5, 0x44, 0x9A, 0x02, 0x6C, 0x40, 0xEA,
+0x33, 0x10, 0xFF, 0x6A, 0x2C, 0xEA, 0x0C, 0x22,
+0x00, 0xF1, 0x00, 0x58, 0x04, 0x60, 0x0D, 0xE2,
+0x00, 0xF1, 0x00, 0x5B, 0x0C, 0x61, 0xFF, 0x6B,
+0x01, 0x4B, 0x4F, 0xE3, 0x44, 0xD3, 0x08, 0x10,
+0x00, 0xF1, 0x00, 0x58, 0x04, 0x61, 0xFF, 0x6A,
+0x01, 0x4A, 0x44, 0xD2, 0x01, 0x10, 0x44, 0xD0,
+0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF3, 0x64, 0x9A,
+0x45, 0x94, 0x00, 0x6A, 0x6D, 0xE4, 0xA0, 0xA3,
+0x04, 0x06, 0x51, 0xE6, 0xA0, 0xC4, 0x44, 0x95,
+0x01, 0x4A, 0x01, 0x4B, 0xA3, 0xEA, 0xF7, 0x61,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF5, 0x40, 0x9A,
+0x91, 0x67, 0x40, 0xEA, 0x44, 0x92, 0x45, 0x93,
+0x43, 0xE0, 0x4D, 0xE3, 0x45, 0xD3, 0x45, 0xE1,
+0xCC, 0x28, 0x36, 0x10, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF4, 0x44, 0x9A, 0x02, 0xF0, 0x01, 0x58,
+0x80, 0xAA, 0xFF, 0xF7, 0x1F, 0x6A, 0x8C, 0xEA,
+0x4D, 0xE3, 0x7C, 0x33, 0x45, 0xD3, 0x27, 0x61,
+0x02, 0xF0, 0x00, 0x68, 0x24, 0x10, 0x00, 0xF1,
+0x00, 0x58, 0x44, 0xD0, 0x03, 0x61, 0xFF, 0x6C,
+0x01, 0x4C, 0x44, 0xD4, 0x30, 0xF0, 0x20, 0x6A,
+0x44, 0x95, 0xAE, 0xF5, 0x44, 0x9A, 0x91, 0x67,
+0x04, 0x06, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A,
+0xAE, 0xF3, 0x64, 0x9A, 0x45, 0x95, 0x00, 0x6A,
+0x6D, 0xE5, 0xBD, 0x67, 0x51, 0xE5, 0x90, 0xA4,
+0x01, 0x4A, 0x80, 0xC3, 0x44, 0x94, 0x01, 0x4B,
+0x83, 0xEA, 0xF7, 0x61, 0x45, 0x95, 0x83, 0xE0,
+0x85, 0xE1, 0x95, 0xE5, 0x45, 0xD5, 0xDB, 0x28,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF4, 0x74, 0x9A,
+0x02, 0x6C, 0x8B, 0xEC, 0x40, 0x9B, 0x8C, 0xEA,
+0x40, 0xDB, 0x49, 0x97, 0x48, 0x91, 0x47, 0x90,
+0x01, 0x6A, 0x25, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x6A, 0x4C, 0xED, 0x4C, 0xEC, 0x4C, 0xEE,
+0xEC, 0xEA, 0x05, 0x25, 0x01, 0x75, 0x56, 0x61,
+0x08, 0x6B, 0x0C, 0x6D, 0x02, 0x10, 0x0A, 0x6B,
+0x0E, 0x6D, 0x01, 0x74, 0x1D, 0x60, 0x02, 0x74,
+0x2A, 0x60, 0x26, 0x67, 0xE1, 0x45, 0xC4, 0xED,
+0x24, 0xEB, 0x82, 0x67, 0xCD, 0xE9, 0x84, 0xEF,
+0xC1, 0x43, 0x8D, 0xE9, 0x44, 0xEE, 0x4D, 0xE9,
+0x01, 0x6A, 0x02, 0x67, 0x04, 0xEB, 0x62, 0x67,
+0x64, 0xED, 0xA2, 0x67, 0x6D, 0xE8, 0xA4, 0xEF,
+0xAD, 0xE8, 0x44, 0xEE, 0xFF, 0xF7, 0x1F, 0x6C,
+0x4D, 0xE8, 0x8C, 0xE9, 0x8C, 0xE8, 0x1E, 0x10,
+0x01, 0x6B, 0x01, 0x45, 0x22, 0x67, 0x83, 0x67,
+0x24, 0xE8, 0xC4, 0xED, 0x84, 0xE8, 0xCD, 0xE9,
+0xFF, 0xF7, 0x1F, 0x6A, 0x04, 0x67, 0x64, 0xED,
+0x4C, 0xE9, 0x6D, 0xE8, 0x0E, 0x10, 0x01, 0x6C,
+0x01, 0x43, 0x22, 0x67, 0xA4, 0x67, 0x24, 0xE8,
+0xC4, 0xEB, 0xA4, 0xE8, 0xCD, 0xE9, 0xFF, 0xF7,
+0x1F, 0x6A, 0x05, 0x67, 0x84, 0xEB, 0x4C, 0xE9,
+0x8D, 0xE8, 0x4C, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xEE, 0xF3, 0x4C, 0x9A, 0x38, 0x6C, 0x0F, 0xE8,
+0x04, 0xD2, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF3,
+0x40, 0x9A, 0x40, 0xEA, 0x4C, 0xE8, 0x04, 0x92,
+0x2D, 0xE8, 0xFF, 0xF7, 0x1F, 0x6D, 0x38, 0x6C,
+0x0C, 0xED, 0x40, 0xEA, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFA, 0x63, 0x0B, 0x62, 0x0A, 0xD1, 0x09, 0xD0,
+0xFF, 0xF7, 0x1F, 0x6B, 0xAC, 0xEB, 0x06, 0xD3,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF4, 0x64, 0x9B,
+0xFF, 0x6A, 0x8C, 0xEA, 0x80, 0xAB, 0xE1, 0xF7,
+0x1F, 0x6B, 0x00, 0x68, 0x8C, 0xEB, 0x69, 0xE2,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF5, 0x84, 0x9B,
+0x5C, 0x32, 0x91, 0xE2, 0x04, 0xD4, 0x22, 0x10,
+0x04, 0x92, 0x40, 0x9A, 0x05, 0xD2, 0x0D, 0x28,
+0x30, 0xF0, 0x20, 0x69, 0xCE, 0xF4, 0x50, 0x99,
+0x05, 0x96, 0x01, 0x6D, 0x83, 0xF1, 0x18, 0x6C,
+0xAB, 0xED, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x99,
+0x04, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x50, 0x9A, 0x05, 0x96, 0x01, 0x6D, 0x83, 0xF1,
+0x18, 0x6C, 0xAB, 0xED, 0x40, 0xEA, 0x04, 0x93,
+0x01, 0x48, 0xFF, 0xF7, 0x1F, 0x6A, 0x04, 0x4B,
+0x4C, 0xE8, 0x04, 0xD3, 0x06, 0x92, 0x43, 0xE8,
+0xDB, 0x61, 0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90,
+0x06, 0x63, 0x00, 0xEF, 0x77, 0x21, 0x03, 0x80,
+0xD3, 0x21, 0x03, 0x80, 0x67, 0x22, 0x03, 0x80,
+0xFB, 0x22, 0x03, 0x80, 0x93, 0x23, 0x03, 0x80,
+0xA9, 0x27, 0x03, 0x80, 0xA3, 0x27, 0x03, 0x80,
+0xAF, 0x27, 0x03, 0x80, 0xB5, 0x27, 0x03, 0x80,
+0xBB, 0x27, 0x03, 0x80, 0xC1, 0x27, 0x03, 0x80,
+0x00, 0x20, 0x41, 0x80, 0x00, 0x00, 0x00, 0x00,
+0x2A, 0x18, 0x3F, 0x00, 0x71, 0x73, 0x29, 0x23,
+0x2B, 0x48, 0x01, 0x00, 0x01, 0x00, 0x2B, 0x48,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x31, 0x2E, 0x30, 0x30, 0x44, 0x72, 0x69, 0x76,
+0x65, 0x72, 0x20, 0x53, 0x74, 0x6F, 0x72, 0x61,
+0x67, 0x65, 0x20, 0x20, 0x52, 0x65, 0x61, 0x6C,
+0x74, 0x65, 0x6B, 0x20, 0x47, 0x26, 0x10, 0x80,
+0x8B, 0x26, 0x10, 0x80, 0x13, 0x27, 0x10, 0x80,
+0x43, 0x26, 0x10, 0x80, 0x75, 0x27, 0x10, 0x80,
+0xA5, 0x27, 0x10, 0x80, 0xC9, 0x28, 0x10, 0x80,
+0xE3, 0x28, 0x10, 0x80, 0xF3, 0x28, 0x10, 0x80,
+0x09, 0x29, 0x10, 0x80, 0x1F, 0x29, 0x10, 0x80,
+0x1F, 0x29, 0x10, 0x80, 0x3B, 0x29, 0x10, 0x80,
+0x1B, 0x3A, 0x03, 0x80, 0x31, 0x3A, 0x03, 0x80,
+0x65, 0x3A, 0x03, 0x80, 0x65, 0x3A, 0x03, 0x80,
+0x65, 0x3A, 0x03, 0x80, 0x65, 0x3A, 0x03, 0x80,
+0x3D, 0x3A, 0x03, 0x80, 0x47, 0x3A, 0x03, 0x80,
+0x51, 0x3A, 0x03, 0x80, 0x5B, 0x3A, 0x03, 0x80,
+0x23, 0x3A, 0x03, 0x80, 0x11, 0x3A, 0x03, 0x80,
+0xA1, 0x40, 0x03, 0x80, 0xC3, 0x40, 0x03, 0x80,
+0xE5, 0x40, 0x03, 0x80, 0x07, 0x41, 0x03, 0x80,
+0x2B, 0x41, 0x03, 0x80, 0x65, 0x41, 0x03, 0x80,
+0x89, 0x41, 0x03, 0x80, 0xAD, 0x41, 0x03, 0x80,
+0xD1, 0x41, 0x03, 0x80, 0xF7, 0x41, 0x03, 0x80,
+0x29, 0x47, 0x03, 0x80, 0x29, 0x47, 0x03, 0x80,
+0x29, 0x47, 0x03, 0x80, 0x43, 0x47, 0x03, 0x80,
+0x29, 0x47, 0x03, 0x80, 0x29, 0x47, 0x03, 0x80,
+0x29, 0x47, 0x03, 0x80, 0x25, 0x47, 0x03, 0x80,
+0x25, 0x47, 0x03, 0x80, 0x25, 0x47, 0x03, 0x80,
+0x25, 0x47, 0x03, 0x80, 0x25, 0x47, 0x03, 0x80,
+0xA1, 0x47, 0x03, 0x80, 0xAB, 0x47, 0x03, 0x80,
+0x47, 0x53, 0x03, 0x80, 0x57, 0x53, 0x03, 0x80,
+0x61, 0x53, 0x03, 0x80, 0x6B, 0x53, 0x03, 0x80,
+0x7D, 0x53, 0x03, 0x80, 0xA9, 0x5F, 0x03, 0x80,
+0xDB, 0x5F, 0x03, 0x80, 0xBD, 0x5F, 0x03, 0x80,
+0xE5, 0x5F, 0x03, 0x80, 0xC7, 0x5F, 0x03, 0x80,
+0xF1, 0x5F, 0x03, 0x80, 0xD1, 0x5F, 0x03, 0x80,
+0xFC, 0x10, 0x60, 0xB8, 0xFA, 0xFA, 0xFA, 0xFA,
+0x8C, 0x04, 0x64, 0xB8, 0x90, 0x04, 0x64, 0xB8,
+0x94, 0x04, 0x64, 0xB8, 0x98, 0x04, 0x64, 0xB8,
+0x9C, 0x04, 0x64, 0xB8, 0xA0, 0x04, 0x64, 0xB8,
+0x01, 0x06, 0x64, 0xB8, 0x00, 0x00, 0x68, 0x18,
+0x48, 0x00, 0x68, 0x18, 0x48, 0x04, 0x68, 0x18,
+0x00, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x64, 0xB8,
+0x04, 0x06, 0x64, 0xB8, 0xFF, 0xFF, 0xFF, 0xFE,
+0x00, 0x00, 0x00, 0x01, 0x60, 0x16, 0x64, 0xB8,
+0x09, 0x00, 0x78, 0xB8, 0x31, 0x00, 0x78, 0xB8,
+0x14, 0x00, 0x78, 0xB8, 0x1D, 0x04, 0x64, 0xB8,
+0x22, 0x05, 0x64, 0xB8, 0x88, 0x00, 0x60, 0xB8,
+0x89, 0x00, 0x60, 0xB8, 0x8A, 0x00, 0x60, 0xB8,
+0x8B, 0x00, 0x60, 0xB8, 0x84, 0x00, 0x60, 0xB8,
+0xF8, 0x10, 0x60, 0xB8, 0x00, 0x00, 0x00, 0x02,
+0xCB, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x60,
+0xE0, 0x00, 0x60, 0xB8, 0x00, 0x00, 0x00, 0x20,
+0xE1, 0x00, 0x60, 0xB8, 0xE8, 0x12, 0x64, 0xB8,
+0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80,
+0x00, 0x00, 0x00, 0x04, 0xFF, 0xFF, 0xFF, 0xFB,
+0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0x1F,
+0x04, 0x00, 0x60, 0xB8, 0x04, 0x00, 0x64, 0xB8,
+0x08, 0x00, 0x60, 0xB8, 0x08, 0x00, 0x64, 0xB8,
+0x24, 0x00, 0x60, 0xB8, 0x80, 0x00, 0x60, 0xB8,
+0x00, 0x00, 0x02, 0x00, 0xFF, 0xFF, 0xFD, 0xFF,
+0x82, 0x10, 0x60, 0xB8, 0x42, 0x34, 0x00, 0xB8,
+0x55, 0x53, 0x42, 0x43, 0x00, 0x00, 0x00, 0x40,
+0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x08,
+0x55, 0x53, 0x42, 0x53, 0x00, 0x20, 0x78, 0xB8,
+0x00, 0x10, 0x78, 0xB8, 0x00, 0x00, 0x03, 0x00,
+0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0xFF, 0x00,
+0xFF, 0xFF, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00,
+0x00, 0x0C, 0x01, 0x00, 0x01, 0x00, 0x66, 0xB8,
+0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x01, 0x00,
+0xFF, 0xFF, 0x0B, 0xFF, 0x00, 0x00, 0x70, 0x00,
+0xFF, 0xFF, 0x7A, 0xFF, 0x00, 0x00, 0xD0, 0x00,
+0xFF, 0xFF, 0xDA, 0xFF, 0xFF, 0xFF, 0x0F, 0x00,
+0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0xFF, 0xF9, 0xFF,
+0x00, 0x00, 0xFE, 0x1F, 0x00, 0x00, 0x08, 0x00,
+0x1C, 0x0C, 0xB8, 0x64, 0x67, 0x56, 0x23, 0x01,
+0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFC, 0xFE, 0xFF,
+0x00, 0x01, 0x01, 0x00, 0x00, 0xFC, 0xCF, 0xFF,
+0x00, 0x00, 0x01, 0x10, 0x00, 0xF3, 0x3F, 0xFF,
+0x01, 0x00, 0x02, 0x20, 0x00, 0xCF, 0xFF, 0xFC,
+0x02, 0x00, 0x04, 0x40, 0x00, 0xFC, 0xCE, 0xEF,
+0x40, 0x02, 0x20, 0x00, 0x80, 0x03, 0x30, 0x00,
+0x00, 0x00, 0x80, 0x01, 0xCC, 0x06, 0x64, 0xB8,
+0x96, 0x02, 0x64, 0xB8, 0x00, 0x00, 0x70, 0xB8,
+0x18, 0x00, 0x70, 0xB8, 0x0B, 0x00, 0x70, 0xB8,
+0x02, 0x00, 0x70, 0xB8, 0x1C, 0x01, 0x64, 0xB8,
+0x94, 0x02, 0x64, 0xB8, 0x97, 0x02, 0x64, 0xB8,
+0x84, 0x02, 0x64, 0xB8, 0x1C, 0x04, 0x64, 0xB8,
+0x54, 0x02, 0x64, 0xB8, 0x50, 0x02, 0x64, 0xB8,
+0x4C, 0x02, 0x64, 0xB8, 0x00, 0x00, 0x78, 0xB8,
+0x04, 0x00, 0x78, 0xB8, 0x48, 0x02, 0x64, 0xB8,
+0x44, 0x02, 0x64, 0xB8, 0xCC, 0x01, 0x64, 0xB8,
+0xF4, 0x11, 0x64, 0xB8, 0xF5, 0x11, 0x64, 0xB8,
+0xCF, 0x01, 0x64, 0xB8, 0x34, 0x01, 0x64, 0xB8,
+0x64, 0x05, 0x64, 0xB8, 0x60, 0x05, 0x64, 0xB8,
+0xC8, 0x01, 0x64, 0xB8, 0xC9, 0x01, 0x64, 0xB8,
+0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x05,
+0x64, 0x01, 0x64, 0xB8, 0x53, 0x05, 0x64, 0xB8,
+0x77, 0x05, 0x64, 0xB8, 0x68, 0x05, 0x64, 0xB8,
+0x94, 0x01, 0x64, 0xB8, 0x00, 0x00, 0x66, 0xB8,
+0x00, 0x10, 0x66, 0xB8, 0x00, 0x1C, 0x66, 0xB8,
+0x54, 0x00, 0x60, 0xB8, 0x50, 0x00, 0x60, 0xB8,
+0x9A, 0x01, 0x64, 0xB8, 0x99, 0x01, 0x64, 0xB8,
+0xC7, 0x01, 0x64, 0xB8, 0xC6, 0x01, 0x64, 0xB8,
+0x30, 0x01, 0x64, 0xB8, 0x24, 0x01, 0x64, 0xB8,
+0x20, 0x01, 0x64, 0xB8, 0x24, 0x11, 0x64, 0xB8,
+0x20, 0x11, 0x64, 0xB8, 0x2C, 0x11, 0x64, 0xB8,
+0x28, 0x11, 0x64, 0xB8, 0x34, 0x11, 0x64, 0xB8,
+0x30, 0x11, 0x64, 0xB8, 0x3C, 0x01, 0x64, 0xB8,
+0x38, 0x01, 0x64, 0xB8, 0x3C, 0x11, 0x64, 0xB8,
+0x38, 0x11, 0x64, 0xB8, 0xE4, 0x11, 0x64, 0xB8,
+0xE0, 0x11, 0x64, 0xB8, 0x00, 0x00, 0x00, 0x03,
+0xE0, 0x12, 0x64, 0xB8, 0x00, 0x01, 0x64, 0xB8,
+0x08, 0x02, 0x64, 0xB8, 0x24, 0x04, 0x64, 0xB8,
+0x00, 0x28, 0x64, 0xB8, 0x00, 0x2C, 0x64, 0xB8,
+0x00, 0x38, 0x64, 0xB8, 0x00, 0x3C, 0x64, 0xB8,
+0xF8, 0x05, 0x64, 0xB8, 0xF9, 0x05, 0x64, 0xB8,
+0xFA, 0x05, 0x64, 0xB8, 0xFB, 0x05, 0x64, 0xB8,
+0x92, 0x06, 0x64, 0xB8, 0x70, 0x00, 0x60, 0xB8,
+0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x70, 0x18,
+0xF1, 0x11, 0x64, 0xB8, 0x7A, 0x04, 0x64, 0xB8,
+0x20, 0x00, 0x78, 0xB8, 0x10, 0x00, 0x78, 0xB8,
+0x03, 0x00, 0x78, 0xB8, 0xFF, 0xFF, 0x01, 0xFF,
+0x05, 0x00, 0x78, 0xB8, 0x12, 0x05, 0x64, 0xB8,
+0x10, 0x05, 0x64, 0xB8, 0x54, 0x05, 0x64, 0xB8,
+0xB8, 0x05, 0x64, 0xB8, 0xBC, 0x05, 0x64, 0xB8,
+0x00, 0x00, 0x80, 0x00, 0x5F, 0x11, 0x64, 0xB8,
+0xFE, 0xFF, 0xFF, 0x7F, 0x30, 0x00, 0x78, 0x18,
+0x40, 0x00, 0x00, 0xB5, 0x44, 0x00, 0x00, 0xB5,
+0x48, 0x00, 0x00, 0xB5, 0x4C, 0x00, 0x00, 0xB5,
+0x00, 0x00, 0x10, 0x00, 0xA4, 0x04, 0x64, 0xB8,
+0xA8, 0x04, 0x64, 0xB8, 0xC0, 0x01, 0x64, 0xB8,
+0xAF, 0x01, 0x64, 0xB8, 0x7E, 0x04, 0x64, 0xB8,
+0x20, 0x04, 0x64, 0xB8, 0x04, 0x10, 0x66, 0xB8,
+0x08, 0x10, 0x66, 0xB8, 0x0C, 0x10, 0x66, 0xB8,
+0x7D, 0x04, 0x64, 0xB8, 0x7C, 0x04, 0x64, 0xB8,
+0x90, 0x00, 0x60, 0xB8, 0x98, 0x01, 0x64, 0xB8,
+0xFF, 0xFF, 0xC0, 0xFF, 0x40, 0x01, 0x00, 0x80,
+0x00, 0x98, 0x00, 0x80, 0x68, 0x06, 0x64, 0xB8,
+0xFF, 0xFF, 0xCF, 0xFF, 0x5C, 0x05, 0x64, 0xB8,
+0x38, 0x06, 0x64, 0xB8, 0x08, 0x06, 0x64, 0xB8,
+0xA0, 0x06, 0x64, 0xB8, 0x00, 0x00, 0x78, 0x18,
+0x40, 0x00, 0x60, 0xB8, 0x08, 0x90, 0x00, 0xB8,
+0x14, 0x90, 0x00, 0xB8, 0x14, 0x91, 0x00, 0xB8,
+0x20, 0x91, 0x00, 0xB8, 0x1C, 0x91, 0x00, 0xB8,
+0x2C, 0x90, 0x00, 0xB8, 0x00, 0x90, 0x00, 0xB8,
+0x10, 0x90, 0x00, 0xB8, 0x18, 0x91, 0x00, 0xB8,
+0x60, 0x90, 0x00, 0xB8, 0x04, 0x90, 0x00, 0xB8,
+0x00, 0x00, 0xFF, 0xFF, 0x28, 0x90, 0x00, 0xB8,
+0xE4, 0x00, 0x60, 0xB8, 0xE8, 0x00, 0x60, 0xB8,
+0xE9, 0x00, 0x60, 0xB8, 0xEA, 0x00, 0x60, 0xB8,
+0xEB, 0x00, 0x60, 0xB8, 0xE5, 0x00, 0x60, 0xB8,
+0x44, 0x00, 0x02, 0x00, 0xA0, 0x07, 0x64, 0xB8,
+0xF4, 0x00, 0x60, 0xB8, 0x30, 0x00, 0x78, 0xB8,
+0x51, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+0x10, 0xF0, 0x23, 0x6A, 0x40, 0xF2, 0x15, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x44, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x20, 0xF4, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x48, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xC0, 0xF4, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x4C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x20, 0xF5, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x50, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x83, 0xF6, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x54, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xA3, 0xF7, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x58, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x63, 0xF6, 0x15, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE2, 0xF5, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x40, 0xF4, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x00, 0xF2, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x60, 0xF5, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA0, 0xF6, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA0, 0xF5, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x00, 0xF1, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x61, 0xF6, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF6, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x21, 0xF5, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF5, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x02, 0xF1, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE2, 0xF6, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x62, 0xF1, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA2, 0xF0, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x01, 0xF6, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x80, 0xF5, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x0E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x60, 0xF0, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x7F, 0xF6, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC2, 0xF5, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x5F, 0xF6, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF1, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF7, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x42, 0xF6, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC1, 0xF6, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x21, 0xF6, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x00, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF1, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x43, 0xF6, 0x15, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xFF, 0xF7, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xBF, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x80, 0xF0, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE0, 0xF1, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x40, 0xF3, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x80, 0xF1, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x02, 0xF3, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x02, 0xF4, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE2, 0xF1, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x62, 0xF4, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC2, 0xF4, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA1, 0xF1, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x41, 0xF4, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC1, 0xF2, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC1, 0xF1, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x00, 0xF7, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x61, 0xF0, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x01, 0xF0, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x40, 0xF7, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x01, 0xF1, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x21, 0xF1, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x22, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x82, 0xF7, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA2, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x1F, 0xF6, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x63, 0xF0, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA3, 0xF0, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC3, 0xF0, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x23, 0xF3, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x83, 0xF3, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC3, 0xF3, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x03, 0xF4, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x23, 0xF4, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x63, 0xF4, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA3, 0xF6, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE3, 0xF6, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF7, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x23, 0xF7, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA4, 0xF0, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x04, 0xF1, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x64, 0xF1, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x84, 0xF3, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE4, 0xF3, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x04, 0xF4, 0x1C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x44, 0xF4, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF7, 0x5C, 0xDB,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x30, 0x6A,
+0x00, 0xF0, 0x00, 0x4A, 0x00, 0x6B, 0xC1, 0xF6,
+0x62, 0xC2, 0xC1, 0xF6, 0x63, 0xC2, 0xC1, 0xF6,
+0x64, 0xC2, 0xC1, 0xF6, 0x65, 0xC2, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6B, 0x30, 0xF0, 0x20, 0x6A,
+0xA3, 0xF7, 0x09, 0x4B, 0x40, 0xF1, 0x68, 0xDA,
+0x10, 0xF0, 0x23, 0x6B, 0x40, 0xF1, 0x08, 0x4A,
+0x40, 0xF5, 0x15, 0x4B, 0x61, 0xDA, 0x10, 0xF0,
+0x23, 0x6B, 0xC0, 0xF5, 0x11, 0x4B, 0x62, 0xDA,
+0x10, 0xF0, 0x23, 0x6B, 0xC0, 0xF5, 0x01, 0x4B,
+0x63, 0xDA, 0x10, 0xF0, 0x23, 0x6B, 0xA0, 0xF5,
+0x11, 0x4B, 0x64, 0xDA, 0x10, 0xF0, 0x23, 0x6B,
+0xA0, 0xF5, 0x01, 0x4B, 0x65, 0xDA, 0x10, 0xF0,
+0x23, 0x6B, 0x80, 0xF5, 0x11, 0x4B, 0x66, 0xDA,
+0x10, 0xF0, 0x23, 0x6B, 0x80, 0xF5, 0x01, 0x4B,
+0x67, 0xDA, 0x20, 0xE8, 0x30, 0xF0, 0x20, 0x6A,
+0xA8, 0xF4, 0x17, 0x4A, 0x67, 0x42, 0x09, 0x4B,
+0x00, 0x6C, 0x80, 0xC2, 0x01, 0x4A, 0x6A, 0xEA,
+0xFB, 0x61, 0x42, 0xF4, 0x10, 0x6A, 0x1F, 0xF7,
+0x00, 0x6B, 0x4C, 0xEB, 0x02, 0xF0, 0x00, 0x73,
+0x01, 0x60, 0x05, 0x2B, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF2, 0x68, 0x9B, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6B, 0x2E, 0xF2, 0x6C, 0x9B, 0x6D, 0xE2,
+0x04, 0x4A, 0x00, 0x6C, 0x62, 0xF4, 0x00, 0x72,
+0x80, 0xDB, 0xE9, 0x61, 0x20, 0xE8, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x23, 0x6A,
+0xAE, 0xF2, 0x50, 0x9A, 0x03, 0x6D, 0xFF, 0x6B,
+0x80, 0x9A, 0x10, 0xF0, 0x23, 0x6A, 0xAE, 0xF2,
+0x54, 0x9A, 0x00, 0xF5, 0x82, 0x34, 0xAC, 0xEC,
+0x40, 0x9A, 0x01, 0x74, 0x42, 0x32, 0x52, 0x32,
+0xAC, 0xEA, 0x06, 0x60, 0x0A, 0x2C, 0x02, 0x5A,
+0x28, 0x6C, 0x0D, 0x60, 0x50, 0x6C, 0x0B, 0x10,
+0x02, 0x5A, 0x14, 0x6C, 0x08, 0x60, 0x28, 0x6C,
+0x04, 0x10, 0x02, 0x5A, 0x0A, 0x6C, 0x03, 0x60,
+0x14, 0x6C, 0x84, 0xEA, 0x6C, 0xEC, 0x80, 0x18,
+0x3C, 0x06, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4,
+0x18, 0x4A, 0x00, 0x6B, 0xA0, 0xF1, 0x6B, 0xC2,
+0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF2, 0x68, 0x9B,
+0x00, 0x6A, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0xEE, 0xF1, 0x78, 0x9B, 0x40, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x6E, 0xF2, 0x64, 0x9B, 0x40, 0xC3,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x68, 0x04, 0xD2, 0x04, 0x94,
+0x4E, 0xF2, 0x4C, 0x98, 0x00, 0x6D, 0x4C, 0xF7,
+0x14, 0x6E, 0x40, 0xEA, 0x30, 0xF0, 0x20, 0x6A,
+0xAF, 0xF4, 0x18, 0x4A, 0x05, 0xD2, 0x05, 0x94,
+0x4E, 0xF2, 0x4C, 0x98, 0x00, 0x6D, 0x01, 0xF4,
+0x1C, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x30, 0x69,
+0x4E, 0xF2, 0x4C, 0x98, 0x00, 0xF0, 0x00, 0x49,
+0x91, 0x67, 0x00, 0x6D, 0xE1, 0xF7, 0x00, 0x6E,
+0x40, 0xEA, 0x80, 0x18, 0x35, 0x05, 0x04, 0x92,
+0x00, 0x68, 0x40, 0xF0, 0x00, 0xC1, 0x80, 0xF0,
+0x0C, 0xDA, 0x80, 0x18, 0x3C, 0x05, 0x05, 0x92,
+0xA0, 0xF1, 0x0C, 0xC2, 0x09, 0x97, 0x08, 0x91,
+0x07, 0x90, 0x05, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0x53, 0x05,
+0x80, 0x18, 0xB1, 0x05, 0x80, 0x18, 0xBC, 0x07,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF5, 0x44, 0x9A,
+0x40, 0xEA, 0x80, 0x18, 0x60, 0x06, 0x00, 0x18,
+0x20, 0xD5, 0x00, 0x18, 0x43, 0xD5, 0x05, 0x97,
+0x03, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6A,
+0x00, 0x6B, 0xAF, 0xF4, 0x18, 0x4A, 0xA0, 0xF0,
+0x60, 0xC2, 0xA0, 0xF0, 0x61, 0xC2, 0x10, 0xF0,
+0x30, 0x6A, 0x00, 0xF0, 0x00, 0x4A, 0x40, 0xF0,
+0x60, 0xC2, 0x40, 0xF0, 0x61, 0xC2, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3, 0x40, 0x9A,
+0x01, 0x6B, 0x60, 0xC2, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3, 0x84, 0x9A,
+0xFF, 0x6B, 0x20, 0x6D, 0x40, 0xA4, 0x6C, 0xEA,
+0xAD, 0xEA, 0x6C, 0xEA, 0x40, 0xC4, 0x10, 0xF0,
+0x23, 0x6A, 0xEE, 0xF3, 0x88, 0x9A, 0x08, 0x6D,
+0x40, 0xA4, 0x6C, 0xEA, 0xAD, 0xEA, 0x6C, 0xEA,
+0x40, 0xC4, 0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6A,
+0xEE, 0xF3, 0x70, 0x9A, 0xFD, 0x6A, 0xFF, 0x6C,
+0xA0, 0xA3, 0xAC, 0xEA, 0x40, 0xC3, 0x40, 0xA3,
+0x01, 0x6D, 0x8C, 0xEA, 0xAD, 0xEA, 0x8C, 0xEA,
+0x40, 0xC3, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x04, 0xD0, 0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3,
+0x14, 0x9A, 0x30, 0xF0, 0x20, 0x6A, 0x4E, 0xF2,
+0x4C, 0x9A, 0x90, 0x67, 0x00, 0x6D, 0x02, 0xF0,
+0x00, 0x6E, 0x40, 0xEA, 0x04, 0x6A, 0x40, 0xC0,
+0x10, 0xF0, 0x23, 0x6A, 0xEE, 0xF3, 0x58, 0x9A,
+0x20, 0x48, 0x0E, 0xEA, 0xF7, 0x2A, 0x10, 0xF0,
+0x23, 0x6B, 0x30, 0xF0, 0x20, 0x6A, 0xEE, 0xF3,
+0x9C, 0x9B, 0x4E, 0xF2, 0x4C, 0x9A, 0x00, 0x6D,
+0x00, 0xF4, 0x00, 0x6E, 0x40, 0xEA, 0x05, 0x97,
+0x04, 0x90, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0x30, 0xF0, 0x20, 0x6B, 0xE0, 0xF3, 0x12, 0x6E,
+0xC0, 0xF1, 0xC8, 0xDB, 0x01, 0xF7, 0x01, 0x6A,
+0xC0, 0xF1, 0x08, 0x4B, 0x08, 0xF0, 0x00, 0x6D,
+0x00, 0x6C, 0x42, 0xDB, 0x43, 0xDB, 0xA1, 0xDB,
+0x84, 0xDB, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF4,
+0x78, 0x9B, 0xC0, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF4, 0x60, 0x9B, 0xA0, 0xDB, 0x10, 0xF0,
+0x23, 0x6B, 0x2E, 0xF4, 0x68, 0x9B, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF4, 0x70, 0x9B,
+0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF4,
+0x58, 0x9A, 0x80, 0xDA, 0x20, 0xE8, 0x00, 0x65,
+0xFF, 0x6A, 0x01, 0x4A, 0x30, 0xF0, 0x20, 0x6B,
+0xE0, 0xF1, 0x58, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x0E, 0xF4, 0x64, 0x9B, 0x40, 0xDB, 0x20, 0xE8,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF4, 0x94, 0x9B,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x80, 0xF1, 0x06, 0x6D, 0xFF, 0x6B, 0xAE, 0xDA,
+0x8F, 0xDA, 0x70, 0xDA, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF4, 0x40, 0x9A, 0xA0, 0xDA, 0x10, 0xF0,
+0x23, 0x6A, 0x4E, 0xF4, 0x48, 0x9A, 0x80, 0xDA,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF4, 0x50, 0x9A,
+0x60, 0xDA, 0x20, 0xE8, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0x6E, 0xF5, 0x5C, 0x9A,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0x80, 0x18, 0xFB, 0x06,
+0x30, 0xF0, 0x20, 0x6B, 0xE8, 0xF2, 0x5C, 0xC3,
+0x80, 0x18, 0xC9, 0x05, 0x00, 0x18, 0x04, 0xD8,
+0x80, 0x18, 0x11, 0x06, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF4, 0x58, 0x9A, 0x3F, 0x6B, 0x60, 0xC2,
+0x80, 0x18, 0xBA, 0x05, 0x80, 0x18, 0xBE, 0x05,
+0x80, 0x18, 0xD1, 0x05, 0x80, 0x18, 0x4D, 0x06,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x04, 0xD0, 0x30, 0xF0,
+0x20, 0x68, 0x00, 0x6A, 0xC0, 0xF1, 0x08, 0x48,
+0x01, 0x6C, 0x02, 0x6D, 0x00, 0x6E, 0x40, 0xF0,
+0x50, 0xC8, 0x00, 0x18, 0xA9, 0xC9, 0x40, 0xF0,
+0xD0, 0xA8, 0x01, 0x6C, 0x03, 0x6D, 0xC2, 0x36,
+0x00, 0x18, 0xA9, 0xC9, 0x05, 0x97, 0x04, 0x90,
+0x03, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x18, 0xC3, 0xD0, 0x00, 0x18, 0xE2, 0xD0,
+0x80, 0x18, 0xE6, 0x05, 0x80, 0x18, 0x02, 0x06,
+0x80, 0x18, 0xFC, 0x05, 0x80, 0x18, 0x26, 0x06,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x18, 0xD0, 0xCA,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x54, 0x9A,
+0x40, 0xEA, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A,
+0x81, 0xF4, 0x10, 0x6B, 0x28, 0xF1, 0x78, 0xDA,
+0x00, 0xF2, 0x00, 0x4B, 0x28, 0xF1, 0x7C, 0xDA,
+0x01, 0xF2, 0x00, 0x4B, 0x48, 0xF1, 0x60, 0xDA,
+0x00, 0xF2, 0x00, 0x4B, 0x48, 0xF1, 0x64, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x00, 0x6C, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4,
+0x18, 0x4A, 0x00, 0x6B, 0xC4, 0x67, 0x9F, 0xF7,
+0x00, 0x6D, 0xE1, 0xF3, 0x64, 0xC2, 0xE1, 0xF3,
+0x65, 0xC2, 0x00, 0x18, 0xA9, 0xC9, 0x00, 0x6C,
+0xC4, 0x67, 0x9F, 0xF7, 0x01, 0x6D, 0x00, 0x18,
+0xA9, 0xC9, 0x00, 0x6C, 0xC4, 0x67, 0x9F, 0xF7,
+0x02, 0x6D, 0x00, 0x18, 0xA9, 0xC9, 0x00, 0x6C,
+0x9F, 0xF7, 0x03, 0x6D, 0xC4, 0x67, 0x00, 0x18,
+0xA9, 0xC9, 0x05, 0x97, 0x03, 0x63, 0x00, 0xEF,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
+0xEE, 0xF4, 0x5C, 0x9A, 0xE0, 0xF1, 0x1B, 0x6B,
+0x6B, 0xEB, 0x60, 0xCA, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF5, 0x60, 0x9A, 0xFB, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x00, 0x65,
+0x10, 0xF0, 0x23, 0x6A, 0x65, 0xF4, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x4C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x85, 0xF4, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x50, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x08, 0xF2, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x54, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x83, 0xF1, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x58, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xAB, 0xF6, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x4E, 0xF2, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x0A, 0xF2, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x58, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x2A, 0xF2, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF2, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x26, 0xF3, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF2, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x64, 0xF7, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x04, 0xF7, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x44, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xA9, 0xF2, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x48, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x67, 0xF6, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x4C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xA7, 0xF6, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x50, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x4B, 0xF6, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x54, 0xDB,
+0x10, 0xF0, 0x30, 0x6A, 0x83, 0xF4, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x48, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x2C, 0xF2, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF5, 0x4C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x8C, 0xF1, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF5, 0x44, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xCC, 0xF0, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x50, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x4C, 0xF1, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x54, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x25, 0xF6, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x58, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x26, 0xF0, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF2, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x49, 0xF5, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF2, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x24, 0xF4, 0x15, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x4C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xA4, 0xF4, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x2E, 0xF4, 0x50, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x05, 0xF4, 0x19, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x54, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x45, 0xF4, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x25, 0xF4, 0x05, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x58, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xE8, 0xF6, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xEE, 0xF4, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xCC, 0xF3, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x6E, 0xF5, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x8C, 0xF5, 0x0D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF5, 0x48, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0xAC, 0xF5, 0x15, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF5, 0x50, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x4D, 0xF5, 0x09, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF5, 0x58, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x4D, 0xF5, 0x1D, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF5, 0x5C, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x6D, 0xF5, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF5, 0x44, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x8D, 0xF5, 0x01, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF5, 0x40, 0xDB,
+0x10, 0xF0, 0x23, 0x6A, 0x8D, 0xF5, 0x11, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF5, 0x54, 0xDB,
+0x20, 0xE8, 0x00, 0x65, 0x10, 0xF0, 0x23, 0x6A,
+0xAE, 0xF5, 0x40, 0x9A, 0x60, 0x9A, 0x03, 0x6A,
+0x62, 0x33, 0x72, 0x33, 0x4C, 0xEB, 0x02, 0x6A,
+0x04, 0x23, 0x01, 0x73, 0x01, 0x6A, 0x01, 0x60,
+0x03, 0x6A, 0x20, 0xE8, 0x15, 0xF0, 0xFF, 0x0F,
+0x00, 0x00, 0x00, 0x00, 0x15, 0xF0, 0x0F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x05, 0xF0, 0xFF, 0x0F,
+0x00, 0x00, 0x00, 0x00, 0x05, 0xF0, 0x0F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x10, 0xF0, 0xFF, 0x0F,
+0x00, 0x00, 0x00, 0x00, 0x10, 0xF0, 0x0F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0xF5, 0x0F, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF,
+0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x3F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x15, 0xF0, 0x3F, 0x00,
+0x00, 0x00, 0x00, 0x00, 0x15, 0xF0, 0xFF, 0xFF,
+0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF,
+0xFF, 0x03, 0x00, 0x00, 0x15, 0xF0, 0xFF, 0xFF,
+0x0F, 0x00, 0x00, 0x00, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF5, 0x6C, 0x9B, 0xFF, 0x6A, 0x8C, 0xEA,
+0x60, 0x9B, 0x80, 0xF1, 0x01, 0x6C, 0x8B, 0xEC,
+0x8C, 0xEB, 0x10, 0xF0, 0x23, 0x6C, 0xAE, 0xF2,
+0x90, 0x9C, 0x01, 0x72, 0x80, 0x9C, 0x05, 0x60,
+0x02, 0x72, 0x05, 0x61, 0xFF, 0x6A, 0x01, 0x4A,
+0x01, 0x10, 0x80, 0x6A, 0x4D, 0xEB, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF5, 0x4C, 0x9A, 0x60, 0xDA,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF5, 0x50, 0x9A,
+0x10, 0xF0, 0x23, 0x6B, 0xAE, 0xF2, 0x70, 0x9B,
+0x8C, 0xEA, 0x40, 0xDB, 0x10, 0xF0, 0x23, 0x6B,
+0x2E, 0xF5, 0x74, 0x9B, 0x50, 0x6A, 0x40, 0xC3,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF5, 0x78, 0x9B,
+0x40, 0xC3, 0x20, 0xE8, 0xFF, 0x6A, 0x4C, 0xEC,
+0x03, 0x6B, 0x8C, 0xEB, 0x4C, 0xEE, 0x3C, 0x2B,
+0x10, 0xF0, 0x23, 0x6B, 0x8E, 0xF5, 0x60, 0x9B,
+0x80, 0xC3, 0x0F, 0x6B, 0xCC, 0xEB, 0x34, 0x23,
+0x01, 0x6C, 0x6C, 0xEC, 0x06, 0x24, 0x10, 0xF0,
+0x23, 0x6C, 0x8E, 0xF5, 0x84, 0x9C, 0xAC, 0xEA,
+0x40, 0xC4, 0x02, 0x6A, 0x6C, 0xEA, 0x08, 0x22,
+0xFF, 0x6C, 0xA2, 0x32, 0x8C, 0xEA, 0x10, 0xF0,
+0x23, 0x6C, 0x8E, 0xF5, 0x88, 0x9C, 0x40, 0xC4,
+0x04, 0x6A, 0x6C, 0xEA, 0x09, 0x22, 0xA2, 0x32,
+0xFF, 0x6C, 0x42, 0x32, 0x8C, 0xEA, 0x10, 0xF0,
+0x23, 0x6C, 0x8E, 0xF5, 0x8C, 0x9C, 0x40, 0xC4,
+0x6E, 0x32, 0x07, 0x22, 0x10, 0xF0, 0x23, 0x6A,
+0x8E, 0xF5, 0x50, 0x9A, 0x00, 0xF6, 0xA2, 0x35,
+0xA0, 0xC2, 0x20, 0x6A, 0x6D, 0xEA, 0x10, 0xF0,
+0x23, 0x6B, 0x8E, 0xF5, 0x74, 0x9B, 0x40, 0xC3,
+0x00, 0x6A, 0x40, 0xC3, 0x01, 0x6A, 0x20, 0xE8,
+0x00, 0x6A, 0x20, 0xE8, 0xFF, 0x6A, 0x8C, 0xEA,
+0x03, 0x6B, 0x4C, 0xEB, 0x03, 0x23, 0x01, 0x6A,
+0x4B, 0xEA, 0x20, 0xE8, 0x10, 0xF0, 0x23, 0x6C,
+0x8E, 0xF5, 0x80, 0x9C, 0x40, 0xC4, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF5, 0x94, 0x9A, 0x30, 0x6A,
+0x40, 0xC4, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF5,
+0x44, 0x9A, 0x40, 0x9A, 0x60, 0xC4, 0x20, 0xE8,
+0xFD, 0x63, 0x05, 0x62, 0x10, 0xF0, 0x23, 0x6A,
+0x8E, 0xF5, 0xB8, 0x9A, 0xE0, 0xF3, 0x10, 0x6C,
+0x0F, 0x6E, 0x80, 0x18, 0x3B, 0x07, 0xE0, 0xF3,
+0x0C, 0x6C, 0x80, 0x18, 0x5D, 0x07, 0xFF, 0x6B,
+0x4C, 0xEB, 0x0B, 0x73, 0x0B, 0x61, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF5, 0x7C, 0x9A, 0x10, 0xF0,
+0x23, 0x6C, 0x8E, 0xF4, 0x90, 0x9C, 0x40, 0x9B,
+0x8C, 0xEA, 0x40, 0xDB, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x30, 0xF0, 0x20, 0x6A,
+0xC0, 0xF1, 0x08, 0x4A, 0x05, 0x6B, 0x65, 0xF4,
+0x64, 0xDA, 0x00, 0x6B, 0x65, 0xF4, 0x60, 0xDA,
+0x20, 0xE8, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF2, 0x58, 0x9A,
+0x06, 0xD4, 0x09, 0xD7, 0x07, 0xD5, 0x08, 0xD6,
+0x06, 0x04, 0x40, 0xEA, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x46, 0x67, 0x01, 0x4A,
+0x05, 0x67, 0x0C, 0xD6, 0x27, 0x67, 0x1F, 0x22,
+0x1F, 0xF7, 0x00, 0x6A, 0xAC, 0xEA, 0x02, 0xF0,
+0x00, 0x72, 0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x48, 0x9A, 0x04, 0x10,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF2, 0x4C, 0x9A,
+0x49, 0xE0, 0x40, 0x9A, 0x0C, 0x94, 0x04, 0xD2,
+0x30, 0xF0, 0x20, 0x6A, 0xAE, 0xF4, 0x50, 0x9A,
+0x40, 0xEA, 0x0C, 0x93, 0x24, 0xEA, 0x6F, 0xEA,
+0x04, 0x93, 0x6C, 0xEA, 0x4D, 0xE9, 0x1F, 0xF7,
+0x00, 0x6A, 0x0C, 0xEA, 0x02, 0xF0, 0x00, 0x72,
+0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x4C, 0x9A, 0x41, 0xE0,
+0x20, 0xD8, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x1F, 0xF7, 0x00, 0x6A,
+0xAC, 0xEA, 0x02, 0xF0, 0x00, 0x72, 0x26, 0x67,
+0x01, 0x60, 0x05, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x2E, 0xF2, 0x48, 0x9A, 0x04, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF2, 0x4C, 0x9A, 0x55, 0xE5,
+0x30, 0xF0, 0x20, 0x6A, 0x00, 0x9D, 0xAE, 0xF4,
+0x50, 0x9A, 0x91, 0x67, 0x2C, 0xE8, 0x40, 0xEA,
+0x06, 0xEA, 0x50, 0x67, 0x07, 0x97, 0x06, 0x91,
+0x05, 0x90, 0x04, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x00, 0x6A, 0x10, 0xF0,
+0x23, 0x6B, 0xEE, 0xF2, 0x7C, 0x9B, 0x54, 0x34,
+0x01, 0x4A, 0x71, 0xE4, 0xA0, 0xA4, 0xF8, 0x6B,
+0xAC, 0xEB, 0x60, 0xC4, 0xFF, 0x6B, 0x6C, 0xEA,
+0x80, 0x72, 0xF1, 0x61, 0x80, 0x18, 0x7B, 0x07,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFD, 0x63, 0x05, 0x62, 0x60, 0xA4, 0x30, 0xF0,
+0x20, 0x6A, 0xC0, 0xF1, 0x08, 0x4A, 0xC5, 0xF6,
+0x71, 0xC2, 0x61, 0xA4, 0x65, 0xF4, 0x6A, 0xC2,
+0x62, 0xA4, 0xC5, 0xF6, 0x70, 0xC2, 0xA3, 0xA4,
+0x0F, 0x6B, 0xAC, 0xEB, 0xC5, 0xF6, 0x74, 0xC2,
+0x63, 0xA4, 0x72, 0x33, 0xC5, 0xF6, 0x75, 0xC2,
+0x80, 0x18, 0x21, 0x0A, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFD, 0x63, 0x05, 0x62,
+0x68, 0xA4, 0x30, 0xF0, 0x20, 0x6A, 0xC0, 0xF1,
+0x08, 0x4A, 0xC5, 0xF6, 0x71, 0xC2, 0x69, 0xA4,
+0x65, 0xF4, 0x6A, 0xC2, 0x6A, 0xA4, 0xC5, 0xF6,
+0x70, 0xC2, 0xAB, 0xA4, 0x0F, 0x6B, 0xAC, 0xEB,
+0xC5, 0xF6, 0x74, 0xC2, 0x6B, 0xA4, 0x72, 0x33,
+0xC5, 0xF6, 0x75, 0xC2, 0x80, 0x18, 0x21, 0x0A,
+0x05, 0x97, 0x00, 0x6A, 0x03, 0x63, 0x00, 0xEF,
+0xFD, 0x63, 0x05, 0x62, 0xFF, 0x6A, 0x8C, 0xEA,
+0x11, 0x72, 0x04, 0x61, 0x85, 0x67, 0x80, 0x18,
+0xD7, 0x07, 0x0C, 0x10, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF2, 0x68, 0x9A, 0x10, 0xF0, 0x23, 0x6C,
+0xAE, 0xF2, 0x98, 0x9C, 0x40, 0x9B, 0x8D, 0xEA,
+0x40, 0xDB, 0xFF, 0x6A, 0x05, 0x97, 0x03, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0x01, 0x6A, 0x20, 0xE8,
+0x20, 0xE8, 0x00, 0x65, 0x20, 0xE8, 0x00, 0x65,
+0x20, 0xE8, 0x00, 0x65, 0xFC, 0x63, 0x07, 0x62,
+0x06, 0xD1, 0x05, 0xD0, 0x01, 0x75, 0x1F, 0x61,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3, 0x20, 0x9A,
+0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98,
+0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E,
+0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
+0x41, 0xF1, 0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
+0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2, 0x2C, 0x9A,
+0x21, 0xF4, 0x00, 0x6C, 0xCE, 0xF4, 0x50, 0x98,
+0xB1, 0x67, 0x00, 0x6E, 0x46, 0x10, 0x02, 0x75,
+0x26, 0x61, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3,
+0x20, 0x9A, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1, 0x08, 0x6C,
+0x02, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0xB1, 0x67, 0x41, 0xF1, 0x0C, 0x6C, 0x01, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6A, 0x8E, 0xF2,
+0x2C, 0x9A, 0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF4,
+0x00, 0x6C, 0xB1, 0x67, 0x00, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0xE1, 0xF0, 0x10, 0x6C,
+0xB1, 0x67, 0x01, 0x6E, 0x25, 0x10, 0x10, 0xF0,
+0x23, 0x6A, 0x0E, 0xF3, 0x20, 0x9A, 0x30, 0xF0,
+0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67,
+0x41, 0xF1, 0x08, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0xB1, 0x67, 0x41, 0xF1,
+0x0C, 0x6C, 0x02, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x23, 0x6A, 0x8E, 0xF2, 0x2C, 0x9A, 0xCE, 0xF4,
+0x50, 0x98, 0x21, 0xF4, 0x00, 0x6C, 0xB1, 0x67,
+0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0xE1, 0xF0, 0x10, 0x6C, 0xB1, 0x67, 0x00, 0x6E,
+0x40, 0xEA, 0x07, 0x97, 0x06, 0x91, 0x05, 0x90,
+0x04, 0x63, 0x00, 0xEF, 0xFD, 0x63, 0x05, 0x62,
+0x03, 0x25, 0x01, 0x6A, 0x4B, 0xEA, 0x0C, 0x10,
+0x10, 0xF0, 0x23, 0x6A, 0xFF, 0x6C, 0x0E, 0xF3,
+0xBC, 0x9A, 0xCC, 0xEC, 0x88, 0x34, 0x05, 0xF0,
+0x00, 0x4C, 0xEC, 0xED, 0x00, 0x18, 0xC2, 0xD2,
+0x05, 0x97, 0x03, 0x63, 0x00, 0xEF, 0x00, 0x65,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x0E, 0x90, 0x41, 0x2D, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF3, 0x5C, 0x9A, 0xFF, 0x69, 0xCC, 0xE9,
+0x4C, 0xEF, 0x4A, 0xEF, 0x04, 0xD7, 0x19, 0x60,
+0xD1, 0x67, 0xE2, 0x67, 0x80, 0x18, 0x33, 0x08,
+0x61, 0x42, 0x31, 0x23, 0x00, 0x6C, 0x64, 0x67,
+0x04, 0x95, 0x01, 0x6E, 0xA6, 0xEC, 0xCC, 0xED,
+0x07, 0x2D, 0x01, 0x4B, 0xFF, 0x6D, 0xAC, 0xEB,
+0x14, 0x73, 0x01, 0x4C, 0xF5, 0x61, 0x14, 0x6B,
+0x04, 0x94, 0x04, 0xEB, 0x8F, 0xEB, 0x4C, 0xEB,
+0x6D, 0xE8, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3,
+0x7C, 0x9A, 0x10, 0xF0, 0x23, 0x6E, 0x2E, 0xF3,
+0xC0, 0x9E, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x50, 0x9A, 0x0C, 0xEB, 0x00, 0xF5, 0x20, 0x31,
+0x2D, 0xEB, 0x01, 0x6D, 0x81, 0xF4, 0x10, 0x6C,
+0xAB, 0xED, 0x6C, 0xEE, 0x40, 0xEA, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x5C, 0x9A, 0x0D, 0x6C,
+0x40, 0xEA, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xF9, 0x63, 0x0D, 0x62,
+0x0C, 0xD1, 0x0B, 0xD0, 0x0E, 0xD4, 0x6B, 0xA4,
+0xFF, 0x68, 0xAC, 0xE8, 0x01, 0x6A, 0x60, 0xF1,
+0x0B, 0x2B, 0x30, 0xF0, 0x21, 0x6A, 0xF1, 0xF0,
+0x1C, 0xC2, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3,
+0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
+0x33, 0x08, 0x08, 0xD2, 0x08, 0x93, 0x00, 0x6A,
+0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A, 0x01, 0x6B,
+0x4C, 0xEB, 0x07, 0xD3, 0x0E, 0x93, 0x60, 0xF2,
+0x50, 0xA3, 0x00, 0x6B, 0x06, 0xD3, 0x12, 0x2A,
+0x10, 0xF0, 0x23, 0x6A, 0x0E, 0x94, 0x0E, 0xF3,
+0xFC, 0x9A, 0xA3, 0x67, 0xB8, 0x6E, 0x80, 0x18,
+0x33, 0x08, 0x06, 0xD2, 0x06, 0x93, 0x00, 0x6A,
+0x01, 0x4B, 0x01, 0x23, 0x01, 0x6A, 0x07, 0x93,
+0x4C, 0xEB, 0x07, 0xD3, 0x0F, 0x58, 0x69, 0x60,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3, 0x24, 0x9A,
+0x08, 0x92, 0x30, 0xF0, 0x20, 0x6B, 0x01, 0xF4,
+0x1C, 0x6C, 0x4C, 0xE9, 0xCE, 0xF4, 0x50, 0x9B,
+0x01, 0xF7, 0x00, 0x6D, 0x00, 0x6E, 0x40, 0xEA,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF4, 0x50, 0x9B,
+0x10, 0xF0, 0x23, 0x6B, 0x2E, 0xF3, 0xA8, 0x9B,
+0x61, 0xF0, 0x00, 0x6C, 0x61, 0xF1, 0x0A, 0x6E,
+0x40, 0xEA, 0x0E, 0x93, 0x0D, 0xE9, 0x60, 0xF2,
+0x50, 0xA3, 0x07, 0x2A, 0x10, 0xF0, 0x23, 0x6A,
+0x06, 0x93, 0x2E, 0xF3, 0x4C, 0x9A, 0x4D, 0xEB,
+0x06, 0xD3, 0x0E, 0x70, 0x1C, 0x61, 0x30, 0xF0,
+0x20, 0x68, 0xCE, 0xF4, 0x50, 0x98, 0x01, 0x6D,
+0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x17, 0xF0,
+0x1C, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0x21, 0xF2, 0x08, 0x6C, 0xFF, 0xF7, 0x1F, 0x6D,
+0x00, 0x6E, 0x40, 0xEA, 0x01, 0x6D, 0xCE, 0xF4,
+0x50, 0x98, 0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED,
+0x66, 0xF6, 0x07, 0x6E, 0x20, 0x10, 0x30, 0xF0,
+0x20, 0x68, 0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4,
+0x70, 0x98, 0x2E, 0xF3, 0xD0, 0x9A, 0x01, 0x6D,
+0x21, 0xF2, 0x04, 0x6C, 0xAB, 0xED, 0x40, 0xEB,
+0xCE, 0xF4, 0x50, 0x98, 0x21, 0xF2, 0x08, 0x6C,
+0xFF, 0xF7, 0x1F, 0x6D, 0x11, 0xF0, 0x10, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
+0x50, 0x98, 0x2E, 0xF3, 0xD4, 0x9B, 0x01, 0x6D,
+0xA1, 0xF2, 0x0C, 0x6C, 0xAB, 0xED, 0x40, 0xEA,
+0xAE, 0x10, 0x24, 0x58, 0xC0, 0xF0, 0x0F, 0x61,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3, 0x24, 0x9A,
+0x08, 0x92, 0x68, 0x40, 0xE4, 0x4B, 0x4C, 0xE9,
+0xFF, 0x6A, 0x4C, 0xEB, 0x1D, 0x5B, 0x0D, 0xE9,
+0x12, 0x61, 0x68, 0x40, 0xA4, 0x4B, 0x4C, 0xEB,
+0x29, 0x5B, 0x05, 0x60, 0x10, 0xF0, 0x23, 0x6A,
+0xAE, 0xF2, 0x58, 0x9A, 0x07, 0x10, 0x8D, 0x58,
+0xA0, 0xF0, 0x15, 0x61, 0x10, 0xF0, 0x23, 0x6A,
+0xEE, 0xF2, 0x54, 0x9A, 0x4D, 0xE9, 0x68, 0x40,
+0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB, 0x1D, 0x5B,
+0x0A, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x50, 0x9A, 0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7,
+0x00, 0x6D, 0x01, 0x6E, 0x1B, 0x10, 0x68, 0x40,
+0xA4, 0x4B, 0x4C, 0xEB, 0x2D, 0x5B, 0x0A, 0x60,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
+0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7, 0x00, 0x6D,
+0x02, 0x6E, 0x0C, 0x10, 0x95, 0x58, 0x80, 0xF0,
+0x0E, 0x61, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x50, 0x9A, 0x01, 0xF4, 0x1C, 0x6C, 0x01, 0xF7,
+0x00, 0x6D, 0x03, 0x6E, 0x40, 0xEA, 0x68, 0x40,
+0xE4, 0x4B, 0xFF, 0x6A, 0x4C, 0xEB, 0x0D, 0x5B,
+0x0D, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
+0x23, 0x6B, 0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0,
+0x00, 0x6C, 0x2E, 0xF3, 0xA8, 0x9B, 0x80, 0xF4,
+0x14, 0x6E, 0x35, 0x10, 0x68, 0x40, 0xD4, 0x4B,
+0x4C, 0xEB, 0x0D, 0x5B, 0x0D, 0x60, 0x30, 0xF0,
+0x20, 0x6A, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
+0x50, 0x9A, 0x61, 0xF0, 0x00, 0x6C, 0x2E, 0xF3,
+0xA8, 0x9B, 0x40, 0xF4, 0x13, 0x6E, 0x23, 0x10,
+0x68, 0x40, 0xA4, 0x4B, 0x4C, 0xEB, 0x11, 0x5B,
+0x0D, 0x60, 0x30, 0xF0, 0x20, 0x6A, 0x10, 0xF0,
+0x23, 0x6B, 0xCE, 0xF4, 0x50, 0x9A, 0x61, 0xF0,
+0x00, 0x6C, 0x2E, 0xF3, 0xA8, 0x9B, 0x40, 0xF4,
+0x12, 0x6E, 0x11, 0x10, 0x68, 0x40, 0x92, 0x4B,
+0x4C, 0xEB, 0x3C, 0x5B, 0x48, 0x60, 0x30, 0xF0,
+0x20, 0x6A, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
+0x50, 0x9A, 0x2E, 0xF3, 0xA8, 0x9B, 0x61, 0xF0,
+0x00, 0x6C, 0x00, 0xF4, 0x12, 0x6E, 0x40, 0xEA,
+0x0E, 0x93, 0x60, 0xF2, 0x50, 0xA3, 0x13, 0x2A,
+0xC7, 0x48, 0xFF, 0x6A, 0x4C, 0xE8, 0x13, 0x58,
+0x07, 0x60, 0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3,
+0x58, 0x9A, 0x06, 0x93, 0x4C, 0xEB, 0x06, 0x10,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3, 0x4C, 0x9A,
+0x06, 0x93, 0x4D, 0xEB, 0x06, 0xD3, 0x10, 0xF0,
+0x23, 0x6A, 0x0E, 0xF3, 0x1C, 0x4A, 0x0E, 0x94,
+0xE0, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x04, 0xD1,
+0x80, 0x18, 0x3E, 0x08, 0x07, 0x90, 0x0E, 0x93,
+0x4C, 0xE8, 0x60, 0xF2, 0x50, 0xA3, 0x0F, 0x2A,
+0x83, 0x67, 0x10, 0xF0, 0x23, 0x6B, 0x0E, 0xF3,
+0x1C, 0x4B, 0x06, 0x92, 0xE0, 0x9B, 0x00, 0x6D,
+0xB8, 0x6E, 0x04, 0xD2, 0x80, 0x18, 0x3E, 0x08,
+0x4C, 0xE8, 0xFF, 0x6A, 0x4C, 0xE8, 0x0B, 0xE8,
+0xC0, 0xF7, 0x02, 0x32, 0x01, 0x10, 0x00, 0x6A,
+0x0D, 0x97, 0x0C, 0x91, 0x0B, 0x90, 0x07, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFA, 0x63, 0x0B, 0x62,
+0x0A, 0xD1, 0x09, 0xD0, 0xFF, 0x6A, 0xAC, 0xEA,
+0x06, 0xD2, 0x6B, 0xA4, 0x24, 0x67, 0x01, 0x6A,
+0x80, 0xF0, 0x16, 0x2B, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF3, 0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E,
+0x80, 0x18, 0x33, 0x08, 0x07, 0xD2, 0x06, 0x92,
+0x0F, 0x5A, 0x36, 0x60, 0x30, 0xF0, 0x20, 0x68,
+0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF2, 0xB0, 0x9B,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0xF0, 0x08, 0x6C,
+0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4, 0x50, 0x98,
+0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D, 0x00, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
+0x50, 0x98, 0xEE, 0xF2, 0xB4, 0x9B, 0x81, 0xF2,
+0x00, 0x6C, 0x00, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0x01, 0xF0, 0x14, 0x6C, 0x1F, 0xF4,
+0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA, 0x10, 0xF0,
+0x23, 0x6A, 0x2E, 0xF3, 0x1C, 0x9A, 0x07, 0x92,
+0x4C, 0xE8, 0x30, 0xF0, 0x21, 0x6A, 0x90, 0xF2,
+0x59, 0xA2, 0x03, 0x22, 0x91, 0x67, 0x00, 0x6D,
+0x38, 0x10, 0x91, 0x67, 0x01, 0x6D, 0x35, 0x10,
+0x06, 0x92, 0x24, 0x5A, 0x50, 0x61, 0x30, 0xF0,
+0x20, 0x68, 0x10, 0xF0, 0x23, 0x6B, 0xEE, 0xF2,
+0xB4, 0x9B, 0xCE, 0xF4, 0x50, 0x98, 0x81, 0xF2,
+0x00, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0xCE, 0xF4,
+0x50, 0x98, 0x40, 0xF4, 0x14, 0x6C, 0x80, 0x6D,
+0x01, 0x6E, 0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B,
+0xCE, 0xF4, 0x50, 0x98, 0xCE, 0xF2, 0xB0, 0x9B,
+0x01, 0xF0, 0x08, 0x6C, 0x00, 0x6E, 0x40, 0xEA,
+0xCE, 0xF4, 0x50, 0x98, 0x01, 0xF0, 0x14, 0x6C,
+0x1F, 0xF4, 0x00, 0x6D, 0x0F, 0x6E, 0x40, 0xEA,
+0x10, 0xF0, 0x23, 0x6A, 0x2E, 0xF3, 0x1C, 0x9A,
+0x07, 0x92, 0x91, 0x67, 0x02, 0x6D, 0x4C, 0xE8,
+0x10, 0xF0, 0x23, 0x6A, 0x4E, 0xF3, 0x40, 0x9A,
+0x4D, 0xE8, 0x00, 0x18, 0x6A, 0xC7, 0x10, 0xF0,
+0x23, 0x6A, 0x0E, 0xF3, 0xFC, 0x9A, 0x91, 0x67,
+0x00, 0x6D, 0x18, 0x6E, 0x04, 0xD0, 0x80, 0x18,
+0x3E, 0x08, 0x06, 0x95, 0x91, 0x67, 0x02, 0x67,
+0x80, 0x18, 0xF3, 0x07, 0x0C, 0x22, 0x07, 0x92,
+0x00, 0x6C, 0x01, 0x4A, 0x01, 0x22, 0x01, 0x6C,
+0xFF, 0x6B, 0x0C, 0xEB, 0x8C, 0xEB, 0x00, 0x6A,
+0x03, 0x23, 0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A,
+0x0B, 0x97, 0x0A, 0x91, 0x09, 0x90, 0x06, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFB, 0x63, 0x09, 0x62,
+0x08, 0xD1, 0x07, 0xD0, 0x0A, 0xD4, 0x0C, 0xD6,
+0x6B, 0xA4, 0xFF, 0x68, 0xAC, 0xE8, 0x01, 0x6A,
+0x20, 0xF1, 0x01, 0x2B, 0x06, 0x5E, 0x00, 0xF1,
+0x1D, 0x60, 0x01, 0x76, 0x02, 0x61, 0x03, 0x58,
+0x04, 0x10, 0x0C, 0x93, 0x02, 0x73, 0x03, 0x61,
+0x05, 0x58, 0x00, 0xF1, 0x13, 0x60, 0x0C, 0x93,
+0x30, 0xF0, 0x21, 0x6A, 0x0A, 0x94, 0xF1, 0xF0,
+0x78, 0xDA, 0x10, 0xF0, 0x23, 0x6A, 0x0E, 0xF3,
+0xFC, 0x9A, 0x00, 0x6D, 0x18, 0x6E, 0x80, 0x18,
+0x33, 0x08, 0x22, 0x67, 0x0C, 0x92, 0x06, 0x5A,
+0x08, 0x60, 0x48, 0x33, 0x10, 0xF0, 0x23, 0x6A,
+0x0E, 0xF1, 0x04, 0x4A, 0x69, 0xE2, 0x40, 0x9A,
+0x00, 0xEA, 0x51, 0x67, 0xDF, 0x10, 0x01, 0x6D,
+0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18,
+0xC2, 0xD2, 0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF3,
+0x64, 0x9B, 0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4,
+0xF0, 0x98, 0x4C, 0xEB, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF3, 0xC8, 0x9A, 0x01, 0x6D, 0xA1, 0xF0,
+0x0C, 0x6C, 0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEF,
+0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4, 0x50, 0x98,
+0xC1, 0xF0, 0x04, 0x6C, 0xCE, 0xF2, 0xAC, 0x9B,
+0xB8, 0x10, 0x01, 0x70, 0x09, 0x61, 0x30, 0xF0,
+0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A, 0x01, 0xF2,
+0x00, 0x6C, 0x10, 0x6D, 0x01, 0x6E, 0x08, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4, 0x50, 0x9A,
+0x01, 0xF2, 0x00, 0x6C, 0x10, 0x6D, 0x00, 0x6E,
+0x40, 0xEA, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
+0xAB, 0xED, 0x00, 0x18, 0xC2, 0xD2, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF3, 0xEC, 0x9B, 0x0F, 0x6E,
+0x0C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF3, 0x50, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
+0x4D, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x70, 0x9A, 0xED, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C,
+0xAB, 0xED, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x23, 0x6B,
+0xCE, 0xF2, 0xAC, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4, 0x01, 0x6A,
+0x4B, 0xEA, 0x2C, 0xEA, 0x01, 0xF0, 0x00, 0x6B,
+0x2F, 0x10, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
+0xAB, 0xED, 0x00, 0x18, 0xC2, 0xD2, 0x10, 0xF0,
+0x23, 0x6B, 0x4E, 0xF3, 0xF4, 0x9B, 0x0F, 0x6E,
+0x0C, 0xEE, 0x4C, 0xEF, 0x10, 0xF0, 0x23, 0x6A,
+0x4E, 0xF3, 0x58, 0x9A, 0xC8, 0x36, 0x01, 0x6D,
+0x4D, 0xEE, 0x30, 0xF0, 0x20, 0x6A, 0xCE, 0xF4,
+0x70, 0x9A, 0xED, 0xEE, 0xA1, 0xF0, 0x0C, 0x6C,
+0xAB, 0xED, 0x40, 0xEB, 0x30, 0xF0, 0x20, 0x6B,
+0xCE, 0xF4, 0x50, 0x9B, 0x10, 0xF0, 0x23, 0x6B,
+0xCE, 0xF2, 0xAC, 0x9B, 0xC1, 0xF0, 0x04, 0x6C,
+0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4, 0x01, 0x6A,
+0x4B, 0xEA, 0x2C, 0xEA, 0x00, 0xF4, 0x00, 0x6B,
+0x6D, 0xEA, 0x48, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
+0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0xC2, 0xD2,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF3, 0x7C, 0x9B,
+0x30, 0xF0, 0x20, 0x68, 0x01, 0x6D, 0x4C, 0xEB,
+0x10, 0xF0, 0x23, 0x6A, 0xCE, 0xF4, 0xF0, 0x98,
+0xA1, 0xF0, 0x0C, 0x6C, 0xAB, 0xED, 0x6E, 0xF3,
+0xC0, 0x9A, 0x17, 0x10, 0x01, 0x6D, 0xA1, 0xF0,
+0x0C, 0x6C, 0xAB, 0xED, 0x00, 0x18, 0xC2, 0xD2,
+0x10, 0xF0, 0x23, 0x6B, 0x4E, 0xF3, 0x7C, 0x9B,
+0x30, 0xF0, 0x20, 0x68, 0xCE, 0xF4, 0xF0, 0x98,
+0x4C, 0xEB, 0x10, 0xF0, 0x23, 0x6A, 0x6E, 0xF3,
+0xC4, 0x9A, 0x01, 0x6D, 0xA1, 0xF0, 0x0C, 0x6C,
+0xAB, 0xED, 0x6D, 0xEE, 0x40, 0xEF, 0x10, 0xF0,
+0x23, 0x6B, 0xCE, 0xF2, 0xAC, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0xC1, 0xF0, 0x04, 0x6C, 0x00, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0xCE, 0xF4,
+0x50, 0x98, 0x8E, 0xF2, 0xAC, 0x9B, 0xC1, 0xF0,
+0x08, 0x6C, 0x01, 0x6E, 0x40, 0xEA, 0x01, 0xF4,
+0x00, 0x6A, 0x2D, 0xEA, 0x04, 0xD2, 0x10, 0xF0,
+0x23, 0x6A, 0x0A, 0x94, 0x0E, 0xF3, 0xFC, 0x9A,
+0x00, 0x6D, 0x18, 0x6E, 0x01, 0x49, 0x80, 0x18,
+0x3E, 0x08, 0x00, 0x6C, 0x01, 0x21, 0x01, 0x6C,
+0xFF, 0x6B, 0x4C, 0xEB, 0x8C, 0xEB, 0x06, 0x23,
+0x0A, 0x94, 0x0C, 0x95, 0x80, 0x18, 0xF7, 0x07,
+0x01, 0x6A, 0x01, 0x10, 0x00, 0x6A, 0x09, 0x97,
+0x08, 0x91, 0x07, 0x90, 0x05, 0x63, 0x00, 0xEF,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0xFF, 0x68, 0x0C, 0xED, 0x24, 0x67, 0x0D, 0xD7,
+0x04, 0xD5, 0xCC, 0xE8, 0x80, 0x18, 0x23, 0x09,
+0x0F, 0x22, 0x04, 0x95, 0x91, 0x67, 0x80, 0x18,
+0x65, 0x08, 0x0A, 0x22, 0x0D, 0x96, 0x91, 0x67,
+0xB0, 0x67, 0x80, 0x18, 0x77, 0x09, 0x4B, 0xEB,
+0x4D, 0xEB, 0xC0, 0xF7, 0x62, 0x32, 0x01, 0x10,
+0x00, 0x6A, 0x09, 0x97, 0x08, 0x91, 0x07, 0x90,
+0x05, 0x63, 0x00, 0xEF, 0x30, 0xF0, 0x20, 0x6B,
+0x86, 0xF0, 0x99, 0xA3, 0x30, 0xF0, 0x20, 0x6A,
+0x1F, 0x6B, 0x8C, 0xEB, 0xAF, 0xF4, 0x18, 0x4A,
+0xC0, 0xF5, 0x7C, 0xC2, 0xFF, 0x6D, 0xFF, 0x4B,
+0xAC, 0xEB, 0x00, 0x6C, 0x07, 0x5B, 0xC0, 0xF5,
+0x9F, 0xC2, 0x08, 0x60, 0x10, 0xF0, 0x23, 0x6A,
+0x68, 0x33, 0x0E, 0xF1, 0x1C, 0x4A, 0x69, 0xE2,
+0x40, 0x9A, 0x00, 0xEA, 0x01, 0x6B, 0xC0, 0xF5,
+0x7D, 0xC2, 0xC0, 0xF5, 0x9E, 0xC2, 0x0A, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
+0x01, 0x6B, 0xC0, 0xF5, 0x7D, 0xC2, 0xC0, 0xF5,
+0x7E, 0xC2, 0x00, 0x6C, 0xE0, 0xF5, 0x81, 0xC2,
+0x38, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4,
+0x18, 0x4A, 0x01, 0x6B, 0xC0, 0xF5, 0x7D, 0xC2,
+0x08, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0x01, 0x6B,
+0xAF, 0xF4, 0x18, 0x4A, 0xC0, 0xF5, 0x7D, 0xC2,
+0x00, 0x6B, 0xC0, 0xF5, 0x7E, 0xC2, 0x23, 0x10,
+0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A,
+0x01, 0x6C, 0x00, 0x6B, 0xC0, 0xF5, 0x9D, 0xC2,
+0xC0, 0xF5, 0x7E, 0xC2, 0xDF, 0x17, 0x30, 0xF0,
+0x20, 0x6A, 0xAF, 0xF4, 0x18, 0x4A, 0x00, 0x6B,
+0x02, 0x6C, 0xC0, 0xF5, 0x7D, 0xC2, 0xE0, 0xF5,
+0x61, 0xC2, 0xC0, 0xF5, 0x9E, 0xC2, 0x01, 0x6B,
+0x0C, 0x10, 0x30, 0xF0, 0x20, 0x6A, 0xAF, 0xF4,
+0x18, 0x4A, 0x01, 0x6B, 0x00, 0x6C, 0xC0, 0xF5,
+0x7D, 0xC2, 0xC0, 0xF5, 0x9E, 0xC2, 0xE0, 0xF5,
+0x61, 0xC2, 0xE0, 0xF5, 0x60, 0xC2, 0x20, 0xE8,
+0xFB, 0x63, 0x09, 0x62, 0x08, 0xD1, 0x07, 0xD0,
+0x30, 0xF0, 0x20, 0x6B, 0xFF, 0x6A, 0xAF, 0xF4,
+0x18, 0x4B, 0x8C, 0xEA, 0xC0, 0xF5, 0x9D, 0xA3,
+0x4F, 0x24, 0xC0, 0xF5, 0x7F, 0xA3, 0x00, 0x69,
+0x01, 0x23, 0x01, 0x69, 0x30, 0xF0, 0x21, 0x6B,
+0x90, 0xF2, 0x78, 0xA3, 0x02, 0x2B, 0x01, 0x6B,
+0x6E, 0xE9, 0x05, 0x2A, 0x3B, 0x10, 0x01, 0x6A,
+0x4E, 0xE9, 0x04, 0xD2, 0x02, 0x10, 0x00, 0x6A,
+0x04, 0xD2, 0x10, 0xF0, 0x23, 0x6B, 0x30, 0xF0,
+0x20, 0x68, 0x6E, 0xF3, 0xA8, 0x9B, 0xCE, 0xF4,
+0x50, 0x98, 0x4C, 0x6C, 0x02, 0x6E, 0x40, 0xEA,
+0x04, 0x93, 0x14, 0x2B, 0xCE, 0xF4, 0x50, 0x98,
+0xA1, 0xF4, 0x14, 0x6C, 0xFF, 0x6D, 0x77, 0x6E,
+0x40, 0xEA, 0x01, 0x59, 0x38, 0x67, 0x10, 0xF0,
+0x23, 0x6B, 0x02, 0x6E, 0xCE, 0xF4, 0x50, 0x98,
+0xA1, 0xF4, 0x14, 0x6C, 0x0E, 0xF3, 0xA0, 0x9B,
+0x3B, 0xE6, 0x12, 0x10, 0xCE, 0xF4, 0x50, 0x98,
+0xA1, 0xF4, 0x14, 0x6C, 0xFF, 0x6D, 0x66, 0x6E,
+0x40, 0xEA, 0x10, 0xF0, 0x23, 0x6B, 0x01, 0x59,
+0xCE, 0xF4, 0x50, 0x98, 0x0E, 0xF3, 0xA0, 0x9B,
+0xD8, 0x67, 0xA1, 0xF4, 0x14, 0x6C, 0x01, 0x4E,
+0x40, 0xEA, 0x06, 0x10, 0x30, 0xF0, 0x21, 0x6A,
+0x90, 0xF2, 0x59, 0xA2, 0xC0, 0x22, 0xC3, 0x17,
+0x09, 0x97, 0x08, 0x91, 0x07, 0x90, 0x05, 0x63,
+0x00, 0xEF, 0x00, 0x65, 0xFF, 0x6A, 0x4C, 0xEC,
+0x0F, 0x5C, 0x09, 0x60, 0x10, 0xF0, 0x23, 0x6A,
+0x6E, 0xF3, 0x6C, 0x9A, 0xFC, 0x6A, 0x80, 0xA3,
+0x8C, 0xEA, 0x40, 0xC3, 0x20, 0xE8, 0x24, 0x5C,
+0x0A, 0x61, 0x10, 0xF0, 0x23, 0x6B, 0x6E, 0xF3,
+0x8C, 0x9B, 0x03, 0x6D, 0x60, 0xA4, 0x4C, 0xEB,
+0xAD, 0xEB, 0x4C, 0xEB, 0x60, 0xC4, 0x20, 0xE8,
+0x10, 0xF0, 0x21, 0x6A, 0x84, 0xF4, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x24, 0xF5, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC4, 0xF5, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x24, 0xF6, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x64, 0xF6, 0x04, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE4, 0xF6, 0x00, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0x8E, 0xF6, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xE4, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x40, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x65, 0xF1, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x44, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x45, 0xF2, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x48, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x45, 0xF3, 0x08, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x4C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC5, 0xF5, 0x10, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x50, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA5, 0xF7, 0x14, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x54, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xA5, 0xF7, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x58, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0x06, 0xF1, 0x18, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xAE, 0xF6, 0x5C, 0xDB,
+0x10, 0xF0, 0x21, 0x6A, 0xC6, 0xF1, 0x0C, 0x4A,
+0x30, 0xF0, 0x20, 0x6B, 0xCE, 0xF6, 0x40, 0xDB,
+0x20, 0xE8, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00,
+0x3F, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+};
+
+u32 array_length_mp_8821c_fw_spic = 73216;
+
+
diff --git a/drivers/net/wireless/realtek/rtw88/debug.c b/drivers/net/wireless/realtek/rtw88/debug.c
index c26a6905fd15..b67d69b01f87 100644
--- a/drivers/net/wireless/realtek/rtw88/debug.c
+++ b/drivers/net/wireless/realtek/rtw88/debug.c
@@ -308,7 +308,7 @@ static int rtw_debugfs_get_rsvd_page(struct seq_file *m, void *v)
 {
 	struct rtw_debugfs_priv *debugfs_priv = m->private;
 	struct rtw_dev *rtwdev = debugfs_priv->rtwdev;
-	u8 page_size = rtwdev->chip->page_size;
+	u16 page_size = rtwdev->chip->page_size;
 	u32 buf_size = debugfs_priv->rsvd_page.page_num * page_size;
 	u32 offset = debugfs_priv->rsvd_page.page_offset * page_size;
 	u8 *buf;
@@ -654,10 +654,10 @@ static void rtw_print_rate(struct seq_file *m, u8 rate)
 	case DESC_RATE6M...DESC_RATE54M:
 		rtw_print_ofdm_rate_txt(m, rate);
 		break;
-	case DESC_RATEMCS0...DESC_RATEMCS15:
+	case DESC_RATEMCS0...DESC_RATEMCS31:
 		rtw_print_ht_rate_txt(m, rate);
 		break;
-	case DESC_RATEVHT1SS_MCS0...DESC_RATEVHT2SS_MCS9:
+	case DESC_RATEVHT1SS_MCS0...DESC_RATEVHT4SS_MCS9:
 		rtw_print_vht_rate_txt(m, rate);
 		break;
 	default:
@@ -692,9 +692,11 @@ static int rtw_debugfs_get_tx_pwr_tbl(struct seq_file *m, void *v)
 {
 	struct rtw_debugfs_priv *debugfs_priv = m->private;
 	struct rtw_dev *rtwdev = debugfs_priv->rtwdev;
+	struct rtw_power_params pwr_param = {0};
 	struct rtw_hal *hal = &rtwdev->hal;
+	u8 nss = rtwdev->efuse.hw_cap.nss;
 	u8 path, rate, bw, ch, regd;
-	struct rtw_power_params pwr_param = {0};
+	u8 max_ht_rate, max_rate;
 
 	mutex_lock(&rtwdev->mutex);
 	bw = hal->current_band_width;
@@ -707,19 +709,23 @@ static int rtw_debugfs_get_tx_pwr_tbl(struct seq_file *m, void *v)
 	seq_printf(m, "%-4s %-10s %-9s %-9s (%-4s %-4s %-4s) %-4s\n",
 		   "path", "rate", "pwr", "base", "byr", "lmt", "sar", "rem");
 
+	max_ht_rate = DESC_RATEMCS0 + nss * 8 - 1;
+
+	if (rtwdev->chip->vht_supported)
+		max_rate = DESC_RATEVHT1SS_MCS0 + nss * 10 - 1;
+	else
+		max_rate = max_ht_rate;
+
 	mutex_lock(&hal->tx_power_mutex);
-	for (path = RF_PATH_A; path <= RF_PATH_B; path++) {
+	for (path = RF_PATH_A; path < hal->rf_path_num; path++) {
 		/* there is no CCK rates used in 5G */
 		if (hal->current_band_type == RTW_BAND_5G)
 			rate = DESC_RATE6M;
 		else
 			rate = DESC_RATE1M;
 
-		/* now, not support vht 3ss and vht 4ss*/
-		for (; rate <= DESC_RATEVHT2SS_MCS9; rate++) {
-			/* now, not support ht 3ss and ht 4ss*/
-			if (rate > DESC_RATEMCS15 &&
-			    rate < DESC_RATEVHT1SS_MCS0)
+		for (; rate <= max_rate; rate++) {
+			if (rate > max_ht_rate && rate <= DESC_RATEMCS31)
 				continue;
 
 			rtw_get_tx_power_params(rtwdev, path, rate, bw,
@@ -849,20 +855,28 @@ static int rtw_debugfs_get_phy_info(struct seq_file *m, void *v)
 			   last_cnt->num_qry_pkt[rate_id + 9]);
 	}
 
-	seq_printf(m, "[RSSI(dBm)] = {%d, %d}\n",
+	seq_printf(m, "[RSSI(dBm)] = {%d, %d, %d, %d}\n",
 		   dm_info->rssi[RF_PATH_A] - 100,
-		   dm_info->rssi[RF_PATH_B] - 100);
-	seq_printf(m, "[Rx EVM(dB)] = {-%d, -%d}\n",
+		   dm_info->rssi[RF_PATH_B] - 100,
+		   dm_info->rssi[RF_PATH_C] - 100,
+		   dm_info->rssi[RF_PATH_D] - 100);
+	seq_printf(m, "[Rx EVM(dB)] = {-%d, -%d, -%d, -%d}\n",
 		   dm_info->rx_evm_dbm[RF_PATH_A],
-		   dm_info->rx_evm_dbm[RF_PATH_B]);
-	seq_printf(m, "[Rx SNR] = {%d, %d}\n",
+		   dm_info->rx_evm_dbm[RF_PATH_B],
+		   dm_info->rx_evm_dbm[RF_PATH_C],
+		   dm_info->rx_evm_dbm[RF_PATH_D]);
+	seq_printf(m, "[Rx SNR] = {%d, %d, %d, %d}\n",
 		   dm_info->rx_snr[RF_PATH_A],
-		   dm_info->rx_snr[RF_PATH_B]);
-	seq_printf(m, "[CFO_tail(KHz)] = {%d, %d}\n",
+		   dm_info->rx_snr[RF_PATH_B],
+		   dm_info->rx_snr[RF_PATH_C],
+		   dm_info->rx_snr[RF_PATH_D]);
+	seq_printf(m, "[CFO_tail(KHz)] = {%d, %d, %d, %d}\n",
 		   dm_info->cfo_tail[RF_PATH_A],
-		   dm_info->cfo_tail[RF_PATH_B]);
+		   dm_info->cfo_tail[RF_PATH_B],
+		   dm_info->cfo_tail[RF_PATH_C],
+		   dm_info->cfo_tail[RF_PATH_D]);
 
-	if (dm_info->curr_rx_rate >= DESC_RATE11M) {
+	if (dm_info->curr_rx_rate >= DESC_RATE6M) {
 		seq_puts(m, "[Rx Average Status]:\n");
 		seq_printf(m, " * OFDM, EVM: {-%d}, SNR: {%d}\n",
 			   (u8)ewma_evm_read(&ewma_evm[RTW_EVM_OFDM]),
@@ -875,6 +889,13 @@ static int rtw_debugfs_get_phy_info(struct seq_file *m, void *v)
 			   (u8)ewma_evm_read(&ewma_evm[RTW_EVM_2SS_B]),
 			   (u8)ewma_snr_read(&ewma_snr[RTW_SNR_2SS_A]),
 			   (u8)ewma_snr_read(&ewma_snr[RTW_SNR_2SS_B]));
+		seq_printf(m, " * 3SS, EVM: {-%d, -%d, -%d}, SNR: {%d, %d, %d}\n",
+			   (u8)ewma_evm_read(&ewma_evm[RTW_EVM_3SS_A]),
+			   (u8)ewma_evm_read(&ewma_evm[RTW_EVM_3SS_B]),
+			   (u8)ewma_evm_read(&ewma_evm[RTW_EVM_3SS_C]),
+			   (u8)ewma_snr_read(&ewma_snr[RTW_SNR_3SS_A]),
+			   (u8)ewma_snr_read(&ewma_snr[RTW_SNR_3SS_B]),
+			   (u8)ewma_snr_read(&ewma_snr[RTW_SNR_3SS_C]));
 	}
 
 	seq_puts(m, "[Rx Counter]:\n");
diff --git a/drivers/net/wireless/realtek/rtw88/debug.h b/drivers/net/wireless/realtek/rtw88/debug.h
index 6570e84d8d24..12d5d3044e6a 100644
--- a/drivers/net/wireless/realtek/rtw88/debug.h
+++ b/drivers/net/wireless/realtek/rtw88/debug.h
@@ -71,6 +71,7 @@ static inline bool rtw_dbg_is_enabled(struct rtw_dev *rtwdev,
 
 #define rtw_info(rtwdev, a...) dev_info(rtwdev->dev, ##a)
 #define rtw_warn(rtwdev, a...) dev_warn(rtwdev->dev, ##a)
+#define rtw_warn_once(rtwdev, a...) dev_warn_once(rtwdev->dev, ##a)
 #define rtw_err(rtwdev, a...) dev_err(rtwdev->dev, ##a)
 
 #endif
diff --git a/drivers/net/wireless/realtek/rtw88/fw.c b/drivers/net/wireless/realtek/rtw88/fw.c
index b9b0114e253b..35cadb14cd33 100644
--- a/drivers/net/wireless/realtek/rtw88/fw.c
+++ b/drivers/net/wireless/realtek/rtw88/fw.c
@@ -139,25 +139,30 @@ static u16 get_max_amsdu_len(u32 bit_rate)
 struct rtw_fw_iter_ra_data {
 	struct rtw_dev *rtwdev;
 	u8 *payload;
+	u8 length;
 };
 
 static void rtw_fw_ra_report_iter(void *data, struct ieee80211_sta *sta)
 {
 	struct rtw_fw_iter_ra_data *ra_data = data;
+	struct rtw_c2h_ra_rpt *ra_rpt = (struct rtw_c2h_ra_rpt *)ra_data->payload;
 	struct rtw_sta_info *si = (struct rtw_sta_info *)sta->drv_priv;
 	u8 mac_id, rate, sgi, bw;
 	u8 mcs, nss;
 	u32 bit_rate;
 
-	mac_id = GET_RA_REPORT_MACID(ra_data->payload);
+	mac_id = ra_rpt->mac_id;
 	if (si->mac_id != mac_id)
 		return;
 
 	si->ra_report.txrate.flags = 0;
 
-	rate = GET_RA_REPORT_RATE(ra_data->payload);
-	sgi = GET_RA_REPORT_SGI(ra_data->payload);
-	bw = GET_RA_REPORT_BW(ra_data->payload);
+	rate = u8_get_bits(ra_rpt->rate_sgi, RTW_C2H_RA_RPT_RATE);
+	sgi = u8_get_bits(ra_rpt->rate_sgi, RTW_C2H_RA_RPT_SGI);
+	if (ra_data->length >= offsetofend(typeof(*ra_rpt), bw))
+		bw = ra_rpt->bw;
+	else
+		bw = si->bw_mode;
 
 	if (rate < DESC_RATEMCS0) {
 		si->ra_report.txrate.legacy = rtw_desc_to_bitrate(rate);
@@ -191,20 +196,28 @@ static void rtw_fw_ra_report_iter(void *data, struct ieee80211_sta *sta)
 	si->ra_report.desc_rate = rate;
 	si->ra_report.bit_rate = bit_rate;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
 	sta->deflink.agg.max_rc_amsdu_len = get_max_amsdu_len(bit_rate);
+#else
+	sta->max_rc_amsdu_len = get_max_amsdu_len(bit_rate);
+#endif
 }
 
 static void rtw_fw_ra_report_handle(struct rtw_dev *rtwdev, u8 *payload,
 				    u8 length)
 {
+	struct rtw_c2h_ra_rpt *ra_rpt = (struct rtw_c2h_ra_rpt *)payload;
 	struct rtw_fw_iter_ra_data ra_data;
 
-	if (WARN(length < 7, "invalid ra report c2h length\n"))
+	if (WARN(length < rtwdev->chip->c2h_ra_report_size,
+		 "invalid ra report c2h length %d\n", length))
 		return;
 
-	rtwdev->dm_info.tx_rate = GET_RA_REPORT_RATE(payload);
+	rtwdev->dm_info.tx_rate = u8_get_bits(ra_rpt->rate_sgi,
+					      RTW_C2H_RA_RPT_RATE);
 	ra_data.rtwdev = rtwdev;
 	ra_data.payload = payload;
+	ra_data.length = length;
 	rtw_iterate_stas_atomic(rtwdev, rtw_fw_ra_report_iter, &ra_data);
 }
 
@@ -267,7 +280,7 @@ static void rtw_fw_scan_result(struct rtw_dev *rtwdev, u8 *payload,
 static void rtw_fw_adaptivity_result(struct rtw_dev *rtwdev, u8 *payload,
 				     u8 length)
 {
-	struct rtw_hw_reg_offset *edcca_th = rtwdev->chip->edcca_th;
+	const struct rtw_hw_reg_offset *edcca_th = rtwdev->chip->edcca_th;
 	struct rtw_c2h_adaptivity *result = (struct rtw_c2h_adaptivity *)payload;
 
 	rtw_dbg(rtwdev, RTW_DBG_ADAPTIVITY,
@@ -323,6 +336,9 @@ void rtw_fw_c2h_cmd_handle(struct rtw_dev *rtwdev, struct sk_buff *skb)
 	case C2H_RA_RPT:
 		rtw_fw_ra_report_handle(rtwdev, c2h->payload, len);
 		break;
+	case C2H_ADAPTIVITY:
+		rtw_fw_adaptivity_result(rtwdev, c2h->payload, len);
+		break;
 	default:
 		rtw_dbg(rtwdev, RTW_DBG_FW, "C2H 0x%x isn't handled\n", c2h->id);
 		break;
@@ -358,10 +374,6 @@ void rtw_fw_c2h_cmd_rx_irqsafe(struct rtw_dev *rtwdev, u32 pkt_offset,
 		rtw_fw_scan_result(rtwdev, c2h->payload, len);
 		dev_kfree_skb_any(skb);
 		break;
-	case C2H_ADAPTIVITY:
-		rtw_fw_adaptivity_result(rtwdev, c2h->payload, len);
-		dev_kfree_skb_any(skb);
-		break;
 	default:
 		/* pass offset for further operation */
 		*((u32 *)skb->cb) = pkt_offset;
@@ -722,11 +734,19 @@ void rtw_fw_send_rssi_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si)
 	rtw_fw_send_h2c_command(rtwdev, h2c_pkt);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
 void rtw_fw_send_ra_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 			 bool reset_ra_mask)
+#else
+void rtw_fw_send_ra_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si)
+#endif
 {
 	u8 h2c_pkt[H2C_PKT_SIZE] = {0};
 	bool disable_pt = true;
+	u32 mask_hi;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 18, 0)
+	bool reset_ra_mask = true;
+#endif
 
 	SET_H2C_CMD_ID_CLASS(h2c_pkt, H2C_CMD_RA_INFO);
 
@@ -747,6 +767,20 @@ void rtw_fw_send_ra_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 	si->init_ra_lv = 0;
 
 	rtw_fw_send_h2c_command(rtwdev, h2c_pkt);
+
+	if (rtwdev->chip->id != RTW_CHIP_TYPE_8814A)
+		return;
+
+	SET_H2C_CMD_ID_CLASS(h2c_pkt, H2C_CMD_RA_INFO_HI);
+
+	mask_hi = si->ra_mask >> 32;
+
+	SET_RA_INFO_RA_MASK0(h2c_pkt, (mask_hi & 0xff));
+	SET_RA_INFO_RA_MASK1(h2c_pkt, (mask_hi & 0xff00) >> 8);
+	SET_RA_INFO_RA_MASK2(h2c_pkt, (mask_hi & 0xff0000) >> 16);
+	SET_RA_INFO_RA_MASK3(h2c_pkt, (mask_hi & 0xff000000) >> 24);
+
+	rtw_fw_send_h2c_command(rtwdev, h2c_pkt);
 }
 
 void rtw_fw_media_status_report(struct rtw_dev *rtwdev, u8 mac_id, bool connect)
@@ -1223,7 +1257,11 @@ static struct sk_buff *rtw_get_rsvd_page_skb(struct ieee80211_hw *hw,
 
 	switch (rsvd_pkt->type) {
 	case RSVD_BEACON:
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 		skb_new = ieee80211_beacon_get_tim(hw, vif, &tim_offset, NULL, 0);
+#else
+		skb_new = ieee80211_beacon_get_tim(hw, vif, &tim_offset, NULL);
+#endif
 		rsvd_pkt->tim_offset = tim_offset;
 		break;
 	case RSVD_PS_POLL:
@@ -1233,10 +1271,26 @@ static struct sk_buff *rtw_get_rsvd_page_skb(struct ieee80211_hw *hw,
 		skb_new = ieee80211_proberesp_get(hw, vif);
 		break;
 	case RSVD_NULL:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 17)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
 		skb_new = ieee80211_nullfunc_get(hw, vif, -1, false);
+#else
+		skb_new = ieee80211_nullfunc_get(hw, vif, false);
+#endif
+#else
+		skb_new = ieee80211_nullfunc_get(hw, vif);
+#endif
 		break;
 	case RSVD_QOS_NULL:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 17)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
 		skb_new = ieee80211_nullfunc_get(hw, vif, -1, true);
+#else
+		skb_new = ieee80211_nullfunc_get(hw, vif, true);
+#endif
+#else
+		skb_new = ieee80211_nullfunc_get(hw, vif);
+#endif
 		break;
 	case RSVD_LPS_PG_DPK:
 		skb_new = rtw_lps_pg_dpk_get(hw);
@@ -1281,16 +1335,16 @@ static void rtw_fill_rsvd_page_desc(struct rtw_dev *rtwdev, struct sk_buff *skb,
 	rtw_tx_rsvd_page_pkt_info_update(rtwdev, &pkt_info, skb, type);
 	pkt_desc = skb_push(skb, chip->tx_pkt_desc_sz);
 	memset(pkt_desc, 0, chip->tx_pkt_desc_sz);
-	rtw_tx_fill_tx_desc(&pkt_info, skb);
+	rtw_tx_fill_tx_desc(rtwdev, &pkt_info, skb);
 }
 
-static inline u8 rtw_len_to_page(unsigned int len, u8 page_size)
+static inline u8 rtw_len_to_page(unsigned int len, u16 page_size)
 {
 	return DIV_ROUND_UP(len, page_size);
 }
 
-static void rtw_rsvd_page_list_to_buf(struct rtw_dev *rtwdev, u8 page_size,
-				      u8 page_margin, u32 page, u8 *buf,
+static void rtw_rsvd_page_list_to_buf(struct rtw_dev *rtwdev, u16 page_size,
+				      u16 page_margin, u32 page, u8 *buf,
 				      struct rtw_rsvd_page *rsvd_pkt)
 {
 	struct sk_buff *skb = rsvd_pkt->skb;
@@ -1443,7 +1497,7 @@ void rtw_add_rsvd_page_sta(struct rtw_dev *rtwdev,
 int rtw_fw_write_data_rsvd_page(struct rtw_dev *rtwdev, u16 pg_addr,
 				u8 *buf, u32 size)
 {
-	u8 bckp[2];
+	u8 bckp[3];
 	u8 val;
 	u16 rsvd_pg_head;
 	u32 bcn_valid_addr;
@@ -1455,6 +1509,8 @@ int rtw_fw_write_data_rsvd_page(struct rtw_dev *rtwdev, u16 pg_addr,
 	if (!size)
 		return -EINVAL;
 
+	bckp[2] = rtw_read8(rtwdev, REG_BCN_CTRL);
+
 	if (rtw_chip_wcpu_11n(rtwdev)) {
 		rtw_write32_set(rtwdev, REG_DWBCN0_CTRL, BIT_BCN_VALID);
 	} else {
@@ -1468,6 +1524,9 @@ int rtw_fw_write_data_rsvd_page(struct rtw_dev *rtwdev, u16 pg_addr,
 	val |= BIT_ENSWBCN >> 8;
 	rtw_write8(rtwdev, REG_CR + 1, val);
 
+	rtw_write8(rtwdev, REG_BCN_CTRL,
+		   (bckp[2] & ~BIT_EN_BCN_FUNCTION) | BIT_DIS_TSF_UDT);
+
 	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_PCIE) {
 		val = rtw_read8(rtwdev, REG_FWHW_TXQ_CTRL + 2);
 		bckp[1] = val;
@@ -1498,6 +1557,7 @@ int rtw_fw_write_data_rsvd_page(struct rtw_dev *rtwdev, u16 pg_addr,
 	rsvd_pg_head = rtwdev->fifo.rsvd_boundary;
 	rtw_write16(rtwdev, REG_FIFOPAGE_CTRL_2,
 		    rsvd_pg_head | BIT_BCN_VALID_V1);
+	rtw_write8(rtwdev, REG_BCN_CTRL, bckp[2]);
 	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_PCIE)
 		rtw_write8(rtwdev, REG_FWHW_TXQ_CTRL + 2, bckp[1]);
 	rtw_write8(rtwdev, REG_CR + 1, bckp[0]);
@@ -1592,13 +1652,13 @@ static int  __rtw_build_rsvd_page_from_vifs(struct rtw_dev *rtwdev)
 
 static u8 *rtw_build_rsvd_page(struct rtw_dev *rtwdev, u32 *size)
 {
-	struct ieee80211_hw *hw = rtwdev->hw;
 	const struct rtw_chip_info *chip = rtwdev->chip;
-	struct sk_buff *iter;
+	struct ieee80211_hw *hw = rtwdev->hw;
 	struct rtw_rsvd_page *rsvd_pkt;
-	u32 page = 0;
+	struct sk_buff *iter;
+	u16 page_size, page_margin, tx_desc_sz;
 	u8 total_page = 0;
-	u8 page_size, page_margin, tx_desc_sz;
+	u32 page = 0;
 	u8 *buf;
 	int ret;
 
@@ -2004,12 +2064,13 @@ static int _rtw_hw_scan_update_probe_req(struct rtw_dev *rtwdev, u8 num_probes,
 {
 	const struct rtw_chip_info *chip = rtwdev->chip;
 	struct sk_buff *skb, *tmp;
-	u8 page_offset = 1, *buf, page_size = chip->page_size;
 	u16 pg_addr = rtwdev->fifo.rsvd_h2c_info_addr, loc;
-	u16 buf_offset = page_size * page_offset;
 	u8 tx_desc_sz = chip->tx_pkt_desc_sz;
-	u8 page_cnt, pages;
+	u16 page_size = chip->page_size;
+	u8 page_offset = 1, *buf;
+	u16 buf_offset = page_size * page_offset;
 	unsigned int pkt_len;
+	u8 page_cnt, pages;
 	int ret;
 
 	if (rtw_fw_feature_ext_check(&rtwdev->fw, FW_FEATURE_EXT_OLD_PAGE_NUM))
diff --git a/drivers/net/wireless/realtek/rtw88/fw.h b/drivers/net/wireless/realtek/rtw88/fw.h
index e999c24e4634..54035eda6d2a 100644
--- a/drivers/net/wireless/realtek/rtw88/fw.h
+++ b/drivers/net/wireless/realtek/rtw88/fw.h
@@ -85,6 +85,19 @@ struct rtw_c2h_adaptivity {
 	u8 option;
 } __packed;
 
+struct rtw_c2h_ra_rpt {
+	u8 rate_sgi;
+	u8 mac_id;
+	u8 byte2;
+	u8 status;
+	u8 byte4;
+	u8 ra_ratio;
+	u8 bw;
+} __packed;
+
+#define RTW_C2H_RA_RPT_RATE	GENMASK(6, 0)
+#define RTW_C2H_RA_RPT_SGI	BIT(7)
+
 struct rtw_h2c_register {
 	u32 w0;
 	u32 w1;
@@ -364,10 +377,6 @@ struct rtw_fw_hdr_legacy {
 #define GET_CHAN_SWITCH_CENTRAL_CH(c2h_payload)	(c2h_payload[2])
 #define GET_CHAN_SWITCH_ID(c2h_payload)		(c2h_payload[3])
 #define GET_CHAN_SWITCH_STATUS(c2h_payload)	(c2h_payload[4])
-#define GET_RA_REPORT_RATE(c2h_payload)		(c2h_payload[0] & 0x7f)
-#define GET_RA_REPORT_SGI(c2h_payload)		((c2h_payload[0] & 0x80) >> 7)
-#define GET_RA_REPORT_BW(c2h_payload)		(c2h_payload[6])
-#define GET_RA_REPORT_MACID(c2h_payload)	(c2h_payload[1])
 
 #define GET_BCN_FILTER_NOTIFY_TYPE(c2h_payload)	(c2h_payload[1] & 0xf)
 #define GET_BCN_FILTER_NOTIFY_EVENT(c2h_payload)	(c2h_payload[1] & 0x10)
@@ -548,6 +557,7 @@ static inline void rtw_h2c_pkt_set_header(u8 *h2c_pkt, u8 sub_id)
 #define H2C_CMD_DEFAULT_PORT		0x2c
 #define H2C_CMD_RA_INFO			0x40
 #define H2C_CMD_RSSI_MONITOR		0x42
+#define H2C_CMD_RA_INFO_HI		0x46
 #define H2C_CMD_BCN_FILTER_OFFLOAD_P0	0x56
 #define H2C_CMD_BCN_FILTER_OFFLOAD_P1	0x57
 #define H2C_CMD_WL_PHY_INFO		0x58
@@ -836,8 +846,12 @@ void rtw_fw_coex_query_hid_info(struct rtw_dev *rtwdev, u8 sub_id, u8 data);
 
 void rtw_fw_bt_wifi_control(struct rtw_dev *rtwdev, u8 op_code, u8 *data);
 void rtw_fw_send_rssi_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
 void rtw_fw_send_ra_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 			 bool reset_ra_mask);
+#else
+void rtw_fw_send_ra_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si);
+#endif
 void rtw_fw_media_status_report(struct rtw_dev *rtwdev, u8 mac_id, bool conn);
 void rtw_fw_update_wl_phy_info(struct rtw_dev *rtwdev);
 void rtw_fw_beacon_filter_config(struct rtw_dev *rtwdev, bool connect,
diff --git a/drivers/net/wireless/realtek/rtw88/hci.h b/drivers/net/wireless/realtek/rtw88/hci.h
index 96aeda26014e..d4bee9c3ecfe 100644
--- a/drivers/net/wireless/realtek/rtw88/hci.h
+++ b/drivers/net/wireless/realtek/rtw88/hci.h
@@ -19,6 +19,8 @@ struct rtw_hci_ops {
 	void (*link_ps)(struct rtw_dev *rtwdev, bool enter);
 	void (*interface_cfg)(struct rtw_dev *rtwdev);
 	void (*dynamic_rx_agg)(struct rtw_dev *rtwdev, bool enable);
+	void (*write_firmware_page)(struct rtw_dev *rtwdev, u32 page,
+				    const u8 *data, u32 size);
 
 	int (*write_data_rsvd_page)(struct rtw_dev *rtwdev, u8 *buf, u32 size);
 	int (*write_data_h2c)(struct rtw_dev *rtwdev, u8 *buf, u32 size);
@@ -79,6 +81,12 @@ static inline void rtw_hci_dynamic_rx_agg(struct rtw_dev *rtwdev, bool enable)
 		rtwdev->hci.ops->dynamic_rx_agg(rtwdev, enable);
 }
 
+static inline void rtw_hci_write_firmware_page(struct rtw_dev *rtwdev, u32 page,
+					       const u8 *data, u32 size)
+{
+	rtwdev->hci.ops->write_firmware_page(rtwdev, page, data, size);
+}
+
 static inline int
 rtw_hci_write_data_rsvd_page(struct rtw_dev *rtwdev, u8 *buf, u32 size)
 {
diff --git a/drivers/net/wireless/realtek/rtw88/led.c b/drivers/net/wireless/realtek/rtw88/led.c
new file mode 100644
index 000000000000..25aa6cbaa728
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/led.c
@@ -0,0 +1,73 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2025  Realtek Corporation
+ */
+
+#include "main.h"
+#include "debug.h"
+#include "led.h"
+
+static int rtw_led_set_blocking(struct led_classdev *led,
+				enum led_brightness brightness)
+{
+	struct rtw_dev *rtwdev = container_of(led, struct rtw_dev, led_cdev);
+
+	rtwdev->chip->ops->led_set(led, brightness);
+
+	return 0;
+}
+
+void rtw_led_init(struct rtw_dev *rtwdev)
+{
+	static const struct ieee80211_tpt_blink rtw_tpt_blink[] = {
+		{ .throughput = 0 * 1024, .blink_time = 334 },
+		{ .throughput = 1 * 1024, .blink_time = 260 },
+		{ .throughput = 5 * 1024, .blink_time = 220 },
+		{ .throughput = 10 * 1024, .blink_time = 190 },
+		{ .throughput = 20 * 1024, .blink_time = 170 },
+		{ .throughput = 50 * 1024, .blink_time = 150 },
+		{ .throughput = 70 * 1024, .blink_time = 130 },
+		{ .throughput = 100 * 1024, .blink_time = 110 },
+		{ .throughput = 200 * 1024, .blink_time = 80 },
+		{ .throughput = 300 * 1024, .blink_time = 50 },
+	};
+	struct led_classdev *led = &rtwdev->led_cdev;
+	int err;
+
+	if (!rtwdev->chip->ops->led_set)
+		return;
+
+	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_PCIE)
+		led->brightness_set = rtwdev->chip->ops->led_set;
+	else
+		led->brightness_set_blocking = rtw_led_set_blocking;
+
+	snprintf(rtwdev->led_name, sizeof(rtwdev->led_name),
+		 "rtw88-%s", dev_name(rtwdev->dev));
+
+	led->name = rtwdev->led_name;
+	led->max_brightness = LED_ON;
+	led->default_trigger =
+		ieee80211_create_tpt_led_trigger(rtwdev->hw,
+						 IEEE80211_TPT_LEDTRIG_FL_RADIO,
+						 rtw_tpt_blink,
+						 ARRAY_SIZE(rtw_tpt_blink));
+
+	err = led_classdev_register(rtwdev->dev, led);
+	if (err) {
+		rtw_warn(rtwdev, "Failed to register the LED, error %d\n", err);
+		return;
+	}
+
+	rtwdev->led_registered = true;
+}
+
+void rtw_led_deinit(struct rtw_dev *rtwdev)
+{
+	struct led_classdev *led = &rtwdev->led_cdev;
+
+	if (!rtwdev->led_registered)
+		return;
+
+	rtwdev->chip->ops->led_set(led, LED_OFF);
+	led_classdev_unregister(led);
+}
diff --git a/drivers/net/wireless/realtek/rtw88/led.h b/drivers/net/wireless/realtek/rtw88/led.h
new file mode 100644
index 000000000000..fa64002b0215
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/led.h
@@ -0,0 +1,25 @@
+/* SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause */
+/* Copyright(c) 2025  Realtek Corporation
+ */
+
+#ifndef __RTW_LED_H
+#define __RTW_LED_H
+
+#ifdef CONFIG_RTW88_LEDS
+
+void rtw_led_init(struct rtw_dev *rtwdev);
+void rtw_led_deinit(struct rtw_dev *rtwdev);
+
+#else
+
+static inline void rtw_led_init(struct rtw_dev *rtwdev)
+{
+}
+
+static inline void rtw_led_deinit(struct rtw_dev *rtwdev)
+{
+}
+
+#endif
+
+#endif
diff --git a/drivers/net/wireless/realtek/rtw88/mac.c b/drivers/net/wireless/realtek/rtw88/mac.c
index 564f5988ee82..f66d1b302dc5 100644
--- a/drivers/net/wireless/realtek/rtw88/mac.c
+++ b/drivers/net/wireless/realtek/rtw88/mac.c
@@ -227,8 +227,8 @@ static int rtw_sub_pwr_seq_parser(struct rtw_dev *rtwdev, u8 intf_mask,
 	return 0;
 }
 
-static int rtw_pwr_seq_parser(struct rtw_dev *rtwdev,
-			      const struct rtw_pwr_seq_cmd **cmd_seq)
+int rtw_pwr_seq_parser(struct rtw_dev *rtwdev,
+		       const struct rtw_pwr_seq_cmd * const *cmd_seq)
 {
 	u8 cut_mask;
 	u8 intf_mask;
@@ -267,11 +267,12 @@ static int rtw_pwr_seq_parser(struct rtw_dev *rtwdev,
 
 	return 0;
 }
+EXPORT_SYMBOL(rtw_pwr_seq_parser);
 
 static int rtw_mac_power_switch(struct rtw_dev *rtwdev, bool pwr_on)
 {
 	const struct rtw_chip_info *chip = rtwdev->chip;
-	const struct rtw_pwr_seq_cmd **pwr_seq;
+	const struct rtw_pwr_seq_cmd * const *pwr_seq;
 	u32 imr = 0;
 	u8 rpwm;
 	bool cur_pwr;
@@ -290,6 +291,7 @@ static int rtw_mac_power_switch(struct rtw_dev *rtwdev, bool pwr_on)
 	if (rtw_read8(rtwdev, REG_CR) == 0xea)
 		cur_pwr = false;
 	else if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_USB &&
+		 chip->id != RTW_CHIP_TYPE_8814A &&
 		 (rtw_read8(rtwdev, REG_SYS_STATUS1 + 1) & BIT(0)))
 		cur_pwr = false;
 	else
@@ -783,7 +785,8 @@ static int __rtw_download_firmware(struct rtw_dev *rtwdev,
 	if (!check_firmware_size(data, size))
 		return -EINVAL;
 
-	if (!ltecoex_read_reg(rtwdev, 0x38, &ltecoex_bckp))
+	if (rtwdev->chip->ltecoex_addr &&
+	    !ltecoex_read_reg(rtwdev, 0x38, &ltecoex_bckp))
 		return -EBUSY;
 
 	wlan_cpu_enable(rtwdev, false);
@@ -801,7 +804,8 @@ static int __rtw_download_firmware(struct rtw_dev *rtwdev,
 
 	wlan_cpu_enable(rtwdev, true);
 
-	if (!ltecoex_reg_write(rtwdev, 0x38, ltecoex_bckp)) {
+	if (rtwdev->chip->ltecoex_addr &&
+	    !ltecoex_reg_write(rtwdev, 0x38, ltecoex_bckp)) {
 		ret = -EBUSY;
 		goto dlfw_fail;
 	}
@@ -852,8 +856,8 @@ static void en_download_firmware_legacy(struct rtw_dev *rtwdev, bool en)
 	}
 }
 
-static void
-write_firmware_page(struct rtw_dev *rtwdev, u32 page, const u8 *data, u32 size)
+void rtw_write_firmware_page(struct rtw_dev *rtwdev, u32 page,
+			     const u8 *data, u32 size)
 {
 	u32 val32;
 	u32 block_nr;
@@ -883,6 +887,7 @@ write_firmware_page(struct rtw_dev *rtwdev, u32 page, const u8 *data, u32 size)
 		rtw_write32(rtwdev, write_addr, le32_to_cpu(remain_data));
 	}
 }
+EXPORT_SYMBOL(rtw_write_firmware_page);
 
 static int
 download_firmware_legacy(struct rtw_dev *rtwdev, const u8 *data, u32 size)
@@ -900,11 +905,13 @@ download_firmware_legacy(struct rtw_dev *rtwdev, const u8 *data, u32 size)
 	rtw_write8_set(rtwdev, REG_MCUFW_CTRL, BIT_FWDL_CHK_RPT);
 
 	for (page = 0; page < total_page; page++) {
-		write_firmware_page(rtwdev, page, data, DLFW_PAGE_SIZE_LEGACY);
+		rtw_hci_write_firmware_page(rtwdev, page, data,
+					    DLFW_PAGE_SIZE_LEGACY);
 		data += DLFW_PAGE_SIZE_LEGACY;
 	}
 	if (last_page_size)
-		write_firmware_page(rtwdev, page, data, last_page_size);
+		rtw_hci_write_firmware_page(rtwdev, page, data,
+					    last_page_size);
 
 	if (!check_hw_ready(rtwdev, REG_MCUFW_CTRL, BIT_FWDL_CHK_RPT, 1)) {
 		rtw_err(rtwdev, "failed to check download firmware report\n");
@@ -994,6 +1001,7 @@ int rtw_download_firmware(struct rtw_dev *rtwdev, struct rtw_fw_state *fw)
 
 	return 0;
 }
+EXPORT_SYMBOL(rtw_download_firmware);
 
 static u32 get_priority_queues(struct rtw_dev *rtwdev, u32 queues)
 {
@@ -1127,7 +1135,7 @@ static int txdma_queue_mapping(struct rtw_dev *rtwdev)
 	return 0;
 }
 
-static int set_trx_fifo_info(struct rtw_dev *rtwdev)
+int rtw_set_trx_fifo_info(struct rtw_dev *rtwdev)
 {
 	const struct rtw_chip_info *chip = rtwdev->chip;
 	struct rtw_fifo_conf *fifo = &rtwdev->fifo;
@@ -1136,7 +1144,7 @@ static int set_trx_fifo_info(struct rtw_dev *rtwdev)
 
 	/* config rsvd page num */
 	fifo->rsvd_drv_pg_num = chip->rsvd_drv_pg_num;
-	fifo->txff_pg_num = chip->txff_size >> 7;
+	fifo->txff_pg_num = chip->txff_size / chip->page_size;
 	if (rtw_chip_wcpu_11n(rtwdev))
 		fifo->rsvd_pg_num = fifo->rsvd_drv_pg_num;
 	else
@@ -1179,6 +1187,7 @@ static int set_trx_fifo_info(struct rtw_dev *rtwdev)
 
 	return 0;
 }
+EXPORT_SYMBOL(rtw_set_trx_fifo_info);
 
 static int __priority_queue_cfg(struct rtw_dev *rtwdev,
 				const struct rtw_page_table *pg_tbl,
@@ -1256,7 +1265,7 @@ static int priority_queue_cfg(struct rtw_dev *rtwdev)
 	u16 pubq_num;
 	int ret;
 
-	ret = set_trx_fifo_info(rtwdev);
+	ret = rtw_set_trx_fifo_info(rtwdev);
 	if (ret)
 		return ret;
 
diff --git a/drivers/net/wireless/realtek/rtw88/mac.h b/drivers/net/wireless/realtek/rtw88/mac.h
index 58c3dccc14bb..e92b1483728d 100644
--- a/drivers/net/wireless/realtek/rtw88/mac.h
+++ b/drivers/net/wireless/realtek/rtw88/mac.h
@@ -30,11 +30,16 @@
 
 void rtw_set_channel_mac(struct rtw_dev *rtwdev, u8 channel, u8 bw,
 			 u8 primary_ch_idx);
+int rtw_pwr_seq_parser(struct rtw_dev *rtwdev,
+		       const struct rtw_pwr_seq_cmd * const *cmd_seq);
 int rtw_mac_power_on(struct rtw_dev *rtwdev);
 void rtw_mac_power_off(struct rtw_dev *rtwdev);
+void rtw_write_firmware_page(struct rtw_dev *rtwdev, u32 page,
+			     const u8 *data, u32 size);
 int rtw_download_firmware(struct rtw_dev *rtwdev, struct rtw_fw_state *fw);
 int rtw_mac_init(struct rtw_dev *rtwdev);
 void rtw_mac_flush_queues(struct rtw_dev *rtwdev, u32 queues, bool drop);
+int rtw_set_trx_fifo_info(struct rtw_dev *rtwdev);
 int rtw_ddma_to_fw_fifo(struct rtw_dev *rtwdev, u32 ocp_src, u32 size);
 
 static inline void rtw_mac_flush_all_queues(struct rtw_dev *rtwdev, bool drop)
diff --git a/drivers/net/wireless/realtek/rtw88/mac80211.c b/drivers/net/wireless/realtek/rtw88/mac80211.c
index b39e90fb66b4..f7c6e0a8d018 100644
--- a/drivers/net/wireless/realtek/rtw88/mac80211.c
+++ b/drivers/net/wireless/realtek/rtw88/mac80211.c
@@ -13,7 +13,9 @@
 #include "bf.h"
 #include "debug.h"
 #include "wow.h"
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 #include "sar.h"
+#endif
 
 static void rtw_ops_tx(struct ieee80211_hw *hw,
 		       struct ieee80211_tx_control *control,
@@ -62,7 +64,11 @@ static int rtw_ops_start(struct ieee80211_hw *hw)
 	return ret;
 }
 
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 11, 0))
+static void rtw_ops_stop(struct ieee80211_hw *hw)
+#else
 static void rtw_ops_stop(struct ieee80211_hw *hw, bool suspend)
+#endif
 {
 	struct rtw_dev *rtwdev = hw->priv;
 
@@ -372,7 +378,11 @@ static void rtw_conf_tx(struct rtw_dev *rtwdev,
 static void rtw_ops_bss_info_changed(struct ieee80211_hw *hw,
 				     struct ieee80211_vif *vif,
 				     struct ieee80211_bss_conf *conf,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 				     u64 changed)
+#else
+				     u32 changed)
+#endif
 {
 	struct rtw_dev *rtwdev = hw->priv;
 	struct rtw_vif *rtwvif = (struct rtw_vif *)vif->drv_priv;
@@ -386,16 +396,25 @@ static void rtw_ops_bss_info_changed(struct ieee80211_hw *hw,
 
 	if (changed & BSS_CHANGED_ASSOC) {
 		rtw_vif_assoc_changed(rtwvif, conf);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 		if (vif->cfg.assoc) {
+#else
+		if (conf->assoc) {
+#endif
 			rtw_coex_connect_notify(rtwdev, COEX_ASSOCIATE_FINISH);
-
 			rtw_fw_download_rsvd_page(rtwdev);
 			rtw_send_rsvd_page_h2c(rtwdev);
 			rtw_fw_default_port(rtwdev, rtwvif);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 			rtw_coex_media_status_notify(rtwdev, vif->cfg.assoc);
+#else
+			rtw_coex_media_status_notify(rtwdev, conf->assoc);
+#endif
 			if (rtw_bf_support)
 				rtw_bf_assoc(rtwdev, vif, conf);
 
+			rtw_set_ampdu_factor(rtwdev, vif, conf);
+
 			rtw_fw_beacon_filter_config(rtwdev, true, vif);
 		} else {
 			rtw_leave_lps(rtwdev);
@@ -457,9 +476,13 @@ static void rtw_ops_bss_info_changed(struct ieee80211_hw *hw,
 	mutex_unlock(&rtwdev->mutex);
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 static int rtw_ops_start_ap(struct ieee80211_hw *hw,
 			    struct ieee80211_vif *vif,
 			    struct ieee80211_bss_conf *link_conf)
+#else
+static int rtw_ops_start_ap(struct ieee80211_hw *hw, struct ieee80211_vif *vif)
+#endif
 {
 	struct rtw_dev *rtwdev = hw->priv;
 	const struct rtw_chip_info *chip = rtwdev->chip;
@@ -474,9 +497,14 @@ static int rtw_ops_start_ap(struct ieee80211_hw *hw,
 	return 0;
 }
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 static void rtw_ops_stop_ap(struct ieee80211_hw *hw,
 			    struct ieee80211_vif *vif,
 			    struct ieee80211_bss_conf *link_conf)
+#else
+static void rtw_ops_stop_ap(struct ieee80211_hw *hw,
+			    struct ieee80211_vif *vif)
+#endif
 {
 	struct rtw_dev *rtwdev = hw->priv;
 
@@ -490,7 +518,11 @@ static void rtw_ops_stop_ap(struct ieee80211_hw *hw,
 
 static int rtw_ops_conf_tx(struct ieee80211_hw *hw,
 			   struct ieee80211_vif *vif,
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 			   unsigned int link_id, u16 ac,
+#else
+			   u16 ac,
+#endif
 			   const struct ieee80211_tx_queue_params *params)
 {
 	struct rtw_dev *rtwdev = hw->priv;
@@ -625,18 +657,35 @@ static int rtw_ops_set_key(struct ieee80211_hw *hw, enum set_key_cmd cmd,
 	return ret;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 6, 0)
 static int rtw_ops_ampdu_action(struct ieee80211_hw *hw,
 				struct ieee80211_vif *vif,
 				struct ieee80211_ampdu_params *params)
+#else
+static int rtw_ops_ampdu_action(struct ieee80211_hw *hw,
+				struct ieee80211_vif *vif,
+				enum ieee80211_ampdu_mlme_action action,
+				struct ieee80211_sta *sta, u16 tid, u16 *ssn,
+				u8 buf_size, bool amsdu)
+#endif
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 6, 0)
 	struct ieee80211_sta *sta = params->sta;
 	u16 tid = params->tid;
 	struct ieee80211_txq *txq = sta->txq[tid];
 	struct rtw_txq *rtwtxq = (struct rtw_txq *)txq->drv_priv;
 
 	switch (params->action) {
+#else
+	switch (action) {
+#endif
 	case IEEE80211_AMPDU_TX_START:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 5, 0)
 		return IEEE80211_AMPDU_TX_START_IMMEDIATE;
+#else
+		ieee80211_start_tx_ba_cb_irqsafe(vif, sta->addr, tid);
+		break;
+#endif
 	case IEEE80211_AMPDU_TX_STOP_CONT:
 	case IEEE80211_AMPDU_TX_STOP_FLUSH:
 	case IEEE80211_AMPDU_TX_STOP_FLUSH_CONT:
@@ -657,6 +706,7 @@ static int rtw_ops_ampdu_action(struct ieee80211_hw *hw,
 	return 0;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 20, 0)
 static bool rtw_ops_can_aggregate_in_amsdu(struct ieee80211_hw *hw,
 					   struct sk_buff *head,
 					   struct sk_buff *skb)
@@ -670,6 +720,7 @@ static bool rtw_ops_can_aggregate_in_amsdu(struct ieee80211_hw *hw,
 
 	return true;
 }
+#endif
 
 static void rtw_ops_sw_scan_start(struct ieee80211_hw *hw,
 				  struct ieee80211_vif *vif,
@@ -693,9 +744,18 @@ static void rtw_ops_sw_scan_complete(struct ieee80211_hw *hw,
 	mutex_unlock(&rtwdev->mutex);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 18, 0)
 static void rtw_ops_mgd_prepare_tx(struct ieee80211_hw *hw,
 				   struct ieee80211_vif *vif,
+    #if (LINUX_VERSION_CODE >= KERNEL_VERSION(5,14,0))
 				   struct ieee80211_prep_tx_info *info)
+    #else
+				   u16 duration)
+    #endif
+#else
+static void rtw_ops_mgd_prepare_tx(struct ieee80211_hw *hw,
+				   struct ieee80211_vif *vif)
+#endif
 {
 	struct rtw_dev *rtwdev = hw->priv;
 
@@ -914,6 +974,7 @@ static void rtw_ops_cancel_hw_scan(struct ieee80211_hw *hw,
 	mutex_unlock(&rtwdev->mutex);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 static int rtw_ops_set_sar_specs(struct ieee80211_hw *hw,
 				 const struct cfg80211_sar_specs *sar)
 {
@@ -925,11 +986,20 @@ static int rtw_ops_set_sar_specs(struct ieee80211_hw *hw,
 
 	return 0;
 }
+#endif
 
 static void rtw_ops_sta_rc_update(struct ieee80211_hw *hw,
 				  struct ieee80211_vif *vif,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 13, 0)
 				  struct ieee80211_sta *sta, u32 changed)
+#else
+				  struct ieee80211_link_sta *link_sta,
+				  u32 changed)
+#endif
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
+	struct ieee80211_sta *sta = link_sta->sta;
+#endif
 	struct rtw_dev *rtwdev = hw->priv;
 	struct rtw_sta_info *si = (struct rtw_sta_info *)sta->drv_priv;
 
@@ -938,10 +1008,12 @@ static void rtw_ops_sta_rc_update(struct ieee80211_hw *hw,
 }
 
 const struct ieee80211_ops rtw_ops = {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0)
 	.add_chanctx = ieee80211_emulate_add_chanctx,
 	.remove_chanctx = ieee80211_emulate_remove_chanctx,
 	.change_chanctx = ieee80211_emulate_change_chanctx,
 	.switch_vif_chanctx = ieee80211_emulate_switch_vif_chanctx,
+#endif
 	.tx			= rtw_ops_tx,
 	.wake_tx_queue		= rtw_ops_wake_tx_queue,
 	.start			= rtw_ops_start,
@@ -960,7 +1032,9 @@ const struct ieee80211_ops rtw_ops = {
 	.set_tim		= rtw_ops_set_tim,
 	.set_key		= rtw_ops_set_key,
 	.ampdu_action		= rtw_ops_ampdu_action,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 20, 0)
 	.can_aggregate_in_amsdu	= rtw_ops_can_aggregate_in_amsdu,
+#endif
 	.sw_scan_start		= rtw_ops_sw_scan_start,
 	.sw_scan_complete	= rtw_ops_sw_scan_complete,
 	.mgd_prepare_tx		= rtw_ops_mgd_prepare_tx,
@@ -973,8 +1047,14 @@ const struct ieee80211_ops rtw_ops = {
 	.reconfig_complete	= rtw_reconfig_complete,
 	.hw_scan		= rtw_ops_hw_scan,
 	.cancel_hw_scan		= rtw_ops_cancel_hw_scan,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 13, 0)
 	.sta_rc_update		= rtw_ops_sta_rc_update,
+#else
+	.link_sta_rc_update	= rtw_ops_sta_rc_update,
+#endif
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 	.set_sar_specs          = rtw_ops_set_sar_specs,
+#endif
 #ifdef CONFIG_PM
 	.suspend		= rtw_ops_suspend,
 	.resume			= rtw_ops_resume,
diff --git a/drivers/net/wireless/realtek/rtw88/main.c b/drivers/net/wireless/realtek/rtw88/main.c
index bbdef38c7e34..94c304c95d6e 100644
--- a/drivers/net/wireless/realtek/rtw88/main.c
+++ b/drivers/net/wireless/realtek/rtw88/main.c
@@ -19,6 +19,7 @@
 #include "bf.h"
 #include "sar.h"
 #include "sdio.h"
+#include "led.h"
 
 bool rtw_disable_lps_deep_mode;
 EXPORT_SYMBOL(rtw_disable_lps_deep_mode);
@@ -110,7 +111,9 @@ static const struct ieee80211_iface_limit rtw_iface_limits[] = {
 	},
 	{
 		.max = 1,
-		.types = BIT(NL80211_IFTYPE_AP),
+		.types = BIT(NL80211_IFTYPE_AP) |
+                        BIT(NL80211_IFTYPE_P2P_CLIENT) |
+                        BIT(NL80211_IFTYPE_P2P_GO)
 	}
 };
 
@@ -135,7 +138,7 @@ u16 rtw_desc_to_bitrate(u8 desc_rate)
 	return rate.bitrate;
 }
 
-static struct ieee80211_supported_band rtw_band_2ghz = {
+static const struct ieee80211_supported_band rtw_band_2ghz = {
 	.band = NL80211_BAND_2GHZ,
 
 	.channels = rtw_channeltable_2g,
@@ -148,7 +151,7 @@ static struct ieee80211_supported_band rtw_band_2ghz = {
 	.vht_cap = {0},
 };
 
-static struct ieee80211_supported_band rtw_band_5ghz = {
+static const struct ieee80211_supported_band rtw_band_5ghz = {
 	.band = NL80211_BAND_5GHZ,
 
 	.channels = rtw_channeltable_5g,
@@ -191,7 +194,11 @@ static void rtw_vif_watch_dog_iter(void *data, struct ieee80211_vif *vif)
 	struct rtw_vif *rtwvif = (struct rtw_vif *)vif->drv_priv;
 
 	if (vif->type == NL80211_IFTYPE_STATION)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
 		if (vif->cfg.assoc)
+#else
+		if (vif->bss_conf.assoc)
+#endif
 			iter_data->rtwvif = rtwvif;
 
 	rtw_dynamic_csi_rate(iter_data->rtwdev, rtwvif);
@@ -202,6 +209,21 @@ static void rtw_vif_watch_dog_iter(void *data, struct ieee80211_vif *vif)
 	rtwvif->stats.rx_cnt = 0;
 }
 
+static void rtw_sw_beacon_loss_check(struct rtw_dev *rtwdev,
+				     struct rtw_vif *rtwvif, int received_beacons)
+{
+	int watchdog_delay = 2000000 / 1024; /* TU */
+	int beacon_int, expected_beacons;
+
+	if (rtw_fw_feature_check(&rtwdev->fw, FW_FEATURE_BCN_FILTER) || !rtwvif)
+		return;
+
+	beacon_int = rtwvif_to_vif(rtwvif)->bss_conf.beacon_int;
+	expected_beacons = DIV_ROUND_UP(watchdog_delay, beacon_int);
+
+	rtwdev->beacon_loss = received_beacons < expected_beacons / 2;
+}
+
 /* process TX/RX statistics periodically for hardware,
  * the information helps hardware to enhance performance
  */
@@ -212,6 +234,7 @@ static void rtw_watch_dog_work(struct work_struct *work)
 	struct rtw_traffic_stats *stats = &rtwdev->stats;
 	struct rtw_watch_dog_iter_data data = {};
 	bool busy_traffic = test_bit(RTW_FLAG_BUSY_TRAFFIC, rtwdev->flags);
+	int received_beacons = rtwdev->dm_info.cur_pkt_count.num_bcn_pkt;
 	u32 tx_unicast_mbps, rx_unicast_mbps;
 	bool ps_active;
 
@@ -258,6 +281,7 @@ static void rtw_watch_dog_work(struct work_struct *work)
 	rtw_leave_lps(rtwdev);
 	rtw_coex_wl_status_check(rtwdev);
 	rtw_coex_query_bt_hid_list(rtwdev);
+	rtw_coex_active_query_bt_info(rtwdev);
 
 	rtw_phy_dynamic_mechanism(rtwdev);
 
@@ -270,6 +294,8 @@ static void rtw_watch_dog_work(struct work_struct *work)
 	 */
 	rtw_iterate_vifs(rtwdev, rtw_vif_watch_dog_iter, &data);
 
+	rtw_sw_beacon_loss_check(rtwdev, data.rtwvif, received_beacons);
+
 	/* fw supports only one station associated to enter lps, if there are
 	 * more than two stations associated to the AP, then we can not enter
 	 * lps, because fw does not handle the overlapped beacon interval
@@ -562,6 +588,7 @@ EXPORT_SYMBOL(rtw_dump_reg);
 void rtw_vif_assoc_changed(struct rtw_vif *rtwvif,
 			   struct ieee80211_bss_conf *conf)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
 	struct ieee80211_vif *vif = NULL;
 
 	if (conf)
@@ -569,6 +596,10 @@ void rtw_vif_assoc_changed(struct rtw_vif *rtwvif,
 
 	if (conf && vif->cfg.assoc) {
 		rtwvif->aid = vif->cfg.aid;
+#else
+	if (conf && conf->assoc) {
+		rtwvif->aid = conf->aid;
+#endif
 		rtwvif->net_type = RTW_NET_MGD_LINKED;
 	} else {
 		rtwvif->aid = 0;
@@ -987,7 +1018,11 @@ static void rtw_hw_config_rf_ant_num(struct rtw_dev *rtwdev, u8 hw_ant_num)
 static u64 get_vht_ra_mask(struct ieee80211_sta *sta)
 {
 	u64 ra_mask = 0;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 	u16 mcs_map = le16_to_cpu(sta->deflink.vht_cap.vht_mcs.rx_mcs_map);
+#else
+	u16 mcs_map = le16_to_cpu(sta->vht_cap.vht_mcs.rx_mcs_map);
+#endif
 	u8 vht_mcs_cap;
 	int i, nss;
 
@@ -1198,7 +1233,6 @@ void rtw_update_sta_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 	u8 wireless_set;
 	u8 bw_mode;
 	u8 rate_id;
-	u8 rf_type = RF_1T1R;
 	u8 stbc_en = 0;
 	u8 ldpc_en = 0;
 	u8 tx_num = 1;
@@ -1207,32 +1241,73 @@ void rtw_update_sta_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 	bool is_vht_enable = false;
 	bool is_support_sgi = false;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 	if (sta->deflink.vht_cap.vht_supported) {
+#else
+	if (sta->vht_cap.vht_supported) {
+#endif
 		is_vht_enable = true;
 		ra_mask |= get_vht_ra_mask(sta);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		if (sta->deflink.vht_cap.cap & IEEE80211_VHT_CAP_RXSTBC_MASK)
+#else
+		if (sta->vht_cap.cap & IEEE80211_VHT_CAP_RXSTBC_MASK)
+#endif
 			stbc_en = VHT_STBC_EN;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		if (sta->deflink.vht_cap.cap & IEEE80211_VHT_CAP_RXLDPC)
+#else
+		if (sta->vht_cap.cap & IEEE80211_VHT_CAP_RXLDPC)
+#endif
 			ldpc_en = VHT_LDPC_EN;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 	} else if (sta->deflink.ht_cap.ht_supported) {
-		ra_mask |= (sta->deflink.ht_cap.mcs.rx_mask[1] << 20) |
+		ra_mask |= ((u64)sta->deflink.ht_cap.mcs.rx_mask[3] << 36) |
+			   ((u64)sta->deflink.ht_cap.mcs.rx_mask[2] << 28) |
+			   (sta->deflink.ht_cap.mcs.rx_mask[1] << 20) |
 			   (sta->deflink.ht_cap.mcs.rx_mask[0] << 12);
 		if (sta->deflink.ht_cap.cap & IEEE80211_HT_CAP_RX_STBC)
 			stbc_en = HT_STBC_EN;
 		if (sta->deflink.ht_cap.cap & IEEE80211_HT_CAP_LDPC_CODING)
 			ldpc_en = HT_LDPC_EN;
+#else
+	} else if (sta->ht_cap.ht_supported) {
+		ra_mask |= ((u64)sta->ht_cap.mcs.rx_mask[3] << 36) |
+			   ((u64)sta->ht_cap.mcs.rx_mask[2] << 28) |
+			   (sta->ht_cap.mcs.rx_mask[1] << 20) |
+			   (sta->ht_cap.mcs.rx_mask[0] << 12);
+		if (sta->ht_cap.cap & IEEE80211_HT_CAP_RX_STBC)
+			stbc_en = HT_STBC_EN;
+		if (sta->ht_cap.cap & IEEE80211_HT_CAP_LDPC_CODING)
+			ldpc_en = HT_LDPC_EN;
+#endif
 	}
 
 	if (efuse->hw_cap.nss == 1 || rtwdev->hal.txrx_1ss)
 		ra_mask &= RA_MASK_VHT_RATES_1SS | RA_MASK_HT_RATES_1SS;
+	else if (efuse->hw_cap.nss == 2)
+		ra_mask &= RA_MASK_VHT_RATES_2SS | RA_MASK_HT_RATES_2SS |
+			   RA_MASK_VHT_RATES_1SS | RA_MASK_HT_RATES_1SS;
 
 	if (hal->current_band_type == RTW_BAND_5G) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		ra_mask |= (u64)sta->deflink.supp_rates[NL80211_BAND_5GHZ] << 4;
+#else
+		ra_mask |= (u64)sta->supp_rates[NL80211_BAND_5GHZ] << 4;
+#endif
 		ra_mask_bak = ra_mask;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		if (sta->deflink.vht_cap.vht_supported) {
+#else
+		if (sta->vht_cap.vht_supported) {
+#endif
 			ra_mask &= RA_MASK_VHT_RATES | RA_MASK_OFDM_IN_VHT;
 			wireless_set = WIRELESS_OFDM | WIRELESS_VHT;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		} else if (sta->deflink.ht_cap.ht_supported) {
+#else
+		} else if (sta->ht_cap.ht_supported) {
+#endif
 			ra_mask &= RA_MASK_HT_RATES | RA_MASK_OFDM_IN_HT_5G;
 			wireless_set = WIRELESS_OFDM | WIRELESS_HT;
 		} else {
@@ -1240,19 +1315,35 @@ void rtw_update_sta_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 		}
 		dm_info->rrsr_val_init = RRSR_INIT_5G;
 	} else if (hal->current_band_type == RTW_BAND_2G) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		ra_mask |= sta->deflink.supp_rates[NL80211_BAND_2GHZ];
+#else
+		ra_mask |= sta->supp_rates[NL80211_BAND_2GHZ];
+#endif
 		ra_mask_bak = ra_mask;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		if (sta->deflink.vht_cap.vht_supported) {
+#else
+		if (sta->vht_cap.vht_supported) {
+#endif
 			ra_mask &= RA_MASK_VHT_RATES | RA_MASK_CCK_IN_VHT |
 				   RA_MASK_OFDM_IN_VHT;
 			wireless_set = WIRELESS_CCK | WIRELESS_OFDM |
 				       WIRELESS_HT | WIRELESS_VHT;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		} else if (sta->deflink.ht_cap.ht_supported) {
+#else
+		} else if (sta->ht_cap.ht_supported) {
+#endif
 			ra_mask &= RA_MASK_HT_RATES | RA_MASK_CCK_IN_HT |
 				   RA_MASK_OFDM_IN_HT_2G;
 			wireless_set = WIRELESS_CCK | WIRELESS_OFDM |
 				       WIRELESS_HT;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		} else if (sta->deflink.supp_rates[0] <= 0xf) {
+#else
+		} else if (sta->supp_rates[0] <= 0xf) {
+#endif
 			wireless_set = WIRELESS_CCK;
 		} else {
 			ra_mask &= RA_MASK_OFDM_RATES | RA_MASK_CCK_IN_BG;
@@ -1265,31 +1356,51 @@ void rtw_update_sta_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 		wireless_set = 0;
 	}
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 	switch (sta->deflink.bandwidth) {
+#else
+	switch (sta->bandwidth) {
+#endif
 	case IEEE80211_STA_RX_BW_80:
 		bw_mode = RTW_CHANNEL_WIDTH_80;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		is_support_sgi = sta->deflink.vht_cap.vht_supported &&
 				 (sta->deflink.vht_cap.cap & IEEE80211_VHT_CAP_SHORT_GI_80);
+#else
+		is_support_sgi = sta->vht_cap.vht_supported &&
+				 (sta->vht_cap.cap & IEEE80211_VHT_CAP_SHORT_GI_80);
+#endif
 		break;
 	case IEEE80211_STA_RX_BW_40:
 		bw_mode = RTW_CHANNEL_WIDTH_40;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		is_support_sgi = sta->deflink.ht_cap.ht_supported &&
 				 (sta->deflink.ht_cap.cap & IEEE80211_HT_CAP_SGI_40);
+#else
+		is_support_sgi = sta->ht_cap.ht_supported &&
+				 (sta->ht_cap.cap & IEEE80211_HT_CAP_SGI_40);
+#endif
 		break;
 	default:
 		bw_mode = RTW_CHANNEL_WIDTH_20;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 		is_support_sgi = sta->deflink.ht_cap.ht_supported &&
 				 (sta->deflink.ht_cap.cap & IEEE80211_HT_CAP_SGI_20);
+#else
+		is_support_sgi = sta->ht_cap.ht_supported &&
+				 (sta->ht_cap.cap & IEEE80211_HT_CAP_SGI_20);
+#endif
 		break;
 	}
 
-	if (sta->deflink.vht_cap.vht_supported && ra_mask & 0xffc00000) {
-		tx_num = 2;
-		rf_type = RF_2T2R;
-	} else if (sta->deflink.ht_cap.ht_supported && ra_mask & 0xfff00000) {
-		tx_num = 2;
-		rf_type = RF_2T2R;
-	}
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+	if (sta->deflink.vht_cap.vht_supported ||
+	    sta->deflink.ht_cap.ht_supported)
+#else
+	if (sta->vht_cap.vht_supported ||
+	    sta->ht_cap.ht_supported)
+#endif
+		tx_num = efuse->hw_cap.nss;
 
 	rate_id = get_rate_id(wireless_set, bw_mode, tx_num);
 
@@ -1300,16 +1411,19 @@ void rtw_update_sta_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 	si->bw_mode = bw_mode;
 	si->stbc_en = stbc_en;
 	si->ldpc_en = ldpc_en;
-	si->rf_type = rf_type;
 	si->sgi_enable = is_support_sgi;
 	si->vht_enable = is_vht_enable;
 	si->ra_mask = ra_mask;
 	si->rate_id = rate_id;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 18, 0)
 	rtw_fw_send_ra_info(rtwdev, si, reset_ra_mask);
+#else
+	rtw_fw_send_ra_info(rtwdev, si);
+#endif
 }
 
-static int rtw_wait_firmware_completion(struct rtw_dev *rtwdev)
+int rtw_wait_firmware_completion(struct rtw_dev *rtwdev)
 {
 	const struct rtw_chip_info *chip = rtwdev->chip;
 	struct rtw_fw_state *fw;
@@ -1329,6 +1443,7 @@ static int rtw_wait_firmware_completion(struct rtw_dev *rtwdev)
 
 	return ret;
 }
+EXPORT_SYMBOL(rtw_wait_firmware_completion);
 
 static enum rtw_lps_deep_mode rtw_update_lps_deep_mode(struct rtw_dev *rtwdev,
 						       struct rtw_fw_state *fw)
@@ -1350,7 +1465,7 @@ static enum rtw_lps_deep_mode rtw_update_lps_deep_mode(struct rtw_dev *rtwdev,
 	return LPS_DEEP_MODE_NONE;
 }
 
-static int rtw_power_on(struct rtw_dev *rtwdev)
+int rtw_power_on(struct rtw_dev *rtwdev)
 {
 	const struct rtw_chip_info *chip = rtwdev->chip;
 	struct rtw_fw_state *fw = &rtwdev->fw;
@@ -1413,6 +1528,7 @@ static int rtw_power_on(struct rtw_dev *rtwdev)
 err:
 	return ret;
 }
+EXPORT_SYMBOL(rtw_power_on);
 
 void rtw_core_fw_scan_notify(struct rtw_dev *rtwdev, bool start)
 {
@@ -1485,7 +1601,7 @@ int rtw_core_start(struct rtw_dev *rtwdev)
 {
 	int ret;
 
-	ret = rtw_power_on(rtwdev);
+	ret = rtwdev->chip->ops->power_on(rtwdev);
 	if (ret)
 		return ret;
 
@@ -1505,12 +1621,13 @@ int rtw_core_start(struct rtw_dev *rtwdev)
 	return 0;
 }
 
-static void rtw_power_off(struct rtw_dev *rtwdev)
+void rtw_power_off(struct rtw_dev *rtwdev)
 {
 	rtw_hci_stop(rtwdev);
 	rtw_coex_power_off_setting(rtwdev);
 	rtw_mac_power_off(rtwdev);
 }
+EXPORT_SYMBOL(rtw_power_off);
 
 void rtw_core_stop(struct rtw_dev *rtwdev)
 {
@@ -1535,7 +1652,7 @@ void rtw_core_stop(struct rtw_dev *rtwdev)
 
 	mutex_lock(&rtwdev->mutex);
 
-	rtw_power_off(rtwdev);
+	rtwdev->chip->ops->power_off(rtwdev);
 }
 
 static void rtw_init_ht_cap(struct rtw_dev *rtwdev,
@@ -1543,6 +1660,7 @@ static void rtw_init_ht_cap(struct rtw_dev *rtwdev,
 {
 	const struct rtw_chip_info *chip = rtwdev->chip;
 	struct rtw_efuse *efuse = &rtwdev->efuse;
+	int i;
 
 	ht_cap->ht_supported = true;
 	ht_cap->cap = 0;
@@ -1562,25 +1680,20 @@ static void rtw_init_ht_cap(struct rtw_dev *rtwdev,
 	ht_cap->ampdu_factor = IEEE80211_HT_MAX_AMPDU_64K;
 	ht_cap->ampdu_density = chip->ampdu_density;
 	ht_cap->mcs.tx_params = IEEE80211_HT_MCS_TX_DEFINED;
-	if (efuse->hw_cap.nss > 1) {
-		ht_cap->mcs.rx_mask[0] = 0xFF;
-		ht_cap->mcs.rx_mask[1] = 0xFF;
-		ht_cap->mcs.rx_mask[4] = 0x01;
-		ht_cap->mcs.rx_highest = cpu_to_le16(300);
-	} else {
-		ht_cap->mcs.rx_mask[0] = 0xFF;
-		ht_cap->mcs.rx_mask[1] = 0x00;
-		ht_cap->mcs.rx_mask[4] = 0x01;
-		ht_cap->mcs.rx_highest = cpu_to_le16(150);
-	}
+
+	for (i = 0; i < efuse->hw_cap.nss; i++)
+		ht_cap->mcs.rx_mask[i] = 0xFF;
+	ht_cap->mcs.rx_mask[4] = 0x01;
+	ht_cap->mcs.rx_highest = cpu_to_le16(150 * efuse->hw_cap.nss);
 }
 
 static void rtw_init_vht_cap(struct rtw_dev *rtwdev,
 			     struct ieee80211_sta_vht_cap *vht_cap)
 {
 	struct rtw_efuse *efuse = &rtwdev->efuse;
-	u16 mcs_map;
+	u16 mcs_map = 0;
 	__le16 highest;
+	int i;
 
 	if (efuse->hw_cap.ptcl != EFUSE_HW_CAP_IGNORE &&
 	    efuse->hw_cap.ptcl != EFUSE_HW_CAP_PTCL_VHT)
@@ -1603,21 +1716,15 @@ static void rtw_init_vht_cap(struct rtw_dev *rtwdev,
 	if (rtw_chip_has_rx_ldpc(rtwdev))
 		vht_cap->cap |= IEEE80211_VHT_CAP_RXLDPC;
 
-	mcs_map = IEEE80211_VHT_MCS_SUPPORT_0_9 << 0 |
-		  IEEE80211_VHT_MCS_NOT_SUPPORTED << 4 |
-		  IEEE80211_VHT_MCS_NOT_SUPPORTED << 6 |
-		  IEEE80211_VHT_MCS_NOT_SUPPORTED << 8 |
-		  IEEE80211_VHT_MCS_NOT_SUPPORTED << 10 |
-		  IEEE80211_VHT_MCS_NOT_SUPPORTED << 12 |
-		  IEEE80211_VHT_MCS_NOT_SUPPORTED << 14;
-	if (efuse->hw_cap.nss > 1) {
-		highest = cpu_to_le16(780);
-		mcs_map |= IEEE80211_VHT_MCS_SUPPORT_0_9 << 2;
-	} else {
-		highest = cpu_to_le16(390);
-		mcs_map |= IEEE80211_VHT_MCS_NOT_SUPPORTED << 2;
+	for (i = 0; i < 8; i++) {
+		if (i < efuse->hw_cap.nss)
+			mcs_map |= IEEE80211_VHT_MCS_SUPPORT_0_9 << (i * 2);
+		else
+			mcs_map |= IEEE80211_VHT_MCS_NOT_SUPPORTED << (i * 2);
 	}
 
+	highest = cpu_to_le16(390 * efuse->hw_cap.nss);
+
 	vht_cap->vht_mcs.rx_mcs_map = cpu_to_le16(mcs_map);
 	vht_cap->vht_mcs.tx_mcs_map = cpu_to_le16(mcs_map);
 	vht_cap->vht_mcs.rx_highest = highest;
@@ -1683,13 +1790,25 @@ static void rtw_vif_smps_iter(void *data, u8 *mac,
 {
 	struct rtw_dev *rtwdev = (struct rtw_dev *)data;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
 	if (vif->type != NL80211_IFTYPE_STATION || !vif->cfg.assoc)
+#else
+	if (vif->type != NL80211_IFTYPE_STATION || !vif->bss_conf.assoc)
+#endif
 		return;
 
 	if (rtwdev->hal.txrx_1ss)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
 		ieee80211_request_smps(vif, 0, IEEE80211_SMPS_STATIC);
+#else
+		ieee80211_request_smps(vif, IEEE80211_SMPS_STATIC);
+#endif
 	else
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
 		ieee80211_request_smps(vif, 0, IEEE80211_SMPS_OFF);
+#else
+		ieee80211_request_smps(vif, IEEE80211_SMPS_OFF);
+#endif
 }
 
 void rtw_set_txrx_1ss(struct rtw_dev *rtwdev, bool txrx_1ss)
@@ -1917,6 +2036,9 @@ static int rtw_dump_hw_feature(struct rtw_dev *rtwdev)
 	u8 bw;
 	int i;
 
+	if (!rtwdev->chip->hw_feature_report)
+		return 0;
+
 	id = rtw_read8(rtwdev, REG_C2HEVT);
 	if (id != C2H_HW_FEATURE_REPORT) {
 		rtw_err(rtwdev, "failed to read hw feature report\n");
@@ -2093,8 +2215,14 @@ int rtw_core_init(struct rtw_dev *rtwdev)
 	INIT_LIST_HEAD(&rtwdev->rsvd_page_list);
 	INIT_LIST_HEAD(&rtwdev->txqs);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 14, 0)
+	setup_timer(&rtwdev->tx_report.purge_timer,
+		    (void *)(long unsigned int)rtw_tx_report_purge_timer,
+		    (long unsigned int)rtwdev);
+#else
 	timer_setup(&rtwdev->tx_report.purge_timer,
 		    rtw_tx_report_purge_timer, 0);
+#endif
 	rtwdev->tx_wq = alloc_workqueue("rtw_tx_wq", WQ_UNBOUND | WQ_HIGHPRI, 0);
 	if (!rtwdev->tx_wq) {
 		rtw_warn(rtwdev, "alloc_workqueue rtw_tx_wq failed\n");
@@ -2183,7 +2311,11 @@ void rtw_core_deinit(struct rtw_dev *rtwdev)
 		release_firmware(wow_fw->firmware);
 
 	destroy_workqueue(rtwdev->tx_wq);
+# if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 2, 0)
 	timer_delete_sync(&rtwdev->tx_report.purge_timer);
+# else
+	del_timer_sync(&rtwdev->tx_report.purge_timer);
+# endif
 	spin_lock_irqsave(&rtwdev->tx_report.q_lock, flags);
 	skb_queue_purge(&rtwdev->tx_report.queue);
 	spin_unlock_irqrestore(&rtwdev->tx_report.q_lock, flags);
@@ -2203,7 +2335,7 @@ EXPORT_SYMBOL(rtw_core_deinit);
 
 int rtw_register_hw(struct rtw_dev *rtwdev, struct ieee80211_hw *hw)
 {
-	bool sta_mode_only = rtwdev->hci.type == RTW_HCI_TYPE_SDIO;
+	bool sta_mode_only = false; /*rtwdev->hci.type == RTW_HCI_TYPE_SDIO;*/
 	struct rtw_hal *hal = &rtwdev->hal;
 	int max_tx_headroom = 0;
 	int ret;
@@ -2227,7 +2359,8 @@ int rtw_register_hw(struct rtw_dev *rtwdev, struct ieee80211_hw *hw)
 	ieee80211_hw_set(hw, SUPPORTS_PS);
 	ieee80211_hw_set(hw, SUPPORTS_DYNAMIC_PS);
 	ieee80211_hw_set(hw, SUPPORT_FAST_XMIT);
-	ieee80211_hw_set(hw, SUPPORTS_AMSDU_IN_AMPDU);
+	if (rtwdev->chip->amsdu_in_ampdu)
+		ieee80211_hw_set(hw, SUPPORTS_AMSDU_IN_AMPDU);
 	ieee80211_hw_set(hw, HAS_RATE_CONTROL);
 	ieee80211_hw_set(hw, TX_AMSDU);
 	ieee80211_hw_set(hw, SINGLE_SCAN_ON_ALL_BANDS);
@@ -2237,7 +2370,9 @@ int rtw_register_hw(struct rtw_dev *rtwdev, struct ieee80211_hw *hw)
 	else
 		hw->wiphy->interface_modes = BIT(NL80211_IFTYPE_STATION) |
 					     BIT(NL80211_IFTYPE_AP) |
-					     BIT(NL80211_IFTYPE_ADHOC);
+					     BIT(NL80211_IFTYPE_ADHOC) |
+                                    BIT(NL80211_IFTYPE_P2P_CLIENT) |
+                                    BIT(NL80211_IFTYPE_P2P_GO);
 	hw->wiphy->available_antennas_tx = hal->antenna_tx;
 	hw->wiphy->available_antennas_rx = hal->antenna_rx;
 
@@ -2248,7 +2383,7 @@ int rtw_register_hw(struct rtw_dev *rtwdev, struct ieee80211_hw *hw)
 	hw->wiphy->max_scan_ssids = RTW_SCAN_MAX_SSIDS;
 	hw->wiphy->max_scan_ie_len = rtw_get_max_scan_ie_len(rtwdev);
 
-	if (!sta_mode_only && rtwdev->chip->id == RTW_CHIP_TYPE_8822C) {
+	if (!sta_mode_only) {
 		hw->wiphy->iface_combinations = rtw_iface_combs;
 		hw->wiphy->n_iface_combinations = ARRAY_SIZE(rtw_iface_combs);
 	}
@@ -2264,7 +2399,9 @@ int rtw_register_hw(struct rtw_dev *rtwdev, struct ieee80211_hw *hw)
 	rtw_set_supported_band(hw, rtwdev->chip);
 	SET_IEEE80211_PERM_ADDR(hw, rtwdev->efuse.addr);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 	hw->wiphy->sar_capa = &rtw_sar_capa;
+#endif
 
 	ret = rtw_regd_init(rtwdev);
 	if (ret) {
@@ -2272,16 +2409,18 @@ int rtw_register_hw(struct rtw_dev *rtwdev, struct ieee80211_hw *hw)
 		return ret;
 	}
 
+	rtw_led_init(rtwdev);
+
 	ret = ieee80211_register_hw(hw);
 	if (ret) {
 		rtw_err(rtwdev, "failed to register hw\n");
-		return ret;
+		goto led_deinit;
 	}
 
 	ret = rtw_regd_hint(rtwdev);
 	if (ret) {
 		rtw_err(rtwdev, "failed to hint regd\n");
-		return ret;
+		goto led_deinit;
 	}
 
 	rtw_debugfs_init(rtwdev);
@@ -2290,6 +2429,10 @@ int rtw_register_hw(struct rtw_dev *rtwdev, struct ieee80211_hw *hw)
 	rtwdev->bf_info.bfer_su_cnt = 0;
 
 	return 0;
+
+led_deinit:
+	rtw_led_deinit(rtwdev);
+	return ret;
 }
 EXPORT_SYMBOL(rtw_register_hw);
 
@@ -2300,6 +2443,7 @@ void rtw_unregister_hw(struct rtw_dev *rtwdev, struct ieee80211_hw *hw)
 	ieee80211_unregister_hw(hw);
 	rtw_unset_supported_band(hw, chip);
 	rtw_debugfs_deinit(rtwdev);
+	rtw_led_deinit(rtwdev);
 }
 EXPORT_SYMBOL(rtw_unregister_hw);
 
@@ -2398,7 +2542,11 @@ static void rtw_check_sta_active_iter(void *data, struct ieee80211_vif *vif)
 	if (vif->type != NL80211_IFTYPE_STATION)
 		return;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0)
 	if (vif->cfg.assoc || !is_zero_ether_addr(rtwvif->bssid))
+#else
+	if (vif->bss_conf.assoc || !is_zero_ether_addr(rtwvif->bssid))
+#endif
 		*active = true;
 }
 
@@ -2425,6 +2573,46 @@ void rtw_core_enable_beacon(struct rtw_dev *rtwdev, bool enable)
 	}
 }
 
+void rtw_set_ampdu_factor(struct rtw_dev *rtwdev, struct ieee80211_vif *vif,
+			  struct ieee80211_bss_conf *bss_conf)
+{
+	const struct rtw_chip_ops *ops = rtwdev->chip->ops;
+	struct ieee80211_sta *sta;
+	u8 factor = 0xff;
+
+	if (!ops->set_ampdu_factor)
+		return;
+
+	rcu_read_lock();
+
+	sta = ieee80211_find_sta(vif, bss_conf->bssid);
+	if (!sta) {
+		rcu_read_unlock();
+		rtw_warn(rtwdev, "%s: failed to find station %pM\n",
+			 __func__, bss_conf->bssid);
+		return;
+	}
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
+	if (sta->deflink.vht_cap.vht_supported)
+		factor = u32_get_bits(sta->deflink.vht_cap.cap,
+				      IEEE80211_VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_MASK);
+	else if (sta->deflink.ht_cap.ht_supported)
+		factor = sta->deflink.ht_cap.ampdu_factor;
+#else
+	if (sta->vht_cap.vht_supported)
+		factor = u32_get_bits(sta->vht_cap.cap,
+				      IEEE80211_VHT_CAP_MAX_A_MPDU_LENGTH_EXPONENT_MASK);
+	else if (sta->ht_cap.ht_supported)
+		factor = sta->ht_cap.ampdu_factor;
+#endif
+
+	rcu_read_unlock();
+
+	if (factor != 0xff)
+		ops->set_ampdu_factor(rtwdev, factor);
+}
+
 MODULE_AUTHOR("Realtek Corporation");
 MODULE_DESCRIPTION("Realtek 802.11ac wireless core module");
 MODULE_LICENSE("Dual BSD/GPL");
diff --git a/drivers/net/wireless/realtek/rtw88/main.h b/drivers/net/wireless/realtek/rtw88/main.h
index c808bb271e9d..3aa2ce01e377 100644
--- a/drivers/net/wireless/realtek/rtw88/main.h
+++ b/drivers/net/wireless/realtek/rtw88/main.h
@@ -5,17 +5,95 @@
 #ifndef __RTK_MAIN_H_
 #define __RTK_MAIN_H_
 
+#include <linux/version.h>
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 11, 0)
+#include "compiler.h"
+#endif
 #include <net/mac80211.h>
 #include <linux/vmalloc.h>
 #include <linux/firmware.h>
 #include <linux/average.h>
 #include <linux/bitops.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 19, 0)
 #include <linux/bitfield.h>
+#else
+#include "bitfield.h"
+#endif
 #include <linux/iopoll.h>
 #include <linux/interrupt.h>
 #include <linux/workqueue.h>
 
 #include "util.h"
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 8, 0)
+#include <linux/etherdevice.h>
+#endif
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 14, 0)
+#include <linux/leds.h>
+#endif
+
+#if !defined(RHEL_RELEASE_CODE)
+#define RHEL_RELEASE_CODE 0
+#define RHEL_RELEASE_VERSION(a, b) a<<8 & b
+#endif
+
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(6, 6, 0))
+/**
+ * abs_diff - return absolute value of the difference between the arguments
+ * @a: the first argument
+ * @b: the second argument
+ *
+ * @a and @b have to be of the same type. With this restriction we compare
+ * signed to signed and unsigned to unsigned. The result is the subtraction
+ * the smaller of the two from the bigger, hence result is always a positive
+ * value.
+ *
+ * Return: an absolute value of the difference between the @a and @b.
+ */
+#define abs_diff(a, b) ({			\
+	typeof(a) __a = (a);			\
+	typeof(b) __b = (b);			\
+	(void)(&__a == &__b);			\
+	__a > __b ? (__a - __b) : (__b - __a);	\
+})
+#endif
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 8, 0)
+/**
+ * cfg80211_ssid_eq - compare two SSIDs
+ * @a: first SSID
+ * @b: second SSID
+ *
+ * Return: %true if SSIDs are equal, %false otherwise.
+ */
+static inline bool
+cfg80211_ssid_eq(struct cfg80211_ssid *a, struct cfg80211_ssid *b)
+{
+       if (WARN_ON(!a || !b))
+               return false;
+       if (a->ssid_len != b->ssid_len)
+               return false;
+       return memcmp(a->ssid, b->ssid, a->ssid_len) ? false : true;
+}
+
+#endif
+
+
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 8, 0)) || defined(RHEL_RELEASE) && (RHEL_RELEASE_CODE < RHEL_RELEASE_VERSION(8,0))
+/* see Documentation/timers/timers-howto.rst for the thresholds */
+static inline void fsleep(unsigned long usecs)
+{
+        if (usecs <= 10)
+                udelay(usecs);
+        else if (usecs <= 20000)
+                usleep_range(usecs, 2 * usecs);
+        else
+                msleep(DIV_ROUND_UP(usecs, 1000));
+}
+#endif
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 7, 0)
+#define NUM_NL80211_BANDS IEEE80211_NUM_BANDS
+#endif
 
 #define RTW_MAX_MAC_ID_NUM		32
 #define RTW_MAX_SEC_CAM_NUM		32
@@ -40,6 +118,65 @@
 
 #define RTW_TP_SHIFT			18 /* bytes/2s --> Mbps */
 
+#ifndef read_poll_timeout
+#define read_poll_timeout(op, val, cond, sleep_us, timeout_us, \
+                                sleep_before_read, args...) \
+({ \
+        u64 __timeout_us = (timeout_us); \
+        unsigned long __sleep_us = (sleep_us); \
+        ktime_t __timeout = ktime_add_us(ktime_get(), __timeout_us); \
+        might_sleep_if((__sleep_us) != 0); \
+        if (sleep_before_read && __sleep_us) \
+                usleep_range((__sleep_us >> 2) + 1, __sleep_us); \
+        for (;;) { \
+                (val) = op(args); \
+                if (cond) \
+                        break; \
+                if (__timeout_us && \
+                    ktime_compare(ktime_get(), __timeout) > 0) { \
+                        (val) = op(args); \
+                        break; \
+                } \
+                if (__sleep_us) \
+                        usleep_range((__sleep_us >> 2) + 1, __sleep_us); \
+        } \
+        (cond) ? 0 : -ETIMEDOUT; \
+})
+#endif
+
+#if !defined(IEEE80211_AMPDU_TX_START_IMMEDIATE)
+#define IEEE80211_AMPDU_TX_START_IMMEDIATE 1
+#endif
+
+#if !defined(fallthrough)
+#define fallthrough do {} while (0)
+#endif
+
+#ifndef read_poll_timeout_atomic
+#define read_poll_timeout_atomic(op, val, cond, delay_us, timeout_us, \
+                                        delay_before_read, args...) \
+({ \
+        u64 __timeout_us = (timeout_us); \
+        unsigned long __delay_us = (delay_us); \
+        ktime_t __timeout = ktime_add_us(ktime_get(), __timeout_us); \
+        if (delay_before_read && __delay_us) \
+                udelay(__delay_us); \
+        for (;;) { \
+                (val) = op(args); \
+                if (cond) \
+                        break; \
+                if (__timeout_us && \
+                    ktime_compare(ktime_get(), __timeout) > 0) { \
+                        (val) = op(args); \
+                        break; \
+                } \
+                if (__delay_us) \
+                        udelay(__delay_us); \
+        } \
+        (cond) ? 0 : -ETIMEDOUT; \
+})
+#endif
+
 extern bool rtw_bf_support;
 extern bool rtw_disable_lps_deep_mode;
 extern unsigned int rtw_debug_mask;
@@ -61,7 +198,7 @@ enum rtw_hci_type {
 };
 
 struct rtw_hci {
-	struct rtw_hci_ops *ops;
+	const struct rtw_hci_ops *ops;
 	enum rtw_hci_type type;
 
 	u32 rpwm_addr;
@@ -166,9 +303,14 @@ enum rtw_rate_section {
 	RTW_RATE_SECTION_HT_2S,
 	RTW_RATE_SECTION_VHT_1S,
 	RTW_RATE_SECTION_VHT_2S,
+	__RTW_RATE_SECTION_2SS_MAX = RTW_RATE_SECTION_VHT_2S,
+	RTW_RATE_SECTION_HT_3S,
+	RTW_RATE_SECTION_HT_4S,
+	RTW_RATE_SECTION_VHT_3S,
+	RTW_RATE_SECTION_VHT_4S,
 
 	/* keep last */
-	RTW_RATE_SECTION_MAX,
+	RTW_RATE_SECTION_NUM,
 };
 
 enum rtw_wireless_set {
@@ -189,6 +331,9 @@ enum rtw_chip_type {
 	RTW_CHIP_TYPE_8723D,
 	RTW_CHIP_TYPE_8821C,
 	RTW_CHIP_TYPE_8703B,
+	RTW_CHIP_TYPE_8821A,
+	RTW_CHIP_TYPE_8812A,
+	RTW_CHIP_TYPE_8814A,
 };
 
 enum rtw_tx_queue_type {
@@ -378,6 +523,9 @@ enum rtw_evm {
 	RTW_EVM_1SS,
 	RTW_EVM_2SS_A,
 	RTW_EVM_2SS_B,
+	RTW_EVM_3SS_A,
+	RTW_EVM_3SS_B,
+	RTW_EVM_3SS_C,
 	/* keep it last */
 	RTW_EVM_NUM
 };
@@ -395,6 +543,10 @@ enum rtw_snr {
 	RTW_SNR_2SS_B,
 	RTW_SNR_2SS_C,
 	RTW_SNR_2SS_D,
+	RTW_SNR_3SS_A,
+	RTW_SNR_3SS_B,
+	RTW_SNR_3SS_C,
+	RTW_SNR_3SS_D,
 	/* keep it last */
 	RTW_SNR_NUM
 };
@@ -755,7 +907,6 @@ struct rtw_sta_info {
 	u8 mac_id;
 	u8 rate_id;
 	enum rtw_bandwidth bw_mode;
-	enum rtw_rf_type rf_type;
 	u8 stbc_en:2;
 	u8 ldpc_en:2;
 	bool sgi_enable;
@@ -821,7 +972,7 @@ struct rtw_vif {
 };
 
 struct rtw_regulatory {
-	char alpha2[2];
+	char alpha2[2] __nonstring;
 	u8 txpwr_regd_2g;
 	u8 txpwr_regd_5g;
 };
@@ -841,6 +992,8 @@ struct rtw_regd {
 };
 
 struct rtw_chip_ops {
+	int (*power_on)(struct rtw_dev *rtwdev);
+	void (*power_off)(struct rtw_dev *rtwdev);
 	int (*mac_init)(struct rtw_dev *rtwdev);
 	int (*dump_fw_crash)(struct rtw_dev *rtwdev);
 	void (*shutdown)(struct rtw_dev *rtwdev);
@@ -848,9 +1001,8 @@ struct rtw_chip_ops {
 	void (*phy_set_param)(struct rtw_dev *rtwdev);
 	void (*set_channel)(struct rtw_dev *rtwdev, u8 channel,
 			    u8 bandwidth, u8 primary_chan_idx);
-	void (*query_rx_desc)(struct rtw_dev *rtwdev, u8 *rx_desc,
-			      struct rtw_rx_pkt_stat *pkt_stat,
-			      struct ieee80211_rx_status *rx_status);
+	void (*query_phy_status)(struct rtw_dev *rtwdev, u8 *phy_status,
+				 struct rtw_rx_pkt_stat *pkt_stat);
 	u32 (*read_rf)(struct rtw_dev *rtwdev, enum rtw_rf_path rf_path,
 		       u32 addr, u32 mask);
 	bool (*write_rf)(struct rtw_dev *rtwdev, enum rtw_rf_path rf_path,
@@ -863,6 +1015,7 @@ struct rtw_chip_ops {
 			   u32 antenna_rx);
 	void (*cfg_ldo25)(struct rtw_dev *rtwdev, bool enable);
 	void (*efuse_grant)(struct rtw_dev *rtwdev, bool enable);
+	void (*set_ampdu_factor)(struct rtw_dev *rtwdev, u8 factor);
 	void (*false_alarm_statistics)(struct rtw_dev *rtwdev);
 	void (*phy_calibration)(struct rtw_dev *rtwdev);
 	void (*dpk_track)(struct rtw_dev *rtwdev);
@@ -885,6 +1038,7 @@ struct rtw_chip_ops {
 			       bool is_tx2_path);
 	void (*config_txrx_mode)(struct rtw_dev *rtwdev, u8 tx_path,
 				 u8 rx_path, bool is_tx2_path);
+	void (*led_set)(struct led_classdev *led, enum led_brightness brightness);
 	/* for USB/SDIO only */
 	void (*fill_txdesc_checksum)(struct rtw_dev *rtwdev,
 				     struct rtw_tx_pkt_info *pkt_info,
@@ -1096,17 +1250,20 @@ enum rtw_rfe_fem {
 struct rtw_rfe_def {
 	const struct rtw_table *phy_pg_tbl;
 	const struct rtw_table *txpwr_lmt_tbl;
+	const struct rtw_pwr_track_tbl *pwr_track_tbl;
 	const struct rtw_table *agc_btg_tbl;
 };
 
-#define RTW_DEF_RFE(chip, bb_pg, pwrlmt) {				  \
+#define RTW_DEF_RFE(chip, bb_pg, pwrlmt, track) {				  \
 	.phy_pg_tbl = &rtw ## chip ## _bb_pg_type ## bb_pg ## _tbl,	  \
 	.txpwr_lmt_tbl = &rtw ## chip ## _txpwr_lmt_type ## pwrlmt ## _tbl, \
+	.pwr_track_tbl = &rtw ## chip ## _pwr_track_type ## track ## _tbl, \
 	}
 
-#define RTW_DEF_RFE_EXT(chip, bb_pg, pwrlmt, btg) {			  \
+#define RTW_DEF_RFE_EXT(chip, bb_pg, pwrlmt, track, btg) {			  \
 	.phy_pg_tbl = &rtw ## chip ## _bb_pg_type ## bb_pg ## _tbl,	  \
 	.txpwr_lmt_tbl = &rtw ## chip ## _txpwr_lmt_type ## pwrlmt ## _tbl, \
+	.pwr_track_tbl = &rtw ## chip ## _pwr_track_type ## track ## _tbl, \
 	.agc_btg_tbl = &rtw ## chip ## _agc_btg_type ## btg ## _tbl, \
 	}
 
@@ -1124,14 +1281,26 @@ struct rtw_rfe_def {
  * For 2G there are cck rate and ofdm rate with different settings.
  */
 struct rtw_pwr_track_tbl {
+	const u8 *pwrtrk_5gd_n[RTW_PWR_TRK_5G_NUM];
+	const u8 *pwrtrk_5gd_p[RTW_PWR_TRK_5G_NUM];
+	const u8 *pwrtrk_5gc_n[RTW_PWR_TRK_5G_NUM];
+	const u8 *pwrtrk_5gc_p[RTW_PWR_TRK_5G_NUM];
 	const u8 *pwrtrk_5gb_n[RTW_PWR_TRK_5G_NUM];
 	const u8 *pwrtrk_5gb_p[RTW_PWR_TRK_5G_NUM];
 	const u8 *pwrtrk_5ga_n[RTW_PWR_TRK_5G_NUM];
 	const u8 *pwrtrk_5ga_p[RTW_PWR_TRK_5G_NUM];
+	const u8 *pwrtrk_2gd_n;
+	const u8 *pwrtrk_2gd_p;
+	const u8 *pwrtrk_2gc_n;
+	const u8 *pwrtrk_2gc_p;
 	const u8 *pwrtrk_2gb_n;
 	const u8 *pwrtrk_2gb_p;
 	const u8 *pwrtrk_2ga_n;
 	const u8 *pwrtrk_2ga_p;
+	const u8 *pwrtrk_2g_cckd_n;
+	const u8 *pwrtrk_2g_cckd_p;
+	const u8 *pwrtrk_2g_cckc_n;
+	const u8 *pwrtrk_2g_cckc_p;
 	const u8 *pwrtrk_2g_cckb_n;
 	const u8 *pwrtrk_2g_cckb_p;
 	const u8 *pwrtrk_2g_ccka_n;
@@ -1167,7 +1336,7 @@ enum rtw_fwcd_item {
 
 /* hardware configuration for each IC */
 struct rtw_chip_info {
-	struct rtw_chip_ops *ops;
+	const struct rtw_chip_ops *ops;
 	u8 id;
 
 	const char *fw_name;
@@ -1184,7 +1353,7 @@ struct rtw_chip_info {
 	u32 fw_rxff_size;
 	u16 rsvd_drv_pg_num;
 	u8 band;
-	u8 page_size;
+	u16 page_size;
 	u8 csi_buf_pg_num;
 	u8 dig_max;
 	u8 dig_min;
@@ -1198,7 +1367,11 @@ struct rtw_chip_info {
 	u16 fw_fifo_addr[RTW_FW_FIFO_MAX];
 	const struct rtw_fwcd_segs *fwcd_segs;
 
+	bool amsdu_in_ampdu;
 	u8 usb_tx_agg_desc_num;
+	bool hw_feature_report;
+	u8 c2h_ra_report_size;
+	bool old_datarate_fb_limit;
 
 	u8 default_1ss_tx_path;
 
@@ -1209,8 +1382,8 @@ struct rtw_chip_info {
 
 	/* init values */
 	u8 sys_func_en;
-	const struct rtw_pwr_seq_cmd **pwr_on_seq;
-	const struct rtw_pwr_seq_cmd **pwr_off_seq;
+	const struct rtw_pwr_seq_cmd * const *pwr_on_seq;
+	const struct rtw_pwr_seq_cmd * const *pwr_off_seq;
 	const struct rtw_rqpn *rqpn_table;
 	const struct rtw_prioq_addrs *prioq_addrs;
 	const struct rtw_page_table *page_table;
@@ -1218,8 +1391,8 @@ struct rtw_chip_info {
 
 	const struct rtw_hw_reg *dig;
 	const struct rtw_hw_reg *dig_cck;
-	u32 rf_base_addr[2];
-	u32 rf_sipi_addr[2];
+	u32 rf_base_addr[RTW_RF_PATH_MAX];
+	u32 rf_sipi_addr[RTW_RF_PATH_MAX];
 	const struct rtw_rf_sipi_addr *rf_sipi_read_addr;
 	u8 fix_rf_phy_num;
 	const struct rtw_ltecoex_addr *ltecoex_addr;
@@ -1237,12 +1410,11 @@ struct rtw_chip_info {
 	u16 dpd_ratemask;
 	u8 iqk_threshold;
 	u8 lck_threshold;
-	const struct rtw_pwr_track_tbl *pwr_track_tbl;
 
 	u8 bfer_su_max_num;
 	u8 bfer_mu_max_num;
 
-	struct rtw_hw_reg_offset *edcca_th;
+	const struct rtw_hw_reg_offset *edcca_th;
 	s8 l2h_th_ini_cs;
 	s8 l2h_th_ini_ad;
 
@@ -1486,6 +1658,7 @@ struct rtw_coex_stat {
 	u8 bt_hid_slot;
 	u8 bt_a2dp_bitpool;
 	u8 bt_iqk_state;
+	u8 bt_disable_cnt;
 
 	u16 wl_beacon_interval;
 	u8 wl_noisy_level;
@@ -1709,7 +1882,7 @@ struct rtw_dm_info {
 	bool pwr_trk_init_trigger;
 	struct ewma_thermal avg_thermal[RTW_RF_PATH_MAX];
 	s8 txagc_remnant_cck;
-	s8 txagc_remnant_ofdm;
+	s8 txagc_remnant_ofdm[RTW_RF_PATH_MAX];
 	u8 rx_cck_agc_report_type;
 
 	/* backup dack results for each path and I/Q */
@@ -1757,6 +1930,7 @@ struct rtw_efuse {
 	u8 country_code[2];
 	u8 rf_board_option;
 	u8 rfe_option;
+	u8 rfe_option_full;
 	u8 power_track_type;
 	u8 thermal_meter[RTW_RF_PATH_MAX];
 	u8 thermal_meter_k;
@@ -1832,6 +2006,20 @@ struct rtw_phy_cond {
 	#define BRANCH_ENDIF	3
 };
 
+struct rtw_phy_cond2 {
+#ifdef __LITTLE_ENDIAN
+	u8 type_glna;
+	u8 type_gpa;
+	u8 type_alna;
+	u8 type_apa;
+#else
+	u8 type_apa;
+	u8 type_alna;
+	u8 type_gpa;
+	u8 type_glna;
+#endif
+};
+
 struct rtw_fifo_conf {
 	/* tx fifo information */
 	u16 rsvd_boundary;
@@ -1901,7 +2089,7 @@ union rtw_sar_cfg {
 
 struct rtw_sar {
 	enum rtw_sar_sources src;
-	union rtw_sar_cfg cfg[RTW_RF_PATH_MAX][RTW_RATE_SECTION_MAX];
+	union rtw_sar_cfg cfg[RTW_RF_PATH_MAX][RTW_RATE_SECTION_NUM];
 };
 
 struct rtw_hal {
@@ -1913,6 +2101,7 @@ struct rtw_hal {
 	u8 oem_id;
 	u8 pkg_type;
 	struct rtw_phy_cond phy_cond;
+	struct rtw_phy_cond2 phy_cond2;
 	bool rfe_btg;
 
 	u8 ps_mode;
@@ -1935,6 +2124,7 @@ struct rtw_hal {
 	u32 antenna_rx;
 	u8 bfee_sts_cap;
 	bool txrx_1ss;
+	bool cck_high_power;
 
 	/* protect tx power section */
 	struct mutex tx_power_mutex;
@@ -1943,16 +2133,16 @@ struct rtw_hal {
 	s8 tx_pwr_by_rate_offset_5g[RTW_RF_PATH_MAX]
 				   [DESC_RATE_MAX];
 	s8 tx_pwr_by_rate_base_2g[RTW_RF_PATH_MAX]
-				 [RTW_RATE_SECTION_MAX];
+				 [RTW_RATE_SECTION_NUM];
 	s8 tx_pwr_by_rate_base_5g[RTW_RF_PATH_MAX]
-				 [RTW_RATE_SECTION_MAX];
+				 [RTW_RATE_SECTION_NUM];
 	s8 tx_pwr_limit_2g[RTW_REGD_MAX]
 			  [RTW_CHANNEL_WIDTH_MAX]
-			  [RTW_RATE_SECTION_MAX]
+			  [RTW_RATE_SECTION_NUM]
 			  [RTW_MAX_CHANNEL_NUM_2G];
 	s8 tx_pwr_limit_5g[RTW_REGD_MAX]
 			  [RTW_CHANNEL_WIDTH_MAX]
-			  [RTW_RATE_SECTION_MAX]
+			  [RTW_RATE_SECTION_NUM]
 			  [RTW_MAX_CHANNEL_NUM_5G];
 	s8 tx_pwr_tbl[RTW_RF_PATH_MAX]
 		     [DESC_RATE_MAX];
@@ -2073,6 +2263,10 @@ struct rtw_dev {
 	struct completion fw_scan_density;
 	bool ap_active;
 
+	bool led_registered;
+	char led_name[32];
+	struct led_classdev led_cdev;
+
 	/* hci related data, must be last */
 	u8 priv[] __aligned(sizeof(void *));
 };
@@ -2182,7 +2376,11 @@ void rtw_set_channel(struct rtw_dev *rtwdev);
 void rtw_chip_prepare_tx(struct rtw_dev *rtwdev);
 void rtw_vif_port_config(struct rtw_dev *rtwdev, struct rtw_vif *rtwvif,
 			 u32 config);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 14, 0)
+void rtw_tx_report_purge_timer(void *ctx);
+#else
 void rtw_tx_report_purge_timer(struct timer_list *t);
+#endif
 void rtw_update_sta_info(struct rtw_dev *rtwdev, struct rtw_sta_info *si,
 			 bool reset_ra_mask);
 void rtw_core_scan_start(struct rtw_dev *rtwdev, struct rtw_vif *rtwvif,
@@ -2190,6 +2388,7 @@ void rtw_core_scan_start(struct rtw_dev *rtwdev, struct rtw_vif *rtwvif,
 void rtw_core_scan_complete(struct rtw_dev *rtwdev, struct ieee80211_vif *vif,
 			    bool hw_scan);
 int rtw_core_start(struct rtw_dev *rtwdev);
+void rtw_power_off(struct rtw_dev *rtwdev);
 void rtw_core_stop(struct rtw_dev *rtwdev);
 int rtw_chip_info_setup(struct rtw_dev *rtwdev);
 int rtw_core_init(struct rtw_dev *rtwdev);
@@ -2204,6 +2403,8 @@ int rtw_sta_add(struct rtw_dev *rtwdev, struct ieee80211_sta *sta,
 void rtw_sta_remove(struct rtw_dev *rtwdev, struct ieee80211_sta *sta,
 		    bool fw_exist);
 void rtw_fw_recovery(struct rtw_dev *rtwdev);
+int rtw_wait_firmware_completion(struct rtw_dev *rtwdev);
+int rtw_power_on(struct rtw_dev *rtwdev);
 void rtw_core_fw_scan_notify(struct rtw_dev *rtwdev, bool start);
 int rtw_dump_fw(struct rtw_dev *rtwdev, const u32 ocp_src, u32 size,
 		u32 fwcd_item);
@@ -2215,4 +2416,21 @@ void rtw_update_channel(struct rtw_dev *rtwdev, u8 center_channel,
 void rtw_core_port_switch(struct rtw_dev *rtwdev, struct ieee80211_vif *vif);
 bool rtw_core_check_sta_active(struct rtw_dev *rtwdev);
 void rtw_core_enable_beacon(struct rtw_dev *rtwdev, bool enable);
+void rtw_set_ampdu_factor(struct rtw_dev *rtwdev, struct ieee80211_vif *vif,
+			  struct ieee80211_bss_conf *bss_conf);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 8, 0)
+static inline bool rtw_ssid_equal(struct cfg80211_ssid *a,
+                                 struct cfg80211_ssid *b)
+{
+       if (!a || !b || a->ssid_len != b->ssid_len)
+               return false;
+
+       if (memcmp(a->ssid, b->ssid, a->ssid_len))
+               return false;
+
+       return true;
+}
 #endif
+
+#endif
+
diff --git a/drivers/net/wireless/realtek/rtw88/pci.c b/drivers/net/wireless/realtek/rtw88/pci.c
index 0b9b8807af2c..8b0d9617076b 100644
--- a/drivers/net/wireless/realtek/rtw88/pci.c
+++ b/drivers/net/wireless/realtek/rtw88/pci.c
@@ -12,6 +12,7 @@
 #include "fw.h"
 #include "ps.h"
 #include "debug.h"
+#include "mac.h"
 
 static bool rtw_disable_msi;
 static bool rtw_pci_disable_aspm;
@@ -20,7 +21,7 @@ module_param_named(disable_aspm, rtw_pci_disable_aspm, bool, 0644);
 MODULE_PARM_DESC(disable_msi, "Set Y to disable MSI interrupt support");
 MODULE_PARM_DESC(disable_aspm, "Set Y to disable PCI ASPM support");
 
-static u32 rtw_pci_tx_queue_idx_addr[] = {
+static const u32 rtw_pci_tx_queue_idx_addr[] = {
 	[RTW_TX_QUEUE_BK]	= RTK_PCI_TXBD_IDX_BKQ,
 	[RTW_TX_QUEUE_BE]	= RTK_PCI_TXBD_IDX_BEQ,
 	[RTW_TX_QUEUE_VI]	= RTK_PCI_TXBD_IDX_VIQ,
@@ -824,7 +825,7 @@ static int rtw_pci_tx_write_data(struct rtw_dev *rtwdev,
 	pkt_desc = skb_push(skb, chip->tx_pkt_desc_sz);
 	memset(pkt_desc, 0, tx_pkt_desc_sz);
 	pkt_info->qsel = rtw_pci_get_tx_qsel(skb, queue);
-	rtw_tx_fill_tx_desc(pkt_info, skb);
+	rtw_tx_fill_tx_desc(rtwdev, pkt_info, skb);
 	dma = dma_map_single(&rtwpci->pdev->dev, skb->data, skb->len,
 			     DMA_TO_DEVICE);
 	if (dma_mapping_error(&rtwpci->pdev->dev, dma))
@@ -1065,7 +1066,7 @@ static u32 rtw_pci_rx_napi(struct rtw_dev *rtwdev, struct rtw_pci *rtwpci,
 		dma_sync_single_for_cpu(rtwdev->dev, dma, RTK_PCI_RX_BUF_SIZE,
 					DMA_FROM_DEVICE);
 		rx_desc = skb->data;
-		chip->ops->query_rx_desc(rtwdev, rx_desc, &pkt_stat, &rx_status);
+		rtw_rx_query_rx_desc(rtwdev, rx_desc, &pkt_stat, &rx_status);
 
 		/* offset from rx_desc to payload */
 		pkt_offset = pkt_desc_sz + pkt_stat.drv_info_sz +
@@ -1591,7 +1592,7 @@ static void rtw_pci_destroy(struct rtw_dev *rtwdev, struct pci_dev *pdev)
 	rtw_pci_io_unmapping(rtwdev, pdev);
 }
 
-static struct rtw_hci_ops rtw_pci_ops = {
+static const struct rtw_hci_ops rtw_pci_ops = {
 	.tx_write = rtw_pci_tx_write,
 	.tx_kick_off = rtw_pci_tx_kick_off,
 	.flush_queues = rtw_pci_flush_queues,
@@ -1602,6 +1603,7 @@ static struct rtw_hci_ops rtw_pci_ops = {
 	.link_ps = rtw_pci_link_ps,
 	.interface_cfg = rtw_pci_interface_cfg,
 	.dynamic_rx_agg = NULL,
+	.write_firmware_page = rtw_write_firmware_page,
 
 	.read8 = rtw_pci_read8,
 	.read16 = rtw_pci_read16,
@@ -1615,7 +1617,11 @@ static struct rtw_hci_ops rtw_pci_ops = {
 
 static int rtw_pci_request_irq(struct rtw_dev *rtwdev, struct pci_dev *pdev)
 {
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 10, 0))
 	unsigned int flags = PCI_IRQ_INTX;
+#else
+	unsigned int flags = PCI_IRQ_LEGACY;
+#endif
 	int ret;
 
 	if (!rtw_disable_msi)
@@ -1688,11 +1694,24 @@ static int rtw_pci_napi_init(struct rtw_dev *rtwdev)
 {
 	struct rtw_pci *rtwpci = (struct rtw_pci *)rtwdev->priv;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 11, 0)
 	rtwpci->netdev = alloc_netdev_dummy(0);
 	if (!rtwpci->netdev)
 		return -ENOMEM;
 
-	netif_napi_add(rtwpci->netdev, &rtwpci->napi, rtw_pci_napi_poll);
+	netif_napi_add(
+		rtwpci->netdev
+#else
+	init_dummy_netdev(&rtwpci->netdev);
+	netif_napi_add(
+		&rtwpci->netdev
+#endif
+		, &rtwpci->napi
+		, rtw_pci_napi_poll
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 1, 0)
+		, NAPI_POLL_WEIGHT
+#endif
+	);
 	return 0;
 }
 
@@ -1702,7 +1721,9 @@ static void rtw_pci_napi_deinit(struct rtw_dev *rtwdev)
 
 	rtw_pci_napi_stop(rtwdev);
 	netif_napi_del(&rtwpci->napi);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 11, 0)
 	free_netdev(rtwpci->netdev);
+#endif
 }
 
 int rtw_pci_probe(struct pci_dev *pdev,
diff --git a/drivers/net/wireless/realtek/rtw88/pci.h b/drivers/net/wireless/realtek/rtw88/pci.h
index 13988db1cb4c..c21344847f4d 100644
--- a/drivers/net/wireless/realtek/rtw88/pci.h
+++ b/drivers/net/wireless/realtek/rtw88/pci.h
@@ -215,7 +215,11 @@ struct rtw_pci {
 	bool running;
 
 	/* napi structure */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 11, 0)
 	struct net_device *netdev;
+#else
+	struct net_device netdev;
+#endif
 	struct napi_struct napi;
 
 	u16 rx_tag;
diff --git a/drivers/net/wireless/realtek/rtw88/phy.c b/drivers/net/wireless/realtek/rtw88/phy.c
index 37ef80c9091d..9103cb6b92f1 100644
--- a/drivers/net/wireless/realtek/rtw88/phy.c
+++ b/drivers/net/wireless/realtek/rtw88/phy.c
@@ -10,7 +10,9 @@
 #include "phy.h"
 #include "debug.h"
 #include "regd.h"
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 #include "sar.h"
+#endif
 
 struct phy_cfg_pair {
 	u32 addr;
@@ -18,7 +20,10 @@ struct phy_cfg_pair {
 };
 
 union phy_table_tile {
-	struct rtw_phy_cond cond;
+	struct {
+		struct rtw_phy_cond cond;
+		struct rtw_phy_cond2 cond2;
+	} __packed;
 	struct phy_cfg_pair cfg;
 };
 
@@ -49,60 +54,93 @@ static const u32 db_invert_table[12][8] = {
 	 1995262315,	2511886432U,	3162277660U,	3981071706U}
 };
 
-u8 rtw_cck_rates[] = { DESC_RATE1M, DESC_RATE2M, DESC_RATE5_5M, DESC_RATE11M };
-u8 rtw_ofdm_rates[] = {
+const u8 rtw_cck_rates[] = { DESC_RATE1M, DESC_RATE2M, DESC_RATE5_5M, DESC_RATE11M };
+
+const u8 rtw_ofdm_rates[] = {
 	DESC_RATE6M,  DESC_RATE9M,  DESC_RATE12M,
 	DESC_RATE18M, DESC_RATE24M, DESC_RATE36M,
 	DESC_RATE48M, DESC_RATE54M
 };
-u8 rtw_ht_1s_rates[] = {
+
+const u8 rtw_ht_1s_rates[] = {
 	DESC_RATEMCS0, DESC_RATEMCS1, DESC_RATEMCS2,
 	DESC_RATEMCS3, DESC_RATEMCS4, DESC_RATEMCS5,
 	DESC_RATEMCS6, DESC_RATEMCS7
 };
-u8 rtw_ht_2s_rates[] = {
+
+const u8 rtw_ht_2s_rates[] = {
 	DESC_RATEMCS8,  DESC_RATEMCS9,  DESC_RATEMCS10,
 	DESC_RATEMCS11, DESC_RATEMCS12, DESC_RATEMCS13,
 	DESC_RATEMCS14, DESC_RATEMCS15
 };
-u8 rtw_vht_1s_rates[] = {
+
+const u8 rtw_vht_1s_rates[] = {
 	DESC_RATEVHT1SS_MCS0, DESC_RATEVHT1SS_MCS1,
 	DESC_RATEVHT1SS_MCS2, DESC_RATEVHT1SS_MCS3,
 	DESC_RATEVHT1SS_MCS4, DESC_RATEVHT1SS_MCS5,
 	DESC_RATEVHT1SS_MCS6, DESC_RATEVHT1SS_MCS7,
 	DESC_RATEVHT1SS_MCS8, DESC_RATEVHT1SS_MCS9
 };
-u8 rtw_vht_2s_rates[] = {
+
+const u8 rtw_vht_2s_rates[] = {
 	DESC_RATEVHT2SS_MCS0, DESC_RATEVHT2SS_MCS1,
 	DESC_RATEVHT2SS_MCS2, DESC_RATEVHT2SS_MCS3,
 	DESC_RATEVHT2SS_MCS4, DESC_RATEVHT2SS_MCS5,
 	DESC_RATEVHT2SS_MCS6, DESC_RATEVHT2SS_MCS7,
 	DESC_RATEVHT2SS_MCS8, DESC_RATEVHT2SS_MCS9
 };
-u8 *rtw_rate_section[RTW_RATE_SECTION_MAX] = {
+
+const u8 rtw_ht_3s_rates[] = {
+	DESC_RATEMCS16, DESC_RATEMCS17, DESC_RATEMCS18,
+	DESC_RATEMCS19, DESC_RATEMCS20, DESC_RATEMCS21,
+	DESC_RATEMCS22, DESC_RATEMCS23
+};
+
+const u8 rtw_ht_4s_rates[] = {
+	DESC_RATEMCS24, DESC_RATEMCS25, DESC_RATEMCS26,
+	DESC_RATEMCS27, DESC_RATEMCS28, DESC_RATEMCS29,
+	DESC_RATEMCS30, DESC_RATEMCS31
+};
+
+const u8 rtw_vht_3s_rates[] = {
+	DESC_RATEVHT3SS_MCS0, DESC_RATEVHT3SS_MCS1,
+	DESC_RATEVHT3SS_MCS2, DESC_RATEVHT3SS_MCS3,
+	DESC_RATEVHT3SS_MCS4, DESC_RATEVHT3SS_MCS5,
+	DESC_RATEVHT3SS_MCS6, DESC_RATEVHT3SS_MCS7,
+	DESC_RATEVHT3SS_MCS8, DESC_RATEVHT3SS_MCS9
+};
+
+const u8 rtw_vht_4s_rates[] = {
+	DESC_RATEVHT4SS_MCS0, DESC_RATEVHT4SS_MCS1,
+	DESC_RATEVHT4SS_MCS2, DESC_RATEVHT4SS_MCS3,
+	DESC_RATEVHT4SS_MCS4, DESC_RATEVHT4SS_MCS5,
+	DESC_RATEVHT4SS_MCS6, DESC_RATEVHT4SS_MCS7,
+	DESC_RATEVHT4SS_MCS8, DESC_RATEVHT4SS_MCS9
+};
+
+const u8 * const rtw_rate_section[RTW_RATE_SECTION_NUM] = {
 	rtw_cck_rates, rtw_ofdm_rates,
 	rtw_ht_1s_rates, rtw_ht_2s_rates,
-	rtw_vht_1s_rates, rtw_vht_2s_rates
+	rtw_vht_1s_rates, rtw_vht_2s_rates,
+	rtw_ht_3s_rates, rtw_ht_4s_rates,
+	rtw_vht_3s_rates, rtw_vht_4s_rates
 };
 EXPORT_SYMBOL(rtw_rate_section);
 
-u8 rtw_rate_size[RTW_RATE_SECTION_MAX] = {
+const u8 rtw_rate_size[RTW_RATE_SECTION_NUM] = {
 	ARRAY_SIZE(rtw_cck_rates),
 	ARRAY_SIZE(rtw_ofdm_rates),
 	ARRAY_SIZE(rtw_ht_1s_rates),
 	ARRAY_SIZE(rtw_ht_2s_rates),
 	ARRAY_SIZE(rtw_vht_1s_rates),
-	ARRAY_SIZE(rtw_vht_2s_rates)
+	ARRAY_SIZE(rtw_vht_2s_rates),
+	ARRAY_SIZE(rtw_ht_3s_rates),
+	ARRAY_SIZE(rtw_ht_4s_rates),
+	ARRAY_SIZE(rtw_vht_3s_rates),
+	ARRAY_SIZE(rtw_vht_4s_rates)
 };
 EXPORT_SYMBOL(rtw_rate_size);
 
-static const u8 rtw_cck_size = ARRAY_SIZE(rtw_cck_rates);
-static const u8 rtw_ofdm_size = ARRAY_SIZE(rtw_ofdm_rates);
-static const u8 rtw_ht_1s_size = ARRAY_SIZE(rtw_ht_1s_rates);
-static const u8 rtw_ht_2s_size = ARRAY_SIZE(rtw_ht_2s_rates);
-static const u8 rtw_vht_1s_size = ARRAY_SIZE(rtw_vht_1s_rates);
-static const u8 rtw_vht_2s_size = ARRAY_SIZE(rtw_vht_2s_rates);
-
 enum rtw_phy_band_type {
 	PHY_BAND_2G	= 0,
 	PHY_BAND_5G	= 1,
@@ -123,7 +161,7 @@ static void rtw_phy_cck_pd_init(struct rtw_dev *rtwdev)
 
 void rtw_phy_set_edcca_th(struct rtw_dev *rtwdev, u8 l2h, u8 h2l)
 {
-	struct rtw_hw_reg_offset *edcca_th = rtwdev->chip->edcca_th;
+	const struct rtw_hw_reg_offset *edcca_th = rtwdev->chip->edcca_th;
 
 	rtw_write32_mask(rtwdev,
 			 edcca_th[EDCCA_TH_L2H_IDX].hw_reg.addr,
@@ -481,11 +519,12 @@ static void rtw_phy_dig(struct rtw_dev *rtwdev)
 {
 	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
 	u8 upper_bound, lower_bound;
-	u8 pre_igi, cur_igi;
+	u8 chip = rtwdev->chip->id;
 	u16 fa_th[3], fa_cnt;
-	u8 level;
-	u8 step[3];
+	u8 pre_igi, cur_igi;
 	bool linked;
+	u8 step[3];
+	u8 level;
 
 	if (test_bit(RTW_FLAG_DIG_DISABLE, rtwdev->flags))
 		return;
@@ -527,6 +566,14 @@ static void rtw_phy_dig(struct rtw_dev *rtwdev)
 	 */
 	rtw_phy_dig_recorder(dm_info, cur_igi, fa_cnt);
 
+	/* Mitigate beacon loss and connectivity issues, mainly (only?)
+	 * in the 5 GHz band
+	 */
+	if ((chip == RTW_CHIP_TYPE_8812A || chip == RTW_CHIP_TYPE_8814A) &&
+	    rtwdev->beacon_loss && linked &&
+	    dm_info->total_fa_cnt < DIG_PERF_FA_TH_EXTRA_HIGH)
+		cur_igi = DIG_CVRG_MIN;
+
 	if (cur_igi != pre_igi)
 		rtw_phy_dig_write(rtwdev, cur_igi);
 }
@@ -1041,12 +1088,15 @@ void rtw_phy_setup_phy_cond(struct rtw_dev *rtwdev, u32 pkg)
 {
 	struct rtw_hal *hal = &rtwdev->hal;
 	struct rtw_efuse *efuse = &rtwdev->efuse;
-	struct rtw_phy_cond cond = {0};
+	struct rtw_phy_cond cond = {};
+	struct rtw_phy_cond2 cond2 = {};
 
 	cond.cut = hal->cut_version ? hal->cut_version : 15;
 	cond.pkg = pkg ? pkg : 15;
 	cond.plat = 0x04;
 	cond.rfe = efuse->rfe_option;
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8821C)
+		cond.rfe = efuse->rfe_option_full >> 3;
 
 	switch (rtw_hci_type(rtwdev)) {
 	case RTW_HCI_TYPE_USB:
@@ -1061,15 +1111,34 @@ void rtw_phy_setup_phy_cond(struct rtw_dev *rtwdev, u32 pkg)
 		break;
 	}
 
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8812A ||
+	    rtwdev->chip->id == RTW_CHIP_TYPE_8821A) {
+		cond.rfe = 0;
+		cond.rfe |= efuse->ext_lna_2g;
+		cond.rfe |= efuse->ext_pa_2g  << 1;
+		cond.rfe |= efuse->ext_lna_5g << 2;
+		cond.rfe |= efuse->ext_pa_5g  << 3;
+		cond.rfe |= efuse->btcoex     << 4;
+
+		cond2.type_alna = efuse->alna_type;
+		cond2.type_glna = efuse->glna_type;
+		cond2.type_apa = efuse->apa_type;
+		cond2.type_gpa = efuse->gpa_type;
+	}
+
 	hal->phy_cond = cond;
+	hal->phy_cond2 = cond2;
 
-	rtw_dbg(rtwdev, RTW_DBG_PHY, "phy cond=0x%08x\n", *((u32 *)&hal->phy_cond));
+	rtw_dbg(rtwdev, RTW_DBG_PHY, "phy cond=0x%08x cond2=0x%08x\n",
+		*((u32 *)&hal->phy_cond), *((u32 *)&hal->phy_cond2));
 }
 
-static bool check_positive(struct rtw_dev *rtwdev, struct rtw_phy_cond cond)
+static bool check_positive(struct rtw_dev *rtwdev, struct rtw_phy_cond cond,
+			   struct rtw_phy_cond2 cond2)
 {
 	struct rtw_hal *hal = &rtwdev->hal;
 	struct rtw_phy_cond drv_cond = hal->phy_cond;
+	struct rtw_phy_cond2 drv_cond2 = hal->phy_cond2;
 
 	if (cond.cut && cond.cut != drv_cond.cut)
 		return false;
@@ -1080,8 +1149,29 @@ static bool check_positive(struct rtw_dev *rtwdev, struct rtw_phy_cond cond)
 	if (cond.intf && cond.intf != drv_cond.intf)
 		return false;
 
-	if (cond.rfe != drv_cond.rfe)
-		return false;
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8812A ||
+	    rtwdev->chip->id == RTW_CHIP_TYPE_8821A) {
+		if (!(cond.rfe & 0x0f))
+			return true;
+
+		if ((cond.rfe & drv_cond.rfe) != cond.rfe)
+			return false;
+
+		if ((cond.rfe & BIT(0)) && cond2.type_glna != drv_cond2.type_glna)
+			return false;
+
+		if ((cond.rfe & BIT(1)) && cond2.type_gpa != drv_cond2.type_gpa)
+			return false;
+
+		if ((cond.rfe & BIT(2)) && cond2.type_alna != drv_cond2.type_alna)
+			return false;
+
+		if ((cond.rfe & BIT(3)) && cond2.type_apa != drv_cond2.type_apa)
+			return false;
+	} else {
+		if (cond.rfe != drv_cond.rfe)
+			return false;
+	}
 
 	return true;
 }
@@ -1090,7 +1180,8 @@ void rtw_parse_tbl_phy_cond(struct rtw_dev *rtwdev, const struct rtw_table *tbl)
 {
 	const union phy_table_tile *p = tbl->data;
 	const union phy_table_tile *end = p + tbl->size / 2;
-	struct rtw_phy_cond pos_cond = {0};
+	struct rtw_phy_cond pos_cond = {};
+	struct rtw_phy_cond2 pos_cond2 = {};
 	bool is_matched = true, is_skipped = false;
 
 	BUILD_BUG_ON(sizeof(union phy_table_tile) != sizeof(struct phy_cfg_pair));
@@ -1109,11 +1200,12 @@ void rtw_parse_tbl_phy_cond(struct rtw_dev *rtwdev, const struct rtw_table *tbl)
 			case BRANCH_ELIF:
 			default:
 				pos_cond = p->cond;
+				pos_cond2 = p->cond2;
 				break;
 			}
 		} else if (p->cond.neg) {
 			if (!is_skipped) {
-				if (check_positive(rtwdev, pos_cond)) {
+				if (check_positive(rtwdev, pos_cond, pos_cond2)) {
 					is_matched = true;
 					is_skipped = true;
 				} else {
@@ -1470,10 +1562,8 @@ static void rtw_phy_store_tx_power_by_rate(struct rtw_dev *rtwdev,
 		rate = rates[i];
 		if (band == PHY_BAND_2G)
 			hal->tx_pwr_by_rate_offset_2g[rfpath][rate] = offset;
-		else if (band == PHY_BAND_5G)
-			hal->tx_pwr_by_rate_offset_5g[rfpath][rate] = offset;
 		else
-			continue;
+			hal->tx_pwr_by_rate_offset_5g[rfpath][rate] = offset;
 	}
 }
 
@@ -1539,7 +1629,7 @@ static void rtw_phy_set_tx_power_limit(struct rtw_dev *rtwdev, u8 regd, u8 band,
 	ch_idx = rtw_channel_to_idx(band, ch);
 
 	if (regd >= RTW_REGD_MAX || bw >= RTW_CHANNEL_WIDTH_MAX ||
-	    rs >= RTW_RATE_SECTION_MAX || ch_idx < 0) {
+	    rs >= RTW_RATE_SECTION_NUM || ch_idx < 0) {
 		WARN(1,
 		     "wrong txpwr_lmt regd=%u, band=%u bw=%u, rs=%u, ch_idx=%u, pwr_limit=%d\n",
 		     regd, band, bw, rs, ch_idx, pwr_limit);
@@ -1583,11 +1673,15 @@ rtw_xref_5g_txpwr_lmt(struct rtw_dev *rtwdev, u8 regd,
 static void
 rtw_xref_txpwr_lmt_by_rs(struct rtw_dev *rtwdev, u8 regd, u8 bw, u8 ch_idx)
 {
+	static const u8 rs_cmp[4][2] = {
+		{RTW_RATE_SECTION_HT_1S, RTW_RATE_SECTION_VHT_1S},
+		{RTW_RATE_SECTION_HT_2S, RTW_RATE_SECTION_VHT_2S},
+		{RTW_RATE_SECTION_HT_3S, RTW_RATE_SECTION_VHT_3S},
+		{RTW_RATE_SECTION_HT_4S, RTW_RATE_SECTION_VHT_4S}
+	};
 	u8 rs_idx, rs_ht, rs_vht;
-	u8 rs_cmp[2][2] = {{RTW_RATE_SECTION_HT_1S, RTW_RATE_SECTION_VHT_1S},
-			   {RTW_RATE_SECTION_HT_2S, RTW_RATE_SECTION_VHT_2S} };
 
-	for (rs_idx = 0; rs_idx < 2; rs_idx++) {
+	for (rs_idx = 0; rs_idx < 4; rs_idx++) {
 		rs_ht = rs_cmp[rs_idx][0];
 		rs_vht = rs_cmp[rs_idx][1];
 
@@ -1644,7 +1738,7 @@ rtw_cfg_txpwr_lmt_by_alt(struct rtw_dev *rtwdev, u8 regd, u8 regd_alt)
 	u8 bw, rs;
 
 	for (bw = 0; bw < RTW_CHANNEL_WIDTH_MAX; bw++)
-		for (rs = 0; rs < RTW_RATE_SECTION_MAX; rs++)
+		for (rs = 0; rs < RTW_RATE_SECTION_NUM; rs++)
 			__cfg_txpwr_lmt_by_alt(&rtwdev->hal, regd, regd_alt,
 					       bw, rs);
 }
@@ -1763,6 +1857,7 @@ void rtw_phy_load_tables(struct rtw_dev *rtwdev)
 {
 	const struct rtw_rfe_def *rfe_def = rtw_get_rfe_def(rtwdev);
 	const struct rtw_chip_info *chip = rtwdev->chip;
+	const struct rtw_efuse *efuse = &rtwdev->efuse;
 	u8 rf_path;
 
 	rtw_load_table(rtwdev, chip->mac_tbl);
@@ -1771,6 +1866,14 @@ void rtw_phy_load_tables(struct rtw_dev *rtwdev)
 	if (rfe_def->agc_btg_tbl)
 		rtw_load_table(rtwdev, rfe_def->agc_btg_tbl);
 	rtw_load_rfk_table(rtwdev);
+	if (chip->id == RTW_CHIP_TYPE_8821C) {
+		if (efuse->rfe_option_full <= 0x2f && efuse->rfe_option_full >= 0x28)
+			rtw_write32(rtwdev, REG_RFE_CTRL8, 0x00000073);
+		else if (efuse->rfe_option_full == 4)
+			rtw_write32(rtwdev, REG_RFE_CTRL8, 0x20000077);
+		else
+			rtw_write32(rtwdev, REG_RFE_CTRL8, 0x10000077);
+	}
 
 	for (rf_path = 0; rf_path < rtwdev->hal.rf_path_num; rf_path++) {
 		const struct rtw_table *tbl;
@@ -1908,10 +2011,10 @@ static u8 rtw_phy_get_2g_tx_power_index(struct rtw_dev *rtwdev,
 					u8 rate, u8 group)
 {
 	const struct rtw_chip_info *chip = rtwdev->chip;
-	u8 tx_power;
-	bool mcs_rate;
-	bool above_2ss;
+	bool above_2ss, above_3ss, above_4ss;
 	u8 factor = chip->txgi_factor;
+	bool mcs_rate;
+	u8 tx_power;
 
 	if (rate <= DESC_RATE11M)
 		tx_power = pwr_idx_2g->cck_base[group];
@@ -1921,11 +2024,15 @@ static u8 rtw_phy_get_2g_tx_power_index(struct rtw_dev *rtwdev,
 	if (rate >= DESC_RATE6M && rate <= DESC_RATE54M)
 		tx_power += pwr_idx_2g->ht_1s_diff.ofdm * factor;
 
-	mcs_rate = (rate >= DESC_RATEMCS0 && rate <= DESC_RATEMCS15) ||
+	mcs_rate = (rate >= DESC_RATEMCS0 && rate <= DESC_RATEMCS31) ||
 		   (rate >= DESC_RATEVHT1SS_MCS0 &&
-		    rate <= DESC_RATEVHT2SS_MCS9);
-	above_2ss = (rate >= DESC_RATEMCS8 && rate <= DESC_RATEMCS15) ||
+		    rate <= DESC_RATEVHT4SS_MCS9);
+	above_2ss = (rate >= DESC_RATEMCS8 && rate <= DESC_RATEMCS31) ||
 		    (rate >= DESC_RATEVHT2SS_MCS0);
+	above_3ss = (rate >= DESC_RATEMCS16 && rate <= DESC_RATEMCS31) ||
+		    (rate >= DESC_RATEVHT3SS_MCS0);
+	above_4ss = (rate >= DESC_RATEMCS24 && rate <= DESC_RATEMCS31) ||
+		    (rate >= DESC_RATEVHT4SS_MCS0);
 
 	if (!mcs_rate)
 		return tx_power;
@@ -1938,11 +2045,19 @@ static u8 rtw_phy_get_2g_tx_power_index(struct rtw_dev *rtwdev,
 		tx_power += pwr_idx_2g->ht_1s_diff.bw20 * factor;
 		if (above_2ss)
 			tx_power += pwr_idx_2g->ht_2s_diff.bw20 * factor;
+		if (above_3ss)
+			tx_power += pwr_idx_2g->ht_3s_diff.bw20 * factor;
+		if (above_4ss)
+			tx_power += pwr_idx_2g->ht_4s_diff.bw20 * factor;
 		break;
 	case RTW_CHANNEL_WIDTH_40:
 		/* bw40 is the base power */
 		if (above_2ss)
 			tx_power += pwr_idx_2g->ht_2s_diff.bw40 * factor;
+		if (above_3ss)
+			tx_power += pwr_idx_2g->ht_3s_diff.bw40 * factor;
+		if (above_4ss)
+			tx_power += pwr_idx_2g->ht_4s_diff.bw40 * factor;
 		break;
 	}
 
@@ -1955,19 +2070,23 @@ static u8 rtw_phy_get_5g_tx_power_index(struct rtw_dev *rtwdev,
 					u8 rate, u8 group)
 {
 	const struct rtw_chip_info *chip = rtwdev->chip;
-	u8 tx_power;
+	bool above_2ss, above_3ss, above_4ss;
+	u8 factor = chip->txgi_factor;
 	u8 upper, lower;
 	bool mcs_rate;
-	bool above_2ss;
-	u8 factor = chip->txgi_factor;
+	u8 tx_power;
 
 	tx_power = pwr_idx_5g->bw40_base[group];
 
-	mcs_rate = (rate >= DESC_RATEMCS0 && rate <= DESC_RATEMCS15) ||
+	mcs_rate = (rate >= DESC_RATEMCS0 && rate <= DESC_RATEMCS31) ||
 		   (rate >= DESC_RATEVHT1SS_MCS0 &&
-		    rate <= DESC_RATEVHT2SS_MCS9);
-	above_2ss = (rate >= DESC_RATEMCS8 && rate <= DESC_RATEMCS15) ||
+		    rate <= DESC_RATEVHT4SS_MCS9);
+	above_2ss = (rate >= DESC_RATEMCS8 && rate <= DESC_RATEMCS31) ||
 		    (rate >= DESC_RATEVHT2SS_MCS0);
+	above_3ss = (rate >= DESC_RATEMCS16 && rate <= DESC_RATEMCS31) ||
+		    (rate >= DESC_RATEVHT3SS_MCS0);
+	above_4ss = (rate >= DESC_RATEMCS24 && rate <= DESC_RATEMCS31) ||
+		    (rate >= DESC_RATEVHT4SS_MCS0);
 
 	if (!mcs_rate) {
 		tx_power += pwr_idx_5g->ht_1s_diff.ofdm * factor;
@@ -1982,11 +2101,19 @@ static u8 rtw_phy_get_5g_tx_power_index(struct rtw_dev *rtwdev,
 		tx_power += pwr_idx_5g->ht_1s_diff.bw20 * factor;
 		if (above_2ss)
 			tx_power += pwr_idx_5g->ht_2s_diff.bw20 * factor;
+		if (above_3ss)
+			tx_power += pwr_idx_5g->ht_3s_diff.bw20 * factor;
+		if (above_4ss)
+			tx_power += pwr_idx_5g->ht_4s_diff.bw20 * factor;
 		break;
 	case RTW_CHANNEL_WIDTH_40:
 		/* bw40 is the base power */
 		if (above_2ss)
 			tx_power += pwr_idx_5g->ht_2s_diff.bw40 * factor;
+		if (above_3ss)
+			tx_power += pwr_idx_5g->ht_3s_diff.bw40 * factor;
+		if (above_4ss)
+			tx_power += pwr_idx_5g->ht_4s_diff.bw40 * factor;
 		break;
 	case RTW_CHANNEL_WIDTH_80:
 		/* the base idx of bw80 is the average of bw40+/bw40- */
@@ -1997,13 +2124,17 @@ static u8 rtw_phy_get_5g_tx_power_index(struct rtw_dev *rtwdev,
 		tx_power += pwr_idx_5g->vht_1s_diff.bw80 * factor;
 		if (above_2ss)
 			tx_power += pwr_idx_5g->vht_2s_diff.bw80 * factor;
+		if (above_3ss)
+			tx_power += pwr_idx_5g->vht_3s_diff.bw80 * factor;
+		if (above_4ss)
+			tx_power += pwr_idx_5g->vht_4s_diff.bw80 * factor;
 		break;
 	}
 
 	return tx_power;
 }
 
-/* return RTW_RATE_SECTION_MAX to indicate rate is invalid */
+/* return RTW_RATE_SECTION_NUM to indicate rate is invalid */
 static u8 rtw_phy_rate_to_rate_section(u8 rate)
 {
 	if (rate >= DESC_RATE1M && rate <= DESC_RATE11M)
@@ -2014,12 +2145,20 @@ static u8 rtw_phy_rate_to_rate_section(u8 rate)
 		return RTW_RATE_SECTION_HT_1S;
 	else if (rate >= DESC_RATEMCS8 && rate <= DESC_RATEMCS15)
 		return RTW_RATE_SECTION_HT_2S;
+	else if (rate >= DESC_RATEMCS16 && rate <= DESC_RATEMCS23)
+		return RTW_RATE_SECTION_HT_3S;
+	else if (rate >= DESC_RATEMCS24 && rate <= DESC_RATEMCS31)
+		return RTW_RATE_SECTION_HT_4S;
 	else if (rate >= DESC_RATEVHT1SS_MCS0 && rate <= DESC_RATEVHT1SS_MCS9)
 		return RTW_RATE_SECTION_VHT_1S;
 	else if (rate >= DESC_RATEVHT2SS_MCS0 && rate <= DESC_RATEVHT2SS_MCS9)
 		return RTW_RATE_SECTION_VHT_2S;
+	else if (rate >= DESC_RATEVHT3SS_MCS0 && rate <= DESC_RATEVHT3SS_MCS9)
+		return RTW_RATE_SECTION_VHT_3S;
+	else if (rate >= DESC_RATEVHT4SS_MCS0 && rate <= DESC_RATEVHT4SS_MCS9)
+		return RTW_RATE_SECTION_VHT_4S;
 	else
-		return RTW_RATE_SECTION_MAX;
+		return RTW_RATE_SECTION_NUM;
 }
 
 static s8 rtw_phy_get_tx_power_limit(struct rtw_dev *rtwdev, u8 band,
@@ -2037,7 +2176,7 @@ static s8 rtw_phy_get_tx_power_limit(struct rtw_dev *rtwdev, u8 band,
 	if (regd > RTW_REGD_WW)
 		return power_limit;
 
-	if (rs == RTW_RATE_SECTION_MAX)
+	if (rs == RTW_RATE_SECTION_NUM)
 		goto err;
 
 	/* only 20M BW with cck and ofdm */
@@ -2045,7 +2184,7 @@ static s8 rtw_phy_get_tx_power_limit(struct rtw_dev *rtwdev, u8 band,
 		bw = RTW_CHANNEL_WIDTH_20;
 
 	/* only 20/40M BW with ht */
-	if (rs == RTW_RATE_SECTION_HT_1S || rs == RTW_RATE_SECTION_HT_2S)
+	if (rate >= DESC_RATEMCS0 && rate <= DESC_RATEMCS31)
 		bw = min_t(u8, bw, RTW_CHANNEL_WIDTH_40);
 
 	/* select min power limit among [20M BW ~ current BW] */
@@ -2071,6 +2210,7 @@ static s8 rtw_phy_get_tx_power_limit(struct rtw_dev *rtwdev, u8 band,
 	return (s8)rtwdev->chip->max_power_index;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 static s8 rtw_phy_get_tx_power_sar(struct rtw_dev *rtwdev, u8 sar_band,
 				   u8 rf_path, u8 rate)
 {
@@ -2081,7 +2221,7 @@ static s8 rtw_phy_get_tx_power_sar(struct rtw_dev *rtwdev, u8 sar_band,
 		.rs = rs,
 	};
 
-	if (rs == RTW_RATE_SECTION_MAX)
+	if (rs == RTW_RATE_SECTION_NUM)
 		goto err;
 
 	return rtw_query_sar(rtwdev, &arg);
@@ -2091,6 +2231,7 @@ static s8 rtw_phy_get_tx_power_sar(struct rtw_dev *rtwdev, u8 sar_band,
 	     sar_band, rf_path, rate);
 	return (s8)rtwdev->chip->max_power_index;
 }
+#endif
 
 void rtw_get_tx_power_params(struct rtw_dev *rtwdev, u8 path, u8 rate, u8 bw,
 			     u8 ch, u8 regd, struct rtw_power_params *pwr_param)
@@ -2103,7 +2244,9 @@ void rtw_get_tx_power_params(struct rtw_dev *rtwdev, u8 path, u8 rate, u8 bw,
 	s8 *offset = &pwr_param->pwr_offset;
 	s8 *limit = &pwr_param->pwr_limit;
 	s8 *remnant = &pwr_param->pwr_remnant;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 	s8 *sar = &pwr_param->pwr_sar;
+#endif
 
 	pwr_idx = &rtwdev->efuse.txpwr_idx_table[path];
 	group = rtw_get_channel_group(ch, rate);
@@ -2125,9 +2268,11 @@ void rtw_get_tx_power_params(struct rtw_dev *rtwdev, u8 path, u8 rate, u8 bw,
 
 	*limit = rtw_phy_get_tx_power_limit(rtwdev, band, bw, path,
 					    rate, ch, regd);
-	*remnant = (rate <= DESC_RATE11M ? dm_info->txagc_remnant_cck :
-		    dm_info->txagc_remnant_ofdm);
+	*remnant = rate <= DESC_RATE11M ? dm_info->txagc_remnant_cck :
+					  dm_info->txagc_remnant_ofdm[path];
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 	*sar = rtw_phy_get_tx_power_sar(rtwdev, hal->sar_band, path, rate);
+#endif
 }
 
 u8
@@ -2163,14 +2308,14 @@ static void rtw_phy_set_tx_power_index_by_rs(struct rtw_dev *rtwdev,
 {
 	struct rtw_hal *hal = &rtwdev->hal;
 	u8 regd = rtw_regd_get(rtwdev);
-	u8 *rates;
+	const u8 *rates;
 	u8 size;
 	u8 rate;
 	u8 pwr_idx;
 	u8 bw;
 	int i;
 
-	if (rs >= RTW_RATE_SECTION_MAX)
+	if (rs >= RTW_RATE_SECTION_NUM)
 		return;
 
 	rates = rtw_rate_section[rs];
@@ -2201,7 +2346,7 @@ static void rtw_phy_set_tx_power_level_by_path(struct rtw_dev *rtwdev,
 	else
 		rs = RTW_RATE_SECTION_OFDM;
 
-	for (; rs < RTW_RATE_SECTION_MAX; rs++)
+	for (; rs < RTW_RATE_SECTION_NUM; rs++)
 		rtw_phy_set_tx_power_index_by_rs(rtwdev, ch, path, rs);
 }
 
@@ -2223,13 +2368,13 @@ EXPORT_SYMBOL(rtw_phy_set_tx_power_level);
 
 static void
 rtw_phy_tx_power_by_rate_config_by_path(struct rtw_hal *hal, u8 path,
-					u8 rs, u8 size, u8 *rates)
+					u8 rs, u8 size, const u8 *rates)
 {
 	u8 rate;
 	u8 base_idx, rate_idx;
 	s8 base_2g, base_5g;
 
-	if (rs >= RTW_RATE_SECTION_VHT_1S)
+	if (size == 10) /* VHT rates */
 		base_idx = rates[size - 3];
 	else
 		base_idx = rates[size - 1];
@@ -2246,28 +2391,12 @@ rtw_phy_tx_power_by_rate_config_by_path(struct rtw_hal *hal, u8 path,
 
 void rtw_phy_tx_power_by_rate_config(struct rtw_hal *hal)
 {
-	u8 path;
+	u8 path, rs;
 
-	for (path = 0; path < RTW_RF_PATH_MAX; path++) {
-		rtw_phy_tx_power_by_rate_config_by_path(hal, path,
-				RTW_RATE_SECTION_CCK,
-				rtw_cck_size, rtw_cck_rates);
-		rtw_phy_tx_power_by_rate_config_by_path(hal, path,
-				RTW_RATE_SECTION_OFDM,
-				rtw_ofdm_size, rtw_ofdm_rates);
-		rtw_phy_tx_power_by_rate_config_by_path(hal, path,
-				RTW_RATE_SECTION_HT_1S,
-				rtw_ht_1s_size, rtw_ht_1s_rates);
-		rtw_phy_tx_power_by_rate_config_by_path(hal, path,
-				RTW_RATE_SECTION_HT_2S,
-				rtw_ht_2s_size, rtw_ht_2s_rates);
-		rtw_phy_tx_power_by_rate_config_by_path(hal, path,
-				RTW_RATE_SECTION_VHT_1S,
-				rtw_vht_1s_size, rtw_vht_1s_rates);
-		rtw_phy_tx_power_by_rate_config_by_path(hal, path,
-				RTW_RATE_SECTION_VHT_2S,
-				rtw_vht_2s_size, rtw_vht_2s_rates);
-	}
+	for (path = 0; path < RTW_RF_PATH_MAX; path++)
+		for (rs = 0; rs < RTW_RATE_SECTION_NUM; rs++)
+			rtw_phy_tx_power_by_rate_config_by_path(hal, path, rs,
+				rtw_rate_size[rs], rtw_rate_section[rs]);
 }
 
 static void
@@ -2296,7 +2425,7 @@ void rtw_phy_tx_power_limit_config(struct rtw_hal *hal)
 
 	for (regd = 0; regd < RTW_REGD_MAX; regd++)
 		for (bw = 0; bw < RTW_CHANNEL_WIDTH_MAX; bw++)
-			for (rs = 0; rs < RTW_RATE_SECTION_MAX; rs++)
+			for (rs = 0; rs < RTW_RATE_SECTION_NUM; rs++)
 				__rtw_phy_tx_power_limit_config(hal, regd, bw, rs);
 }
 
@@ -2332,7 +2461,7 @@ void rtw_phy_init_tx_power(struct rtw_dev *rtwdev)
 	/* init tx power limit */
 	for (regd = 0; regd < RTW_REGD_MAX; regd++)
 		for (bw = 0; bw < RTW_CHANNEL_WIDTH_MAX; bw++)
-			for (rs = 0; rs < RTW_RATE_SECTION_MAX; rs++)
+			for (rs = 0; rs < RTW_RATE_SECTION_NUM; rs++)
 				rtw_phy_init_tx_power_limit(rtwdev, regd, bw,
 							    rs);
 }
@@ -2340,7 +2469,8 @@ void rtw_phy_init_tx_power(struct rtw_dev *rtwdev)
 void rtw_phy_config_swing_table(struct rtw_dev *rtwdev,
 				struct rtw_swing_table *swing_table)
 {
-	const struct rtw_pwr_track_tbl *tbl = rtwdev->chip->pwr_track_tbl;
+	const struct rtw_rfe_def *rfe_def = rtw_get_rfe_def(rtwdev);
+	const struct rtw_pwr_track_tbl *tbl = rfe_def->pwr_track_tbl;
 	u8 channel = rtwdev->hal.current_channel;
 
 	if (IS_CH_2G_BAND(channel)) {
@@ -2349,32 +2479,56 @@ void rtw_phy_config_swing_table(struct rtw_dev *rtwdev,
 			swing_table->n[RF_PATH_A] = tbl->pwrtrk_2g_ccka_n;
 			swing_table->p[RF_PATH_B] = tbl->pwrtrk_2g_cckb_p;
 			swing_table->n[RF_PATH_B] = tbl->pwrtrk_2g_cckb_n;
+			swing_table->p[RF_PATH_C] = tbl->pwrtrk_2g_cckc_p;
+			swing_table->n[RF_PATH_C] = tbl->pwrtrk_2g_cckc_n;
+			swing_table->p[RF_PATH_D] = tbl->pwrtrk_2g_cckd_p;
+			swing_table->n[RF_PATH_D] = tbl->pwrtrk_2g_cckd_n;
 		} else {
 			swing_table->p[RF_PATH_A] = tbl->pwrtrk_2ga_p;
 			swing_table->n[RF_PATH_A] = tbl->pwrtrk_2ga_n;
 			swing_table->p[RF_PATH_B] = tbl->pwrtrk_2gb_p;
 			swing_table->n[RF_PATH_B] = tbl->pwrtrk_2gb_n;
+			swing_table->p[RF_PATH_C] = tbl->pwrtrk_2gc_p;
+			swing_table->n[RF_PATH_C] = tbl->pwrtrk_2gc_n;
+			swing_table->p[RF_PATH_D] = tbl->pwrtrk_2gd_p;
+			swing_table->n[RF_PATH_D] = tbl->pwrtrk_2gd_n;
 		}
 	} else if (IS_CH_5G_BAND_1(channel) || IS_CH_5G_BAND_2(channel)) {
 		swing_table->p[RF_PATH_A] = tbl->pwrtrk_5ga_p[RTW_PWR_TRK_5G_1];
 		swing_table->n[RF_PATH_A] = tbl->pwrtrk_5ga_n[RTW_PWR_TRK_5G_1];
 		swing_table->p[RF_PATH_B] = tbl->pwrtrk_5gb_p[RTW_PWR_TRK_5G_1];
 		swing_table->n[RF_PATH_B] = tbl->pwrtrk_5gb_n[RTW_PWR_TRK_5G_1];
+		swing_table->p[RF_PATH_C] = tbl->pwrtrk_5gc_p[RTW_PWR_TRK_5G_1];
+		swing_table->n[RF_PATH_C] = tbl->pwrtrk_5gc_n[RTW_PWR_TRK_5G_1];
+		swing_table->p[RF_PATH_D] = tbl->pwrtrk_5gd_p[RTW_PWR_TRK_5G_1];
+		swing_table->n[RF_PATH_D] = tbl->pwrtrk_5gd_n[RTW_PWR_TRK_5G_1];
 	} else if (IS_CH_5G_BAND_3(channel)) {
 		swing_table->p[RF_PATH_A] = tbl->pwrtrk_5ga_p[RTW_PWR_TRK_5G_2];
 		swing_table->n[RF_PATH_A] = tbl->pwrtrk_5ga_n[RTW_PWR_TRK_5G_2];
 		swing_table->p[RF_PATH_B] = tbl->pwrtrk_5gb_p[RTW_PWR_TRK_5G_2];
 		swing_table->n[RF_PATH_B] = tbl->pwrtrk_5gb_n[RTW_PWR_TRK_5G_2];
+		swing_table->p[RF_PATH_C] = tbl->pwrtrk_5gc_p[RTW_PWR_TRK_5G_2];
+		swing_table->n[RF_PATH_C] = tbl->pwrtrk_5gc_n[RTW_PWR_TRK_5G_2];
+		swing_table->p[RF_PATH_D] = tbl->pwrtrk_5gd_p[RTW_PWR_TRK_5G_2];
+		swing_table->n[RF_PATH_D] = tbl->pwrtrk_5gd_n[RTW_PWR_TRK_5G_2];
 	} else if (IS_CH_5G_BAND_4(channel)) {
 		swing_table->p[RF_PATH_A] = tbl->pwrtrk_5ga_p[RTW_PWR_TRK_5G_3];
 		swing_table->n[RF_PATH_A] = tbl->pwrtrk_5ga_n[RTW_PWR_TRK_5G_3];
 		swing_table->p[RF_PATH_B] = tbl->pwrtrk_5gb_p[RTW_PWR_TRK_5G_3];
 		swing_table->n[RF_PATH_B] = tbl->pwrtrk_5gb_n[RTW_PWR_TRK_5G_3];
+		swing_table->p[RF_PATH_C] = tbl->pwrtrk_5gc_p[RTW_PWR_TRK_5G_3];
+		swing_table->n[RF_PATH_C] = tbl->pwrtrk_5gc_n[RTW_PWR_TRK_5G_3];
+		swing_table->p[RF_PATH_D] = tbl->pwrtrk_5gd_p[RTW_PWR_TRK_5G_3];
+		swing_table->n[RF_PATH_D] = tbl->pwrtrk_5gd_n[RTW_PWR_TRK_5G_3];
 	} else {
 		swing_table->p[RF_PATH_A] = tbl->pwrtrk_2ga_p;
 		swing_table->n[RF_PATH_A] = tbl->pwrtrk_2ga_n;
 		swing_table->p[RF_PATH_B] = tbl->pwrtrk_2gb_p;
 		swing_table->n[RF_PATH_B] = tbl->pwrtrk_2gb_n;
+		swing_table->p[RF_PATH_C] = tbl->pwrtrk_2gc_p;
+		swing_table->n[RF_PATH_C] = tbl->pwrtrk_2gc_n;
+		swing_table->p[RF_PATH_D] = tbl->pwrtrk_2gd_p;
+		swing_table->n[RF_PATH_D] = tbl->pwrtrk_2gd_n;
 	}
 }
 EXPORT_SYMBOL(rtw_phy_config_swing_table);
diff --git a/drivers/net/wireless/realtek/rtw88/phy.h b/drivers/net/wireless/realtek/rtw88/phy.h
index ccfcbd3ced03..c9e6b869661d 100644
--- a/drivers/net/wireless/realtek/rtw88/phy.h
+++ b/drivers/net/wireless/realtek/rtw88/phy.h
@@ -7,14 +7,18 @@
 
 #include "debug.h"
 
-extern u8 rtw_cck_rates[];
-extern u8 rtw_ofdm_rates[];
-extern u8 rtw_ht_1s_rates[];
-extern u8 rtw_ht_2s_rates[];
-extern u8 rtw_vht_1s_rates[];
-extern u8 rtw_vht_2s_rates[];
-extern u8 *rtw_rate_section[];
-extern u8 rtw_rate_size[];
+extern const u8 rtw_cck_rates[];
+extern const u8 rtw_ofdm_rates[];
+extern const u8 rtw_ht_1s_rates[];
+extern const u8 rtw_ht_2s_rates[];
+extern const u8 rtw_vht_1s_rates[];
+extern const u8 rtw_vht_2s_rates[];
+extern const u8 rtw_ht_3s_rates[];
+extern const u8 rtw_ht_4s_rates[];
+extern const u8 rtw_vht_3s_rates[];
+extern const u8 rtw_vht_4s_rates[];
+extern const u8 * const rtw_rate_section[];
+extern const u8 rtw_rate_size[];
 
 void rtw_phy_init(struct rtw_dev *rtwdev);
 void rtw_phy_dynamic_mechanism(struct rtw_dev *rtwdev);
diff --git a/drivers/net/wireless/realtek/rtw88/ps.c b/drivers/net/wireless/realtek/rtw88/ps.c
index add5a20b8432..c6360cfbbaf0 100644
--- a/drivers/net/wireless/realtek/rtw88/ps.c
+++ b/drivers/net/wireless/realtek/rtw88/ps.c
@@ -164,7 +164,7 @@ static void rtw_fw_leave_lps_check(struct rtw_dev *rtwdev)
 
 	if (ret) {
 		rtw_write32_clr(rtwdev, REG_TCR, BIT_PWRMGT_HWDATA_EN);
-		rtw_warn(rtwdev, "firmware failed to leave lps state\n");
+		rtw_warn_once(rtwdev, "firmware failed to leave lps state\n");
 		rtw_fw_dump_dbg_info(rtwdev);
 	}
 }
@@ -334,10 +334,12 @@ void rtw_recalc_lps(struct rtw_dev *rtwdev, struct ieee80211_vif *new_vif)
 		__rtw_vif_recalc_lps(&data, new_vif);
 	rtw_iterate_vifs(rtwdev, rtw_vif_recalc_lps_iter, &data);
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 0, 0))
 	if (data.count == 1 && data.found_vif->cfg.ps) {
 		rtwdev->ps_enabled = true;
 	} else {
 		rtwdev->ps_enabled = false;
 		rtw_leave_lps(rtwdev);
 	}
+#endif
 }
diff --git a/drivers/net/wireless/realtek/rtw88/reg.h b/drivers/net/wireless/realtek/rtw88/reg.h
index 4d9b8668e8b0..08e9494977e0 100644
--- a/drivers/net/wireless/realtek/rtw88/reg.h
+++ b/drivers/net/wireless/realtek/rtw88/reg.h
@@ -8,7 +8,9 @@
 #define REG_SYS_FUNC_EN		0x0002
 #define BIT_FEN_EN_25_1		BIT(13)
 #define BIT_FEN_ELDR		BIT(12)
+#define BIT_FEN_PCIEA		BIT(6)
 #define BIT_FEN_CPUEN		BIT(2)
+#define BIT_FEN_USBA		BIT(2)
 #define BIT_FEN_BB_GLB_RST	BIT(1)
 #define BIT_FEN_BB_RSTB		BIT(0)
 #define BIT_R_DIS_PRST		BIT(6)
@@ -16,6 +18,10 @@
 #define REG_SYS_PW_CTRL		0x0004
 #define BIT_PFM_WOWL		BIT(3)
 #define BIT_APFM_OFFMAC		BIT(9)
+#define REG_APS_FSMCO		0x0004
+#define APS_FSMCO_MAC_ENABLE	BIT(8)
+#define APS_FSMCO_MAC_OFF	BIT(9)
+#define APS_FSMCO_HW_POWERDOWN	BIT(15)
 #define REG_SYS_CLK_CTRL	0x0008
 #define BIT_CPU_CLK_EN		BIT(14)
 
@@ -34,6 +40,9 @@
 #define BIT_RF_RSTB		BIT(1)
 #define BIT_RF_EN		BIT(0)
 
+#define REG_RF_CTRL1		0x0020
+#define REG_RF_CTRL2		0x0021
+
 #define REG_AFE_CTRL1		0x0024
 #define BIT_MAC_CLK_SEL		(BIT(20) | BIT(21))
 #define REG_EFUSE_CTRL		0x0030
@@ -58,6 +67,8 @@
 #define BIT_SHIFT_LDO25_VOLTAGE	4
 #define BIT_LDO25_EN		BIT(7)
 
+#define REG_ACLK_MON		0x3e
+
 #define REG_GPIO_MUXCFG		0x0040
 #define BIT_FSPI_EN		BIT(19)
 #define BIT_EN_SIC		BIT(12)
@@ -66,12 +77,26 @@
 #define BIT_BT_PTA_EN		BIT(5)
 #define BIT_WLRFE_4_5_EN	BIT(2)
 
+#define REG_GPIO_PIN_CTRL	0x0044
+
 #define REG_LED_CFG		0x004C
 #define BIT_LNAON_SEL_EN	BIT(26)
 #define BIT_PAPE_SEL_EN		BIT(25)
 #define BIT_DPDT_WL_SEL		BIT(24)
 #define BIT_DPDT_SEL_EN		BIT(23)
+#define BIT_GPIO13_14_WL_CTRL_EN	BIT(22)
+#define BIT_LED2_SV		BIT(19)
+#define BIT_LED2_CM		GENMASK(18, 16)
+#define BIT_LED1_SV		BIT(11)
+#define BIT_LED1_CM		GENMASK(10, 8)
+#define BIT_LED0_SV		BIT(3)
+#define BIT_LED0_CM		GENMASK(2, 0)
+#define BIT_LED_MODE_SW_CTRL	0
+#define BIT_LED_MODE_RX		6
+#define BIT_LED_MODE_TX		4
+#define BIT_LED_MODE_TRX	2
 #define REG_LEDCFG2		0x004E
+#define REG_GPIO_PIN_CTRL_2	0x0060
 #define REG_PAD_CTRL1		0x0064
 #define BIT_BT_BTG_SEL		BIT(31)
 #define BIT_PAPE_WLBT_SEL	BIT(29)
@@ -90,6 +115,9 @@
 #define BIT_USB_SUS_DIS		BIT(8)
 #define BIT_SDIO_PAD_E5		BIT(18)
 
+#define REG_RF_B_CTRL		0x76
+#define REG_RF_CTRL3		0x0076
+
 #define REG_AFE_CTRL_4		0x0078
 #define BIT_CK320M_AFE_EN	BIT(4)
 #define BIT_EN_SYN		BIT(15)
@@ -109,6 +137,7 @@
 #define BIT_SHIFT_ROM_PGE	16
 #define BIT_FW_INIT_RDY		BIT(15)
 #define BIT_FW_DW_RDY		BIT(14)
+#define BIT_CPU_CLK_SEL		(BIT(12) | BIT(13))
 #define BIT_RPWM_TOGGLE		BIT(7)
 #define BIT_RAM_DL_SEL		BIT(7)	/* legacy only */
 #define BIT_DMEM_CHKSUM_OK	BIT(6)
@@ -126,7 +155,7 @@
 				 BIT_CHECK_SUM_OK)
 #define FW_READY_LEGACY		(BIT_MCUFWDL_RDY | BIT_FWDL_CHK_RPT |	       \
 				 BIT_WINTINI_RDY | BIT_RAM_DL_SEL)
-#define FW_READY_MASK		0xffff
+#define FW_READY_MASK		(0xffff & ~BIT_CPU_CLK_SEL)
 
 #define REG_MCU_TST_CFG		0x84
 #define VAL_FW_TRIGGER		0x1
@@ -134,6 +163,11 @@
 #define REG_PMC_DBG_CTRL1	0xa8
 #define BITS_PMC_BT_IQK_STS	GENMASK(22, 21)
 
+#define REG_HIMR0		0xb0
+#define REG_HISR0		0xb4
+#define REG_HIMR1		0xb8
+#define REG_HISR1		0xbc
+
 #define REG_PAD_CTRL2		0x00C4
 #define BIT_RSM_EN_V1		BIT(16)
 #define BIT_NO_PDN_CHIPOFF_V1	BIT(17)
@@ -185,6 +219,15 @@
 #define MAC_TRX_ENABLE	(BIT_HCI_TXDMA_EN | BIT_HCI_RXDMA_EN | BIT_TXDMA_EN | \
 			BIT_RXDMA_EN | BIT_PROTOCOL_EN | BIT_SCHEDULE_EN | \
 			BIT_MACTXEN | BIT_MACRXEN)
+#define REG_PBP			0x104
+#define PBP_RX_MASK		0x0f
+#define PBP_TX_MASK		0xf0
+#define PBP_64			0x0
+#define PBP_128			0x1
+#define PBP_256			0x2
+#define PBP_512			0x3
+#define PBP_1024		0x4
+
 #define BIT_SHIFT_TXDMA_VOQ_MAP	4
 #define BIT_MASK_TXDMA_VOQ_MAP	0x3
 #define BIT_TXDMA_VOQ_MAP(x)                                                   \
@@ -256,6 +299,8 @@
 #define REG_HMEBOX1		0x01D4
 #define REG_HMEBOX2		0x01D8
 #define REG_HMEBOX3		0x01DC
+#define REG_LLT_INIT		0x01E0
+#define BIT_LLT_WRITE_ACCESS	BIT(30)
 #define REG_HMEBOX0_EX		0x01F0
 #define REG_HMEBOX1_EX		0x01F4
 #define REG_HMEBOX2_EX		0x01F8
@@ -298,6 +343,7 @@
 
 #define REG_AUTO_LLT		0x0224
 #define BIT_AUTO_INIT_LLT	BIT(16)
+#define REG_DWBCN1_CTRL		0x0228
 #define REG_RQPN_CTRL_1		0x0228
 #define REG_RQPN_CTRL_2		0x022C
 #define BIT_LD_RQPN		BIT(31)
@@ -329,6 +375,7 @@
 #define BIT_DMA_BURST_SIZE_1024	0
 
 #define REG_RXPKTNUM		0x02B0
+#define REG_EARLY_MODE_CONTROL	0x02BC
 
 #define REG_INT_MIG		0x0304
 #define REG_HCI_MIX_CFG		0x03FC
@@ -336,6 +383,7 @@
 
 #define REG_BCNQ_INFO		0x0418
 #define BIT_MGQ_CPU_EMPTY	BIT(24)
+#define REG_TXPKT_EMPTY		0x041A
 #define REG_FWHW_TXQ_CTRL	0x0420
 #define BIT_EN_BCNQ_DL		BIT(22)
 #define BIT_EN_WR_FREE_TAIL	BIT(20)
@@ -362,10 +410,12 @@
 #define REG_AMPDU_MAX_TIME_V1	0x0455
 #define REG_BCNQ1_BDNY_V1	0x0456
 #define REG_AMPDU_MAX_TIME	0x0456
+#define REG_AMPDU_MAX_LENGTH	0x0458
 #define REG_WMAC_LBK_BF_HD	0x045D
 #define REG_TX_HANG_CTRL	0x045E
 #define BIT_EN_GNT_BT_AWAKE	BIT(3)
 #define BIT_EN_EOF_V1		BIT(2)
+#define REG_FAST_EDCA_CTRL	0x0460
 #define REG_DATA_SC		0x0483
 #define REG_ARFR2_V1		0x048C
 #define REG_ARFRH2_V1		0x0490
@@ -390,6 +440,8 @@
 #define REG_PRECNT_CTRL		0x04E5
 #define BIT_BTCCA_CTRL		(BIT(0) | BIT(1))
 #define BIT_EN_PRECNT		BIT(11)
+#define REG_TX_RPT_CTRL		0x04EC
+#define REG_TX_RPT_TIME		0x04F0
 #define REG_DUMMY_PAGE4_V1	0x04FC
 
 #define REG_EDCA_VO_PARAM	0x0500
@@ -400,6 +452,7 @@
 #define BIT_MASK_CWMAX		GENMASK(15, 12)
 #define BIT_MASK_CWMIN		GENMASK(11, 8)
 #define BIT_MASK_AIFS		GENMASK(7, 0)
+#define REG_BCNTCFG		0x0510
 #define REG_PIFS		0x0512
 #define REG_SIFS		0x0514
 #define BIT_SHIFT_SIFS_OFDM_CTX	8
@@ -526,6 +579,8 @@
 #define REG_BT_COEX_V2		0x0762
 #define BIT_GNT_BT_POLARITY	BIT(12)
 #define BIT_LTE_COEX_EN		BIT(7)
+#define REG_GNT_BT		0x0765
+#define BIT_PTA_SW_CTL		GENMASK(4, 3)
 #define REG_BT_COEX_ENH_INTR_CTRL	0x76E
 #define BIT_R_GRANTALL_WLMASK	BIT(3)
 #define BIT_STATIS_BT_EN	BIT(2)
@@ -543,14 +598,61 @@
 #define REG_FPGA0_RFMOD		0x0800
 #define BIT_CCKEN		BIT(24)
 #define BIT_OFDMEN		BIT(25)
+#define REG_CCK_RPT_FORMAT	0x0804
+#define BIT_CCK_RPT_FORMAT	BIT(16)
+#define REG_RXPSEL		0x0808
+#define BIT_RX_PSEL_RST		(BIT(28) | BIT(29))
+#define REG_TXPSEL		0x080C
 #define REG_RX_GAIN_EN		0x081c
-
+#define REG_CCASEL		0x082C
+#define REG_PDMFTH		0x0830
+#define REG_BWINDICATION	0x0834
+#define REG_CCA2ND		0x0838
+#define REG_L1PKTH		0x0848
+#define REG_CLKTRK		0x0860
+#define REG_CSI_MASK_SETTING1	0x0874
+#define REG_NBI_SETTING		0x087c
+#define BIT_NBI_ENABLE		BIT(13)
+#define REG_CSI_FIX_MASK0	0x0880
+#define REG_CSI_FIX_MASK1	0x0884
+#define REG_CSI_FIX_MASK6	0x0898
+#define REG_CSI_FIX_MASK7	0x089c
+#define REG_ADCCLK		0x08AC
+#define REG_HSSI_READ		0x08B0
+#define REG_FPGA0_XCD_RF_PARA	0x08B4
+#define REG_RX_MCS_LIMIT	0x08BC
+#define REG_ADC160		0x08C4
+#define REG_DBGSEL		0x08fc
+#define REG_ANTSEL_SW		0x0900
+#define REG_DAC_RSTB		0x090c
+#define REG_PSD			0x0910
+#define BIT_PSD_INI		GENMASK(23, 22)
+#define REG_SINGLE_TONE_CONT_TX	0x0914
+#define REG_AGC_TABLE		0x0958
 #define REG_RFE_CTRL_E		0x0974
 #define REG_2ND_CCA_CTRL	0x0976
-
-#define REG_CCK0_FAREPORT	0xa2c
+#define REG_IQK_COM00		0x0978
+#define REG_IQK_COM32		0x097c
+#define REG_IQK_COM64		0x0980
+#define REG_IQK_COM96		0x0984
+
+#define REG_FAS			0x09a4
+#define REG_RXSB		0x0a00
+#define BIT_RXSB_ANA_DIV	BIT(15)
+#define REG_CCK_RX		0x0a04
+#define REG_CCK_PD_TH		0x0a0a
+#define REG_PRECTRL		0x0a14
+#define BIT_DIS_CO_PATHSEL	BIT(7)
+#define BIT_IQ_WGT		GENMASK(9, 8)
+#define REG_CCA_MF		0x0a20
+#define BIT_MBC_WIN		GENMASK(5, 4)
+#define REG_CCK0_TX_FILTER1	0x0a20
+#define REG_CCK0_TX_FILTER2	0x0a24
+#define REG_CCK0_DEBUG_PORT	0x0a28
+#define REG_CCK0_FAREPORT	0x0a2c
 #define BIT_CCK0_2RX		BIT(18)
 #define BIT_CCK0_MRC		BIT(22)
+#define REG_FA_CCK		0x0a5c
 
 #define REG_DIS_DPD		0x0a70
 #define DIS_DPD_MASK		GENMASK(9, 0)
@@ -566,13 +668,123 @@
 #define DIS_DPD_RATEVHT2SS_MCS1	BIT(9)
 #define DIS_DPD_RATEALL		GENMASK(9, 0)
 
+#define REG_CCA			0x0a70
+#define BIT_CCA_CO		BIT(7)
+#define REG_ANTSEL		0x0a74
+#define BIT_ANT_BYCO		BIT(8)
+#define REG_CCKTX		0x0a84
+#define BIT_CMB_CCA_2R		BIT(28)
+
+#define REG_CNTRST		0x0b58
+
+#define REG_3WIRE_SWA		0x0c00
+#define REG_RX_IQC_AB_A		0x0c10
+#define REG_RX_IQC_CD_A		0x0c14
+#define REG_TXSCALE_A		0x0c1c
+#define BB_SWING_MASK		GENMASK(31, 21)
+#define REG_TX_AGC_A_CCK_11_CCK_1		0xc20
+#define REG_TX_AGC_A_OFDM18_OFDM6		0xc24
+#define REG_TX_AGC_A_OFDM54_OFDM24		0xc28
+#define REG_TX_AGC_A_MCS3_MCS0			0xc2c
+#define REG_TX_AGC_A_MCS7_MCS4			0xc30
+#define REG_TX_AGC_A_MCS11_MCS8			0xc34
+#define REG_TX_AGC_A_MCS15_MCS12		0xc38
+#define REG_TX_AGC_A_NSS1_INDEX3_NSS1_INDEX0	0xc3c
+#define REG_TX_AGC_A_NSS1_INDEX7_NSS1_INDEX4	0xc40
+#define REG_TX_AGC_A_NSS2_INDEX1_NSS1_INDEX8	0xc44
+#define REG_TX_AGC_A_NSS2_INDEX5_NSS2_INDEX2	0xc48
+#define REG_TX_AGC_A_NSS2_INDEX9_NSS2_INDEX6	0xc4c
+#define REG_RXIGI_A		0x0c50
+#define REG_TX_PWR_TRAINING_A	0x0c54
+#define REG_CK_MONHA		0x0c5c
+#define REG_AFE_PWR1_A		0x0c60
+#define REG_AFE_PWR2_A		0x0c64
+#define REG_RX_WAIT_CCA_TX_CCK_RFON_A	0x0c68
+#define REG_OFDM0_XA_TX_IQ_IMBALANCE	0x0c80
+#define REG_OFDM0_A_TX_AFE	0x0c84
+#define REG_OFDM0_XB_TX_IQ_IMBALANCE	0x0c88
+#define REG_TSSI_TRK_SW		0x0c8c
+#define REG_LSSI_WRITE_A	0x0c90
+#define REG_PREDISTA		0x0c90
+#define REG_TXAGCIDX		0x0c94
+#define REG_TX_AGC_A		0x0c94
+#define REG_RFE_PINMUX_A	0x0cb0
+#define REG_RFE_INV_A		0x0cb4
 #define REG_RFE_CTRL8		0x0cb4
 #define BIT_MASK_RFE_SEL89	GENMASK(7, 0)
+#define PTA_CTRL_PIN		0x66
+#define DPDT_CTRL_PIN		0x77
+#define RFE_INV_MASK		0x3ff00000
+#define REG_RFECTL_A		0x0cb8
+#define REG_RFE_INV0		0x0cbc
 #define REG_RFE_INV8		0x0cbd
 #define BIT_MASK_RFE_INV89	GENMASK(1, 0)
 #define REG_RFE_INV16		0x0cbe
 #define BIT_RFE_BUF_EN		BIT(3)
 
+#define REG_IQK_DPD_CFG		0x0cc4
+#define REG_CFG_PMPD		0x0cc8
+#define REG_IQC_Y		0x0ccc
+#define REG_IQC_X		0x0cd4
+#define REG_INTPO_SETA		0x0ce8
+
+#define REG_IQKA_END		0x0d00
+#define REG_PI_READ_A		0x0d04
+#define REG_SI_READ_A		0x0d08
+#define REG_IQKB_END		0x0d40
+#define REG_PI_READ_B		0x0d44
+#define REG_SI_READ_B		0x0d48
+
+#define REG_3WIRE_SWB		0x0e00
+#define REG_RX_IQC_AB_B		0x0e10
+#define REG_RX_IQC_CD_B		0x0e14
+#define REG_TXSCALE_B		0x0e1c
+#define REG_TX_AGC_B_CCK_11_CCK_1		0xe20
+#define REG_TX_AGC_B_OFDM18_OFDM6		0xe24
+#define REG_TX_AGC_B_OFDM54_OFDM24		0xe28
+#define REG_TX_AGC_B_MCS3_MCS0			0xe2c
+#define REG_TX_AGC_B_MCS7_MCS4			0xe30
+#define REG_TX_AGC_B_MCS11_MCS8			0xe34
+#define REG_TX_AGC_B_MCS15_MCS12		0xe38
+#define REG_TX_AGC_B_NSS1_INDEX3_NSS1_INDEX0	0xe3c
+#define REG_TX_AGC_B_NSS1_INDEX7_NSS1_INDEX4	0xe40
+#define REG_TX_AGC_B_NSS2_INDEX1_NSS1_INDEX8	0xe44
+#define REG_TX_AGC_B_NSS2_INDEX5_NSS2_INDEX2	0xe48
+#define REG_TX_AGC_B_NSS2_INDEX9_NSS2_INDEX6	0xe4c
+#define REG_RXIGI_B		0x0e50
+#define REG_TX_PWR_TRAINING_B	0x0e54
+#define REG_CK_MONHB		0x0e5c
+#define REG_AFE_PWR1_B		0x0e60
+#define REG_AFE_PWR2_B		0x0e64
+#define REG_RX_WAIT_CCA_TX_CCK_RFON_B	0x0e68
+#define REG_TXTONEB		0x0e80
+#define REG_RXTONEB		0x0e84
+#define REG_TXPITMB		0x0e88
+#define REG_RXPITMB		0x0e8c
+#define REG_LSSI_WRITE_B	0x0e90
+#define REG_PREDISTB		0x0e90
+#define REG_INIDLYB		0x0e94
+#define REG_TX_AGC_B		0x0e94
+#define REG_RFE_PINMUX_B	0x0eb0
+#define REG_RFE_INV_B		0x0eb4
+#define REG_RFECTL_B		0x0eb8
+#define REG_BPBDB		0x0ec4
+#define REG_PHYTXONB		0x0ec8
+#define REG_IQKYB		0x0ecc
+#define REG_IQKXB		0x0ed4
+#define REG_INTPO_SETB		0x0ee8
+
+#define REG_CRC_CCK		0x0f04
+#define REG_CCA_OFDM		0x0f08
+#define REG_CRC_VHT		0x0f0c
+#define REG_CRC_HT		0x0f10
+#define REG_CRC_OFDM		0x0f14
+#define REG_FA_OFDM		0x0f48
+#define REG_DBGRPT		0x0fa0
+#define REG_CCA_CCK		0x0fcc
+
+#define REG_SYS_CFG3_8814A	0x1000
+
 #define REG_ANAPARSW_MAC_0	0x1010
 #define BIT_CF_L_V2		GENMASK(29, 28)
 
@@ -690,9 +902,27 @@
 #define LTECOEX_WRITE_DATA REG_WL2LTECOEX_INDIRECT_ACCESS_WRITE_DATA_V1
 #define LTECOEX_READ_DATA REG_WL2LTECOEX_INDIRECT_ACCESS_READ_DATA_V1
 
+#define REG_RX_IQC_AB_C		0x1810
+#define REG_RX_IQC_CD_C		0x1814
+#define REG_TXSCALE_C		0x181c
+#define REG_CK_MONHC		0x185c
+#define REG_AFE_PWR1_C		0x1860
 #define REG_IGN_GNT_BT1	0x1860
+#define REG_TX_AGC_C		0x1894
+#define REG_RFE_PINMUX_C	0x18b4
 
 #define REG_RFESEL_CTRL	0x1990
+#define REG_AGC_TBL		0x1998
+
+#define REG_RX_IQC_AB_D		0x1a10
+#define REG_RX_IQC_CD_D		0x1a14
+#define REG_TXSCALE_D		0x1a1c
+#define REG_CK_MONHD		0x1a5c
+#define REG_AFE_PWR1_D		0x1a60
+#define REG_TX_AGC_D		0x1a94
+#define REG_RFE_PINMUX_D	0x1ab4
+#define REG_RFE_INVSEL_D	0x1abc
+#define BIT_RFE_SELSW0_D	GENMASK(27, 20)
 
 #define REG_NOMASK_TXBT	0x1ca7
 #define REG_ANAPAR	0x1c30
@@ -709,6 +939,20 @@
 
 #define REG_IGN_GNTBT4	0x4160
 
+#define REG_USB_MOD	0xf008
+#define REG_USB3_RXITV	0xf050
+#define REG_USB2_PHY_ADR	0xfe40
+#define REG_USB2_PHY_DAT	0xfe41
+#define REG_USB2_PHY_CMD	0xfe42
+#define BIT_USB2_PHY_CMD_TRG	0x81
+#define REG_USB_HRPWM	0xfe58
+#define REG_USB3_PHY_ADR	0xff0c
+#define REG_USB3_PHY_DAT_L	0xff0d
+#define REG_USB3_PHY_DAT_H	0xff0e
+#define BIT_USB3_PHY_ADR_WR	BIT(7)
+#define BIT_USB3_PHY_ADR_RD	BIT(6)
+#define BIT_USB3_PHY_ADR_MASK	GENMASK(5, 0)
+
 #define RF_MODE		0x00
 #define RF_MODOPT	0x01
 #define RF_WLINT	0x01
@@ -716,7 +960,14 @@
 #define RF_DTXLOK	0x08
 #define RF_CFGCH	0x18
 #define BIT_BAND	GENMASK(18, 16)
+#define RF18_BAND_MASK	(BIT(16) | BIT(9) | BIT(8))
+#define RF18_CHANNEL_MASK	(MASKBYTE0)
+#define RF18_RFSI_MASK	(BIT(18) | BIT(17))
+#define RF_RCK1_V1	0x1c
 #define RF_RCK		0x1d
+#define RF_MODE_TABLE_ADDR	0x30
+#define RF_MODE_TABLE_DATA0	0x31
+#define RF_MODE_TABLE_DATA1	0x32
 #define RF_LUTWA	0x33
 #define RF_LUTWD1	0x3e
 #define RF_LUTWD0	0x3f
@@ -725,10 +976,14 @@
 #define RF_T_METER	0x42
 #define RF_BSPAD	0x54
 #define RF_GAINTX	0x56
+#define RF_TXMOD	0x58
 #define RF_TXATANK	0x64
+#define RF_TXA_PREPAD	0x65
 #define RF_TRXIQ	0x66
 #define RF_RXIQGEN	0x8d
+#define RF_RXBB2	0x8f
 #define RF_SYN_PFD	0xb0
+#define RF_LCK		0xb4
 #define RF_XTALX2	0xb8
 #define RF_SYN_CTRL	0xbb
 #define RF_MALSEL	0xbe
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8703b.c b/drivers/net/wireless/realtek/rtw88/rtw8703b.c
index a977aad9c650..dff5b2fe1b3c 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8703b.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8703b.c
@@ -1,6 +1,7 @@
 // SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
 /* Copyright Fiona Klute <fiona.klute@gmx.de> */
 
+#include <linux/of.h>
 #include <linux/of_net.h>
 #include "main.h"
 #include "coex.h"
@@ -29,9 +30,6 @@
 #define TBTT_PROHIBIT_HOLD_TIME 0x80
 #define TBTT_PROHIBIT_HOLD_TIME_STOP_BCN 0x64
 
-/* raw pkt_stat->drv_info_sz is in unit of 8-bytes */
-#define RX_DRV_INFO_SZ_UNIT_8703B 8
-
 #define TRANS_SEQ_END			\
 	0xFFFF,				\
 	RTW_PWR_CUT_ALL_MSK,		\
@@ -481,14 +479,14 @@ static const struct rtw_pwr_seq_cmd trans_act_to_lps_8703b[] = {
 	{TRANS_SEQ_END},
 };
 
-static const struct rtw_pwr_seq_cmd *card_enable_flow_8703b[] = {
+static const struct rtw_pwr_seq_cmd * const card_enable_flow_8703b[] = {
 	trans_pre_enable_8703b,
 	trans_carddis_to_cardemu_8703b,
 	trans_cardemu_to_act_8703b,
 	NULL
 };
 
-static const struct rtw_pwr_seq_cmd *card_disable_flow_8703b[] = {
+static const struct rtw_pwr_seq_cmd * const card_disable_flow_8703b[] = {
 	trans_act_to_lps_8703b,
 	trans_act_to_reset_mcu_8703b,
 	trans_act_to_cardemu_8703b,
@@ -496,11 +494,6 @@ static const struct rtw_pwr_seq_cmd *card_disable_flow_8703b[] = {
 	NULL
 };
 
-static const struct rtw_rfe_def rtw8703b_rfe_defs[] = {
-	[0] = { .phy_pg_tbl	= &rtw8703b_bb_pg_tbl,
-		.txpwr_lmt_tbl	= &rtw8703b_txpwr_lmt_tbl,},
-};
-
 static const struct rtw_page_table page_table_8703b[] = {
 	{12, 2, 2, 0, 1},
 	{12, 2, 2, 0, 1},
@@ -527,24 +520,25 @@ static const struct rtw_rqpn rqpn_table_8703b[] = {
 	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
 };
 
-/* Default power index table for RTL8703B, used if EFUSE does not
- * contain valid data. Replaces EFUSE data from offset 0x10 (start of
- * txpwr_idx_table).
- */
-static const u8 rtw8703b_txpwr_idx_table[] = {
-	0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
-	0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x02
-};
-
 static void try_mac_from_devicetree(struct rtw_dev *rtwdev)
 {
 	struct device_node *node = rtwdev->dev->of_node;
 	struct rtw_efuse *efuse = &rtwdev->efuse;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 0)
 	int ret;
+#else
+	const void *ret;
+#endif
 
 	if (node) {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 0)
 		ret = of_get_mac_address(node, efuse->addr);
 		if (ret == 0) {
+#else
+		ret = of_get_mac_address(node);
+		if (!IS_ERR(ret)) {
+			ether_addr_copy(efuse->addr, ret);
+#endif
 			rtw_dbg(rtwdev, RTW_DBG_EFUSE,
 				"got wifi mac address from DT: %pM\n",
 				efuse->addr);
@@ -552,15 +546,9 @@ static void try_mac_from_devicetree(struct rtw_dev *rtwdev)
 	}
 }
 
-#define DBG_EFUSE_FIX(rtwdev, name)					\
-	rtw_dbg(rtwdev, RTW_DBG_EFUSE, "Fixed invalid EFUSE value: "	\
-		# name "=0x%x\n", rtwdev->efuse.name)
-
 static int rtw8703b_read_efuse(struct rtw_dev *rtwdev, u8 *log_map)
 {
 	struct rtw_efuse *efuse = &rtwdev->efuse;
-	u8 *pwr = (u8 *)efuse->txpwr_idx_table;
-	bool valid = false;
 	int ret;
 
 	ret = rtw8723x_read_efuse(rtwdev, log_map);
@@ -570,51 +558,6 @@ static int rtw8703b_read_efuse(struct rtw_dev *rtwdev, u8 *log_map)
 	if (!is_valid_ether_addr(efuse->addr))
 		try_mac_from_devicetree(rtwdev);
 
-	/* If TX power index table in EFUSE is invalid, fall back to
-	 * built-in table.
-	 */
-	for (int i = 0; i < ARRAY_SIZE(rtw8703b_txpwr_idx_table); i++)
-		if (pwr[i] != 0xff) {
-			valid = true;
-			break;
-		}
-	if (!valid) {
-		for (int i = 0; i < ARRAY_SIZE(rtw8703b_txpwr_idx_table); i++)
-			pwr[i] = rtw8703b_txpwr_idx_table[i];
-		rtw_dbg(rtwdev, RTW_DBG_EFUSE,
-			"Replaced invalid EFUSE TX power index table.");
-		rtw8723x_debug_txpwr_limit(rtwdev,
-					   efuse->txpwr_idx_table, 2);
-	}
-
-	/* Override invalid antenna settings. */
-	if (efuse->bt_setting == 0xff) {
-		/* shared antenna */
-		efuse->bt_setting |= BIT(0);
-		/* RF path A */
-		efuse->bt_setting &= ~BIT(6);
-		DBG_EFUSE_FIX(rtwdev, bt_setting);
-	}
-
-	/* Override invalid board options: The coex code incorrectly
-	 * assumes that if bits 6 & 7 are set the board doesn't
-	 * support coex. Regd is also derived from rf_board_option and
-	 * should be 0 if there's no valid data.
-	 */
-	if (efuse->rf_board_option == 0xff) {
-		efuse->regd = 0;
-		efuse->rf_board_option &= GENMASK(5, 0);
-		DBG_EFUSE_FIX(rtwdev, rf_board_option);
-	}
-
-	/* Override invalid crystal cap setting, default comes from
-	 * vendor driver. Chip specific.
-	 */
-	if (efuse->crystal_cap == 0xff) {
-		efuse->crystal_cap = 0x20;
-		DBG_EFUSE_FIX(rtwdev, crystal_cap);
-	}
-
 	return 0;
 }
 
@@ -640,9 +583,13 @@ static void rtw8703b_pwrtrack_init(struct rtw_dev *rtwdev)
 	dm_info->pwr_trk_init_trigger = true;
 	dm_info->thermal_meter_k = rtwdev->efuse.thermal_meter_k;
 	dm_info->txagc_remnant_cck = 0;
-	dm_info->txagc_remnant_ofdm = 0;
+	dm_info->txagc_remnant_ofdm[RF_PATH_A] = 0;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 3, 0)
+#define FIELD_PREP_CONST FIELD_PREP
+#endif
+
 static void rtw8703b_phy_set_param(struct rtw_dev *rtwdev)
 {
 	u8 xtal_cap = rtwdev->efuse.crystal_cap & 0x3F;
@@ -1032,57 +979,6 @@ static void query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
 		query_phy_status_ofdm(rtwdev, phy_status, pkt_stat);
 }
 
-static void rtw8703b_query_rx_desc(struct rtw_dev *rtwdev, u8 *rx_desc,
-				   struct rtw_rx_pkt_stat *pkt_stat,
-				   struct ieee80211_rx_status *rx_status)
-{
-	struct ieee80211_hdr *hdr;
-	u32 desc_sz = rtwdev->chip->rx_pkt_desc_sz;
-	u8 *phy_status = NULL;
-
-	memset(pkt_stat, 0, sizeof(*pkt_stat));
-
-	pkt_stat->phy_status = GET_RX_DESC_PHYST(rx_desc);
-	pkt_stat->icv_err = GET_RX_DESC_ICV_ERR(rx_desc);
-	pkt_stat->crc_err = GET_RX_DESC_CRC32(rx_desc);
-	pkt_stat->decrypted = !GET_RX_DESC_SWDEC(rx_desc) &&
-			      GET_RX_DESC_ENC_TYPE(rx_desc) != RX_DESC_ENC_NONE;
-	pkt_stat->is_c2h = GET_RX_DESC_C2H(rx_desc);
-	pkt_stat->pkt_len = GET_RX_DESC_PKT_LEN(rx_desc);
-	pkt_stat->drv_info_sz = GET_RX_DESC_DRV_INFO_SIZE(rx_desc);
-	pkt_stat->shift = GET_RX_DESC_SHIFT(rx_desc);
-	pkt_stat->rate = GET_RX_DESC_RX_RATE(rx_desc);
-	pkt_stat->cam_id = GET_RX_DESC_MACID(rx_desc);
-	pkt_stat->ppdu_cnt = 0;
-	pkt_stat->tsf_low = GET_RX_DESC_TSFL(rx_desc);
-
-	pkt_stat->drv_info_sz *= RX_DRV_INFO_SZ_UNIT_8703B;
-
-	if (pkt_stat->is_c2h)
-		return;
-
-	hdr = (struct ieee80211_hdr *)(rx_desc + desc_sz + pkt_stat->shift +
-				       pkt_stat->drv_info_sz);
-
-	pkt_stat->bw = GET_RX_DESC_BW(rx_desc);
-
-	if (pkt_stat->phy_status) {
-		phy_status = rx_desc + desc_sz + pkt_stat->shift;
-		query_phy_status(rtwdev, phy_status, pkt_stat);
-	}
-
-	rtw_rx_fill_rx_status(rtwdev, pkt_stat, hdr, rx_status, phy_status);
-
-	/* Rtl8723cs driver checks for size < 14 or size > 8192 and
-	 * simply drops the packet. Maybe this should go into
-	 * rtw_rx_fill_rx_status()?
-	 */
-	if (pkt_stat->pkt_len == 0) {
-		rx_status->flag |= RX_FLAG_NO_PSDU;
-		rtw_dbg(rtwdev, RTW_DBG_RX, "zero length packet");
-	}
-}
-
 #define ADDA_ON_VAL_8703B 0x03c00014
 
 static
@@ -1643,7 +1539,7 @@ static void rtw8703b_pwrtrack_set_ofdm_pwr(struct rtw_dev *rtwdev, s8 swing_idx,
 {
 	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
 
-	dm_info->txagc_remnant_ofdm = txagc_idx;
+	dm_info->txagc_remnant_ofdm[RF_PATH_A] = txagc_idx;
 
 	/* Only path A is calibrated for rtl8703b */
 	rtw8703b_set_iqk_matrix(rtwdev, swing_idx, RF_PATH_A);
@@ -1872,6 +1768,12 @@ static const struct rtw_pwr_track_tbl rtw8703b_rtw_pwr_track_tbl = {
 	.pwrtrk_xtal_p = rtw8703b_pwrtrk_xtal_p,
 };
 
+static const struct rtw_rfe_def rtw8703b_rfe_defs[] = {
+	[0] = { .phy_pg_tbl	= &rtw8703b_bb_pg_tbl,
+		.txpwr_lmt_tbl	= &rtw8703b_txpwr_lmt_tbl,
+		.pwr_track_tbl	= &rtw8703b_rtw_pwr_track_tbl, },
+};
+
 /* Shared-Antenna Coex Table */
 static const struct coex_table_para table_sant_8703b[] = {
 	{0xffffffff, 0xffffffff}, /* case-0 */
@@ -1941,20 +1843,23 @@ static const struct coex_tdma_para tdma_sant_8703b[] = {
 	{ {0x61, 0x08, 0x03, 0x11, 0x11} },
 };
 
-static struct rtw_chip_ops rtw8703b_ops = {
+static const struct rtw_chip_ops rtw8703b_ops = {
+	.power_on		= rtw_power_on,
+	.power_off		= rtw_power_off,
 	.mac_init		= rtw8723x_mac_init,
 	.dump_fw_crash		= NULL,
 	.shutdown		= NULL,
 	.read_efuse		= rtw8703b_read_efuse,
 	.phy_set_param		= rtw8703b_phy_set_param,
 	.set_channel		= rtw8703b_set_channel,
-	.query_rx_desc		= rtw8703b_query_rx_desc,
+	.query_phy_status	= query_phy_status,
 	.read_rf		= rtw_phy_read_rf_sipi,
 	.write_rf		= rtw_phy_write_rf_reg_sipi,
 	.set_tx_power_index	= rtw8723x_set_tx_power_index,
 	.set_antenna		= NULL,
 	.cfg_ldo25		= rtw8723x_cfg_ldo25,
 	.efuse_grant		= rtw8723x_efuse_grant,
+	.set_ampdu_factor	= rtw8723x_set_ampdu_factor,
 	.false_alarm_statistics	= rtw8723x_false_alarm_statistics,
 	.phy_calibration	= rtw8703b_phy_calibration,
 	.dpk_track		= NULL,
@@ -2014,6 +1919,9 @@ const struct rtw_chip_info rtw8703b_hw_spec = {
 	.max_power_index = 0x3f,
 	.ampdu_density = IEEE80211_HT_MPDU_DENSITY_16,
 	.usb_tx_agg_desc_num = 1, /* Not sure if this chip has USB interface */
+	.hw_feature_report = true,
+	.c2h_ra_report_size = 7,
+	.old_datarate_fb_limit = true,
 
 	.path_div_supported = false,
 	.ht_supported = true,
@@ -2046,7 +1954,6 @@ const struct rtw_chip_info rtw8703b_hw_spec = {
 	.rfe_defs_size = ARRAY_SIZE(rtw8703b_rfe_defs),
 
 	.iqk_threshold = 8,
-	.pwr_track_tbl = &rtw8703b_rtw_pwr_track_tbl,
 
 	/* WOWLAN firmware exists, but not implemented yet */
 	.wow_fw_name = "rtw88/rtw8703b_wow_fw.bin",
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8723cs.c b/drivers/net/wireless/realtek/rtw88/rtw8723cs.c
index 8d38d36be8c0..1e8dcae006ec 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8723cs.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8723cs.c
@@ -2,7 +2,7 @@
 /* Copyright Fiona Klute <fiona.klute@gmx.de> */
 
 #include <linux/mmc/sdio_func.h>
-#include <linux/mmc/sdio_ids.h>
+#include "sdio_ids.h"
 #include <linux/module.h>
 #include "main.h"
 #include "rtw8703b.h"
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8723d.c b/drivers/net/wireless/realtek/rtw88/rtw8723d.c
index 3fba4054d45f..5acddd80fed0 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8723d.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8723d.c
@@ -79,7 +79,7 @@ static void rtw8723d_pwrtrack_init(struct rtw_dev *rtwdev)
 	dm_info->pwr_trk_init_trigger = true;
 	dm_info->thermal_meter_k = rtwdev->efuse.thermal_meter_k;
 	dm_info->txagc_remnant_cck = 0;
-	dm_info->txagc_remnant_ofdm = 0;
+	dm_info->txagc_remnant_ofdm[RF_PATH_A] = 0;
 }
 
 static void rtw8723d_phy_set_param(struct rtw_dev *rtwdev)
@@ -227,47 +227,6 @@ static void query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
 	}
 }
 
-static void rtw8723d_query_rx_desc(struct rtw_dev *rtwdev, u8 *rx_desc,
-				   struct rtw_rx_pkt_stat *pkt_stat,
-				   struct ieee80211_rx_status *rx_status)
-{
-	struct ieee80211_hdr *hdr;
-	u32 desc_sz = rtwdev->chip->rx_pkt_desc_sz;
-	u8 *phy_status = NULL;
-
-	memset(pkt_stat, 0, sizeof(*pkt_stat));
-
-	pkt_stat->phy_status = GET_RX_DESC_PHYST(rx_desc);
-	pkt_stat->icv_err = GET_RX_DESC_ICV_ERR(rx_desc);
-	pkt_stat->crc_err = GET_RX_DESC_CRC32(rx_desc);
-	pkt_stat->decrypted = !GET_RX_DESC_SWDEC(rx_desc) &&
-			      GET_RX_DESC_ENC_TYPE(rx_desc) != RX_DESC_ENC_NONE;
-	pkt_stat->is_c2h = GET_RX_DESC_C2H(rx_desc);
-	pkt_stat->pkt_len = GET_RX_DESC_PKT_LEN(rx_desc);
-	pkt_stat->drv_info_sz = GET_RX_DESC_DRV_INFO_SIZE(rx_desc);
-	pkt_stat->shift = GET_RX_DESC_SHIFT(rx_desc);
-	pkt_stat->rate = GET_RX_DESC_RX_RATE(rx_desc);
-	pkt_stat->cam_id = GET_RX_DESC_MACID(rx_desc);
-	pkt_stat->ppdu_cnt = 0;
-	pkt_stat->tsf_low = GET_RX_DESC_TSFL(rx_desc);
-
-	/* drv_info_sz is in unit of 8-bytes */
-	pkt_stat->drv_info_sz *= 8;
-
-	/* c2h cmd pkt's rx/phy status is not interested */
-	if (pkt_stat->is_c2h)
-		return;
-
-	hdr = (struct ieee80211_hdr *)(rx_desc + desc_sz + pkt_stat->shift +
-				       pkt_stat->drv_info_sz);
-	if (pkt_stat->phy_status) {
-		phy_status = rx_desc + desc_sz + pkt_stat->shift;
-		query_phy_status(rtwdev, phy_status, pkt_stat);
-	}
-
-	rtw_rx_fill_rx_status(rtwdev, pkt_stat, hdr, rx_status, phy_status);
-}
-
 static bool rtw8723d_check_spur_ov_thres(struct rtw_dev *rtwdev,
 					 u8 channel, u32 thres)
 {
@@ -485,7 +444,7 @@ static u8 rtw8723d_iqk_check_tx_failed(struct rtw_dev *rtwdev,
 		rtw_read32(rtwdev, REG_IQK_RES_TX),
 		rtw_read32(rtwdev, REG_IQK_RES_TY));
 	rtw_dbg(rtwdev, RTW_DBG_RFK,
-		"[IQK] 0xe90(before IQK)= 0x%x, 0xe98(afer IQK) = 0x%x\n",
+		"[IQK] 0xe90(before IQK)= 0x%x, 0xe98(after IQK) = 0x%x\n",
 		rtw_read32(rtwdev, 0xe90),
 		rtw_read32(rtwdev, 0xe98));
 
@@ -513,7 +472,7 @@ static u8 rtw8723d_iqk_check_rx_failed(struct rtw_dev *rtwdev,
 		rtw_read32(rtwdev, REG_IQK_RES_RY));
 
 	rtw_dbg(rtwdev, RTW_DBG_RFK,
-		"[IQK] 0xea0(before IQK)= 0x%x, 0xea8(afer IQK) = 0x%x\n",
+		"[IQK] 0xea0(before IQK)= 0x%x, 0xea8(after IQK) = 0x%x\n",
 		rtw_read32(rtwdev, 0xea0),
 		rtw_read32(rtwdev, 0xea8));
 
@@ -1306,7 +1265,7 @@ static void rtw8723d_pwrtrack_set_ofdm_pwr(struct rtw_dev *rtwdev, s8 swing_idx,
 {
 	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
 
-	dm_info->txagc_remnant_ofdm = txagc_idx;
+	dm_info->txagc_remnant_ofdm[RF_PATH_A] = txagc_idx;
 
 	rtw8723d_set_iqk_matrix(rtwdev, swing_idx, RF_PATH_A);
 	rtw8723d_set_iqk_matrix(rtwdev, swing_idx, RF_PATH_B);
@@ -1430,10 +1389,12 @@ static void rtw8723d_pwr_track(struct rtw_dev *rtwdev)
 	dm_info->pwr_trk_triggered = false;
 }
 
-static struct rtw_chip_ops rtw8723d_ops = {
+static const struct rtw_chip_ops rtw8723d_ops = {
+	.power_on		= rtw_power_on,
+	.power_off		= rtw_power_off,
 	.phy_set_param		= rtw8723d_phy_set_param,
 	.read_efuse		= rtw8723x_read_efuse,
-	.query_rx_desc		= rtw8723d_query_rx_desc,
+	.query_phy_status	= query_phy_status,
 	.set_channel		= rtw8723d_set_channel,
 	.mac_init		= rtw8723x_mac_init,
 	.shutdown		= rtw8723d_shutdown,
@@ -1443,6 +1404,7 @@ static struct rtw_chip_ops rtw8723d_ops = {
 	.set_antenna		= NULL,
 	.cfg_ldo25		= rtw8723x_cfg_ldo25,
 	.efuse_grant		= rtw8723x_efuse_grant,
+	.set_ampdu_factor	= rtw8723x_set_ampdu_factor,
 	.false_alarm_statistics	= rtw8723x_false_alarm_statistics,
 	.phy_calibration	= rtw8723d_phy_calibration,
 	.cck_pd_set		= rtw8723d_phy_cck_pd_set,
@@ -1788,7 +1750,7 @@ static const struct rtw_pwr_seq_cmd trans_cardemu_to_act_8723d[] = {
 	 RTW_PWR_CMD_END, 0, 0},
 };
 
-static const struct rtw_pwr_seq_cmd *card_enable_flow_8723d[] = {
+static const struct rtw_pwr_seq_cmd * const card_enable_flow_8723d[] = {
 	trans_carddis_to_cardemu_8723d,
 	trans_cardemu_to_act_8723d,
 	NULL
@@ -2004,7 +1966,7 @@ static const struct rtw_pwr_seq_cmd trans_act_to_post_carddis_8723d[] = {
 	 RTW_PWR_CMD_END, 0, 0},
 };
 
-static const struct rtw_pwr_seq_cmd *card_disable_flow_8723d[] = {
+static const struct rtw_pwr_seq_cmd * const card_disable_flow_8723d[] = {
 	trans_act_to_lps_8723d,
 	trans_act_to_pre_carddis_8723d,
 	trans_act_to_cardemu_8723d,
@@ -2059,11 +2021,6 @@ static const struct rtw_intf_phy_para_table phy_para_table_8723d = {
 	.n_gen1_para	= ARRAY_SIZE(pcie_gen1_param_8723d),
 };
 
-static const struct rtw_rfe_def rtw8723d_rfe_defs[] = {
-	[0] = { .phy_pg_tbl	= &rtw8723d_bb_pg_tbl,
-		.txpwr_lmt_tbl	= &rtw8723d_txpwr_lmt_tbl,},
-};
-
 static const u8 rtw8723d_pwrtrk_2gb_n[] = {
 	0, 0, 1, 1, 1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5,
 	6, 6, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 10, 10
@@ -2127,6 +2084,12 @@ static const struct rtw_pwr_track_tbl rtw8723d_rtw_pwr_track_tbl = {
 	.pwrtrk_xtal_n = rtw8723d_pwrtrk_xtal_n,
 };
 
+static const struct rtw_rfe_def rtw8723d_rfe_defs[] = {
+	[0] = { .phy_pg_tbl	= &rtw8723d_bb_pg_tbl,
+		.txpwr_lmt_tbl	= &rtw8723d_txpwr_lmt_tbl,
+		.pwr_track_tbl	= &rtw8723d_rtw_pwr_track_tbl, },
+};
+
 static const struct rtw_reg_domain coex_info_hw_regs_8723d[] = {
 	{0x948, MASKDWORD, RTW_REG_DOMAIN_MAC32},
 	{0x67, BIT(7), RTW_REG_DOMAIN_MAC8},
@@ -2172,6 +2135,9 @@ const struct rtw_chip_info rtw8723d_hw_spec = {
 	.page_size = TX_PAGE_SIZE,
 	.dig_min = 0x20,
 	.usb_tx_agg_desc_num = 1,
+	.hw_feature_report = true,
+	.c2h_ra_report_size = 7,
+	.old_datarate_fb_limit = true,
 	.ht_supported = true,
 	.vht_supported = false,
 	.lps_deep_mode_supported = 0,
@@ -2195,7 +2161,6 @@ const struct rtw_chip_info rtw8723d_hw_spec = {
 	.rfe_defs = rtw8723d_rfe_defs,
 	.rfe_defs_size = ARRAY_SIZE(rtw8723d_rfe_defs),
 	.rx_ldpc = false,
-	.pwr_track_tbl = &rtw8723d_rtw_pwr_track_tbl,
 	.iqk_threshold = 8,
 	.ampdu_density = IEEE80211_HT_MPDU_DENSITY_16,
 	.max_scan_ie_len = IEEE80211_MAX_DATA_LEN,
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8723ds.c b/drivers/net/wireless/realtek/rtw88/rtw8723ds.c
index e5b6960ba0a0..f1ffffe42c8e 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8723ds.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8723ds.c
@@ -3,7 +3,7 @@
  */
 
 #include <linux/mmc/sdio_func.h>
-#include <linux/mmc/sdio_ids.h>
+#include "sdio_ids.h"
 #include <linux/module.h>
 #include "main.h"
 #include "rtw8723d.h"
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8723x.c b/drivers/net/wireless/realtek/rtw88/rtw8723x.c
index 0d0b6c2cb9aa..e2127d33a58d 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8723x.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8723x.c
@@ -69,6 +69,9 @@ static void __rtw8723x_lck(struct rtw_dev *rtwdev)
 #define DBG_EFUSE_2BYTE(rtwdev, map, name)			\
 	rtw_dbg(rtwdev, RTW_DBG_EFUSE, # name "=0x%02x%02x\n",	\
 		(map)->name[0], (map)->name[1])
+#define DBG_EFUSE_FIX(rtwdev, name)					\
+	rtw_dbg(rtwdev, RTW_DBG_EFUSE, "Fixed invalid EFUSE value: "	\
+		# name "=0x%x\n", rtwdev->efuse.name)
 
 static void rtw8723xe_efuse_debug(struct rtw_dev *rtwdev,
 				  struct rtw8723x_efuse *map)
@@ -238,10 +241,21 @@ static void rtw8723xs_efuse_parsing(struct rtw_efuse *efuse,
 	ether_addr_copy(efuse->addr, map->s.mac_addr);
 }
 
+/* Default power index table for RTL8703B/RTL8723D, used if EFUSE does
+ * not contain valid data. Replaces EFUSE data from offset 0x10 (start
+ * of txpwr_idx_table).
+ */
+static const u8 rtw8723x_txpwr_idx_table[] = {
+	0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
+	0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x02
+};
+
 static int __rtw8723x_read_efuse(struct rtw_dev *rtwdev, u8 *log_map)
 {
 	struct rtw_efuse *efuse = &rtwdev->efuse;
+	u8 *pwr = (u8 *)efuse->txpwr_idx_table;
 	struct rtw8723x_efuse *map;
+	bool valid = false;
 	int i;
 
 	map = (struct rtw8723x_efuse *)log_map;
@@ -279,6 +293,51 @@ static int __rtw8723x_read_efuse(struct rtw_dev *rtwdev, u8 *log_map)
 		return -EOPNOTSUPP;
 	}
 
+	/* If TX power index table in EFUSE is invalid, fall back to
+	 * built-in table.
+	 */
+	for (i = 0; i < ARRAY_SIZE(rtw8723x_txpwr_idx_table); i++)
+		if (pwr[i] != 0xff) {
+			valid = true;
+			break;
+		}
+	if (!valid) {
+		for (i = 0; i < ARRAY_SIZE(rtw8723x_txpwr_idx_table); i++)
+			pwr[i] = rtw8723x_txpwr_idx_table[i];
+		rtw_dbg(rtwdev, RTW_DBG_EFUSE,
+			"Replaced invalid EFUSE TX power index table.");
+		rtw8723x_debug_txpwr_limit(rtwdev,
+					   efuse->txpwr_idx_table, 2);
+	}
+
+	/* Override invalid antenna settings. */
+	if (efuse->bt_setting == 0xff) {
+		/* shared antenna */
+		efuse->bt_setting |= BIT(0);
+		/* RF path A */
+		efuse->bt_setting &= ~BIT(6);
+		DBG_EFUSE_FIX(rtwdev, bt_setting);
+	}
+
+	/* Override invalid board options: The coex code incorrectly
+	 * assumes that if bits 6 & 7 are set the board doesn't
+	 * support coex. Regd is also derived from rf_board_option and
+	 * should be 0 if there's no valid data.
+	 */
+	if (efuse->rf_board_option == 0xff) {
+		efuse->regd = 0;
+		efuse->rf_board_option &= GENMASK(5, 0);
+		DBG_EFUSE_FIX(rtwdev, rf_board_option);
+	}
+
+	/* Override invalid crystal cap setting, default comes from
+	 * vendor driver. Chip specific.
+	 */
+	if (efuse->crystal_cap == 0xff) {
+		efuse->crystal_cap = 0x20;
+		DBG_EFUSE_FIX(rtwdev, crystal_cap);
+	}
+
 	return 0;
 }
 
@@ -374,6 +433,13 @@ static void __rtw8723x_efuse_grant(struct rtw_dev *rtwdev, bool on)
 	}
 }
 
+static void __rtw8723x_set_ampdu_factor(struct rtw_dev *rtwdev, u8 factor)
+{
+	factor = min_t(u8, factor, IEEE80211_HT_MAX_AMPDU_32K);
+
+	rtw_write32(rtwdev, REG_AMPDU_MAX_LENGTH, (8192 << factor) - 1);
+}
+
 static void __rtw8723x_false_alarm_statistics(struct rtw_dev *rtwdev)
 {
 	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
@@ -595,7 +661,8 @@ void __rtw8723x_pwrtrack_set_xtal(struct rtw_dev *rtwdev, u8 therm_path,
 				  u8 delta)
 {
 	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
-	const struct rtw_pwr_track_tbl *tbl = rtwdev->chip->pwr_track_tbl;
+	const struct rtw_rfe_def *rfe_def = rtw_get_rfe_def(rtwdev);
+	const struct rtw_pwr_track_tbl *tbl = rfe_def->pwr_track_tbl;
 	const s8 *pwrtrk_xtal;
 	s8 xtal_cap;
 
@@ -703,6 +770,7 @@ const struct rtw8723x_common rtw8723x_common = {
 	.cfg_ldo25 = __rtw8723x_cfg_ldo25,
 	.set_tx_power_index = __rtw8723x_set_tx_power_index,
 	.efuse_grant = __rtw8723x_efuse_grant,
+	.set_ampdu_factor = __rtw8723x_set_ampdu_factor,
 	.false_alarm_statistics = __rtw8723x_false_alarm_statistics,
 	.iqk_backup_regs = __rtw8723x_iqk_backup_regs,
 	.iqk_restore_regs = __rtw8723x_iqk_restore_regs,
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8723x.h b/drivers/net/wireless/realtek/rtw88/rtw8723x.h
index a99af527c92c..5d756c4933f0 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8723x.h
+++ b/drivers/net/wireless/realtek/rtw88/rtw8723x.h
@@ -140,6 +140,7 @@ struct rtw8723x_common {
 	void (*cfg_ldo25)(struct rtw_dev *rtwdev, bool enable);
 	void (*set_tx_power_index)(struct rtw_dev *rtwdev);
 	void (*efuse_grant)(struct rtw_dev *rtwdev, bool on);
+	void (*set_ampdu_factor)(struct rtw_dev *rtwdev, u8 factor);
 	void (*false_alarm_statistics)(struct rtw_dev *rtwdev);
 	void (*iqk_backup_regs)(struct rtw_dev *rtwdev,
 				struct rtw8723x_iqk_backup_regs *backup);
@@ -398,6 +399,11 @@ static inline void rtw8723x_efuse_grant(struct rtw_dev *rtwdev, bool on)
 	rtw8723x_common.efuse_grant(rtwdev, on);
 }
 
+static inline void rtw8723x_set_ampdu_factor(struct rtw_dev *rtwdev, u8 factor)
+{
+	rtw8723x_common.set_ampdu_factor(rtwdev, factor);
+}
+
 static inline void rtw8723x_false_alarm_statistics(struct rtw_dev *rtwdev)
 {
 	rtw8723x_common.false_alarm_statistics(rtwdev);
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8812a.c b/drivers/net/wireless/realtek/rtw88/rtw8812a.c
new file mode 100644
index 000000000000..34e052dd2e8b
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8812a.c
@@ -0,0 +1,1134 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#include "main.h"
+#include "coex.h"
+#include "phy.h"
+#include "reg.h"
+#include "rtw88xxa.h"
+#include "rtw8812a.h"
+#include "rtw8812a_table.h"
+#include "tx.h"
+
+static void rtw8812a_power_off(struct rtw_dev *rtwdev)
+{
+	rtw88xxa_power_off(rtwdev, enter_lps_flow_8812a);
+}
+
+static s8 rtw8812a_cck_rx_pwr(u8 lna_idx, u8 vga_idx)
+{
+	s8 rx_pwr_all = 0;
+
+	switch (lna_idx) {
+	case 7:
+		if (vga_idx <= 27)
+			rx_pwr_all = -94 + 2 * (27 - vga_idx);
+		else
+			rx_pwr_all = -94;
+		break;
+	case 6:
+		rx_pwr_all = -42 + 2 * (2 - vga_idx);
+		break;
+	case 5:
+		rx_pwr_all = -36 + 2 * (7 - vga_idx);
+		break;
+	case 4:
+		rx_pwr_all = -30 + 2 * (7 - vga_idx);
+		break;
+	case 3:
+		rx_pwr_all = -18 + 2 * (7 - vga_idx);
+		break;
+	case 2:
+		rx_pwr_all = 2 * (5 - vga_idx);
+		break;
+	case 1:
+		rx_pwr_all = 14 - 2 * vga_idx;
+		break;
+	case 0:
+		rx_pwr_all = 20 - 2 * vga_idx;
+		break;
+	default:
+		break;
+	}
+
+	return rx_pwr_all;
+}
+
+static void rtw8812a_query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
+				      struct rtw_rx_pkt_stat *pkt_stat)
+{
+	rtw88xxa_query_phy_status(rtwdev, phy_status, pkt_stat,
+				  rtw8812a_cck_rx_pwr);
+
+	if (pkt_stat->rate >= DESC_RATE6M)
+		return;
+
+	if (rtwdev->hal.cck_high_power)
+		return;
+
+	if (pkt_stat->rssi >= 80)
+		pkt_stat->rssi = ((pkt_stat->rssi - 80) << 1) +
+				 ((pkt_stat->rssi - 80) >> 1) + 80;
+	else if (pkt_stat->rssi <= 78 && pkt_stat->rssi >= 20)
+		pkt_stat->rssi += 3;
+}
+
+static void rtw8812a_cfg_ldo25(struct rtw_dev *rtwdev, bool enable)
+{
+}
+
+static void rtw8812a_set_ampdu_factor(struct rtw_dev *rtwdev, u8 factor)
+{
+	u32 len;
+
+	factor = min_t(u8, factor, IEEE80211_VHT_MAX_AMPDU_128K);
+	len = BIT(31) | ((8192 << factor) - 1);
+
+	rtw_write32(rtwdev, REG_AMPDU_MAX_LENGTH, len);
+}
+
+static void rtw8812a_do_lck(struct rtw_dev *rtwdev)
+{
+	u32 cont_tx, lc_cal, i;
+
+	cont_tx = rtw_read32_mask(rtwdev, REG_SINGLE_TONE_CONT_TX, 0x70000);
+
+	lc_cal = rtw_read_rf(rtwdev, RF_PATH_A, RF_CFGCH, RFREG_MASK);
+
+	if (!cont_tx)
+		rtw_write8(rtwdev, REG_TXPAUSE, 0xff);
+
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_LCK, BIT(14), 1);
+
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_CFGCH, 0x08000, 1);
+
+	mdelay(150);
+
+	for (i = 0; i < 5; i++) {
+		if (rtw_read_rf(rtwdev, RF_PATH_A, RF_CFGCH, 0x08000) != 1)
+			break;
+
+		mdelay(10);
+	}
+
+	if (i == 5)
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "LCK timed out\n");
+
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_CFGCH, RFREG_MASK, lc_cal);
+
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_LCK, BIT(14), 0);
+
+	if (!cont_tx)
+		rtw_write8(rtwdev, REG_TXPAUSE, 0);
+
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_CFGCH, RFREG_MASK, lc_cal);
+}
+
+static void rtw8812a_iqk_backup_rf(struct rtw_dev *rtwdev, u32 *rfa_backup,
+				   u32 *rfb_backup, const u32 *backup_rf_reg,
+				   u32 rf_num)
+{
+	u32 i;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	/* Save RF Parameters */
+	for (i = 0; i < rf_num; i++) {
+		rfa_backup[i] = rtw_read_rf(rtwdev, RF_PATH_A,
+					    backup_rf_reg[i], MASKDWORD);
+		rfb_backup[i] = rtw_read_rf(rtwdev, RF_PATH_B,
+					    backup_rf_reg[i], MASKDWORD);
+	}
+}
+
+static void rtw8812a_iqk_restore_rf(struct rtw_dev *rtwdev,
+				    enum rtw_rf_path path,
+				    const u32 *backup_rf_reg,
+				    u32 *RF_backup, u32 rf_reg_num)
+{
+	u32 i;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	for (i = 0; i < rf_reg_num; i++)
+		rtw_write_rf(rtwdev, path, backup_rf_reg[i],
+			     RFREG_MASK, RF_backup[i]);
+
+	rtw_write_rf(rtwdev, path, RF_LUTWE, RFREG_MASK, 0);
+}
+
+static void rtw8812a_iqk_restore_afe(struct rtw_dev *rtwdev, u32 *afe_backup,
+				     const u32 *backup_afe_reg, u32 afe_num)
+{
+	u32 i;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	/* Reload AFE Parameters */
+	for (i = 0; i < afe_num; i++)
+		rtw_write32(rtwdev, backup_afe_reg[i], afe_backup[i]);
+
+	/* [31] = 1 --> Page C1 */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+	rtw_write32(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE, 0x0);
+	rtw_write32(rtwdev, REG_OFDM0_A_TX_AFE, 0x0);
+	rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE, 0x0);
+	rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x3c000000);
+	rtw_write32_mask(rtwdev, REG_LSSI_WRITE_A, BIT(7), 1);
+	rtw_write32_mask(rtwdev, REG_IQK_DPD_CFG, BIT(18), 1);
+	rtw_write32_mask(rtwdev, REG_IQK_DPD_CFG, BIT(29), 1);
+	rtw_write32_mask(rtwdev, REG_CFG_PMPD, BIT(29), 1);
+
+	rtw_write32(rtwdev, REG_TXTONEB, 0x0);
+	rtw_write32(rtwdev, REG_RXTONEB, 0x0);
+	rtw_write32(rtwdev, REG_TXPITMB, 0x0);
+	rtw_write32(rtwdev, REG_RXPITMB, 0x3c000000);
+	rtw_write32_mask(rtwdev, REG_LSSI_WRITE_B, BIT(7), 1);
+	rtw_write32_mask(rtwdev, REG_BPBDB, BIT(18), 1);
+	rtw_write32_mask(rtwdev, REG_BPBDB, BIT(29), 1);
+	rtw_write32_mask(rtwdev, REG_PHYTXONB, BIT(29), 1);
+}
+
+static void rtw8812a_iqk_rx_fill(struct rtw_dev *rtwdev, enum rtw_rf_path path,
+				 unsigned int rx_x, unsigned int rx_y)
+{
+	switch (path) {
+	case RF_PATH_A:
+		/* [31] = 0 --> Page C */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+		if (rx_x >> 1 >= 0x112 ||
+		    (rx_y >> 1 >= 0x12 && rx_y >> 1 <= 0x3ee)) {
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_A,
+					 0x000003ff, 0x100);
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_A,
+					 0x03ff0000, 0);
+		} else {
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_A,
+					 0x000003ff, rx_x >> 1);
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_A,
+					 0x03ff0000, rx_y >> 1);
+		}
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"rx_x = %x;;rx_y = %x ====>fill to IQC\n",
+			rx_x >> 1 & 0x000003ff, rx_y >> 1 & 0x000003ff);
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "0xc10 = %x ====>fill to IQC\n",
+			rtw_read32(rtwdev, REG_RX_IQC_AB_A));
+		break;
+	case RF_PATH_B:
+		/* [31] = 0 --> Page C */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+		if (rx_x >> 1 >= 0x112 ||
+		    (rx_y >> 1 >= 0x12 && rx_y >> 1 <= 0x3ee)) {
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_B,
+					 0x000003ff, 0x100);
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_B,
+					 0x03ff0000, 0);
+		} else {
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_B,
+					 0x000003ff, rx_x >> 1);
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_B,
+					 0x03ff0000, rx_y >> 1);
+		}
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"rx_x = %x;;rx_y = %x ====>fill to IQC\n",
+			rx_x >> 1 & 0x000003ff, rx_y >> 1 & 0x000003ff);
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "0xe10 = %x====>fill to IQC\n",
+			rtw_read32(rtwdev, REG_RX_IQC_AB_B));
+		break;
+	default:
+		break;
+	}
+}
+
+static void rtw8812a_iqk_tx_fill(struct rtw_dev *rtwdev, enum rtw_rf_path path,
+				 unsigned int tx_x, unsigned int tx_y)
+{
+	switch (path) {
+	case RF_PATH_A:
+		/* [31] = 1 --> Page C1 */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+		rtw_write32_mask(rtwdev, REG_PREDISTA, BIT(7), 0x1);
+		rtw_write32_mask(rtwdev, REG_IQK_DPD_CFG, BIT(18), 0x1);
+		rtw_write32_mask(rtwdev, REG_IQK_DPD_CFG, BIT(29), 0x1);
+		rtw_write32_mask(rtwdev, REG_CFG_PMPD, BIT(29), 0x1);
+		rtw_write32_mask(rtwdev, REG_IQC_Y, 0x000007ff, tx_y);
+		rtw_write32_mask(rtwdev, REG_IQC_X, 0x000007ff, tx_x);
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"tx_x = %x;;tx_y = %x =====> fill to IQC\n",
+			tx_x & 0x000007ff, tx_y & 0x000007ff);
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"0xcd4 = %x;;0xccc = %x ====>fill to IQC\n",
+			rtw_read32_mask(rtwdev, REG_IQC_X, 0x000007ff),
+			rtw_read32_mask(rtwdev, REG_IQC_Y, 0x000007ff));
+		break;
+	case RF_PATH_B:
+		/* [31] = 1 --> Page C1 */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+		rtw_write32_mask(rtwdev, REG_PREDISTB, BIT(7), 0x1);
+		rtw_write32_mask(rtwdev, REG_BPBDB, BIT(18), 0x1);
+		rtw_write32_mask(rtwdev, REG_BPBDB, BIT(29), 0x1);
+		rtw_write32_mask(rtwdev, REG_PHYTXONB, BIT(29), 0x1);
+		rtw_write32_mask(rtwdev, REG_IQKYB, 0x000007ff, tx_y);
+		rtw_write32_mask(rtwdev, REG_IQKXB, 0x000007ff, tx_x);
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"tx_x = %x;;tx_y = %x =====> fill to IQC\n",
+			tx_x & 0x000007ff, tx_y & 0x000007ff);
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"0xed4 = %x;;0xecc = %x ====>fill to IQC\n",
+			rtw_read32_mask(rtwdev, REG_IQKXB, 0x000007ff),
+			rtw_read32_mask(rtwdev, REG_IQKYB, 0x000007ff));
+		break;
+	default:
+		break;
+	}
+}
+
+static void rtw8812a_iqk(struct rtw_dev *rtwdev)
+{
+	int tx_x0_temp[10], tx_y0_temp[10], tx_x1_temp[10], tx_y1_temp[10];
+	int rx_x0_temp[10], rx_y0_temp[10], rx_x1_temp[10], rx_y1_temp[10];
+	bool iqk0_ready = false, tx0_finish = false, rx0_finish = false;
+	bool iqk1_ready = false, tx1_finish = false, rx1_finish = false;
+	u8 tx0_avg = 0, tx1_avg = 0, rx0_avg = 0, rx1_avg = 0;
+	int tx_x0 = 0, tx_y0 = 0, tx_x1 = 0, tx_y1 = 0;
+	int rx_x0 = 0, rx_y0 = 0, rx_x1 = 0, rx_y1 = 0;
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+	bool tx0_fail = true, rx0_fail = true;
+	bool tx1_fail = true, rx1_fail = true;
+	u8 cal0_retry, cal1_retry;
+	u8 delay_count;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	/* ========path-A AFE all on======== */
+	/* Port 0 DAC/ADC on */
+	rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x77777777);
+	rtw_write32(rtwdev, REG_AFE_PWR2_A, 0x77777777);
+
+	/* Port 1 DAC/ADC on */
+	rtw_write32(rtwdev, REG_AFE_PWR1_B, 0x77777777);
+	rtw_write32(rtwdev, REG_AFE_PWR2_B, 0x77777777);
+
+	rtw_write32(rtwdev, REG_RX_WAIT_CCA_TX_CCK_RFON_A, 0x19791979);
+	rtw_write32(rtwdev, REG_RX_WAIT_CCA_TX_CCK_RFON_B, 0x19791979);
+
+	/* hardware 3-wire off */
+	rtw_write32_mask(rtwdev, REG_3WIRE_SWA, 0xf, 0x4);
+	rtw_write32_mask(rtwdev, REG_3WIRE_SWB, 0xf, 0x4);
+
+	/* DAC/ADC sampling rate (160 MHz) */
+	rtw_write32_mask(rtwdev, REG_CK_MONHA, GENMASK(26, 24), 0x7);
+	rtw_write32_mask(rtwdev, REG_CK_MONHB, GENMASK(26, 24), 0x7);
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+	/* ====== path A TX IQK RF setting ====== */
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_LUTWE, RFREG_MASK, 0x80002);
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_ADDR, RFREG_MASK, 0x20000);
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA0, RFREG_MASK, 0x3fffd);
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA1, RFREG_MASK, 0xfe83f);
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_TXA_PREPAD, RFREG_MASK, 0x931d5);
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_RXBB2, RFREG_MASK, 0x8a001);
+
+	/* ====== path B TX IQK RF setting ====== */
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_LUTWE, RFREG_MASK, 0x80002);
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_MODE_TABLE_ADDR, RFREG_MASK, 0x20000);
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_MODE_TABLE_DATA0, RFREG_MASK, 0x3fffd);
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_MODE_TABLE_DATA1, RFREG_MASK, 0xfe83f);
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_TXA_PREPAD, RFREG_MASK, 0x931d5);
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_RXBB2, RFREG_MASK, 0x8a001);
+
+	rtw_write32(rtwdev, REG_DAC_RSTB, 0x00008000);
+	rtw_write32_mask(rtwdev, REG_TXAGCIDX, BIT(0), 0x1);
+	rtw_write32_mask(rtwdev, REG_INIDLYB, BIT(0), 0x1);
+	rtw_write32(rtwdev, REG_IQK_COM00, 0x29002000); /* TX (X,Y) */
+	rtw_write32(rtwdev, REG_IQK_COM32, 0xa9002000); /* RX (X,Y) */
+	rtw_write32(rtwdev, REG_IQK_COM96, 0x00462910); /* [0]:AGC_en, [15]:idac_K_Mask */
+	/* [31] = 1 --> Page C1 */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+	if (efuse->ext_pa_5g) {
+		if (efuse->rfe_option == 1) {
+			rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE, 0x821403e3);
+			rtw_write32(rtwdev, REG_TXPITMB, 0x821403e3);
+		} else {
+			rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE, 0x821403f7);
+			rtw_write32(rtwdev, REG_TXPITMB, 0x821403f7);
+		}
+	} else {
+		rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE, 0x821403f1);
+		rtw_write32(rtwdev, REG_TXPITMB, 0x821403f1);
+	}
+
+	if (rtwdev->hal.current_band_type == RTW_BAND_5G) {
+		rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x68163e96);
+		rtw_write32(rtwdev, REG_RXPITMB, 0x68163e96);
+	} else {
+		rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x28163e96);
+		rtw_write32(rtwdev, REG_RXPITMB, 0x28163e96);
+
+		if (efuse->rfe_option == 3) {
+			if (efuse->ext_pa_2g)
+				rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE,
+					    0x821403e3);
+			else
+				rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE,
+					    0x821403f7);
+		}
+	}
+
+	/* TX_Tone_idx[9:0], TxK_Mask[29] TX_Tone = 16 */
+	rtw_write32(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE, 0x18008c10);
+	/* RX_Tone_idx[9:0], RxK_Mask[29] */
+	rtw_write32(rtwdev, REG_OFDM0_A_TX_AFE, 0x38008c10);
+	rtw_write32(rtwdev, REG_INTPO_SETA, 0x00000000);
+	/* TX_Tone_idx[9:0], TxK_Mask[29] TX_Tone = 16 */
+	rtw_write32(rtwdev, REG_TXTONEB, 0x18008c10);
+	/* RX_Tone_idx[9:0], RxK_Mask[29] */
+	rtw_write32(rtwdev, REG_RXTONEB, 0x38008c10);
+	rtw_write32(rtwdev, REG_INTPO_SETB, 0x00000000);
+
+	cal0_retry = 0;
+	cal1_retry = 0;
+	while (1) {
+		/* one shot */
+		rtw_write32(rtwdev, REG_RFECTL_A, 0x00100000);
+		rtw_write32(rtwdev, REG_RFECTL_B, 0x00100000);
+		rtw_write32(rtwdev, REG_IQK_COM64, 0xfa000000);
+		rtw_write32(rtwdev, REG_IQK_COM64, 0xf8000000);
+
+		mdelay(10);
+
+		rtw_write32(rtwdev, REG_RFECTL_A, 0x00000000);
+		rtw_write32(rtwdev, REG_RFECTL_B, 0x00000000);
+
+		for (delay_count = 0; delay_count < 20; delay_count++) {
+			if (!tx0_finish)
+				iqk0_ready = rtw_read32_mask(rtwdev,
+							     REG_IQKA_END,
+							     BIT(10));
+			if (!tx1_finish)
+				iqk1_ready = rtw_read32_mask(rtwdev,
+							     REG_IQKB_END,
+							     BIT(10));
+			if (iqk0_ready && iqk1_ready)
+				break;
+
+			mdelay(1);
+		}
+
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "TX delay_count = %d\n",
+			delay_count);
+
+		if (delay_count < 20) { /* If 20ms No Result, then cal_retry++ */
+			/* ============TXIQK Check============== */
+			tx0_fail = rtw_read32_mask(rtwdev, REG_IQKA_END, BIT(12));
+			tx1_fail = rtw_read32_mask(rtwdev, REG_IQKB_END, BIT(12));
+
+			if (!(tx0_fail || tx0_finish)) {
+				rtw_write32(rtwdev, REG_RFECTL_A, 0x02000000);
+				tx_x0_temp[tx0_avg] = rtw_read32_mask(rtwdev,
+								      REG_IQKA_END,
+								      0x07ff0000);
+				rtw_write32(rtwdev, REG_RFECTL_A, 0x04000000);
+				tx_y0_temp[tx0_avg] = rtw_read32_mask(rtwdev,
+								      REG_IQKA_END,
+								      0x07ff0000);
+
+				rtw_dbg(rtwdev, RTW_DBG_RFK,
+					"tx_x0[%d] = %x ;; tx_y0[%d] = %x\n",
+					tx0_avg, tx_x0_temp[tx0_avg],
+					tx0_avg, tx_y0_temp[tx0_avg]);
+
+				tx_x0_temp[tx0_avg] <<= 21;
+				tx_y0_temp[tx0_avg] <<= 21;
+
+				tx0_avg++;
+			} else {
+				cal0_retry++;
+				if (cal0_retry == 10)
+					break;
+			}
+
+			if (!(tx1_fail || tx1_finish)) {
+				rtw_write32(rtwdev, REG_RFECTL_B, 0x02000000);
+				tx_x1_temp[tx1_avg] = rtw_read32_mask(rtwdev,
+								      REG_IQKB_END,
+								      0x07ff0000);
+				rtw_write32(rtwdev, REG_RFECTL_B, 0x04000000);
+				tx_y1_temp[tx1_avg] = rtw_read32_mask(rtwdev,
+								      REG_IQKB_END,
+								      0x07ff0000);
+
+				rtw_dbg(rtwdev, RTW_DBG_RFK,
+					"tx_x1[%d] = %x ;; tx_y1[%d] = %x\n",
+					tx1_avg, tx_x1_temp[tx1_avg],
+					tx1_avg, tx_y1_temp[tx1_avg]);
+
+				tx_x1_temp[tx1_avg] <<= 21;
+				tx_y1_temp[tx1_avg] <<= 21;
+
+				tx1_avg++;
+			} else {
+				cal1_retry++;
+				if (cal1_retry == 10)
+					break;
+			}
+		} else {
+			cal0_retry++;
+			cal1_retry++;
+
+			rtw_dbg(rtwdev, RTW_DBG_RFK,
+				"delay 20ms TX IQK Not Ready!!!!!\n");
+
+			if (cal0_retry == 10)
+				break;
+		}
+
+		if (tx0_avg >= 2)
+			tx0_finish = rtw88xxa_iqk_finish(tx0_avg, 4,
+							 tx_x0_temp, tx_y0_temp, &tx_x0, &tx_y0,
+							 false, false);
+
+		if (tx1_avg >= 2)
+			tx1_finish = rtw88xxa_iqk_finish(tx1_avg, 4,
+							 tx_x1_temp, tx_y1_temp, &tx_x1, &tx_y1,
+							 false, false);
+
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"tx0_average = %d, tx1_average = %d\n",
+			tx0_avg, tx1_avg);
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"tx0_finish = %d, tx1_finish = %d\n",
+			tx0_finish, tx1_finish);
+
+		if (tx0_finish && tx1_finish)
+			break;
+
+		if ((cal0_retry + tx0_avg) >= 10 ||
+		    (cal1_retry + tx1_avg) >= 10)
+			break;
+	}
+
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "TXA_cal_retry = %d\n", cal0_retry);
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "TXB_cal_retry = %d\n", cal1_retry);
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+	/* Load LOK */
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_TXMOD, 0x7fe00,
+		     rtw_read_rf(rtwdev, RF_PATH_A, RF_DTXLOK, 0xffc00));
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_TXMOD, 0x7fe00,
+		     rtw_read_rf(rtwdev, RF_PATH_B, RF_DTXLOK, 0xffc00));
+	/* [31] = 1 --> Page C1 */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+	if (tx0_finish) {
+		/* ====== path A RX IQK RF setting====== */
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_LUTWE, RFREG_MASK, 0x80000);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_ADDR, RFREG_MASK,
+			     0x30000);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA0, RFREG_MASK,
+			     0x3f7ff);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA1, RFREG_MASK,
+			     0xfe7bf);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_RXBB2, RFREG_MASK, 0x88001);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_TXA_PREPAD, RFREG_MASK, 0x931d1);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_LUTWE, RFREG_MASK, 0x00000);
+	}
+	if (tx1_finish) {
+		/* ====== path B RX IQK RF setting====== */
+		rtw_write_rf(rtwdev, RF_PATH_B, RF_LUTWE, RFREG_MASK, 0x80000);
+		rtw_write_rf(rtwdev, RF_PATH_B, RF_MODE_TABLE_ADDR, RFREG_MASK,
+			     0x30000);
+		rtw_write_rf(rtwdev, RF_PATH_B, RF_MODE_TABLE_DATA0, RFREG_MASK,
+			     0x3f7ff);
+		rtw_write_rf(rtwdev, RF_PATH_B, RF_MODE_TABLE_DATA1, RFREG_MASK,
+			     0xfe7bf);
+		rtw_write_rf(rtwdev, RF_PATH_B, RF_RXBB2, RFREG_MASK, 0x88001);
+		rtw_write_rf(rtwdev, RF_PATH_B, RF_TXA_PREPAD, RFREG_MASK, 0x931d1);
+		rtw_write_rf(rtwdev, RF_PATH_B, RF_LUTWE, RFREG_MASK, 0x00000);
+	}
+
+	rtw_write32_mask(rtwdev, REG_IQK_COM00, BIT(31), 0x1);
+	rtw_write32_mask(rtwdev, REG_IQK_COM00, BIT(31), 0x0);
+	rtw_write32(rtwdev, REG_DAC_RSTB, 0x00008000);
+
+	if (rtwdev->hci.type == RTW_HCI_TYPE_PCIE)
+		rtw_write32(rtwdev, REG_IQK_COM96, 0x0046a911);
+	else
+		rtw_write32(rtwdev, REG_IQK_COM96, 0x0046a890);
+
+	if (efuse->rfe_option == 1) {
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77777717);
+		rtw_write32(rtwdev, REG_RFE_INV_A, 0x00000077);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777717);
+		rtw_write32(rtwdev, REG_RFE_INV_B, 0x00000077);
+	} else {
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77777717);
+		rtw_write32(rtwdev, REG_RFE_INV_A, 0x02000077);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777717);
+		rtw_write32(rtwdev, REG_RFE_INV_B, 0x02000077);
+	}
+
+	/* [31] = 1 --> Page C1 */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+	if (tx0_finish) {
+		/* TX_Tone_idx[9:0], TxK_Mask[29] TX_Tone = 16 */
+		rtw_write32(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE, 0x38008c10);
+		/* RX_Tone_idx[9:0], RxK_Mask[29] */
+		rtw_write32(rtwdev, REG_OFDM0_A_TX_AFE, 0x18008c10);
+		rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE, 0x82140119);
+	}
+	if (tx1_finish) {
+		/* TX_Tone_idx[9:0], TxK_Mask[29] TX_Tone = 16 */
+		rtw_write32(rtwdev, REG_TXTONEB, 0x38008c10);
+		/* RX_Tone_idx[9:0], RxK_Mask[29] */
+		rtw_write32(rtwdev, REG_RXTONEB, 0x18008c10);
+		rtw_write32(rtwdev, REG_TXPITMB, 0x82140119);
+	}
+
+	cal0_retry = 0;
+	cal1_retry = 0;
+	while (1) {
+		/* one shot */
+		/* [31] = 0 --> Page C */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+		if (tx0_finish) {
+			rtw_write32_mask(rtwdev, REG_IQK_COM00, 0x03FF8000,
+					 tx_x0 & 0x000007ff);
+			rtw_write32_mask(rtwdev, REG_IQK_COM00, 0x000007FF,
+					 tx_y0 & 0x000007ff);
+			/* [31] = 1 --> Page C1 */
+			rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+			if (efuse->rfe_option == 1)
+				rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x28161500);
+			else
+				rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x28160cc0);
+			rtw_write32(rtwdev, REG_RFECTL_A, 0x00300000);
+			rtw_write32(rtwdev, REG_RFECTL_A, 0x00100000);
+			mdelay(5);
+			rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x3c000000);
+			rtw_write32(rtwdev, REG_RFECTL_A, 0x00000000);
+		}
+
+		if (tx1_finish) {
+			/* [31] = 0 --> Page C */
+			rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+			rtw_write32_mask(rtwdev, REG_IQK_COM00, 0x03FF8000,
+					 tx_x1 & 0x000007ff);
+			rtw_write32_mask(rtwdev, REG_IQK_COM00, 0x000007FF,
+					 tx_y1 & 0x000007ff);
+			/* [31] = 1 --> Page C1 */
+			rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+			if (efuse->rfe_option == 1)
+				rtw_write32(rtwdev, REG_RXPITMB, 0x28161500);
+			else
+				rtw_write32(rtwdev, REG_RXPITMB, 0x28160ca0);
+			rtw_write32(rtwdev, REG_RFECTL_B, 0x00300000);
+			rtw_write32(rtwdev, REG_RFECTL_B, 0x00100000);
+			mdelay(5);
+			rtw_write32(rtwdev, REG_RXPITMB, 0x3c000000);
+			rtw_write32(rtwdev, REG_RFECTL_B, 0x00000000);
+		}
+
+		for (delay_count = 0; delay_count < 20; delay_count++) {
+			if (!rx0_finish && tx0_finish)
+				iqk0_ready = rtw_read32_mask(rtwdev,
+							     REG_IQKA_END,
+							     BIT(10));
+			if (!rx1_finish && tx1_finish)
+				iqk1_ready = rtw_read32_mask(rtwdev,
+							     REG_IQKB_END,
+							     BIT(10));
+			if (iqk0_ready && iqk1_ready)
+				break;
+
+			mdelay(1);
+		}
+
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "RX delay_count = %d\n",
+			delay_count);
+
+		if (delay_count < 20) { /* If 20ms No Result, then cal_retry++ */
+			/* ============RXIQK Check============== */
+			rx0_fail = rtw_read32_mask(rtwdev, REG_IQKA_END, BIT(11));
+			rx1_fail = rtw_read32_mask(rtwdev, REG_IQKB_END, BIT(11));
+
+			if (!(rx0_fail || rx0_finish) && tx0_finish) {
+				rtw_write32(rtwdev, REG_RFECTL_A, 0x06000000);
+				rx_x0_temp[rx0_avg] = rtw_read32_mask(rtwdev,
+								      REG_IQKA_END,
+								      0x07ff0000);
+				rtw_write32(rtwdev, REG_RFECTL_A, 0x08000000);
+				rx_y0_temp[rx0_avg] = rtw_read32_mask(rtwdev,
+								      REG_IQKA_END,
+								      0x07ff0000);
+
+				rtw_dbg(rtwdev, RTW_DBG_RFK,
+					"rx_x0[%d] = %x ;; rx_y0[%d] = %x\n",
+					rx0_avg, rx_x0_temp[rx0_avg],
+					rx0_avg, rx_y0_temp[rx0_avg]);
+
+				rx_x0_temp[rx0_avg] <<= 21;
+				rx_y0_temp[rx0_avg] <<= 21;
+
+				rx0_avg++;
+			} else {
+				rtw_dbg(rtwdev, RTW_DBG_RFK,
+					"1. RXA_cal_retry = %d\n", cal0_retry);
+
+				cal0_retry++;
+				if (cal0_retry == 10)
+					break;
+			}
+
+			if (!(rx1_fail || rx1_finish) && tx1_finish) {
+				rtw_write32(rtwdev, REG_RFECTL_B, 0x06000000);
+				rx_x1_temp[rx1_avg] = rtw_read32_mask(rtwdev,
+								      REG_IQKB_END,
+								      0x07ff0000);
+				rtw_write32(rtwdev, REG_RFECTL_B, 0x08000000);
+				rx_y1_temp[rx1_avg] = rtw_read32_mask(rtwdev,
+								      REG_IQKB_END,
+								      0x07ff0000);
+
+				rtw_dbg(rtwdev, RTW_DBG_RFK,
+					"rx_x1[%d] = %x ;; rx_y1[%d] = %x\n",
+					rx1_avg, rx_x1_temp[rx1_avg],
+					rx1_avg, rx_y1_temp[rx1_avg]);
+
+				rx_x1_temp[rx1_avg] <<= 21;
+				rx_y1_temp[rx1_avg] <<= 21;
+
+				rx1_avg++;
+			} else {
+				cal1_retry++;
+				if (cal1_retry == 10)
+					break;
+			}
+		} else {
+			rtw_dbg(rtwdev, RTW_DBG_RFK,
+				"2. RXA_cal_retry = %d\n", cal0_retry);
+
+			cal0_retry++;
+			cal1_retry++;
+
+			rtw_dbg(rtwdev, RTW_DBG_RFK,
+				"delay 20ms RX IQK Not Ready!!!!!\n");
+
+			if (cal0_retry == 10)
+				break;
+		}
+
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "3. RXA_cal_retry = %d\n",
+			cal0_retry);
+
+		if (rx0_avg >= 2)
+			rx0_finish = rtw88xxa_iqk_finish(rx0_avg, 4,
+							 rx_x0_temp, rx_y0_temp,
+							 &rx_x0, &rx_y0,
+							 true, false);
+
+		if (rx1_avg >= 2)
+			rx1_finish = rtw88xxa_iqk_finish(rx1_avg, 4,
+							 rx_x1_temp, rx_y1_temp,
+							 &rx_x1, &rx_y1,
+							 true, false);
+
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"rx0_average = %d, rx1_average = %d\n",
+			rx0_avg, rx1_avg);
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"rx0_finish = %d, rx1_finish = %d\n",
+			rx0_finish, rx1_finish);
+
+		if ((rx0_finish || !tx0_finish) && (rx1_finish || !tx1_finish))
+			break;
+
+		if ((cal0_retry + rx0_avg) >= 10 ||
+		    (cal1_retry + rx1_avg) >= 10 ||
+		    rx0_avg == 3 || rx1_avg == 3)
+			break;
+	}
+
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "RXA_cal_retry = %d\n", cal0_retry);
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "RXB_cal_retry = %d\n", cal1_retry);
+
+	/* FillIQK Result */
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "========Path_A =======\n");
+
+	if (tx0_finish)
+		rtw8812a_iqk_tx_fill(rtwdev, RF_PATH_A, tx_x0, tx_y0);
+	else
+		rtw8812a_iqk_tx_fill(rtwdev, RF_PATH_A, 0x200, 0x0);
+
+	if (rx0_finish)
+		rtw8812a_iqk_rx_fill(rtwdev, RF_PATH_A, rx_x0, rx_y0);
+	else
+		rtw8812a_iqk_rx_fill(rtwdev, RF_PATH_A, 0x200, 0x0);
+
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "========Path_B =======\n");
+
+	if (tx1_finish)
+		rtw8812a_iqk_tx_fill(rtwdev, RF_PATH_B, tx_x1, tx_y1);
+	else
+		rtw8812a_iqk_tx_fill(rtwdev, RF_PATH_B, 0x200, 0x0);
+
+	if (rx1_finish)
+		rtw8812a_iqk_rx_fill(rtwdev, RF_PATH_B, rx_x1, rx_y1);
+	else
+		rtw8812a_iqk_rx_fill(rtwdev, RF_PATH_B, 0x200, 0x0);
+}
+
+#define MACBB_REG_NUM_8812A 9
+#define AFE_REG_NUM_8812A 12
+#define RF_REG_NUM_8812A 3
+
+static void rtw8812a_do_iqk(struct rtw_dev *rtwdev)
+{
+	static const u32 backup_macbb_reg[MACBB_REG_NUM_8812A] = {
+		0x520, 0x550, 0x808, 0xa04, 0x90c, 0xc00, 0xe00, 0x838, 0x82c
+	};
+	static const u32 backup_afe_reg[AFE_REG_NUM_8812A] = {
+		0xc5c, 0xc60, 0xc64, 0xc68, 0xcb0, 0xcb4,
+		0xe5c, 0xe60, 0xe64, 0xe68, 0xeb0, 0xeb4
+	};
+	static const u32 backup_rf_reg[RF_REG_NUM_8812A] = {
+		0x65, 0x8f, 0x0
+	};
+	u32 macbb_backup[MACBB_REG_NUM_8812A] = {};
+	u32 afe_backup[AFE_REG_NUM_8812A] = {};
+	u32 rfa_backup[RF_REG_NUM_8812A] = {};
+	u32 rfb_backup[RF_REG_NUM_8812A] = {};
+	u32 reg_cb8, reg_eb8;
+
+	rtw88xxa_iqk_backup_mac_bb(rtwdev, macbb_backup,
+				   backup_macbb_reg, MACBB_REG_NUM_8812A);
+
+	rtw_write32_set(rtwdev, REG_CCASEL, BIT(31));
+	reg_cb8 = rtw_read32(rtwdev, REG_RFECTL_A);
+	reg_eb8 = rtw_read32(rtwdev, REG_RFECTL_B);
+	rtw_write32_clr(rtwdev, REG_CCASEL, BIT(31));
+
+	rtw88xxa_iqk_backup_afe(rtwdev, afe_backup,
+				backup_afe_reg, AFE_REG_NUM_8812A);
+	rtw8812a_iqk_backup_rf(rtwdev, rfa_backup, rfb_backup,
+			       backup_rf_reg, RF_REG_NUM_8812A);
+
+	rtw88xxa_iqk_configure_mac(rtwdev);
+
+	rtw8812a_iqk(rtwdev);
+
+	rtw8812a_iqk_restore_rf(rtwdev, RF_PATH_A, backup_rf_reg,
+				rfa_backup, RF_REG_NUM_8812A);
+	rtw8812a_iqk_restore_rf(rtwdev, RF_PATH_B, backup_rf_reg,
+				rfb_backup, RF_REG_NUM_8812A);
+
+	rtw8812a_iqk_restore_afe(rtwdev, afe_backup,
+				 backup_afe_reg, AFE_REG_NUM_8812A);
+
+	rtw_write32_set(rtwdev, REG_CCASEL, BIT(31));
+	rtw_write32(rtwdev, REG_RFECTL_A, reg_cb8);
+	rtw_write32(rtwdev, REG_RFECTL_B, reg_eb8);
+	rtw_write32_clr(rtwdev, REG_CCASEL, BIT(31));
+
+	rtw88xxa_iqk_restore_mac_bb(rtwdev, macbb_backup,
+				    backup_macbb_reg, MACBB_REG_NUM_8812A);
+}
+
+static void rtw8812a_phy_calibration(struct rtw_dev *rtwdev)
+{
+	u8 channel = rtwdev->hal.current_channel;
+
+	rtw8812a_do_iqk(rtwdev);
+
+	/* The official driver wants to do this after connecting
+	 * but before first writing a new igi (phydm_get_new_igi).
+	 * Here seems close enough.
+	 */
+	if (channel >= 36 && channel <= 64)
+		rtw_load_table(rtwdev, &rtw8812a_agc_diff_lb_tbl);
+	else if (channel >= 100)
+		rtw_load_table(rtwdev, &rtw8812a_agc_diff_hb_tbl);
+}
+
+static void rtw8812a_pwr_track(struct rtw_dev *rtwdev)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+
+	if (!dm_info->pwr_trk_triggered) {
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_T_METER,
+			     GENMASK(17, 16), 0x03);
+		dm_info->pwr_trk_triggered = true;
+		return;
+	}
+
+	rtw88xxa_phy_pwrtrack(rtwdev, rtw8812a_do_lck, rtw8812a_do_iqk);
+	dm_info->pwr_trk_triggered = false;
+}
+
+static void rtw8812a_led_set(struct led_classdev *led,
+			     enum led_brightness brightness)
+{
+	struct rtw_dev *rtwdev = container_of(led, struct rtw_dev, led_cdev);
+	u8 ledcfg;
+
+	ledcfg = rtw_read8(rtwdev, REG_LED_CFG);
+	ledcfg &= BIT(6) | BIT(4);
+	ledcfg |= BIT(5);
+
+	if (brightness == LED_OFF)
+		ledcfg |= BIT(3);
+
+	rtw_write8(rtwdev, REG_LED_CFG, ledcfg);
+}
+
+static void rtw8812a_fill_txdesc_checksum(struct rtw_dev *rtwdev,
+					  struct rtw_tx_pkt_info *pkt_info,
+					  u8 *txdesc)
+{
+	fill_txdesc_checksum_common(txdesc, 16);
+}
+
+static void rtw8812a_coex_cfg_init(struct rtw_dev *rtwdev)
+{
+}
+
+static void rtw8812a_coex_cfg_gnt_fix(struct rtw_dev *rtwdev)
+{
+}
+
+static void rtw8821a_coex_cfg_rfe_type(struct rtw_dev *rtwdev)
+{
+}
+
+static void rtw8821a_coex_cfg_wl_tx_power(struct rtw_dev *rtwdev, u8 wl_pwr)
+{
+}
+
+static void rtw8821a_coex_cfg_wl_rx_gain(struct rtw_dev *rtwdev, bool low_gain)
+{
+}
+
+static const struct rtw_chip_ops rtw8812a_ops = {
+	.power_on		= rtw88xxa_power_on,
+	.power_off		= rtw8812a_power_off,
+	.phy_set_param		= NULL,
+	.read_efuse		= rtw88xxa_read_efuse,
+	.query_phy_status	= rtw8812a_query_phy_status,
+	.set_channel		= rtw88xxa_set_channel,
+	.mac_init		= NULL,
+	.read_rf		= rtw88xxa_phy_read_rf,
+	.write_rf		= rtw_phy_write_rf_reg_sipi,
+	.set_antenna		= NULL,
+	.set_tx_power_index	= rtw88xxa_set_tx_power_index,
+	.cfg_ldo25		= rtw8812a_cfg_ldo25,
+	.efuse_grant		= rtw88xxa_efuse_grant,
+	.set_ampdu_factor	= rtw8812a_set_ampdu_factor,
+	.false_alarm_statistics	= rtw88xxa_false_alarm_statistics,
+	.phy_calibration	= rtw8812a_phy_calibration,
+	.cck_pd_set		= rtw88xxa_phy_cck_pd_set,
+	.pwr_track		= rtw8812a_pwr_track,
+	.config_bfee		= NULL,
+	.set_gid_table		= NULL,
+	.cfg_csi_rate		= NULL,
+	.led_set		= rtw8812a_led_set,
+	.fill_txdesc_checksum	= rtw8812a_fill_txdesc_checksum,
+	.coex_set_init		= rtw8812a_coex_cfg_init,
+	.coex_set_ant_switch	= NULL,
+	.coex_set_gnt_fix	= rtw8812a_coex_cfg_gnt_fix,
+	.coex_set_gnt_debug	= NULL,
+	.coex_set_rfe_type	= rtw8821a_coex_cfg_rfe_type,
+	.coex_set_wl_tx_power	= rtw8821a_coex_cfg_wl_tx_power,
+	.coex_set_wl_rx_gain	= rtw8821a_coex_cfg_wl_rx_gain,
+};
+
+static const struct rtw_page_table page_table_8812a[] = {
+	/* hq_num, nq_num, lq_num, exq_num, gapq_num */
+	{0, 0, 0, 0, 0},	/* SDIO */
+	{0, 0, 0, 0, 0},	/* PCI */
+	{16, 0, 0, 0, 1},	/* 2 bulk out endpoints */
+	{16, 0, 16, 0, 1},	/* 3 bulk out endpoints */
+	{16, 0, 16, 0, 1},	/* 4 bulk out endpoints */
+};
+
+static const struct rtw_rqpn rqpn_table_8812a[] = {
+	{RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
+
+	{RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
+
+	{RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH,
+	 RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH},
+
+	{RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH},
+
+	{RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
+};
+
+static const struct rtw_prioq_addrs prioq_addrs_8812a = {
+	.prio[RTW_DMA_MAPPING_EXTRA] = {
+		.rsvd = REG_RQPN_NPQ + 2, .avail = REG_RQPN_NPQ + 3,
+	},
+	.prio[RTW_DMA_MAPPING_LOW] = {
+		.rsvd = REG_RQPN + 1, .avail = REG_FIFOPAGE_CTRL_2 + 1,
+	},
+	.prio[RTW_DMA_MAPPING_NORMAL] = {
+		.rsvd = REG_RQPN_NPQ, .avail = REG_RQPN_NPQ + 1,
+	},
+	.prio[RTW_DMA_MAPPING_HIGH] = {
+		.rsvd = REG_RQPN, .avail = REG_FIFOPAGE_CTRL_2,
+	},
+	.wsize = false,
+};
+
+static const struct rtw_hw_reg rtw8812a_dig[] = {
+	[0] = { .addr = REG_RXIGI_A, .mask = 0x7f },
+	[1] = { .addr = REG_RXIGI_B, .mask = 0x7f },
+};
+
+static const struct rtw_rfe_def rtw8812a_rfe_defs[] = {
+	[0] = { .phy_pg_tbl	= &rtw8812a_bb_pg_tbl,
+		.txpwr_lmt_tbl	= &rtw8812a_txpwr_lmt_tbl,
+		.pwr_track_tbl	= &rtw8812a_rtw_pwr_track_tbl, },
+	[1] = { .phy_pg_tbl	= &rtw8812a_bb_pg_tbl,
+		.txpwr_lmt_tbl	= &rtw8812a_txpwr_lmt_tbl,
+		.pwr_track_tbl	= &rtw8812a_rtw_pwr_track_tbl, },
+	[2] = { .phy_pg_tbl	= &rtw8812a_bb_pg_tbl,
+		.txpwr_lmt_tbl	= &rtw8812a_txpwr_lmt_tbl,
+		.pwr_track_tbl	= &rtw8812a_rtw_pwr_track_tbl, },
+	[3] = { .phy_pg_tbl	= &rtw8812a_bb_pg_rfe3_tbl,
+		.txpwr_lmt_tbl	= &rtw8812a_txpwr_lmt_tbl,
+		.pwr_track_tbl	= &rtw8812a_rtw_pwr_track_rfe3_tbl, },
+};
+
+static const u8 wl_rssi_step_8812a[] = {101, 45, 101, 40};
+static const u8 bt_rssi_step_8812a[] = {101, 101, 101, 101};
+
+static const struct coex_rf_para rf_para_tx_8812a[] = {
+	{0, 0, false, 7},  /* for normal */
+	{0, 20, false, 7}, /* for WL-CPT */
+	{8, 17, true, 4},
+	{7, 18, true, 4},
+	{6, 19, true, 4},
+	{5, 20, true, 4}
+};
+
+static const struct coex_rf_para rf_para_rx_8812a[] = {
+	{0, 0, false, 7},  /* for normal */
+	{0, 20, false, 7}, /* for WL-CPT */
+	{3, 24, true, 5},
+	{2, 26, true, 5},
+	{1, 27, true, 5},
+	{0, 28, true, 5}
+};
+
+static_assert(ARRAY_SIZE(rf_para_tx_8812a) == ARRAY_SIZE(rf_para_rx_8812a));
+
+const struct rtw_chip_info rtw8812a_hw_spec = {
+	.ops = &rtw8812a_ops,
+	.id = RTW_CHIP_TYPE_8812A,
+	.fw_name = "rtw88/rtw8812a_fw.bin",
+	.wlan_cpu = RTW_WCPU_11N,
+	.tx_pkt_desc_sz = 40,
+	.tx_buf_desc_sz = 16,
+	.rx_pkt_desc_sz = 24,
+	.rx_buf_desc_sz = 8,
+	.phy_efuse_size = 512,
+	.log_efuse_size = 512,
+	.ptct_efuse_size = 0,
+	.txff_size = 131072,
+	.rxff_size = 16128,
+	.rsvd_drv_pg_num = 9,
+	.txgi_factor = 1,
+	.is_pwr_by_rate_dec = true,
+	.max_power_index = 0x3f,
+	.csi_buf_pg_num = 0,
+	.band = RTW_BAND_2G | RTW_BAND_5G,
+	.page_size = 512,
+	.dig_min = 0x20,
+	.ht_supported = true,
+	.vht_supported = true,
+	.lps_deep_mode_supported = 0,
+	.sys_func_en = 0xFD,
+	.pwr_on_seq = card_enable_flow_8812a,
+	.pwr_off_seq = card_disable_flow_8812a,
+	.page_table = page_table_8812a,
+	.rqpn_table = rqpn_table_8812a,
+	.prioq_addrs = &prioq_addrs_8812a,
+	.intf_table = NULL,
+	.dig = rtw8812a_dig,
+	.rf_sipi_addr = {REG_LSSI_WRITE_A, REG_LSSI_WRITE_B},
+	.ltecoex_addr = NULL,
+	.mac_tbl = &rtw8812a_mac_tbl,
+	.agc_tbl = &rtw8812a_agc_tbl,
+	.bb_tbl = &rtw8812a_bb_tbl,
+	.rf_tbl = {&rtw8812a_rf_a_tbl, &rtw8812a_rf_b_tbl},
+	.rfe_defs = rtw8812a_rfe_defs,
+	.rfe_defs_size = ARRAY_SIZE(rtw8812a_rfe_defs),
+	.rx_ldpc = false,
+	.amsdu_in_ampdu = true,
+	.hw_feature_report = false,
+	.c2h_ra_report_size = 4,
+	.old_datarate_fb_limit = true,
+	.usb_tx_agg_desc_num = 1,
+	.iqk_threshold = 8,
+	.ampdu_density = IEEE80211_HT_MPDU_DENSITY_16,
+	.max_scan_ie_len = IEEE80211_MAX_DATA_LEN,
+
+	.coex_para_ver = 0, /* no coex code in 8812au driver */
+	.bt_desired_ver = 0,
+	.scbd_support = false,
+	.new_scbd10_def = false,
+	.ble_hid_profile_support = false,
+	.wl_mimo_ps_support = false,
+	.pstdma_type = COEX_PSTDMA_FORCE_LPSOFF,
+	.bt_rssi_type = COEX_BTRSSI_RATIO,
+	.ant_isolation = 15,
+	.rssi_tolerance = 2,
+	.wl_rssi_step = wl_rssi_step_8812a,
+	.bt_rssi_step = bt_rssi_step_8812a,
+	.table_sant_num = 0,
+	.table_sant = NULL,
+	.table_nsant_num = 0,
+	.table_nsant = NULL,
+	.tdma_sant_num = 0,
+	.tdma_sant = NULL,
+	.tdma_nsant_num = 0,
+	.tdma_nsant = NULL,
+	.wl_rf_para_num = ARRAY_SIZE(rf_para_tx_8812a),
+	.wl_rf_para_tx = rf_para_tx_8812a,
+	.wl_rf_para_rx = rf_para_rx_8812a,
+	.bt_afh_span_bw20 = 0x20,
+	.bt_afh_span_bw40 = 0x30,
+	.afh_5g_num = 0,
+	.afh_5g = NULL,
+	.coex_info_hw_regs_num = 0,
+	.coex_info_hw_regs = NULL,
+};
+EXPORT_SYMBOL(rtw8812a_hw_spec);
+
+MODULE_FIRMWARE("rtw88/rtw8812a_fw.bin");
+
+MODULE_AUTHOR("Realtek Corporation");
+MODULE_DESCRIPTION("Realtek 802.11ac wireless 8812a driver");
+MODULE_LICENSE("Dual BSD/GPL");
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8812a.h b/drivers/net/wireless/realtek/rtw88/rtw8812a.h
new file mode 100644
index 000000000000..82dab59e341d
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8812a.h
@@ -0,0 +1,10 @@
+/* SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause */
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#ifndef __RTW8812A_H__
+#define __RTW8812A_H__
+
+extern const struct rtw_chip_info rtw8812a_hw_spec;
+
+#endif
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8812a_table.c b/drivers/net/wireless/realtek/rtw88/rtw8812a_table.c
new file mode 100644
index 000000000000..048efbbd49ed
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8812a_table.c
@@ -0,0 +1,2812 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#include "main.h"
+#include "phy.h"
+#include "rtw8812a_table.h"
+
+static const u32 rtw8812a_mac[] = {
+	0x010, 0x0000000C,
+	0x80000200,	0x00000000,	0x40000000,	0x00000000,
+	0x011, 0x00000066,
+	0xA0000000,	0x00000000,
+	0x011, 0x0000005A,
+	0xB0000000,	0x00000000,
+	0x025, 0x0000000F,
+	0x072, 0x00000000,
+	0x420, 0x00000080,
+	0x428, 0x0000000A,
+	0x429, 0x00000010,
+	0x430, 0x00000000,
+	0x431, 0x00000000,
+	0x432, 0x00000000,
+	0x433, 0x00000001,
+	0x434, 0x00000002,
+	0x435, 0x00000003,
+	0x436, 0x00000005,
+	0x437, 0x00000007,
+	0x438, 0x00000000,
+	0x439, 0x00000000,
+	0x43A, 0x00000000,
+	0x43B, 0x00000001,
+	0x43C, 0x00000002,
+	0x43D, 0x00000003,
+	0x43E, 0x00000005,
+	0x43F, 0x00000007,
+	0x440, 0x0000005D,
+	0x441, 0x00000001,
+	0x442, 0x00000000,
+	0x444, 0x00000010,
+	0x445, 0x00000000,
+	0x446, 0x00000000,
+	0x447, 0x00000000,
+	0x448, 0x00000000,
+	0x449, 0x000000F0,
+	0x44A, 0x0000000F,
+	0x44B, 0x0000003E,
+	0x44C, 0x00000010,
+	0x44D, 0x00000000,
+	0x44E, 0x00000000,
+	0x44F, 0x00000000,
+	0x450, 0x00000000,
+	0x451, 0x000000F0,
+	0x452, 0x0000000F,
+	0x453, 0x00000000,
+	0x45B, 0x00000080,
+	0x460, 0x00000066,
+	0x461, 0x00000066,
+	0x4C8, 0x000000FF,
+	0x4C9, 0x00000008,
+	0x4CC, 0x000000FF,
+	0x4CD, 0x000000FF,
+	0x4CE, 0x00000001,
+	0x500, 0x00000026,
+	0x501, 0x000000A2,
+	0x502, 0x0000002F,
+	0x503, 0x00000000,
+	0x504, 0x00000028,
+	0x505, 0x000000A3,
+	0x506, 0x0000005E,
+	0x507, 0x00000000,
+	0x508, 0x0000002B,
+	0x509, 0x000000A4,
+	0x50A, 0x0000005E,
+	0x50B, 0x00000000,
+	0x50C, 0x0000004F,
+	0x50D, 0x000000A4,
+	0x50E, 0x00000000,
+	0x50F, 0x00000000,
+	0x512, 0x0000001C,
+	0x514, 0x0000000A,
+	0x516, 0x0000000A,
+	0x525, 0x0000004F,
+	0x550, 0x00000010,
+	0x551, 0x00000010,
+	0x559, 0x00000002,
+	0x55C, 0x00000050,
+	0x55D, 0x000000FF,
+	0x604, 0x00000009,
+	0x605, 0x00000030,
+	0x607, 0x00000003,
+	0x608, 0x0000000E,
+	0x609, 0x0000002A,
+	0x620, 0x000000FF,
+	0x621, 0x000000FF,
+	0x622, 0x000000FF,
+	0x623, 0x000000FF,
+	0x624, 0x000000FF,
+	0x625, 0x000000FF,
+	0x626, 0x000000FF,
+	0x627, 0x000000FF,
+	0x638, 0x00000050,
+	0x63C, 0x0000000A,
+	0x63D, 0x0000000A,
+	0x63E, 0x0000000E,
+	0x63F, 0x0000000E,
+	0x640, 0x00000080,
+	0x642, 0x00000040,
+	0x643, 0x00000000,
+	0x652, 0x000000C8,
+	0x66E, 0x00000005,
+	0x700, 0x00000021,
+	0x701, 0x00000043,
+	0x702, 0x00000065,
+	0x703, 0x00000087,
+	0x708, 0x00000021,
+	0x709, 0x00000043,
+	0x70A, 0x00000065,
+	0x70B, 0x00000087,
+	0x718, 0x00000040,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8812a_mac, rtw_phy_cfg_mac);
+
+static const u32 rtw8812a_agc[] = {
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFC000001,
+	0x81C, 0xFB020001,
+	0x81C, 0xFA040001,
+	0x81C, 0xF9060001,
+	0x81C, 0xF8080001,
+	0x81C, 0xF70A0001,
+	0x81C, 0xF60C0001,
+	0x81C, 0xF50E0001,
+	0x81C, 0xF4100001,
+	0x81C, 0xF3120001,
+	0x81C, 0xF2140001,
+	0x81C, 0xF1160001,
+	0x81C, 0xF0180001,
+	0x81C, 0xEF1A0001,
+	0x81C, 0xEE1C0001,
+	0x81C, 0xED1E0001,
+	0x81C, 0xEC200001,
+	0x81C, 0xEB220001,
+	0x81C, 0xEA240001,
+	0x81C, 0xCD260001,
+	0x81C, 0xCC280001,
+	0x81C, 0xCB2A0001,
+	0x81C, 0xCA2C0001,
+	0x81C, 0xC92E0001,
+	0x81C, 0xC8300001,
+	0x81C, 0xA6320001,
+	0x81C, 0xA5340001,
+	0x81C, 0xA4360001,
+	0x81C, 0xA3380001,
+	0x81C, 0xA23A0001,
+	0x81C, 0x883C0001,
+	0x81C, 0x873E0001,
+	0x81C, 0x86400001,
+	0x81C, 0x85420001,
+	0x81C, 0x84440001,
+	0x81C, 0x83460001,
+	0x81C, 0x82480001,
+	0x81C, 0x814A0001,
+	0x81C, 0x484C0001,
+	0x81C, 0x474E0001,
+	0x81C, 0x46500001,
+	0x81C, 0x45520001,
+	0x81C, 0x44540001,
+	0x81C, 0x43560001,
+	0x81C, 0x42580001,
+	0x81C, 0x415A0001,
+	0x81C, 0x255C0001,
+	0x81C, 0x245E0001,
+	0x81C, 0x23600001,
+	0x81C, 0x22620001,
+	0x81C, 0x21640001,
+	0x81C, 0x21660001,
+	0x81C, 0x21680001,
+	0x81C, 0x216A0001,
+	0x81C, 0x216C0001,
+	0x81C, 0x216E0001,
+	0x81C, 0x21700001,
+	0x81C, 0x21720001,
+	0x81C, 0x21740001,
+	0x81C, 0x21760001,
+	0x81C, 0x21780001,
+	0x81C, 0x217A0001,
+	0x81C, 0x217C0001,
+	0x81C, 0x217E0001,
+	0x90000001,	0x00000005,	0x40000000,	0x00000000,
+	0x81C, 0xF9000001,
+	0x81C, 0xF8020001,
+	0x81C, 0xF7040001,
+	0x81C, 0xF6060001,
+	0x81C, 0xF5080001,
+	0x81C, 0xF40A0001,
+	0x81C, 0xF30C0001,
+	0x81C, 0xF20E0001,
+	0x81C, 0xF1100001,
+	0x81C, 0xF0120001,
+	0x81C, 0xEF140001,
+	0x81C, 0xEE160001,
+	0x81C, 0xED180001,
+	0x81C, 0xEC1A0001,
+	0x81C, 0xEB1C0001,
+	0x81C, 0xEA1E0001,
+	0x81C, 0xCD200001,
+	0x81C, 0xCC220001,
+	0x81C, 0xCB240001,
+	0x81C, 0xCA260001,
+	0x81C, 0xC9280001,
+	0x81C, 0xC82A0001,
+	0x81C, 0xC72C0001,
+	0x81C, 0xC62E0001,
+	0x81C, 0xA5300001,
+	0x81C, 0xA4320001,
+	0x81C, 0xA3340001,
+	0x81C, 0xA2360001,
+	0x81C, 0x88380001,
+	0x81C, 0x873A0001,
+	0x81C, 0x863C0001,
+	0x81C, 0x853E0001,
+	0x81C, 0x84400001,
+	0x81C, 0x83420001,
+	0x81C, 0x82440001,
+	0x81C, 0x81460001,
+	0x81C, 0x48480001,
+	0x81C, 0x474A0001,
+	0x81C, 0x464C0001,
+	0x81C, 0x454E0001,
+	0x81C, 0x44500001,
+	0x81C, 0x43520001,
+	0x81C, 0x42540001,
+	0x81C, 0x41560001,
+	0x81C, 0x25580001,
+	0x81C, 0x245A0001,
+	0x81C, 0x235C0001,
+	0x81C, 0x225E0001,
+	0x81C, 0x21600001,
+	0x81C, 0x21620001,
+	0x81C, 0x21640001,
+	0x81C, 0x21660001,
+	0x81C, 0x21680001,
+	0x81C, 0x216A0001,
+	0x81C, 0x236C0001,
+	0x81C, 0x226E0001,
+	0x81C, 0x21700001,
+	0x81C, 0x21720001,
+	0x81C, 0x21740001,
+	0x81C, 0x21760001,
+	0x81C, 0x21780001,
+	0x81C, 0x217A0001,
+	0x81C, 0x217C0001,
+	0x81C, 0x217E0001,
+	0xA0000000,	0x00000000,
+	0x81C, 0xFF000001,
+	0x81C, 0xFF020001,
+	0x81C, 0xFF040001,
+	0x81C, 0xFF060001,
+	0x81C, 0xFF080001,
+	0x81C, 0xFE0A0001,
+	0x81C, 0xFD0C0001,
+	0x81C, 0xFC0E0001,
+	0x81C, 0xFB100001,
+	0x81C, 0xFA120001,
+	0x81C, 0xF9140001,
+	0x81C, 0xF8160001,
+	0x81C, 0xF7180001,
+	0x81C, 0xF61A0001,
+	0x81C, 0xF51C0001,
+	0x81C, 0xF41E0001,
+	0x81C, 0xF3200001,
+	0x81C, 0xF2220001,
+	0x81C, 0xF1240001,
+	0x81C, 0xF0260001,
+	0x81C, 0xEF280001,
+	0x81C, 0xEE2A0001,
+	0x81C, 0xED2C0001,
+	0x81C, 0xEC2E0001,
+	0x81C, 0xEB300001,
+	0x81C, 0xEA320001,
+	0x81C, 0xE9340001,
+	0x81C, 0xE8360001,
+	0x81C, 0xE7380001,
+	0x81C, 0xE63A0001,
+	0x81C, 0xE53C0001,
+	0x81C, 0xC73E0001,
+	0x81C, 0xC6400001,
+	0x81C, 0xC5420001,
+	0x81C, 0xC4440001,
+	0x81C, 0xC3460001,
+	0x81C, 0xC2480001,
+	0x81C, 0xC14A0001,
+	0x81C, 0xA74C0001,
+	0x81C, 0xA64E0001,
+	0x81C, 0xA5500001,
+	0x81C, 0xA4520001,
+	0x81C, 0xA3540001,
+	0x81C, 0xA2560001,
+	0x81C, 0xA1580001,
+	0x81C, 0x675A0001,
+	0x81C, 0x665C0001,
+	0x81C, 0x655E0001,
+	0x81C, 0x64600001,
+	0x81C, 0x63620001,
+	0x81C, 0x48640001,
+	0x81C, 0x47660001,
+	0x81C, 0x46680001,
+	0x81C, 0x456A0001,
+	0x81C, 0x446C0001,
+	0x81C, 0x436E0001,
+	0x81C, 0x42700001,
+	0x81C, 0x41720001,
+	0x81C, 0x41740001,
+	0x81C, 0x41760001,
+	0x81C, 0x41780001,
+	0x81C, 0x417A0001,
+	0x81C, 0x417C0001,
+	0x81C, 0x417E0001,
+	0xB0000000,	0x00000000,
+	0x80000004,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFC800001,
+	0x81C, 0xFB820001,
+	0x81C, 0xFA840001,
+	0x81C, 0xF9860001,
+	0x81C, 0xF8880001,
+	0x81C, 0xF78A0001,
+	0x81C, 0xF68C0001,
+	0x81C, 0xF58E0001,
+	0x81C, 0xF4900001,
+	0x81C, 0xF3920001,
+	0x81C, 0xF2940001,
+	0x81C, 0xF1960001,
+	0x81C, 0xF0980001,
+	0x81C, 0xEF9A0001,
+	0x81C, 0xEE9C0001,
+	0x81C, 0xED9E0001,
+	0x81C, 0xECA00001,
+	0x81C, 0xEBA20001,
+	0x81C, 0xEAA40001,
+	0x81C, 0xE9A60001,
+	0x81C, 0xE8A80001,
+	0x81C, 0xE7AA0001,
+	0x81C, 0xE6AC0001,
+	0x81C, 0xE5AE0001,
+	0x81C, 0xE4B00001,
+	0x81C, 0xE3B20001,
+	0x81C, 0xA8B40001,
+	0x81C, 0xA7B60001,
+	0x81C, 0xA6B80001,
+	0x81C, 0xA5BA0001,
+	0x81C, 0xA4BC0001,
+	0x81C, 0xA3BE0001,
+	0x81C, 0xA2C00001,
+	0x81C, 0xA1C20001,
+	0x81C, 0x68C40001,
+	0x81C, 0x67C60001,
+	0x81C, 0x66C80001,
+	0x81C, 0x65CA0001,
+	0x81C, 0x64CC0001,
+	0x81C, 0x47CE0001,
+	0x81C, 0x46D00001,
+	0x81C, 0x45D20001,
+	0x81C, 0x44D40001,
+	0x81C, 0x43D60001,
+	0x81C, 0x42D80001,
+	0x81C, 0x08DA0001,
+	0x81C, 0x07DC0001,
+	0x81C, 0x06DE0001,
+	0x81C, 0x05E00001,
+	0x81C, 0x04E20001,
+	0x81C, 0x03E40001,
+	0x81C, 0x02E60001,
+	0x81C, 0x01E80001,
+	0x81C, 0x01EA0001,
+	0x81C, 0x01EC0001,
+	0x81C, 0x01EE0001,
+	0x81C, 0x01F00001,
+	0x81C, 0x01F20001,
+	0x81C, 0x01F40001,
+	0x81C, 0x01F60001,
+	0x81C, 0x01F80001,
+	0x81C, 0x01FA0001,
+	0x81C, 0x01FC0001,
+	0x81C, 0x01FE0001,
+	0xA0000000,	0x00000000,
+	0x81C, 0xFF800001,
+	0x81C, 0xFF820001,
+	0x81C, 0xFF840001,
+	0x81C, 0xFE860001,
+	0x81C, 0xFD880001,
+	0x81C, 0xFC8A0001,
+	0x81C, 0xFB8C0001,
+	0x81C, 0xFA8E0001,
+	0x81C, 0xF9900001,
+	0x81C, 0xF8920001,
+	0x81C, 0xF7940001,
+	0x81C, 0xF6960001,
+	0x81C, 0xF5980001,
+	0x81C, 0xF49A0001,
+	0x81C, 0xF39C0001,
+	0x81C, 0xF29E0001,
+	0x81C, 0xF1A00001,
+	0x81C, 0xF0A20001,
+	0x81C, 0xEFA40001,
+	0x81C, 0xEEA60001,
+	0x81C, 0xEDA80001,
+	0x81C, 0xECAA0001,
+	0x81C, 0xEBAC0001,
+	0x81C, 0xEAAE0001,
+	0x81C, 0xE9B00001,
+	0x81C, 0xE8B20001,
+	0x81C, 0xE7B40001,
+	0x81C, 0xE6B60001,
+	0x81C, 0xE5B80001,
+	0x81C, 0xE4BA0001,
+	0x81C, 0xE3BC0001,
+	0x81C, 0xA8BE0001,
+	0x81C, 0xA7C00001,
+	0x81C, 0xA6C20001,
+	0x81C, 0xA5C40001,
+	0x81C, 0xA4C60001,
+	0x81C, 0xA3C80001,
+	0x81C, 0xA2CA0001,
+	0x81C, 0xA1CC0001,
+	0x81C, 0x68CE0001,
+	0x81C, 0x67D00001,
+	0x81C, 0x66D20001,
+	0x81C, 0x65D40001,
+	0x81C, 0x64D60001,
+	0x81C, 0x47D80001,
+	0x81C, 0x46DA0001,
+	0x81C, 0x45DC0001,
+	0x81C, 0x44DE0001,
+	0x81C, 0x43E00001,
+	0x81C, 0x42E20001,
+	0x81C, 0x08E40001,
+	0x81C, 0x07E60001,
+	0x81C, 0x06E80001,
+	0x81C, 0x05EA0001,
+	0x81C, 0x04EC0001,
+	0x81C, 0x03EE0001,
+	0x81C, 0x02F00001,
+	0x81C, 0x01F20001,
+	0x81C, 0x01F40001,
+	0x81C, 0x01F60001,
+	0x81C, 0x01F80001,
+	0x81C, 0x01FA0001,
+	0x81C, 0x01FC0001,
+	0x81C, 0x01FE0001,
+	0xB0000000,	0x00000000,
+	0xC50, 0x00000022,
+	0xC50, 0x00000020,
+	0xE50, 0x00000022,
+	0xE50, 0x00000020,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8812a_agc, rtw_phy_cfg_agc);
+
+static const u32 rtw8812a_agc_diff_lb[] = {
+	0x80000004,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0x47CE0001,
+	0x81C, 0x46D00001,
+	0x81C, 0x45D20001,
+	0x81C, 0x44D40001,
+	0x81C, 0x43D60001,
+	0x81C, 0x42D80001,
+	0x81C, 0x08DA0001,
+	0x81C, 0x07DC0001,
+	0x81C, 0x06DE0001,
+	0x81C, 0x05E00001,
+	0x81C, 0x04E20001,
+	0x81C, 0x03E40001,
+	0x81C, 0x02E60001,
+	0xA0000000,	0x00000000,
+	0x81C, 0x47D80001,
+	0x81C, 0x46DA0001,
+	0x81C, 0x45DC0001,
+	0x81C, 0x44DE0001,
+	0x81C, 0x43E00001,
+	0x81C, 0x42E20001,
+	0x81C, 0x08E40001,
+	0x81C, 0x07E60001,
+	0x81C, 0x06E80001,
+	0x81C, 0x05EA0001,
+	0x81C, 0x04EC0001,
+	0x81C, 0x03EE0001,
+	0x81C, 0x02F00001,
+	0xB0000000,	0x00000000,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8812a_agc_diff_lb, rtw_phy_cfg_agc);
+
+static const u32 rtw8812a_agc_diff_hb[] = {
+	0x80000004,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0x45CE0001,
+	0x81C, 0x44D00001,
+	0x81C, 0x43D20001,
+	0x81C, 0x42D40001,
+	0x81C, 0x08D60001,
+	0x81C, 0x07D80001,
+	0x81C, 0x06DA0001,
+	0x81C, 0x05DC0001,
+	0x81C, 0x04DE0001,
+	0x81C, 0x03E00001,
+	0x81C, 0x02E20001,
+	0x81C, 0x01E40001,
+	0x81C, 0x01E60001,
+	0xA0000000,	0x00000000,
+	0x81C, 0x45D80001,
+	0x81C, 0x44DA0001,
+	0x81C, 0x43DC0001,
+	0x81C, 0x42DE0001,
+	0x81C, 0x08E00001,
+	0x81C, 0x07E20001,
+	0x81C, 0x06E40001,
+	0x81C, 0x05E60001,
+	0x81C, 0x04E80001,
+	0x81C, 0x03EA0001,
+	0x81C, 0x02EC0001,
+	0x81C, 0x01EE0001,
+	0x81C, 0x01F00001,
+	0xB0000000,	0x00000000,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8812a_agc_diff_hb, rtw_phy_cfg_agc);
+
+static const u32 rtw8812a_bb[] = {
+	0x800, 0x8020D010,
+	0x804, 0x080112E0,
+	0x808, 0x0E028233,
+	0x80C, 0x12131113,
+	0x810, 0x20101263,
+	0x814, 0x020C3D10,
+	0x818, 0x03A00385,
+	0x820, 0x00000000,
+	0x824, 0x00030FE0,
+	0x828, 0x00000000,
+	0x82C, 0x002083DD,
+	0x830, 0x2EAAEEB8,
+	0x834, 0x0037A706,
+	0x838, 0x06C89B44,
+	0x83C, 0x0000095B,
+	0x840, 0xC0000001,
+	0x844, 0x40003CDE,
+	0x848, 0x6210FF8B,
+	0x84C, 0x6CFDFFB8,
+	0x850, 0x28874706,
+	0x854, 0x0001520C,
+	0x858, 0x8060E000,
+	0x85C, 0x74210168,
+	0x860, 0x6929C321,
+	0x864, 0x79727432,
+	0x868, 0x8CA7A314,
+	0x86C, 0x338C2878,
+	0x870, 0x03333333,
+	0x874, 0x31602C2E,
+	0x878, 0x00003152,
+	0x87C, 0x000FC000,
+	0x8A0, 0x00000013,
+	0x8A4, 0x7F7F7F7F,
+	0x8A8, 0xA202033E,
+	0x8AC, 0x0FF0FA0A,
+	0x8B0, 0x00000600,
+	0x8B4, 0x000FC080,
+	0x8B8, 0x6C10D7FF,
+	0x8BC, 0x4CA520A3,
+	0x8C0, 0x27F00020,
+	0x8C4, 0x00000000,
+	0x8C8, 0x00012D69,
+	0x8CC, 0x08248492,
+	0x8D0, 0x0000B800,
+	0x8DC, 0x00000000,
+	0x8D4, 0x940008A0,
+	0x8D8, 0x290B5612,
+	0x8F8, 0x400002C0,
+	0x8FC, 0x00000000,
+	0x900, 0x00000701,
+	0x90C, 0x00000000,
+	0x910, 0x0000FC00,
+	0x914, 0x00000404,
+	0x918, 0x1C1028C0,
+	0x91C, 0x64B11A1C,
+	0x920, 0xE0767233,
+	0x924, 0x055AA500,
+	0x928, 0x00000004,
+	0x92C, 0xFFFE0000,
+	0x930, 0xFFFFFFFE,
+	0x934, 0x001FFFFF,
+	0x960, 0x00000000,
+	0x964, 0x00000000,
+	0x968, 0x00000000,
+	0x96C, 0x00000000,
+	0x970, 0x801FFFFF,
+	0x978, 0x00000000,
+	0x97C, 0x00000000,
+	0x980, 0x00000000,
+	0x984, 0x00000000,
+	0x988, 0x00000000,
+	0x990, 0x27100000,
+	0x994, 0xFFFF0100,
+	0x998, 0xFFFFFF5C,
+	0x99C, 0xFFFFFFFF,
+	0x9A0, 0x000000FF,
+	0x9A4, 0x00080080,
+	0x9A8, 0x00000000,
+	0x9AC, 0x00000000,
+	0x9B0, 0x81081008,
+	0x9B4, 0x00000000,
+	0x9B8, 0x01081008,
+	0x9BC, 0x01081008,
+	0x9D0, 0x00000000,
+	0x9D4, 0x00000000,
+	0x9D8, 0x00000000,
+	0x9DC, 0x00000000,
+	0x9E4, 0x00000003,
+	0x9E8, 0x000002D5,
+	0xA00, 0x00D047C8,
+	0xA04, 0x01FF000C,
+	0xA08, 0x8C838300,
+	0xA0C, 0x2E7F000F,
+	0xA10, 0x9500BB78,
+	0xA14, 0x11144028,
+	0xA18, 0x00881117,
+	0xA1C, 0x89140F00,
+	0xA20, 0x1A1B0000,
+	0xA24, 0x090E1217,
+	0xA28, 0x00000305,
+	0xA2C, 0x00900000,
+	0xA70, 0x101FFF00,
+	0xA74, 0x00000008,
+	0xA78, 0x00000900,
+	0xA7C, 0x225B0606,
+	0xA80, 0x218075B2,
+	0xA84, 0x001F8C80,
+	0xB00, 0x03100000,
+	0xB04, 0x0000B000,
+	0xB08, 0xAE0201EB,
+	0xB0C, 0x01003207,
+	0xB10, 0x00009807,
+	0xB14, 0x01000000,
+	0xB18, 0x00000002,
+	0xB1C, 0x00000002,
+	0xB20, 0x0000001F,
+	0xB24, 0x03020100,
+	0xB28, 0x07060504,
+	0xB2C, 0x0B0A0908,
+	0xB30, 0x0F0E0D0C,
+	0xB34, 0x13121110,
+	0xB38, 0x17161514,
+	0xB3C, 0x0000003A,
+	0xB40, 0x00000000,
+	0xB44, 0x00000000,
+	0xB48, 0x13000032,
+	0xB4C, 0x48080000,
+	0xB50, 0x00000000,
+	0xB54, 0x00000000,
+	0xB58, 0x00000000,
+	0xB5C, 0x00000000,
+	0xC00, 0x00000007,
+	0xC04, 0x00042020,
+	0xC08, 0x80410231,
+	0xC0C, 0x00000000,
+	0xC10, 0x00000100,
+	0xC14, 0x01000000,
+	0xC1C, 0x40000003,
+	0xC20, 0x12121212,
+	0xC24, 0x12121212,
+	0xC28, 0x12121212,
+	0xC2C, 0x12121212,
+	0xC30, 0x12121212,
+	0xC34, 0x12121212,
+	0xC38, 0x12121212,
+	0xC3C, 0x12121212,
+	0xC40, 0x12121212,
+	0xC44, 0x12121212,
+	0xC48, 0x12121212,
+	0xC4C, 0x12121212,
+	0xC50, 0x00000020,
+	0xC54, 0x0008121C,
+	0xC58, 0x30000C1C,
+	0xC5C, 0x00000058,
+	0xC60, 0x34344443,
+	0xC64, 0x07003333,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0xC68, 0x59791979,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0xC68, 0x59791979,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0xC68, 0x59791979,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0xC68, 0x59791979,
+	0x90000001,	0x00000000,	0x40000000,	0x00000000,
+	0xC68, 0x59791979,
+	0x90000001,	0x00000005,	0x40000000,	0x00000000,
+	0xC68, 0x59791979,
+	0xA0000000,	0x00000000,
+	0xC68, 0x59799979,
+	0xB0000000,	0x00000000,
+	0xC6C, 0x59795979,
+	0xC70, 0x19795979,
+	0xC74, 0x19795979,
+	0xC78, 0x19791979,
+	0xC7C, 0x19791979,
+	0xC80, 0x19791979,
+	0xC84, 0x19791979,
+	0xC94, 0x0100005C,
+	0xC98, 0x00000000,
+	0xC9C, 0x00000000,
+	0xCA0, 0x00000029,
+	0xCA4, 0x08040201,
+	0xCA8, 0x80402010,
+	0xCB0, 0x77547777,
+	0xCB4, 0x00000077,
+	0xCB8, 0x00508242,
+	0xE00, 0x00000007,
+	0xE04, 0x00042020,
+	0xE08, 0x80410231,
+	0xE0C, 0x00000000,
+	0xE10, 0x00000100,
+	0xE14, 0x01000000,
+	0xE1C, 0x40000003,
+	0xE20, 0x12121212,
+	0xE24, 0x12121212,
+	0xE28, 0x12121212,
+	0xE2C, 0x12121212,
+	0xE30, 0x12121212,
+	0xE34, 0x12121212,
+	0xE38, 0x12121212,
+	0xE3C, 0x12121212,
+	0xE40, 0x12121212,
+	0xE44, 0x12121212,
+	0xE48, 0x12121212,
+	0xE4C, 0x12121212,
+	0xE50, 0x00000020,
+	0xE54, 0x0008121C,
+	0xE58, 0x30000C1C,
+	0xE5C, 0x00000058,
+	0xE60, 0x34344443,
+	0xE64, 0x07003333,
+	0xE68, 0x59791979,
+	0xE6C, 0x59795979,
+	0xE70, 0x19795979,
+	0xE74, 0x19795979,
+	0xE78, 0x19791979,
+	0xE7C, 0x19791979,
+	0xE80, 0x19791979,
+	0xE84, 0x19791979,
+	0xE94, 0x0100005C,
+	0xE98, 0x00000000,
+	0xE9C, 0x00000000,
+	0xEA0, 0x00000029,
+	0xEA4, 0x08040201,
+	0xEA8, 0x80402010,
+	0xEB0, 0x77547777,
+	0xEB4, 0x00000077,
+	0xEB8, 0x00508242,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8812a_bb, rtw_phy_cfg_bb);
+
+static const struct rtw_phy_pg_cfg_pair rtw8812a_bb_pg[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x34363840, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x42424444, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x30323638, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x40424444, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x28303236, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x38404242, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x26283034, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x40424444, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x28303236, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x42422426, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x30343840, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x22242628, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x34363840, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x42424444, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x30323638, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x40424444, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x28303236, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x38404242, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x26283034, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x40424444, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x28303236, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x42422426, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x30343840, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x22242628, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x42424444, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x30323640, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x40424444, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x28303236, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x38404242, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x26283034, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x40424444, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x28303236, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x42422426, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x30343840, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x22242628, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x42424444, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x30323640, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x40424444, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x28303236, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x38404242, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x26283034, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x40424444, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x28303236, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x42422426, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x30343840, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x22242628, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8812a_bb_pg);
+
+static const struct rtw_phy_pg_cfg_pair rtw8812a_bb_pg_rfe3[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x32323232, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x28303232, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x32323232, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x28303232, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x32323232, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x26283032, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x32323232, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x28303232, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x32322426, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x32323232, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x24262830, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x32323232, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x28303232, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x32323232, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x28303232, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x32323232, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x26283032, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x32323232, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x28303232, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x32322426, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x32323232, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x24262830, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x32323232, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x28303232, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x32323232, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x24262830, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x32323232, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x24262830, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x32323232, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x24262830, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x32322222, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x28303232, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x22222426, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x32323232, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x28303232, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x32323232, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x24262830, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x32323232, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x24262830, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x32323232, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x24262830, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x32322222, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x28303232, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x22222426, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8812a_bb_pg_rfe3);
+
+static const u32 rtw8812a_rf_a[] = {
+	0x000, 0x00010000,
+	0x018, 0x0001712A,
+	0x056, 0x00051CF2,
+	0x066, 0x00040000,
+	0x01E, 0x00080000,
+	0x089, 0x00000080,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x086, 0x00014B3A,
+	0x90000001,	0x00000005,	0x40000000,	0x00000000,
+	0x086, 0x00014B3A,
+	0xA0000000,	0x00000000,
+	0x086, 0x00014B38,
+	0xB0000000,	0x00000000,
+	0x80000004,	0x00000000,	0x40000000,	0x00000000,
+	0x08B, 0x00080180,
+	0xA0000000,	0x00000000,
+	0x08B, 0x00087180,
+	0xB0000000,	0x00000000,
+	0x0B1, 0x0001FC1A,
+	0x0B3, 0x000F0810,
+	0x0B4, 0x0001A78D,
+	0x0BA, 0x00086180,
+	0x018, 0x00000006,
+	0x0EF, 0x00002000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x03B, 0x0003F218,
+	0x03B, 0x00030A58,
+	0x03B, 0x0002FA58,
+	0x03B, 0x00022590,
+	0x03B, 0x0001FA50,
+	0x03B, 0x00010248,
+	0x03B, 0x00008240,
+	0x90000001,	0x00000005,	0x40000000,	0x00000000,
+	0x03B, 0x0003F218,
+	0x03B, 0x00030A58,
+	0x03B, 0x0002FA58,
+	0x03B, 0x00022590,
+	0x03B, 0x0001FA50,
+	0x03B, 0x00010248,
+	0x03B, 0x00008240,
+	0xA0000000,	0x00000000,
+	0x03B, 0x00038A58,
+	0x03B, 0x00037A58,
+	0x03B, 0x0002A590,
+	0x03B, 0x00027A50,
+	0x03B, 0x00018248,
+	0x03B, 0x00010240,
+	0x03B, 0x00008240,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000100,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0000A4EE,
+	0x034, 0x00009076,
+	0x034, 0x00008073,
+	0x034, 0x00007070,
+	0x034, 0x0000606D,
+	0x034, 0x0000506A,
+	0x034, 0x00004049,
+	0x034, 0x00003046,
+	0x034, 0x00002028,
+	0x034, 0x00001025,
+	0x034, 0x00000022,
+	0xA0000000,	0x00000000,
+	0x034, 0x0000ADF4,
+	0x034, 0x00009DF1,
+	0x034, 0x00008DEE,
+	0x034, 0x00007DEB,
+	0x034, 0x00006DE8,
+	0x034, 0x00005DE5,
+	0x034, 0x00004DE2,
+	0x034, 0x00003CE6,
+	0x034, 0x000024E7,
+	0x034, 0x000014E4,
+	0x034, 0x000004E1,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x0EF, 0x000020A2,
+	0x0DF, 0x00000080,
+	0x035, 0x00000192,
+	0x035, 0x00008192,
+	0x035, 0x00010192,
+	0x036, 0x00000024,
+	0x036, 0x00008024,
+	0x036, 0x00010024,
+	0x036, 0x00018024,
+	0x0EF, 0x00000000,
+	0x051, 0x00000C21,
+	0x052, 0x000006D9,
+	0x053, 0x000FC649,
+	0x054, 0x0000017E,
+	0x0EF, 0x00000002,
+	0x008, 0x00008400,
+	0x018, 0x0001712A,
+	0x0EF, 0x00001000,
+	0x03A, 0x00000080,
+	0x03B, 0x0003A02C,
+	0x03C, 0x00004000,
+	0x03A, 0x00000400,
+	0x03B, 0x0003202C,
+	0x03C, 0x00010000,
+	0x03A, 0x000000A0,
+	0x03B, 0x0002B064,
+	0x03C, 0x00004000,
+	0x03A, 0x000000D8,
+	0x03B, 0x00023070,
+	0x03C, 0x00004000,
+	0x03A, 0x00000468,
+	0x03B, 0x0001B870,
+	0x03C, 0x00010000,
+	0x03A, 0x00000098,
+	0x03B, 0x00012085,
+	0x03C, 0x000E4000,
+	0x03A, 0x00000418,
+	0x03B, 0x0000A080,
+	0x03C, 0x000F0000,
+	0x03A, 0x00000418,
+	0x03B, 0x00002080,
+	0x03C, 0x00010000,
+	0x03A, 0x00000080,
+	0x03B, 0x0007A02C,
+	0x03C, 0x00004000,
+	0x03A, 0x00000400,
+	0x03B, 0x0007202C,
+	0x03C, 0x00010000,
+	0x03A, 0x000000A0,
+	0x03B, 0x0006B064,
+	0x03C, 0x00004000,
+	0x03A, 0x000000D8,
+	0x03B, 0x00063070,
+	0x03C, 0x00004000,
+	0x03A, 0x00000468,
+	0x03B, 0x0005B870,
+	0x03C, 0x00010000,
+	0x03A, 0x00000098,
+	0x03B, 0x00052085,
+	0x03C, 0x000E4000,
+	0x03A, 0x00000418,
+	0x03B, 0x0004A080,
+	0x03C, 0x000F0000,
+	0x03A, 0x00000418,
+	0x03B, 0x00042080,
+	0x03C, 0x00010000,
+	0x03A, 0x00000080,
+	0x03B, 0x000BA02C,
+	0x03C, 0x00004000,
+	0x03A, 0x00000400,
+	0x03B, 0x000B202C,
+	0x03C, 0x00010000,
+	0x03A, 0x000000A0,
+	0x03B, 0x000AB064,
+	0x03C, 0x00004000,
+	0x03A, 0x000000D8,
+	0x03B, 0x000A3070,
+	0x03C, 0x00004000,
+	0x03A, 0x00000468,
+	0x03B, 0x0009B870,
+	0x03C, 0x00010000,
+	0x03A, 0x00000098,
+	0x03B, 0x00092085,
+	0x03C, 0x000E4000,
+	0x03A, 0x00000418,
+	0x03B, 0x0008A080,
+	0x03C, 0x000F0000,
+	0x03A, 0x00000418,
+	0x03B, 0x00082080,
+	0x03C, 0x00010000,
+	0x0EF, 0x00001100,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0004A0B2,
+	0x034, 0x000490AF,
+	0x034, 0x00048070,
+	0x034, 0x0004706D,
+	0x034, 0x00046050,
+	0x034, 0x0004504D,
+	0x034, 0x0004404A,
+	0x034, 0x00043047,
+	0x034, 0x0004200A,
+	0x034, 0x00041007,
+	0x034, 0x00040004,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x034, 0x0004A0B2,
+	0x034, 0x000490AF,
+	0x034, 0x00048070,
+	0x034, 0x0004706D,
+	0x034, 0x0004604D,
+	0x034, 0x0004504A,
+	0x034, 0x00044047,
+	0x034, 0x00043044,
+	0x034, 0x00042007,
+	0x034, 0x00041004,
+	0x034, 0x00040001,
+	0xA0000000,	0x00000000,
+	0x034, 0x0004ADF5,
+	0x034, 0x00049DF2,
+	0x034, 0x00048DEF,
+	0x034, 0x00047DEC,
+	0x034, 0x00046DE9,
+	0x034, 0x00045DE6,
+	0x034, 0x00044DE3,
+	0x034, 0x000438C8,
+	0x034, 0x000428C5,
+	0x034, 0x000418C2,
+	0x034, 0x000408C0,
+	0xB0000000,	0x00000000,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0002A0B2,
+	0x034, 0x000290AF,
+	0x034, 0x00028070,
+	0x034, 0x0002706D,
+	0x034, 0x00026050,
+	0x034, 0x0002504D,
+	0x034, 0x0002404A,
+	0x034, 0x00023047,
+	0x034, 0x0002200A,
+	0x034, 0x00021007,
+	0x034, 0x00020004,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x034, 0x0002A0B4,
+	0x034, 0x000290B1,
+	0x034, 0x00028072,
+	0x034, 0x0002706F,
+	0x034, 0x0002604F,
+	0x034, 0x0002504C,
+	0x034, 0x00024049,
+	0x034, 0x00023046,
+	0x034, 0x00022009,
+	0x034, 0x00021006,
+	0x034, 0x00020003,
+	0xA0000000,	0x00000000,
+	0x034, 0x0002ADF5,
+	0x034, 0x00029DF2,
+	0x034, 0x00028DEF,
+	0x034, 0x00027DEC,
+	0x034, 0x00026DE9,
+	0x034, 0x00025DE6,
+	0x034, 0x00024DE3,
+	0x034, 0x000238C8,
+	0x034, 0x000228C5,
+	0x034, 0x000218C2,
+	0x034, 0x000208C0,
+	0xB0000000,	0x00000000,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0000A0B2,
+	0x034, 0x000090AF,
+	0x034, 0x00008070,
+	0x034, 0x0000706D,
+	0x034, 0x00006050,
+	0x034, 0x0000504D,
+	0x034, 0x0000404A,
+	0x034, 0x00003047,
+	0x034, 0x0000200A,
+	0x034, 0x00001007,
+	0x034, 0x00000004,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x034, 0x0000A0B2,
+	0x034, 0x000090AF,
+	0x034, 0x00008070,
+	0x034, 0x0000706D,
+	0x034, 0x0000604D,
+	0x034, 0x0000504A,
+	0x034, 0x00004047,
+	0x034, 0x00003044,
+	0x034, 0x00002007,
+	0x034, 0x00001004,
+	0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+	0x034, 0x0000AFF7,
+	0x034, 0x00009DF7,
+	0x034, 0x00008DF4,
+	0x034, 0x00007DF1,
+	0x034, 0x00006DEE,
+	0x034, 0x00005DEB,
+	0x034, 0x00004DE8,
+	0x034, 0x000038CC,
+	0x034, 0x000028C9,
+	0x034, 0x000018C6,
+	0x034, 0x000008C3,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000040,
+	0x035, 0x000001D4,
+	0x035, 0x000081D4,
+	0x035, 0x000101D4,
+	0x035, 0x000201B4,
+	0x035, 0x000281B4,
+	0x035, 0x000301B4,
+	0x035, 0x000401B4,
+	0x035, 0x000481B4,
+	0x035, 0x000501B4,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000040,
+	0x035, 0x000001D4,
+	0x035, 0x000081D4,
+	0x035, 0x000101D4,
+	0x035, 0x000201B4,
+	0x035, 0x000281B4,
+	0x035, 0x000301B4,
+	0x035, 0x000401B4,
+	0x035, 0x000481B4,
+	0x035, 0x000501B4,
+	0xA0000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000040,
+	0x035, 0x00000188,
+	0x035, 0x00008147,
+	0x035, 0x00010147,
+	0x035, 0x000201D7,
+	0x035, 0x000281D7,
+	0x035, 0x000301D7,
+	0x035, 0x000401D8,
+	0x035, 0x000481D8,
+	0x035, 0x000501D8,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000010,
+	0x036, 0x00004BFB,
+	0x036, 0x0000CBFB,
+	0x036, 0x00014BFB,
+	0x036, 0x0001CBFB,
+	0x036, 0x00024F4B,
+	0x036, 0x0002CF4B,
+	0x036, 0x00034F4B,
+	0x036, 0x0003CF4B,
+	0x036, 0x00044F4B,
+	0x036, 0x0004CF4B,
+	0x036, 0x00054F4B,
+	0x036, 0x0005CF4B,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000010,
+	0x036, 0x00004BFB,
+	0x036, 0x0000CBFB,
+	0x036, 0x00014BFB,
+	0x036, 0x0001CBFB,
+	0x036, 0x00024F4B,
+	0x036, 0x0002CF4B,
+	0x036, 0x00034F4B,
+	0x036, 0x0003CF4B,
+	0x036, 0x00044F4B,
+	0x036, 0x0004CF4B,
+	0x036, 0x00054F4B,
+	0x036, 0x0005CF4B,
+	0xA0000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000010,
+	0x036, 0x00084EB4,
+	0x036, 0x0008CC35,
+	0x036, 0x00094C35,
+	0x036, 0x0009CC35,
+	0x036, 0x000A4C35,
+	0x036, 0x000ACC35,
+	0x036, 0x000B4C35,
+	0x036, 0x000BCC35,
+	0x036, 0x000C4C34,
+	0x036, 0x000CCC35,
+	0x036, 0x000D4C35,
+	0x036, 0x000DCC35,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x0EF, 0x00000008,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x000002CC,
+	0x03C, 0x00000522,
+	0x03C, 0x00000902,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x03C, 0x000002CC,
+	0x03C, 0x00000522,
+	0x03C, 0x00000902,
+	0xA0000000,	0x00000000,
+	0x03C, 0x000002A8,
+	0x03C, 0x000005A2,
+	0x03C, 0x00000880,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000002,
+	0x0DF, 0x00000080,
+	0x01F, 0x00000064,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x061, 0x000FDD43,
+	0x062, 0x00038F4B,
+	0x063, 0x00032117,
+	0x064, 0x000194AC,
+	0x065, 0x000931D1,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x061, 0x000FDD43,
+	0x062, 0x00038F4B,
+	0x063, 0x00032117,
+	0x064, 0x000194AC,
+	0x065, 0x000931D2,
+	0xA0000000,	0x00000000,
+	0x061, 0x000E5D53,
+	0x062, 0x00038FCD,
+	0x063, 0x000114EB,
+	0x064, 0x000196AC,
+	0x065, 0x000911D7,
+	0xB0000000,	0x00000000,
+	0x008, 0x00008400,
+	0x01C, 0x000739D2,
+	0x0B4, 0x0001E78D,
+	0x018, 0x0001F12A,
+	0xFFE, 0x00000000,
+	0xFFE, 0x00000000,
+	0xFFE, 0x00000000,
+	0xFFE, 0x00000000,
+	0x0B4, 0x0001A78D,
+	0x018, 0x0001712A,
+};
+
+RTW_DECL_TABLE_RF_RADIO(rtw8812a_rf_a, A);
+
+static const u32 rtw8812a_rf_b[] = {
+	0x056, 0x00051CF2,
+	0x066, 0x00040000,
+	0x089, 0x00000080,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x086, 0x00014B3A,
+	0x90000001,	0x00000005,	0x40000000,	0x00000000,
+	0x086, 0x00014B3A,
+	0xA0000000,	0x00000000,
+	0x086, 0x00014B38,
+	0xB0000000,	0x00000000,
+	0x80000004,	0x00000000,	0x40000000,	0x00000000,
+	0x08B, 0x00080180,
+	0xA0000000,	0x00000000,
+	0x08B, 0x00087180,
+	0xB0000000,	0x00000000,
+	0x018, 0x00000006,
+	0x0EF, 0x00002000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x03B, 0x0003F218,
+	0x03B, 0x00030A58,
+	0x03B, 0x0002FA58,
+	0x03B, 0x00022590,
+	0x03B, 0x0001FA50,
+	0x03B, 0x00010248,
+	0x03B, 0x00008240,
+	0x90000001,	0x00000005,	0x40000000,	0x00000000,
+	0x03B, 0x0003F218,
+	0x03B, 0x00030A58,
+	0x03B, 0x0002FA58,
+	0x03B, 0x00022590,
+	0x03B, 0x0001FA50,
+	0x03B, 0x00010248,
+	0x03B, 0x00008240,
+	0xA0000000,	0x00000000,
+	0x03B, 0x00038A58,
+	0x03B, 0x00037A58,
+	0x03B, 0x0002A590,
+	0x03B, 0x00027A50,
+	0x03B, 0x00018248,
+	0x03B, 0x00010240,
+	0x03B, 0x00008240,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000100,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0000A4EE,
+	0x034, 0x00009076,
+	0x034, 0x00008073,
+	0x034, 0x00007070,
+	0x034, 0x0000606D,
+	0x034, 0x0000506A,
+	0x034, 0x00004049,
+	0x034, 0x00003046,
+	0x034, 0x00002028,
+	0x034, 0x00001025,
+	0x034, 0x00000022,
+	0xA0000000,	0x00000000,
+	0x034, 0x0000ADF4,
+	0x034, 0x00009DF1,
+	0x034, 0x00008DEE,
+	0x034, 0x00007DEB,
+	0x034, 0x00006DE8,
+	0x034, 0x00005DE5,
+	0x034, 0x00004DE2,
+	0x034, 0x00003CE6,
+	0x034, 0x000024E7,
+	0x034, 0x000014E4,
+	0x034, 0x000004E1,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x0EF, 0x000020A2,
+	0x0DF, 0x00000080,
+	0x035, 0x00000192,
+	0x035, 0x00008192,
+	0x035, 0x00010192,
+	0x036, 0x00000024,
+	0x036, 0x00008024,
+	0x036, 0x00010024,
+	0x036, 0x00018024,
+	0x0EF, 0x00000000,
+	0x051, 0x00000C21,
+	0x052, 0x000006D9,
+	0x053, 0x000FC649,
+	0x054, 0x0000017E,
+	0x0EF, 0x00000002,
+	0x008, 0x00008400,
+	0x018, 0x0001712A,
+	0x0EF, 0x00001000,
+	0x03A, 0x00000080,
+	0x03B, 0x0003A02C,
+	0x03C, 0x00004000,
+	0x03A, 0x00000400,
+	0x03B, 0x0003202C,
+	0x03C, 0x00010000,
+	0x03A, 0x000000A0,
+	0x03B, 0x0002B064,
+	0x03C, 0x00004000,
+	0x03A, 0x000000D8,
+	0x03B, 0x00023070,
+	0x03C, 0x00004000,
+	0x03A, 0x00000468,
+	0x03B, 0x0001B870,
+	0x03C, 0x00010000,
+	0x03A, 0x00000098,
+	0x03B, 0x00012085,
+	0x03C, 0x000E4000,
+	0x03A, 0x00000418,
+	0x03B, 0x0000A080,
+	0x03C, 0x000F0000,
+	0x03A, 0x00000418,
+	0x03B, 0x00002080,
+	0x03C, 0x00010000,
+	0x03A, 0x00000080,
+	0x03B, 0x0007A02C,
+	0x03C, 0x00004000,
+	0x03A, 0x00000400,
+	0x03B, 0x0007202C,
+	0x03C, 0x00010000,
+	0x03A, 0x000000A0,
+	0x03B, 0x0006B064,
+	0x03C, 0x00004000,
+	0x03A, 0x000000D8,
+	0x03B, 0x00063070,
+	0x03C, 0x00004000,
+	0x03A, 0x00000468,
+	0x03B, 0x0005B870,
+	0x03C, 0x00010000,
+	0x03A, 0x00000098,
+	0x03B, 0x00052085,
+	0x03C, 0x000E4000,
+	0x03A, 0x00000418,
+	0x03B, 0x0004A080,
+	0x03C, 0x000F0000,
+	0x03A, 0x00000418,
+	0x03B, 0x00042080,
+	0x03C, 0x00010000,
+	0x03A, 0x00000080,
+	0x03B, 0x000BA02C,
+	0x03C, 0x00004000,
+	0x03A, 0x00000400,
+	0x03B, 0x000B202C,
+	0x03C, 0x00010000,
+	0x03A, 0x000000A0,
+	0x03B, 0x000AB064,
+	0x03C, 0x00004000,
+	0x03A, 0x000000D8,
+	0x03B, 0x000A3070,
+	0x03C, 0x00004000,
+	0x03A, 0x00000468,
+	0x03B, 0x0009B870,
+	0x03C, 0x00010000,
+	0x03A, 0x00000098,
+	0x03B, 0x00092085,
+	0x03C, 0x000E4000,
+	0x03A, 0x00000418,
+	0x03B, 0x0008A080,
+	0x03C, 0x000F0000,
+	0x03A, 0x00000418,
+	0x03B, 0x00082080,
+	0x03C, 0x00010000,
+	0x0EF, 0x00001100,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0004A0B2,
+	0x034, 0x000490AF,
+	0x034, 0x00048070,
+	0x034, 0x0004706D,
+	0x034, 0x00046050,
+	0x034, 0x0004504D,
+	0x034, 0x0004404A,
+	0x034, 0x00043047,
+	0x034, 0x0004200A,
+	0x034, 0x00041007,
+	0x034, 0x00040004,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x034, 0x0004A0B1,
+	0x034, 0x000490AE,
+	0x034, 0x0004806F,
+	0x034, 0x0004706C,
+	0x034, 0x0004604C,
+	0x034, 0x00045049,
+	0x034, 0x00044046,
+	0x034, 0x00043043,
+	0x034, 0x00042006,
+	0x034, 0x00041003,
+	0x034, 0x00040000,
+	0xA0000000,	0x00000000,
+	0x034, 0x0004ADF5,
+	0x034, 0x00049DF2,
+	0x034, 0x00048DEF,
+	0x034, 0x00047DEC,
+	0x034, 0x00046DE9,
+	0x034, 0x00045DE6,
+	0x034, 0x00044DE3,
+	0x034, 0x000438C8,
+	0x034, 0x000428C5,
+	0x034, 0x000418C2,
+	0x034, 0x000408C0,
+	0xB0000000,	0x00000000,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0002A0B2,
+	0x034, 0x000290AF,
+	0x034, 0x00028070,
+	0x034, 0x0002706D,
+	0x034, 0x00026050,
+	0x034, 0x0002504D,
+	0x034, 0x0002404A,
+	0x034, 0x00023047,
+	0x034, 0x0002200A,
+	0x034, 0x00021007,
+	0x034, 0x00020004,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x034, 0x0002A0B3,
+	0x034, 0x000290B0,
+	0x034, 0x00028071,
+	0x034, 0x0002706E,
+	0x034, 0x0002604E,
+	0x034, 0x0002504B,
+	0x034, 0x00024048,
+	0x034, 0x00023045,
+	0x034, 0x00022008,
+	0x034, 0x00021005,
+	0x034, 0x00020002,
+	0xA0000000,	0x00000000,
+	0x034, 0x0002ADF5,
+	0x034, 0x00029DF2,
+	0x034, 0x00028DEF,
+	0x034, 0x00027DEC,
+	0x034, 0x00026DE9,
+	0x034, 0x00025DE6,
+	0x034, 0x00024DE3,
+	0x034, 0x000238C8,
+	0x034, 0x000228C5,
+	0x034, 0x000218C2,
+	0x034, 0x000208C0,
+	0xB0000000,	0x00000000,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0000A0B2,
+	0x034, 0x000090AF,
+	0x034, 0x00008070,
+	0x034, 0x0000706D,
+	0x034, 0x00006050,
+	0x034, 0x0000504D,
+	0x034, 0x0000404A,
+	0x034, 0x00003047,
+	0x034, 0x0000200A,
+	0x034, 0x00001007,
+	0x034, 0x00000004,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x034, 0x0000A0B3,
+	0x034, 0x000090B0,
+	0x034, 0x00008070,
+	0x034, 0x0000706D,
+	0x034, 0x0000604D,
+	0x034, 0x0000504A,
+	0x034, 0x00004047,
+	0x034, 0x00003044,
+	0x034, 0x00002007,
+	0x034, 0x00001004,
+	0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+	0x034, 0x0000AFF7,
+	0x034, 0x00009DF7,
+	0x034, 0x00008DF4,
+	0x034, 0x00007DF1,
+	0x034, 0x00006DEE,
+	0x034, 0x00005DEB,
+	0x034, 0x00004DE8,
+	0x034, 0x000038CC,
+	0x034, 0x000028C9,
+	0x034, 0x000018C6,
+	0x034, 0x000008C3,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000040,
+	0x035, 0x000001C5,
+	0x035, 0x000081C5,
+	0x035, 0x000101C5,
+	0x035, 0x00020174,
+	0x035, 0x00028174,
+	0x035, 0x00030174,
+	0x035, 0x00040185,
+	0x035, 0x00048185,
+	0x035, 0x00050185,
+	0x0EF, 0x00000000,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000040,
+	0x035, 0x000001C5,
+	0x035, 0x000081C5,
+	0x035, 0x000101C5,
+	0x035, 0x00020174,
+	0x035, 0x00028174,
+	0x035, 0x00030174,
+	0x035, 0x00040185,
+	0x035, 0x00048185,
+	0x035, 0x00050185,
+	0x0EF, 0x00000000,
+	0xA0000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000040,
+	0x035, 0x00000188,
+	0x035, 0x00008147,
+	0x035, 0x00010147,
+	0x035, 0x000201D7,
+	0x035, 0x000281D7,
+	0x035, 0x000301D7,
+	0x035, 0x000401D8,
+	0x035, 0x000481D8,
+	0x035, 0x000501D8,
+	0x0EF, 0x00000000,
+	0xB0000000,	0x00000000,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000010,
+	0x036, 0x00005B8B,
+	0x036, 0x0000DB8B,
+	0x036, 0x00015B8B,
+	0x036, 0x0001DB8B,
+	0x036, 0x000262DB,
+	0x036, 0x0002E2DB,
+	0x036, 0x000362DB,
+	0x036, 0x0003E2DB,
+	0x036, 0x0004553B,
+	0x036, 0x0004D53B,
+	0x036, 0x0005553B,
+	0x036, 0x0005D53B,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000010,
+	0x036, 0x00005B8B,
+	0x036, 0x0000DB8B,
+	0x036, 0x00015B8B,
+	0x036, 0x0001DB8B,
+	0x036, 0x000262DB,
+	0x036, 0x0002E2DB,
+	0x036, 0x000362DB,
+	0x036, 0x0003E2DB,
+	0x036, 0x0004553B,
+	0x036, 0x0004D53B,
+	0x036, 0x0005553B,
+	0x036, 0x0005D53B,
+	0xA0000000,	0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000010,
+	0x036, 0x00084EB4,
+	0x036, 0x0008CC35,
+	0x036, 0x00094C35,
+	0x036, 0x0009CC35,
+	0x036, 0x000A4C35,
+	0x036, 0x000ACC35,
+	0x036, 0x000B4C35,
+	0x036, 0x000BCC35,
+	0x036, 0x000C4C34,
+	0x036, 0x000CCC35,
+	0x036, 0x000D4C35,
+	0x036, 0x000DCC35,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x0EF, 0x00000008,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x000002DC,
+	0x03C, 0x00000524,
+	0x03C, 0x00000902,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x03C, 0x000002DC,
+	0x03C, 0x00000524,
+	0x03C, 0x00000902,
+	0xA0000000,	0x00000000,
+	0x03C, 0x000002A8,
+	0x03C, 0x000005A2,
+	0x03C, 0x00000880,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000002,
+	0x0DF, 0x00000080,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+	0x061, 0x000EAC43,
+	0x062, 0x00038F47,
+	0x063, 0x00031157,
+	0x064, 0x0001C4AC,
+	0x065, 0x000931D1,
+	0x90000008,	0x05000000,	0x40000000,	0x00000000,
+	0x061, 0x000EAC43,
+	0x062, 0x00038F47,
+	0x063, 0x00031157,
+	0x064, 0x0001C4AC,
+	0x065, 0x000931D2,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x061, 0x000EAC43,
+	0x062, 0x00038F47,
+	0x063, 0x00031157,
+	0x064, 0x0001C4AC,
+	0x065, 0x000931D1,
+	0xA0000000,	0x00000000,
+	0x061, 0x000E5D53,
+	0x062, 0x00038FCD,
+	0x063, 0x000114EB,
+	0x064, 0x000196AC,
+	0x065, 0x000911D7,
+	0xB0000000,	0x00000000,
+	0x008, 0x00008400,
+};
+
+RTW_DECL_TABLE_RF_RADIO(rtw8812a_rf_b, B);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8812a_txpwr_lmt[] = {
+	{ 0, 0, 0, 0, 1, 36, },
+	{ 2, 0, 0, 0, 1, 32, },
+	{ 1, 0, 0, 0, 1, 32, },
+	{ 0, 0, 0, 0, 2, 36, },
+	{ 2, 0, 0, 0, 2, 32, },
+	{ 1, 0, 0, 0, 2, 32, },
+	{ 0, 0, 0, 0, 3, 36, },
+	{ 2, 0, 0, 0, 3, 32, },
+	{ 1, 0, 0, 0, 3, 32, },
+	{ 0, 0, 0, 0, 4, 36, },
+	{ 2, 0, 0, 0, 4, 32, },
+	{ 1, 0, 0, 0, 4, 32, },
+	{ 0, 0, 0, 0, 5, 36, },
+	{ 2, 0, 0, 0, 5, 32, },
+	{ 1, 0, 0, 0, 5, 32, },
+	{ 0, 0, 0, 0, 6, 36, },
+	{ 2, 0, 0, 0, 6, 32, },
+	{ 1, 0, 0, 0, 6, 32, },
+	{ 0, 0, 0, 0, 7, 36, },
+	{ 2, 0, 0, 0, 7, 32, },
+	{ 1, 0, 0, 0, 7, 32, },
+	{ 0, 0, 0, 0, 8, 36, },
+	{ 2, 0, 0, 0, 8, 32, },
+	{ 1, 0, 0, 0, 8, 32, },
+	{ 0, 0, 0, 0, 9, 36, },
+	{ 2, 0, 0, 0, 9, 32, },
+	{ 1, 0, 0, 0, 9, 32, },
+	{ 0, 0, 0, 0, 10, 36, },
+	{ 2, 0, 0, 0, 10, 32, },
+	{ 1, 0, 0, 0, 10, 32, },
+	{ 0, 0, 0, 0, 11, 36, },
+	{ 2, 0, 0, 0, 11, 32, },
+	{ 1, 0, 0, 0, 11, 32, },
+	{ 0, 0, 0, 0, 12, 63, },
+	{ 2, 0, 0, 0, 12, 32, },
+	{ 1, 0, 0, 0, 12, 32, },
+	{ 0, 0, 0, 0, 13, 63, },
+	{ 2, 0, 0, 0, 13, 32, },
+	{ 1, 0, 0, 0, 13, 32, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 32, },
+	{ 0, 0, 0, 1, 1, 34, },
+	{ 2, 0, 0, 1, 1, 32, },
+	{ 1, 0, 0, 1, 1, 32, },
+	{ 0, 0, 0, 1, 2, 36, },
+	{ 2, 0, 0, 1, 2, 32, },
+	{ 1, 0, 0, 1, 2, 32, },
+	{ 0, 0, 0, 1, 3, 36, },
+	{ 2, 0, 0, 1, 3, 32, },
+	{ 1, 0, 0, 1, 3, 32, },
+	{ 0, 0, 0, 1, 4, 36, },
+	{ 2, 0, 0, 1, 4, 32, },
+	{ 1, 0, 0, 1, 4, 32, },
+	{ 0, 0, 0, 1, 5, 36, },
+	{ 2, 0, 0, 1, 5, 32, },
+	{ 1, 0, 0, 1, 5, 32, },
+	{ 0, 0, 0, 1, 6, 36, },
+	{ 2, 0, 0, 1, 6, 32, },
+	{ 1, 0, 0, 1, 6, 32, },
+	{ 0, 0, 0, 1, 7, 36, },
+	{ 2, 0, 0, 1, 7, 32, },
+	{ 1, 0, 0, 1, 7, 32, },
+	{ 0, 0, 0, 1, 8, 36, },
+	{ 2, 0, 0, 1, 8, 32, },
+	{ 1, 0, 0, 1, 8, 32, },
+	{ 0, 0, 0, 1, 9, 36, },
+	{ 2, 0, 0, 1, 9, 32, },
+	{ 1, 0, 0, 1, 9, 32, },
+	{ 0, 0, 0, 1, 10, 36, },
+	{ 2, 0, 0, 1, 10, 32, },
+	{ 1, 0, 0, 1, 10, 32, },
+	{ 0, 0, 0, 1, 11, 32, },
+	{ 2, 0, 0, 1, 11, 32, },
+	{ 1, 0, 0, 1, 11, 32, },
+	{ 0, 0, 0, 1, 12, 63, },
+	{ 2, 0, 0, 1, 12, 32, },
+	{ 1, 0, 0, 1, 12, 32, },
+	{ 0, 0, 0, 1, 13, 63, },
+	{ 2, 0, 0, 1, 13, 32, },
+	{ 1, 0, 0, 1, 13, 32, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 63, },
+	{ 0, 0, 0, 2, 1, 34, },
+	{ 2, 0, 0, 2, 1, 32, },
+	{ 1, 0, 0, 2, 1, 32, },
+	{ 0, 0, 0, 2, 2, 36, },
+	{ 2, 0, 0, 2, 2, 32, },
+	{ 1, 0, 0, 2, 2, 32, },
+	{ 0, 0, 0, 2, 3, 36, },
+	{ 2, 0, 0, 2, 3, 32, },
+	{ 1, 0, 0, 2, 3, 32, },
+	{ 0, 0, 0, 2, 4, 36, },
+	{ 2, 0, 0, 2, 4, 32, },
+	{ 1, 0, 0, 2, 4, 32, },
+	{ 0, 0, 0, 2, 5, 36, },
+	{ 2, 0, 0, 2, 5, 32, },
+	{ 1, 0, 0, 2, 5, 32, },
+	{ 0, 0, 0, 2, 6, 36, },
+	{ 2, 0, 0, 2, 6, 32, },
+	{ 1, 0, 0, 2, 6, 32, },
+	{ 0, 0, 0, 2, 7, 36, },
+	{ 2, 0, 0, 2, 7, 32, },
+	{ 1, 0, 0, 2, 7, 32, },
+	{ 0, 0, 0, 2, 8, 36, },
+	{ 2, 0, 0, 2, 8, 32, },
+	{ 1, 0, 0, 2, 8, 32, },
+	{ 0, 0, 0, 2, 9, 36, },
+	{ 2, 0, 0, 2, 9, 32, },
+	{ 1, 0, 0, 2, 9, 32, },
+	{ 0, 0, 0, 2, 10, 36, },
+	{ 2, 0, 0, 2, 10, 32, },
+	{ 1, 0, 0, 2, 10, 32, },
+	{ 0, 0, 0, 2, 11, 32, },
+	{ 2, 0, 0, 2, 11, 32, },
+	{ 1, 0, 0, 2, 11, 32, },
+	{ 0, 0, 0, 2, 12, 63, },
+	{ 2, 0, 0, 2, 12, 32, },
+	{ 1, 0, 0, 2, 12, 32, },
+	{ 0, 0, 0, 2, 13, 63, },
+	{ 2, 0, 0, 2, 13, 32, },
+	{ 1, 0, 0, 2, 13, 32, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 63, },
+	{ 0, 0, 0, 3, 1, 32, },
+	{ 2, 0, 0, 3, 1, 32, },
+	{ 1, 0, 0, 3, 1, 32, },
+	{ 0, 0, 0, 3, 2, 34, },
+	{ 2, 0, 0, 3, 2, 32, },
+	{ 1, 0, 0, 3, 2, 32, },
+	{ 0, 0, 0, 3, 3, 34, },
+	{ 2, 0, 0, 3, 3, 32, },
+	{ 1, 0, 0, 3, 3, 32, },
+	{ 0, 0, 0, 3, 4, 34, },
+	{ 2, 0, 0, 3, 4, 32, },
+	{ 1, 0, 0, 3, 4, 32, },
+	{ 0, 0, 0, 3, 5, 34, },
+	{ 2, 0, 0, 3, 5, 32, },
+	{ 1, 0, 0, 3, 5, 32, },
+	{ 0, 0, 0, 3, 6, 34, },
+	{ 2, 0, 0, 3, 6, 32, },
+	{ 1, 0, 0, 3, 6, 32, },
+	{ 0, 0, 0, 3, 7, 34, },
+	{ 2, 0, 0, 3, 7, 32, },
+	{ 1, 0, 0, 3, 7, 32, },
+	{ 0, 0, 0, 3, 8, 34, },
+	{ 2, 0, 0, 3, 8, 32, },
+	{ 1, 0, 0, 3, 8, 32, },
+	{ 0, 0, 0, 3, 9, 34, },
+	{ 2, 0, 0, 3, 9, 32, },
+	{ 1, 0, 0, 3, 9, 32, },
+	{ 0, 0, 0, 3, 10, 34, },
+	{ 2, 0, 0, 3, 10, 32, },
+	{ 1, 0, 0, 3, 10, 32, },
+	{ 0, 0, 0, 3, 11, 30, },
+	{ 2, 0, 0, 3, 11, 32, },
+	{ 1, 0, 0, 3, 11, 32, },
+	{ 0, 0, 0, 3, 12, 63, },
+	{ 2, 0, 0, 3, 12, 32, },
+	{ 1, 0, 0, 3, 12, 32, },
+	{ 0, 0, 0, 3, 13, 63, },
+	{ 2, 0, 0, 3, 13, 32, },
+	{ 1, 0, 0, 3, 13, 32, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 63, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 32, },
+	{ 2, 0, 1, 2, 3, 32, },
+	{ 1, 0, 1, 2, 3, 32, },
+	{ 0, 0, 1, 2, 4, 36, },
+	{ 2, 0, 1, 2, 4, 32, },
+	{ 1, 0, 1, 2, 4, 32, },
+	{ 0, 0, 1, 2, 5, 36, },
+	{ 2, 0, 1, 2, 5, 32, },
+	{ 1, 0, 1, 2, 5, 32, },
+	{ 0, 0, 1, 2, 6, 36, },
+	{ 2, 0, 1, 2, 6, 32, },
+	{ 1, 0, 1, 2, 6, 32, },
+	{ 0, 0, 1, 2, 7, 36, },
+	{ 2, 0, 1, 2, 7, 32, },
+	{ 1, 0, 1, 2, 7, 32, },
+	{ 0, 0, 1, 2, 8, 36, },
+	{ 2, 0, 1, 2, 8, 32, },
+	{ 1, 0, 1, 2, 8, 32, },
+	{ 0, 0, 1, 2, 9, 36, },
+	{ 2, 0, 1, 2, 9, 32, },
+	{ 1, 0, 1, 2, 9, 32, },
+	{ 0, 0, 1, 2, 10, 36, },
+	{ 2, 0, 1, 2, 10, 32, },
+	{ 1, 0, 1, 2, 10, 32, },
+	{ 0, 0, 1, 2, 11, 32, },
+	{ 2, 0, 1, 2, 11, 32, },
+	{ 1, 0, 1, 2, 11, 32, },
+	{ 0, 0, 1, 2, 12, 63, },
+	{ 2, 0, 1, 2, 12, 32, },
+	{ 1, 0, 1, 2, 12, 32, },
+	{ 0, 0, 1, 2, 13, 63, },
+	{ 2, 0, 1, 2, 13, 32, },
+	{ 1, 0, 1, 2, 13, 32, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 30, },
+	{ 2, 0, 1, 3, 3, 30, },
+	{ 1, 0, 1, 3, 3, 30, },
+	{ 0, 0, 1, 3, 4, 34, },
+	{ 2, 0, 1, 3, 4, 30, },
+	{ 1, 0, 1, 3, 4, 30, },
+	{ 0, 0, 1, 3, 5, 34, },
+	{ 2, 0, 1, 3, 5, 30, },
+	{ 1, 0, 1, 3, 5, 30, },
+	{ 0, 0, 1, 3, 6, 34, },
+	{ 2, 0, 1, 3, 6, 30, },
+	{ 1, 0, 1, 3, 6, 30, },
+	{ 0, 0, 1, 3, 7, 34, },
+	{ 2, 0, 1, 3, 7, 30, },
+	{ 1, 0, 1, 3, 7, 30, },
+	{ 0, 0, 1, 3, 8, 34, },
+	{ 2, 0, 1, 3, 8, 30, },
+	{ 1, 0, 1, 3, 8, 30, },
+	{ 0, 0, 1, 3, 9, 34, },
+	{ 2, 0, 1, 3, 9, 30, },
+	{ 1, 0, 1, 3, 9, 30, },
+	{ 0, 0, 1, 3, 10, 34, },
+	{ 2, 0, 1, 3, 10, 30, },
+	{ 1, 0, 1, 3, 10, 30, },
+	{ 0, 0, 1, 3, 11, 30, },
+	{ 2, 0, 1, 3, 11, 30, },
+	{ 1, 0, 1, 3, 11, 30, },
+	{ 0, 0, 1, 3, 12, 63, },
+	{ 2, 0, 1, 3, 12, 32, },
+	{ 1, 0, 1, 3, 12, 32, },
+	{ 0, 0, 1, 3, 13, 63, },
+	{ 2, 0, 1, 3, 13, 32, },
+	{ 1, 0, 1, 3, 13, 32, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 1, 0, 1, 36, 30, },
+	{ 2, 1, 0, 1, 36, 32, },
+	{ 1, 1, 0, 1, 36, 32, },
+	{ 0, 1, 0, 1, 40, 30, },
+	{ 2, 1, 0, 1, 40, 32, },
+	{ 1, 1, 0, 1, 40, 32, },
+	{ 0, 1, 0, 1, 44, 30, },
+	{ 2, 1, 0, 1, 44, 32, },
+	{ 1, 1, 0, 1, 44, 32, },
+	{ 0, 1, 0, 1, 48, 30, },
+	{ 2, 1, 0, 1, 48, 32, },
+	{ 1, 1, 0, 1, 48, 32, },
+	{ 0, 1, 0, 1, 52, 36, },
+	{ 2, 1, 0, 1, 52, 32, },
+	{ 1, 1, 0, 1, 52, 32, },
+	{ 0, 1, 0, 1, 56, 34, },
+	{ 2, 1, 0, 1, 56, 32, },
+	{ 1, 1, 0, 1, 56, 32, },
+	{ 0, 1, 0, 1, 60, 32, },
+	{ 2, 1, 0, 1, 60, 32, },
+	{ 1, 1, 0, 1, 60, 32, },
+	{ 0, 1, 0, 1, 64, 28, },
+	{ 2, 1, 0, 1, 64, 32, },
+	{ 1, 1, 0, 1, 64, 32, },
+	{ 0, 1, 0, 1, 100, 30, },
+	{ 2, 1, 0, 1, 100, 32, },
+	{ 1, 1, 0, 1, 100, 32, },
+	{ 0, 1, 0, 1, 104, 30, },
+	{ 2, 1, 0, 1, 104, 32, },
+	{ 1, 1, 0, 1, 104, 32, },
+	{ 0, 1, 0, 1, 108, 32, },
+	{ 2, 1, 0, 1, 108, 32, },
+	{ 1, 1, 0, 1, 108, 32, },
+	{ 0, 1, 0, 1, 112, 34, },
+	{ 2, 1, 0, 1, 112, 32, },
+	{ 1, 1, 0, 1, 112, 32, },
+	{ 0, 1, 0, 1, 116, 34, },
+	{ 2, 1, 0, 1, 116, 32, },
+	{ 1, 1, 0, 1, 116, 32, },
+	{ 0, 1, 0, 1, 120, 36, },
+	{ 2, 1, 0, 1, 120, 32, },
+	{ 1, 1, 0, 1, 120, 32, },
+	{ 0, 1, 0, 1, 124, 34, },
+	{ 2, 1, 0, 1, 124, 32, },
+	{ 1, 1, 0, 1, 124, 32, },
+	{ 0, 1, 0, 1, 128, 32, },
+	{ 2, 1, 0, 1, 128, 32, },
+	{ 1, 1, 0, 1, 128, 32, },
+	{ 0, 1, 0, 1, 132, 30, },
+	{ 2, 1, 0, 1, 132, 32, },
+	{ 1, 1, 0, 1, 132, 32, },
+	{ 0, 1, 0, 1, 136, 30, },
+	{ 2, 1, 0, 1, 136, 32, },
+	{ 1, 1, 0, 1, 136, 32, },
+	{ 0, 1, 0, 1, 140, 28, },
+	{ 2, 1, 0, 1, 140, 32, },
+	{ 1, 1, 0, 1, 140, 32, },
+	{ 0, 1, 0, 1, 149, 36, },
+	{ 2, 1, 0, 1, 149, 32, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 36, },
+	{ 2, 1, 0, 1, 153, 32, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 36, },
+	{ 2, 1, 0, 1, 157, 32, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 36, },
+	{ 2, 1, 0, 1, 161, 32, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 36, },
+	{ 2, 1, 0, 1, 165, 32, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 30, },
+	{ 2, 1, 0, 2, 36, 32, },
+	{ 1, 1, 0, 2, 36, 32, },
+	{ 0, 1, 0, 2, 40, 30, },
+	{ 2, 1, 0, 2, 40, 32, },
+	{ 1, 1, 0, 2, 40, 32, },
+	{ 0, 1, 0, 2, 44, 30, },
+	{ 2, 1, 0, 2, 44, 32, },
+	{ 1, 1, 0, 2, 44, 32, },
+	{ 0, 1, 0, 2, 48, 30, },
+	{ 2, 1, 0, 2, 48, 32, },
+	{ 1, 1, 0, 2, 48, 32, },
+	{ 0, 1, 0, 2, 52, 36, },
+	{ 2, 1, 0, 2, 52, 32, },
+	{ 1, 1, 0, 2, 52, 32, },
+	{ 0, 1, 0, 2, 56, 34, },
+	{ 2, 1, 0, 2, 56, 32, },
+	{ 1, 1, 0, 2, 56, 32, },
+	{ 0, 1, 0, 2, 60, 32, },
+	{ 2, 1, 0, 2, 60, 32, },
+	{ 1, 1, 0, 2, 60, 32, },
+	{ 0, 1, 0, 2, 64, 28, },
+	{ 2, 1, 0, 2, 64, 32, },
+	{ 1, 1, 0, 2, 64, 32, },
+	{ 0, 1, 0, 2, 100, 30, },
+	{ 2, 1, 0, 2, 100, 32, },
+	{ 1, 1, 0, 2, 100, 32, },
+	{ 0, 1, 0, 2, 104, 30, },
+	{ 2, 1, 0, 2, 104, 32, },
+	{ 1, 1, 0, 2, 104, 32, },
+	{ 0, 1, 0, 2, 108, 32, },
+	{ 2, 1, 0, 2, 108, 32, },
+	{ 1, 1, 0, 2, 108, 32, },
+	{ 0, 1, 0, 2, 112, 34, },
+	{ 2, 1, 0, 2, 112, 32, },
+	{ 1, 1, 0, 2, 112, 32, },
+	{ 0, 1, 0, 2, 116, 34, },
+	{ 2, 1, 0, 2, 116, 32, },
+	{ 1, 1, 0, 2, 116, 32, },
+	{ 0, 1, 0, 2, 120, 36, },
+	{ 2, 1, 0, 2, 120, 32, },
+	{ 1, 1, 0, 2, 120, 32, },
+	{ 0, 1, 0, 2, 124, 34, },
+	{ 2, 1, 0, 2, 124, 32, },
+	{ 1, 1, 0, 2, 124, 32, },
+	{ 0, 1, 0, 2, 128, 32, },
+	{ 2, 1, 0, 2, 128, 32, },
+	{ 1, 1, 0, 2, 128, 32, },
+	{ 0, 1, 0, 2, 132, 30, },
+	{ 2, 1, 0, 2, 132, 32, },
+	{ 1, 1, 0, 2, 132, 32, },
+	{ 0, 1, 0, 2, 136, 30, },
+	{ 2, 1, 0, 2, 136, 32, },
+	{ 1, 1, 0, 2, 136, 32, },
+	{ 0, 1, 0, 2, 140, 28, },
+	{ 2, 1, 0, 2, 140, 32, },
+	{ 1, 1, 0, 2, 140, 32, },
+	{ 0, 1, 0, 2, 149, 36, },
+	{ 2, 1, 0, 2, 149, 32, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 36, },
+	{ 2, 1, 0, 2, 153, 32, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 36, },
+	{ 2, 1, 0, 2, 157, 32, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 36, },
+	{ 2, 1, 0, 2, 161, 32, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 36, },
+	{ 2, 1, 0, 2, 165, 32, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 28, },
+	{ 2, 1, 0, 3, 36, 30, },
+	{ 1, 1, 0, 3, 36, 30, },
+	{ 0, 1, 0, 3, 40, 28, },
+	{ 2, 1, 0, 3, 40, 30, },
+	{ 1, 1, 0, 3, 40, 30, },
+	{ 0, 1, 0, 3, 44, 28, },
+	{ 2, 1, 0, 3, 44, 30, },
+	{ 1, 1, 0, 3, 44, 30, },
+	{ 0, 1, 0, 3, 48, 28, },
+	{ 2, 1, 0, 3, 48, 30, },
+	{ 1, 1, 0, 3, 48, 30, },
+	{ 0, 1, 0, 3, 52, 34, },
+	{ 2, 1, 0, 3, 52, 30, },
+	{ 1, 1, 0, 3, 52, 30, },
+	{ 0, 1, 0, 3, 56, 32, },
+	{ 2, 1, 0, 3, 56, 30, },
+	{ 1, 1, 0, 3, 56, 30, },
+	{ 0, 1, 0, 3, 60, 30, },
+	{ 2, 1, 0, 3, 60, 30, },
+	{ 1, 1, 0, 3, 60, 30, },
+	{ 0, 1, 0, 3, 64, 26, },
+	{ 2, 1, 0, 3, 64, 30, },
+	{ 1, 1, 0, 3, 64, 30, },
+	{ 0, 1, 0, 3, 100, 28, },
+	{ 2, 1, 0, 3, 100, 30, },
+	{ 1, 1, 0, 3, 100, 30, },
+	{ 0, 1, 0, 3, 104, 28, },
+	{ 2, 1, 0, 3, 104, 30, },
+	{ 1, 1, 0, 3, 104, 30, },
+	{ 0, 1, 0, 3, 108, 30, },
+	{ 2, 1, 0, 3, 108, 30, },
+	{ 1, 1, 0, 3, 108, 30, },
+	{ 0, 1, 0, 3, 112, 32, },
+	{ 2, 1, 0, 3, 112, 30, },
+	{ 1, 1, 0, 3, 112, 30, },
+	{ 0, 1, 0, 3, 116, 32, },
+	{ 2, 1, 0, 3, 116, 30, },
+	{ 1, 1, 0, 3, 116, 30, },
+	{ 0, 1, 0, 3, 120, 34, },
+	{ 2, 1, 0, 3, 120, 30, },
+	{ 1, 1, 0, 3, 120, 30, },
+	{ 0, 1, 0, 3, 124, 32, },
+	{ 2, 1, 0, 3, 124, 30, },
+	{ 1, 1, 0, 3, 124, 30, },
+	{ 0, 1, 0, 3, 128, 30, },
+	{ 2, 1, 0, 3, 128, 30, },
+	{ 1, 1, 0, 3, 128, 30, },
+	{ 0, 1, 0, 3, 132, 28, },
+	{ 2, 1, 0, 3, 132, 30, },
+	{ 1, 1, 0, 3, 132, 30, },
+	{ 0, 1, 0, 3, 136, 28, },
+	{ 2, 1, 0, 3, 136, 30, },
+	{ 1, 1, 0, 3, 136, 30, },
+	{ 0, 1, 0, 3, 140, 26, },
+	{ 2, 1, 0, 3, 140, 30, },
+	{ 1, 1, 0, 3, 140, 30, },
+	{ 0, 1, 0, 3, 149, 34, },
+	{ 2, 1, 0, 3, 149, 30, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 34, },
+	{ 2, 1, 0, 3, 153, 30, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 34, },
+	{ 2, 1, 0, 3, 157, 30, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 34, },
+	{ 2, 1, 0, 3, 161, 30, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 34, },
+	{ 2, 1, 0, 3, 165, 30, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 1, 2, 38, 30, },
+	{ 2, 1, 1, 2, 38, 32, },
+	{ 1, 1, 1, 2, 38, 32, },
+	{ 0, 1, 1, 2, 46, 30, },
+	{ 2, 1, 1, 2, 46, 32, },
+	{ 1, 1, 1, 2, 46, 32, },
+	{ 0, 1, 1, 2, 54, 32, },
+	{ 2, 1, 1, 2, 54, 32, },
+	{ 1, 1, 1, 2, 54, 32, },
+	{ 0, 1, 1, 2, 62, 32, },
+	{ 2, 1, 1, 2, 62, 32, },
+	{ 1, 1, 1, 2, 62, 32, },
+	{ 0, 1, 1, 2, 102, 28, },
+	{ 2, 1, 1, 2, 102, 32, },
+	{ 1, 1, 1, 2, 102, 32, },
+	{ 0, 1, 1, 2, 110, 32, },
+	{ 2, 1, 1, 2, 110, 32, },
+	{ 1, 1, 1, 2, 110, 32, },
+	{ 0, 1, 1, 2, 118, 36, },
+	{ 2, 1, 1, 2, 118, 32, },
+	{ 1, 1, 1, 2, 118, 32, },
+	{ 0, 1, 1, 2, 126, 34, },
+	{ 2, 1, 1, 2, 126, 32, },
+	{ 1, 1, 1, 2, 126, 32, },
+	{ 0, 1, 1, 2, 134, 32, },
+	{ 2, 1, 1, 2, 134, 32, },
+	{ 1, 1, 1, 2, 134, 32, },
+	{ 0, 1, 1, 2, 151, 36, },
+	{ 2, 1, 1, 2, 151, 32, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 36, },
+	{ 2, 1, 1, 2, 159, 32, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 28, },
+	{ 2, 1, 1, 3, 38, 30, },
+	{ 1, 1, 1, 3, 38, 30, },
+	{ 0, 1, 1, 3, 46, 28, },
+	{ 2, 1, 1, 3, 46, 30, },
+	{ 1, 1, 1, 3, 46, 30, },
+	{ 0, 1, 1, 3, 54, 30, },
+	{ 2, 1, 1, 3, 54, 30, },
+	{ 1, 1, 1, 3, 54, 30, },
+	{ 0, 1, 1, 3, 62, 30, },
+	{ 2, 1, 1, 3, 62, 30, },
+	{ 1, 1, 1, 3, 62, 30, },
+	{ 0, 1, 1, 3, 102, 26, },
+	{ 2, 1, 1, 3, 102, 30, },
+	{ 1, 1, 1, 3, 102, 30, },
+	{ 0, 1, 1, 3, 110, 30, },
+	{ 2, 1, 1, 3, 110, 30, },
+	{ 1, 1, 1, 3, 110, 30, },
+	{ 0, 1, 1, 3, 118, 34, },
+	{ 2, 1, 1, 3, 118, 30, },
+	{ 1, 1, 1, 3, 118, 30, },
+	{ 0, 1, 1, 3, 126, 32, },
+	{ 2, 1, 1, 3, 126, 30, },
+	{ 1, 1, 1, 3, 126, 30, },
+	{ 0, 1, 1, 3, 134, 30, },
+	{ 2, 1, 1, 3, 134, 30, },
+	{ 1, 1, 1, 3, 134, 30, },
+	{ 0, 1, 1, 3, 151, 34, },
+	{ 2, 1, 1, 3, 151, 30, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 34, },
+	{ 2, 1, 1, 3, 159, 30, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 2, 4, 42, 30, },
+	{ 2, 1, 2, 4, 42, 32, },
+	{ 1, 1, 2, 4, 42, 32, },
+	{ 0, 1, 2, 4, 58, 28, },
+	{ 2, 1, 2, 4, 58, 32, },
+	{ 1, 1, 2, 4, 58, 32, },
+	{ 0, 1, 2, 4, 106, 30, },
+	{ 2, 1, 2, 4, 106, 32, },
+	{ 1, 1, 2, 4, 106, 32, },
+	{ 0, 1, 2, 4, 122, 34, },
+	{ 2, 1, 2, 4, 122, 32, },
+	{ 1, 1, 2, 4, 122, 32, },
+	{ 0, 1, 2, 4, 155, 36, },
+	{ 2, 1, 2, 4, 155, 32, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 28, },
+	{ 2, 1, 2, 5, 42, 30, },
+	{ 1, 1, 2, 5, 42, 30, },
+	{ 0, 1, 2, 5, 58, 26, },
+	{ 2, 1, 2, 5, 58, 30, },
+	{ 1, 1, 2, 5, 58, 30, },
+	{ 0, 1, 2, 5, 106, 28, },
+	{ 2, 1, 2, 5, 106, 30, },
+	{ 1, 1, 2, 5, 106, 30, },
+	{ 0, 1, 2, 5, 122, 32, },
+	{ 2, 1, 2, 5, 122, 30, },
+	{ 1, 1, 2, 5, 122, 30, },
+	{ 0, 1, 2, 5, 155, 34, },
+	{ 2, 1, 2, 5, 155, 30, },
+	{ 1, 1, 2, 5, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8812a_txpwr_lmt);
+
+static const struct rtw_pwr_seq_cmd trans_carddis_to_cardemu_8812a[] = {
+	{0x0012,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0014,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x80, 0},
+	{0x0015,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x01, 0},
+	{0x0023,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x10, 0},
+	{0x0046,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x00},
+	{0x0043,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x00},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(2), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3), 0},
+	{0x0003,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(2), BIT(2)},
+	{0x0301,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0},
+	{0x0024,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), BIT(1)},
+	{0x0028,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3), BIT(3)},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_cardemu_to_act_8812a[] = {
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(2), 0},
+	{0x0006,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, BIT(1), BIT(1)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(7), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, BIT(0), 0},
+	{0x0024,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0028,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3), 0},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_act_to_lps_8812a[] = {
+	{0x0301,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0xFF},
+	{0x0522,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x7F},
+	{0x05F8,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, 0xFF, 0},
+	{0x05F9,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, 0xFF, 0},
+	{0x05FA,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, 0xFF, 0},
+	{0x05FB,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, 0xFF, 0},
+	{0x0c00,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x04},
+	{0x0e00,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x04},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_DELAY, 0, RTW_PWR_DELAY_US},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0100,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x03},
+	{0x0101,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0553,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(5), BIT(5)},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_act_to_cardemu_8812a[] = {
+	{0x0c00,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x04},
+	{0x0e00,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x04},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_DELAY, 0, RTW_PWR_DELAY_US},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0007,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x2A},
+	{0x0008,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x02, 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), BIT(1)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, BIT(1), 0},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_cardemu_to_carddis_8812a[] = {
+	{0x0003,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(2), 0},
+	{0x0080,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x05},
+	{0x0042,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xF0, 0xcc},
+	{0x0042,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xF0, 0xEC},
+	{0x0043,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x07},
+	{0x0045,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x00},
+	{0x0046,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0xff},
+	{0x0047,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0},
+	{0x0014,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x80, BIT(7)},
+	{0x0015,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x01, BIT(0)},
+	{0x0012,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x01, 0},
+	{0x0023,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x10, BIT(4)},
+	{0x0008,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x02, 0},
+	{0x0007,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x20},
+	{0x001f,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0076,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3), BIT(3)},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+const struct rtw_pwr_seq_cmd * const card_enable_flow_8812a[] = {
+	trans_carddis_to_cardemu_8812a,
+	trans_cardemu_to_act_8812a,
+	NULL
+};
+
+const struct rtw_pwr_seq_cmd * const enter_lps_flow_8812a[] = {
+	trans_act_to_lps_8812a,
+	NULL
+};
+
+const struct rtw_pwr_seq_cmd * const card_disable_flow_8812a[] = {
+	trans_act_to_cardemu_8812a,
+	trans_cardemu_to_carddis_8812a,
+	NULL
+};
+
+static const u8 rtw8812a_pwrtrk_5gb_n[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12,
+	 12, 13, 13, 14, 14, 14, 14, 14, 14},
+	{0, 1, 1, 2, 2, 3, 4, 4, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12,
+	 12, 13, 13, 14, 14, 14, 14, 14, 14},
+	{0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 8, 8, 9, 10, 10, 11, 11, 12, 12, 13,
+	 13, 14, 14, 15, 16, 16, 16, 16, 16},
+};
+
+static const u8 rtw8812a_pwrtrk_5gb_p[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+	{0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+	{0, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 8, 9, 9, 10, 11, 11, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+};
+
+static const u8 rtw8812a_pwrtrk_5ga_n[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12,
+	 12, 13, 13, 14, 15, 15, 15, 15, 15},
+	{0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12,
+	 12, 13, 13, 14, 15, 15, 15, 15, 15},
+	{0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12,
+	 12, 13, 13, 14, 15, 15, 15, 15, 15},
+};
+
+static const u8 rtw8812a_pwrtrk_5ga_p[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 2, 3, 4, 5, 6, 7, 7, 8, 8, 9, 10, 11, 11, 11, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+	{0, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 8, 9, 10, 11, 11, 11, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+	{0, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 8, 9, 10, 11, 11, 12, 12, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+};
+
+static const u8 rtw8812a_pwrtrk_2gb_n[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6,
+	7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8812a_pwrtrk_2gb_p[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
+};
+
+static const u8 rtw8812a_pwrtrk_2ga_n[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 10, 10, 10
+};
+
+static const u8 rtw8812a_pwrtrk_2ga_p[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
+};
+
+static const u8 rtw8812a_pwrtrk_2g_cck_b_n[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6,
+	7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8812a_pwrtrk_2g_cck_b_p[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
+};
+
+static const u8 rtw8812a_pwrtrk_2g_cck_a_n[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 10, 10, 10
+};
+
+static const u8 rtw8812a_pwrtrk_2g_cck_a_p[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7
+};
+
+const struct rtw_pwr_track_tbl rtw8812a_rtw_pwr_track_tbl = {
+	.pwrtrk_5gb_n[0] = rtw8812a_pwrtrk_5gb_n[0],
+	.pwrtrk_5gb_n[1] = rtw8812a_pwrtrk_5gb_n[1],
+	.pwrtrk_5gb_n[2] = rtw8812a_pwrtrk_5gb_n[2],
+	.pwrtrk_5gb_p[0] = rtw8812a_pwrtrk_5gb_p[0],
+	.pwrtrk_5gb_p[1] = rtw8812a_pwrtrk_5gb_p[1],
+	.pwrtrk_5gb_p[2] = rtw8812a_pwrtrk_5gb_p[2],
+	.pwrtrk_5ga_n[0] = rtw8812a_pwrtrk_5ga_n[0],
+	.pwrtrk_5ga_n[1] = rtw8812a_pwrtrk_5ga_n[1],
+	.pwrtrk_5ga_n[2] = rtw8812a_pwrtrk_5ga_n[2],
+	.pwrtrk_5ga_p[0] = rtw8812a_pwrtrk_5ga_p[0],
+	.pwrtrk_5ga_p[1] = rtw8812a_pwrtrk_5ga_p[1],
+	.pwrtrk_5ga_p[2] = rtw8812a_pwrtrk_5ga_p[2],
+	.pwrtrk_2gb_n = rtw8812a_pwrtrk_2gb_n,
+	.pwrtrk_2gb_p = rtw8812a_pwrtrk_2gb_p,
+	.pwrtrk_2ga_n = rtw8812a_pwrtrk_2ga_n,
+	.pwrtrk_2ga_p = rtw8812a_pwrtrk_2ga_p,
+	.pwrtrk_2g_cckb_n = rtw8812a_pwrtrk_2g_cck_b_n,
+	.pwrtrk_2g_cckb_p = rtw8812a_pwrtrk_2g_cck_b_p,
+	.pwrtrk_2g_ccka_n = rtw8812a_pwrtrk_2g_cck_a_n,
+	.pwrtrk_2g_ccka_p = rtw8812a_pwrtrk_2g_cck_a_p,
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_5gb_n[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 12, 13,
+	 13, 14, 15, 16, 16, 17, 17, 18, 18},
+	{0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11,
+	 12, 14, 13, 13, 14, 14, 14, 15, 15},
+	{0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12,
+	 12, 13, 13, 14, 14, 15, 15, 16, 16},
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_5gb_p[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+	{0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+	{0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 6, 7, 7, 8, 9, 10, 10, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_5ga_n[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12,
+	 13, 14, 15, 16, 16, 17, 17, 18, 18},
+	{0, 1, 1, 2, 3, 3, 4, 4, 5, 6, 6, 7, 7, 8, 9, 9, 10, 10, 11, 11, 12,
+	 12, 13, 13, 14, 15, 16, 16, 17, 17},
+	{0, 1, 1, 2, 3, 3, 4, 4, 5, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 12, 13,
+	 13, 14, 14, 15, 15, 16, 17, 18, 18},
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_5ga_p[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 2, 3, 4, 5, 6, 7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+	{0, 1, 2, 3, 4, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10, 11, 11, 11, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+	{0, 1, 2, 3, 4, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10, 11, 11, 11, 11, 11, 11,
+	 11, 11, 11, 11, 11, 11, 11, 11, 11},
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_2gb_n[] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 7,
+	7, 7, 8, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_2gb_p[] = {
+	0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6,
+	6, 7, 7, 8, 9, 10, 10, 10, 10, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_2ga_n[] = {
+	0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 6, 7, 7, 8, 8, 9,
+	10, 10, 11, 11, 12, 12, 13, 13, 13, 13, 14, 14, 15, 15
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_2ga_p[] = {
+	0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_2g_cck_b_n[] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6, 7,
+	7, 7, 8, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15, 15
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_2g_cck_b_p[] = {
+	0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6,
+	6, 7, 7, 8, 9, 10, 10, 10, 10, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_2g_cck_a_n[] = {
+	0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 6, 7, 7, 8, 8, 9,
+	10, 10, 11, 11, 12, 12, 13, 13, 13, 13, 14, 14, 15, 15
+};
+
+static const u8 rtw8812a_pwrtrk_rfe3_2g_cck_a_p[] = {
+	0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 11
+};
+
+const struct rtw_pwr_track_tbl rtw8812a_rtw_pwr_track_rfe3_tbl = {
+	.pwrtrk_5gb_n[0] = rtw8812a_pwrtrk_rfe3_5gb_n[0],
+	.pwrtrk_5gb_n[1] = rtw8812a_pwrtrk_rfe3_5gb_n[1],
+	.pwrtrk_5gb_n[2] = rtw8812a_pwrtrk_rfe3_5gb_n[2],
+	.pwrtrk_5gb_p[0] = rtw8812a_pwrtrk_rfe3_5gb_p[0],
+	.pwrtrk_5gb_p[1] = rtw8812a_pwrtrk_rfe3_5gb_p[1],
+	.pwrtrk_5gb_p[2] = rtw8812a_pwrtrk_rfe3_5gb_p[2],
+	.pwrtrk_5ga_n[0] = rtw8812a_pwrtrk_rfe3_5ga_n[0],
+	.pwrtrk_5ga_n[1] = rtw8812a_pwrtrk_rfe3_5ga_n[1],
+	.pwrtrk_5ga_n[2] = rtw8812a_pwrtrk_rfe3_5ga_n[2],
+	.pwrtrk_5ga_p[0] = rtw8812a_pwrtrk_rfe3_5ga_p[0],
+	.pwrtrk_5ga_p[1] = rtw8812a_pwrtrk_rfe3_5ga_p[1],
+	.pwrtrk_5ga_p[2] = rtw8812a_pwrtrk_rfe3_5ga_p[2],
+	.pwrtrk_2gb_n = rtw8812a_pwrtrk_rfe3_2gb_n,
+	.pwrtrk_2gb_p = rtw8812a_pwrtrk_rfe3_2gb_p,
+	.pwrtrk_2ga_n = rtw8812a_pwrtrk_rfe3_2ga_n,
+	.pwrtrk_2ga_p = rtw8812a_pwrtrk_rfe3_2ga_p,
+	.pwrtrk_2g_cckb_n = rtw8812a_pwrtrk_rfe3_2g_cck_b_n,
+	.pwrtrk_2g_cckb_p = rtw8812a_pwrtrk_rfe3_2g_cck_b_p,
+	.pwrtrk_2g_ccka_n = rtw8812a_pwrtrk_rfe3_2g_cck_a_n,
+	.pwrtrk_2g_ccka_p = rtw8812a_pwrtrk_rfe3_2g_cck_a_p,
+};
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8812a_table.h b/drivers/net/wireless/realtek/rtw88/rtw8812a_table.h
new file mode 100644
index 000000000000..f7ab5e4cf059
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8812a_table.h
@@ -0,0 +1,26 @@
+/* SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause */
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#ifndef __RTW8812A_TABLE_H__
+#define __RTW8812A_TABLE_H__
+
+extern const struct rtw_table rtw8812a_mac_tbl;
+extern const struct rtw_table rtw8812a_agc_tbl;
+extern const struct rtw_table rtw8812a_agc_diff_lb_tbl;
+extern const struct rtw_table rtw8812a_agc_diff_hb_tbl;
+extern const struct rtw_table rtw8812a_bb_tbl;
+extern const struct rtw_table rtw8812a_bb_pg_tbl;
+extern const struct rtw_table rtw8812a_bb_pg_rfe3_tbl;
+extern const struct rtw_table rtw8812a_rf_a_tbl;
+extern const struct rtw_table rtw8812a_rf_b_tbl;
+extern const struct rtw_table rtw8812a_txpwr_lmt_tbl;
+
+extern const struct rtw_pwr_seq_cmd * const card_enable_flow_8812a[];
+extern const struct rtw_pwr_seq_cmd * const enter_lps_flow_8812a[];
+extern const struct rtw_pwr_seq_cmd * const card_disable_flow_8812a[];
+
+extern const struct rtw_pwr_track_tbl rtw8812a_rtw_pwr_track_tbl;
+extern const struct rtw_pwr_track_tbl rtw8812a_rtw_pwr_track_rfe3_tbl;
+
+#endif
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8812au.c b/drivers/net/wireless/realtek/rtw88/rtw8812au.c
new file mode 100644
index 000000000000..e18995f4cc78
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8812au.c
@@ -0,0 +1,94 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#include <linux/module.h>
+#include <linux/usb.h>
+#include "main.h"
+#include "rtw8812a.h"
+#include "usb.h"
+
+static const struct usb_device_id rtw_8812au_id_table[] = {
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x8812, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x881a, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x881b, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x881c, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0409, 0x0408, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* NEC */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0411, 0x025d, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Buffalo */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x04bb, 0x0952, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* I-O DATA */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x050d, 0x1106, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Belkin */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x050d, 0x1109, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Belkin */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0586, 0x3426, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* ZyXEL */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0789, 0x016e, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Logitec */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x07b8, 0x8812, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Abocom */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0846, 0x9051, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Netgear */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0b05, 0x17d2, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* ASUS */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0df6, 0x0074, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Sitecom */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0e66, 0x0022, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Hawking */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x1058, 0x0632, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* WD */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x13b1, 0x003f, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Linksys */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x148f, 0x9097, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Amped Wireless */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x1740, 0x0100, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* EnGenius */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2001, 0x330e, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* D-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2001, 0x3313, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* D-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2001, 0x3315, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* D-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2001, 0x3316, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* D-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2019, 0xab30, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Planex */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x20f4, 0x805b, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* TRENDnet */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x0101, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* TP-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x0103, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* TP-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x010d, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* TP-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x010e, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* TP-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x010f, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* TP-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x0122, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* TP-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2604, 0x0012, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Tenda */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x7392, 0xa822, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8812a_hw_spec) }, /* Edimax */
+	{},
+};
+MODULE_DEVICE_TABLE(usb, rtw_8812au_id_table);
+
+static struct usb_driver rtw_8812au_driver = {
+	.name = "rtw_8812au",
+	.id_table = rtw_8812au_id_table,
+	.probe = rtw_usb_probe,
+	.disconnect = rtw_usb_disconnect,
+};
+module_usb_driver(rtw_8812au_driver);
+
+MODULE_AUTHOR("Bitterblue Smith <rtl8821cerfe2@gmail.com>");
+MODULE_DESCRIPTION("Realtek 802.11ac wireless 8812au driver");
+MODULE_LICENSE("Dual BSD/GPL");
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8814a.c b/drivers/net/wireless/realtek/rtw88/rtw8814a.c
new file mode 100644
index 000000000000..516444391c46
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8814a.c
@@ -0,0 +1,2266 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2025  Realtek Corporation
+ */
+
+#include <linux/usb.h>
+#include "main.h"
+#include "coex.h"
+#include "tx.h"
+#include "phy.h"
+#include "rtw8814a.h"
+#include "rtw8814a_table.h"
+#include "rtw88xxa.h"
+#include "reg.h"
+#include "debug.h"
+#include "efuse.h"
+#include "regd.h"
+#include "usb.h"
+
+static void rtw8814a_efuse_grant(struct rtw_dev *rtwdev, bool on)
+{
+	if (on) {
+		rtw_write8(rtwdev, REG_EFUSE_ACCESS, EFUSE_ACCESS_ON);
+
+		rtw_write16_set(rtwdev, REG_SYS_FUNC_EN, BIT_FEN_ELDR);
+		rtw_write16_set(rtwdev, REG_SYS_CLKR,
+				BIT_LOADER_CLK_EN | BIT_ANA8M);
+	} else {
+		rtw_write8(rtwdev, REG_EFUSE_ACCESS, EFUSE_ACCESS_OFF);
+	}
+}
+
+static void rtw8814a_read_rfe_type(struct rtw_dev *rtwdev)
+{
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+
+	if (!(efuse->rfe_option & BIT(7)))
+		return;
+
+	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_PCIE)
+		efuse->rfe_option = 0;
+	else if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_USB)
+		efuse->rfe_option = 1;
+}
+
+static void rtw8814a_read_amplifier_type(struct rtw_dev *rtwdev)
+{
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+
+	switch (efuse->rfe_option) {
+	case 1:
+		/* Internal 2G */
+		efuse->pa_type_2g = 0;
+		efuse->lna_type_2g = 0;
+		/* External 5G */
+		efuse->pa_type_5g = BIT(0);
+		efuse->lna_type_5g = BIT(3);
+		break;
+	case 2 ... 5:
+		/* External everything */
+		efuse->pa_type_2g = BIT(4);
+		efuse->lna_type_2g = BIT(3);
+		efuse->pa_type_5g = BIT(0);
+		efuse->lna_type_5g = BIT(3);
+		break;
+	case 6:
+		efuse->lna_type_5g = BIT(3);
+		break;
+	default:
+		break;
+	}
+}
+
+static void rtw8814a_read_rf_type(struct rtw_dev *rtwdev,
+				  struct rtw8814a_efuse *map)
+{
+	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
+	struct rtw_hal *hal = &rtwdev->hal;
+
+	switch (map->trx_antenna_option) {
+	case 0xff: /* 4T4R */
+	case 0xee: /* 3T3R */
+		if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_USB &&
+		    rtwusb->udev->speed != USB_SPEED_SUPER)
+			hal->rf_type = RF_2T2R;
+		else
+			hal->rf_type = RF_3T3R;
+
+		break;
+	case 0x66: /* 2T2R */
+	case 0x6f: /* 2T4R */
+	default:
+		hal->rf_type = RF_2T2R;
+		break;
+	}
+
+	hal->rf_path_num = 4;
+	hal->rf_phy_num = 4;
+
+	if (hal->rf_type == RF_3T3R) {
+		hal->antenna_rx = BB_PATH_ABC;
+		hal->antenna_tx = BB_PATH_ABC;
+	} else {
+		hal->antenna_rx = BB_PATH_AB;
+		hal->antenna_tx = BB_PATH_AB;
+	}
+}
+
+static void rtw8814a_init_hwcap(struct rtw_dev *rtwdev)
+{
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+	struct rtw_hal *hal = &rtwdev->hal;
+
+	efuse->hw_cap.bw = BIT(RTW_CHANNEL_WIDTH_20) |
+			   BIT(RTW_CHANNEL_WIDTH_40) |
+			   BIT(RTW_CHANNEL_WIDTH_80);
+	efuse->hw_cap.ptcl = EFUSE_HW_CAP_PTCL_VHT;
+
+	if (hal->rf_type == RF_3T3R)
+		efuse->hw_cap.nss = 3;
+	else
+		efuse->hw_cap.nss = 2;
+
+	rtw_dbg(rtwdev, RTW_DBG_EFUSE,
+		"hw cap: hci=0x%02x, bw=0x%02x, ptcl=0x%02x, ant_num=%d, nss=%d\n",
+		efuse->hw_cap.hci, efuse->hw_cap.bw, efuse->hw_cap.ptcl,
+		efuse->hw_cap.ant_num, efuse->hw_cap.nss);
+}
+
+static int rtw8814a_read_efuse(struct rtw_dev *rtwdev, u8 *log_map)
+{
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+	struct rtw8814a_efuse *map;
+	int i;
+
+	if (rtw_dbg_is_enabled(rtwdev, RTW_DBG_EFUSE))
+		print_hex_dump(KERN_INFO, "", DUMP_PREFIX_OFFSET, 16, 1,
+			       log_map, rtwdev->chip->log_efuse_size, true);
+
+	map = (struct rtw8814a_efuse *)log_map;
+
+	efuse->usb_mode_switch = u8_get_bits(map->usb_mode, BIT(4));
+	efuse->rfe_option = map->rfe_option;
+	efuse->rf_board_option = map->rf_board_option;
+	efuse->crystal_cap = map->xtal_k;
+	efuse->channel_plan = map->channel_plan;
+	efuse->country_code[0] = map->country_code[0];
+	efuse->country_code[1] = map->country_code[1];
+	efuse->bt_setting = map->rf_bt_setting;
+	efuse->regd = map->rf_board_option & 0x7;
+	efuse->thermal_meter[RF_PATH_A] = map->thermal_meter;
+	efuse->thermal_meter_k = map->thermal_meter;
+	efuse->tx_bb_swing_setting_2g = map->tx_bb_swing_setting_2g;
+	efuse->tx_bb_swing_setting_5g = map->tx_bb_swing_setting_5g;
+
+	rtw8814a_read_rfe_type(rtwdev);
+	rtw8814a_read_amplifier_type(rtwdev);
+
+	/* Override rtw_chip_parameter_setup() */
+	rtw8814a_read_rf_type(rtwdev, map);
+
+	rtw8814a_init_hwcap(rtwdev);
+
+	for (i = 0; i < 4; i++)
+		efuse->txpwr_idx_table[i] = map->txpwr_idx_table[i];
+
+	switch (rtw_hci_type(rtwdev)) {
+	case RTW_HCI_TYPE_USB:
+		ether_addr_copy(efuse->addr, map->u.mac_addr);
+		break;
+	case RTW_HCI_TYPE_PCIE:
+		ether_addr_copy(efuse->addr, map->e.mac_addr);
+		break;
+	case RTW_HCI_TYPE_SDIO:
+	default:
+		/* unsupported now */
+		return -EOPNOTSUPP;
+	}
+
+	return 0;
+}
+
+static void rtw8814a_init_rfe_reg(struct rtw_dev *rtwdev)
+{
+	u8 rfe_option = rtwdev->efuse.rfe_option;
+
+	if (rfe_option == 2 || rfe_option == 1) {
+		rtw_write32_mask(rtwdev, 0x1994, 0xf, 0xf);
+		rtw_write8_set(rtwdev, REG_GPIO_MUXCFG + 2, 0xf0);
+	} else if (rfe_option == 0) {
+		rtw_write32_mask(rtwdev, 0x1994, 0xf, 0xf);
+		rtw_write8_set(rtwdev, REG_GPIO_MUXCFG + 2, 0xc0);
+	}
+}
+
+#define RTW_TXSCALE_SIZE 37
+static const u32 rtw8814a_txscale_tbl[RTW_TXSCALE_SIZE] = {
+	0x081, 0x088, 0x090, 0x099, 0x0a2, 0x0ac, 0x0b6, 0x0c0, 0x0cc, 0x0d8,
+	0x0e5, 0x0f2, 0x101, 0x110, 0x120, 0x131, 0x143, 0x156, 0x16a, 0x180,
+	0x197, 0x1af, 0x1c8, 0x1e3, 0x200, 0x21e, 0x23e, 0x261, 0x285, 0x2ab,
+	0x2d3, 0x2fe, 0x32b, 0x35c, 0x38e, 0x3c4, 0x3fe
+};
+
+static u32 rtw8814a_get_bb_swing(struct rtw_dev *rtwdev, u8 band, u8 rf_path)
+{
+	static const u32 swing2setting[4] = {0x200, 0x16a, 0x101, 0x0b6};
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+	u8 tx_bb_swing;
+
+	if (band == RTW_BAND_2G)
+		tx_bb_swing = efuse->tx_bb_swing_setting_2g;
+	else
+		tx_bb_swing = efuse->tx_bb_swing_setting_5g;
+
+	tx_bb_swing >>= 2 * rf_path;
+	tx_bb_swing &= 0x3;
+
+	return swing2setting[tx_bb_swing];
+}
+
+static u8 rtw8814a_get_swing_index(struct rtw_dev *rtwdev)
+{
+	u32 swing, table_value;
+	u8 i;
+
+	swing = rtw8814a_get_bb_swing(rtwdev, rtwdev->hal.current_band_type,
+				      RF_PATH_A);
+
+	for (i = 0; i < ARRAY_SIZE(rtw8814a_txscale_tbl); i++) {
+		table_value = rtw8814a_txscale_tbl[i];
+		if (swing == table_value)
+			return i;
+	}
+
+	return 24;
+}
+
+static void rtw8814a_pwrtrack_init(struct rtw_dev *rtwdev)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	u8 path;
+
+	dm_info->default_ofdm_index = rtw8814a_get_swing_index(rtwdev);
+
+	for (path = RF_PATH_A; path < rtwdev->hal.rf_path_num; path++) {
+		ewma_thermal_init(&dm_info->avg_thermal[path]);
+		dm_info->delta_power_index[path] = 0;
+		dm_info->delta_power_index_last[path] = 0;
+	}
+	dm_info->pwr_trk_triggered = false;
+	dm_info->pwr_trk_init_trigger = true;
+	dm_info->thermal_meter_k = rtwdev->efuse.thermal_meter_k;
+}
+
+static void rtw8814a_config_trx_path(struct rtw_dev *rtwdev)
+{
+	/* RX CCK disable 2R CCA */
+	rtw_write32_clr(rtwdev, REG_CCK0_FAREPORT,
+			BIT_CCK0_2RX | BIT_CCK0_MRC);
+	/* pathB tx on, path A/C/D tx off */
+	rtw_write32_mask(rtwdev, REG_CCK_RX, 0xf0000000, 0x4);
+	/* pathB rx */
+	rtw_write32_mask(rtwdev, REG_CCK_RX, 0x0f000000, 0x5);
+}
+
+static void rtw8814a_config_cck_rx_antenna_init(struct rtw_dev *rtwdev)
+{
+	/* CCK 2R CCA parameters */
+
+	/* Disable Ant diversity */
+	rtw_write32_mask(rtwdev, REG_RXSB, BIT_RXSB_ANA_DIV, 0x0);
+	/* Concurrent CCA at LSB & USB */
+	rtw_write32_mask(rtwdev, REG_CCA, BIT_CCA_CO, 0);
+	/* RX path diversity enable */
+	rtw_write32_mask(rtwdev, REG_ANTSEL, BIT_ANT_BYCO, 0);
+	/* r_en_mrc_antsel */
+	rtw_write32_mask(rtwdev, REG_PRECTRL, BIT_DIS_CO_PATHSEL, 0);
+	/* MBC weighting */
+	rtw_write32_mask(rtwdev, REG_CCA_MF, BIT_MBC_WIN, 1);
+	/* 2R CCA only */
+	rtw_write32_mask(rtwdev, REG_CCKTX, BIT_CMB_CCA_2R, 1);
+}
+
+static void rtw8814a_phy_set_param(struct rtw_dev *rtwdev)
+{
+	u32 crystal_cap, val32;
+	u8 val8, rf_path;
+
+	/* power on BB/RF domain */
+	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_USB)
+		rtw_write8_set(rtwdev, REG_SYS_FUNC_EN, BIT_FEN_USBA);
+	else if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_PCIE)
+		rtw_write8_set(rtwdev, REG_SYS_FUNC_EN, BIT_FEN_PCIEA);
+
+	rtw_write8_set(rtwdev, REG_SYS_CFG3_8814A + 2,
+		       BIT_FEN_BB_GLB_RST | BIT_FEN_BB_RSTB);
+
+	/* Power on RF paths A..D */
+	val8 = BIT_RF_EN | BIT_RF_RSTB | BIT_RF_SDM_RSTB;
+	rtw_write8(rtwdev, REG_RF_CTRL, val8);
+	rtw_write8(rtwdev, REG_RF_CTRL1, val8);
+	rtw_write8(rtwdev, REG_RF_CTRL2, val8);
+	rtw_write8(rtwdev, REG_RF_CTRL3, val8);
+
+	rtw_load_table(rtwdev, rtwdev->chip->bb_tbl);
+	rtw_load_table(rtwdev, rtwdev->chip->agc_tbl);
+
+	crystal_cap = rtwdev->efuse.crystal_cap & 0x3F;
+	crystal_cap |= crystal_cap << 6;
+	rtw_write32_mask(rtwdev, REG_AFE_CTRL3, 0x07ff8000, crystal_cap);
+
+	rtw8814a_config_trx_path(rtwdev);
+
+	for (rf_path = 0; rf_path < rtwdev->hal.rf_path_num; rf_path++)
+		rtw_load_table(rtwdev, rtwdev->chip->rf_tbl[rf_path]);
+
+	val32 = rtw_read_rf(rtwdev, RF_PATH_A, RF_RCK1_V1, RFREG_MASK);
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_RCK1_V1, RFREG_MASK, val32);
+	rtw_write_rf(rtwdev, RF_PATH_C, RF_RCK1_V1, RFREG_MASK, val32);
+	rtw_write_rf(rtwdev, RF_PATH_D, RF_RCK1_V1, RFREG_MASK, val32);
+
+	rtw_write32_set(rtwdev, REG_RXPSEL, BIT_RX_PSEL_RST);
+
+	rtw_write8(rtwdev, REG_HWSEQ_CTRL, 0xFF);
+
+	rtw_write32(rtwdev, REG_BAR_MODE_CTRL, 0x0201ffff);
+
+	rtw_write8(rtwdev, REG_MISC_CTRL, BIT_DIS_SECOND_CCA);
+
+	rtw_write8(rtwdev, REG_NAV_CTRL + 2, 0);
+
+	rtw_write8_clr(rtwdev, REG_GPIO_MUXCFG, BIT(5));
+
+	rtw8814a_config_cck_rx_antenna_init(rtwdev);
+
+	rtw_phy_init(rtwdev);
+	rtw8814a_pwrtrack_init(rtwdev);
+
+	rtw8814a_init_rfe_reg(rtwdev);
+
+	rtw_write8_clr(rtwdev, REG_QUEUE_CTRL, BIT(3));
+
+	rtw_write8(rtwdev, REG_NAV_CTRL + 2, 235);
+
+	/* enable Tx report. */
+	rtw_write8(rtwdev,  REG_FWHW_TXQ_CTRL + 1, 0x1F);
+
+	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_USB) {
+		/* Reset USB mode switch setting */
+		rtw_write8(rtwdev, REG_SYS_SDIO_CTRL, 0x0);
+		rtw_write8(rtwdev, REG_ACLK_MON, 0x0);
+	}
+}
+
+static void rtw8814ae_enable_rf_1_2v(struct rtw_dev *rtwdev)
+{
+	/* This is for fullsize card, because GPIO7 there is floating.
+	 * We should pull GPIO7 high to enable RF 1.2V Switch Power Supply
+	 */
+
+	/* 1. set 0x40[1:0] to 0, BIT_GPIOSEL=0, select pin as GPIO */
+	rtw_write8_clr(rtwdev, REG_GPIO_MUXCFG, BIT(1) | BIT(0));
+
+	/* 2. set 0x44[31] to 0
+	 * mode=0: data port;
+	 * mode=1 and BIT_GPIO_IO_SEL=0: interrupt mode;
+	 */
+	rtw_write8_clr(rtwdev, REG_GPIO_PIN_CTRL + 3, BIT(7));
+
+	/* 3. data mode
+	 * 3.1 set 0x44[23] to 1
+	 * sel=0: input;
+	 * sel=1: output;
+	 */
+	rtw_write8_set(rtwdev, REG_GPIO_PIN_CTRL + 2, BIT(7));
+
+	/* 3.2 set 0x44[15] to 1
+	 * output high value;
+	 */
+	rtw_write8_set(rtwdev, REG_GPIO_PIN_CTRL + 1, BIT(7));
+}
+
+static int rtw8814a_mac_init(struct rtw_dev *rtwdev)
+{
+	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
+
+	rtw_write16(rtwdev, REG_CR,
+		    MAC_TRX_ENABLE | BIT_MAC_SEC_EN | BIT_32K_CAL_TMR_EN);
+
+	rtw_load_table(rtwdev, rtwdev->chip->mac_tbl);
+
+	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_USB)
+		rtw_write8(rtwdev, REG_AUTO_LLT_V1 + 3,
+			   rtwdev->chip->usb_tx_agg_desc_num << 1);
+
+	rtw_write32(rtwdev, REG_HIMR0, 0);
+	rtw_write32(rtwdev, REG_HIMR1, 0);
+
+	rtw_write32_mask(rtwdev, REG_RRSR, 0xfffff, 0xfffff);
+
+	rtw_write16(rtwdev, REG_RETRY_LIMIT, 0x3030);
+
+	rtw_write16(rtwdev, REG_RXFLTMAP0, 0xffff);
+	rtw_write16(rtwdev, REG_RXFLTMAP1, 0x0400);
+	rtw_write16(rtwdev, REG_RXFLTMAP2, 0xffff);
+
+	rtw_write8(rtwdev, REG_MAX_AGGR_NUM, 0x36);
+	rtw_write8(rtwdev, REG_MAX_AGGR_NUM + 1, 0x36);
+
+	/* Set Spec SIFS (used in NAV) */
+	rtw_write16(rtwdev, REG_SPEC_SIFS, 0x100a);
+	rtw_write16(rtwdev, REG_MAC_SPEC_SIFS, 0x100a);
+
+	/* Set SIFS for CCK */
+	rtw_write16(rtwdev, REG_SIFS, 0x100a);
+
+	/* Set SIFS for OFDM */
+	rtw_write16(rtwdev, REG_SIFS + 2, 0x100a);
+
+	/* TXOP */
+	rtw_write32(rtwdev, REG_EDCA_BE_PARAM, 0x005EA42B);
+	rtw_write32(rtwdev, REG_EDCA_BK_PARAM, 0x0000A44F);
+	rtw_write32(rtwdev, REG_EDCA_VI_PARAM, 0x005EA324);
+	rtw_write32(rtwdev, REG_EDCA_VO_PARAM, 0x002FA226);
+
+	rtw_write8_set(rtwdev, REG_FWHW_TXQ_CTRL, BIT(7));
+
+	rtw_write8(rtwdev, REG_ACKTO, 0x80);
+
+	rtw_write16(rtwdev, REG_BCN_CTRL,
+		    BIT_DIS_TSF_UDT | (BIT_DIS_TSF_UDT << 8));
+	rtw_write32_mask(rtwdev, REG_TBTT_PROHIBIT, 0xfffff, WLAN_TBTT_TIME);
+	rtw_write8(rtwdev, REG_DRVERLYINT, 0x05);
+	rtw_write8(rtwdev, REG_BCNDMATIM, WLAN_BCN_DMA_TIME);
+	rtw_write16(rtwdev, REG_BCNTCFG, 0x4413);
+	rtw_write8(rtwdev, REG_BCN_MAX_ERR, 0xFF);
+
+	rtw_write32(rtwdev, REG_FAST_EDCA_VOVI_SETTING, 0x08070807);
+	rtw_write32(rtwdev, REG_FAST_EDCA_BEBK_SETTING, 0x08070807);
+
+	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_USB &&
+	    rtwusb->udev->speed == USB_SPEED_SUPER) {
+		/* Disable U1/U2 Mode to avoid 2.5G spur in USB3.0. */
+		rtw_write8_clr(rtwdev, REG_USB_MOD, BIT(4) | BIT(3));
+		/* To avoid usb 3.0 H2C fail. */
+		rtw_write16(rtwdev, 0xf002, 0);
+
+		rtw_write8_clr(rtwdev, REG_SW_AMPDU_BURST_MODE_CTRL,
+			       BIT_PRE_TX_CMD);
+	} else if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_PCIE) {
+		rtw8814ae_enable_rf_1_2v(rtwdev);
+
+		/* Force the antenna b to wifi. */
+		rtw_write8_set(rtwdev, REG_PAD_CTRL1, BIT(2));
+		rtw_write8_set(rtwdev, REG_PAD_CTRL1 + 1, BIT(0));
+		rtw_write8_set(rtwdev, REG_LED_CFG + 3,
+			       (BIT(27) | BIT_DPDT_WL_SEL) >> 24);
+	}
+
+	return 0;
+}
+
+static void rtw8814a_set_rfe_reg_24g(struct rtw_dev *rtwdev)
+{
+	switch (rtwdev->efuse.rfe_option) {
+	case 2:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x72707270);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x72707270);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_C, 0x72707270);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_D, 0x77707770);
+
+		rtw_write32_mask(rtwdev, REG_RFE_INVSEL_D,
+				 BIT_RFE_SELSW0_D, 0x72);
+
+		break;
+	case 1:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77777777);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777777);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_C, 0x77777777);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_D, 0x77777777);
+
+		rtw_write32_mask(rtwdev, REG_RFE_INVSEL_D,
+				 BIT_RFE_SELSW0_D, 0x77);
+
+		break;
+	case 0:
+	default:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77777777);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777777);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_C, 0x77777777);
+		/* Is it not necessary to set REG_RFE_PINMUX_D ? */
+
+		rtw_write32_mask(rtwdev, REG_RFE_INVSEL_D,
+				 BIT_RFE_SELSW0_D, 0x77);
+
+		break;
+	}
+}
+
+static void rtw8814a_set_rfe_reg_5g(struct rtw_dev *rtwdev)
+{
+	switch (rtwdev->efuse.rfe_option) {
+	case 2:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x37173717);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x37173717);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_C, 0x37173717);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_D, 0x77177717);
+
+		rtw_write32_mask(rtwdev, REG_RFE_INVSEL_D,
+				 BIT_RFE_SELSW0_D, 0x37);
+
+		break;
+	case 1:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x33173317);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x33173317);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_C, 0x33173317);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_D, 0x77177717);
+
+		rtw_write32_mask(rtwdev, REG_RFE_INVSEL_D,
+				 BIT_RFE_SELSW0_D, 0x33);
+
+		break;
+	case 0:
+	default:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x54775477);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x54775477);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_C, 0x54775477);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_D, 0x54775477);
+
+		rtw_write32_mask(rtwdev, REG_RFE_INVSEL_D,
+				 BIT_RFE_SELSW0_D, 0x54);
+
+		break;
+	}
+}
+
+static void rtw8814a_set_channel_bb_swing(struct rtw_dev *rtwdev, u8 band)
+{
+	rtw_write32_mask(rtwdev, REG_TXSCALE_A, BB_SWING_MASK,
+			 rtw8814a_get_bb_swing(rtwdev, band, RF_PATH_A));
+	rtw_write32_mask(rtwdev, REG_TXSCALE_B, BB_SWING_MASK,
+			 rtw8814a_get_bb_swing(rtwdev, band, RF_PATH_B));
+	rtw_write32_mask(rtwdev, REG_TXSCALE_C, BB_SWING_MASK,
+			 rtw8814a_get_bb_swing(rtwdev, band, RF_PATH_C));
+	rtw_write32_mask(rtwdev, REG_TXSCALE_D, BB_SWING_MASK,
+			 rtw8814a_get_bb_swing(rtwdev, band, RF_PATH_D));
+	rtw8814a_pwrtrack_init(rtwdev);
+}
+
+static void rtw8814a_set_bw_reg_adc(struct rtw_dev *rtwdev, u8 bw)
+{
+	u32 adc = 0;
+
+	if (bw == RTW_CHANNEL_WIDTH_20)
+		adc = 0;
+	else if (bw == RTW_CHANNEL_WIDTH_40)
+		adc = 1;
+	else if (bw == RTW_CHANNEL_WIDTH_80)
+		adc = 2;
+
+	rtw_write32_mask(rtwdev, REG_ADCCLK, BIT(1) | BIT(0), adc);
+}
+
+static void rtw8814a_set_bw_reg_agc(struct rtw_dev *rtwdev, u8 new_band, u8 bw)
+{
+	u32 agc = 7;
+
+	if (bw == RTW_CHANNEL_WIDTH_20) {
+		agc = 6;
+	} else if (bw == RTW_CHANNEL_WIDTH_40) {
+		if (new_band == RTW_BAND_5G)
+			agc = 8;
+		else
+			agc = 7;
+	} else if (bw == RTW_CHANNEL_WIDTH_80) {
+		agc = 3;
+	}
+
+	rtw_write32_mask(rtwdev, REG_CCASEL, 0xf000, agc);
+}
+
+static void rtw8814a_switch_band(struct rtw_dev *rtwdev, u8 new_band, u8 bw)
+{
+	/* Clear 0x1000[16], When this bit is set to 0, CCK and OFDM
+	 * are disabled, and clock are gated. Otherwise, CCK and OFDM
+	 * are enabled.
+	 */
+	rtw_write8_clr(rtwdev, REG_SYS_CFG3_8814A + 2, BIT_FEN_BB_RSTB);
+
+	if (new_band == RTW_BAND_2G) {
+		rtw_write32_mask(rtwdev, REG_AGC_TABLE, 0x1f, 0);
+
+		rtw8814a_set_rfe_reg_24g(rtwdev);
+
+		rtw_write32_mask(rtwdev, REG_TXPSEL, 0xf0, 0x2);
+		rtw_write32_mask(rtwdev, REG_CCK_RX, 0x0f000000, 0x5);
+
+		rtw_write32_mask(rtwdev, REG_RXPSEL, BIT_RX_PSEL_RST, 0x3);
+
+		rtw_write8(rtwdev, REG_CCK_CHECK, 0);
+
+		rtw_write32_mask(rtwdev, 0xa80, BIT(18), 0);
+	} else {
+		rtw_write8(rtwdev, REG_CCK_CHECK, BIT_CHECK_CCK_EN);
+
+		/* Enable CCK Tx function, even when CCK is off */
+		rtw_write32_mask(rtwdev, 0xa80, BIT(18), 1);
+
+		rtw8814a_set_rfe_reg_5g(rtwdev);
+
+		rtw_write32_mask(rtwdev, REG_TXPSEL, 0xf0, 0x0);
+		rtw_write32_mask(rtwdev, REG_CCK_RX, 0x0f000000, 0xf);
+
+		rtw_write32_mask(rtwdev, REG_RXPSEL, BIT_RX_PSEL_RST, 0x2);
+	}
+
+	rtw8814a_set_channel_bb_swing(rtwdev, new_band);
+
+	rtw8814a_set_bw_reg_adc(rtwdev, bw);
+	rtw8814a_set_bw_reg_agc(rtwdev, new_band, bw);
+
+	rtw_write8_set(rtwdev, REG_SYS_CFG3_8814A + 2, BIT_FEN_BB_RSTB);
+}
+
+static void rtw8814a_switch_channel(struct rtw_dev *rtwdev, u8 channel)
+{
+	struct rtw_hal *hal = &rtwdev->hal;
+	u32 fc_area, rf_mod_ag, cfgch;
+	u8 path;
+
+	switch (channel) {
+	case 36 ... 48:
+		fc_area = 0x494;
+		break;
+	case 50 ... 64:
+		fc_area = 0x453;
+		break;
+	case 100 ... 116:
+		fc_area = 0x452;
+		break;
+	default:
+		if (channel >= 118)
+			fc_area = 0x412;
+		else
+			fc_area = 0x96a;
+		break;
+	}
+
+	rtw_write32_mask(rtwdev, REG_CLKTRK, 0x1ffe0000, fc_area);
+
+	for (path = 0; path < hal->rf_path_num; path++) {
+		switch (channel) {
+		case 36 ... 64:
+			rf_mod_ag = 0x101;
+			break;
+		case 100 ... 140:
+			rf_mod_ag = 0x301;
+			break;
+		default:
+			if (channel > 140)
+				rf_mod_ag = 0x501;
+			else
+				rf_mod_ag = 0x000;
+			break;
+		}
+
+		cfgch = (rf_mod_ag << 8) | channel;
+
+		rtw_write_rf(rtwdev, path, RF_CFGCH,
+			     RF18_RFSI_MASK | RF18_BAND_MASK | RF18_CHANNEL_MASK, cfgch);
+	}
+
+	switch (channel) {
+	case 36 ... 64:
+		rtw_write32_mask(rtwdev, REG_AGC_TABLE, 0x1f, 1);
+		break;
+	case 100 ... 144:
+		rtw_write32_mask(rtwdev, REG_AGC_TABLE, 0x1f, 2);
+		break;
+	default:
+		if (channel >= 149)
+			rtw_write32_mask(rtwdev, REG_AGC_TABLE, 0x1f, 3);
+
+		break;
+	}
+}
+
+static void rtw8814a_24g_cck_tx_dfir(struct rtw_dev *rtwdev, u8 channel)
+{
+	if (channel >= 1 && channel <= 11) {
+		rtw_write32(rtwdev, REG_CCK0_TX_FILTER1, 0x1a1b0030);
+		rtw_write32(rtwdev, REG_CCK0_TX_FILTER2, 0x090e1317);
+		rtw_write32(rtwdev, REG_CCK0_DEBUG_PORT, 0x00000204);
+	} else if (channel >= 12 && channel <= 13) {
+		rtw_write32(rtwdev, REG_CCK0_TX_FILTER1, 0x1a1b0030);
+		rtw_write32(rtwdev, REG_CCK0_TX_FILTER2, 0x090e1217);
+		rtw_write32(rtwdev, REG_CCK0_DEBUG_PORT, 0x00000305);
+	} else if (channel == 14) {
+		rtw_write32(rtwdev, REG_CCK0_TX_FILTER1, 0x1a1b0030);
+		rtw_write32(rtwdev, REG_CCK0_TX_FILTER2, 0x00000E17);
+		rtw_write32(rtwdev, REG_CCK0_DEBUG_PORT, 0x00000000);
+	}
+}
+
+static void rtw8814a_set_bw_reg_mac(struct rtw_dev *rtwdev, u8 bw)
+{
+	u16 val16 = rtw_read16(rtwdev, REG_WMAC_TRXPTCL_CTL);
+
+	val16 &= ~BIT_RFMOD;
+	if (bw == RTW_CHANNEL_WIDTH_80)
+		val16 |= BIT_RFMOD_80M;
+	else if (bw == RTW_CHANNEL_WIDTH_40)
+		val16 |= BIT_RFMOD_40M;
+
+	rtw_write16(rtwdev, REG_WMAC_TRXPTCL_CTL, val16);
+}
+
+static void rtw8814a_set_bw_rf(struct rtw_dev *rtwdev, u8 bw)
+{
+	u8 path;
+
+	for (path = RF_PATH_A; path < rtwdev->hal.rf_path_num; path++) {
+		switch (bw) {
+		case RTW_CHANNEL_WIDTH_5:
+		case RTW_CHANNEL_WIDTH_10:
+		case RTW_CHANNEL_WIDTH_20:
+		default:
+			rtw_write_rf(rtwdev, path, RF_CFGCH, RF18_BW_MASK, 3);
+			break;
+		case RTW_CHANNEL_WIDTH_40:
+			rtw_write_rf(rtwdev, path, RF_CFGCH, RF18_BW_MASK, 1);
+			break;
+		case RTW_CHANNEL_WIDTH_80:
+			rtw_write_rf(rtwdev, path, RF_CFGCH, RF18_BW_MASK, 0);
+			break;
+		}
+	}
+}
+
+static void rtw8814a_adc_clk(struct rtw_dev *rtwdev)
+{
+	static const u32 rxiqc_reg[2][4] = {
+		{ REG_RX_IQC_AB_A, REG_RX_IQC_AB_B,
+		  REG_RX_IQC_AB_C, REG_RX_IQC_AB_D },
+		{ REG_RX_IQC_CD_A, REG_RX_IQC_CD_B,
+		  REG_RX_IQC_CD_C, REG_RX_IQC_CD_D }
+	};
+	u32 bb_reg_8fc, bb_reg_808, rxiqc[4];
+	u32 i = 0, mac_active = 1;
+	u8 mac_reg_522;
+
+	if (rtwdev->hal.cut_version != RTW_CHIP_VER_CUT_A)
+		return;
+
+	/* 1 Step1. MAC TX pause */
+	mac_reg_522 = rtw_read8(rtwdev, REG_TXPAUSE);
+	bb_reg_8fc = rtw_read32(rtwdev, REG_DBGSEL);
+	bb_reg_808 = rtw_read32(rtwdev, REG_RXPSEL);
+	rtw_write8(rtwdev, REG_TXPAUSE, 0x3f);
+
+	/* 1 Step 2. Backup rxiqc & rxiqc = 0 */
+	for (i = 0; i < 4; i++) {
+		rxiqc[i] = rtw_read32(rtwdev, rxiqc_reg[0][i]);
+		rtw_write32(rtwdev, rxiqc_reg[0][i], 0x0);
+		rtw_write32(rtwdev, rxiqc_reg[1][i], 0x0);
+	}
+	rtw_write32_mask(rtwdev, REG_PRECTRL, BIT_IQ_WGT, 0x3);
+	i = 0;
+
+	/* 1 Step 3. Monitor MAC IDLE */
+	rtw_write32(rtwdev, REG_DBGSEL, 0x0);
+	while (mac_active) {
+		mac_active = rtw_read32(rtwdev, REG_DBGRPT) & 0x803e0008;
+		i++;
+		if (i > 1000)
+			break;
+	}
+
+	/* 1 Step 4. ADC clk flow */
+	rtw_write8(rtwdev, REG_RXPSEL, 0x11);
+	rtw_write32_mask(rtwdev, REG_DAC_RSTB, BIT(13), 0x1);
+	rtw_write8_mask(rtwdev, REG_GNT_BT, BIT(2) | BIT(1), 0x3);
+	rtw_write32_mask(rtwdev, REG_CCK_RPT_FORMAT, BIT(2), 0x1);
+
+	/* 0xc1c/0xe1c/0x181c/0x1a1c[4] must=1 to ensure table can be
+	 * written when bbrstb=0
+	 * 0xc60/0xe60/0x1860/0x1a60[15] always = 1 after this line
+	 * 0xc60/0xe60/0x1860/0x1a60[14] always = 0 bcz its error in A-cut
+	 */
+
+	/* power_off/clk_off @ anapar_state=idle mode */
+	rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x15800002);
+	rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x01808003);
+	rtw_write32(rtwdev, REG_AFE_PWR1_B, 0x15800002);
+	rtw_write32(rtwdev, REG_AFE_PWR1_B, 0x01808003);
+	rtw_write32(rtwdev, REG_AFE_PWR1_C, 0x15800002);
+	rtw_write32(rtwdev, REG_AFE_PWR1_C, 0x01808003);
+	rtw_write32(rtwdev, REG_AFE_PWR1_D, 0x15800002);
+	rtw_write32(rtwdev, REG_AFE_PWR1_D, 0x01808003);
+
+	rtw_write8_mask(rtwdev, REG_GNT_BT, BIT(2), 0x0);
+	rtw_write32_mask(rtwdev, REG_CCK_RPT_FORMAT, BIT(2), 0x0);
+	/* [19] = 1 to turn off ADC */
+	rtw_write32(rtwdev, REG_CK_MONHA, 0x0D080058);
+	rtw_write32(rtwdev, REG_CK_MONHB, 0x0D080058);
+	rtw_write32(rtwdev, REG_CK_MONHC, 0x0D080058);
+	rtw_write32(rtwdev, REG_CK_MONHD, 0x0D080058);
+
+	/* power_on/clk_off */
+	/* [19] = 0 to turn on ADC */
+	rtw_write32(rtwdev, REG_CK_MONHA, 0x0D000058);
+	rtw_write32(rtwdev, REG_CK_MONHB, 0x0D000058);
+	rtw_write32(rtwdev, REG_CK_MONHC, 0x0D000058);
+	rtw_write32(rtwdev, REG_CK_MONHD, 0x0D000058);
+
+	/* power_on/clk_on @ anapar_state=BT mode */
+	rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x05808032);
+	rtw_write32(rtwdev, REG_AFE_PWR1_B, 0x05808032);
+	rtw_write32(rtwdev, REG_AFE_PWR1_C, 0x05808032);
+	rtw_write32(rtwdev, REG_AFE_PWR1_D, 0x05808032);
+	rtw_write8_mask(rtwdev, REG_GNT_BT, BIT(2), 0x1);
+	rtw_write32_mask(rtwdev, REG_CCK_RPT_FORMAT, BIT(2), 0x1);
+
+	/* recover original setting @ anapar_state=BT mode */
+	rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x05808032);
+	rtw_write32(rtwdev, REG_AFE_PWR1_B, 0x05808032);
+	rtw_write32(rtwdev, REG_AFE_PWR1_C, 0x05808032);
+	rtw_write32(rtwdev, REG_AFE_PWR1_D, 0x05808032);
+
+	rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x05800002);
+	rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x07808003);
+	rtw_write32(rtwdev, REG_AFE_PWR1_B, 0x05800002);
+	rtw_write32(rtwdev, REG_AFE_PWR1_B, 0x07808003);
+	rtw_write32(rtwdev, REG_AFE_PWR1_C, 0x05800002);
+	rtw_write32(rtwdev, REG_AFE_PWR1_C, 0x07808003);
+	rtw_write32(rtwdev, REG_AFE_PWR1_D, 0x05800002);
+	rtw_write32(rtwdev, REG_AFE_PWR1_D, 0x07808003);
+
+	rtw_write8_mask(rtwdev, REG_GNT_BT, BIT(2) | BIT(1), 0x0);
+	rtw_write32_mask(rtwdev, REG_CCK_RPT_FORMAT, BIT(2), 0x0);
+	rtw_write32_mask(rtwdev, REG_DAC_RSTB, BIT(13), 0x0);
+
+	/* 1 Step 5. Recover MAC TX & IQC */
+	rtw_write8(rtwdev, REG_TXPAUSE, mac_reg_522);
+	rtw_write32(rtwdev, REG_DBGSEL, bb_reg_8fc);
+	rtw_write32(rtwdev, REG_RXPSEL, bb_reg_808);
+	for (i = 0; i < 4; i++) {
+		rtw_write32(rtwdev, rxiqc_reg[0][i], rxiqc[i]);
+		rtw_write32(rtwdev, rxiqc_reg[1][i], 0x01000000);
+	}
+	rtw_write32_mask(rtwdev, REG_PRECTRL, BIT_IQ_WGT, 0x0);
+}
+
+static void rtw8814a_spur_calibration_ch140(struct rtw_dev *rtwdev, u8 channel)
+{
+	struct rtw_hal *hal = &rtwdev->hal;
+
+	/* Add for 8814AE module ch140 MP Rx */
+	if (channel == 140) {
+		if (hal->ch_param[0] == 0)
+			hal->ch_param[0] = rtw_read32(rtwdev, REG_CCASEL);
+		if (hal->ch_param[1] == 0)
+			hal->ch_param[1] = rtw_read32(rtwdev, REG_PDMFTH);
+
+		rtw_write32(rtwdev, REG_CCASEL, 0x75438170);
+		rtw_write32(rtwdev, REG_PDMFTH, 0x79a18a0a);
+	} else {
+		if (rtw_read32(rtwdev, REG_CCASEL) == 0x75438170 &&
+		    hal->ch_param[0] != 0)
+			rtw_write32(rtwdev, REG_CCASEL, hal->ch_param[0]);
+
+		if (rtw_read32(rtwdev, REG_PDMFTH) == 0x79a18a0a &&
+		    hal->ch_param[1] != 0)
+			rtw_write32(rtwdev, REG_PDMFTH, hal->ch_param[1]);
+
+		hal->ch_param[0] = rtw_read32(rtwdev, REG_CCASEL);
+		hal->ch_param[1] = rtw_read32(rtwdev, REG_PDMFTH);
+	}
+}
+
+static void rtw8814a_set_nbi_reg(struct rtw_dev *rtwdev, u32 tone_idx)
+{
+	/* tone_idx X 10 */
+	static const u32 nbi_128[] = {
+		25, 55, 85, 115, 135,
+		155, 185, 205, 225, 245,
+		265, 285, 305, 335, 355,
+		375, 395, 415, 435, 455,
+		485, 505, 525, 555, 585, 615, 635
+	};
+	u32 reg_idx = 0;
+	u32 i;
+
+	for (i = 0; i < ARRAY_SIZE(nbi_128); i++) {
+		if (tone_idx < nbi_128[i]) {
+			reg_idx = i + 1;
+			break;
+		}
+	}
+
+	rtw_write32_mask(rtwdev, REG_NBI_SETTING, 0xfc000, reg_idx);
+}
+
+static void rtw8814a_nbi_setting(struct rtw_dev *rtwdev, u32 ch, u32 f_intf)
+{
+	u32 fc, int_distance, tone_idx;
+
+	fc = 2412 + (ch - 1) * 5;
+	int_distance = abs_diff(fc, f_intf);
+
+	/* 10 * (int_distance / 0.3125) */
+	tone_idx = int_distance << 5;
+
+	rtw8814a_set_nbi_reg(rtwdev, tone_idx);
+
+	rtw_write32_mask(rtwdev, REG_NBI_SETTING, BIT_NBI_ENABLE, 1);
+}
+
+static void rtw8814a_spur_nbi_setting(struct rtw_dev *rtwdev)
+{
+	u8 primary_channel = rtwdev->hal.primary_channel;
+	u8 rfe_type = rtwdev->efuse.rfe_option;
+
+	if (rfe_type != 0 && rfe_type != 1 && rfe_type != 6 && rfe_type != 7)
+		return;
+
+	if (primary_channel == 14)
+		rtw8814a_nbi_setting(rtwdev, primary_channel, 2480);
+	else if (primary_channel >= 4 && primary_channel <= 8)
+		rtw8814a_nbi_setting(rtwdev, primary_channel, 2440);
+	else
+		rtw_write32_mask(rtwdev, REG_NBI_SETTING, BIT_NBI_ENABLE, 0);
+}
+
+/* A workaround to eliminate the 5280 MHz & 5600 MHz & 5760 MHz spur of 8814A */
+static void rtw8814a_spur_calibration(struct rtw_dev *rtwdev, u8 channel, u8 bw)
+{
+	u8 rfe_type = rtwdev->efuse.rfe_option;
+	bool reset_nbi_csi = true;
+
+	if (rfe_type == 0) {
+		switch (bw) {
+		case RTW_CHANNEL_WIDTH_40:
+			if (channel == 54 || channel == 118) {
+				rtw_write32_mask(rtwdev, REG_NBI_SETTING,
+						 0x000fe000, 0x3e >> 1);
+				rtw_write32_mask(rtwdev, REG_CSI_MASK_SETTING1,
+						 BIT(0), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK0, 0);
+				rtw_write32_mask(rtwdev, REG_CSI_FIX_MASK1,
+						 BIT(0), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK6, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK7, 0);
+
+				reset_nbi_csi = false;
+			} else if (channel == 151) {
+				rtw_write32_mask(rtwdev, REG_NBI_SETTING,
+						 0x000fe000, 0x1e >> 1);
+				rtw_write32_mask(rtwdev, REG_CSI_MASK_SETTING1,
+						 BIT(0), 1);
+				rtw_write32_mask(rtwdev, REG_CSI_FIX_MASK0,
+						 BIT(16), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK1, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK6, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK7, 0);
+
+				reset_nbi_csi = false;
+			}
+			break;
+		case RTW_CHANNEL_WIDTH_80:
+			if (channel == 58 || channel == 122) {
+				rtw_write32_mask(rtwdev, REG_NBI_SETTING,
+						 0x000fe000, 0x3a >> 1);
+				rtw_write32_mask(rtwdev, REG_CSI_MASK_SETTING1,
+						 BIT(0), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK0, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK1, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK6, 0);
+				rtw_write32_mask(rtwdev, REG_CSI_FIX_MASK7,
+						 BIT(0), 1);
+
+				reset_nbi_csi = false;
+			} else if (channel == 155) {
+				rtw_write32_mask(rtwdev, REG_NBI_SETTING,
+						 0x000fe000, 0x5a >> 1);
+				rtw_write32_mask(rtwdev, REG_CSI_MASK_SETTING1,
+						 BIT(0), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK0, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK1, 0);
+				rtw_write32_mask(rtwdev, REG_CSI_FIX_MASK6,
+						 BIT(16), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK7, 0);
+
+				reset_nbi_csi = false;
+			}
+			break;
+		case RTW_CHANNEL_WIDTH_20:
+			if (channel == 153) {
+				rtw_write32_mask(rtwdev, REG_NBI_SETTING,
+						 0x000fe000, 0x1e >> 1);
+				rtw_write32_mask(rtwdev, REG_CSI_MASK_SETTING1,
+						 BIT(0), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK0, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK1, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK6, 0);
+				rtw_write32_mask(rtwdev, REG_CSI_FIX_MASK7,
+						 BIT(16), 1);
+
+				reset_nbi_csi = false;
+			}
+
+			rtw8814a_spur_calibration_ch140(rtwdev, channel);
+			break;
+		default:
+			break;
+		}
+	} else if (rfe_type == 1 || rfe_type == 2) {
+		switch (bw) {
+		case RTW_CHANNEL_WIDTH_20:
+			if (channel == 153) {
+				rtw_write32_mask(rtwdev, REG_NBI_SETTING,
+						 0x000fe000, 0x1E >> 1);
+				rtw_write32_mask(rtwdev, REG_CSI_MASK_SETTING1,
+						 BIT(0), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK0, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK1, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK6, 0);
+				rtw_write32_mask(rtwdev, REG_CSI_FIX_MASK7,
+						 BIT(16), 1);
+
+				reset_nbi_csi = false;
+			}
+			break;
+		case RTW_CHANNEL_WIDTH_40:
+			if (channel == 151) {
+				rtw_write32_mask(rtwdev, REG_NBI_SETTING,
+						 0x000fe000, 0x1e >> 1);
+				rtw_write32_mask(rtwdev, REG_CSI_MASK_SETTING1,
+						 BIT(0), 1);
+				rtw_write32_mask(rtwdev, REG_CSI_FIX_MASK0,
+						 BIT(16), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK1, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK6, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK7, 0);
+
+				reset_nbi_csi = false;
+			}
+			break;
+		case RTW_CHANNEL_WIDTH_80:
+			if (channel == 155) {
+				rtw_write32_mask(rtwdev, REG_NBI_SETTING,
+						 0x000fe000, 0x5a >> 1);
+				rtw_write32_mask(rtwdev, REG_CSI_MASK_SETTING1,
+						 BIT(0), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK0, 0);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK1, 0);
+				rtw_write32_mask(rtwdev, REG_CSI_FIX_MASK6,
+						 BIT(16), 1);
+				rtw_write32(rtwdev, REG_CSI_FIX_MASK7, 0);
+
+				reset_nbi_csi = false;
+			}
+			break;
+		default:
+			break;
+		}
+	}
+
+	if (reset_nbi_csi) {
+		rtw_write32_mask(rtwdev, REG_NBI_SETTING,
+				 0x000fe000, 0xfc >> 1);
+		rtw_write32_mask(rtwdev, REG_CSI_MASK_SETTING1, BIT(0), 0);
+		rtw_write32(rtwdev, REG_CSI_FIX_MASK0, 0);
+		rtw_write32(rtwdev, REG_CSI_FIX_MASK1, 0);
+		rtw_write32(rtwdev, REG_CSI_FIX_MASK6, 0);
+		rtw_write32(rtwdev, REG_CSI_FIX_MASK7, 0);
+	}
+
+	rtw8814a_spur_nbi_setting(rtwdev);
+}
+
+static void rtw8814a_set_bw_mode(struct rtw_dev *rtwdev, u8 new_band,
+				 u8 channel, u8 bw, u8 primary_chan_idx)
+{
+	u8 txsc40 = 0, txsc20, txsc;
+
+	rtw8814a_set_bw_reg_mac(rtwdev, bw);
+
+	txsc20 = primary_chan_idx;
+	if (bw == RTW_CHANNEL_WIDTH_80) {
+		if (txsc20 == RTW_SC_20_UPPER || txsc20 == RTW_SC_20_UPMOST)
+			txsc40 = RTW_SC_40_UPPER;
+		else
+			txsc40 = RTW_SC_40_LOWER;
+	}
+
+	txsc = BIT_TXSC_20M(txsc20) | BIT_TXSC_40M(txsc40);
+	rtw_write8(rtwdev, REG_DATA_SC, txsc);
+
+	rtw8814a_set_bw_reg_adc(rtwdev, bw);
+	rtw8814a_set_bw_reg_agc(rtwdev, new_band, bw);
+
+	if (bw == RTW_CHANNEL_WIDTH_80) {
+		rtw_write32_mask(rtwdev, REG_ADCCLK, 0x3c, txsc);
+	} else if (bw == RTW_CHANNEL_WIDTH_40) {
+		rtw_write32_mask(rtwdev, REG_ADCCLK, 0x3c, txsc);
+
+		if (txsc == RTW_SC_20_UPPER)
+			rtw_write32_set(rtwdev, REG_RXSB, BIT(4));
+		else
+			rtw_write32_clr(rtwdev, REG_RXSB, BIT(4));
+	}
+
+	rtw8814a_set_bw_rf(rtwdev, bw);
+
+	rtw8814a_adc_clk(rtwdev);
+
+	rtw8814a_spur_calibration(rtwdev, channel, bw);
+}
+
+static void rtw8814a_set_channel(struct rtw_dev *rtwdev, u8 channel, u8 bw,
+				 u8 primary_chan_idx)
+{
+	u8 old_band, new_band;
+
+	if (rtw_read8(rtwdev, REG_CCK_CHECK) & BIT_CHECK_CCK_EN)
+		old_band = RTW_BAND_5G;
+	else
+		old_band = RTW_BAND_2G;
+
+	if (channel > 14)
+		new_band = RTW_BAND_5G;
+	else
+		new_band = RTW_BAND_2G;
+
+	if (new_band != old_band)
+		rtw8814a_switch_band(rtwdev, new_band, bw);
+
+	rtw8814a_switch_channel(rtwdev, channel);
+
+	rtw8814a_24g_cck_tx_dfir(rtwdev, channel);
+
+	rtw8814a_set_bw_mode(rtwdev, new_band, channel, bw, primary_chan_idx);
+}
+
+static s8 rtw8814a_cck_rx_pwr(u8 lna_idx, u8 vga_idx)
+{
+	s8 rx_pwr_all = 0;
+
+	switch (lna_idx) {
+	case 7:
+		rx_pwr_all = -38 - 2 * vga_idx;
+		break;
+	case 5:
+		rx_pwr_all = -28 - 2 * vga_idx;
+		break;
+	case 3:
+		rx_pwr_all = -8 - 2 * vga_idx;
+		break;
+	case 2:
+		rx_pwr_all = -1 - 2 * vga_idx;
+		break;
+	default:
+		break;
+	}
+
+	return rx_pwr_all;
+}
+
+static void rtw8814a_query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
+				      struct rtw_rx_pkt_stat *pkt_stat)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	struct rtw_jaguar_phy_status_rpt *rpt;
+	u8 gain[RTW_RF_PATH_MAX], rssi, i;
+	s8 rx_pwr_db, middle1, middle2;
+	s8 snr[RTW_RF_PATH_MAX];
+	s8 evm[RTW_RF_PATH_MAX];
+	u8 rfmode, subchannel;
+	u8 lna, vga;
+	s8 cfo[2];
+
+	rpt = (struct rtw_jaguar_phy_status_rpt *)phy_status;
+
+	pkt_stat->bw = RTW_CHANNEL_WIDTH_20;
+
+	if (pkt_stat->rate <= DESC_RATE11M) {
+		lna = le32_get_bits(rpt->w1, RTW_JGRPHY_W1_AGC_RPT_LNA_IDX);
+		vga = le32_get_bits(rpt->w1, RTW_JGRPHY_W1_AGC_RPT_VGA_IDX);
+
+		rx_pwr_db = rtw8814a_cck_rx_pwr(lna, vga);
+
+		pkt_stat->rx_power[RF_PATH_A] = rx_pwr_db;
+		pkt_stat->rssi = rtw_phy_rf_power_2_rssi(pkt_stat->rx_power, 1);
+		dm_info->rssi[RF_PATH_A] = pkt_stat->rssi;
+		pkt_stat->signal_power = rx_pwr_db;
+	} else { /* OFDM rate */
+		gain[RF_PATH_A] = le32_get_bits(rpt->w0, RTW_JGRPHY_W0_GAIN_A);
+		gain[RF_PATH_B] = le32_get_bits(rpt->w0, RTW_JGRPHY_W0_GAIN_B);
+		gain[RF_PATH_C] = le32_get_bits(rpt->w5, RTW_JGRPHY_W5_GAIN_C);
+		gain[RF_PATH_D] = le32_get_bits(rpt->w6, RTW_JGRPHY_W6_GAIN_D);
+
+		snr[RF_PATH_A] = le32_get_bits(rpt->w3, RTW_JGRPHY_W3_RXSNR_A);
+		snr[RF_PATH_B] = le32_get_bits(rpt->w4, RTW_JGRPHY_W4_RXSNR_B);
+		snr[RF_PATH_C] = le32_get_bits(rpt->w5, RTW_JGRPHY_W5_RXSNR_C);
+		snr[RF_PATH_D] = le32_get_bits(rpt->w5, RTW_JGRPHY_W5_RXSNR_D);
+
+		evm[RF_PATH_A] = le32_get_bits(rpt->w3, RTW_JGRPHY_W3_RXEVM_1);
+		evm[RF_PATH_B] = le32_get_bits(rpt->w3, RTW_JGRPHY_W3_RXEVM_2);
+		evm[RF_PATH_C] = le32_get_bits(rpt->w4, RTW_JGRPHY_W4_RXEVM_3);
+		evm[RF_PATH_D] = le32_get_bits(rpt->w5, RTW_JGRPHY_W5_RXEVM_4);
+
+		if (pkt_stat->rate <= DESC_RATE54M)
+			evm[RF_PATH_A] = le32_get_bits(rpt->w6,
+						       RTW_JGRPHY_W6_SIGEVM);
+
+		for (i = RF_PATH_A; i < RTW_RF_PATH_MAX; i++) {
+			pkt_stat->rx_power[i] = gain[i] - 110;
+
+			rssi = rtw_phy_rf_power_2_rssi(&pkt_stat->rx_power[i], 1);
+			dm_info->rssi[i] = rssi;
+
+			pkt_stat->rx_snr[i] = snr[i];
+			dm_info->rx_snr[i] = snr[i] >> 1;
+
+			pkt_stat->rx_evm[i] = evm[i];
+			evm[i] = max_t(s8, -127, evm[i]);
+			dm_info->rx_evm_dbm[i] = abs(evm[i]) >> 1;
+		}
+
+		rssi = rtw_phy_rf_power_2_rssi(pkt_stat->rx_power,
+					       RTW_RF_PATH_MAX);
+		pkt_stat->rssi = rssi;
+
+		/* When power saving is enabled the hardware sometimes
+		 * reports unbelievably high gain for paths A and C
+		 * (e.g. one frame 64 68 68 72, the next frame 106 66 88 72,
+		 * the next 66 66 68 72), so use the second lowest gain
+		 * instead of the highest.
+		 */
+		middle1 = max(min(gain[RF_PATH_A], gain[RF_PATH_B]),
+			      min(gain[RF_PATH_C], gain[RF_PATH_D]));
+		middle2 = min(max(gain[RF_PATH_A], gain[RF_PATH_B]),
+			      max(gain[RF_PATH_C], gain[RF_PATH_D]));
+		rx_pwr_db = min(middle1, middle2);
+		rx_pwr_db -= 110;
+		pkt_stat->signal_power = rx_pwr_db;
+
+		rfmode = le32_get_bits(rpt->w0, RTW_JGRPHY_W0_R_RFMOD);
+		subchannel = le32_get_bits(rpt->w0, RTW_JGRPHY_W0_SUB_CHNL);
+
+		if (rfmode == 1 && subchannel == 0) {
+			pkt_stat->bw = RTW_CHANNEL_WIDTH_40;
+		} else if (rfmode == 2) {
+			if (subchannel == 0)
+				pkt_stat->bw = RTW_CHANNEL_WIDTH_80;
+			else if (subchannel == 9 || subchannel == 10)
+				pkt_stat->bw = RTW_CHANNEL_WIDTH_40;
+		}
+
+		cfo[RF_PATH_A] = le32_get_bits(rpt->w2, RTW_JGRPHY_W2_CFO_TAIL_A);
+		cfo[RF_PATH_B] = le32_get_bits(rpt->w2, RTW_JGRPHY_W2_CFO_TAIL_B);
+
+		for (i = RF_PATH_A; i < 2; i++) {
+			pkt_stat->cfo_tail[i] = cfo[i];
+			dm_info->cfo_tail[i] = (cfo[i] * 5) >> 1;
+		}
+	}
+}
+
+static void
+rtw8814a_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path, u8 rs)
+{
+	struct rtw_hal *hal = &rtwdev->hal;
+	u32 txagc_table_wd;
+	u8 rate, pwr_index;
+	int j;
+
+	for (j = 0; j < rtw_rate_size[rs]; j++) {
+		rate = rtw_rate_section[rs][j];
+
+		pwr_index = hal->tx_pwr_tbl[path][rate] + 2;
+		if (pwr_index > rtwdev->chip->max_power_index)
+			pwr_index = rtwdev->chip->max_power_index;
+
+		txagc_table_wd = 0x00801000;
+		txagc_table_wd |= (pwr_index << 24) | (path << 8) | rate;
+
+		rtw_write32(rtwdev, REG_AGC_TBL, txagc_table_wd);
+
+		/* first time to turn on the txagc table
+		 * second to write the addr0
+		 */
+		if (rate == DESC_RATE1M)
+			rtw_write32(rtwdev, REG_AGC_TBL, txagc_table_wd);
+	}
+}
+
+static void rtw8814a_set_tx_power_index(struct rtw_dev *rtwdev)
+{
+	struct rtw_hal *hal = &rtwdev->hal;
+	int path;
+
+	for (path = 0; path < hal->rf_path_num; path++) {
+		if (hal->current_band_type == RTW_BAND_2G)
+			rtw8814a_set_tx_power_index_by_rate(rtwdev, path,
+							    RTW_RATE_SECTION_CCK);
+
+		rtw8814a_set_tx_power_index_by_rate(rtwdev, path,
+						    RTW_RATE_SECTION_OFDM);
+
+		if (test_bit(RTW_FLAG_SCANNING, rtwdev->flags))
+			continue;
+
+		rtw8814a_set_tx_power_index_by_rate(rtwdev, path,
+						    RTW_RATE_SECTION_HT_1S);
+		rtw8814a_set_tx_power_index_by_rate(rtwdev, path,
+						    RTW_RATE_SECTION_VHT_1S);
+
+		rtw8814a_set_tx_power_index_by_rate(rtwdev, path,
+						    RTW_RATE_SECTION_HT_2S);
+		rtw8814a_set_tx_power_index_by_rate(rtwdev, path,
+						    RTW_RATE_SECTION_VHT_2S);
+
+		rtw8814a_set_tx_power_index_by_rate(rtwdev, path,
+						    RTW_RATE_SECTION_HT_3S);
+		rtw8814a_set_tx_power_index_by_rate(rtwdev, path,
+						    RTW_RATE_SECTION_VHT_3S);
+	}
+}
+
+static void rtw8814a_cfg_ldo25(struct rtw_dev *rtwdev, bool enable)
+{
+}
+
+static void rtw8814a_set_ampdu_factor(struct rtw_dev *rtwdev, u8 factor)
+{
+	factor = min_t(u8, factor, IEEE80211_VHT_MAX_AMPDU_256K);
+
+	rtw_write32(rtwdev, REG_AMPDU_MAX_LENGTH, (8192 << factor) - 1);
+}
+
+static void rtw8814a_false_alarm_statistics(struct rtw_dev *rtwdev)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	u32 cck_fa_cnt, ofdm_fa_cnt;
+	u32 crc32_cnt, cca32_cnt;
+	u32 cck_enable;
+
+	cck_enable = rtw_read32(rtwdev, REG_RXPSEL) & BIT(28);
+	cck_fa_cnt = rtw_read16(rtwdev, REG_FA_CCK);
+	ofdm_fa_cnt = rtw_read16(rtwdev, REG_FA_OFDM);
+
+	dm_info->cck_fa_cnt = cck_fa_cnt;
+	dm_info->ofdm_fa_cnt = ofdm_fa_cnt;
+	dm_info->total_fa_cnt = ofdm_fa_cnt;
+	if (cck_enable)
+		dm_info->total_fa_cnt += cck_fa_cnt;
+
+	crc32_cnt = rtw_read32(rtwdev, REG_CRC_CCK);
+	dm_info->cck_ok_cnt = u32_get_bits(crc32_cnt, MASKLWORD);
+	dm_info->cck_err_cnt = u32_get_bits(crc32_cnt, MASKHWORD);
+
+	crc32_cnt = rtw_read32(rtwdev, REG_CRC_OFDM);
+	dm_info->ofdm_ok_cnt = u32_get_bits(crc32_cnt, MASKLWORD);
+	dm_info->ofdm_err_cnt = u32_get_bits(crc32_cnt, MASKHWORD);
+
+	crc32_cnt = rtw_read32(rtwdev, REG_CRC_HT);
+	dm_info->ht_ok_cnt = u32_get_bits(crc32_cnt, MASKLWORD);
+	dm_info->ht_err_cnt = u32_get_bits(crc32_cnt, MASKHWORD);
+
+	crc32_cnt = rtw_read32(rtwdev, REG_CRC_VHT);
+	dm_info->vht_ok_cnt = u32_get_bits(crc32_cnt, MASKLWORD);
+	dm_info->vht_err_cnt = u32_get_bits(crc32_cnt, MASKHWORD);
+
+	cca32_cnt = rtw_read32(rtwdev, REG_CCA_OFDM);
+	dm_info->ofdm_cca_cnt = u32_get_bits(cca32_cnt, MASKHWORD);
+	dm_info->total_cca_cnt = dm_info->ofdm_cca_cnt;
+	if (cck_enable) {
+		cca32_cnt = rtw_read32(rtwdev, REG_CCA_CCK);
+		dm_info->cck_cca_cnt = u32_get_bits(cca32_cnt, MASKLWORD);
+		dm_info->total_cca_cnt += dm_info->cck_cca_cnt;
+	}
+
+	rtw_write32_set(rtwdev, REG_FAS, BIT(17));
+	rtw_write32_clr(rtwdev, REG_FAS, BIT(17));
+	rtw_write32_clr(rtwdev, REG_CCK0_FAREPORT, BIT(15));
+	rtw_write32_set(rtwdev, REG_CCK0_FAREPORT, BIT(15));
+	rtw_write32_set(rtwdev, REG_CNTRST, BIT(0));
+	rtw_write32_clr(rtwdev, REG_CNTRST, BIT(0));
+}
+
+#define MAC_REG_NUM_8814 2
+#define BB_REG_NUM_8814 14
+#define RF_REG_NUM_8814 1
+
+static void rtw8814a_iqk_backup_mac_bb(struct rtw_dev *rtwdev,
+				       u32 *mac_backup, u32 *bb_backup,
+				       const u32 *mac_regs,
+				       const u32 *bb_regs)
+{
+	u32 i;
+
+	/* save MACBB default value */
+	for (i = 0; i < MAC_REG_NUM_8814; i++)
+		mac_backup[i] = rtw_read32(rtwdev, mac_regs[i]);
+
+	for (i = 0; i < BB_REG_NUM_8814; i++)
+		bb_backup[i] = rtw_read32(rtwdev, bb_regs[i]);
+}
+
+static void rtw8814a_iqk_backup_rf(struct rtw_dev *rtwdev,
+				   u32 rf_backup[][4], const u32 *rf_regs)
+{
+	u32 i;
+
+	/* Save RF Parameters */
+	for (i = 0; i < RF_REG_NUM_8814; i++) {
+		rf_backup[i][RF_PATH_A] = rtw_read_rf(rtwdev, RF_PATH_A,
+						      rf_regs[i], RFREG_MASK);
+		rf_backup[i][RF_PATH_B] = rtw_read_rf(rtwdev, RF_PATH_B,
+						      rf_regs[i], RFREG_MASK);
+		rf_backup[i][RF_PATH_C] = rtw_read_rf(rtwdev, RF_PATH_C,
+						      rf_regs[i], RFREG_MASK);
+		rf_backup[i][RF_PATH_D] = rtw_read_rf(rtwdev, RF_PATH_D,
+						      rf_regs[i], RFREG_MASK);
+	}
+}
+
+static void rtw8814a_iqk_afe_setting(struct rtw_dev *rtwdev, bool do_iqk)
+{
+	if (do_iqk) {
+		/* IQK AFE setting RX_WAIT_CCA mode */
+		rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x0e808003);
+		rtw_write32(rtwdev, REG_AFE_PWR1_B, 0x0e808003);
+		rtw_write32(rtwdev, REG_AFE_PWR1_C, 0x0e808003);
+		rtw_write32(rtwdev, REG_AFE_PWR1_D, 0x0e808003);
+	} else {
+		rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x07808003);
+		rtw_write32(rtwdev, REG_AFE_PWR1_B, 0x07808003);
+		rtw_write32(rtwdev, REG_AFE_PWR1_C, 0x07808003);
+		rtw_write32(rtwdev, REG_AFE_PWR1_D, 0x07808003);
+	}
+
+	rtw_write32_mask(rtwdev, REG_DAC_RSTB, BIT(13), 0x1);
+
+	rtw_write8_set(rtwdev, REG_GNT_BT, BIT(2) | BIT(1));
+	rtw_write8_clr(rtwdev, REG_GNT_BT, BIT(2) | BIT(1));
+
+	rtw_write32_set(rtwdev, REG_CCK_RPT_FORMAT, BIT(2));
+	rtw_write32_clr(rtwdev, REG_CCK_RPT_FORMAT, BIT(2));
+}
+
+static void rtw8814a_iqk_restore_mac_bb(struct rtw_dev *rtwdev,
+					u32 *mac_backup, u32 *bb_backup,
+					const u32 *mac_regs,
+					const u32 *bb_regs)
+{
+	u32 i;
+
+	/* Reload MacBB Parameters */
+	for (i = 0; i < MAC_REG_NUM_8814; i++)
+		rtw_write32(rtwdev, mac_regs[i], mac_backup[i]);
+
+	for (i = 0; i < BB_REG_NUM_8814; i++)
+		rtw_write32(rtwdev, bb_regs[i], bb_backup[i]);
+}
+
+static void rtw8814a_iqk_restore_rf(struct rtw_dev *rtwdev,
+				    const u32 rf_backup[][4],
+				    const u32 *rf_regs)
+{
+	u32 i;
+
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_LUTWE, RFREG_MASK, 0x0);
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_LUTWE, RFREG_MASK, 0x0);
+	rtw_write_rf(rtwdev, RF_PATH_C, RF_LUTWE, RFREG_MASK, 0x0);
+	rtw_write_rf(rtwdev, RF_PATH_D, RF_LUTWE, RFREG_MASK, 0x0);
+
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_RXBB2, RFREG_MASK, 0x88001);
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_RXBB2, RFREG_MASK, 0x88001);
+	rtw_write_rf(rtwdev, RF_PATH_C, RF_RXBB2, RFREG_MASK, 0x88001);
+	rtw_write_rf(rtwdev, RF_PATH_D, RF_RXBB2, RFREG_MASK, 0x88001);
+
+	for (i = 0; i < RF_REG_NUM_8814; i++) {
+		rtw_write_rf(rtwdev, RF_PATH_A, rf_regs[i],
+			     RFREG_MASK, rf_backup[i][RF_PATH_A]);
+		rtw_write_rf(rtwdev, RF_PATH_B, rf_regs[i],
+			     RFREG_MASK, rf_backup[i][RF_PATH_B]);
+		rtw_write_rf(rtwdev, RF_PATH_C, rf_regs[i],
+			     RFREG_MASK, rf_backup[i][RF_PATH_C]);
+		rtw_write_rf(rtwdev, RF_PATH_D, rf_regs[i],
+			     RFREG_MASK, rf_backup[i][RF_PATH_D]);
+	}
+}
+
+static void rtw8814a_iqk_reset_nctl(struct rtw_dev *rtwdev)
+{
+	rtw_write32(rtwdev, 0x1b00, 0xf8000000);
+	rtw_write32(rtwdev, 0x1b80, 0x00000006);
+
+	rtw_write32(rtwdev, 0x1b00, 0xf8000000);
+	rtw_write32(rtwdev, 0x1b80, 0x00000002);
+}
+
+static void rtw8814a_iqk_configure_mac(struct rtw_dev *rtwdev)
+{
+	rtw_write8(rtwdev, REG_TXPAUSE, 0x3f);
+	rtw_write32_clr(rtwdev, REG_BCN_CTRL,
+			(BIT_EN_BCN_FUNCTION << 8) | BIT_EN_BCN_FUNCTION);
+
+	/* RX ante off */
+	rtw_write8(rtwdev, REG_RXPSEL, 0x00);
+	/* CCA off */
+	rtw_write32_mask(rtwdev, REG_CCA2ND, 0xf, 0xe);
+	/* CCK RX path off */
+	rtw_write32_set(rtwdev, REG_PRECTRL, BIT_IQ_WGT);
+	rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77777777);
+	rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777777);
+	rtw_write32(rtwdev, REG_RFE_PINMUX_C, 0x77777777);
+	rtw_write32(rtwdev, REG_RFE_PINMUX_D, 0x77777777);
+	rtw_write32_mask(rtwdev, REG_RFE_INVSEL_D, BIT_RFE_SELSW0_D, 0x77);
+	rtw_write32_mask(rtwdev, REG_PSD, BIT_PSD_INI, 0x0);
+
+	rtw_write32_mask(rtwdev, REG_RFE_INV0, 0xf, 0x0);
+}
+
+static void rtw8814a_lok_one_shot(struct rtw_dev *rtwdev, u8 path)
+{
+	u32 lok_temp1, lok_temp2;
+	bool lok_ready;
+	u8 ii;
+
+	/* ADC Clock source */
+	rtw_write32_mask(rtwdev, REG_FAS, BIT(21) | BIT(20), path);
+	/* LOK: CMD ID = 0
+	 * {0xf8000011, 0xf8000021, 0xf8000041, 0xf8000081}
+	 */
+	rtw_write32(rtwdev, 0x1b00, 0xf8000001 | (BIT(path) << 4));
+
+	usleep_range(1000, 1100);
+
+	if (read_poll_timeout(!rtw_read32_mask, lok_ready, lok_ready,
+			      1000, 10000, false,
+			      rtwdev, 0x1b00, BIT(0))) {
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "==>S%d LOK timed out\n", path);
+
+		rtw8814a_iqk_reset_nctl(rtwdev);
+
+		rtw_write_rf(rtwdev, path, RF_DTXLOK, RFREG_MASK, 0x08400);
+
+		return;
+	}
+
+	rtw_write32(rtwdev, 0x1b00, 0xf8000000 | (path << 1));
+	rtw_write32(rtwdev, 0x1bd4, 0x003f0001);
+
+	lok_temp2 = rtw_read32_mask(rtwdev, 0x1bfc, 0x003e0000);
+	lok_temp2 = (lok_temp2 + 0x10) & 0x1f;
+
+	lok_temp1 = rtw_read32_mask(rtwdev, 0x1bfc, 0x0000003e);
+	lok_temp1 = (lok_temp1 + 0x10) & 0x1f;
+
+	for (ii = 1; ii < 5; ii++) {
+		lok_temp1 += (lok_temp1 & BIT(4 - ii)) << (ii * 2);
+		lok_temp2 += (lok_temp2 & BIT(4 - ii)) << (ii * 2);
+	}
+
+	rtw_dbg(rtwdev, RTW_DBG_RFK,
+		"path %d lok_temp1 = %#x, lok_temp2 = %#x\n",
+		path, lok_temp1 >> 4, lok_temp2 >> 4);
+
+	rtw_write_rf(rtwdev, path, RF_DTXLOK, 0x07c00, lok_temp1 >> 4);
+	rtw_write_rf(rtwdev, path, RF_DTXLOK, 0xf8000, lok_temp2 >> 4);
+}
+
+static void rtw8814a_iqk_tx_one_shot(struct rtw_dev *rtwdev, u8 path,
+				     u32 *tx_matrix, bool *tx_ok)
+{
+	u8 bw = rtwdev->hal.current_band_width;
+	u8 cal_retry;
+	u32 iqk_cmd;
+
+	for (cal_retry = 0; cal_retry < 4; cal_retry++) {
+		rtw_write32_mask(rtwdev, REG_FAS, BIT(21) | BIT(20), path);
+
+		iqk_cmd = 0xf8000001 | ((bw + 3) << 8) | (BIT(path) << 4);
+
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "TXK_Trigger = %#x\n", iqk_cmd);
+
+		rtw_write32(rtwdev, 0x1b00, iqk_cmd);
+
+		usleep_range(10000, 11000);
+
+		if (read_poll_timeout(!rtw_read32_mask, *tx_ok, *tx_ok,
+				      1000, 20000, false,
+				      rtwdev, 0x1b00, BIT(0))) {
+			rtw_dbg(rtwdev, RTW_DBG_RFK,
+				"tx iqk S%d timed out\n", path);
+
+			rtw8814a_iqk_reset_nctl(rtwdev);
+		} else {
+			*tx_ok = !rtw_read32_mask(rtwdev, 0x1b08, BIT(26));
+
+			if (*tx_ok)
+				break;
+		}
+	}
+
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "S%d tx ==> 0x1b00 = 0x%x\n",
+		path, rtw_read32(rtwdev, 0x1b00));
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "S%d tx ==> 0x1b08 = 0x%x\n",
+		path, rtw_read32(rtwdev, 0x1b08));
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "S%d tx ==> cal_retry = %x\n",
+		path, cal_retry);
+
+	rtw_write32(rtwdev, 0x1b00, 0xf8000000 | (path << 1));
+
+	if (*tx_ok) {
+		*tx_matrix = rtw_read32(rtwdev, 0x1b38);
+
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "S%d_IQC = 0x%x\n",
+			path, *tx_matrix);
+	}
+}
+
+static void rtw8814a_iqk_rx_one_shot(struct rtw_dev *rtwdev, u8 path,
+				     u32 *tx_matrix, bool *tx_ok)
+{
+	static const u16 iqk_apply[RTW_RF_PATH_MAX] = {
+		REG_TXAGCIDX, REG_TX_AGC_B, REG_TX_AGC_C, REG_TX_AGC_D
+	};
+	u8 band = rtwdev->hal.current_band_type;
+	u8 bw = rtwdev->hal.current_band_width;
+	u32 rx_matrix;
+	u8 cal_retry;
+	u32 iqk_cmd;
+	bool rx_ok;
+
+	for (cal_retry = 0; cal_retry < 4; cal_retry++) {
+		rtw_write32_mask(rtwdev, REG_FAS, BIT(21) | BIT(20), path);
+
+		if (band == RTW_BAND_2G) {
+			rtw_write_rf(rtwdev, path, RF_LUTDBG, BIT(11), 0x1);
+			rtw_write_rf(rtwdev, path, RF_GAINTX, 0xfffff, 0x51ce1);
+
+			switch (path) {
+			case 0:
+			case 1:
+				rtw_write32(rtwdev, REG_RFE_PINMUX_B,
+					    0x54775477);
+				break;
+			case 2:
+				rtw_write32(rtwdev, REG_RFE_PINMUX_C,
+					    0x54775477);
+				break;
+			case 3:
+				rtw_write32(rtwdev, REG_RFE_INVSEL_D, 0x75400000);
+				rtw_write32(rtwdev, REG_RFE_PINMUX_D,
+					    0x77777777);
+				break;
+			}
+		}
+
+		iqk_cmd = 0xf8000001 | ((9 - bw) << 8) | (BIT(path) << 4);
+
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "RXK_Trigger = 0x%x\n", iqk_cmd);
+
+		rtw_write32(rtwdev, 0x1b00, iqk_cmd);
+
+		usleep_range(10000, 11000);
+
+		if (read_poll_timeout(!rtw_read32_mask, rx_ok, rx_ok,
+				      1000, 20000, false,
+				      rtwdev, 0x1b00, BIT(0))) {
+			rtw_dbg(rtwdev, RTW_DBG_RFK,
+				"rx iqk S%d timed out\n", path);
+
+			rtw8814a_iqk_reset_nctl(rtwdev);
+		} else {
+			rx_ok = !rtw_read32_mask(rtwdev, 0x1b08, BIT(26));
+
+			if (rx_ok)
+				break;
+		}
+	}
+
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "S%d rx ==> 0x1b00 = 0x%x\n",
+		path, rtw_read32(rtwdev, 0x1b00));
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "S%d rx ==> 0x1b08 = 0x%x\n",
+		path, rtw_read32(rtwdev, 0x1b08));
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "S%d rx ==> cal_retry = %x\n",
+		path, cal_retry);
+
+	rtw_write32(rtwdev, 0x1b00, 0xf8000000 | (path << 1));
+
+	if (rx_ok) {
+		rtw_write32(rtwdev, 0x1b3c, 0x20000000);
+		rx_matrix = rtw_read32(rtwdev, 0x1b3c);
+
+		rtw_dbg(rtwdev, RTW_DBG_RFK, "S%d_IQC = 0x%x\n",
+			path, rx_matrix);
+	}
+
+	if (*tx_ok)
+		rtw_write32(rtwdev, 0x1b38, *tx_matrix);
+	else
+		rtw_write32_mask(rtwdev, iqk_apply[path], BIT(0), 0x0);
+
+	if (!rx_ok)
+		rtw_write32_mask(rtwdev, iqk_apply[path],
+				 BIT(11) | BIT(10), 0x0);
+
+	if (band == RTW_BAND_2G)
+		rtw_write_rf(rtwdev, path, RF_LUTDBG, BIT(11), 0x0);
+}
+
+static void rtw8814a_iqk(struct rtw_dev *rtwdev)
+{
+	u8 band = rtwdev->hal.current_band_type;
+	u8 bw = rtwdev->hal.current_band_width;
+	u32 tx_matrix[RTW_RF_PATH_MAX];
+	bool tx_ok[RTW_RF_PATH_MAX];
+	u8 path;
+
+	rtw_dbg(rtwdev, RTW_DBG_RFK, "IQK band = %d GHz bw = %d MHz\n",
+		band == RTW_BAND_2G ? 2 : 5, (1 << (bw + 1)) * 10);
+
+	rtw_write_rf(rtwdev, RF_PATH_A, RF_TXMOD, BIT(19), 0x1);
+	rtw_write_rf(rtwdev, RF_PATH_B, RF_TXMOD, BIT(19), 0x1);
+	rtw_write_rf(rtwdev, RF_PATH_C, RF_TXMOD, BIT(19), 0x1);
+	rtw_write_rf(rtwdev, RF_PATH_D, RF_TXMOD, BIT(19), 0x1);
+
+	rtw_write32_mask(rtwdev, REG_TXAGCIDX,
+			 (BIT(11) | BIT(10) | BIT(0)), 0x401);
+	rtw_write32_mask(rtwdev, REG_TX_AGC_B,
+			 (BIT(11) | BIT(10) | BIT(0)), 0x401);
+	rtw_write32_mask(rtwdev, REG_TX_AGC_C,
+			 (BIT(11) | BIT(10) | BIT(0)), 0x401);
+	rtw_write32_mask(rtwdev, REG_TX_AGC_D,
+			 (BIT(11) | BIT(10) | BIT(0)), 0x401);
+
+	if (band == RTW_BAND_5G)
+		rtw_write32(rtwdev, 0x1b00, 0xf8000ff1);
+	else
+		rtw_write32(rtwdev, 0x1b00, 0xf8000ef1);
+
+	usleep_range(1000, 1100);
+
+	rtw_write32(rtwdev, 0x810, 0x20101063);
+	rtw_write32(rtwdev, REG_DAC_RSTB, 0x0B00C000);
+
+	for (path = RF_PATH_A; path < RTW_RF_PATH_MAX; path++)
+		rtw8814a_lok_one_shot(rtwdev, path);
+
+	for (path = RF_PATH_A; path < RTW_RF_PATH_MAX; path++)
+		rtw8814a_iqk_tx_one_shot(rtwdev, path,
+					 &tx_matrix[path], &tx_ok[path]);
+
+	for (path = RF_PATH_A; path < RTW_RF_PATH_MAX; path++)
+		rtw8814a_iqk_rx_one_shot(rtwdev, path,
+					 &tx_matrix[path], &tx_ok[path]);
+}
+
+static void rtw8814a_do_iqk(struct rtw_dev *rtwdev)
+{
+	static const u32 backup_mac_reg[MAC_REG_NUM_8814] = {0x520, 0x550};
+	static const u32 backup_bb_reg[BB_REG_NUM_8814] = {
+		0xa14, 0x808, 0x838, 0x90c, 0x810, 0xcb0, 0xeb0,
+		0x18b4, 0x1ab4, 0x1abc, 0x9a4, 0x764, 0xcbc, 0x910
+	};
+	static const u32 backup_rf_reg[RF_REG_NUM_8814] = {0x0};
+	u32 rf_backup[RF_REG_NUM_8814][RTW_RF_PATH_MAX];
+	u32 mac_backup[MAC_REG_NUM_8814];
+	u32 bb_backup[BB_REG_NUM_8814];
+
+	rtw8814a_iqk_backup_mac_bb(rtwdev, mac_backup, bb_backup,
+				   backup_mac_reg, backup_bb_reg);
+	rtw8814a_iqk_afe_setting(rtwdev, true);
+	rtw8814a_iqk_backup_rf(rtwdev, rf_backup, backup_rf_reg);
+	rtw8814a_iqk_configure_mac(rtwdev);
+	rtw8814a_iqk(rtwdev);
+	rtw8814a_iqk_reset_nctl(rtwdev); /* for 3-wire to BB use */
+	rtw8814a_iqk_afe_setting(rtwdev, false);
+	rtw8814a_iqk_restore_mac_bb(rtwdev, mac_backup, bb_backup,
+				    backup_mac_reg, backup_bb_reg);
+	rtw8814a_iqk_restore_rf(rtwdev, rf_backup, backup_rf_reg);
+}
+
+static void rtw8814a_phy_calibration(struct rtw_dev *rtwdev)
+{
+	rtw8814a_do_iqk(rtwdev);
+}
+
+static void rtw8814a_coex_cfg_init(struct rtw_dev *rtwdev)
+{
+}
+
+static void rtw8814a_coex_cfg_ant_switch(struct rtw_dev *rtwdev, u8 ctrl_type,
+					 u8 pos_type)
+{
+	/* Override rtw_coex_coex_ctrl_owner(). RF path C does not
+	 * function when BIT_LTE_MUX_CTRL_PATH is set.
+	 */
+	rtw_write8_clr(rtwdev, REG_SYS_SDIO_CTRL + 3,
+		       BIT_LTE_MUX_CTRL_PATH >> 24);
+}
+
+static void rtw8814a_coex_cfg_gnt_fix(struct rtw_dev *rtwdev)
+{
+}
+
+static void rtw8814a_coex_cfg_gnt_debug(struct rtw_dev *rtwdev)
+{
+}
+
+static void rtw8814a_coex_cfg_rfe_type(struct rtw_dev *rtwdev)
+{
+	struct rtw_coex *coex = &rtwdev->coex;
+	struct rtw_coex_rfe *coex_rfe = &coex->rfe;
+
+	/* Only needed to make rtw8814a_coex_cfg_ant_switch() run. */
+	coex_rfe->ant_switch_exist = true;
+}
+
+static void rtw8814a_coex_cfg_wl_tx_power(struct rtw_dev *rtwdev, u8 wl_pwr)
+{
+}
+
+static void rtw8814a_coex_cfg_wl_rx_gain(struct rtw_dev *rtwdev, bool low_gain)
+{
+}
+
+static void rtw8814a_txagc_swing_offset(struct rtw_dev *rtwdev, u8 path,
+					u8 tx_pwr_idx_offset,
+					s8 *txagc_idx, u8 *swing_idx)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	u8 swing_upper_bound = dm_info->default_ofdm_index + 10;
+	s8 delta_pwr_idx = dm_info->delta_power_index[path];
+	u8 swing_index = dm_info->default_ofdm_index;
+	u8 max_tx_pwr_idx_offset = 0xf;
+	u8 swing_lower_bound = 0;
+	s8 agc_index = 0;
+
+	tx_pwr_idx_offset = min_t(u8, tx_pwr_idx_offset, max_tx_pwr_idx_offset);
+
+	if (delta_pwr_idx >= 0) {
+		if (delta_pwr_idx <= tx_pwr_idx_offset) {
+			agc_index = delta_pwr_idx;
+			swing_index = dm_info->default_ofdm_index;
+		} else if (delta_pwr_idx > tx_pwr_idx_offset) {
+			agc_index = tx_pwr_idx_offset;
+			swing_index = dm_info->default_ofdm_index +
+					delta_pwr_idx - tx_pwr_idx_offset;
+			swing_index = min_t(u8, swing_index, swing_upper_bound);
+		}
+	} else {
+		if (dm_info->default_ofdm_index > abs(delta_pwr_idx))
+			swing_index =
+				dm_info->default_ofdm_index + delta_pwr_idx;
+		else
+			swing_index = swing_lower_bound;
+		swing_index = max_t(u8, swing_index, swing_lower_bound);
+
+		agc_index = 0;
+	}
+
+	if (swing_index >= RTW_TXSCALE_SIZE) {
+		rtw_warn(rtwdev, "swing index overflow\n");
+		swing_index = RTW_TXSCALE_SIZE - 1;
+	}
+	*txagc_idx = agc_index;
+	*swing_idx = swing_index;
+}
+
+static void rtw8814a_pwrtrack_set_pwr(struct rtw_dev *rtwdev, u8 path,
+				      u8 pwr_idx_offset)
+{
+	static const u32 txagc_reg[RTW_RF_PATH_MAX] = {
+		REG_TX_AGC_A, REG_TX_AGC_B, REG_TX_AGC_C, REG_TX_AGC_D
+	};
+	static const u32 txscale_reg[RTW_RF_PATH_MAX] = {
+		REG_TXSCALE_A, REG_TXSCALE_B, REG_TXSCALE_C, REG_TXSCALE_D
+	};
+	s8 txagc_idx;
+	u8 swing_idx;
+
+	rtw8814a_txagc_swing_offset(rtwdev, path, pwr_idx_offset,
+				    &txagc_idx, &swing_idx);
+	rtw_write32_mask(rtwdev, txagc_reg[path], GENMASK(29, 25),
+			 txagc_idx);
+	rtw_write32_mask(rtwdev, txscale_reg[path], BB_SWING_MASK,
+			 rtw8814a_txscale_tbl[swing_idx]);
+}
+
+static void rtw8814a_pwrtrack_set(struct rtw_dev *rtwdev, u8 path)
+{
+	u8 max_pwr_idx = rtwdev->chip->max_power_index;
+	u8 band_width = rtwdev->hal.current_band_width;
+	u8 channel = rtwdev->hal.current_channel;
+	u8 tx_rate = rtwdev->dm_info.tx_rate;
+	u8 regd = rtw_regd_get(rtwdev);
+	u8 pwr_idx_offset, tx_pwr_idx;
+
+	tx_pwr_idx = rtw_phy_get_tx_power_index(rtwdev, path, tx_rate,
+						band_width, channel, regd);
+
+	tx_pwr_idx = min_t(u8, tx_pwr_idx, max_pwr_idx);
+
+	pwr_idx_offset = max_pwr_idx - tx_pwr_idx;
+
+	rtw8814a_pwrtrack_set_pwr(rtwdev, path, pwr_idx_offset);
+}
+
+static void rtw8814a_phy_pwrtrack_path(struct rtw_dev *rtwdev,
+				       struct rtw_swing_table *swing_table,
+				       u8 path)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	u8 power_idx_cur, power_idx_last;
+	u8 delta;
+
+	/* 8814A only has one thermal meter at PATH A */
+	delta = rtw_phy_pwrtrack_get_delta(rtwdev, RF_PATH_A);
+
+	power_idx_last = dm_info->delta_power_index[path];
+	power_idx_cur = rtw_phy_pwrtrack_get_pwridx(rtwdev, swing_table,
+						    path, RF_PATH_A, delta);
+
+	/* if delta of power indexes are the same, just skip */
+	if (power_idx_cur == power_idx_last)
+		return;
+
+	dm_info->delta_power_index[path] = power_idx_cur;
+	rtw8814a_pwrtrack_set(rtwdev, path);
+}
+
+static void rtw8814a_phy_pwrtrack(struct rtw_dev *rtwdev)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	struct rtw_swing_table swing_table;
+	u8 thermal_value, path;
+
+	rtw_phy_config_swing_table(rtwdev, &swing_table);
+
+	if (rtwdev->efuse.thermal_meter[RF_PATH_A] == 0xff)
+		return;
+
+	thermal_value = rtw_read_rf(rtwdev, RF_PATH_A, RF_T_METER, 0xfc00);
+
+	rtw_phy_pwrtrack_avg(rtwdev, thermal_value, RF_PATH_A);
+
+	if (dm_info->pwr_trk_init_trigger)
+		dm_info->pwr_trk_init_trigger = false;
+	else if (!rtw_phy_pwrtrack_thermal_changed(rtwdev, thermal_value,
+						   RF_PATH_A))
+		goto iqk;
+
+	for (path = RF_PATH_A; path < rtwdev->hal.rf_path_num; path++)
+		rtw8814a_phy_pwrtrack_path(rtwdev, &swing_table, path);
+
+iqk:
+	if (rtw_phy_pwrtrack_need_iqk(rtwdev))
+		rtw8814a_do_iqk(rtwdev);
+}
+
+static void rtw8814a_pwr_track(struct rtw_dev *rtwdev)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+
+	if (!dm_info->pwr_trk_triggered) {
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_T_METER,
+			     GENMASK(17, 16), 0x03);
+		dm_info->pwr_trk_triggered = true;
+		return;
+	}
+
+	rtw8814a_phy_pwrtrack(rtwdev);
+	dm_info->pwr_trk_triggered = false;
+}
+
+static void rtw8814a_phy_cck_pd_set(struct rtw_dev *rtwdev, u8 new_lvl)
+{
+	static const u8 pd[CCK_PD_LV_MAX] = {0x40, 0x83, 0xcd, 0xdd, 0xed};
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+
+	/* Override rtw_phy_cck_pd_lv_link(). It implements something
+	 * like type 2/3/4. We need type 1 here.
+	 */
+	if (rtw_is_assoc(rtwdev)) {
+		if (dm_info->min_rssi > 60) {
+			new_lvl = CCK_PD_LV3;
+		} else if (dm_info->min_rssi > 35) {
+			new_lvl = CCK_PD_LV2;
+		} else if (dm_info->min_rssi > 20) {
+			if (dm_info->cck_fa_avg > 500)
+				new_lvl = CCK_PD_LV2;
+			else if (dm_info->cck_fa_avg < 250)
+				new_lvl = CCK_PD_LV1;
+			else
+				return;
+		} else {
+			new_lvl = CCK_PD_LV1;
+		}
+	}
+
+	rtw_dbg(rtwdev, RTW_DBG_PHY, "lv: (%d) -> (%d)\n",
+		dm_info->cck_pd_lv[RTW_CHANNEL_WIDTH_20][RF_PATH_A], new_lvl);
+
+	if (dm_info->cck_pd_lv[RTW_CHANNEL_WIDTH_20][RF_PATH_A] == new_lvl)
+		return;
+
+	dm_info->cck_fa_avg = CCK_FA_AVG_RESET;
+	dm_info->cck_pd_lv[RTW_CHANNEL_WIDTH_20][RF_PATH_A] = new_lvl;
+
+	rtw_write8(rtwdev, REG_CCK_PD_TH, pd[new_lvl]);
+}
+
+static void rtw8814a_led_set(struct led_classdev *led,
+			     enum led_brightness brightness)
+{
+	struct rtw_dev *rtwdev = container_of(led, struct rtw_dev, led_cdev);
+	u32 led_gpio_cfg;
+
+	led_gpio_cfg = rtw_read32(rtwdev, REG_GPIO_PIN_CTRL_2);
+	led_gpio_cfg |= BIT(16) | BIT(17) | BIT(21) | BIT(22);
+
+	if (brightness == LED_OFF) {
+		led_gpio_cfg |= BIT(8) | BIT(9) | BIT(13) | BIT(14);
+	} else {
+		led_gpio_cfg &= ~(BIT(8) | BIT(9) | BIT(13) | BIT(14));
+		led_gpio_cfg &= ~(BIT(0) | BIT(1) | BIT(5) | BIT(6));
+	}
+
+	rtw_write32(rtwdev, REG_GPIO_PIN_CTRL_2, led_gpio_cfg);
+}
+
+static void rtw8814a_fill_txdesc_checksum(struct rtw_dev *rtwdev,
+					  struct rtw_tx_pkt_info *pkt_info,
+					  u8 *txdesc)
+{
+	size_t words = 32 / 2; /* calculate the first 32 bytes (16 words) */
+
+	fill_txdesc_checksum_common(txdesc, words);
+}
+
+static const struct rtw_chip_ops rtw8814a_ops = {
+	.power_on		= rtw_power_on,
+	.power_off		= rtw_power_off,
+	.phy_set_param		= rtw8814a_phy_set_param,
+	.read_efuse		= rtw8814a_read_efuse,
+	.query_phy_status	= rtw8814a_query_phy_status,
+	.set_channel		= rtw8814a_set_channel,
+	.mac_init		= rtw8814a_mac_init,
+	.read_rf		= rtw_phy_read_rf,
+	.write_rf		= rtw_phy_write_rf_reg_sipi,
+	.set_tx_power_index	= rtw8814a_set_tx_power_index,
+	.set_antenna		= NULL,
+	.cfg_ldo25		= rtw8814a_cfg_ldo25,
+	.efuse_grant		= rtw8814a_efuse_grant,
+	.set_ampdu_factor	= rtw8814a_set_ampdu_factor,
+	.false_alarm_statistics	= rtw8814a_false_alarm_statistics,
+	.phy_calibration	= rtw8814a_phy_calibration,
+	.cck_pd_set		= rtw8814a_phy_cck_pd_set,
+	.pwr_track		= rtw8814a_pwr_track,
+	.config_bfee		= NULL,
+	.set_gid_table		= NULL,
+	.cfg_csi_rate		= NULL,
+	.led_set		= rtw8814a_led_set,
+	.fill_txdesc_checksum	= rtw8814a_fill_txdesc_checksum,
+
+	.coex_set_init		= rtw8814a_coex_cfg_init,
+	.coex_set_ant_switch	= rtw8814a_coex_cfg_ant_switch,
+	.coex_set_gnt_fix	= rtw8814a_coex_cfg_gnt_fix,
+	.coex_set_gnt_debug	= rtw8814a_coex_cfg_gnt_debug,
+	.coex_set_rfe_type	= rtw8814a_coex_cfg_rfe_type,
+	.coex_set_wl_tx_power	= rtw8814a_coex_cfg_wl_tx_power,
+	.coex_set_wl_rx_gain	= rtw8814a_coex_cfg_wl_rx_gain,
+};
+
+static const struct rtw_rqpn rqpn_table_8814a[] = {
+	/* SDIO */
+	{RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL, /* vo vi */
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,	 /* be bk */
+	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},	 /* mg hi */
+	/* PCIE */
+	{RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH},
+	/* USB, 2 bulk out */
+	{RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH,
+	 RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH},
+	/* USB, 3 bulk out */
+	{RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH},
+	/* USB, 4 bulk out */
+	{RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH},
+};
+
+static const struct rtw_prioq_addrs prioq_addrs_8814a = {
+	.prio[RTW_DMA_MAPPING_EXTRA] = {
+		.rsvd = REG_FIFOPAGE_INFO_4, .avail = REG_FIFOPAGE_INFO_4 + 2,
+	},
+	.prio[RTW_DMA_MAPPING_LOW] = {
+		.rsvd = REG_FIFOPAGE_INFO_2, .avail = REG_FIFOPAGE_INFO_2 + 2,
+	},
+	.prio[RTW_DMA_MAPPING_NORMAL] = {
+		.rsvd = REG_FIFOPAGE_INFO_3, .avail = REG_FIFOPAGE_INFO_3 + 2,
+	},
+	.prio[RTW_DMA_MAPPING_HIGH] = {
+		.rsvd = REG_FIFOPAGE_INFO_1, .avail = REG_FIFOPAGE_INFO_1 + 2,
+	},
+	.wsize = true,
+};
+
+static const struct rtw_page_table page_table_8814a[] = {
+	/* SDIO */
+	{0, 0, 0, 0, 0},	/* hq nq lq exq gapq */
+	/* PCIE */
+	{32, 32, 32, 32, 0},
+	/* USB, 2 bulk out */
+	{32, 32, 32, 32, 0},
+	/* USB, 3 bulk out */
+	{32, 32, 32, 32, 0},
+	/* USB, 4 bulk out */
+	{32, 32, 32, 32, 0},
+};
+
+static const struct rtw_intf_phy_para_table phy_para_table_8814a = {};
+
+static const struct rtw_hw_reg rtw8814a_dig[] = {
+	[0] = { .addr = 0xc50, .mask = 0x7f },
+	[1] = { .addr = 0xe50, .mask = 0x7f },
+	[2] = { .addr = 0x1850, .mask = 0x7f },
+	[3] = { .addr = 0x1a50, .mask = 0x7f },
+};
+
+static const struct rtw_rfe_def rtw8814a_rfe_defs[] = {
+	[0] = { .phy_pg_tbl	= &rtw8814a_bb_pg_type0_tbl,
+		.txpwr_lmt_tbl	= &rtw8814a_txpwr_lmt_type0_tbl,
+		.pwr_track_tbl	= &rtw8814a_rtw_pwrtrk_type0_tbl },
+	[1] = { .phy_pg_tbl	= &rtw8814a_bb_pg_tbl,
+		.txpwr_lmt_tbl	= &rtw8814a_txpwr_lmt_type1_tbl,
+		.pwr_track_tbl	= &rtw8814a_rtw_pwrtrk_tbl },
+};
+
+/* rssi in percentage % (dbm = % - 100) */
+static const u8 wl_rssi_step_8814a[] = {60, 50, 44, 30};
+static const u8 bt_rssi_step_8814a[] = {30, 30, 30, 30};
+
+/* wl_tx_dec_power, bt_tx_dec_power, wl_rx_gain, bt_rx_lna_constrain */
+static const struct coex_rf_para rf_para_tx_8814a[] = {
+	{0, 0, false, 7},  /* for normal */
+	{0, 16, false, 7}, /* for WL-CPT */
+	{4, 0, true, 1},
+	{3, 6, true, 1},
+	{2, 9, true, 1},
+	{1, 13, true, 1}
+};
+
+static const struct coex_rf_para rf_para_rx_8814a[] = {
+	{0, 0, false, 7},  /* for normal */
+	{0, 16, false, 7}, /* for WL-CPT */
+	{4, 0, true, 1},
+	{3, 6, true, 1},
+	{2, 9, true, 1},
+	{1, 13, true, 1}
+};
+
+static_assert(ARRAY_SIZE(rf_para_tx_8814a) == ARRAY_SIZE(rf_para_rx_8814a));
+
+const struct rtw_chip_info rtw8814a_hw_spec = {
+	.ops = &rtw8814a_ops,
+	.id = RTW_CHIP_TYPE_8814A,
+	.fw_name = "rtw88/rtw8814a_fw.bin",
+	.wlan_cpu = RTW_WCPU_11AC,
+	.tx_pkt_desc_sz = 40,
+	.tx_buf_desc_sz = 16,
+	.rx_pkt_desc_sz = 24,
+	.rx_buf_desc_sz = 8,
+	.phy_efuse_size = 1024,
+	.log_efuse_size = 512,
+	.ptct_efuse_size = 0,
+	.txff_size = (2048 - 10) * TX_PAGE_SIZE,
+	.rxff_size = 23552,
+	.rsvd_drv_pg_num = 8,
+	.band = RTW_BAND_2G | RTW_BAND_5G,
+	.page_size = TX_PAGE_SIZE,
+	.csi_buf_pg_num = 0,
+	.dig_min = 0x1c,
+	.txgi_factor = 1,
+	.is_pwr_by_rate_dec = true,
+	.rx_ldpc = true,
+	.max_power_index = 0x3f,
+	.ampdu_density = IEEE80211_HT_MPDU_DENSITY_2,
+	.amsdu_in_ampdu = false,
+	.usb_tx_agg_desc_num = 3,
+	.hw_feature_report = false,
+	.c2h_ra_report_size = 6,
+	.old_datarate_fb_limit = false,
+	.ht_supported = true,
+	.vht_supported = true,
+	.lps_deep_mode_supported = BIT(LPS_DEEP_MODE_LCLK),
+	.sys_func_en = 0xDC,
+	.pwr_on_seq = card_enable_flow_8814a,
+	.pwr_off_seq = card_disable_flow_8814a,
+	.rqpn_table = rqpn_table_8814a,
+	.prioq_addrs = &prioq_addrs_8814a,
+	.page_table = page_table_8814a,
+	.intf_table = &phy_para_table_8814a,
+	.dig = rtw8814a_dig,
+	.dig_cck = NULL,
+	.rf_base_addr = {0x2800, 0x2c00, 0x3800, 0x3c00},
+	.rf_sipi_addr = {0xc90, 0xe90, 0x1890, 0x1a90},
+	.ltecoex_addr = NULL,
+	.mac_tbl = &rtw8814a_mac_tbl,
+	.agc_tbl = &rtw8814a_agc_tbl,
+	.bb_tbl = &rtw8814a_bb_tbl,
+	.rf_tbl = {&rtw8814a_rf_a_tbl, &rtw8814a_rf_b_tbl,
+		   &rtw8814a_rf_c_tbl, &rtw8814a_rf_d_tbl},
+	.rfe_defs = rtw8814a_rfe_defs,
+	.rfe_defs_size = ARRAY_SIZE(rtw8814a_rfe_defs),
+	.iqk_threshold = 8,
+	.max_scan_ie_len = IEEE80211_MAX_DATA_LEN,
+
+	.coex_para_ver = 0,
+	.bt_desired_ver = 0,
+	.scbd_support = false,
+	.new_scbd10_def = false,
+	.ble_hid_profile_support = false,
+	.wl_mimo_ps_support = false,
+	.pstdma_type = COEX_PSTDMA_FORCE_LPSOFF,
+	.bt_rssi_type = COEX_BTRSSI_RATIO,
+	.ant_isolation = 15,
+	.rssi_tolerance = 2,
+	.wl_rssi_step = wl_rssi_step_8814a,
+	.bt_rssi_step = bt_rssi_step_8814a,
+	.table_sant_num = 0,
+	.table_sant = NULL,
+	.table_nsant_num = 0,
+	.table_nsant = NULL,
+	.tdma_sant_num = 0,
+	.tdma_sant = NULL,
+	.tdma_nsant_num = 0,
+	.tdma_nsant = NULL,
+	.wl_rf_para_num = ARRAY_SIZE(rf_para_tx_8814a),
+	.wl_rf_para_tx = rf_para_tx_8814a,
+	.wl_rf_para_rx = rf_para_rx_8814a,
+	.bt_afh_span_bw20 = 0x24,
+	.bt_afh_span_bw40 = 0x36,
+	.afh_5g_num = 0,
+	.afh_5g = NULL,
+	.coex_info_hw_regs_num = 0,
+	.coex_info_hw_regs = NULL,
+};
+EXPORT_SYMBOL(rtw8814a_hw_spec);
+
+MODULE_FIRMWARE("rtw88/rtw8814a_fw.bin");
+
+MODULE_AUTHOR("Bitterblue Smith <rtl8821cerfe2@gmail.com>");
+MODULE_DESCRIPTION("Realtek 802.11ac wireless 8814a driver");
+MODULE_LICENSE("Dual BSD/GPL");
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8814a.h b/drivers/net/wireless/realtek/rtw88/rtw8814a.h
new file mode 100644
index 000000000000..c57c7c8f915e
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8814a.h
@@ -0,0 +1,62 @@
+/* SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause */
+/* Copyright(c) 2025  Realtek Corporation
+ */
+
+#ifndef __RTW8814A_H__
+#define __RTW8814A_H__
+
+struct rtw8814au_efuse {
+	u8 vid[2];			/* 0xd0 */
+	u8 pid[2];			/* 0xd2 */
+	u8 res[4];			/* 0xd4 */
+	u8 mac_addr[ETH_ALEN];		/* 0xd8 */
+} __packed;
+
+struct rtw8814ae_efuse {
+	u8 mac_addr[ETH_ALEN];		/* 0xd0 */
+	u8 vid[2];			/* 0xd6 */
+	u8 did[2];			/* 0xd8 */
+	u8 svid[2];			/* 0xda */
+	u8 smid[2];			/* 0xdc */
+} __packed;
+
+struct rtw8814a_efuse {
+	__le16 rtl_id;
+	u8 res0[0x0c];
+	u8 usb_mode;			/* 0x0e */
+	u8 res1;
+
+	/* power index for four RF paths */
+	struct rtw_txpwr_idx txpwr_idx_table[4];
+
+	u8 channel_plan;		/* 0xb8 */
+	u8 xtal_k;			/* 0xb9 */
+	u8 thermal_meter;		/* 0xba */
+	u8 iqk_lck;			/* 0xbb */
+	u8 pa_type;			/* 0xbc */
+	u8 lna_type_2g[2];		/* 0xbd */
+	u8 lna_type_5g[2];		/* 0xbf */
+	u8 rf_board_option;		/* 0xc1 */
+	u8 res2;
+	u8 rf_bt_setting;		/* 0xc3 */
+	u8 eeprom_version;		/* 0xc4 */
+	u8 eeprom_customer_id;		/* 0xc5 */
+	u8 tx_bb_swing_setting_2g;	/* 0xc6 */
+	u8 tx_bb_swing_setting_5g;	/* 0xc7 */
+	u8 res3;
+	u8 trx_antenna_option;		/* 0xc9 */
+	u8 rfe_option;			/* 0xca */
+	u8 country_code[2];		/* 0xcb */
+	u8 res4[3];
+	union {
+		struct rtw8814au_efuse u;
+		struct rtw8814ae_efuse e;
+	};
+	u8 res5[0x122];			/* 0xde */
+} __packed;
+
+static_assert(sizeof(struct rtw8814a_efuse) == 512);
+
+extern const struct rtw_chip_info rtw8814a_hw_spec;
+
+#endif
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8814a_table.c b/drivers/net/wireless/realtek/rtw88/rtw8814a_table.c
new file mode 100644
index 000000000000..b9ce51a09fc8
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8814a_table.c
@@ -0,0 +1,23930 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2025  Realtek Corporation
+ */
+
+#include "main.h"
+#include "phy.h"
+#include "rtw8814a_table.h"
+
+static const u32 rtw8814a_mac[] = {
+	0x010, 0x0000007C,
+	0x014, 0x000000DB,
+	0x016, 0x00000002,
+	0x073, 0x00000010,
+	0x420, 0x00000080,
+	0x421, 0x0000000F,
+	0x428, 0x0000000A,
+	0x429, 0x00000010,
+	0x430, 0x00000000,
+	0x431, 0x00000000,
+	0x432, 0x00000000,
+	0x433, 0x00000001,
+	0x434, 0x00000004,
+	0x435, 0x00000005,
+	0x436, 0x00000007,
+	0x437, 0x00000008,
+	0x43C, 0x00000004,
+	0x43D, 0x00000005,
+	0x43E, 0x00000007,
+	0x43F, 0x00000008,
+	0x440, 0x0000005D,
+	0x441, 0x00000001,
+	0x442, 0x00000000,
+	0x444, 0x00000010,
+	0x445, 0x000000F0,
+	0x446, 0x00000001,
+	0x447, 0x000000FE,
+	0x448, 0x00000000,
+	0x449, 0x00000000,
+	0x44A, 0x00000000,
+	0x44B, 0x00000040,
+	0x44C, 0x00000010,
+	0x44D, 0x000000F0,
+	0x44E, 0x0000003F,
+	0x44F, 0x00000000,
+	0x450, 0x00000000,
+	0x451, 0x00000000,
+	0x452, 0x00000000,
+	0x453, 0x00000040,
+	0x45E, 0x00000004,
+	0x49C, 0x00000010,
+	0x49D, 0x000000F0,
+	0x49E, 0x00000000,
+	0x49F, 0x00000006,
+	0x4A0, 0x000000E0,
+	0x4A1, 0x00000003,
+	0x4A2, 0x00000000,
+	0x4A3, 0x00000040,
+	0x4A4, 0x00000015,
+	0x4A5, 0x000000F0,
+	0x4A6, 0x00000000,
+	0x4A7, 0x00000006,
+	0x4A8, 0x000000E0,
+	0x4A9, 0x00000000,
+	0x4AA, 0x00000000,
+	0x4AB, 0x00000000,
+	0x7DA, 0x00000008,
+	0x1448, 0x00000006,
+	0x144A, 0x00000006,
+	0x144C, 0x00000006,
+	0x144E, 0x00000006,
+	0x4C8, 0x000000FF,
+	0x4C9, 0x00000008,
+	0x4CA, 0x0000003C,
+	0x4CB, 0x0000003C,
+	0x4CC, 0x000000FF,
+	0x4CD, 0x000000FF,
+	0x4CE, 0x00000001,
+	0x4CF, 0x00000008,
+	0x500, 0x00000026,
+	0x501, 0x000000A2,
+	0x502, 0x0000002F,
+	0x503, 0x00000000,
+	0x504, 0x00000028,
+	0x505, 0x000000A3,
+	0x506, 0x0000005E,
+	0x507, 0x00000000,
+	0x508, 0x0000002B,
+	0x509, 0x000000A4,
+	0x50A, 0x0000005E,
+	0x50B, 0x00000000,
+	0x50C, 0x0000004F,
+	0x50D, 0x000000A4,
+	0x50E, 0x00000000,
+	0x50F, 0x00000000,
+	0x512, 0x0000001C,
+	0x514, 0x0000000A,
+	0x516, 0x0000000A,
+	0x521, 0x0000002F,
+	0x525, 0x00000047,
+	0x550, 0x00000010,
+	0x551, 0x00000010,
+	0x559, 0x00000002,
+	0x55C, 0x00000064,
+	0x55D, 0x000000FF,
+	0x577, 0x00000003,
+	0x5BE, 0x00000064,
+	0x604, 0x00000001,
+	0x605, 0x00000030,
+	0x607, 0x00000001,
+	0x608, 0x0000000E,
+	0x609, 0x0000002A,
+	0x60A, 0x00000000,
+	0x60C, 0x00000018,
+	0x60D, 0x00000050,
+	0x6A0, 0x000000FF,
+	0x6A1, 0x000000FF,
+	0x6A2, 0x000000FF,
+	0x6A3, 0x000000FF,
+	0x6A4, 0x000000FF,
+	0x6A5, 0x000000FF,
+	0x6DE, 0x00000084,
+	0x620, 0x000000FF,
+	0x621, 0x000000FF,
+	0x622, 0x000000FF,
+	0x623, 0x000000FF,
+	0x624, 0x000000FF,
+	0x625, 0x000000FF,
+	0x626, 0x000000FF,
+	0x627, 0x000000FF,
+	0x638, 0x00000064,
+	0x63C, 0x0000000A,
+	0x63D, 0x0000000A,
+	0x63E, 0x0000000E,
+	0x63F, 0x0000000E,
+	0x640, 0x00000040,
+	0x642, 0x00000040,
+	0x643, 0x00000000,
+	0x652, 0x000000C8,
+	0x66E, 0x00000005,
+	0x700, 0x00000021,
+	0x701, 0x00000043,
+	0x702, 0x00000065,
+	0x703, 0x00000087,
+	0x708, 0x00000021,
+	0x709, 0x00000043,
+	0x70A, 0x00000065,
+	0x70B, 0x00000087,
+	0x718, 0x00000040,
+	0x7D5, 0x000000BC,
+	0x7D8, 0x00000028,
+	0x7D9, 0x00000000,
+	0x7DA, 0x0000000B,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8814a_mac, rtw_phy_cfg_mac);
+
+static const u32 rtw8814a_agc[] = {
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFF000003,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFF000003,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0xA0000000,	0x00000000,
+	0x81C, 0xFF000003,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x81C, 0xFD020003,
+	0x81C, 0xFC040003,
+	0x81C, 0xFB060003,
+	0x81C, 0xFA080003,
+	0x81C, 0xF90A0003,
+	0x81C, 0xF80C0003,
+	0x81C, 0xF70E0003,
+	0x81C, 0xF6100003,
+	0x81C, 0xF5120003,
+	0x81C, 0xF4140003,
+	0x81C, 0xF3160003,
+	0x81C, 0xF2180003,
+	0x81C, 0xF11A0003,
+	0x81C, 0xF01C0003,
+	0x81C, 0xEF1E0003,
+	0x81C, 0xEE200003,
+	0x81C, 0xED220003,
+	0x81C, 0xCF240003,
+	0x81C, 0xCE260003,
+	0x81C, 0xCD280003,
+	0x81C, 0xCC2A0003,
+	0x81C, 0xCB2C0003,
+	0x81C, 0xCA2E0003,
+	0x81C, 0xC9300003,
+	0x81C, 0xC8320003,
+	0x81C, 0xC7340003,
+	0x81C, 0xC6360003,
+	0x81C, 0xC5380003,
+	0x81C, 0xC43A0003,
+	0x81C, 0xA63C0003,
+	0x81C, 0xA53E0003,
+	0x81C, 0xA4400003,
+	0x81C, 0xA3420003,
+	0x81C, 0xA2440003,
+	0x81C, 0xA1460003,
+	0x81C, 0x86480003,
+	0x81C, 0x854A0003,
+	0x81C, 0x844C0003,
+	0x81C, 0x834E0003,
+	0x81C, 0x66500003,
+	0x81C, 0x65520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x62580003,
+	0x81C, 0x615A0003,
+	0x81C, 0x435C0003,
+	0x81C, 0x425E0003,
+	0x81C, 0x41600003,
+	0x81C, 0x27620003,
+	0x81C, 0x26640003,
+	0x81C, 0x25660003,
+	0x81C, 0x24680003,
+	0x81C, 0x236A0003,
+	0x81C, 0x226C0003,
+	0x81C, 0x216E0003,
+	0x81C, 0x21700003,
+	0x81C, 0x21720003,
+	0x81C, 0x21740003,
+	0x81C, 0x21760003,
+	0x81C, 0x21780003,
+	0x81C, 0x217A0003,
+	0x81C, 0x217C0003,
+	0x81C, 0x217E0003,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFF000003,
+	0x81C, 0xFE020003,
+	0x81C, 0xFD040003,
+	0x81C, 0xFC060003,
+	0x81C, 0xFB080003,
+	0x81C, 0xFA0A0003,
+	0x81C, 0xF90C0003,
+	0x81C, 0xF80E0003,
+	0x81C, 0xF7100003,
+	0x81C, 0xF6120003,
+	0x81C, 0xF5140003,
+	0x81C, 0xF4160003,
+	0x81C, 0xF3180003,
+	0x81C, 0xF21A0003,
+	0x81C, 0xF11C0003,
+	0x81C, 0xF01E0003,
+	0x81C, 0xEF200003,
+	0x81C, 0xEE220003,
+	0x81C, 0xED240003,
+	0x81C, 0xEC260003,
+	0x81C, 0xEB280003,
+	0x81C, 0xEA2A0003,
+	0x81C, 0xE92C0003,
+	0x81C, 0xE82E0003,
+	0x81C, 0xE7300003,
+	0x81C, 0xE6320003,
+	0x81C, 0xE5340003,
+	0x81C, 0xE4360003,
+	0x81C, 0xE3380003,
+	0x81C, 0xC53A0003,
+	0x81C, 0xC43C0003,
+	0x81C, 0xC33E0003,
+	0x81C, 0xC2400003,
+	0x81C, 0xC1420003,
+	0x81C, 0xA8440003,
+	0x81C, 0xA7460003,
+	0x81C, 0xA6480003,
+	0x81C, 0xA54A0003,
+	0x81C, 0xA44C0003,
+	0x81C, 0xA34E0003,
+	0x81C, 0xA2500003,
+	0x81C, 0x65520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x62580003,
+	0x81C, 0x615A0003,
+	0x81C, 0x475C0003,
+	0x81C, 0x465E0003,
+	0x81C, 0x45600003,
+	0x81C, 0x44620003,
+	0x81C, 0x43640003,
+	0x81C, 0x42660003,
+	0x81C, 0x41680003,
+	0x81C, 0x416A0003,
+	0x81C, 0x416C0003,
+	0x81C, 0x416E0003,
+	0x81C, 0x41700003,
+	0x81C, 0x41720003,
+	0x81C, 0x41740003,
+	0x81C, 0x41760003,
+	0x81C, 0x41780003,
+	0x81C, 0x417A0003,
+	0x81C, 0x417C0003,
+	0x81C, 0x417E0003,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x81C, 0xFD020003,
+	0x81C, 0xFC040003,
+	0x81C, 0xFB060003,
+	0x81C, 0xFA080003,
+	0x81C, 0xF90A0003,
+	0x81C, 0xF80C0003,
+	0x81C, 0xF70E0003,
+	0x81C, 0xF6100003,
+	0x81C, 0xF5120003,
+	0x81C, 0xF4140003,
+	0x81C, 0xF3160003,
+	0x81C, 0xF2180003,
+	0x81C, 0xF11A0003,
+	0x81C, 0xF01C0003,
+	0x81C, 0xEF1E0003,
+	0x81C, 0xEE200003,
+	0x81C, 0xED220003,
+	0x81C, 0xEC240003,
+	0x81C, 0xEB260003,
+	0x81C, 0xEA280003,
+	0x81C, 0xE92A0003,
+	0x81C, 0xE82C0003,
+	0x81C, 0xE72E0003,
+	0x81C, 0xE6300003,
+	0x81C, 0xE5320003,
+	0x81C, 0xE4340003,
+	0x81C, 0xE3360003,
+	0x81C, 0xC6380003,
+	0x81C, 0xC53A0003,
+	0x81C, 0xC43C0003,
+	0x81C, 0xC33E0003,
+	0x81C, 0xC2400003,
+	0x81C, 0xA9420003,
+	0x81C, 0xA8440003,
+	0x81C, 0xA7460003,
+	0x81C, 0xA6480003,
+	0x81C, 0xA54A0003,
+	0x81C, 0xA44C0003,
+	0x81C, 0xA34E0003,
+	0x81C, 0x66500003,
+	0x81C, 0x65520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x49580003,
+	0x81C, 0x485A0003,
+	0x81C, 0x475C0003,
+	0x81C, 0x465E0003,
+	0x81C, 0x45600003,
+	0x81C, 0x44620003,
+	0x81C, 0x43640003,
+	0x81C, 0x42660003,
+	0x81C, 0x41680003,
+	0x81C, 0x416A0003,
+	0x81C, 0x416C0003,
+	0x81C, 0x416E0003,
+	0x81C, 0x41700003,
+	0x81C, 0x41720003,
+	0x81C, 0x41740003,
+	0x81C, 0x41760003,
+	0x81C, 0x41780003,
+	0x81C, 0x417A0003,
+	0x81C, 0x417C0003,
+	0x81C, 0x417E0003,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFF000003,
+	0x81C, 0xFE020003,
+	0x81C, 0xFD040003,
+	0x81C, 0xFC060003,
+	0x81C, 0xFB080003,
+	0x81C, 0xFA0A0003,
+	0x81C, 0xF90C0003,
+	0x81C, 0xF80E0003,
+	0x81C, 0xF7100003,
+	0x81C, 0xF6120003,
+	0x81C, 0xF5140003,
+	0x81C, 0xF4160003,
+	0x81C, 0xF3180003,
+	0x81C, 0xF21A0003,
+	0x81C, 0xF11C0003,
+	0x81C, 0xF01E0003,
+	0x81C, 0xEF200003,
+	0x81C, 0xEE220003,
+	0x81C, 0xED240003,
+	0x81C, 0xEC260003,
+	0x81C, 0xEB280003,
+	0x81C, 0xEA2A0003,
+	0x81C, 0xE92C0003,
+	0x81C, 0xE82E0003,
+	0x81C, 0xE7300003,
+	0x81C, 0xE6320003,
+	0x81C, 0xE5340003,
+	0x81C, 0xE4360003,
+	0x81C, 0xE3380003,
+	0x81C, 0xC53A0003,
+	0x81C, 0xC43C0003,
+	0x81C, 0xC33E0003,
+	0x81C, 0xC2400003,
+	0x81C, 0xC1420003,
+	0x81C, 0xA8440003,
+	0x81C, 0xA7460003,
+	0x81C, 0xA6480003,
+	0x81C, 0xA54A0003,
+	0x81C, 0xA44C0003,
+	0x81C, 0xA34E0003,
+	0x81C, 0xA2500003,
+	0x81C, 0x65520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x62580003,
+	0x81C, 0x615A0003,
+	0x81C, 0x475C0003,
+	0x81C, 0x465E0003,
+	0x81C, 0x45600003,
+	0x81C, 0x44620003,
+	0x81C, 0x43640003,
+	0x81C, 0x42660003,
+	0x81C, 0x41680003,
+	0x81C, 0x416A0003,
+	0x81C, 0x416C0003,
+	0x81C, 0x416E0003,
+	0x81C, 0x41700003,
+	0x81C, 0x41720003,
+	0x81C, 0x41740003,
+	0x81C, 0x41760003,
+	0x81C, 0x41780003,
+	0x81C, 0x417A0003,
+	0x81C, 0x417C0003,
+	0x81C, 0x417E0003,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x81C, 0xFD020003,
+	0x81C, 0xFC040003,
+	0x81C, 0xFB060003,
+	0x81C, 0xFA080003,
+	0x81C, 0xF90A0003,
+	0x81C, 0xF80C0003,
+	0x81C, 0xF70E0003,
+	0x81C, 0xF6100003,
+	0x81C, 0xF5120003,
+	0x81C, 0xF4140003,
+	0x81C, 0xF3160003,
+	0x81C, 0xF2180003,
+	0x81C, 0xF11A0003,
+	0x81C, 0xF01C0003,
+	0x81C, 0xEF1E0003,
+	0x81C, 0xEE200003,
+	0x81C, 0xED220003,
+	0x81C, 0xEC240003,
+	0x81C, 0xEB260003,
+	0x81C, 0xEA280003,
+	0x81C, 0xE92A0003,
+	0x81C, 0xE82C0003,
+	0x81C, 0xE72E0003,
+	0x81C, 0xE6300003,
+	0x81C, 0xE5320003,
+	0x81C, 0xE4340003,
+	0x81C, 0xE3360003,
+	0x81C, 0xC6380003,
+	0x81C, 0xC53A0003,
+	0x81C, 0xC43C0003,
+	0x81C, 0xC33E0003,
+	0x81C, 0xC2400003,
+	0x81C, 0xA9420003,
+	0x81C, 0xA8440003,
+	0x81C, 0xA7460003,
+	0x81C, 0xA6480003,
+	0x81C, 0xA54A0003,
+	0x81C, 0xA44C0003,
+	0x81C, 0xA34E0003,
+	0x81C, 0x66500003,
+	0x81C, 0x65520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x49580003,
+	0x81C, 0x485A0003,
+	0x81C, 0x475C0003,
+	0x81C, 0x465E0003,
+	0x81C, 0x45600003,
+	0x81C, 0x44620003,
+	0x81C, 0x43640003,
+	0x81C, 0x42660003,
+	0x81C, 0x41680003,
+	0x81C, 0x416A0003,
+	0x81C, 0x416C0003,
+	0x81C, 0x416E0003,
+	0x81C, 0x41700003,
+	0x81C, 0x41720003,
+	0x81C, 0x41740003,
+	0x81C, 0x41760003,
+	0x81C, 0x41780003,
+	0x81C, 0x417A0003,
+	0x81C, 0x417C0003,
+	0x81C, 0x417E0003,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xDF000003,
+	0x81C, 0xDF020003,
+	0x81C, 0xDF040003,
+	0x81C, 0xDE060003,
+	0x81C, 0xDD080003,
+	0x81C, 0xDC0A0003,
+	0x81C, 0xDB0C0003,
+	0x81C, 0xDA0E0003,
+	0x81C, 0xD9100003,
+	0x81C, 0xD8120003,
+	0x81C, 0xD7140003,
+	0x81C, 0xD6160003,
+	0x81C, 0xD5180003,
+	0x81C, 0xD41A0003,
+	0x81C, 0xD31C0003,
+	0x81C, 0xD21E0003,
+	0x81C, 0xD1200003,
+	0x81C, 0xD0220003,
+	0x81C, 0xCF240003,
+	0x81C, 0xCE260003,
+	0x81C, 0xCD280003,
+	0x81C, 0xCC2A0003,
+	0x81C, 0xCB2C0003,
+	0x81C, 0xCA2E0003,
+	0x81C, 0xC9300003,
+	0x81C, 0xC8320003,
+	0x81C, 0xC7340003,
+	0x81C, 0xC6360003,
+	0x81C, 0xC5380003,
+	0x81C, 0xA73A0003,
+	0x81C, 0xA63C0003,
+	0x81C, 0xA53E0003,
+	0x81C, 0xA4400003,
+	0x81C, 0xA3420003,
+	0x81C, 0xA2440003,
+	0x81C, 0x87460003,
+	0x81C, 0x86480003,
+	0x81C, 0x854A0003,
+	0x81C, 0x844C0003,
+	0x81C, 0x834E0003,
+	0x81C, 0x82500003,
+	0x81C, 0x81520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x62580003,
+	0x81C, 0x615A0003,
+	0x81C, 0x445C0003,
+	0x81C, 0x435E0003,
+	0x81C, 0x42600003,
+	0x81C, 0x41620003,
+	0x81C, 0x27640003,
+	0x81C, 0x26660003,
+	0x81C, 0x25680003,
+	0x81C, 0x246A0003,
+	0x81C, 0x236C0003,
+	0x81C, 0x226E0003,
+	0x81C, 0x21700003,
+	0x81C, 0x21720003,
+	0x81C, 0x21740003,
+	0x81C, 0x21760003,
+	0x81C, 0x21780003,
+	0x81C, 0x217A0003,
+	0x81C, 0x217C0003,
+	0x81C, 0x217E0003,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFF000003,
+	0x81C, 0xFE020003,
+	0x81C, 0xFD040003,
+	0x81C, 0xFC060003,
+	0x81C, 0xFB080003,
+	0x81C, 0xFA0A0003,
+	0x81C, 0xF90C0003,
+	0x81C, 0xF80E0003,
+	0x81C, 0xF7100003,
+	0x81C, 0xF6120003,
+	0x81C, 0xF5140003,
+	0x81C, 0xF4160003,
+	0x81C, 0xF3180003,
+	0x81C, 0xF21A0003,
+	0x81C, 0xF11C0003,
+	0x81C, 0xF01E0003,
+	0x81C, 0xEF200003,
+	0x81C, 0xEE220003,
+	0x81C, 0xED240003,
+	0x81C, 0xEC260003,
+	0x81C, 0xEB280003,
+	0x81C, 0xEA2A0003,
+	0x81C, 0xE92C0003,
+	0x81C, 0xE82E0003,
+	0x81C, 0xE7300003,
+	0x81C, 0xE6320003,
+	0x81C, 0xE5340003,
+	0x81C, 0xE4360003,
+	0x81C, 0xE3380003,
+	0x81C, 0xC53A0003,
+	0x81C, 0xC43C0003,
+	0x81C, 0xC33E0003,
+	0x81C, 0xC2400003,
+	0x81C, 0xC1420003,
+	0x81C, 0xA8440003,
+	0x81C, 0xA7460003,
+	0x81C, 0xA6480003,
+	0x81C, 0xA54A0003,
+	0x81C, 0xA44C0003,
+	0x81C, 0xA34E0003,
+	0x81C, 0xA2500003,
+	0x81C, 0x65520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x62580003,
+	0x81C, 0x615A0003,
+	0x81C, 0x475C0003,
+	0x81C, 0x465E0003,
+	0x81C, 0x45600003,
+	0x81C, 0x44620003,
+	0x81C, 0x43640003,
+	0x81C, 0x42660003,
+	0x81C, 0x41680003,
+	0x81C, 0x416A0003,
+	0x81C, 0x416C0003,
+	0x81C, 0x416E0003,
+	0x81C, 0x41700003,
+	0x81C, 0x41720003,
+	0x81C, 0x41740003,
+	0x81C, 0x41760003,
+	0x81C, 0x41780003,
+	0x81C, 0x417A0003,
+	0x81C, 0x417C0003,
+	0x81C, 0x417E0003,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xDF000003,
+	0x81C, 0xDF020003,
+	0x81C, 0xDF040003,
+	0x81C, 0xDE060003,
+	0x81C, 0xDD080003,
+	0x81C, 0xDC0A0003,
+	0x81C, 0xDB0C0003,
+	0x81C, 0xDA0E0003,
+	0x81C, 0xD9100003,
+	0x81C, 0xD8120003,
+	0x81C, 0xD7140003,
+	0x81C, 0xD6160003,
+	0x81C, 0xD5180003,
+	0x81C, 0xD41A0003,
+	0x81C, 0xD31C0003,
+	0x81C, 0xD21E0003,
+	0x81C, 0xD1200003,
+	0x81C, 0xD0220003,
+	0x81C, 0xCF240003,
+	0x81C, 0xCE260003,
+	0x81C, 0xCD280003,
+	0x81C, 0xCC2A0003,
+	0x81C, 0xCB2C0003,
+	0x81C, 0xCA2E0003,
+	0x81C, 0xC9300003,
+	0x81C, 0xC8320003,
+	0x81C, 0xC7340003,
+	0x81C, 0xC6360003,
+	0x81C, 0xC5380003,
+	0x81C, 0xA73A0003,
+	0x81C, 0xA63C0003,
+	0x81C, 0xA53E0003,
+	0x81C, 0xA4400003,
+	0x81C, 0xA3420003,
+	0x81C, 0xA2440003,
+	0x81C, 0x87460003,
+	0x81C, 0x86480003,
+	0x81C, 0x854A0003,
+	0x81C, 0x844C0003,
+	0x81C, 0x834E0003,
+	0x81C, 0x82500003,
+	0x81C, 0x81520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x62580003,
+	0x81C, 0x615A0003,
+	0x81C, 0x445C0003,
+	0x81C, 0x435E0003,
+	0x81C, 0x42600003,
+	0x81C, 0x41620003,
+	0x81C, 0x27640003,
+	0x81C, 0x26660003,
+	0x81C, 0x25680003,
+	0x81C, 0x246A0003,
+	0x81C, 0x236C0003,
+	0x81C, 0x226E0003,
+	0x81C, 0x21700003,
+	0x81C, 0x21720003,
+	0x81C, 0x21740003,
+	0x81C, 0x21760003,
+	0x81C, 0x21780003,
+	0x81C, 0x217A0003,
+	0x81C, 0x217C0003,
+	0x81C, 0x217E0003,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x81C, 0xFE020003,
+	0x81C, 0xFD040003,
+	0x81C, 0xFC060003,
+	0x81C, 0xFB080003,
+	0x81C, 0xFA0A0003,
+	0x81C, 0xF90C0003,
+	0x81C, 0xF80E0003,
+	0x81C, 0xF7100003,
+	0x81C, 0xF6120003,
+	0x81C, 0xF5140003,
+	0x81C, 0xF4160003,
+	0x81C, 0xF3180003,
+	0x81C, 0xF21A0003,
+	0x81C, 0xF11C0003,
+	0x81C, 0xF01E0003,
+	0x81C, 0xEF200003,
+	0x81C, 0xEE220003,
+	0x81C, 0xED240003,
+	0x81C, 0x0F260003,
+	0x81C, 0x0E280003,
+	0x81C, 0x0D2A0003,
+	0x81C, 0x0C2C0003,
+	0x81C, 0x0B2E0003,
+	0x81C, 0x0A300003,
+	0x81C, 0x09320003,
+	0x81C, 0x08340003,
+	0x81C, 0x07360003,
+	0x81C, 0x06380003,
+	0x81C, 0x053A0003,
+	0x81C, 0x043C0003,
+	0x81C, 0x033E0003,
+	0x81C, 0x23400003,
+	0x81C, 0x22420003,
+	0x81C, 0xA8440003,
+	0x81C, 0xA7460003,
+	0x81C, 0xA6480003,
+	0x81C, 0xA54A0003,
+	0x81C, 0xA44C0003,
+	0x81C, 0x684E0003,
+	0x81C, 0x67500003,
+	0x81C, 0x66520003,
+	0x81C, 0x65540003,
+	0x81C, 0x64560003,
+	0x81C, 0x63580003,
+	0x81C, 0x625A0003,
+	0x81C, 0x615C0003,
+	0x81C, 0x475E0003,
+	0x81C, 0x46600003,
+	0x81C, 0x45620003,
+	0x81C, 0x44640003,
+	0x81C, 0x43660003,
+	0x81C, 0x42680003,
+	0x81C, 0x416A0003,
+	0x81C, 0x416C0003,
+	0x81C, 0x416E0003,
+	0x81C, 0x41700003,
+	0x81C, 0x41720003,
+	0x81C, 0x41740003,
+	0x81C, 0x41760003,
+	0x81C, 0x41780003,
+	0x81C, 0x417A0003,
+	0x81C, 0x417C0003,
+	0x81C, 0x417E0003,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x81C, 0xFE020003,
+	0x81C, 0xFD040003,
+	0x81C, 0xFC060003,
+	0x81C, 0xFB080003,
+	0x81C, 0xFA0A0003,
+	0x81C, 0xF90C0003,
+	0x81C, 0xF80E0003,
+	0x81C, 0xF7100003,
+	0x81C, 0xF6120003,
+	0x81C, 0xF5140003,
+	0x81C, 0xF4160003,
+	0x81C, 0xF3180003,
+	0x81C, 0xF21A0003,
+	0x81C, 0xF11C0003,
+	0x81C, 0xF01E0003,
+	0x81C, 0xEF200003,
+	0x81C, 0xEE220003,
+	0x81C, 0xED240003,
+	0x81C, 0xEC260003,
+	0x81C, 0xEB280003,
+	0x81C, 0xEA2A0003,
+	0x81C, 0xE92C0003,
+	0x81C, 0xE72E0003,
+	0x81C, 0xE6300003,
+	0x81C, 0xE5320003,
+	0x81C, 0x08340003,
+	0x81C, 0x07360003,
+	0x81C, 0x06380003,
+	0x81C, 0x053A0003,
+	0x81C, 0x043C0003,
+	0x81C, 0x033E0003,
+	0x81C, 0x02400003,
+	0x81C, 0xA9420003,
+	0x81C, 0xA8440003,
+	0x81C, 0xA7460003,
+	0x81C, 0xA6480003,
+	0x81C, 0xA54A0003,
+	0x81C, 0x684C0003,
+	0x81C, 0x674E0003,
+	0x81C, 0x66500003,
+	0x81C, 0x65520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x62580003,
+	0x81C, 0x615A0003,
+	0x81C, 0x475C0003,
+	0x81C, 0x465E0003,
+	0x81C, 0x45600003,
+	0x81C, 0x44620003,
+	0x81C, 0x43640003,
+	0x81C, 0x42660003,
+	0x81C, 0x41680003,
+	0x81C, 0x416A0003,
+	0x81C, 0x416C0003,
+	0x81C, 0x416E0003,
+	0x81C, 0x41700003,
+	0x81C, 0x41720003,
+	0x81C, 0x41740003,
+	0x81C, 0x41760003,
+	0x81C, 0x41780003,
+	0x81C, 0x417A0003,
+	0x81C, 0x417C0003,
+	0x81C, 0x417E0003,
+	0xA0000000,	0x00000000,
+	0x81C, 0xFE000003,
+	0x81C, 0xFD020003,
+	0x81C, 0xFC040003,
+	0x81C, 0xFB060003,
+	0x81C, 0xFA080003,
+	0x81C, 0xF90A0003,
+	0x81C, 0xF80C0003,
+	0x81C, 0xF70E0003,
+	0x81C, 0xF6100003,
+	0x81C, 0xF5120003,
+	0x81C, 0xF4140003,
+	0x81C, 0xF3160003,
+	0x81C, 0xF2180003,
+	0x81C, 0xF11A0003,
+	0x81C, 0xF01C0003,
+	0x81C, 0xEF1E0003,
+	0x81C, 0xEE200003,
+	0x81C, 0xED220003,
+	0x81C, 0xCF240003,
+	0x81C, 0xCE260003,
+	0x81C, 0xCD280003,
+	0x81C, 0xCC2A0003,
+	0x81C, 0xCB2C0003,
+	0x81C, 0xCA2E0003,
+	0x81C, 0xC9300003,
+	0x81C, 0xC8320003,
+	0x81C, 0xC7340003,
+	0x81C, 0xC6360003,
+	0x81C, 0xC5380003,
+	0x81C, 0xC43A0003,
+	0x81C, 0xA63C0003,
+	0x81C, 0xA53E0003,
+	0x81C, 0xA4400003,
+	0x81C, 0xA3420003,
+	0x81C, 0xA2440003,
+	0x81C, 0xA1460003,
+	0x81C, 0x86480003,
+	0x81C, 0x854A0003,
+	0x81C, 0x844C0003,
+	0x81C, 0x834E0003,
+	0x81C, 0x66500003,
+	0x81C, 0x65520003,
+	0x81C, 0x64540003,
+	0x81C, 0x63560003,
+	0x81C, 0x62580003,
+	0x81C, 0x615A0003,
+	0x81C, 0x435C0003,
+	0x81C, 0x425E0003,
+	0x81C, 0x41600003,
+	0x81C, 0x27620003,
+	0x81C, 0x26640003,
+	0x81C, 0x25660003,
+	0x81C, 0x24680003,
+	0x81C, 0x236A0003,
+	0x81C, 0x226C0003,
+	0x81C, 0x216E0003,
+	0x81C, 0x21700003,
+	0x81C, 0x21720003,
+	0x81C, 0x21740003,
+	0x81C, 0x21760003,
+	0x81C, 0x21780003,
+	0x81C, 0x217A0003,
+	0x81C, 0x217C0003,
+	0x81C, 0x217E0003,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF9000103,
+	0x81C, 0xF8020103,
+	0x81C, 0xF7040103,
+	0x81C, 0xF6060103,
+	0x81C, 0xF5080103,
+	0x81C, 0xF40A0103,
+	0x81C, 0xF30C0103,
+	0x81C, 0xF20E0103,
+	0x81C, 0xF1100103,
+	0x81C, 0xF0120103,
+	0x81C, 0xEF140103,
+	0x81C, 0xEE160103,
+	0x81C, 0xED180103,
+	0x81C, 0xEC1A0103,
+	0x81C, 0xEB1C0103,
+	0x81C, 0xEA1E0103,
+	0x81C, 0xE9200103,
+	0x81C, 0xE8220103,
+	0x81C, 0xE7240103,
+	0x81C, 0xE6260103,
+	0x81C, 0xE5280103,
+	0x81C, 0xE42A0103,
+	0x81C, 0xE32C0103,
+	0x81C, 0xC32E0103,
+	0x81C, 0xC2300103,
+	0x81C, 0xC1320103,
+	0x81C, 0xA5340103,
+	0x81C, 0xA4360103,
+	0x81C, 0xA3380103,
+	0x81C, 0xA23A0103,
+	0x81C, 0xA13C0103,
+	0x81C, 0x843E0103,
+	0x81C, 0x83400103,
+	0x81C, 0x82420103,
+	0x81C, 0x81440103,
+	0x81C, 0x64460103,
+	0x81C, 0x63480103,
+	0x81C, 0x624A0103,
+	0x81C, 0x614C0103,
+	0x81C, 0x444E0103,
+	0x81C, 0x43500103,
+	0x81C, 0x42520103,
+	0x81C, 0x41540103,
+	0x81C, 0x25560103,
+	0x81C, 0x24580103,
+	0x81C, 0x235A0103,
+	0x81C, 0x065C0103,
+	0x81C, 0x055E0103,
+	0x81C, 0x04600103,
+	0x81C, 0x03620103,
+	0x81C, 0x02640103,
+	0x81C, 0x01660103,
+	0x81C, 0x01680103,
+	0x81C, 0x016A0103,
+	0x81C, 0x016C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF8000103,
+	0x81C, 0xF7020103,
+	0x81C, 0xF6040103,
+	0x81C, 0xF5060103,
+	0x81C, 0xF4080103,
+	0x81C, 0xF30A0103,
+	0x81C, 0xF20C0103,
+	0x81C, 0xF10E0103,
+	0x81C, 0xF0100103,
+	0x81C, 0xEF120103,
+	0x81C, 0xEE140103,
+	0x81C, 0xED160103,
+	0x81C, 0xEC180103,
+	0x81C, 0xEB1A0103,
+	0x81C, 0xEA1C0103,
+	0x81C, 0xE91E0103,
+	0x81C, 0xE8200103,
+	0x81C, 0xE7220103,
+	0x81C, 0xE6240103,
+	0x81C, 0xE5260103,
+	0x81C, 0xE4280103,
+	0x81C, 0xE32A0103,
+	0x81C, 0xE22C0103,
+	0x81C, 0xE12E0103,
+	0x81C, 0xA5300103,
+	0x81C, 0xA4320103,
+	0x81C, 0xA3340103,
+	0x81C, 0xA2360103,
+	0x81C, 0xA1380103,
+	0x81C, 0x843A0103,
+	0x81C, 0x833C0103,
+	0x81C, 0x823E0103,
+	0x81C, 0x81400103,
+	0x81C, 0x64420103,
+	0x81C, 0x63440103,
+	0x81C, 0x62460103,
+	0x81C, 0x61480103,
+	0x81C, 0x454A0103,
+	0x81C, 0x444C0103,
+	0x81C, 0x434E0103,
+	0x81C, 0x42500103,
+	0x81C, 0x25520103,
+	0x81C, 0x24540103,
+	0x81C, 0x23560103,
+	0x81C, 0x06580103,
+	0x81C, 0x055A0103,
+	0x81C, 0x045C0103,
+	0x81C, 0x035E0103,
+	0x81C, 0x02600103,
+	0x81C, 0x01620103,
+	0x81C, 0x01640103,
+	0x81C, 0x01660103,
+	0x81C, 0x01680103,
+	0x81C, 0x016A0103,
+	0x81C, 0x016C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFC000103,
+	0x81C, 0xFB020103,
+	0x81C, 0xFA040103,
+	0x81C, 0xF9060103,
+	0x81C, 0xF8080103,
+	0x81C, 0xF70A0103,
+	0x81C, 0xF60C0103,
+	0x81C, 0xF50E0103,
+	0x81C, 0xF4100103,
+	0x81C, 0xF3120103,
+	0x81C, 0xF2140103,
+	0x81C, 0xF1160103,
+	0x81C, 0xF0180103,
+	0x81C, 0xEF1A0103,
+	0x81C, 0xEE1C0103,
+	0x81C, 0xED1E0103,
+	0x81C, 0xEC200103,
+	0x81C, 0xEB220103,
+	0x81C, 0xEA240103,
+	0x81C, 0xE9260103,
+	0x81C, 0xE8280103,
+	0x81C, 0xE72A0103,
+	0x81C, 0xE62C0103,
+	0x81C, 0xE52E0103,
+	0x81C, 0xE4300103,
+	0x81C, 0xE3320103,
+	0x81C, 0xE2340103,
+	0x81C, 0xE1360103,
+	0x81C, 0x87380103,
+	0x81C, 0x863A0103,
+	0x81C, 0x853C0103,
+	0x81C, 0x843E0103,
+	0x81C, 0x83400103,
+	0x81C, 0x82420103,
+	0x81C, 0x81440103,
+	0x81C, 0x64460103,
+	0x81C, 0x63480103,
+	0x81C, 0x624A0103,
+	0x81C, 0x464C0103,
+	0x81C, 0x454E0103,
+	0x81C, 0x44500103,
+	0x81C, 0x43520103,
+	0x81C, 0x26540103,
+	0x81C, 0x25560103,
+	0x81C, 0x24580103,
+	0x81C, 0x075A0103,
+	0x81C, 0x065C0103,
+	0x81C, 0x055E0103,
+	0x81C, 0x04600103,
+	0x81C, 0x03620103,
+	0x81C, 0x02640103,
+	0x81C, 0x01660103,
+	0x81C, 0x01680103,
+	0x81C, 0x016A0103,
+	0x81C, 0x016C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF9000103,
+	0x81C, 0xF8020103,
+	0x81C, 0xF7040103,
+	0x81C, 0xF6060103,
+	0x81C, 0xF5080103,
+	0x81C, 0xF40A0103,
+	0x81C, 0xF30C0103,
+	0x81C, 0xF20E0103,
+	0x81C, 0xF1100103,
+	0x81C, 0xF0120103,
+	0x81C, 0xEF140103,
+	0x81C, 0xEE160103,
+	0x81C, 0xED180103,
+	0x81C, 0xEC1A0103,
+	0x81C, 0xEB1C0103,
+	0x81C, 0xEA1E0103,
+	0x81C, 0xE9200103,
+	0x81C, 0xE8220103,
+	0x81C, 0xE7240103,
+	0x81C, 0xE6260103,
+	0x81C, 0xE5280103,
+	0x81C, 0xE42A0103,
+	0x81C, 0xE32C0103,
+	0x81C, 0xE22E0103,
+	0x81C, 0xA6300103,
+	0x81C, 0xA5320103,
+	0x81C, 0xA4340103,
+	0x81C, 0xA3360103,
+	0x81C, 0xA2380103,
+	0x81C, 0xA13A0103,
+	0x81C, 0x843C0103,
+	0x81C, 0x833E0103,
+	0x81C, 0x82400103,
+	0x81C, 0x81420103,
+	0x81C, 0x64440103,
+	0x81C, 0x63460103,
+	0x81C, 0x62480103,
+	0x81C, 0x614A0103,
+	0x81C, 0x444C0103,
+	0x81C, 0x434E0103,
+	0x81C, 0x42500103,
+	0x81C, 0x41520103,
+	0x81C, 0x25540103,
+	0x81C, 0x24560103,
+	0x81C, 0x23580103,
+	0x81C, 0x225A0103,
+	0x81C, 0x055C0103,
+	0x81C, 0x045E0103,
+	0x81C, 0x03600103,
+	0x81C, 0x02620103,
+	0x81C, 0x01640103,
+	0x81C, 0x01660103,
+	0x81C, 0x01680103,
+	0x81C, 0x016A0103,
+	0x81C, 0x016C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFD000103,
+	0x81C, 0xFC020103,
+	0x81C, 0xFB040103,
+	0x81C, 0xFA060103,
+	0x81C, 0xF9080103,
+	0x81C, 0xF80A0103,
+	0x81C, 0xF70C0103,
+	0x81C, 0xF60E0103,
+	0x81C, 0xF5100103,
+	0x81C, 0xF4120103,
+	0x81C, 0xF3140103,
+	0x81C, 0xF2160103,
+	0x81C, 0xF1180103,
+	0x81C, 0xF01A0103,
+	0x81C, 0xEF1C0103,
+	0x81C, 0xEE1E0103,
+	0x81C, 0xED200103,
+	0x81C, 0xEC220103,
+	0x81C, 0xEB240103,
+	0x81C, 0xEA260103,
+	0x81C, 0xE9280103,
+	0x81C, 0xE82A0103,
+	0x81C, 0xE72C0103,
+	0x81C, 0xE62E0103,
+	0x81C, 0xE5300103,
+	0x81C, 0xE4320103,
+	0x81C, 0xE3340103,
+	0x81C, 0xE2360103,
+	0x81C, 0xE1380103,
+	0x81C, 0xA33A0103,
+	0x81C, 0xA23C0103,
+	0x81C, 0xA13E0103,
+	0x81C, 0x84400103,
+	0x81C, 0x83420103,
+	0x81C, 0x82440103,
+	0x81C, 0x81460103,
+	0x81C, 0x64480103,
+	0x81C, 0x634A0103,
+	0x81C, 0x624C0103,
+	0x81C, 0x614E0103,
+	0x81C, 0x45500103,
+	0x81C, 0x44520103,
+	0x81C, 0x43540103,
+	0x81C, 0x42560103,
+	0x81C, 0x25580103,
+	0x81C, 0x245A0103,
+	0x81C, 0x235C0103,
+	0x81C, 0x065E0103,
+	0x81C, 0x05600103,
+	0x81C, 0x04620103,
+	0x81C, 0x03640103,
+	0x81C, 0x02660103,
+	0x81C, 0x01680103,
+	0x81C, 0x016A0103,
+	0x81C, 0x016C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFA000103,
+	0x81C, 0xF9020103,
+	0x81C, 0xF8040103,
+	0x81C, 0xF7060103,
+	0x81C, 0xF6080103,
+	0x81C, 0xF50A0103,
+	0x81C, 0xF40C0103,
+	0x81C, 0xF30E0103,
+	0x81C, 0xF2100103,
+	0x81C, 0xF1120103,
+	0x81C, 0xF0140103,
+	0x81C, 0xEF160103,
+	0x81C, 0xEE180103,
+	0x81C, 0xED1A0103,
+	0x81C, 0xEC1C0103,
+	0x81C, 0xEB1E0103,
+	0x81C, 0xEA200103,
+	0x81C, 0xE9220103,
+	0x81C, 0xE8240103,
+	0x81C, 0xE7260103,
+	0x81C, 0xE6280103,
+	0x81C, 0xE52A0103,
+	0x81C, 0xE42C0103,
+	0x81C, 0xE32E0103,
+	0x81C, 0xE2300103,
+	0x81C, 0xE1320103,
+	0x81C, 0xA5340103,
+	0x81C, 0xA4360103,
+	0x81C, 0xA3380103,
+	0x81C, 0xA23A0103,
+	0x81C, 0xA13C0103,
+	0x81C, 0x843E0103,
+	0x81C, 0x83400103,
+	0x81C, 0x82420103,
+	0x81C, 0x81440103,
+	0x81C, 0x64460103,
+	0x81C, 0x63480103,
+	0x81C, 0x624A0103,
+	0x81C, 0x614C0103,
+	0x81C, 0x454E0103,
+	0x81C, 0x44500103,
+	0x81C, 0x43520103,
+	0x81C, 0x42540103,
+	0x81C, 0x41560103,
+	0x81C, 0x24580103,
+	0x81C, 0x235A0103,
+	0x81C, 0x225C0103,
+	0x81C, 0x055E0103,
+	0x81C, 0x04600103,
+	0x81C, 0x03620103,
+	0x81C, 0x02640103,
+	0x81C, 0x01660103,
+	0x81C, 0x01680103,
+	0x81C, 0x016A0103,
+	0x81C, 0x016C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFF000103,
+	0x81C, 0xFF020103,
+	0x81C, 0xFE040103,
+	0x81C, 0xFD060103,
+	0x81C, 0xFC080103,
+	0x81C, 0xFB0A0103,
+	0x81C, 0xFA0C0103,
+	0x81C, 0xF90E0103,
+	0x81C, 0xF8100103,
+	0x81C, 0xF7120103,
+	0x81C, 0xF6140103,
+	0x81C, 0xF5160103,
+	0x81C, 0xF4180103,
+	0x81C, 0xF31A0103,
+	0x81C, 0xF21C0103,
+	0x81C, 0xF11E0103,
+	0x81C, 0xF0200103,
+	0x81C, 0xEF220103,
+	0x81C, 0xEE240103,
+	0x81C, 0xED260103,
+	0x81C, 0xEC280103,
+	0x81C, 0xEB2A0103,
+	0x81C, 0xEA2C0103,
+	0x81C, 0xE92E0103,
+	0x81C, 0xE8300103,
+	0x81C, 0xE7320103,
+	0x81C, 0xE6340103,
+	0x81C, 0xE5360103,
+	0x81C, 0xE4380103,
+	0x81C, 0xE33A0103,
+	0x81C, 0xA53C0103,
+	0x81C, 0xA43E0103,
+	0x81C, 0xA3400103,
+	0x81C, 0xA2420103,
+	0x81C, 0xA1440103,
+	0x81C, 0x85460103,
+	0x81C, 0x84480103,
+	0x81C, 0x834A0103,
+	0x81C, 0x824C0103,
+	0x81C, 0x814E0103,
+	0x81C, 0x64500103,
+	0x81C, 0x63520103,
+	0x81C, 0x62540103,
+	0x81C, 0x44560103,
+	0x81C, 0x43580103,
+	0x81C, 0x425A0103,
+	0x81C, 0x265C0103,
+	0x81C, 0x255E0103,
+	0x81C, 0x24600103,
+	0x81C, 0x07620103,
+	0x81C, 0x06640103,
+	0x81C, 0x05660103,
+	0x81C, 0x04680103,
+	0x81C, 0x036A0103,
+	0x81C, 0x026C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF8000103,
+	0x81C, 0xF7020103,
+	0x81C, 0xF6040103,
+	0x81C, 0xF5060103,
+	0x81C, 0xF4080103,
+	0x81C, 0xF30A0103,
+	0x81C, 0xF20C0103,
+	0x81C, 0xF10E0103,
+	0x81C, 0xF0100103,
+	0x81C, 0xEF120103,
+	0x81C, 0xEE140103,
+	0x81C, 0xED160103,
+	0x81C, 0xEC180103,
+	0x81C, 0xEB1A0103,
+	0x81C, 0xEA1C0103,
+	0x81C, 0xE91E0103,
+	0x81C, 0xE8200103,
+	0x81C, 0xE7220103,
+	0x81C, 0xE6240103,
+	0x81C, 0xE5260103,
+	0x81C, 0xE4280103,
+	0x81C, 0xE32A0103,
+	0x81C, 0xE22C0103,
+	0x81C, 0xE12E0103,
+	0x81C, 0xA4300103,
+	0x81C, 0xA3320103,
+	0x81C, 0xA2340103,
+	0x81C, 0xA1360103,
+	0x81C, 0x85380103,
+	0x81C, 0x843A0103,
+	0x81C, 0x833C0103,
+	0x81C, 0x823E0103,
+	0x81C, 0x65400103,
+	0x81C, 0x64420103,
+	0x81C, 0x63440103,
+	0x81C, 0x62460103,
+	0x81C, 0x45480103,
+	0x81C, 0x444A0103,
+	0x81C, 0x434C0103,
+	0x81C, 0x264E0103,
+	0x81C, 0x25500103,
+	0x81C, 0x24520103,
+	0x81C, 0x08540103,
+	0x81C, 0x07560103,
+	0x81C, 0x06580103,
+	0x81C, 0x055A0103,
+	0x81C, 0x045C0103,
+	0x81C, 0x035E0103,
+	0x81C, 0x02600103,
+	0x81C, 0x01620103,
+	0x81C, 0x01640103,
+	0x81C, 0x01660103,
+	0x81C, 0x01680103,
+	0x81C, 0x016A0103,
+	0x81C, 0x016C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFF000103,
+	0x81C, 0xFF020103,
+	0x81C, 0xFE040103,
+	0x81C, 0xFD060103,
+	0x81C, 0xFC080103,
+	0x81C, 0xFB0A0103,
+	0x81C, 0xFA0C0103,
+	0x81C, 0xF90E0103,
+	0x81C, 0xF8100103,
+	0x81C, 0xF7120103,
+	0x81C, 0xF6140103,
+	0x81C, 0xF5160103,
+	0x81C, 0xF4180103,
+	0x81C, 0xF31A0103,
+	0x81C, 0xF21C0103,
+	0x81C, 0xF11E0103,
+	0x81C, 0xF0200103,
+	0x81C, 0xEF220103,
+	0x81C, 0xEE240103,
+	0x81C, 0xED260103,
+	0x81C, 0xEC280103,
+	0x81C, 0xEB2A0103,
+	0x81C, 0xEA2C0103,
+	0x81C, 0xE92E0103,
+	0x81C, 0xE8300103,
+	0x81C, 0xE7320103,
+	0x81C, 0xE6340103,
+	0x81C, 0xE5360103,
+	0x81C, 0xE4380103,
+	0x81C, 0xE33A0103,
+	0x81C, 0xA53C0103,
+	0x81C, 0xA43E0103,
+	0x81C, 0xA3400103,
+	0x81C, 0xA2420103,
+	0x81C, 0xA1440103,
+	0x81C, 0x85460103,
+	0x81C, 0x84480103,
+	0x81C, 0x834A0103,
+	0x81C, 0x824C0103,
+	0x81C, 0x814E0103,
+	0x81C, 0x64500103,
+	0x81C, 0x63520103,
+	0x81C, 0x62540103,
+	0x81C, 0x44560103,
+	0x81C, 0x43580103,
+	0x81C, 0x425A0103,
+	0x81C, 0x265C0103,
+	0x81C, 0x255E0103,
+	0x81C, 0x24600103,
+	0x81C, 0x07620103,
+	0x81C, 0x06640103,
+	0x81C, 0x05660103,
+	0x81C, 0x04680103,
+	0x81C, 0x036A0103,
+	0x81C, 0x026C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF9000103,
+	0x81C, 0xF8020103,
+	0x81C, 0xF7040103,
+	0x81C, 0xF6060103,
+	0x81C, 0xF5080103,
+	0x81C, 0xF40A0103,
+	0x81C, 0xF30C0103,
+	0x81C, 0xF20E0103,
+	0x81C, 0xF1100103,
+	0x81C, 0xF0120103,
+	0x81C, 0xEF140103,
+	0x81C, 0xEE160103,
+	0x81C, 0xED180103,
+	0x81C, 0xEC1A0103,
+	0x81C, 0xEB1C0103,
+	0x81C, 0xEA1E0103,
+	0x81C, 0xE9200103,
+	0x81C, 0xE8220103,
+	0x81C, 0xE7240103,
+	0x81C, 0xE6260103,
+	0x81C, 0xE5280103,
+	0x81C, 0xE42A0103,
+	0x81C, 0xE32C0103,
+	0x81C, 0xE22E0103,
+	0x81C, 0xA6300103,
+	0x81C, 0xA5320103,
+	0x81C, 0xA4340103,
+	0x81C, 0xA3360103,
+	0x81C, 0xA2380103,
+	0x81C, 0xA13A0103,
+	0x81C, 0x843C0103,
+	0x81C, 0x833E0103,
+	0x81C, 0x82400103,
+	0x81C, 0x81420103,
+	0x81C, 0x64440103,
+	0x81C, 0x63460103,
+	0x81C, 0x62480103,
+	0x81C, 0x614A0103,
+	0x81C, 0x444C0103,
+	0x81C, 0x434E0103,
+	0x81C, 0x42500103,
+	0x81C, 0x41520103,
+	0x81C, 0x25540103,
+	0x81C, 0x24560103,
+	0x81C, 0x23580103,
+	0x81C, 0x225A0103,
+	0x81C, 0x055C0103,
+	0x81C, 0x045E0103,
+	0x81C, 0x03600103,
+	0x81C, 0x02620103,
+	0x81C, 0x01640103,
+	0x81C, 0x01660103,
+	0x81C, 0x01680103,
+	0x81C, 0x016A0103,
+	0x81C, 0x016C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFA000103,
+	0x81C, 0xF9020103,
+	0x81C, 0xF8040103,
+	0x81C, 0xF7060103,
+	0x81C, 0xF6080103,
+	0x81C, 0xF50A0103,
+	0x81C, 0xF40C0103,
+	0x81C, 0xF30E0103,
+	0x81C, 0xF2100103,
+	0x81C, 0xF1120103,
+	0x81C, 0xF0140103,
+	0x81C, 0xEF160103,
+	0x81C, 0xEE180103,
+	0x81C, 0xED1A0103,
+	0x81C, 0xCC1C0103,
+	0x81C, 0xCB1E0103,
+	0x81C, 0xCA200103,
+	0x81C, 0xE9220103,
+	0x81C, 0xE8240103,
+	0x81C, 0xE7260103,
+	0x81C, 0xE6280103,
+	0x81C, 0xE42A0103,
+	0x81C, 0xE32C0103,
+	0x81C, 0xE22E0103,
+	0x81C, 0xA7300103,
+	0x81C, 0xA6320103,
+	0x81C, 0xA5340103,
+	0x81C, 0xA4360103,
+	0x81C, 0xA3380103,
+	0x81C, 0xA23A0103,
+	0x81C, 0xA13C0103,
+	0x81C, 0x843E0103,
+	0x81C, 0x83400103,
+	0x81C, 0x82420103,
+	0x81C, 0x65440103,
+	0x81C, 0x64460103,
+	0x81C, 0x63480103,
+	0x81C, 0x624A0103,
+	0x81C, 0x614C0103,
+	0x81C, 0x444E0103,
+	0x81C, 0x43500103,
+	0x81C, 0x42520103,
+	0x81C, 0x41540103,
+	0x81C, 0x24560103,
+	0x81C, 0x23580103,
+	0x81C, 0x055A0103,
+	0x81C, 0x045C0103,
+	0x81C, 0x035E0103,
+	0x81C, 0x02600103,
+	0x81C, 0x01620103,
+	0x81C, 0x01640103,
+	0x81C, 0x01660103,
+	0x81C, 0x01680103,
+	0x81C, 0x016A0103,
+	0x81C, 0x016C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0xA0000000,	0x00000000,
+	0x81C, 0xFF000103,
+	0x81C, 0xFE020103,
+	0x81C, 0xFD040103,
+	0x81C, 0xFC060103,
+	0x81C, 0xFB080103,
+	0x81C, 0xFA0A0103,
+	0x81C, 0xF90C0103,
+	0x81C, 0xF80E0103,
+	0x81C, 0xF7100103,
+	0x81C, 0xF6120103,
+	0x81C, 0xF5140103,
+	0x81C, 0xF4160103,
+	0x81C, 0xF3180103,
+	0x81C, 0xF21A0103,
+	0x81C, 0xF11C0103,
+	0x81C, 0xF01E0103,
+	0x81C, 0xEF200103,
+	0x81C, 0xEE220103,
+	0x81C, 0xED240103,
+	0x81C, 0xEC260103,
+	0x81C, 0xEB280103,
+	0x81C, 0xEA2A0103,
+	0x81C, 0xE92C0103,
+	0x81C, 0xE82E0103,
+	0x81C, 0xE7300103,
+	0x81C, 0xE6320103,
+	0x81C, 0xE5340103,
+	0x81C, 0xE4360103,
+	0x81C, 0xE3380103,
+	0x81C, 0xE23A0103,
+	0x81C, 0xE13C0103,
+	0x81C, 0xA43E0103,
+	0x81C, 0xA3400103,
+	0x81C, 0xA2420103,
+	0x81C, 0xA1440103,
+	0x81C, 0x86460103,
+	0x81C, 0x85480103,
+	0x81C, 0x844A0103,
+	0x81C, 0x834C0103,
+	0x81C, 0x824E0103,
+	0x81C, 0x81500103,
+	0x81C, 0x64520103,
+	0x81C, 0x63540103,
+	0x81C, 0x62560103,
+	0x81C, 0x61580103,
+	0x81C, 0x435A0103,
+	0x81C, 0x425C0103,
+	0x81C, 0x415E0103,
+	0x81C, 0x25600103,
+	0x81C, 0x24620103,
+	0x81C, 0x06640103,
+	0x81C, 0x05660103,
+	0x81C, 0x04680103,
+	0x81C, 0x036A0103,
+	0x81C, 0x026C0103,
+	0x81C, 0x016E0103,
+	0x81C, 0x01700103,
+	0x81C, 0x01720103,
+	0x81C, 0x01740103,
+	0x81C, 0x01760103,
+	0x81C, 0x01780103,
+	0x81C, 0x017A0103,
+	0x81C, 0x017C0103,
+	0x81C, 0x017E0103,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFA000203,
+	0x81C, 0xF9020203,
+	0x81C, 0xF8040203,
+	0x81C, 0xF7060203,
+	0x81C, 0xF6080203,
+	0x81C, 0xF50A0203,
+	0x81C, 0xF40C0203,
+	0x81C, 0xF30E0203,
+	0x81C, 0xF2100203,
+	0x81C, 0xF1120203,
+	0x81C, 0xF0140203,
+	0x81C, 0xEF160203,
+	0x81C, 0xEE180203,
+	0x81C, 0xED1A0203,
+	0x81C, 0xEC1C0203,
+	0x81C, 0xEB1E0203,
+	0x81C, 0xEA200203,
+	0x81C, 0xE9220203,
+	0x81C, 0xE8240203,
+	0x81C, 0xE7260203,
+	0x81C, 0xE6280203,
+	0x81C, 0xE52A0203,
+	0x81C, 0xE42C0203,
+	0x81C, 0xE32E0203,
+	0x81C, 0xE2300203,
+	0x81C, 0xE1320203,
+	0x81C, 0xA5340203,
+	0x81C, 0xA4360203,
+	0x81C, 0xA3380203,
+	0x81C, 0xA23A0203,
+	0x81C, 0xA13C0203,
+	0x81C, 0x843E0203,
+	0x81C, 0x83400203,
+	0x81C, 0x82420203,
+	0x81C, 0x81440203,
+	0x81C, 0x63460203,
+	0x81C, 0x62480203,
+	0x81C, 0x614A0203,
+	0x81C, 0x464C0203,
+	0x81C, 0x454E0203,
+	0x81C, 0x44500203,
+	0x81C, 0x43520203,
+	0x81C, 0x42540203,
+	0x81C, 0x41560203,
+	0x81C, 0x24580203,
+	0x81C, 0x235A0203,
+	0x81C, 0x065C0203,
+	0x81C, 0x055E0203,
+	0x81C, 0x04600203,
+	0x81C, 0x03620203,
+	0x81C, 0x02640203,
+	0x81C, 0x01660203,
+	0x81C, 0x01680203,
+	0x81C, 0x016A0203,
+	0x81C, 0x016C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF8000203,
+	0x81C, 0xF7020203,
+	0x81C, 0xF6040203,
+	0x81C, 0xF5060203,
+	0x81C, 0xF4080203,
+	0x81C, 0xF30A0203,
+	0x81C, 0xF20C0203,
+	0x81C, 0xF10E0203,
+	0x81C, 0xF0100203,
+	0x81C, 0xEF120203,
+	0x81C, 0xEE140203,
+	0x81C, 0xED160203,
+	0x81C, 0xEC180203,
+	0x81C, 0xEB1A0203,
+	0x81C, 0xEA1C0203,
+	0x81C, 0xE91E0203,
+	0x81C, 0xE8200203,
+	0x81C, 0xE7220203,
+	0x81C, 0xE6240203,
+	0x81C, 0xE5260203,
+	0x81C, 0xE4280203,
+	0x81C, 0xE32A0203,
+	0x81C, 0xE22C0203,
+	0x81C, 0xE12E0203,
+	0x81C, 0xA6300203,
+	0x81C, 0xA5320203,
+	0x81C, 0xA4340203,
+	0x81C, 0xA3360203,
+	0x81C, 0xA2380203,
+	0x81C, 0x853A0203,
+	0x81C, 0x843C0203,
+	0x81C, 0x833E0203,
+	0x81C, 0x82400203,
+	0x81C, 0x81420203,
+	0x81C, 0x64440203,
+	0x81C, 0x63460203,
+	0x81C, 0x62480203,
+	0x81C, 0x614A0203,
+	0x81C, 0x444C0203,
+	0x81C, 0x434E0203,
+	0x81C, 0x42500203,
+	0x81C, 0x25520203,
+	0x81C, 0x24540203,
+	0x81C, 0x23560203,
+	0x81C, 0x06580203,
+	0x81C, 0x055A0203,
+	0x81C, 0x045C0203,
+	0x81C, 0x035E0203,
+	0x81C, 0x02600203,
+	0x81C, 0x01620203,
+	0x81C, 0x01640203,
+	0x81C, 0x01660203,
+	0x81C, 0x01680203,
+	0x81C, 0x016A0203,
+	0x81C, 0x016C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFC000203,
+	0x81C, 0xFB020203,
+	0x81C, 0xFA040203,
+	0x81C, 0xF9060203,
+	0x81C, 0xF8080203,
+	0x81C, 0xF70A0203,
+	0x81C, 0xF60C0203,
+	0x81C, 0xF50E0203,
+	0x81C, 0xF4100203,
+	0x81C, 0xF3120203,
+	0x81C, 0xF2140203,
+	0x81C, 0xF1160203,
+	0x81C, 0xF0180203,
+	0x81C, 0xEF1A0203,
+	0x81C, 0xEE1C0203,
+	0x81C, 0xED1E0203,
+	0x81C, 0xEC200203,
+	0x81C, 0xEB220203,
+	0x81C, 0xEA240203,
+	0x81C, 0xE9260203,
+	0x81C, 0xE8280203,
+	0x81C, 0xE72A0203,
+	0x81C, 0xE62C0203,
+	0x81C, 0xE52E0203,
+	0x81C, 0xE4300203,
+	0x81C, 0xE3320203,
+	0x81C, 0xE2340203,
+	0x81C, 0xE1360203,
+	0x81C, 0x87380203,
+	0x81C, 0x863A0203,
+	0x81C, 0x853C0203,
+	0x81C, 0x843E0203,
+	0x81C, 0x83400203,
+	0x81C, 0x82420203,
+	0x81C, 0x81440203,
+	0x81C, 0x64460203,
+	0x81C, 0x63480203,
+	0x81C, 0x624A0203,
+	0x81C, 0x474C0203,
+	0x81C, 0x464E0203,
+	0x81C, 0x45500203,
+	0x81C, 0x44520203,
+	0x81C, 0x43540203,
+	0x81C, 0x42560203,
+	0x81C, 0x24580203,
+	0x81C, 0x235A0203,
+	0x81C, 0x075C0203,
+	0x81C, 0x065E0203,
+	0x81C, 0x05600203,
+	0x81C, 0x04620203,
+	0x81C, 0x03640203,
+	0x81C, 0x02660203,
+	0x81C, 0x01680203,
+	0x81C, 0x016A0203,
+	0x81C, 0x016C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF8000203,
+	0x81C, 0xF7020203,
+	0x81C, 0xF6040203,
+	0x81C, 0xF5060203,
+	0x81C, 0xF4080203,
+	0x81C, 0xF30A0203,
+	0x81C, 0xF20C0203,
+	0x81C, 0xF10E0203,
+	0x81C, 0xF0100203,
+	0x81C, 0xEF120203,
+	0x81C, 0xEE140203,
+	0x81C, 0xED160203,
+	0x81C, 0xEC180203,
+	0x81C, 0xEB1A0203,
+	0x81C, 0xEA1C0203,
+	0x81C, 0xE91E0203,
+	0x81C, 0xE8200203,
+	0x81C, 0xE7220203,
+	0x81C, 0xE6240203,
+	0x81C, 0xE5260203,
+	0x81C, 0xE4280203,
+	0x81C, 0xE32A0203,
+	0x81C, 0xE22C0203,
+	0x81C, 0xE12E0203,
+	0x81C, 0xA6300203,
+	0x81C, 0xA5320203,
+	0x81C, 0xA4340203,
+	0x81C, 0xA3360203,
+	0x81C, 0xA2380203,
+	0x81C, 0xA13A0203,
+	0x81C, 0x843C0203,
+	0x81C, 0x833E0203,
+	0x81C, 0x82400203,
+	0x81C, 0x81420203,
+	0x81C, 0x64440203,
+	0x81C, 0x63460203,
+	0x81C, 0x62480203,
+	0x81C, 0x614A0203,
+	0x81C, 0x444C0203,
+	0x81C, 0x434E0203,
+	0x81C, 0x42500203,
+	0x81C, 0x41520203,
+	0x81C, 0x25540203,
+	0x81C, 0x24560203,
+	0x81C, 0x23580203,
+	0x81C, 0x065A0203,
+	0x81C, 0x055C0203,
+	0x81C, 0x045E0203,
+	0x81C, 0x03600203,
+	0x81C, 0x02620203,
+	0x81C, 0x01640203,
+	0x81C, 0x01660203,
+	0x81C, 0x01680203,
+	0x81C, 0x016A0203,
+	0x81C, 0x016C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFB000203,
+	0x81C, 0xFA020203,
+	0x81C, 0xF9040203,
+	0x81C, 0xF8060203,
+	0x81C, 0xF7080203,
+	0x81C, 0xF60A0203,
+	0x81C, 0xF50C0203,
+	0x81C, 0xF40E0203,
+	0x81C, 0xF3100203,
+	0x81C, 0xF2120203,
+	0x81C, 0xF1140203,
+	0x81C, 0xF0160203,
+	0x81C, 0xEF180203,
+	0x81C, 0xEE1A0203,
+	0x81C, 0xED1C0203,
+	0x81C, 0xEC1E0203,
+	0x81C, 0xEB200203,
+	0x81C, 0xEA220203,
+	0x81C, 0xE9240203,
+	0x81C, 0xE8260203,
+	0x81C, 0xE7280203,
+	0x81C, 0xE62A0203,
+	0x81C, 0xE52C0203,
+	0x81C, 0xE42E0203,
+	0x81C, 0xE3300203,
+	0x81C, 0xE2320203,
+	0x81C, 0xE1340203,
+	0x81C, 0xA5360203,
+	0x81C, 0xA4380203,
+	0x81C, 0xA33A0203,
+	0x81C, 0xA23C0203,
+	0x81C, 0x843E0203,
+	0x81C, 0x83400203,
+	0x81C, 0x82420203,
+	0x81C, 0x81440203,
+	0x81C, 0x64460203,
+	0x81C, 0x63480203,
+	0x81C, 0x624A0203,
+	0x81C, 0x614C0203,
+	0x81C, 0x474E0203,
+	0x81C, 0x46500203,
+	0x81C, 0x45520203,
+	0x81C, 0x44540203,
+	0x81C, 0x43560203,
+	0x81C, 0x25580203,
+	0x81C, 0x245A0203,
+	0x81C, 0x235C0203,
+	0x81C, 0x075E0203,
+	0x81C, 0x06600203,
+	0x81C, 0x05620203,
+	0x81C, 0x04640203,
+	0x81C, 0x03660203,
+	0x81C, 0x02680203,
+	0x81C, 0x016A0203,
+	0x81C, 0x016C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFC000203,
+	0x81C, 0xFB020203,
+	0x81C, 0xFA040203,
+	0x81C, 0xF9060203,
+	0x81C, 0xF8080203,
+	0x81C, 0xF70A0203,
+	0x81C, 0xF60C0203,
+	0x81C, 0xF50E0203,
+	0x81C, 0xF4100203,
+	0x81C, 0xF3120203,
+	0x81C, 0xF2140203,
+	0x81C, 0xF1160203,
+	0x81C, 0xF0180203,
+	0x81C, 0xEF1A0203,
+	0x81C, 0xEE1C0203,
+	0x81C, 0xED1E0203,
+	0x81C, 0xEC200203,
+	0x81C, 0xEB220203,
+	0x81C, 0xEA240203,
+	0x81C, 0xE9260203,
+	0x81C, 0xE8280203,
+	0x81C, 0xE72A0203,
+	0x81C, 0xE62C0203,
+	0x81C, 0xE52E0203,
+	0x81C, 0xE4300203,
+	0x81C, 0xE3320203,
+	0x81C, 0xE2340203,
+	0x81C, 0xE1360203,
+	0x81C, 0xA5380203,
+	0x81C, 0xA43A0203,
+	0x81C, 0xA33C0203,
+	0x81C, 0x853E0203,
+	0x81C, 0x84400203,
+	0x81C, 0x83420203,
+	0x81C, 0x82440203,
+	0x81C, 0x81460203,
+	0x81C, 0x64480203,
+	0x81C, 0x634A0203,
+	0x81C, 0x624C0203,
+	0x81C, 0x614E0203,
+	0x81C, 0x46500203,
+	0x81C, 0x45520203,
+	0x81C, 0x44540203,
+	0x81C, 0x43560203,
+	0x81C, 0x25580203,
+	0x81C, 0x245A0203,
+	0x81C, 0x235C0203,
+	0x81C, 0x075E0203,
+	0x81C, 0x06600203,
+	0x81C, 0x05620203,
+	0x81C, 0x04640203,
+	0x81C, 0x03660203,
+	0x81C, 0x02680203,
+	0x81C, 0x016A0203,
+	0x81C, 0x016C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFF000203,
+	0x81C, 0xFF020203,
+	0x81C, 0xFE040203,
+	0x81C, 0xFD060203,
+	0x81C, 0xFC080203,
+	0x81C, 0xFB0A0203,
+	0x81C, 0xFA0C0203,
+	0x81C, 0xF90E0203,
+	0x81C, 0xF8100203,
+	0x81C, 0xF7120203,
+	0x81C, 0xF6140203,
+	0x81C, 0xF5160203,
+	0x81C, 0xF4180203,
+	0x81C, 0xF31A0203,
+	0x81C, 0xF21C0203,
+	0x81C, 0xF11E0203,
+	0x81C, 0xF0200203,
+	0x81C, 0xEF220203,
+	0x81C, 0xEE240203,
+	0x81C, 0xED260203,
+	0x81C, 0xEC280203,
+	0x81C, 0xEB2A0203,
+	0x81C, 0xEA2C0203,
+	0x81C, 0xE92E0203,
+	0x81C, 0xE8300203,
+	0x81C, 0xE7320203,
+	0x81C, 0xE6340203,
+	0x81C, 0xE5360203,
+	0x81C, 0xE4380203,
+	0x81C, 0xE33A0203,
+	0x81C, 0xE23C0203,
+	0x81C, 0xE13E0203,
+	0x81C, 0xA4400203,
+	0x81C, 0xA3420203,
+	0x81C, 0xA2440203,
+	0x81C, 0xA1460203,
+	0x81C, 0x84480203,
+	0x81C, 0x834A0203,
+	0x81C, 0x824C0203,
+	0x81C, 0x814E0203,
+	0x81C, 0x64500203,
+	0x81C, 0x63520203,
+	0x81C, 0x62540203,
+	0x81C, 0x61560203,
+	0x81C, 0x45580203,
+	0x81C, 0x445A0203,
+	0x81C, 0x435C0203,
+	0x81C, 0x425E0203,
+	0x81C, 0x24600203,
+	0x81C, 0x23620203,
+	0x81C, 0x07640203,
+	0x81C, 0x06660203,
+	0x81C, 0x05680203,
+	0x81C, 0x046A0203,
+	0x81C, 0x036C0203,
+	0x81C, 0x026E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF7000203,
+	0x81C, 0xF6020203,
+	0x81C, 0xF5040203,
+	0x81C, 0xF4060203,
+	0x81C, 0xF3080203,
+	0x81C, 0xF20A0203,
+	0x81C, 0xF10C0203,
+	0x81C, 0xF00E0203,
+	0x81C, 0xEF100203,
+	0x81C, 0xEE120203,
+	0x81C, 0xED140203,
+	0x81C, 0xEC160203,
+	0x81C, 0xEB180203,
+	0x81C, 0xEA1A0203,
+	0x81C, 0xE91C0203,
+	0x81C, 0xE81E0203,
+	0x81C, 0xE7200203,
+	0x81C, 0xE6220203,
+	0x81C, 0xE5240203,
+	0x81C, 0xE4260203,
+	0x81C, 0xE3280203,
+	0x81C, 0xE22A0203,
+	0x81C, 0xA62C0203,
+	0x81C, 0xA52E0203,
+	0x81C, 0xA4300203,
+	0x81C, 0xA3320203,
+	0x81C, 0xA2340203,
+	0x81C, 0xA1360203,
+	0x81C, 0x86380203,
+	0x81C, 0x853A0203,
+	0x81C, 0x843C0203,
+	0x81C, 0x833E0203,
+	0x81C, 0x65400203,
+	0x81C, 0x64420203,
+	0x81C, 0x63440203,
+	0x81C, 0x46460203,
+	0x81C, 0x45480203,
+	0x81C, 0x444A0203,
+	0x81C, 0x434C0203,
+	0x81C, 0x264E0203,
+	0x81C, 0x25500203,
+	0x81C, 0x24520203,
+	0x81C, 0x08540203,
+	0x81C, 0x07560203,
+	0x81C, 0x06580203,
+	0x81C, 0x055A0203,
+	0x81C, 0x045C0203,
+	0x81C, 0x035E0203,
+	0x81C, 0x02600203,
+	0x81C, 0x01620203,
+	0x81C, 0x01640203,
+	0x81C, 0x01660203,
+	0x81C, 0x01680203,
+	0x81C, 0x016A0203,
+	0x81C, 0x016C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFF000203,
+	0x81C, 0xFF020203,
+	0x81C, 0xFE040203,
+	0x81C, 0xFD060203,
+	0x81C, 0xFC080203,
+	0x81C, 0xFB0A0203,
+	0x81C, 0xFA0C0203,
+	0x81C, 0xF90E0203,
+	0x81C, 0xF8100203,
+	0x81C, 0xF7120203,
+	0x81C, 0xF6140203,
+	0x81C, 0xF5160203,
+	0x81C, 0xF4180203,
+	0x81C, 0xF31A0203,
+	0x81C, 0xF21C0203,
+	0x81C, 0xF11E0203,
+	0x81C, 0xF0200203,
+	0x81C, 0xEF220203,
+	0x81C, 0xEE240203,
+	0x81C, 0xED260203,
+	0x81C, 0xEC280203,
+	0x81C, 0xEB2A0203,
+	0x81C, 0xEA2C0203,
+	0x81C, 0xE92E0203,
+	0x81C, 0xE8300203,
+	0x81C, 0xE7320203,
+	0x81C, 0xE6340203,
+	0x81C, 0xE5360203,
+	0x81C, 0xE4380203,
+	0x81C, 0xE33A0203,
+	0x81C, 0xE23C0203,
+	0x81C, 0xE13E0203,
+	0x81C, 0xA4400203,
+	0x81C, 0xA3420203,
+	0x81C, 0xA2440203,
+	0x81C, 0xA1460203,
+	0x81C, 0x84480203,
+	0x81C, 0x834A0203,
+	0x81C, 0x824C0203,
+	0x81C, 0x814E0203,
+	0x81C, 0x64500203,
+	0x81C, 0x63520203,
+	0x81C, 0x62540203,
+	0x81C, 0x61560203,
+	0x81C, 0x45580203,
+	0x81C, 0x445A0203,
+	0x81C, 0x435C0203,
+	0x81C, 0x425E0203,
+	0x81C, 0x24600203,
+	0x81C, 0x23620203,
+	0x81C, 0x07640203,
+	0x81C, 0x06660203,
+	0x81C, 0x05680203,
+	0x81C, 0x046A0203,
+	0x81C, 0x036C0203,
+	0x81C, 0x026E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF8000203,
+	0x81C, 0xF7020203,
+	0x81C, 0xF6040203,
+	0x81C, 0xF5060203,
+	0x81C, 0xF4080203,
+	0x81C, 0xF30A0203,
+	0x81C, 0xF20C0203,
+	0x81C, 0xF10E0203,
+	0x81C, 0xF0100203,
+	0x81C, 0xEF120203,
+	0x81C, 0xEE140203,
+	0x81C, 0xED160203,
+	0x81C, 0xEC180203,
+	0x81C, 0xEB1A0203,
+	0x81C, 0xEA1C0203,
+	0x81C, 0xE91E0203,
+	0x81C, 0xE8200203,
+	0x81C, 0xE7220203,
+	0x81C, 0xE6240203,
+	0x81C, 0xE5260203,
+	0x81C, 0xE4280203,
+	0x81C, 0xE32A0203,
+	0x81C, 0xE22C0203,
+	0x81C, 0xE12E0203,
+	0x81C, 0xA6300203,
+	0x81C, 0xA5320203,
+	0x81C, 0xA4340203,
+	0x81C, 0xA3360203,
+	0x81C, 0xA2380203,
+	0x81C, 0xA13A0203,
+	0x81C, 0x843C0203,
+	0x81C, 0x833E0203,
+	0x81C, 0x82400203,
+	0x81C, 0x81420203,
+	0x81C, 0x64440203,
+	0x81C, 0x63460203,
+	0x81C, 0x62480203,
+	0x81C, 0x614A0203,
+	0x81C, 0x444C0203,
+	0x81C, 0x434E0203,
+	0x81C, 0x42500203,
+	0x81C, 0x41520203,
+	0x81C, 0x25540203,
+	0x81C, 0x24560203,
+	0x81C, 0x23580203,
+	0x81C, 0x065A0203,
+	0x81C, 0x055C0203,
+	0x81C, 0x045E0203,
+	0x81C, 0x03600203,
+	0x81C, 0x02620203,
+	0x81C, 0x01640203,
+	0x81C, 0x01660203,
+	0x81C, 0x01680203,
+	0x81C, 0x016A0203,
+	0x81C, 0x016C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF9000203,
+	0x81C, 0xF8020203,
+	0x81C, 0xF7040203,
+	0x81C, 0xF6060203,
+	0x81C, 0xF5080203,
+	0x81C, 0xF40A0203,
+	0x81C, 0xF30C0203,
+	0x81C, 0xF20E0203,
+	0x81C, 0xF1100203,
+	0x81C, 0xF0120203,
+	0x81C, 0xEF140203,
+	0x81C, 0xCE160203,
+	0x81C, 0xCD180203,
+	0x81C, 0xCC1A0203,
+	0x81C, 0xCB1C0203,
+	0x81C, 0xCA1E0203,
+	0x81C, 0xC9200203,
+	0x81C, 0xC8220203,
+	0x81C, 0xC7240203,
+	0x81C, 0xC6260203,
+	0x81C, 0xC5280203,
+	0x81C, 0xC42A0203,
+	0x81C, 0xC32C0203,
+	0x81C, 0xC22E0203,
+	0x81C, 0xC1300203,
+	0x81C, 0xA5320203,
+	0x81C, 0xA4340203,
+	0x81C, 0xA3360203,
+	0x81C, 0xA2380203,
+	0x81C, 0xA13A0203,
+	0x81C, 0x853C0203,
+	0x81C, 0x843E0203,
+	0x81C, 0x83400203,
+	0x81C, 0x82420203,
+	0x81C, 0x81440203,
+	0x81C, 0x64460203,
+	0x81C, 0x63480203,
+	0x81C, 0x624A0203,
+	0x81C, 0x614C0203,
+	0x81C, 0x444E0203,
+	0x81C, 0x43500203,
+	0x81C, 0x42520203,
+	0x81C, 0x41540203,
+	0x81C, 0x24560203,
+	0x81C, 0x23580203,
+	0x81C, 0x075A0203,
+	0x81C, 0x065C0203,
+	0x81C, 0x055E0203,
+	0x81C, 0x04600203,
+	0x81C, 0x03620203,
+	0x81C, 0x02640203,
+	0x81C, 0x01660203,
+	0x81C, 0x01680203,
+	0x81C, 0x016A0203,
+	0x81C, 0x016C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0xA0000000,	0x00000000,
+	0x81C, 0xFF000203,
+	0x81C, 0xFF020203,
+	0x81C, 0xFE040203,
+	0x81C, 0xFD060203,
+	0x81C, 0xFC080203,
+	0x81C, 0xFB0A0203,
+	0x81C, 0xFA0C0203,
+	0x81C, 0xF90E0203,
+	0x81C, 0xF8100203,
+	0x81C, 0xF7120203,
+	0x81C, 0xF6140203,
+	0x81C, 0xF5160203,
+	0x81C, 0xF4180203,
+	0x81C, 0xF31A0203,
+	0x81C, 0xF21C0203,
+	0x81C, 0xF11E0203,
+	0x81C, 0xF0200203,
+	0x81C, 0xEF220203,
+	0x81C, 0xEE240203,
+	0x81C, 0xED260203,
+	0x81C, 0xEC280203,
+	0x81C, 0xEB2A0203,
+	0x81C, 0xEA2C0203,
+	0x81C, 0xE92E0203,
+	0x81C, 0xE8300203,
+	0x81C, 0xE7320203,
+	0x81C, 0xE6340203,
+	0x81C, 0xE5360203,
+	0x81C, 0xE4380203,
+	0x81C, 0xE33A0203,
+	0x81C, 0xE23C0203,
+	0x81C, 0xE13E0203,
+	0x81C, 0xA4400203,
+	0x81C, 0xA3420203,
+	0x81C, 0xA2440203,
+	0x81C, 0xA1460203,
+	0x81C, 0x85480203,
+	0x81C, 0x844A0203,
+	0x81C, 0x834C0203,
+	0x81C, 0x824E0203,
+	0x81C, 0x81500203,
+	0x81C, 0x64520203,
+	0x81C, 0x63540203,
+	0x81C, 0x62560203,
+	0x81C, 0x61580203,
+	0x81C, 0x445A0203,
+	0x81C, 0x435C0203,
+	0x81C, 0x425E0203,
+	0x81C, 0x25600203,
+	0x81C, 0x24620203,
+	0x81C, 0x06640203,
+	0x81C, 0x05660203,
+	0x81C, 0x04680203,
+	0x81C, 0x036A0203,
+	0x81C, 0x026C0203,
+	0x81C, 0x016E0203,
+	0x81C, 0x01700203,
+	0x81C, 0x01720203,
+	0x81C, 0x01740203,
+	0x81C, 0x01760203,
+	0x81C, 0x01780203,
+	0x81C, 0x017A0203,
+	0x81C, 0x017C0203,
+	0x81C, 0x017E0203,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF8000303,
+	0x81C, 0xF7020303,
+	0x81C, 0xF6040303,
+	0x81C, 0xF5060303,
+	0x81C, 0xF4080303,
+	0x81C, 0xF30A0303,
+	0x81C, 0xF20C0303,
+	0x81C, 0xF10E0303,
+	0x81C, 0xF0100303,
+	0x81C, 0xEF120303,
+	0x81C, 0xEE140303,
+	0x81C, 0xED160303,
+	0x81C, 0xEC180303,
+	0x81C, 0xEB1A0303,
+	0x81C, 0xEA1C0303,
+	0x81C, 0xE91E0303,
+	0x81C, 0xE8200303,
+	0x81C, 0xE7220303,
+	0x81C, 0xE6240303,
+	0x81C, 0xE5260303,
+	0x81C, 0xE4280303,
+	0x81C, 0xE32A0303,
+	0x81C, 0xE22C0303,
+	0x81C, 0xE12E0303,
+	0x81C, 0xA6300303,
+	0x81C, 0xA5320303,
+	0x81C, 0xA4340303,
+	0x81C, 0xA3360303,
+	0x81C, 0xA2380303,
+	0x81C, 0xA13A0303,
+	0x81C, 0x843C0303,
+	0x81C, 0x833E0303,
+	0x81C, 0x82400303,
+	0x81C, 0x81420303,
+	0x81C, 0x64440303,
+	0x81C, 0x63460303,
+	0x81C, 0x62480303,
+	0x81C, 0x614A0303,
+	0x81C, 0x454C0303,
+	0x81C, 0x444E0303,
+	0x81C, 0x43500303,
+	0x81C, 0x42520303,
+	0x81C, 0x41540303,
+	0x81C, 0x24560303,
+	0x81C, 0x23580303,
+	0x81C, 0x065A0303,
+	0x81C, 0x055C0303,
+	0x81C, 0x045E0303,
+	0x81C, 0x03600303,
+	0x81C, 0x02620303,
+	0x81C, 0x01640303,
+	0x81C, 0x01660303,
+	0x81C, 0x01680303,
+	0x81C, 0x016A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF7000303,
+	0x81C, 0xF6020303,
+	0x81C, 0xF5040303,
+	0x81C, 0xF4060303,
+	0x81C, 0xF3080303,
+	0x81C, 0xF20A0303,
+	0x81C, 0xF10C0303,
+	0x81C, 0xF00E0303,
+	0x81C, 0xEF100303,
+	0x81C, 0xEE120303,
+	0x81C, 0xED140303,
+	0x81C, 0xEC160303,
+	0x81C, 0xEB180303,
+	0x81C, 0xEA1A0303,
+	0x81C, 0xE91C0303,
+	0x81C, 0xE81E0303,
+	0x81C, 0xE7200303,
+	0x81C, 0xE6220303,
+	0x81C, 0xE5240303,
+	0x81C, 0xE4260303,
+	0x81C, 0xE3280303,
+	0x81C, 0xC32A0303,
+	0x81C, 0xC22C0303,
+	0x81C, 0xC12E0303,
+	0x81C, 0xA5300303,
+	0x81C, 0xA4320303,
+	0x81C, 0xA3340303,
+	0x81C, 0xA2360303,
+	0x81C, 0xA1380303,
+	0x81C, 0x853A0303,
+	0x81C, 0x843C0303,
+	0x81C, 0x833E0303,
+	0x81C, 0x82400303,
+	0x81C, 0x81420303,
+	0x81C, 0x64440303,
+	0x81C, 0x63460303,
+	0x81C, 0x62480303,
+	0x81C, 0x614A0303,
+	0x81C, 0x454C0303,
+	0x81C, 0x444E0303,
+	0x81C, 0x43500303,
+	0x81C, 0x25520303,
+	0x81C, 0x24540303,
+	0x81C, 0x23560303,
+	0x81C, 0x06580303,
+	0x81C, 0x055A0303,
+	0x81C, 0x045C0303,
+	0x81C, 0x035E0303,
+	0x81C, 0x02600303,
+	0x81C, 0x01620303,
+	0x81C, 0x01640303,
+	0x81C, 0x01660303,
+	0x81C, 0x01680303,
+	0x81C, 0x016A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF9000303,
+	0x81C, 0xF8020303,
+	0x81C, 0xF7040303,
+	0x81C, 0xF6060303,
+	0x81C, 0xF5080303,
+	0x81C, 0xF40A0303,
+	0x81C, 0xF30C0303,
+	0x81C, 0xF20E0303,
+	0x81C, 0xF1100303,
+	0x81C, 0xF0120303,
+	0x81C, 0xEF140303,
+	0x81C, 0xEE160303,
+	0x81C, 0xED180303,
+	0x81C, 0xEC1A0303,
+	0x81C, 0xEB1C0303,
+	0x81C, 0xEA1E0303,
+	0x81C, 0xE9200303,
+	0x81C, 0xE8220303,
+	0x81C, 0xE7240303,
+	0x81C, 0xE6260303,
+	0x81C, 0xE5280303,
+	0x81C, 0xE42A0303,
+	0x81C, 0xE32C0303,
+	0x81C, 0xE22E0303,
+	0x81C, 0xE1300303,
+	0x81C, 0xA4320303,
+	0x81C, 0xA3340303,
+	0x81C, 0xA2360303,
+	0x81C, 0xA1380303,
+	0x81C, 0x853A0303,
+	0x81C, 0x843C0303,
+	0x81C, 0x833E0303,
+	0x81C, 0x82400303,
+	0x81C, 0x81420303,
+	0x81C, 0x64440303,
+	0x81C, 0x63460303,
+	0x81C, 0x62480303,
+	0x81C, 0x614A0303,
+	0x81C, 0x444C0303,
+	0x81C, 0x434E0303,
+	0x81C, 0x42500303,
+	0x81C, 0x25520303,
+	0x81C, 0x24540303,
+	0x81C, 0x23560303,
+	0x81C, 0x07580303,
+	0x81C, 0x065A0303,
+	0x81C, 0x055C0303,
+	0x81C, 0x045E0303,
+	0x81C, 0x03600303,
+	0x81C, 0x02620303,
+	0x81C, 0x01640303,
+	0x81C, 0x01660303,
+	0x81C, 0x01680303,
+	0x81C, 0x016A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF7000303,
+	0x81C, 0xF6020303,
+	0x81C, 0xF5040303,
+	0x81C, 0xF4060303,
+	0x81C, 0xF3080303,
+	0x81C, 0xF20A0303,
+	0x81C, 0xF10C0303,
+	0x81C, 0xF00E0303,
+	0x81C, 0xEF100303,
+	0x81C, 0xEE120303,
+	0x81C, 0xED140303,
+	0x81C, 0xEC160303,
+	0x81C, 0xEB180303,
+	0x81C, 0xEA1A0303,
+	0x81C, 0xE91C0303,
+	0x81C, 0xE81E0303,
+	0x81C, 0xE7200303,
+	0x81C, 0xE6220303,
+	0x81C, 0xE5240303,
+	0x81C, 0xE4260303,
+	0x81C, 0xE3280303,
+	0x81C, 0xE22A0303,
+	0x81C, 0xE12C0303,
+	0x81C, 0xA72E0303,
+	0x81C, 0xA6300303,
+	0x81C, 0xA5320303,
+	0x81C, 0xA4340303,
+	0x81C, 0xA3360303,
+	0x81C, 0xA2380303,
+	0x81C, 0xA13A0303,
+	0x81C, 0x843C0303,
+	0x81C, 0x833E0303,
+	0x81C, 0x82400303,
+	0x81C, 0x81420303,
+	0x81C, 0x64440303,
+	0x81C, 0x63460303,
+	0x81C, 0x62480303,
+	0x81C, 0x614A0303,
+	0x81C, 0x454C0303,
+	0x81C, 0x444E0303,
+	0x81C, 0x43500303,
+	0x81C, 0x42520303,
+	0x81C, 0x41540303,
+	0x81C, 0x24560303,
+	0x81C, 0x23580303,
+	0x81C, 0x065A0303,
+	0x81C, 0x055C0303,
+	0x81C, 0x045E0303,
+	0x81C, 0x03600303,
+	0x81C, 0x02620303,
+	0x81C, 0x01640303,
+	0x81C, 0x01660303,
+	0x81C, 0x01680303,
+	0x81C, 0x016A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFB000303,
+	0x81C, 0xFA020303,
+	0x81C, 0xF9040303,
+	0x81C, 0xF8060303,
+	0x81C, 0xF7080303,
+	0x81C, 0xF60A0303,
+	0x81C, 0xF50C0303,
+	0x81C, 0xF40E0303,
+	0x81C, 0xF3100303,
+	0x81C, 0xF2120303,
+	0x81C, 0xF1140303,
+	0x81C, 0xF0160303,
+	0x81C, 0xEF180303,
+	0x81C, 0xEE1A0303,
+	0x81C, 0xED1C0303,
+	0x81C, 0xEC1E0303,
+	0x81C, 0xEB200303,
+	0x81C, 0xEA220303,
+	0x81C, 0xE9240303,
+	0x81C, 0xE8260303,
+	0x81C, 0xE7280303,
+	0x81C, 0xE62A0303,
+	0x81C, 0xE52C0303,
+	0x81C, 0xE42E0303,
+	0x81C, 0xE3300303,
+	0x81C, 0xE2320303,
+	0x81C, 0xE1340303,
+	0x81C, 0xC2360303,
+	0x81C, 0xC1380303,
+	0x81C, 0xA33A0303,
+	0x81C, 0xA23C0303,
+	0x81C, 0x853E0303,
+	0x81C, 0x84400303,
+	0x81C, 0x83420303,
+	0x81C, 0x66440303,
+	0x81C, 0x65460303,
+	0x81C, 0x64480303,
+	0x81C, 0x634A0303,
+	0x81C, 0x624C0303,
+	0x81C, 0x614E0303,
+	0x81C, 0x45500303,
+	0x81C, 0x44520303,
+	0x81C, 0x43540303,
+	0x81C, 0x42560303,
+	0x81C, 0x25580303,
+	0x81C, 0x245A0303,
+	0x81C, 0x235C0303,
+	0x81C, 0x065E0303,
+	0x81C, 0x05600303,
+	0x81C, 0x04620303,
+	0x81C, 0x03640303,
+	0x81C, 0x02660303,
+	0x81C, 0x01680303,
+	0x81C, 0x016A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF9000303,
+	0x81C, 0xF8020303,
+	0x81C, 0xF7040303,
+	0x81C, 0xF6060303,
+	0x81C, 0xF5080303,
+	0x81C, 0xF40A0303,
+	0x81C, 0xF30C0303,
+	0x81C, 0xF20E0303,
+	0x81C, 0xF1100303,
+	0x81C, 0xF0120303,
+	0x81C, 0xEF140303,
+	0x81C, 0xEE160303,
+	0x81C, 0xED180303,
+	0x81C, 0xEC1A0303,
+	0x81C, 0xEB1C0303,
+	0x81C, 0xEA1E0303,
+	0x81C, 0xE9200303,
+	0x81C, 0xE8220303,
+	0x81C, 0xE7240303,
+	0x81C, 0xE6260303,
+	0x81C, 0xE5280303,
+	0x81C, 0xE42A0303,
+	0x81C, 0xE32C0303,
+	0x81C, 0xE22E0303,
+	0x81C, 0xE1300303,
+	0x81C, 0xA6320303,
+	0x81C, 0xA5340303,
+	0x81C, 0xA4360303,
+	0x81C, 0xA3380303,
+	0x81C, 0xA23A0303,
+	0x81C, 0xA13C0303,
+	0x81C, 0x853E0303,
+	0x81C, 0x84400303,
+	0x81C, 0x83420303,
+	0x81C, 0x82440303,
+	0x81C, 0x81460303,
+	0x81C, 0x64480303,
+	0x81C, 0x634A0303,
+	0x81C, 0x624C0303,
+	0x81C, 0x614E0303,
+	0x81C, 0x44500303,
+	0x81C, 0x43520303,
+	0x81C, 0x42540303,
+	0x81C, 0x41560303,
+	0x81C, 0x25580303,
+	0x81C, 0x245A0303,
+	0x81C, 0x235C0303,
+	0x81C, 0x055E0303,
+	0x81C, 0x04600303,
+	0x81C, 0x03620303,
+	0x81C, 0x02640303,
+	0x81C, 0x01660303,
+	0x81C, 0x01680303,
+	0x81C, 0x016A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000303,
+	0x81C, 0xFD020303,
+	0x81C, 0xFC040303,
+	0x81C, 0xFB060303,
+	0x81C, 0xFA080303,
+	0x81C, 0xF90A0303,
+	0x81C, 0xF80C0303,
+	0x81C, 0xF70E0303,
+	0x81C, 0xF6100303,
+	0x81C, 0xF5120303,
+	0x81C, 0xF4140303,
+	0x81C, 0xF3160303,
+	0x81C, 0xF2180303,
+	0x81C, 0xF11A0303,
+	0x81C, 0xF01C0303,
+	0x81C, 0xEF1E0303,
+	0x81C, 0xEE200303,
+	0x81C, 0xED220303,
+	0x81C, 0xEC240303,
+	0x81C, 0xEB260303,
+	0x81C, 0xEA280303,
+	0x81C, 0xE92A0303,
+	0x81C, 0xE82C0303,
+	0x81C, 0xE72E0303,
+	0x81C, 0xE6300303,
+	0x81C, 0xE5320303,
+	0x81C, 0xE4340303,
+	0x81C, 0xE3360303,
+	0x81C, 0xC3380303,
+	0x81C, 0xC23A0303,
+	0x81C, 0xC13C0303,
+	0x81C, 0xA43E0303,
+	0x81C, 0xA3400303,
+	0x81C, 0xA2420303,
+	0x81C, 0xA1440303,
+	0x81C, 0x85460303,
+	0x81C, 0x84480303,
+	0x81C, 0x834A0303,
+	0x81C, 0x824C0303,
+	0x81C, 0x814E0303,
+	0x81C, 0x64500303,
+	0x81C, 0x63520303,
+	0x81C, 0x62540303,
+	0x81C, 0x61560303,
+	0x81C, 0x44580303,
+	0x81C, 0x435A0303,
+	0x81C, 0x425C0303,
+	0x81C, 0x265E0303,
+	0x81C, 0x25600303,
+	0x81C, 0x24620303,
+	0x81C, 0x06640303,
+	0x81C, 0x05660303,
+	0x81C, 0x04680303,
+	0x81C, 0x036A0303,
+	0x81C, 0x026C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF7000303,
+	0x81C, 0xF6020303,
+	0x81C, 0xF5040303,
+	0x81C, 0xF4060303,
+	0x81C, 0xF3080303,
+	0x81C, 0xF20A0303,
+	0x81C, 0xF10C0303,
+	0x81C, 0xF00E0303,
+	0x81C, 0xEF100303,
+	0x81C, 0xEE120303,
+	0x81C, 0xED140303,
+	0x81C, 0xEC160303,
+	0x81C, 0xEB180303,
+	0x81C, 0xEA1A0303,
+	0x81C, 0xE91C0303,
+	0x81C, 0xE81E0303,
+	0x81C, 0xE7200303,
+	0x81C, 0xE6220303,
+	0x81C, 0xE5240303,
+	0x81C, 0xE4260303,
+	0x81C, 0xE3280303,
+	0x81C, 0xE22A0303,
+	0x81C, 0xA62C0303,
+	0x81C, 0xA52E0303,
+	0x81C, 0xA4300303,
+	0x81C, 0xA3320303,
+	0x81C, 0xA2340303,
+	0x81C, 0x87360303,
+	0x81C, 0x86380303,
+	0x81C, 0x853A0303,
+	0x81C, 0x843C0303,
+	0x81C, 0x833E0303,
+	0x81C, 0x66400303,
+	0x81C, 0x65420303,
+	0x81C, 0x64440303,
+	0x81C, 0x45460303,
+	0x81C, 0x44480303,
+	0x81C, 0x434A0303,
+	0x81C, 0x274C0303,
+	0x81C, 0x264E0303,
+	0x81C, 0x25500303,
+	0x81C, 0x24520303,
+	0x81C, 0x23540303,
+	0x81C, 0x08560303,
+	0x81C, 0x07580303,
+	0x81C, 0x065A0303,
+	0x81C, 0x055C0303,
+	0x81C, 0x045E0303,
+	0x81C, 0x03600303,
+	0x81C, 0x02620303,
+	0x81C, 0x01640303,
+	0x81C, 0x01660303,
+	0x81C, 0x01680303,
+	0x81C, 0x016A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFE000303,
+	0x81C, 0xFD020303,
+	0x81C, 0xFC040303,
+	0x81C, 0xFB060303,
+	0x81C, 0xFA080303,
+	0x81C, 0xF90A0303,
+	0x81C, 0xF80C0303,
+	0x81C, 0xF70E0303,
+	0x81C, 0xF6100303,
+	0x81C, 0xF5120303,
+	0x81C, 0xF4140303,
+	0x81C, 0xF3160303,
+	0x81C, 0xF2180303,
+	0x81C, 0xF11A0303,
+	0x81C, 0xF01C0303,
+	0x81C, 0xEF1E0303,
+	0x81C, 0xEE200303,
+	0x81C, 0xED220303,
+	0x81C, 0xEC240303,
+	0x81C, 0xEB260303,
+	0x81C, 0xEA280303,
+	0x81C, 0xE92A0303,
+	0x81C, 0xE82C0303,
+	0x81C, 0xE72E0303,
+	0x81C, 0xE6300303,
+	0x81C, 0xE5320303,
+	0x81C, 0xE4340303,
+	0x81C, 0xE3360303,
+	0x81C, 0xC3380303,
+	0x81C, 0xC23A0303,
+	0x81C, 0xC13C0303,
+	0x81C, 0xA43E0303,
+	0x81C, 0xA3400303,
+	0x81C, 0xA2420303,
+	0x81C, 0xA1440303,
+	0x81C, 0x85460303,
+	0x81C, 0x84480303,
+	0x81C, 0x834A0303,
+	0x81C, 0x824C0303,
+	0x81C, 0x814E0303,
+	0x81C, 0x64500303,
+	0x81C, 0x63520303,
+	0x81C, 0x62540303,
+	0x81C, 0x61560303,
+	0x81C, 0x44580303,
+	0x81C, 0x435A0303,
+	0x81C, 0x425C0303,
+	0x81C, 0x265E0303,
+	0x81C, 0x25600303,
+	0x81C, 0x24620303,
+	0x81C, 0x06640303,
+	0x81C, 0x05660303,
+	0x81C, 0x04680303,
+	0x81C, 0x036A0303,
+	0x81C, 0x026C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF7000303,
+	0x81C, 0xF6020303,
+	0x81C, 0xF5040303,
+	0x81C, 0xF4060303,
+	0x81C, 0xF3080303,
+	0x81C, 0xF20A0303,
+	0x81C, 0xF10C0303,
+	0x81C, 0xF00E0303,
+	0x81C, 0xEF100303,
+	0x81C, 0xEE120303,
+	0x81C, 0xED140303,
+	0x81C, 0xEC160303,
+	0x81C, 0xEB180303,
+	0x81C, 0xEA1A0303,
+	0x81C, 0xE91C0303,
+	0x81C, 0xE81E0303,
+	0x81C, 0xE7200303,
+	0x81C, 0xE6220303,
+	0x81C, 0xE5240303,
+	0x81C, 0xE4260303,
+	0x81C, 0xE3280303,
+	0x81C, 0xE22A0303,
+	0x81C, 0xE12C0303,
+	0x81C, 0xA72E0303,
+	0x81C, 0xA6300303,
+	0x81C, 0xA5320303,
+	0x81C, 0xA4340303,
+	0x81C, 0xA3360303,
+	0x81C, 0xA2380303,
+	0x81C, 0xA13A0303,
+	0x81C, 0x843C0303,
+	0x81C, 0x833E0303,
+	0x81C, 0x82400303,
+	0x81C, 0x81420303,
+	0x81C, 0x64440303,
+	0x81C, 0x63460303,
+	0x81C, 0x62480303,
+	0x81C, 0x614A0303,
+	0x81C, 0x454C0303,
+	0x81C, 0x444E0303,
+	0x81C, 0x43500303,
+	0x81C, 0x42520303,
+	0x81C, 0x41540303,
+	0x81C, 0x24560303,
+	0x81C, 0x23580303,
+	0x81C, 0x065A0303,
+	0x81C, 0x055C0303,
+	0x81C, 0x045E0303,
+	0x81C, 0x03600303,
+	0x81C, 0x02620303,
+	0x81C, 0x01640303,
+	0x81C, 0x01660303,
+	0x81C, 0x01680303,
+	0x81C, 0x016A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xF7000303,
+	0x81C, 0xF6020303,
+	0x81C, 0xF5040303,
+	0x81C, 0xF4060303,
+	0x81C, 0xF3080303,
+	0x81C, 0xF20A0303,
+	0x81C, 0xF10C0303,
+	0x81C, 0xF00E0303,
+	0x81C, 0xEF100303,
+	0x81C, 0xEE120303,
+	0x81C, 0xED140303,
+	0x81C, 0xEC160303,
+	0x81C, 0xEB180303,
+	0x81C, 0xEA1A0303,
+	0x81C, 0xAF1C0303,
+	0x81C, 0xAE1E0303,
+	0x81C, 0xAD200303,
+	0x81C, 0xAC220303,
+	0x81C, 0xAB240303,
+	0x81C, 0xAA260303,
+	0x81C, 0xC5280303,
+	0x81C, 0xC42A0303,
+	0x81C, 0xC32C0303,
+	0x81C, 0xC22E0303,
+	0x81C, 0xA5300303,
+	0x81C, 0xA4320303,
+	0x81C, 0xA3340303,
+	0x81C, 0xA2360303,
+	0x81C, 0xA1380303,
+	0x81C, 0x853A0303,
+	0x81C, 0x843C0303,
+	0x81C, 0x833E0303,
+	0x81C, 0x82400303,
+	0x81C, 0x81420303,
+	0x81C, 0x64440303,
+	0x81C, 0x63460303,
+	0x81C, 0x62480303,
+	0x81C, 0x614A0303,
+	0x81C, 0x444C0303,
+	0x81C, 0x434E0303,
+	0x81C, 0x42500303,
+	0x81C, 0x41520303,
+	0x81C, 0x25540303,
+	0x81C, 0x24560303,
+	0x81C, 0x06580303,
+	0x81C, 0x055A0303,
+	0x81C, 0x045C0303,
+	0x81C, 0x035E0303,
+	0x81C, 0x02600303,
+	0x81C, 0x01620303,
+	0x81C, 0x01640303,
+	0x81C, 0x01660303,
+	0x81C, 0x01680303,
+	0x81C, 0x016A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0xA0000000,	0x00000000,
+	0x81C, 0xFD000303,
+	0x81C, 0xFC020303,
+	0x81C, 0xFB040303,
+	0x81C, 0xFA060303,
+	0x81C, 0xF9080303,
+	0x81C, 0xF80A0303,
+	0x81C, 0xF70C0303,
+	0x81C, 0xF60E0303,
+	0x81C, 0xF5100303,
+	0x81C, 0xF4120303,
+	0x81C, 0xF3140303,
+	0x81C, 0xF2160303,
+	0x81C, 0xF1180303,
+	0x81C, 0xF01A0303,
+	0x81C, 0xEF1C0303,
+	0x81C, 0xEE1E0303,
+	0x81C, 0xED200303,
+	0x81C, 0xEC220303,
+	0x81C, 0xEB240303,
+	0x81C, 0xEA260303,
+	0x81C, 0xE9280303,
+	0x81C, 0xE82A0303,
+	0x81C, 0xE72C0303,
+	0x81C, 0xE62E0303,
+	0x81C, 0xE5300303,
+	0x81C, 0xE4320303,
+	0x81C, 0xE3340303,
+	0x81C, 0xE2360303,
+	0x81C, 0xE1380303,
+	0x81C, 0xA53A0303,
+	0x81C, 0xA43C0303,
+	0x81C, 0xA33E0303,
+	0x81C, 0xA2400303,
+	0x81C, 0xA1420303,
+	0x81C, 0x87440303,
+	0x81C, 0x86460303,
+	0x81C, 0x85480303,
+	0x81C, 0x844A0303,
+	0x81C, 0x834C0303,
+	0x81C, 0x824E0303,
+	0x81C, 0x81500303,
+	0x81C, 0x64520303,
+	0x81C, 0x63540303,
+	0x81C, 0x62560303,
+	0x81C, 0x61580303,
+	0x81C, 0x435A0303,
+	0x81C, 0x425C0303,
+	0x81C, 0x415E0303,
+	0x81C, 0x07600303,
+	0x81C, 0x06620303,
+	0x81C, 0x05640303,
+	0x81C, 0x04660303,
+	0x81C, 0x03680303,
+	0x81C, 0x026A0303,
+	0x81C, 0x016C0303,
+	0x81C, 0x016E0303,
+	0x81C, 0x01700303,
+	0x81C, 0x01720303,
+	0x81C, 0x01740303,
+	0x81C, 0x01760303,
+	0x81C, 0x01780303,
+	0x81C, 0x017A0303,
+	0x81C, 0x017C0303,
+	0x81C, 0x017E0303,
+	0xB0000000,	0x00000000,
+	0xC50, 0x00000022,
+	0xC50, 0x00000020,
+	0xE50, 0x00000022,
+	0xE50, 0x00000020,
+	0x1850, 0x00000022,
+	0x1850, 0x00000020,
+	0x1A50, 0x00000022,
+	0x1A50, 0x00000020,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8814a_agc, rtw_phy_cfg_agc);
+
+static const u32 rtw8814a_bb[] = {
+	0x800, 0x9020D010,
+	0x804, 0x08011280,
+	0x808, 0x0E0282FF,
+	0x80C, 0x1000002F,
+	0x80000003,	0x00000000,	0x40000000,	0x00000000,
+	0x810, 0x33303265,
+	0xA0000000,	0x00000000,
+	0x810, 0x33303265,
+	0xB0000000,	0x00000000,
+	0x814, 0x020C3D10,
+	0x818, 0x04A10385,
+	0x820, 0x00000000,
+	0x824, 0x00033E40,
+	0x828, 0x00000000,
+	0x82C, 0x73985170,
+	0x830, 0x79A0EA08,
+	0x834, 0x042E708A,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0x838, 0x86667640,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x838, 0x86667641,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x838, 0x86667641,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x838, 0x86667641,
+	0xA0000000,	0x00000000,
+	0x838, 0x86667640,
+	0xB0000000,	0x00000000,
+	0x83C, 0x9798B9B9,
+	0x840, 0x17578F60,
+	0x844, 0x4BBDFCDE,
+	0x848, 0x5CD07F8B,
+	0x84C, 0x6CFBF7B5,
+	0x850, 0x28834706,
+	0x854, 0x0001520C,
+	0x858, 0x4060C000,
+	0x85C, 0x74210368,
+	0x860, 0x6929C321,
+	0x864, 0x79727432,
+	0x868, 0x8CA7A314,
+	0x86C, 0x438C2878,
+	0x870, 0x44444444,
+	0x874, 0x21612C2E,
+	0x878, 0x00003152,
+	0x87C, 0x000FC000,
+	0x8A0, 0x00000013,
+	0x8A4, 0x7F7F7F7F,
+	0x8A8, 0xA202033E,
+	0x8AC, 0xF40F550A,
+	0x8B0, 0x00000600,
+	0x8B4, 0x000FC080,
+	0x8B8, 0xEC0057FF,
+	0x8BC, 0x8CA520C3,
+	0x8C0, 0x3FF00020,
+	0x8C4, 0x44C00000,
+	0x80000009,	0x00000000,	0x40000000,	0x00000000,
+	0x8C8, 0x80025969,
+	0xA0000000,	0x00000000,
+	0x8C8, 0x80025167,
+	0xB0000000,	0x00000000,
+	0x8CC, 0x08250492,
+	0x8D0, 0x0000B800,
+	0x8D4, 0x940008A0,
+	0x8D8, 0x290B5612,
+	0x8DC, 0x00000000,
+	0x8E0, 0x32316407,
+	0x8E4, 0x4A092925,
+	0x8E8, 0xFFFFC42C,
+	0x8EC, 0x99999999,
+	0x8F0, 0x00009999,
+	0x8F4, 0x00F80FA1,
+	0x8F8, 0x400082C0,
+	0x8FC, 0x00000000,
+	0x900, 0x00400700,
+	0x90C, 0x09004000,
+	0x910, 0x0000FC00,
+	0x914, 0xD6400404,
+	0x918, 0x1C1028C0,
+	0x91C, 0x64B11A1C,
+	0x920, 0xE0767233,
+	0x924, 0x055AA500,
+	0x928, 0x4AB0E4E4,
+	0x92C, 0xFFFE0000,
+	0x930, 0xFFFFFFFE,
+	0x934, 0x001FFFFF,
+	0x938, 0x00008400,
+	0x93C, 0x932C0642,
+	0x940, 0x093E9360,
+	0x944, 0x08000000,
+	0x948, 0x04000000,
+	0x950, 0x02010080,
+	0x954, 0x86510080,
+	0x960, 0x00000000,
+	0x964, 0x00000000,
+	0x968, 0x00000000,
+	0x96C, 0x00000000,
+	0x970, 0x801FFFFF,
+	0x978, 0x00000000,
+	0x97C, 0x00000000,
+	0x980, 0x00000000,
+	0x984, 0x00000000,
+	0x988, 0x00000000,
+	0x98C, 0x03440000,
+	0x990, 0x27100000,
+	0x994, 0xFFFF0100,
+	0x998, 0xFFFFFF5C,
+	0x99C, 0xFFFFFFFF,
+	0x9A0, 0x000000FF,
+	0x9A4, 0x00080080,
+	0x9A8, 0x0C2F0000,
+	0x9AC, 0x00560000,
+	0x9B0, 0x81081008,
+	0x9B4, 0x00000000,
+	0x9B8, 0x01081008,
+	0x9BC, 0x01081008,
+	0x9D0, 0x00000000,
+	0x9D4, 0x00000000,
+	0x9D8, 0x00000000,
+	0x9DC, 0x00000000,
+	0x9E4, 0x00000002,
+	0x9E8, 0x000022D5,
+	0x9FC, 0xEFFFF7FF,
+	0xB00, 0xE3100000,
+	0xB04, 0x0000B000,
+	0xB0C, 0x31EAA006,
+	0xB5C, 0x41CFFFFF,
+	0xC00, 0x00000007,
+	0xC04, 0x00042020,
+	0xC08, 0x80410231,
+	0xC0C, 0x00000000,
+	0xC10, 0x00000100,
+	0xC14, 0x01000000,
+	0xC1C, 0x40000053,
+	0xC50, 0x00000020,
+	0xC54, 0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0xC58, 0x3C0A0C14,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0xC58, 0x3C0A0C14,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0xC58, 0x3C0A0C14,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xC58, 0x3C0A0C14,
+	0xA0000000,	0x00000000,
+	0xC58, 0x3C020C14,
+	0xB0000000,	0x00000000,
+	0xC5C, 0x0D000058,
+	0xC60, 0x1B800000,
+	0xC60, 0x0B800001,
+	0xC60, 0x05800002,
+	0xC60, 0x07800003,
+	0xC60, 0x1A800004,
+	0xC60, 0x0B800005,
+	0xC60, 0x05800006,
+	0xC60, 0x0E800007,
+	0xC60, 0x1A800008,
+	0xC60, 0x0B800009,
+	0xC60, 0x1580000A,
+	0xC60, 0x0880000B,
+	0xC60, 0x1A80000C,
+	0xC60, 0x0B80000D,
+	0xC60, 0x0580000E,
+	0xC60, 0x0E80000F,
+	0xC60, 0x1A800010,
+	0xC60, 0x0B800011,
+	0xC60, 0x15800012,
+	0xC60, 0x08800013,
+	0xC60, 0x1A800014,
+	0xC60, 0x0B800015,
+	0xC60, 0x05800016,
+	0xC60, 0x07800017,
+	0xC60, 0x1A800018,
+	0xC60, 0x0B800019,
+	0xC60, 0x1580001A,
+	0xC60, 0x0880001B,
+	0xC60, 0x1B80001C,
+	0xC60, 0x0B80001D,
+	0xC60, 0x0580001E,
+	0xC60, 0x0780001F,
+	0xC60, 0x1B800020,
+	0xC60, 0x0B800021,
+	0xC60, 0x05800022,
+	0xC60, 0x07800023,
+	0xC60, 0x1B800024,
+	0xC60, 0x0B800025,
+	0xC60, 0x05800026,
+	0xC60, 0x07800027,
+	0xC60, 0x1B800028,
+	0xC60, 0x0B800029,
+	0xC60, 0x0580002A,
+	0xC60, 0x0780002B,
+	0xC60, 0x1B800030,
+	0xC60, 0x0B800031,
+	0xC60, 0x05800032,
+	0xC60, 0x00800033,
+	0xC60, 0x1B800034,
+	0xC60, 0x0B800035,
+	0xC60, 0x05800036,
+	0xC60, 0x00800037,
+	0xC60, 0x1B800038,
+	0xC60, 0x0B800039,
+	0xC60, 0x0580003A,
+	0xC60, 0x0E80803B,
+	0xC94, 0x01000401,
+	0xC98, 0x00188000,
+	0xCA0, 0x00002929,
+	0xCA4, 0x08040201,
+	0xCA8, 0x80402010,
+	0xCAC, 0x77777000,
+	0xCB0, 0x54775477,
+	0xCB4, 0x54775477,
+	0xCB8, 0x00500000,
+	0xCBC, 0x77700000,
+	0xCC0, 0x00000010,
+	0xCC8, 0x00000010,
+	0xE00, 0x00000007,
+	0xE04, 0x00042020,
+	0xE08, 0x80410231,
+	0xE0C, 0x00000000,
+	0xE10, 0x00000100,
+	0xE14, 0x01000000,
+	0xE1C, 0x40000053,
+	0xE50, 0x00000020,
+	0xE54, 0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0xE58, 0x3C0A0C14,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0xE58, 0x3C0A0C14,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0xE58, 0x3C0A0C14,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xE58, 0x3C0A0C14,
+	0xA0000000,	0x00000000,
+	0xE58, 0x3C020C14,
+	0xB0000000,	0x00000000,
+	0xE5C, 0x0D000058,
+	0xE60, 0x1B800000,
+	0xE60, 0x0B800001,
+	0xE60, 0x05800002,
+	0xE60, 0x07800003,
+	0xE60, 0x1A800004,
+	0xE60, 0x0B800005,
+	0xE60, 0x05800006,
+	0xE60, 0x0E800007,
+	0xE60, 0x1A800008,
+	0xE60, 0x0B800009,
+	0xE60, 0x1580000A,
+	0xE60, 0x0880000B,
+	0xE60, 0x1A80000C,
+	0xE60, 0x0B80000D,
+	0xE60, 0x0580000E,
+	0xE60, 0x0E80000F,
+	0xE60, 0x1A800010,
+	0xE60, 0x0B800011,
+	0xE60, 0x15800012,
+	0xE60, 0x08800013,
+	0xE60, 0x1A800014,
+	0xE60, 0x0B800015,
+	0xE60, 0x05800016,
+	0xE60, 0x07800017,
+	0xE60, 0x1A800018,
+	0xE60, 0x0B800019,
+	0xE60, 0x1580001A,
+	0xE60, 0x0880001B,
+	0xE60, 0x1B80001C,
+	0xE60, 0x0B80001D,
+	0xE60, 0x0580001E,
+	0xE60, 0x0780001F,
+	0xE60, 0x1B800020,
+	0xE60, 0x0B800021,
+	0xE60, 0x05800022,
+	0xE60, 0x07800023,
+	0xE60, 0x1B800024,
+	0xE60, 0x0B800025,
+	0xE60, 0x05800026,
+	0xE60, 0x07800027,
+	0xE60, 0x1B800028,
+	0xE60, 0x0B800029,
+	0xE60, 0x0580002A,
+	0xE60, 0x0780002B,
+	0xE60, 0x1B800030,
+	0xE60, 0x0B800031,
+	0xE60, 0x05800032,
+	0xE60, 0x00800033,
+	0xE60, 0x1B800034,
+	0xE60, 0x0B800035,
+	0xE60, 0x05800036,
+	0xE60, 0x00800037,
+	0xE60, 0x1B800038,
+	0xE60, 0x0B800039,
+	0xE60, 0x0580003A,
+	0xE60, 0x0E80803B,
+	0xE94, 0x01000401,
+	0xE98, 0x00188000,
+	0xEA0, 0x00002929,
+	0xEA4, 0x08040201,
+	0xEA8, 0x80402010,
+	0xEAC, 0x77777000,
+	0xEB0, 0x54775477,
+	0xEB4, 0x54775477,
+	0xEB8, 0x00500000,
+	0xEBC, 0x77700000,
+	0x1800, 0x00000007,
+	0x1804, 0x00042020,
+	0x1808, 0x80410231,
+	0x180C, 0x00000000,
+	0x1810, 0x00000100,
+	0x1814, 0x01000000,
+	0x181C, 0x40000053,
+	0x1850, 0x00000020,
+	0x1854, 0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1858, 0x3C0A0C14,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1858, 0x3C0A0C14,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1858, 0x3C0A0C14,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1858, 0x3C0A0C14,
+	0xA0000000,	0x00000000,
+	0x1858, 0x3C020C14,
+	0xB0000000,	0x00000000,
+	0x185C, 0x0D000058,
+	0x1860, 0x1B800000,
+	0x1860, 0x0B800001,
+	0x1860, 0x05800002,
+	0x1860, 0x07800003,
+	0x1860, 0x1A800004,
+	0x1860, 0x0B800005,
+	0x1860, 0x05800006,
+	0x1860, 0x0E800007,
+	0x1860, 0x1A800008,
+	0x1860, 0x0B800009,
+	0x1860, 0x1580000A,
+	0x1860, 0x0880000B,
+	0x1860, 0x1A80000C,
+	0x1860, 0x0B80000D,
+	0x1860, 0x0580000E,
+	0x1860, 0x0E80000F,
+	0x1860, 0x1A800010,
+	0x1860, 0x0B800011,
+	0x1860, 0x15800012,
+	0x1860, 0x08800013,
+	0x1860, 0x1A800014,
+	0x1860, 0x0B800015,
+	0x1860, 0x05800016,
+	0x1860, 0x07800017,
+	0x1860, 0x1A800018,
+	0x1860, 0x0B800019,
+	0x1860, 0x1580001A,
+	0x1860, 0x0880001B,
+	0x1860, 0x1B80001C,
+	0x1860, 0x0B80001D,
+	0x1860, 0x0580001E,
+	0x1860, 0x0780001F,
+	0x1860, 0x1B800020,
+	0x1860, 0x0B800021,
+	0x1860, 0x05800022,
+	0x1860, 0x07800023,
+	0x1860, 0x1B800024,
+	0x1860, 0x0B800025,
+	0x1860, 0x05800026,
+	0x1860, 0x07800027,
+	0x1860, 0x1B800028,
+	0x1860, 0x0B800029,
+	0x1860, 0x0580002A,
+	0x1860, 0x0780002B,
+	0x1860, 0x1B800030,
+	0x1860, 0x0B800031,
+	0x1860, 0x05800032,
+	0x1860, 0x00800033,
+	0x1860, 0x1B800034,
+	0x1860, 0x0B800035,
+	0x1860, 0x05800036,
+	0x1860, 0x00800037,
+	0x1860, 0x1B800038,
+	0x1860, 0x0B800039,
+	0x1860, 0x0580003A,
+	0x1860, 0x0E80803B,
+	0x1894, 0x01000401,
+	0x1898, 0x00188000,
+	0x18A0, 0x00002929,
+	0x18A4, 0x08040201,
+	0x18A8, 0x80402010,
+	0x18AC, 0x77777000,
+	0x18B0, 0x54775477,
+	0x18B4, 0x54775477,
+	0x18B8, 0x00500000,
+	0x18BC, 0x77700000,
+	0x1A00, 0x00000007,
+	0x1A04, 0x00042020,
+	0x1A08, 0x80410231,
+	0x1A0C, 0x00000000,
+	0x1A10, 0x00000100,
+	0x1A14, 0x01000000,
+	0x1A1C, 0x40000053,
+	0x1A50, 0x00000020,
+	0x1A54, 0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1A58, 0x3C0A0C14,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1A58, 0x3C0A0C14,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1A58, 0x3C0A0C14,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1A58, 0x3C0A0C14,
+	0xA0000000,	0x00000000,
+	0x1A58, 0x3C020C14,
+	0xB0000000,	0x00000000,
+	0x1A5C, 0x0D000058,
+	0x1A60, 0x1B800000,
+	0x1A60, 0x0B800001,
+	0x1A60, 0x05800002,
+	0x1A60, 0x07800003,
+	0x1A60, 0x1A800004,
+	0x1A60, 0x0B800005,
+	0x1A60, 0x05800006,
+	0x1A60, 0x0E800007,
+	0x1A60, 0x1A800008,
+	0x1A60, 0x0B800009,
+	0x1A60, 0x1580000A,
+	0x1A60, 0x0880000B,
+	0x1A60, 0x1A80000C,
+	0x1A60, 0x0B80000D,
+	0x1A60, 0x0580000E,
+	0x1A60, 0x0E80000F,
+	0x1A60, 0x1A800010,
+	0x1A60, 0x0B800011,
+	0x1A60, 0x15800012,
+	0x1A60, 0x08800013,
+	0x1A60, 0x1A800014,
+	0x1A60, 0x0B800015,
+	0x1A60, 0x05800016,
+	0x1A60, 0x07800017,
+	0x1A60, 0x1A800018,
+	0x1A60, 0x0B800019,
+	0x1A60, 0x1580001A,
+	0x1A60, 0x0880001B,
+	0x1A60, 0x1B80001C,
+	0x1A60, 0x0B80001D,
+	0x1A60, 0x0580001E,
+	0x1A60, 0x0780001F,
+	0x1A60, 0x1B800020,
+	0x1A60, 0x0B800021,
+	0x1A60, 0x05800022,
+	0x1A60, 0x07800023,
+	0x1A60, 0x1B800024,
+	0x1A60, 0x0B800025,
+	0x1A60, 0x05800026,
+	0x1A60, 0x07800027,
+	0x1A60, 0x1B800028,
+	0x1A60, 0x0B800029,
+	0x1A60, 0x0580002A,
+	0x1A60, 0x0780002B,
+	0x1A60, 0x1B800030,
+	0x1A60, 0x0B800031,
+	0x1A60, 0x05800032,
+	0x1A60, 0x00800033,
+	0x1A60, 0x1B800034,
+	0x1A60, 0x0B800035,
+	0x1A60, 0x05800036,
+	0x1A60, 0x00800037,
+	0x1A60, 0x1B800038,
+	0x1A60, 0x0B800039,
+	0x1A60, 0x0580003A,
+	0x1A60, 0x0E80803B,
+	0x1A94, 0x01000401,
+	0x1A98, 0x00188000,
+	0x1AA0, 0x00002929,
+	0x1AA4, 0x08040201,
+	0x1AA8, 0x80402010,
+	0x1AAC, 0x77777000,
+	0x1AB0, 0x54775477,
+	0x1AB4, 0x54775477,
+	0x1AB8, 0x00500000,
+	0x1ABC, 0x77700000,
+	0x1904, 0x00030000,
+	0x1914, 0x00030000,
+	0x1984, 0x03000000,
+	0x1988, 0x00000087,
+	0x198C, 0x00000007,
+	0x1990, 0xFFAA5500,
+	0x1994, 0x00000077,
+	0x1998, 0x12801000,
+	0x1998, 0x12801000,
+	0x1998, 0x12801001,
+	0x1998, 0x12801002,
+	0x1998, 0x12801003,
+	0x1998, 0x12801004,
+	0x1998, 0x12801005,
+	0x1998, 0x12801006,
+	0x1998, 0x12801007,
+	0x1998, 0x12801008,
+	0x1998, 0x12801009,
+	0x1998, 0x1280100A,
+	0x1998, 0x1280100B,
+	0x1998, 0x1280100C,
+	0x1998, 0x1280100D,
+	0x1998, 0x1280100E,
+	0x1998, 0x1280100F,
+	0x1998, 0x12801010,
+	0x1998, 0x12801011,
+	0x1998, 0x12801012,
+	0x1998, 0x12801013,
+	0x1998, 0x12801014,
+	0x1998, 0x12801015,
+	0x1998, 0x12801016,
+	0x1998, 0x12801017,
+	0x1998, 0x12801018,
+	0x1998, 0x12801019,
+	0x1998, 0x1280101A,
+	0x1998, 0x1280101B,
+	0x1998, 0x1280101C,
+	0x1998, 0x1280101D,
+	0x1998, 0x1280101E,
+	0x1998, 0x1280101F,
+	0x1998, 0x12801020,
+	0x1998, 0x12801021,
+	0x1998, 0x12801022,
+	0x1998, 0x12801023,
+	0x1998, 0x1280102C,
+	0x1998, 0x1280102D,
+	0x1998, 0x1280102E,
+	0x1998, 0x1280102F,
+	0x1998, 0x12801030,
+	0x1998, 0x12801031,
+	0x1998, 0x12801032,
+	0x1998, 0x12801033,
+	0x1998, 0x12801034,
+	0x1998, 0x12801035,
+	0x1998, 0x12801036,
+	0x1998, 0x12801037,
+	0x1998, 0x12801038,
+	0x1998, 0x12801039,
+	0x1998, 0x1280103A,
+	0x1998, 0x1280103B,
+	0x1998, 0x1280103C,
+	0x1998, 0x1280103D,
+	0x1998, 0x1280103E,
+	0x1998, 0x1280103F,
+	0x1998, 0x12801040,
+	0x1998, 0x12801041,
+	0x1998, 0x12801042,
+	0x1998, 0x12801043,
+	0x1998, 0x12801044,
+	0x1998, 0x12801045,
+	0x1998, 0x12801046,
+	0x1998, 0x12801047,
+	0x1998, 0x12801048,
+	0x1998, 0x12801049,
+	0x1998, 0x12801100,
+	0x1998, 0x12801101,
+	0x1998, 0x12801102,
+	0x1998, 0x12801103,
+	0x1998, 0x12801104,
+	0x1998, 0x12801105,
+	0x1998, 0x12801106,
+	0x1998, 0x12801107,
+	0x1998, 0x12801108,
+	0x1998, 0x12801109,
+	0x1998, 0x1280110A,
+	0x1998, 0x1280110B,
+	0x1998, 0x1280110C,
+	0x1998, 0x1280110D,
+	0x1998, 0x1280110E,
+	0x1998, 0x1280110F,
+	0x1998, 0x12801110,
+	0x1998, 0x12801111,
+	0x1998, 0x12801112,
+	0x1998, 0x12801113,
+	0x1998, 0x12801114,
+	0x1998, 0x12801115,
+	0x1998, 0x12801116,
+	0x1998, 0x12801117,
+	0x1998, 0x12801118,
+	0x1998, 0x12801119,
+	0x1998, 0x1280111A,
+	0x1998, 0x1280111B,
+	0x1998, 0x1280111C,
+	0x1998, 0x1280111D,
+	0x1998, 0x1280111E,
+	0x1998, 0x1280111F,
+	0x1998, 0x12801120,
+	0x1998, 0x12801121,
+	0x1998, 0x12801122,
+	0x1998, 0x12801123,
+	0x1998, 0x1280112C,
+	0x1998, 0x1280112D,
+	0x1998, 0x1280112E,
+	0x1998, 0x1280112F,
+	0x1998, 0x12801130,
+	0x1998, 0x12801131,
+	0x1998, 0x12801132,
+	0x1998, 0x12801133,
+	0x1998, 0x12801134,
+	0x1998, 0x12801135,
+	0x1998, 0x12801136,
+	0x1998, 0x12801137,
+	0x1998, 0x12801138,
+	0x1998, 0x12801139,
+	0x1998, 0x1280113A,
+	0x1998, 0x1280113B,
+	0x1998, 0x1280113C,
+	0x1998, 0x1280113D,
+	0x1998, 0x1280113E,
+	0x1998, 0x1280113F,
+	0x1998, 0x12801140,
+	0x1998, 0x12801141,
+	0x1998, 0x12801142,
+	0x1998, 0x12801143,
+	0x1998, 0x12801144,
+	0x1998, 0x12801145,
+	0x1998, 0x12801146,
+	0x1998, 0x12801147,
+	0x1998, 0x12801148,
+	0x1998, 0x12801149,
+	0x1998, 0x12801200,
+	0x1998, 0x12801201,
+	0x1998, 0x12801202,
+	0x1998, 0x12801203,
+	0x1998, 0x12801204,
+	0x1998, 0x12801205,
+	0x1998, 0x12801206,
+	0x1998, 0x12801207,
+	0x1998, 0x12801208,
+	0x1998, 0x12801209,
+	0x1998, 0x1280120A,
+	0x1998, 0x1280120B,
+	0x1998, 0x1280120C,
+	0x1998, 0x1280120D,
+	0x1998, 0x1280120E,
+	0x1998, 0x1280120F,
+	0x1998, 0x12801210,
+	0x1998, 0x12801211,
+	0x1998, 0x12801212,
+	0x1998, 0x12801213,
+	0x1998, 0x12801214,
+	0x1998, 0x12801215,
+	0x1998, 0x12801216,
+	0x1998, 0x12801217,
+	0x1998, 0x12801218,
+	0x1998, 0x12801219,
+	0x1998, 0x1280121A,
+	0x1998, 0x1280121B,
+	0x1998, 0x1280121C,
+	0x1998, 0x1280121D,
+	0x1998, 0x1280121E,
+	0x1998, 0x1280121F,
+	0x1998, 0x12801220,
+	0x1998, 0x12801221,
+	0x1998, 0x12801222,
+	0x1998, 0x12801223,
+	0x1998, 0x1280122C,
+	0x1998, 0x1280122D,
+	0x1998, 0x1280122E,
+	0x1998, 0x1280122F,
+	0x1998, 0x12801230,
+	0x1998, 0x12801231,
+	0x1998, 0x12801232,
+	0x1998, 0x12801233,
+	0x1998, 0x12801234,
+	0x1998, 0x12801235,
+	0x1998, 0x12801236,
+	0x1998, 0x12801237,
+	0x1998, 0x12801238,
+	0x1998, 0x12801239,
+	0x1998, 0x1280123A,
+	0x1998, 0x1280123B,
+	0x1998, 0x1280123C,
+	0x1998, 0x1280123D,
+	0x1998, 0x1280123E,
+	0x1998, 0x1280123F,
+	0x1998, 0x12801240,
+	0x1998, 0x12801241,
+	0x1998, 0x12801242,
+	0x1998, 0x12801243,
+	0x1998, 0x12801244,
+	0x1998, 0x12801245,
+	0x1998, 0x12801246,
+	0x1998, 0x12801247,
+	0x1998, 0x12801248,
+	0x1998, 0x12801249,
+	0x1998, 0x12801300,
+	0x1998, 0x12801301,
+	0x1998, 0x12801302,
+	0x1998, 0x12801303,
+	0x1998, 0x12801304,
+	0x1998, 0x12801305,
+	0x1998, 0x12801306,
+	0x1998, 0x12801307,
+	0x1998, 0x12801308,
+	0x1998, 0x12801309,
+	0x1998, 0x1280130A,
+	0x1998, 0x1280130B,
+	0x1998, 0x1280130C,
+	0x1998, 0x1280130D,
+	0x1998, 0x1280130E,
+	0x1998, 0x1280130F,
+	0x1998, 0x12801310,
+	0x1998, 0x12801311,
+	0x1998, 0x12801312,
+	0x1998, 0x12801313,
+	0x1998, 0x12801314,
+	0x1998, 0x12801315,
+	0x1998, 0x12801316,
+	0x1998, 0x12801317,
+	0x1998, 0x12801318,
+	0x1998, 0x12801319,
+	0x1998, 0x1280131A,
+	0x1998, 0x1280131B,
+	0x1998, 0x1280131C,
+	0x1998, 0x1280131D,
+	0x1998, 0x1280131E,
+	0x1998, 0x1280131F,
+	0x1998, 0x12801320,
+	0x1998, 0x12801321,
+	0x1998, 0x12801322,
+	0x1998, 0x12801323,
+	0x1998, 0x1280132C,
+	0x1998, 0x1280132D,
+	0x1998, 0x1280132E,
+	0x1998, 0x1280132F,
+	0x1998, 0x12801330,
+	0x1998, 0x12801331,
+	0x1998, 0x12801332,
+	0x1998, 0x12801333,
+	0x1998, 0x12801334,
+	0x1998, 0x12801335,
+	0x1998, 0x12801336,
+	0x1998, 0x12801337,
+	0x1998, 0x12801338,
+	0x1998, 0x12801339,
+	0x1998, 0x1280133A,
+	0x1998, 0x1280133B,
+	0x1998, 0x1280133C,
+	0x1998, 0x1280133D,
+	0x1998, 0x1280133E,
+	0x1998, 0x1280133F,
+	0x1998, 0x12801340,
+	0x1998, 0x12801341,
+	0x1998, 0x12801342,
+	0x1998, 0x12801343,
+	0x1998, 0x12801344,
+	0x1998, 0x12801345,
+	0x1998, 0x12801346,
+	0x1998, 0x12801347,
+	0x1998, 0x12801348,
+	0x1998, 0x12801349,
+	0x19D4, 0x88888888,
+	0x19D8, 0x00000888,
+	0xB00, 0xE3100100,
+	0xB00, 0xE7100100,
+	0xC60, 0x15808002,
+	0xC60, 0x01808003,
+	0xE60, 0x15808002,
+	0xE60, 0x01808003,
+	0x1860, 0x15808002,
+	0x1860, 0x01808003,
+	0x1A60, 0x15808002,
+	0x1A60, 0x01808003,
+	0xB00, 0xE3100100,
+	0xC5C, 0x0D080058,
+	0xE5C, 0x0D080058,
+	0x185C, 0x0D080058,
+	0x1A5C, 0x0D080058,
+	0xC5C, 0x0D000058,
+	0xE5C, 0x0D000058,
+	0x185C, 0x0D000058,
+	0x1A5C, 0x0D000058,
+	0xC60, 0x05808002,
+	0xC60, 0x0E808003,
+	0xE60, 0x05808002,
+	0xE60, 0x0E808003,
+	0x1860, 0x05808002,
+	0x1860, 0x0E808003,
+	0x1A60, 0x05808002,
+	0x1A60, 0x0E808003,
+	0xB00, 0xE7100100,
+	0xB00, 0xE3100100,
+	0xB00, 0xE3100000,
+	0x1C38, 0x00000002,
+	0xA00, 0x00D047C8,
+	0xA04, 0x46FF800C,
+	0xA08, 0x8C838300,
+	0xA0C, 0x2E7E000F,
+	0xA10, 0x9500BB78,
+	0xA14, 0x11144028,
+	0xA18, 0x00881117,
+	0xA1C, 0x89140F00,
+	0xA20, 0x1A1B0030,
+	0xA24, 0x090E1317,
+	0xA28, 0x00000204,
+	0xA2C, 0x00900000,
+	0xA70, 0x101FFF00,
+	0xA74, 0x00000128,
+	0xA78, 0x00000900,
+	0xA7C, 0x225B0606,
+	0xA80, 0x218075B2,
+	0xA84, 0x9C1F8C00,
+	0x1B04, 0xE24628D2,
+	0x1B10, 0x88010D46,
+	0x1B14, 0x00000000,
+	0x1B18, 0x00292903,
+	0x1B00, 0xF8000000,
+	0x1B00, 0xF800D000,
+	0x1B00, 0xF801F000,
+	0x1B1C, 0xA2123DB2,
+	0x1B20, 0x07040001,
+	0x1B24, 0x07060807,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0xA0000000,	0x00000000,
+	0x1B28, 0xC0060348,
+	0xB0000000,	0x00000000,
+	0x1B2C, 0x20000003,
+	0x1B30, 0x20000000,
+	0x1B38, 0x20000000,
+	0x1B3C, 0x20000000,
+	0x1BD4, 0x00000001,
+	0x1B94, 0x80000000,
+	0x1B34, 0x00000000,
+	0x1B34, 0x00000002,
+	0x1B34, 0x00000000,
+	0x1B00, 0xF8000002,
+	0x1B00, 0xF800D002,
+	0x1B00, 0xF801F002,
+	0x1B1C, 0xA2123DB2,
+	0x1B20, 0x07040001,
+	0x1B24, 0x07060807,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0xA0000000,	0x00000000,
+	0x1B28, 0xC0060348,
+	0xB0000000,	0x00000000,
+	0x1B2C, 0x20000003,
+	0x1B30, 0x20000000,
+	0x1B38, 0x20000000,
+	0x1B3C, 0x20000000,
+	0x1BD4, 0x00000001,
+	0x1B94, 0x80000000,
+	0x1B34, 0x00000000,
+	0x1B34, 0x00000002,
+	0x1B34, 0x00000000,
+	0x1B00, 0xF8000004,
+	0x1B00, 0xF800D004,
+	0x1B00, 0xF801F004,
+	0x1B1C, 0xA2123DB2,
+	0x1B20, 0x07040001,
+	0x1B24, 0x07060807,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0xA0000000,	0x00000000,
+	0x1B28, 0xC0060348,
+	0xB0000000,	0x00000000,
+	0x1B2C, 0x20000003,
+	0x1B30, 0x20000000,
+	0x1B38, 0x20000000,
+	0x1B3C, 0x20000000,
+	0x1BD4, 0x00000001,
+	0x1B94, 0x80000000,
+	0x1B34, 0x00000000,
+	0x1B34, 0x00000002,
+	0x1B34, 0x00000000,
+	0x1B00, 0xF8000006,
+	0x1B00, 0xF800D006,
+	0x1B00, 0xF801F006,
+	0x1B1C, 0xA2123DB2,
+	0x1B20, 0x07040001,
+	0x1B24, 0x07060807,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B28, 0xC0060324,
+	0xA0000000,	0x00000000,
+	0x1B28, 0xC0060348,
+	0xB0000000,	0x00000000,
+	0x1B2C, 0x20000003,
+	0x1B30, 0x20000000,
+	0x1B38, 0x20000000,
+	0x1B3C, 0x20000000,
+	0x1BD4, 0x00000001,
+	0x1B94, 0x80000000,
+	0x1B34, 0x00000000,
+	0x1B34, 0x00000002,
+	0x1B34, 0x00000000,
+	0x1B00, 0xF8000000,
+	0x1B80, 0x00000007,
+	0x1B80, 0x09060005,
+	0x1B80, 0x09060007,
+	0x1B80, 0x0FFE0015,
+	0x1B80, 0x0FFE0017,
+	0x1B80, 0x00240025,
+	0x1B80, 0x00240027,
+	0x1B80, 0x00040035,
+	0x1B80, 0x00040037,
+	0x1B80, 0x05C00045,
+	0x1B80, 0x05C00047,
+	0x1B80, 0x00070055,
+	0x1B80, 0x00070057,
+	0x1B80, 0x64000065,
+	0x1B80, 0x64000067,
+	0x1B80, 0x00020075,
+	0x1B80, 0x00020077,
+	0x1B80, 0x00080085,
+	0x1B80, 0x00080087,
+	0x1B80, 0x80000095,
+	0x1B80, 0x80000097,
+	0x1B80, 0x090100A5,
+	0x1B80, 0x090100A7,
+	0x1B80, 0x0F0200B5,
+	0x1B80, 0x0F0200B7,
+	0x1B80, 0x002400C5,
+	0x1B80, 0x002400C7,
+	0x1B80, 0x000400D5,
+	0x1B80, 0x000400D7,
+	0x1B80, 0x05C000E5,
+	0x1B80, 0x05C000E7,
+	0x1B80, 0x000700F5,
+	0x1B80, 0x000700F7,
+	0x1B80, 0x64020105,
+	0x1B80, 0x64020107,
+	0x1B80, 0x00020115,
+	0x1B80, 0x00020117,
+	0x1B80, 0x00040125,
+	0x1B80, 0x00040127,
+	0x1B80, 0x4A000135,
+	0x1B80, 0x4A000137,
+	0x1B80, 0x4B040145,
+	0x1B80, 0x4B040147,
+	0x1B80, 0x85030155,
+	0x1B80, 0x85030157,
+	0x1B80, 0x40010165,
+	0x1B80, 0x40010167,
+	0x1B80, 0xE0290175,
+	0x1B80, 0xE0290177,
+	0x1B80, 0x00040185,
+	0x1B80, 0x00040187,
+	0x1B80, 0x4B050195,
+	0x1B80, 0x4B050197,
+	0x1B80, 0x860301A5,
+	0x1B80, 0x860301A7,
+	0x1B80, 0x400301B5,
+	0x1B80, 0x400301B7,
+	0x1B80, 0xE02901C5,
+	0x1B80, 0xE02901C7,
+	0x1B80, 0x000401D5,
+	0x1B80, 0x000401D7,
+	0x1B80, 0x4B0601E5,
+	0x1B80, 0x4B0601E7,
+	0x1B80, 0x870301F5,
+	0x1B80, 0x870301F7,
+	0x1B80, 0x40050205,
+	0x1B80, 0x40050207,
+	0x1B80, 0xE0290215,
+	0x1B80, 0xE0290217,
+	0x1B80, 0x00040225,
+	0x1B80, 0x00040227,
+	0x1B80, 0x4B070235,
+	0x1B80, 0x4B070237,
+	0x1B80, 0x88030245,
+	0x1B80, 0x88030247,
+	0x1B80, 0x40070255,
+	0x1B80, 0x40070257,
+	0x1B80, 0xE0290265,
+	0x1B80, 0xE0290267,
+	0x1B80, 0x4B000275,
+	0x1B80, 0x4B000277,
+	0x1B80, 0x30000285,
+	0x1B80, 0x30000287,
+	0x1B80, 0xFE100295,
+	0x1B80, 0xFE100297,
+	0x1B80, 0xFF1002A5,
+	0x1B80, 0xFF1002A7,
+	0x1B80, 0xE18602B5,
+	0x1B80, 0xE18602B7,
+	0x1B80, 0xF00A02C5,
+	0x1B80, 0xF00A02C7,
+	0x1B80, 0xF10A02D5,
+	0x1B80, 0xF10A02D7,
+	0x1B80, 0xF20A02E5,
+	0x1B80, 0xF20A02E7,
+	0x1B80, 0xF30802F5,
+	0x1B80, 0xF30802F7,
+	0x1B80, 0xF4070305,
+	0x1B80, 0xF4070307,
+	0x1B80, 0xF5060315,
+	0x1B80, 0xF5060317,
+	0x1B80, 0xF7060325,
+	0x1B80, 0xF7060327,
+	0x1B80, 0xF8050335,
+	0x1B80, 0xF8050337,
+	0x1B80, 0xF9040345,
+	0x1B80, 0xF9040347,
+	0x1B80, 0x00010355,
+	0x1B80, 0x00010357,
+	0x1B80, 0x303B0365,
+	0x1B80, 0x303B0367,
+	0x1B80, 0x30500375,
+	0x1B80, 0x30500377,
+	0x1B80, 0x305C0385,
+	0x1B80, 0x305C0387,
+	0x1B80, 0x31D50395,
+	0x1B80, 0x31D50397,
+	0x1B80, 0x31C503A5,
+	0x1B80, 0x31C503A7,
+	0x1B80, 0x4D0403B5,
+	0x1B80, 0x4D0403B7,
+	0x1B80, 0x2EF003C5,
+	0x1B80, 0x2EF003C7,
+	0x1B80, 0x000203D5,
+	0x1B80, 0x000203D7,
+	0x1B80, 0x208003E5,
+	0x1B80, 0x208003E7,
+	0x1B80, 0x000003F5,
+	0x1B80, 0x000003F7,
+	0x1B80, 0x4D000405,
+	0x1B80, 0x4D000407,
+	0x1B80, 0x55070415,
+	0x1B80, 0x55070417,
+	0x1B80, 0xE1230425,
+	0x1B80, 0xE1230427,
+	0x1B80, 0xE1230435,
+	0x1B80, 0xE1230437,
+	0x1B80, 0x4D040445,
+	0x1B80, 0x4D040447,
+	0x1B80, 0x20800455,
+	0x1B80, 0x20800457,
+	0x1B80, 0x84000465,
+	0x1B80, 0x84000467,
+	0x1B80, 0x4D000475,
+	0x1B80, 0x4D000477,
+	0x1B80, 0x550F0485,
+	0x1B80, 0x550F0487,
+	0x1B80, 0xE1230495,
+	0x1B80, 0xE1230497,
+	0x1B80, 0x4F0204A5,
+	0x1B80, 0x4F0204A7,
+	0x1B80, 0x4E0004B5,
+	0x1B80, 0x4E0004B7,
+	0x1B80, 0x530204C5,
+	0x1B80, 0x530204C7,
+	0x1B80, 0x520104D5,
+	0x1B80, 0x520104D7,
+	0x1B80, 0xE12704E5,
+	0x1B80, 0xE12704E7,
+	0x1B80, 0x000104F5,
+	0x1B80, 0x000104F7,
+	0x1B80, 0x5C720505,
+	0x1B80, 0x5C720507,
+	0x1B80, 0xE1320515,
+	0x1B80, 0xE1320517,
+	0x1B80, 0x54E50525,
+	0x1B80, 0x54E50527,
+	0x1B80, 0x54BF0535,
+	0x1B80, 0x54BF0537,
+	0x1B80, 0x54C50545,
+	0x1B80, 0x54C50547,
+	0x1B80, 0x54BE0555,
+	0x1B80, 0x54BE0557,
+	0x1B80, 0x54DF0565,
+	0x1B80, 0x54DF0567,
+	0x1B80, 0x0BA60575,
+	0x1B80, 0x0BA60577,
+	0x1B80, 0xF3130585,
+	0x1B80, 0xF3130587,
+	0x1B80, 0xF41E0595,
+	0x1B80, 0xF41E0597,
+	0x1B80, 0xF53C05A5,
+	0x1B80, 0xF53C05A7,
+	0x1B80, 0x000105B5,
+	0x1B80, 0x000105B7,
+	0x1B80, 0x620605C5,
+	0x1B80, 0x620605C7,
+	0x1B80, 0x600605D5,
+	0x1B80, 0x600605D7,
+	0x1B80, 0xE1A905E5,
+	0x1B80, 0xE1A905E7,
+	0x1B80, 0x0C0005F5,
+	0x1B80, 0x0C0005F7,
+	0x1B80, 0x5C720605,
+	0x1B80, 0x5C720607,
+	0x1B80, 0xE1320615,
+	0x1B80, 0xE1320617,
+	0x1B80, 0x5CF10625,
+	0x1B80, 0x5CF10627,
+	0x1B80, 0x0C010635,
+	0x1B80, 0x0C010637,
+	0x1B80, 0xF2020645,
+	0x1B80, 0xF2020647,
+	0x1B80, 0x30D60655,
+	0x1B80, 0x30D60657,
+	0x1B80, 0x0AC60665,
+	0x1B80, 0x0AC60667,
+	0x1B80, 0xE1B60675,
+	0x1B80, 0xE1B60677,
+	0x1B80, 0xE1580685,
+	0x1B80, 0xE1580687,
+	0x1B80, 0x54E50695,
+	0x1B80, 0x54E50697,
+	0x1B80, 0x000106A5,
+	0x1B80, 0x000106A7,
+	0x1B80, 0x560106B5,
+	0x1B80, 0x560106B7,
+	0x1B80, 0x5CE206C5,
+	0x1B80, 0x5CE206C7,
+	0x1B80, 0x0AE106D5,
+	0x1B80, 0x0AE106D7,
+	0x1B80, 0x630C06E5,
+	0x1B80, 0x630C06E7,
+	0x1B80, 0xE13F06F5,
+	0x1B80, 0xE13F06F7,
+	0x1B80, 0x00270705,
+	0x1B80, 0x00270707,
+	0x1B80, 0xE16C0715,
+	0x1B80, 0xE16C0717,
+	0x1B80, 0x00020725,
+	0x1B80, 0x00020727,
+	0x1B80, 0x002A0735,
+	0x1B80, 0x002A0737,
+	0x1B80, 0x07140745,
+	0x1B80, 0x07140747,
+	0x1B80, 0x00020755,
+	0x1B80, 0x00020757,
+	0x1B80, 0x30C30765,
+	0x1B80, 0x30C30767,
+	0x1B80, 0x56010775,
+	0x1B80, 0x56010777,
+	0x1B80, 0x5CE20785,
+	0x1B80, 0x5CE20787,
+	0x1B80, 0x0AE10795,
+	0x1B80, 0x0AE10797,
+	0x1B80, 0x631707A5,
+	0x1B80, 0x631707A7,
+	0x1B80, 0xE13F07B5,
+	0x1B80, 0xE13F07B7,
+	0x1B80, 0x002507C5,
+	0x1B80, 0x002507C7,
+	0x1B80, 0xE16C07D5,
+	0x1B80, 0xE16C07D7,
+	0x1B80, 0x000207E5,
+	0x1B80, 0x000207E7,
+	0x1B80, 0x630F07F5,
+	0x1B80, 0x630F07F7,
+	0x1B80, 0xE13F0805,
+	0x1B80, 0xE13F0807,
+	0x1B80, 0x63070815,
+	0x1B80, 0x63070817,
+	0x1B80, 0xE13F0825,
+	0x1B80, 0xE13F0827,
+	0x1B80, 0x07140835,
+	0x1B80, 0x07140837,
+	0x1B80, 0x56000845,
+	0x1B80, 0x56000847,
+	0x1B80, 0x5CF20855,
+	0x1B80, 0x5CF20857,
+	0x1B80, 0x0AF10865,
+	0x1B80, 0x0AF10867,
+	0x1B80, 0x07140875,
+	0x1B80, 0x07140877,
+	0x1B80, 0x07140885,
+	0x1B80, 0x07140887,
+	0x1B80, 0x630F0895,
+	0x1B80, 0x630F0897,
+	0x1B80, 0xE13F08A5,
+	0x1B80, 0xE13F08A7,
+	0x1B80, 0x631708B5,
+	0x1B80, 0x631708B7,
+	0x1B80, 0xE13F08C5,
+	0x1B80, 0xE13F08C7,
+	0x1B80, 0x002508D5,
+	0x1B80, 0x002508D7,
+	0x1B80, 0xE16C08E5,
+	0x1B80, 0xE16C08E7,
+	0x1B80, 0x000208F5,
+	0x1B80, 0x000208F7,
+	0x1B80, 0x30C30905,
+	0x1B80, 0x30C30907,
+	0x1B80, 0xE1A90915,
+	0x1B80, 0xE1A90917,
+	0x1B80, 0x62060925,
+	0x1B80, 0x62060927,
+	0x1B80, 0x60060935,
+	0x1B80, 0x60060937,
+	0x1B80, 0xE1160945,
+	0x1B80, 0xE1160947,
+	0x1B80, 0x54BE0955,
+	0x1B80, 0x54BE0957,
+	0x1B80, 0x56010965,
+	0x1B80, 0x56010967,
+	0x1B80, 0x5CE20975,
+	0x1B80, 0x5CE20977,
+	0x1B80, 0x0AE10985,
+	0x1B80, 0x0AE10987,
+	0x1B80, 0x633A0995,
+	0x1B80, 0x633A0997,
+	0x1B80, 0xE13F09A5,
+	0x1B80, 0xE13F09A7,
+	0x1B80, 0x633709B5,
+	0x1B80, 0x633709B7,
+	0x1B80, 0xE13F09C5,
+	0x1B80, 0xE13F09C7,
+	0x1B80, 0x632F09D5,
+	0x1B80, 0x632F09D7,
+	0x1B80, 0xE13F09E5,
+	0x1B80, 0xE13F09E7,
+	0x1B80, 0x632709F5,
+	0x1B80, 0x632709F7,
+	0x1B80, 0xE13F0A05,
+	0x1B80, 0xE13F0A07,
+	0x1B80, 0x631F0A15,
+	0x1B80, 0x631F0A17,
+	0x1B80, 0xE13F0A25,
+	0x1B80, 0xE13F0A27,
+	0x1B80, 0x63170A35,
+	0x1B80, 0x63170A37,
+	0x1B80, 0xE13F0A45,
+	0x1B80, 0xE13F0A47,
+	0x1B80, 0x630F0A55,
+	0x1B80, 0x630F0A57,
+	0x1B80, 0xE13F0A65,
+	0x1B80, 0xE13F0A67,
+	0x1B80, 0x63070A75,
+	0x1B80, 0x63070A77,
+	0x1B80, 0xE13F0A85,
+	0x1B80, 0xE13F0A87,
+	0x1B80, 0xE16C0A95,
+	0x1B80, 0xE16C0A97,
+	0x1B80, 0x56000AA5,
+	0x1B80, 0x56000AA7,
+	0x1B80, 0x5CF20AB5,
+	0x1B80, 0x5CF20AB7,
+	0x1B80, 0x0AF10AC5,
+	0x1B80, 0x0AF10AC7,
+	0x1B80, 0xF5040AD5,
+	0x1B80, 0xF5040AD7,
+	0x1B80, 0xE13F0AE5,
+	0x1B80, 0xE13F0AE7,
+	0x1B80, 0xE16C0AF5,
+	0x1B80, 0xE16C0AF7,
+	0x1B80, 0x30B30B05,
+	0x1B80, 0x30B30B07,
+	0x1B80, 0x07140B15,
+	0x1B80, 0x07140B17,
+	0x1B80, 0x07140B25,
+	0x1B80, 0x07140B27,
+	0x1B80, 0x630F0B35,
+	0x1B80, 0x630F0B37,
+	0x1B80, 0xE13F0B45,
+	0x1B80, 0xE13F0B47,
+	0x1B80, 0x63170B55,
+	0x1B80, 0x63170B57,
+	0x1B80, 0xE13F0B65,
+	0x1B80, 0xE13F0B67,
+	0x1B80, 0x631F0B75,
+	0x1B80, 0x631F0B77,
+	0x1B80, 0xE13F0B85,
+	0x1B80, 0xE13F0B87,
+	0x1B80, 0x63270B95,
+	0x1B80, 0x63270B97,
+	0x1B80, 0xE13F0BA5,
+	0x1B80, 0xE13F0BA7,
+	0x1B80, 0x632F0BB5,
+	0x1B80, 0x632F0BB7,
+	0x1B80, 0xE13F0BC5,
+	0x1B80, 0xE13F0BC7,
+	0x1B80, 0x63370BD5,
+	0x1B80, 0x63370BD7,
+	0x1B80, 0xE13F0BE5,
+	0x1B80, 0xE13F0BE7,
+	0x1B80, 0x633A0BF5,
+	0x1B80, 0x633A0BF7,
+	0x1B80, 0xE13F0C05,
+	0x1B80, 0xE13F0C07,
+	0x1B80, 0xF60B0C15,
+	0x1B80, 0xF60B0C17,
+	0x1B80, 0xF7170C25,
+	0x1B80, 0xF7170C27,
+	0x1B80, 0x4D300C35,
+	0x1B80, 0x4D300C37,
+	0x1B80, 0x57040C45,
+	0x1B80, 0x57040C47,
+	0x1B80, 0x57000C55,
+	0x1B80, 0x57000C57,
+	0x1B80, 0x96000C65,
+	0x1B80, 0x96000C67,
+	0x1B80, 0x57080C75,
+	0x1B80, 0x57080C77,
+	0x1B80, 0x57000C85,
+	0x1B80, 0x57000C87,
+	0x1B80, 0x95000C95,
+	0x1B80, 0x95000C97,
+	0x1B80, 0x4D000CA5,
+	0x1B80, 0x4D000CA7,
+	0x1B80, 0x6C070CB5,
+	0x1B80, 0x6C070CB7,
+	0x1B80, 0x00010CC5,
+	0x1B80, 0x00010CC7,
+	0x1B80, 0x00220CD5,
+	0x1B80, 0x00220CD7,
+	0x1B80, 0x06140CE5,
+	0x1B80, 0x06140CE7,
+	0x1B80, 0xE16C0CF5,
+	0x1B80, 0xE16C0CF7,
+	0x1B80, 0x00020D05,
+	0x1B80, 0x00020D07,
+	0x1B80, 0x00250D15,
+	0x1B80, 0x00250D17,
+	0x1B80, 0x06140D25,
+	0x1B80, 0x06140D27,
+	0x1B80, 0xE16C0D35,
+	0x1B80, 0xE16C0D37,
+	0x1B80, 0x00020D45,
+	0x1B80, 0x00020D47,
+	0x1B80, 0x00010D55,
+	0x1B80, 0x00010D57,
+	0x1B80, 0x00320D65,
+	0x1B80, 0x00320D67,
+	0x1B80, 0xE16C0D75,
+	0x1B80, 0xE16C0D77,
+	0x1B80, 0x00020D85,
+	0x1B80, 0x00020D87,
+	0x1B80, 0xE1860D95,
+	0x1B80, 0xE1860D97,
+	0x1B80, 0xE1B60DA5,
+	0x1B80, 0xE1B60DA7,
+	0x1B80, 0x5CD10DB5,
+	0x1B80, 0x5CD10DB7,
+	0x1B80, 0x673A0DC5,
+	0x1B80, 0x673A0DC7,
+	0x1B80, 0xE1230DD5,
+	0x1B80, 0xE1230DD7,
+	0x1B80, 0xF80B0DE5,
+	0x1B80, 0xF80B0DE7,
+	0x1B80, 0xF9110DF5,
+	0x1B80, 0xF9110DF7,
+	0x1B80, 0xE1580E05,
+	0x1B80, 0xE1580E07,
+	0x1B80, 0x67370E15,
+	0x1B80, 0x67370E17,
+	0x1B80, 0xE1580E25,
+	0x1B80, 0xE1580E27,
+	0x1B80, 0x672F0E35,
+	0x1B80, 0x672F0E37,
+	0x1B80, 0xE1580E45,
+	0x1B80, 0xE1580E47,
+	0x1B80, 0x67270E55,
+	0x1B80, 0x67270E57,
+	0x1B80, 0xE1580E65,
+	0x1B80, 0xE1580E67,
+	0x1B80, 0x671F0E75,
+	0x1B80, 0x671F0E77,
+	0x1B80, 0xE1580E85,
+	0x1B80, 0xE1580E87,
+	0x1B80, 0x67170E95,
+	0x1B80, 0x67170E97,
+	0x1B80, 0xE1580EA5,
+	0x1B80, 0xE1580EA7,
+	0x1B80, 0xF8020EB5,
+	0x1B80, 0xF8020EB7,
+	0x1B80, 0x30EE0EC5,
+	0x1B80, 0x30EE0EC7,
+	0x1B80, 0xE0D10ED5,
+	0x1B80, 0xE0D10ED7,
+	0x1B80, 0x670F0EE5,
+	0x1B80, 0x670F0EE7,
+	0x1B80, 0xE1580EF5,
+	0x1B80, 0xE1580EF7,
+	0x1B80, 0x67070F05,
+	0x1B80, 0x67070F07,
+	0x1B80, 0xE1580F15,
+	0x1B80, 0xE1580F17,
+	0x1B80, 0xF9020F25,
+	0x1B80, 0xF9020F27,
+	0x1B80, 0x30F50F35,
+	0x1B80, 0x30F50F37,
+	0x1B80, 0xE0CD0F45,
+	0x1B80, 0xE0CD0F47,
+	0x1B80, 0x06140F55,
+	0x1B80, 0x06140F57,
+	0x1B80, 0xE16C0F65,
+	0x1B80, 0xE16C0F67,
+	0x1B80, 0x5CF10F75,
+	0x1B80, 0x5CF10F77,
+	0x1B80, 0xE1580F85,
+	0x1B80, 0xE1580F87,
+	0x1B80, 0x06140F95,
+	0x1B80, 0x06140F97,
+	0x1B80, 0xE16C0FA5,
+	0x1B80, 0xE16C0FA7,
+	0x1B80, 0xF9020FB5,
+	0x1B80, 0xF9020FB7,
+	0x1B80, 0x30FF0FC5,
+	0x1B80, 0x30FF0FC7,
+	0x1B80, 0xE0CD0FD5,
+	0x1B80, 0xE0CD0FD7,
+	0x1B80, 0x31130FE5,
+	0x1B80, 0x31130FE7,
+	0x1B80, 0x670F0FF5,
+	0x1B80, 0x670F0FF7,
+	0x1B80, 0xE1581005,
+	0x1B80, 0xE1581007,
+	0x1B80, 0x67171015,
+	0x1B80, 0x67171017,
+	0x1B80, 0xE1581025,
+	0x1B80, 0xE1581027,
+	0x1B80, 0xF8021035,
+	0x1B80, 0xF8021037,
+	0x1B80, 0x31071045,
+	0x1B80, 0x31071047,
+	0x1B80, 0xE0D11055,
+	0x1B80, 0xE0D11057,
+	0x1B80, 0x31131065,
+	0x1B80, 0x31131067,
+	0x1B80, 0x670F1075,
+	0x1B80, 0x670F1077,
+	0x1B80, 0xE1581085,
+	0x1B80, 0xE1581087,
+	0x1B80, 0x671F1095,
+	0x1B80, 0x671F1097,
+	0x1B80, 0xE15810A5,
+	0x1B80, 0xE15810A7,
+	0x1B80, 0x672710B5,
+	0x1B80, 0x672710B7,
+	0x1B80, 0xE15810C5,
+	0x1B80, 0xE15810C7,
+	0x1B80, 0x672F10D5,
+	0x1B80, 0x672F10D7,
+	0x1B80, 0xE15810E5,
+	0x1B80, 0xE15810E7,
+	0x1B80, 0x673710F5,
+	0x1B80, 0x673710F7,
+	0x1B80, 0xE1581105,
+	0x1B80, 0xE1581107,
+	0x1B80, 0x673A1115,
+	0x1B80, 0x673A1117,
+	0x1B80, 0xE1581125,
+	0x1B80, 0xE1581127,
+	0x1B80, 0x4D101135,
+	0x1B80, 0x4D101137,
+	0x1B80, 0x30C41145,
+	0x1B80, 0x30C41147,
+	0x1B80, 0x00011155,
+	0x1B80, 0x00011157,
+	0x1B80, 0x6F241165,
+	0x1B80, 0x6F241167,
+	0x1B80, 0x6E401175,
+	0x1B80, 0x6E401177,
+	0x1B80, 0x6D001185,
+	0x1B80, 0x6D001187,
+	0x1B80, 0x55031195,
+	0x1B80, 0x55031197,
+	0x1B80, 0x312311A5,
+	0x1B80, 0x312311A7,
+	0x1B80, 0x6F1C11B5,
+	0x1B80, 0x6F1C11B7,
+	0x1B80, 0x6E4011C5,
+	0x1B80, 0x6E4011C7,
+	0x1B80, 0x550B11D5,
+	0x1B80, 0x550B11D7,
+	0x1B80, 0x312311E5,
+	0x1B80, 0x312311E7,
+	0x1B80, 0x061C11F5,
+	0x1B80, 0x061C11F7,
+	0x1B80, 0x54DE1205,
+	0x1B80, 0x54DE1207,
+	0x1B80, 0x06DC1215,
+	0x1B80, 0x06DC1217,
+	0x1B80, 0x55131225,
+	0x1B80, 0x55131227,
+	0x1B80, 0x74011235,
+	0x1B80, 0x74011237,
+	0x1B80, 0x74001245,
+	0x1B80, 0x74001247,
+	0x1B80, 0x8E001255,
+	0x1B80, 0x8E001257,
+	0x1B80, 0x00011265,
+	0x1B80, 0x00011267,
+	0x1B80, 0x57021275,
+	0x1B80, 0x57021277,
+	0x1B80, 0x57001285,
+	0x1B80, 0x57001287,
+	0x1B80, 0x97001295,
+	0x1B80, 0x97001297,
+	0x1B80, 0x000112A5,
+	0x1B80, 0x000112A7,
+	0x1B80, 0x54BF12B5,
+	0x1B80, 0x54BF12B7,
+	0x1B80, 0x54C112C5,
+	0x1B80, 0x54C112C7,
+	0x1B80, 0x54A212D5,
+	0x1B80, 0x54A212D7,
+	0x1B80, 0x54C012E5,
+	0x1B80, 0x54C012E7,
+	0x1B80, 0x54A112F5,
+	0x1B80, 0x54A112F7,
+	0x1B80, 0x54DF1305,
+	0x1B80, 0x54DF1307,
+	0x1B80, 0x00011315,
+	0x1B80, 0x00011317,
+	0x1B80, 0x55001325,
+	0x1B80, 0x55001327,
+	0x1B80, 0xE1231335,
+	0x1B80, 0xE1231337,
+	0x1B80, 0x54811345,
+	0x1B80, 0x54811347,
+	0x1B80, 0xE1231355,
+	0x1B80, 0xE1231357,
+	0x1B80, 0x54801365,
+	0x1B80, 0x54801367,
+	0x1B80, 0x002A1375,
+	0x1B80, 0x002A1377,
+	0x1B80, 0xE12B1385,
+	0x1B80, 0xE12B1387,
+	0x1B80, 0xE1231395,
+	0x1B80, 0xE1231397,
+	0x1B80, 0x548013A5,
+	0x1B80, 0x548013A7,
+	0x1B80, 0xE17213B5,
+	0x1B80, 0xE17213B7,
+	0x1B80, 0xBF3013C5,
+	0x1B80, 0xBF3013C7,
+	0x1B80, 0x000213D5,
+	0x1B80, 0x000213D7,
+	0x1B80, 0x302813E5,
+	0x1B80, 0x302813E7,
+	0x1B80, 0x4F7813F5,
+	0x1B80, 0x4F7813F7,
+	0x1B80, 0x4E001405,
+	0x1B80, 0x4E001407,
+	0x1B80, 0x53871415,
+	0x1B80, 0x53871417,
+	0x1B80, 0x52F11425,
+	0x1B80, 0x52F11427,
+	0x1B80, 0xE1161435,
+	0x1B80, 0xE1161437,
+	0x1B80, 0xE11B1445,
+	0x1B80, 0xE11B1447,
+	0x1B80, 0xE11F1455,
+	0x1B80, 0xE11F1457,
+	0x1B80, 0xE1271465,
+	0x1B80, 0xE1271467,
+	0x1B80, 0x54811475,
+	0x1B80, 0x54811477,
+	0x1B80, 0xE1161485,
+	0x1B80, 0xE1161487,
+	0x1B80, 0xE11B1495,
+	0x1B80, 0xE11B1497,
+	0x1B80, 0xE11F14A5,
+	0x1B80, 0xE11F14A7,
+	0x1B80, 0xE12714B5,
+	0x1B80, 0xE12714B7,
+	0x1B80, 0x548014C5,
+	0x1B80, 0x548014C7,
+	0x1B80, 0x002A14D5,
+	0x1B80, 0x002A14D7,
+	0x1B80, 0xE12B14E5,
+	0x1B80, 0xE12B14E7,
+	0x1B80, 0xE11614F5,
+	0x1B80, 0xE11614F7,
+	0x1B80, 0xE11B1505,
+	0x1B80, 0xE11B1507,
+	0x1B80, 0xE11F1515,
+	0x1B80, 0xE11F1517,
+	0x1B80, 0xE1271525,
+	0x1B80, 0xE1271527,
+	0x1B80, 0x54801535,
+	0x1B80, 0x54801537,
+	0x1B80, 0xE1721545,
+	0x1B80, 0xE1721547,
+	0x1B80, 0xBF171555,
+	0x1B80, 0xBF171557,
+	0x1B80, 0x00021565,
+	0x1B80, 0x00021567,
+	0x1B80, 0x30281575,
+	0x1B80, 0x30281577,
+	0x1B80, 0x06141585,
+	0x1B80, 0x06141587,
+	0x1B80, 0x73201595,
+	0x1B80, 0x73201597,
+	0x1B80, 0x720015A5,
+	0x1B80, 0x720015A7,
+	0x1B80, 0x710015B5,
+	0x1B80, 0x710015B7,
+	0x1B80, 0x550115C5,
+	0x1B80, 0x550115C7,
+	0x1B80, 0xE12315D5,
+	0x1B80, 0xE12315D7,
+	0x1B80, 0xE12715E5,
+	0x1B80, 0xE12715E7,
+	0x1B80, 0x548115F5,
+	0x1B80, 0x548115F7,
+	0x1B80, 0xE1231605,
+	0x1B80, 0xE1231607,
+	0x1B80, 0xE1271615,
+	0x1B80, 0xE1271617,
+	0x1B80, 0x54801625,
+	0x1B80, 0x54801627,
+	0x1B80, 0x002A1635,
+	0x1B80, 0x002A1637,
+	0x1B80, 0xE12B1645,
+	0x1B80, 0xE12B1647,
+	0x1B80, 0xE1231655,
+	0x1B80, 0xE1231657,
+	0x1B80, 0xE1271665,
+	0x1B80, 0xE1271667,
+	0x1B80, 0x54801675,
+	0x1B80, 0x54801677,
+	0x1B80, 0xE1721685,
+	0x1B80, 0xE1721687,
+	0x1B80, 0xBF031695,
+	0x1B80, 0xBF031697,
+	0x1B80, 0x000216A5,
+	0x1B80, 0x000216A7,
+	0x1B80, 0x302816B5,
+	0x1B80, 0x302816B7,
+	0x1B80, 0x54BF16C5,
+	0x1B80, 0x54BF16C7,
+	0x1B80, 0x54C516D5,
+	0x1B80, 0x54C516D7,
+	0x1B80, 0x050A16E5,
+	0x1B80, 0x050A16E7,
+	0x1B80, 0x071416F5,
+	0x1B80, 0x071416F7,
+	0x1B80, 0x54DF1705,
+	0x1B80, 0x54DF1707,
+	0x1B80, 0x00011715,
+	0x1B80, 0x00011717,
+	0x1B80, 0x54BF1725,
+	0x1B80, 0x54BF1727,
+	0x1B80, 0x54C01735,
+	0x1B80, 0x54C01737,
+	0x1B80, 0x54A31745,
+	0x1B80, 0x54A31747,
+	0x1B80, 0x54C11755,
+	0x1B80, 0x54C11757,
+	0x1B80, 0x54A41765,
+	0x1B80, 0x54A41767,
+	0x1B80, 0x4C831775,
+	0x1B80, 0x4C831777,
+	0x1B80, 0x4C031785,
+	0x1B80, 0x4C031787,
+	0x1B80, 0xBF0B1795,
+	0x1B80, 0xBF0B1797,
+	0x1B80, 0x54C217A5,
+	0x1B80, 0x54C217A7,
+	0x1B80, 0x54A417B5,
+	0x1B80, 0x54A417B7,
+	0x1B80, 0x4C8517C5,
+	0x1B80, 0x4C8517C7,
+	0x1B80, 0x4C0517D5,
+	0x1B80, 0x4C0517D7,
+	0x1B80, 0xBF0617E5,
+	0x1B80, 0xBF0617E7,
+	0x1B80, 0x54C117F5,
+	0x1B80, 0x54C117F7,
+	0x1B80, 0x54A31805,
+	0x1B80, 0x54A31807,
+	0x1B80, 0x4C861815,
+	0x1B80, 0x4C861817,
+	0x1B80, 0x4C061825,
+	0x1B80, 0x4C061827,
+	0x1B80, 0xBF011835,
+	0x1B80, 0xBF011837,
+	0x1B80, 0x54DF1845,
+	0x1B80, 0x54DF1847,
+	0x1B80, 0x00011855,
+	0x1B80, 0x00011857,
+	0x1B80, 0x00071865,
+	0x1B80, 0x00071867,
+	0x1B80, 0x54011875,
+	0x1B80, 0x54011877,
+	0x1B80, 0x00041885,
+	0x1B80, 0x00041887,
+	0x1B80, 0x56001895,
+	0x1B80, 0x56001897,
+	0x1B80, 0x5CF218A5,
+	0x1B80, 0x5CF218A7,
+	0x1B80, 0x630718B5,
+	0x1B80, 0x630718B7,
+	0x1B80, 0x620418C5,
+	0x1B80, 0x620418C7,
+	0x1B80, 0x610018D5,
+	0x1B80, 0x610018D7,
+	0x1B80, 0x670718E5,
+	0x1B80, 0x670718E7,
+	0x1B80, 0x660618F5,
+	0x1B80, 0x660618F7,
+	0x1B80, 0x6F201905,
+	0x1B80, 0x6F201907,
+	0x1B80, 0x6E001915,
+	0x1B80, 0x6E001917,
+	0x1B80, 0x6D001925,
+	0x1B80, 0x6D001927,
+	0x1B80, 0x6C031935,
+	0x1B80, 0x6C031937,
+	0x1B80, 0x73201945,
+	0x1B80, 0x73201947,
+	0x1B80, 0x72001955,
+	0x1B80, 0x72001957,
+	0x1B80, 0x71001965,
+	0x1B80, 0x71001967,
+	0x1B80, 0x7B201975,
+	0x1B80, 0x7B201977,
+	0x1B80, 0x7A001985,
+	0x1B80, 0x7A001987,
+	0x1B80, 0x79001995,
+	0x1B80, 0x79001997,
+	0x1B80, 0x7F2019A5,
+	0x1B80, 0x7F2019A7,
+	0x1B80, 0x7E0019B5,
+	0x1B80, 0x7E0019B7,
+	0x1B80, 0x7D0019C5,
+	0x1B80, 0x7D0019C7,
+	0x1B80, 0x090119D5,
+	0x1B80, 0x090119D7,
+	0x1B80, 0x0AC619E5,
+	0x1B80, 0x0AC619E7,
+	0x1B80, 0x0BA619F5,
+	0x1B80, 0x0BA619F7,
+	0x1B80, 0x0C011A05,
+	0x1B80, 0x0C011A07,
+	0x1B80, 0x0D021A15,
+	0x1B80, 0x0D021A17,
+	0x1B80, 0x0E041A25,
+	0x1B80, 0x0E041A27,
+	0x1B80, 0x0FFF1A35,
+	0x1B80, 0x0FFF1A37,
+	0x1B80, 0x4D041A45,
+	0x1B80, 0x4D041A47,
+	0x1B80, 0x28F81A55,
+	0x1B80, 0x28F81A57,
+	0x1B80, 0xE0001A65,
+	0x1B80, 0xE0001A67,
+	0x1B80, 0x4D001A75,
+	0x1B80, 0x4D001A77,
+	0x1B80, 0x00011A85,
+	0x1B80, 0x00011A87,
+	0x1B80, 0x4D041A95,
+	0x1B80, 0x4D041A97,
+	0x1B80, 0x2EF81AA5,
+	0x1B80, 0x2EF81AA7,
+	0x1B80, 0x00021AB5,
+	0x1B80, 0x00021AB7,
+	0x1B80, 0x23031AC5,
+	0x1B80, 0x23031AC7,
+	0x1B80, 0x00001AD5,
+	0x1B80, 0x00001AD7,
+	0x1B80, 0x23131AE5,
+	0x1B80, 0x23131AE7,
+	0x1B80, 0xE77F1AF5,
+	0x1B80, 0xE77F1AF7,
+	0x1B80, 0x232F1B05,
+	0x1B80, 0x232F1B07,
+	0x1B80, 0xEFBF1B15,
+	0x1B80, 0xEFBF1B17,
+	0x1B80, 0x2EF01B25,
+	0x1B80, 0x2EF01B27,
+	0x1B80, 0x00021B35,
+	0x1B80, 0x00021B37,
+	0x1B80, 0x4D001B45,
+	0x1B80, 0x4D001B47,
+	0x1B80, 0x00011B55,
+	0x1B80, 0x00011B57,
+	0x1B80, 0x4D041B65,
+	0x1B80, 0x4D041B67,
+	0x1B80, 0x2EF81B75,
+	0x1B80, 0x2EF81B77,
+	0x1B80, 0x00021B85,
+	0x1B80, 0x00021B87,
+	0x1B80, 0x23031B95,
+	0x1B80, 0x23031B97,
+	0x1B80, 0x00001BA5,
+	0x1B80, 0x00001BA7,
+	0x1B80, 0x23131BB5,
+	0x1B80, 0x23131BB7,
+	0x1B80, 0xE77F1BC5,
+	0x1B80, 0xE77F1BC7,
+	0x1B80, 0x232F1BD5,
+	0x1B80, 0x232F1BD7,
+	0x1B80, 0xE79F1BE5,
+	0x1B80, 0xE79F1BE7,
+	0x1B80, 0x2EF01BF5,
+	0x1B80, 0x2EF01BF7,
+	0x1B80, 0x00021C05,
+	0x1B80, 0x00021C07,
+	0x1B80, 0x28F81C15,
+	0x1B80, 0x28F81C17,
+	0x1B80, 0x80001C25,
+	0x1B80, 0x80001C27,
+	0x1B80, 0x4D001C35,
+	0x1B80, 0x4D001C37,
+	0x1B80, 0x00011C45,
+	0x1B80, 0x00011C47,
+	0x1B80, 0x00041C55,
+	0x1B80, 0x00041C57,
+	0x1B80, 0x6BC01C65,
+	0x1B80, 0x6BC01C67,
+	0x1B80, 0x4D041C75,
+	0x1B80, 0x4D041C77,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241C85,
+	0x1B80, 0x68241C87,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241C85,
+	0x1B80, 0x68241C87,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241C85,
+	0x1B80, 0x68241C87,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241C85,
+	0x1B80, 0x68241C87,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241C85,
+	0x1B80, 0x68241C87,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241C85,
+	0x1B80, 0x68241C87,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241C85,
+	0x1B80, 0x68241C87,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241C85,
+	0x1B80, 0x68241C87,
+	0xA0000000,	0x00000000,
+	0x1B80, 0x68481C85,
+	0x1B80, 0x68481C87,
+	0xB0000000,	0x00000000,
+	0x1B80, 0x66061C95,
+	0x1B80, 0x66061C97,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x650C1CA5,
+	0x1B80, 0x650C1CA7,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x650C1CA5,
+	0x1B80, 0x650C1CA7,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x650C1CA5,
+	0x1B80, 0x650C1CA7,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x650C1CA5,
+	0x1B80, 0x650C1CA7,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x650C1CA5,
+	0x1B80, 0x650C1CA7,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x650C1CA5,
+	0x1B80, 0x650C1CA7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x650C1CA5,
+	0x1B80, 0x650C1CA7,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x650C1CA5,
+	0x1B80, 0x650C1CA7,
+	0xA0000000,	0x00000000,
+	0x1B80, 0x65041CA5,
+	0x1B80, 0x65041CA7,
+	0xB0000000,	0x00000000,
+	0x1B80, 0x64471CB5,
+	0x1B80, 0x64471CB7,
+	0x1B80, 0x23411CC5,
+	0x1B80, 0x23411CC7,
+	0x1B80, 0x100E1CD5,
+	0x1B80, 0x100E1CD7,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60101CE5,
+	0x1B80, 0x60101CE7,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60101CE5,
+	0x1B80, 0x60101CE7,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60101CE5,
+	0x1B80, 0x60101CE7,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60101CE5,
+	0x1B80, 0x60101CE7,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60101CE5,
+	0x1B80, 0x60101CE7,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60101CE5,
+	0x1B80, 0x60101CE7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60101CE5,
+	0x1B80, 0x60101CE7,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60101CE5,
+	0x1B80, 0x60101CE7,
+	0xA0000000,	0x00000000,
+	0x1B80, 0x60011CE5,
+	0x1B80, 0x60011CE7,
+	0xB0000000,	0x00000000,
+	0x1B80, 0x23411CF5,
+	0x1B80, 0x23411CF7,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60811D05,
+	0x1B80, 0x60811D07,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60811D05,
+	0x1B80, 0x60811D07,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60811D05,
+	0x1B80, 0x60811D07,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60811D05,
+	0x1B80, 0x60811D07,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60811D05,
+	0x1B80, 0x60811D07,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60811D05,
+	0x1B80, 0x60811D07,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60811D05,
+	0x1B80, 0x60811D07,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60811D05,
+	0x1B80, 0x60811D07,
+	0xA0000000,	0x00000000,
+	0x1B80, 0x60611D05,
+	0x1B80, 0x60611D07,
+	0xB0000000,	0x00000000,
+	0x1B80, 0x23411D15,
+	0x1B80, 0x23411D17,
+	0x1B80, 0x70E11D25,
+	0x1B80, 0x70E11D27,
+	0x1B80, 0x4D001D35,
+	0x1B80, 0x4D001D37,
+	0x1B80, 0x00011D45,
+	0x1B80, 0x00011D47,
+	0x1B80, 0x00041D55,
+	0x1B80, 0x00041D57,
+	0x1B80, 0x6B401D65,
+	0x1B80, 0x6B401D67,
+	0x1B80, 0x4D041D75,
+	0x1B80, 0x4D041D77,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241D85,
+	0x1B80, 0x68241D87,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241D85,
+	0x1B80, 0x68241D87,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241D85,
+	0x1B80, 0x68241D87,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241D85,
+	0x1B80, 0x68241D87,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241D85,
+	0x1B80, 0x68241D87,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x68241D85,
+	0x1B80, 0x68241D87,
+	0xA0000000,	0x00000000,
+	0x1B80, 0x68481D85,
+	0x1B80, 0x68481D87,
+	0xB0000000,	0x00000000,
+	0x1B80, 0x66061D95,
+	0x1B80, 0x66061D97,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x65081DA5,
+	0x1B80, 0x65081DA7,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x65181DA5,
+	0x1B80, 0x65181DA7,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x65181DA5,
+	0x1B80, 0x65181DA7,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x65181DA5,
+	0x1B80, 0x65181DA7,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x65181DA5,
+	0x1B80, 0x65181DA7,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x65081DA5,
+	0x1B80, 0x65081DA7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x65181DA5,
+	0x1B80, 0x65181DA7,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x65181DA5,
+	0x1B80, 0x65181DA7,
+	0xA0000000,	0x00000000,
+	0x1B80, 0x65081DA5,
+	0x1B80, 0x65081DA7,
+	0xB0000000,	0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x64481DB5,
+	0x1B80, 0x64481DB7,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x64481DB5,
+	0x1B80, 0x64481DB7,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x64481DB5,
+	0x1B80, 0x64481DB7,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x64481DB5,
+	0x1B80, 0x64481DB7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x64481DB5,
+	0x1B80, 0x64481DB7,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x64481DB5,
+	0x1B80, 0x64481DB7,
+	0xA0000000,	0x00000000,
+	0x1B80, 0x64471DB5,
+	0x1B80, 0x64471DB7,
+	0xB0000000,	0x00000000,
+	0x1B80, 0x23411DC5,
+	0x1B80, 0x23411DC7,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x11E41DD5,
+	0x1B80, 0x11E41DD7,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x11E81DD5,
+	0x1B80, 0x11E81DD7,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x11E81DD5,
+	0x1B80, 0x11E81DD7,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x11E81DD5,
+	0x1B80, 0x11E81DD7,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x11E81DD5,
+	0x1B80, 0x11E81DD7,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x11E41DD5,
+	0x1B80, 0x11E41DD7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x11E81DD5,
+	0x1B80, 0x11E81DD7,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x11E81DD5,
+	0x1B80, 0x11E81DD7,
+	0xA0000000,	0x00000000,
+	0x1B80, 0x11E41DD5,
+	0x1B80, 0x11E41DD7,
+	0xB0000000,	0x00000000,
+	0x1B80, 0x60011DE5,
+	0x1B80, 0x60011DE7,
+	0x1B80, 0x23411DF5,
+	0x1B80, 0x23411DF7,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60E11E05,
+	0x1B80, 0x60E11E07,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x61E11E05,
+	0x1B80, 0x61E11E07,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x61E11E05,
+	0x1B80, 0x61E11E07,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x61E11E05,
+	0x1B80, 0x61E11E07,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x61E11E05,
+	0x1B80, 0x61E11E07,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x60E11E05,
+	0x1B80, 0x60E11E07,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x61E11E05,
+	0x1B80, 0x61E11E07,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0x1B80, 0x61E11E05,
+	0x1B80, 0x61E11E07,
+	0xA0000000,	0x00000000,
+	0x1B80, 0x60E11E05,
+	0x1B80, 0x60E11E07,
+	0xB0000000,	0x00000000,
+	0x1B80, 0x23411E15,
+	0x1B80, 0x23411E17,
+	0x1B80, 0x70611E25,
+	0x1B80, 0x70611E27,
+	0x1B80, 0x4D001E35,
+	0x1B80, 0x4D001E37,
+	0x1B80, 0x00011E45,
+	0x1B80, 0x00011E47,
+	0x1B80, 0x00001E55,
+	0x1B80, 0x00001E57,
+	0x1B80, 0x00001E65,
+	0x1B80, 0x00001E67,
+	0x1B80, 0x00001E75,
+	0x1B80, 0x00001E77,
+	0x1B80, 0x00001E85,
+	0x1B80, 0x00001E87,
+	0x1B80, 0x00001E95,
+	0x1B80, 0x00001E97,
+	0x1B80, 0x00001EA5,
+	0x1B80, 0x00001EA7,
+	0x1B80, 0x00001EB5,
+	0x1B80, 0x00001EB7,
+	0x1B80, 0x00001EC5,
+	0x1B80, 0x00001EC7,
+	0x1B80, 0x00001ED5,
+	0x1B80, 0x00001ED7,
+	0x1B80, 0x00001EE5,
+	0x1B80, 0x00001EE7,
+	0x1B80, 0x00001EF5,
+	0x1B80, 0x00001EF7,
+	0x1B80, 0x00001F05,
+	0x1B80, 0x00001F07,
+	0x1B80, 0x00001F15,
+	0x1B80, 0x00001F17,
+	0x1B80, 0x00001F25,
+	0x1B80, 0x00001F27,
+	0x1B80, 0x00001F35,
+	0x1B80, 0x00001F37,
+	0x1B80, 0x00001F45,
+	0x1B80, 0x00001F47,
+	0x1B80, 0x00001F55,
+	0x1B80, 0x00001F57,
+	0x1B80, 0x00001F65,
+	0x1B80, 0x00001F67,
+	0x1B80, 0x00001F75,
+	0x1B80, 0x00001F77,
+	0x1B80, 0x00001F85,
+	0x1B80, 0x00001F87,
+	0x1B80, 0x00001F95,
+	0x1B80, 0x00001F97,
+	0x1B80, 0x00001FA5,
+	0x1B80, 0x00001FA7,
+	0x1B80, 0x00001FB5,
+	0x1B80, 0x00001FB7,
+	0x1B80, 0x00001FC5,
+	0x1B80, 0x00001FC7,
+	0x1B80, 0x00001FD5,
+	0x1B80, 0x00001FD7,
+	0x1B80, 0x00001FE5,
+	0x1B80, 0x00001FE7,
+	0x1B80, 0x00001FF5,
+	0x1B80, 0x00001FF7,
+	0x1B80, 0x00000006,
+	0x1B80, 0x00000002,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8814a_bb, rtw_phy_cfg_bb);
+
+static const struct rtw_phy_pg_cfg_pair rtw8814a_bb_pg[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x30323434, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x28303234, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x32323232, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x26283032, },
+	{ 0, 0, 2, 0x00000cd8, 0xffffffff, 0x30303030, },
+	{ 0, 0, 2, 0x00000cdc, 0xffffffff, 0x24262830, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x28303234, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x32322426, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x30323232, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x22242628, },
+	{ 0, 0, 2, 0x00000ce0, 0xffffffff, 0x30303030, },
+	{ 0, 0, 2, 0x00000ce4, 0xffffffff, 0x24262830, },
+	{ 0, 0, 2, 0x00000ce8, 0x0000ffff, 0x20222222, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x30323434, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x28303234, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x32323232, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x26283032, },
+	{ 0, 1, 2, 0x00000ed8, 0xffffffff, 0x30303030, },
+	{ 0, 1, 2, 0x00000edc, 0xffffffff, 0x24262830, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x28303234, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x32322426, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x30323232, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x22242628, },
+	{ 0, 1, 2, 0x00000ee0, 0xffffffff, 0x30303030, },
+	{ 0, 1, 2, 0x00000ee4, 0xffffffff, 0x24262830, },
+	{ 0, 1, 2, 0x00000ee8, 0x0000ffff, 0x20222222, },
+	{ 0, 2, 0, 0x00001820, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001824, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001828, 0xffffffff, 0x30323434, },
+	{ 0, 2, 0, 0x0000182c, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001830, 0xffffffff, 0x28303234, },
+	{ 0, 2, 1, 0x00001834, 0xffffffff, 0x32323232, },
+	{ 0, 2, 1, 0x00001838, 0xffffffff, 0x26283032, },
+	{ 0, 2, 2, 0x000018d8, 0xffffffff, 0x30303030, },
+	{ 0, 2, 2, 0x000018dc, 0xffffffff, 0x24262830, },
+	{ 0, 2, 0, 0x0000183c, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001840, 0xffffffff, 0x28303234, },
+	{ 0, 2, 0, 0x00001844, 0xffffffff, 0x32322426, },
+	{ 0, 2, 1, 0x00001848, 0xffffffff, 0x30323232, },
+	{ 0, 2, 1, 0x0000184c, 0xffffffff, 0x22242628, },
+	{ 0, 2, 2, 0x000018e0, 0xffffffff, 0x30303030, },
+	{ 0, 2, 2, 0x000018e4, 0xffffffff, 0x24262830, },
+	{ 0, 2, 2, 0x000018e8, 0x0000ffff, 0x20222222, },
+	{ 0, 3, 0, 0x00001a20, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a24, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a28, 0xffffffff, 0x30323434, },
+	{ 0, 3, 0, 0x00001a2c, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a30, 0xffffffff, 0x28303234, },
+	{ 0, 3, 1, 0x00001a34, 0xffffffff, 0x32323232, },
+	{ 0, 3, 1, 0x00001a38, 0xffffffff, 0x26283032, },
+	{ 0, 3, 2, 0x00001ad8, 0xffffffff, 0x30303030, },
+	{ 0, 3, 2, 0x00001adc, 0xffffffff, 0x24262830, },
+	{ 0, 3, 0, 0x00001a3c, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a40, 0xffffffff, 0x28303234, },
+	{ 0, 3, 0, 0x00001a44, 0xffffffff, 0x32322426, },
+	{ 0, 3, 1, 0x00001a48, 0xffffffff, 0x30323232, },
+	{ 0, 3, 1, 0x00001a4c, 0xffffffff, 0x22242628, },
+	{ 0, 3, 2, 0x00001ae0, 0xffffffff, 0x30303030, },
+	{ 0, 3, 2, 0x00001ae4, 0xffffffff, 0x24262830, },
+	{ 0, 3, 2, 0x00001ae8, 0x0000ffff, 0x20222222, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x34343434, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x30323434, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x34343434, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x28303234, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x32323232, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x26283032, },
+	{ 1, 0, 2, 0x00000cd8, 0xffffffff, 0x30303030, },
+	{ 1, 0, 2, 0x00000cdc, 0xffffffff, 0x24262830, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x34343434, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x28303234, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x32322426, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x30323232, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x22242628, },
+	{ 1, 0, 2, 0x00000ce0, 0xffffffff, 0x30303030, },
+	{ 1, 0, 2, 0x00000ce4, 0xffffffff, 0x24262830, },
+	{ 1, 0, 2, 0x00000ce8, 0x0000ffff, 0x20222222, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x34343434, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x30323434, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x34343434, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x28303234, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x32323232, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x26283032, },
+	{ 1, 1, 2, 0x00000ed8, 0xffffffff, 0x30303030, },
+	{ 1, 1, 2, 0x00000edc, 0xffffffff, 0x24262830, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x34343434, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x28303234, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x32322426, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x30323232, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x22242628, },
+	{ 1, 1, 2, 0x00000ee0, 0xffffffff, 0x30303030, },
+	{ 1, 1, 2, 0x00000ee4, 0xffffffff, 0x24262830, },
+	{ 1, 1, 2, 0x00000ee8, 0x0000ffff, 0x20222222, },
+	{ 1, 2, 0, 0x00001824, 0xffffffff, 0x34343434, },
+	{ 1, 2, 0, 0x00001828, 0xffffffff, 0x30323434, },
+	{ 1, 2, 0, 0x0000182c, 0xffffffff, 0x34343434, },
+	{ 1, 2, 0, 0x00001830, 0xffffffff, 0x28303234, },
+	{ 1, 2, 1, 0x00001834, 0xffffffff, 0x32323232, },
+	{ 1, 2, 1, 0x00001838, 0xffffffff, 0x26283032, },
+	{ 1, 2, 2, 0x000018d8, 0xffffffff, 0x30303030, },
+	{ 1, 2, 2, 0x000018dc, 0xffffffff, 0x24262830, },
+	{ 1, 2, 0, 0x0000183c, 0xffffffff, 0x34343434, },
+	{ 1, 2, 0, 0x00001840, 0xffffffff, 0x28303234, },
+	{ 1, 2, 0, 0x00001844, 0xffffffff, 0x32322426, },
+	{ 1, 2, 1, 0x00001848, 0xffffffff, 0x30323232, },
+	{ 1, 2, 1, 0x0000184c, 0xffffffff, 0x22242628, },
+	{ 1, 2, 2, 0x000018e0, 0xffffffff, 0x30303030, },
+	{ 1, 2, 2, 0x000018e4, 0xffffffff, 0x24262830, },
+	{ 1, 2, 2, 0x000018e8, 0x0000ffff, 0x20222222, },
+	{ 1, 3, 0, 0x00001a24, 0xffffffff, 0x34343434, },
+	{ 1, 3, 0, 0x00001a28, 0xffffffff, 0x30323434, },
+	{ 1, 3, 0, 0x00001a2c, 0xffffffff, 0x34343434, },
+	{ 1, 3, 0, 0x00001a30, 0xffffffff, 0x28303234, },
+	{ 1, 3, 1, 0x00001a34, 0xffffffff, 0x32323232, },
+	{ 1, 3, 1, 0x00001a38, 0xffffffff, 0x26283032, },
+	{ 1, 3, 2, 0x00001ad8, 0xffffffff, 0x30303030, },
+	{ 1, 3, 2, 0x00001adc, 0xffffffff, 0x24262830, },
+	{ 1, 3, 0, 0x00001a3c, 0xffffffff, 0x34343434, },
+	{ 1, 3, 0, 0x00001a40, 0xffffffff, 0x28303234, },
+	{ 1, 3, 0, 0x00001a44, 0xffffffff, 0x32322426, },
+	{ 1, 3, 1, 0x00001a48, 0xffffffff, 0x30323232, },
+	{ 1, 3, 1, 0x00001a4c, 0xffffffff, 0x22242628, },
+	{ 1, 3, 2, 0x00001ae0, 0xffffffff, 0x30303030, },
+	{ 1, 3, 2, 0x00001ae4, 0xffffffff, 0x24262830, },
+	{ 1, 3, 2, 0x00001ae8, 0x0000ffff, 0x20222222, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8814a_bb_pg);
+
+static const struct rtw_phy_pg_cfg_pair rtw8814a_bb_pg_type0[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x32323232, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x32323232, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x28303232, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x32323232, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x26283032, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x30303030, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x24262830, },
+	{ 0, 0, 2, 0x00000cd8, 0xffffffff, 0x28282828, },
+	{ 0, 0, 2, 0x00000cdc, 0xffffffff, 0x22242628, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x32323232, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x26283032, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x30302224, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x28303030, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x20222426, },
+	{ 0, 0, 2, 0x00000ce0, 0xffffffff, 0x28282828, },
+	{ 0, 0, 2, 0x00000ce4, 0xffffffff, 0x22242628, },
+	{ 0, 0, 2, 0x00000ce8, 0x0000ffff, 0x18202020, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x32323232, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x32323232, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x28303232, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x32323232, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x26283032, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x30303030, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x24262830, },
+	{ 0, 1, 2, 0x00000ed8, 0xffffffff, 0x28282828, },
+	{ 0, 1, 2, 0x00000edc, 0xffffffff, 0x22242628, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x32323232, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x26283032, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x30302224, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x28303030, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x20222426, },
+	{ 0, 1, 2, 0x00000ee0, 0xffffffff, 0x28282828, },
+	{ 0, 1, 2, 0x00000ee4, 0xffffffff, 0x22242628, },
+	{ 0, 1, 2, 0x00000ee8, 0x0000ffff, 0x18202020, },
+	{ 0, 2, 0, 0x00001820, 0xffffffff, 0x32323232, },
+	{ 0, 2, 0, 0x00001824, 0xffffffff, 0x32323232, },
+	{ 0, 2, 0, 0x00001828, 0xffffffff, 0x28303232, },
+	{ 0, 2, 0, 0x0000182c, 0xffffffff, 0x32323232, },
+	{ 0, 2, 0, 0x00001830, 0xffffffff, 0x26283032, },
+	{ 0, 2, 1, 0x00001834, 0xffffffff, 0x30303030, },
+	{ 0, 2, 1, 0x00001838, 0xffffffff, 0x24262830, },
+	{ 0, 2, 2, 0x000018d8, 0xffffffff, 0x28282828, },
+	{ 0, 2, 2, 0x000018dc, 0xffffffff, 0x22242628, },
+	{ 0, 2, 0, 0x0000183c, 0xffffffff, 0x32323232, },
+	{ 0, 2, 0, 0x00001840, 0xffffffff, 0x26283032, },
+	{ 0, 2, 0, 0x00001844, 0xffffffff, 0x30302224, },
+	{ 0, 2, 1, 0x00001848, 0xffffffff, 0x28303030, },
+	{ 0, 2, 1, 0x0000184c, 0xffffffff, 0x20222426, },
+	{ 0, 2, 2, 0x000018e0, 0xffffffff, 0x28282828, },
+	{ 0, 2, 2, 0x000018e4, 0xffffffff, 0x22242628, },
+	{ 0, 2, 2, 0x000018e8, 0x0000ffff, 0x18202020, },
+	{ 0, 3, 0, 0x00001a20, 0xffffffff, 0x32323232, },
+	{ 0, 3, 0, 0x00001a24, 0xffffffff, 0x32323232, },
+	{ 0, 3, 0, 0x00001a28, 0xffffffff, 0x28303232, },
+	{ 0, 3, 0, 0x00001a2c, 0xffffffff, 0x32323232, },
+	{ 0, 3, 0, 0x00001a30, 0xffffffff, 0x26283032, },
+	{ 0, 3, 1, 0x00001a34, 0xffffffff, 0x30303030, },
+	{ 0, 3, 1, 0x00001a38, 0xffffffff, 0x24262830, },
+	{ 0, 3, 2, 0x00001ad8, 0xffffffff, 0x28282828, },
+	{ 0, 3, 2, 0x00001adc, 0xffffffff, 0x22242628, },
+	{ 0, 3, 0, 0x00001a3c, 0xffffffff, 0x32323232, },
+	{ 0, 3, 0, 0x00001a40, 0xffffffff, 0x26283032, },
+	{ 0, 3, 0, 0x00001a44, 0xffffffff, 0x30302224, },
+	{ 0, 3, 1, 0x00001a48, 0xffffffff, 0x28303030, },
+	{ 0, 3, 1, 0x00001a4c, 0xffffffff, 0x20222426, },
+	{ 0, 3, 2, 0x00001ae0, 0xffffffff, 0x28282828, },
+	{ 0, 3, 2, 0x00001ae4, 0xffffffff, 0x22242628, },
+	{ 0, 3, 2, 0x00001ae8, 0x0000ffff, 0x18202020, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x32323232, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x28303232, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x32323232, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x26283032, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x30303030, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x24262830, },
+	{ 1, 0, 2, 0x00000cd8, 0xffffffff, 0x28282828, },
+	{ 1, 0, 2, 0x00000cdc, 0xffffffff, 0x22242628, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x32323232, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x26283032, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x30302224, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x28303030, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x20222426, },
+	{ 1, 0, 2, 0x00000ce0, 0xffffffff, 0x28282828, },
+	{ 1, 0, 2, 0x00000ce4, 0xffffffff, 0x22242628, },
+	{ 1, 0, 2, 0x00000ce8, 0x0000ffff, 0x18202020, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x32323232, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x28303232, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x32323232, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x26283032, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x30303030, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x24262830, },
+	{ 1, 1, 2, 0x00000ed8, 0xffffffff, 0x28282828, },
+	{ 1, 1, 2, 0x00000edc, 0xffffffff, 0x22242628, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x32323232, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x26283032, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x30302224, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x28303030, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x20222426, },
+	{ 1, 1, 2, 0x00000ee0, 0xffffffff, 0x28282828, },
+	{ 1, 1, 2, 0x00000ee4, 0xffffffff, 0x22242628, },
+	{ 1, 1, 2, 0x00000ee8, 0x0000ffff, 0x18202020, },
+	{ 1, 2, 0, 0x00001824, 0xffffffff, 0x32323232, },
+	{ 1, 2, 0, 0x00001828, 0xffffffff, 0x28303232, },
+	{ 1, 2, 0, 0x0000182c, 0xffffffff, 0x32323232, },
+	{ 1, 2, 0, 0x00001830, 0xffffffff, 0x26283032, },
+	{ 1, 2, 1, 0x00001834, 0xffffffff, 0x30303030, },
+	{ 1, 2, 1, 0x00001838, 0xffffffff, 0x24262830, },
+	{ 1, 2, 2, 0x000018d8, 0xffffffff, 0x28282828, },
+	{ 1, 2, 2, 0x000018dc, 0xffffffff, 0x22242628, },
+	{ 1, 2, 0, 0x0000183c, 0xffffffff, 0x32323232, },
+	{ 1, 2, 0, 0x00001840, 0xffffffff, 0x26283032, },
+	{ 1, 2, 0, 0x00001844, 0xffffffff, 0x30302224, },
+	{ 1, 2, 1, 0x00001848, 0xffffffff, 0x28303030, },
+	{ 1, 2, 1, 0x0000184c, 0xffffffff, 0x20222426, },
+	{ 1, 2, 2, 0x000018e0, 0xffffffff, 0x28282828, },
+	{ 1, 2, 2, 0x000018e4, 0xffffffff, 0x22242628, },
+	{ 1, 2, 2, 0x000018e8, 0x0000ffff, 0x18202020, },
+	{ 1, 3, 0, 0x00001a24, 0xffffffff, 0x32323232, },
+	{ 1, 3, 0, 0x00001a28, 0xffffffff, 0x28303232, },
+	{ 1, 3, 0, 0x00001a2c, 0xffffffff, 0x32323232, },
+	{ 1, 3, 0, 0x00001a30, 0xffffffff, 0x26283032, },
+	{ 1, 3, 1, 0x00001a34, 0xffffffff, 0x30303030, },
+	{ 1, 3, 1, 0x00001a38, 0xffffffff, 0x24262830, },
+	{ 1, 3, 2, 0x00001ad8, 0xffffffff, 0x28282828, },
+	{ 1, 3, 2, 0x00001adc, 0xffffffff, 0x22242628, },
+	{ 1, 3, 0, 0x00001a3c, 0xffffffff, 0x32323232, },
+	{ 1, 3, 0, 0x00001a40, 0xffffffff, 0x26283032, },
+	{ 1, 3, 0, 0x00001a44, 0xffffffff, 0x30302224, },
+	{ 1, 3, 1, 0x00001a48, 0xffffffff, 0x28303030, },
+	{ 1, 3, 1, 0x00001a4c, 0xffffffff, 0x20222426, },
+	{ 1, 3, 2, 0x00001ae0, 0xffffffff, 0x28282828, },
+	{ 1, 3, 2, 0x00001ae4, 0xffffffff, 0x22242628, },
+	{ 1, 3, 2, 0x00001ae8, 0x0000ffff, 0x18202020, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8814a_bb_pg_type0);
+
+static const struct rtw_phy_pg_cfg_pair rtw8814a_bb_pg_type2[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x30323434, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x28303234, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x32323232, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x26283032, },
+	{ 0, 0, 2, 0x00000cd8, 0xffffffff, 0x30303030, },
+	{ 0, 0, 2, 0x00000cdc, 0xffffffff, 0x24262830, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x28303234, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x32322426, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x30323232, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x22242628, },
+	{ 0, 0, 2, 0x00000ce0, 0xffffffff, 0x30303030, },
+	{ 0, 0, 2, 0x00000ce4, 0xffffffff, 0x24262830, },
+	{ 0, 0, 2, 0x00000ce8, 0x0000ffff, 0x20222222, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x30323434, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x28303234, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x32323232, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x26283032, },
+	{ 0, 1, 2, 0x00000ed8, 0xffffffff, 0x30303030, },
+	{ 0, 1, 2, 0x00000edc, 0xffffffff, 0x24262830, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x28303234, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x32322426, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x30323232, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x22242628, },
+	{ 0, 1, 2, 0x00000ee0, 0xffffffff, 0x30303030, },
+	{ 0, 1, 2, 0x00000ee4, 0xffffffff, 0x24262830, },
+	{ 0, 1, 2, 0x00000ee8, 0x0000ffff, 0x20222222, },
+	{ 0, 2, 0, 0x00001820, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001824, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001828, 0xffffffff, 0x30323434, },
+	{ 0, 2, 0, 0x0000182c, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001830, 0xffffffff, 0x28303234, },
+	{ 0, 2, 1, 0x00001834, 0xffffffff, 0x32323232, },
+	{ 0, 2, 1, 0x00001838, 0xffffffff, 0x26283032, },
+	{ 0, 2, 2, 0x000018d8, 0xffffffff, 0x30303030, },
+	{ 0, 2, 2, 0x000018dc, 0xffffffff, 0x24262830, },
+	{ 0, 2, 0, 0x0000183c, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001840, 0xffffffff, 0x28303234, },
+	{ 0, 2, 0, 0x00001844, 0xffffffff, 0x32322426, },
+	{ 0, 2, 1, 0x00001848, 0xffffffff, 0x30323232, },
+	{ 0, 2, 1, 0x0000184c, 0xffffffff, 0x22242628, },
+	{ 0, 2, 2, 0x000018e0, 0xffffffff, 0x30303030, },
+	{ 0, 2, 2, 0x000018e4, 0xffffffff, 0x24262830, },
+	{ 0, 2, 2, 0x000018e8, 0x0000ffff, 0x20222222, },
+	{ 0, 3, 0, 0x00001a20, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a24, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a28, 0xffffffff, 0x30323434, },
+	{ 0, 3, 0, 0x00001a2c, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a30, 0xffffffff, 0x28303234, },
+	{ 0, 3, 1, 0x00001a34, 0xffffffff, 0x32323232, },
+	{ 0, 3, 1, 0x00001a38, 0xffffffff, 0x26283032, },
+	{ 0, 3, 2, 0x00001ad8, 0xffffffff, 0x30303030, },
+	{ 0, 3, 2, 0x00001adc, 0xffffffff, 0x24262830, },
+	{ 0, 3, 0, 0x00001a3c, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a40, 0xffffffff, 0x28303234, },
+	{ 0, 3, 0, 0x00001a44, 0xffffffff, 0x32322426, },
+	{ 0, 3, 1, 0x00001a48, 0xffffffff, 0x30323232, },
+	{ 0, 3, 1, 0x00001a4c, 0xffffffff, 0x22242628, },
+	{ 0, 3, 2, 0x00001ae0, 0xffffffff, 0x30303030, },
+	{ 0, 3, 2, 0x00001ae4, 0xffffffff, 0x24262830, },
+	{ 0, 3, 2, 0x00001ae8, 0x0000ffff, 0x20222222, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x34343434, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x30323434, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x34343434, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x28303234, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x32323232, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x26283032, },
+	{ 1, 0, 2, 0x00000cd8, 0xffffffff, 0x30303030, },
+	{ 1, 0, 2, 0x00000cdc, 0xffffffff, 0x24262830, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x34343434, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x28303234, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x32322426, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x30323232, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x22242628, },
+	{ 1, 0, 2, 0x00000ce0, 0xffffffff, 0x30303030, },
+	{ 1, 0, 2, 0x00000ce4, 0xffffffff, 0x24262830, },
+	{ 1, 0, 2, 0x00000ce8, 0x0000ffff, 0x20222222, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x34343434, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x30323434, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x34343434, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x28303234, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x32323232, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x26283032, },
+	{ 1, 1, 2, 0x00000ed8, 0xffffffff, 0x30303030, },
+	{ 1, 1, 2, 0x00000edc, 0xffffffff, 0x24262830, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x34343434, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x28303234, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x32322426, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x30323232, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x22242628, },
+	{ 1, 1, 2, 0x00000ee0, 0xffffffff, 0x30303030, },
+	{ 1, 1, 2, 0x00000ee4, 0xffffffff, 0x24262830, },
+	{ 1, 1, 2, 0x00000ee8, 0x0000ffff, 0x20222222, },
+	{ 1, 2, 0, 0x00001824, 0xffffffff, 0x34343434, },
+	{ 1, 2, 0, 0x00001828, 0xffffffff, 0x30323434, },
+	{ 1, 2, 0, 0x0000182c, 0xffffffff, 0x34343434, },
+	{ 1, 2, 0, 0x00001830, 0xffffffff, 0x28303234, },
+	{ 1, 2, 1, 0x00001834, 0xffffffff, 0x32323232, },
+	{ 1, 2, 1, 0x00001838, 0xffffffff, 0x26283032, },
+	{ 1, 2, 2, 0x000018d8, 0xffffffff, 0x30303030, },
+	{ 1, 2, 2, 0x000018dc, 0xffffffff, 0x24262830, },
+	{ 1, 2, 0, 0x0000183c, 0xffffffff, 0x34343434, },
+	{ 1, 2, 0, 0x00001840, 0xffffffff, 0x28303234, },
+	{ 1, 2, 0, 0x00001844, 0xffffffff, 0x32322426, },
+	{ 1, 2, 1, 0x00001848, 0xffffffff, 0x30323232, },
+	{ 1, 2, 1, 0x0000184c, 0xffffffff, 0x22242628, },
+	{ 1, 2, 2, 0x000018e0, 0xffffffff, 0x30303030, },
+	{ 1, 2, 2, 0x000018e4, 0xffffffff, 0x24262830, },
+	{ 1, 2, 2, 0x000018e8, 0x0000ffff, 0x20222222, },
+	{ 1, 3, 0, 0x00001a24, 0xffffffff, 0x34343434, },
+	{ 1, 3, 0, 0x00001a28, 0xffffffff, 0x30323434, },
+	{ 1, 3, 0, 0x00001a2c, 0xffffffff, 0x34343434, },
+	{ 1, 3, 0, 0x00001a30, 0xffffffff, 0x28303234, },
+	{ 1, 3, 1, 0x00001a34, 0xffffffff, 0x32323232, },
+	{ 1, 3, 1, 0x00001a38, 0xffffffff, 0x26283032, },
+	{ 1, 3, 2, 0x00001ad8, 0xffffffff, 0x30303030, },
+	{ 1, 3, 2, 0x00001adc, 0xffffffff, 0x24262830, },
+	{ 1, 3, 0, 0x00001a3c, 0xffffffff, 0x34343434, },
+	{ 1, 3, 0, 0x00001a40, 0xffffffff, 0x28303234, },
+	{ 1, 3, 0, 0x00001a44, 0xffffffff, 0x32322426, },
+	{ 1, 3, 1, 0x00001a48, 0xffffffff, 0x30323232, },
+	{ 1, 3, 1, 0x00001a4c, 0xffffffff, 0x22242628, },
+	{ 1, 3, 2, 0x00001ae0, 0xffffffff, 0x30303030, },
+	{ 1, 3, 2, 0x00001ae4, 0xffffffff, 0x24262830, },
+	{ 1, 3, 2, 0x00001ae8, 0x0000ffff, 0x20222222, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8814a_bb_pg_type2);
+
+static const struct rtw_phy_pg_cfg_pair rtw8814a_bb_pg_type3[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x48484848, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x46464646, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x44464646, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x46464646, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x42444646, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x46464646, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x42444646, },
+	{ 0, 0, 2, 0x00000cd8, 0xffffffff, 0x46464646, },
+	{ 0, 0, 2, 0x00000cdc, 0xffffffff, 0x42444646, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x46464646, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x42444646, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x46463840, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x46464646, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x38404244, },
+	{ 0, 0, 2, 0x00000ce0, 0xffffffff, 0x46464646, },
+	{ 0, 0, 2, 0x00000ce4, 0xffffffff, 0x42444646, },
+	{ 0, 0, 2, 0x00000ce8, 0x0000ffff, 0x38383840, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x48484848, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x46464646, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x44464646, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x46464646, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x42444646, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x46464646, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x42444646, },
+	{ 0, 1, 2, 0x00000ed8, 0xffffffff, 0x46464646, },
+	{ 0, 1, 2, 0x00000edc, 0xffffffff, 0x42444646, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x46464646, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x42444646, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x46463840, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x46464646, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x38404244, },
+	{ 0, 1, 2, 0x00000ee0, 0xffffffff, 0x46464646, },
+	{ 0, 1, 2, 0x00000ee4, 0xffffffff, 0x42444646, },
+	{ 0, 1, 2, 0x00000ee8, 0x0000ffff, 0x38383840, },
+	{ 0, 2, 0, 0x00001820, 0xffffffff, 0x48484848, },
+	{ 0, 2, 0, 0x00001824, 0xffffffff, 0x46464646, },
+	{ 0, 2, 0, 0x00001828, 0xffffffff, 0x44464646, },
+	{ 0, 2, 0, 0x0000182c, 0xffffffff, 0x46464646, },
+	{ 0, 2, 0, 0x00001830, 0xffffffff, 0x42444646, },
+	{ 0, 2, 1, 0x00001834, 0xffffffff, 0x46464646, },
+	{ 0, 2, 1, 0x00001838, 0xffffffff, 0x42444646, },
+	{ 0, 2, 2, 0x000018d8, 0xffffffff, 0x46464646, },
+	{ 0, 2, 2, 0x000018dc, 0xffffffff, 0x42444646, },
+	{ 0, 2, 0, 0x0000183c, 0xffffffff, 0x46464646, },
+	{ 0, 2, 0, 0x00001840, 0xffffffff, 0x42444646, },
+	{ 0, 2, 0, 0x00001844, 0xffffffff, 0x46463840, },
+	{ 0, 2, 1, 0x00001848, 0xffffffff, 0x46464646, },
+	{ 0, 2, 1, 0x0000184c, 0xffffffff, 0x38404244, },
+	{ 0, 2, 2, 0x000018e0, 0xffffffff, 0x46464646, },
+	{ 0, 2, 2, 0x000018e4, 0xffffffff, 0x42444646, },
+	{ 0, 2, 2, 0x000018e8, 0x0000ffff, 0x38383840, },
+	{ 0, 3, 0, 0x00001a20, 0xffffffff, 0x48484848, },
+	{ 0, 3, 0, 0x00001a24, 0xffffffff, 0x46464646, },
+	{ 0, 3, 0, 0x00001a28, 0xffffffff, 0x44464646, },
+	{ 0, 3, 0, 0x00001a2c, 0xffffffff, 0x46464646, },
+	{ 0, 3, 0, 0x00001a30, 0xffffffff, 0x42444646, },
+	{ 0, 3, 1, 0x00001a34, 0xffffffff, 0x46464646, },
+	{ 0, 3, 1, 0x00001a38, 0xffffffff, 0x42444646, },
+	{ 0, 3, 2, 0x00001ad8, 0xffffffff, 0x46464646, },
+	{ 0, 3, 2, 0x00001adc, 0xffffffff, 0x42444646, },
+	{ 0, 3, 0, 0x00001a3c, 0xffffffff, 0x46464646, },
+	{ 0, 3, 0, 0x00001a40, 0xffffffff, 0x42444646, },
+	{ 0, 3, 0, 0x00001a44, 0xffffffff, 0x46463840, },
+	{ 0, 3, 1, 0x00001a48, 0xffffffff, 0x46464646, },
+	{ 0, 3, 1, 0x00001a4c, 0xffffffff, 0x38404244, },
+	{ 0, 3, 2, 0x00001ae0, 0xffffffff, 0x46464646, },
+	{ 0, 3, 2, 0x00001ae4, 0xffffffff, 0x42444646, },
+	{ 0, 3, 2, 0x00001ae8, 0x0000ffff, 0x38383840, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x46464646, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x44464646, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x46464646, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x42444646, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x46464646, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x42444646, },
+	{ 1, 0, 2, 0x00000cd8, 0xffffffff, 0x46464646, },
+	{ 1, 0, 2, 0x00000cdc, 0xffffffff, 0x42444646, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x46464646, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x42444646, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x46463840, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x46464646, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x38404244, },
+	{ 1, 0, 2, 0x00000ce0, 0xffffffff, 0x46464646, },
+	{ 1, 0, 2, 0x00000ce4, 0xffffffff, 0x42444646, },
+	{ 1, 0, 2, 0x00000ce8, 0x0000ffff, 0x38383840, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x46464646, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x44464646, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x46464646, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x42444646, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x46464646, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x42444646, },
+	{ 1, 1, 2, 0x00000ed8, 0xffffffff, 0x46464646, },
+	{ 1, 1, 2, 0x00000edc, 0xffffffff, 0x42444646, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x46464646, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x42444646, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x46463840, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x46464646, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x38404244, },
+	{ 1, 1, 2, 0x00000ee0, 0xffffffff, 0x46464646, },
+	{ 1, 1, 2, 0x00000ee4, 0xffffffff, 0x42444646, },
+	{ 1, 1, 2, 0x00000ee8, 0x0000ffff, 0x38383840, },
+	{ 1, 2, 0, 0x00001824, 0xffffffff, 0x46464646, },
+	{ 1, 2, 0, 0x00001828, 0xffffffff, 0x44464646, },
+	{ 1, 2, 0, 0x0000182c, 0xffffffff, 0x46464646, },
+	{ 1, 2, 0, 0x00001830, 0xffffffff, 0x42444646, },
+	{ 1, 2, 1, 0x00001834, 0xffffffff, 0x46464646, },
+	{ 1, 2, 1, 0x00001838, 0xffffffff, 0x42444646, },
+	{ 1, 2, 2, 0x000018d8, 0xffffffff, 0x46464646, },
+	{ 1, 2, 2, 0x000018dc, 0xffffffff, 0x42444646, },
+	{ 1, 2, 0, 0x0000183c, 0xffffffff, 0x46464646, },
+	{ 1, 2, 0, 0x00001840, 0xffffffff, 0x42444646, },
+	{ 1, 2, 0, 0x00001844, 0xffffffff, 0x46463840, },
+	{ 1, 2, 1, 0x00001848, 0xffffffff, 0x46464646, },
+	{ 1, 2, 1, 0x0000184c, 0xffffffff, 0x38404244, },
+	{ 1, 2, 2, 0x000018e0, 0xffffffff, 0x46464646, },
+	{ 1, 2, 2, 0x000018e4, 0xffffffff, 0x42444646, },
+	{ 1, 2, 2, 0x000018e8, 0x0000ffff, 0x38383840, },
+	{ 1, 3, 0, 0x00001a24, 0xffffffff, 0x46464646, },
+	{ 1, 3, 0, 0x00001a28, 0xffffffff, 0x44464646, },
+	{ 1, 3, 0, 0x00001a2c, 0xffffffff, 0x46464646, },
+	{ 1, 3, 0, 0x00001a30, 0xffffffff, 0x42444646, },
+	{ 1, 3, 1, 0x00001a34, 0xffffffff, 0x46464646, },
+	{ 1, 3, 1, 0x00001a38, 0xffffffff, 0x42444646, },
+	{ 1, 3, 2, 0x00001ad8, 0xffffffff, 0x46464646, },
+	{ 1, 3, 2, 0x00001adc, 0xffffffff, 0x42444646, },
+	{ 1, 3, 0, 0x00001a3c, 0xffffffff, 0x46464646, },
+	{ 1, 3, 0, 0x00001a40, 0xffffffff, 0x42444646, },
+	{ 1, 3, 0, 0x00001a44, 0xffffffff, 0x46463840, },
+	{ 1, 3, 1, 0x00001a48, 0xffffffff, 0x46464646, },
+	{ 1, 3, 1, 0x00001a4c, 0xffffffff, 0x38404244, },
+	{ 1, 3, 2, 0x00001ae0, 0xffffffff, 0x46464646, },
+	{ 1, 3, 2, 0x00001ae4, 0xffffffff, 0x42444646, },
+	{ 1, 3, 2, 0x00001ae8, 0x0000ffff, 0x38383840, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8814a_bb_pg_type3);
+
+static const struct rtw_phy_pg_cfg_pair rtw8814a_bb_pg_type4[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x42424242, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x42424242, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x36384042, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x42424242, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x34363840, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x42424242, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x34363840, },
+	{ 0, 0, 2, 0x00000cd8, 0xffffffff, 0x42424242, },
+	{ 0, 0, 2, 0x00000cdc, 0xffffffff, 0x34363840, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x42424242, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x34363840, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x42423032, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x38404242, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x30323436, },
+	{ 0, 0, 2, 0x00000ce0, 0xffffffff, 0x42424242, },
+	{ 0, 0, 2, 0x00000ce4, 0xffffffff, 0x34363840, },
+	{ 0, 0, 2, 0x00000ce8, 0x0000ffff, 0x30303032, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x42424242, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x42424242, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x36384042, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x42424242, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x34363840, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x42424242, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x34363840, },
+	{ 0, 1, 2, 0x00000ed8, 0xffffffff, 0x42424242, },
+	{ 0, 1, 2, 0x00000edc, 0xffffffff, 0x34363840, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x42424242, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x34363840, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x42423032, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x38404242, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x30323436, },
+	{ 0, 1, 2, 0x00000ee0, 0xffffffff, 0x42424242, },
+	{ 0, 1, 2, 0x00000ee4, 0xffffffff, 0x34363840, },
+	{ 0, 1, 2, 0x00000ee8, 0x0000ffff, 0x30303032, },
+	{ 0, 2, 0, 0x00001820, 0xffffffff, 0x42424242, },
+	{ 0, 2, 0, 0x00001824, 0xffffffff, 0x42424242, },
+	{ 0, 2, 0, 0x00001828, 0xffffffff, 0x36384042, },
+	{ 0, 2, 0, 0x0000182c, 0xffffffff, 0x42424242, },
+	{ 0, 2, 0, 0x00001830, 0xffffffff, 0x34363840, },
+	{ 0, 2, 1, 0x00001834, 0xffffffff, 0x42424242, },
+	{ 0, 2, 1, 0x00001838, 0xffffffff, 0x34363840, },
+	{ 0, 2, 2, 0x000018d8, 0xffffffff, 0x42424242, },
+	{ 0, 2, 2, 0x000018dc, 0xffffffff, 0x34363840, },
+	{ 0, 2, 0, 0x0000183c, 0xffffffff, 0x42424242, },
+	{ 0, 2, 0, 0x00001840, 0xffffffff, 0x34363840, },
+	{ 0, 2, 0, 0x00001844, 0xffffffff, 0x42423032, },
+	{ 0, 2, 1, 0x00001848, 0xffffffff, 0x38404242, },
+	{ 0, 2, 1, 0x0000184c, 0xffffffff, 0x30323436, },
+	{ 0, 2, 2, 0x000018e0, 0xffffffff, 0x42424242, },
+	{ 0, 2, 2, 0x000018e4, 0xffffffff, 0x34363840, },
+	{ 0, 2, 2, 0x000018e8, 0x0000ffff, 0x30303032, },
+	{ 0, 3, 0, 0x00001a20, 0xffffffff, 0x42424242, },
+	{ 0, 3, 0, 0x00001a24, 0xffffffff, 0x42424242, },
+	{ 0, 3, 0, 0x00001a28, 0xffffffff, 0x36384042, },
+	{ 0, 3, 0, 0x00001a2c, 0xffffffff, 0x42424242, },
+	{ 0, 3, 0, 0x00001a30, 0xffffffff, 0x34363840, },
+	{ 0, 3, 1, 0x00001a34, 0xffffffff, 0x42424242, },
+	{ 0, 3, 1, 0x00001a38, 0xffffffff, 0x34363840, },
+	{ 0, 3, 2, 0x00001ad8, 0xffffffff, 0x42424242, },
+	{ 0, 3, 2, 0x00001adc, 0xffffffff, 0x34363840, },
+	{ 0, 3, 0, 0x00001a3c, 0xffffffff, 0x42424242, },
+	{ 0, 3, 0, 0x00001a40, 0xffffffff, 0x34363840, },
+	{ 0, 3, 0, 0x00001a44, 0xffffffff, 0x42423032, },
+	{ 0, 3, 1, 0x00001a48, 0xffffffff, 0x38404242, },
+	{ 0, 3, 1, 0x00001a4c, 0xffffffff, 0x30323436, },
+	{ 0, 3, 2, 0x00001ae0, 0xffffffff, 0x42424242, },
+	{ 0, 3, 2, 0x00001ae4, 0xffffffff, 0x34363840, },
+	{ 0, 3, 2, 0x00001ae8, 0x0000ffff, 0x30303032, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x42424242, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x36384042, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x42424242, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x34363840, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x42424242, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x34363840, },
+	{ 1, 0, 2, 0x00000cd8, 0xffffffff, 0x42424242, },
+	{ 1, 0, 2, 0x00000cdc, 0xffffffff, 0x34363840, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x42424242, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x34363840, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x42423032, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x38404242, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x30323436, },
+	{ 1, 0, 2, 0x00000ce0, 0xffffffff, 0x42424242, },
+	{ 1, 0, 2, 0x00000ce4, 0xffffffff, 0x34363840, },
+	{ 1, 0, 2, 0x00000ce8, 0x0000ffff, 0x30303032, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x42424242, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x36384042, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x42424242, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x34363840, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x42424242, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x34363840, },
+	{ 1, 1, 2, 0x00000ed8, 0xffffffff, 0x42424242, },
+	{ 1, 1, 2, 0x00000edc, 0xffffffff, 0x34363840, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x42424242, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x34363840, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x42423032, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x38404242, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x30323436, },
+	{ 1, 1, 2, 0x00000ee0, 0xffffffff, 0x42424242, },
+	{ 1, 1, 2, 0x00000ee4, 0xffffffff, 0x34363840, },
+	{ 1, 1, 2, 0x00000ee8, 0x0000ffff, 0x30303032, },
+	{ 1, 2, 0, 0x00001824, 0xffffffff, 0x42424242, },
+	{ 1, 2, 0, 0x00001828, 0xffffffff, 0x36384042, },
+	{ 1, 2, 0, 0x0000182c, 0xffffffff, 0x42424242, },
+	{ 1, 2, 0, 0x00001830, 0xffffffff, 0x34363840, },
+	{ 1, 2, 1, 0x00001834, 0xffffffff, 0x42424242, },
+	{ 1, 2, 1, 0x00001838, 0xffffffff, 0x34363840, },
+	{ 1, 2, 2, 0x000018d8, 0xffffffff, 0x42424242, },
+	{ 1, 2, 2, 0x000018dc, 0xffffffff, 0x34363840, },
+	{ 1, 2, 0, 0x0000183c, 0xffffffff, 0x42424242, },
+	{ 1, 2, 0, 0x00001840, 0xffffffff, 0x34363840, },
+	{ 1, 2, 0, 0x00001844, 0xffffffff, 0x42423032, },
+	{ 1, 2, 1, 0x00001848, 0xffffffff, 0x38404242, },
+	{ 1, 2, 1, 0x0000184c, 0xffffffff, 0x30323436, },
+	{ 1, 2, 2, 0x000018e0, 0xffffffff, 0x42424242, },
+	{ 1, 2, 2, 0x000018e4, 0xffffffff, 0x34363840, },
+	{ 1, 2, 2, 0x000018e8, 0x0000ffff, 0x30303032, },
+	{ 1, 3, 0, 0x00001a24, 0xffffffff, 0x42424242, },
+	{ 1, 3, 0, 0x00001a28, 0xffffffff, 0x36384042, },
+	{ 1, 3, 0, 0x00001a2c, 0xffffffff, 0x42424242, },
+	{ 1, 3, 0, 0x00001a30, 0xffffffff, 0x34363840, },
+	{ 1, 3, 1, 0x00001a34, 0xffffffff, 0x42424242, },
+	{ 1, 3, 1, 0x00001a38, 0xffffffff, 0x34363840, },
+	{ 1, 3, 2, 0x00001ad8, 0xffffffff, 0x42424242, },
+	{ 1, 3, 2, 0x00001adc, 0xffffffff, 0x34363840, },
+	{ 1, 3, 0, 0x00001a3c, 0xffffffff, 0x42424242, },
+	{ 1, 3, 0, 0x00001a40, 0xffffffff, 0x34363840, },
+	{ 1, 3, 0, 0x00001a44, 0xffffffff, 0x42423032, },
+	{ 1, 3, 1, 0x00001a48, 0xffffffff, 0x38404242, },
+	{ 1, 3, 1, 0x00001a4c, 0xffffffff, 0x30323436, },
+	{ 1, 3, 2, 0x00001ae0, 0xffffffff, 0x42424242, },
+	{ 1, 3, 2, 0x00001ae4, 0xffffffff, 0x34363840, },
+	{ 1, 3, 2, 0x00001ae8, 0x0000ffff, 0x30303032, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8814a_bb_pg_type4);
+
+static const struct rtw_phy_pg_cfg_pair rtw8814a_bb_pg_type5[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x48484848, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x46464646, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x44464646, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x46464646, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x42444646, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x44444444, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x40424444, },
+	{ 0, 0, 2, 0x00000cd8, 0xffffffff, 0x42424242, },
+	{ 0, 0, 2, 0x00000cdc, 0xffffffff, 0x38404242, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x46464646, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x42444646, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x44444040, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x44444444, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x38384042, },
+	{ 0, 0, 2, 0x00000ce0, 0xffffffff, 0x42424242, },
+	{ 0, 0, 2, 0x00000ce4, 0xffffffff, 0x38404242, },
+	{ 0, 0, 2, 0x00000ce8, 0x0000ffff, 0x20203636, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x48484848, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x46464646, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x44464646, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x46464646, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x42444646, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x44444444, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x40424444, },
+	{ 0, 1, 2, 0x00000ed8, 0xffffffff, 0x42424242, },
+	{ 0, 1, 2, 0x00000edc, 0xffffffff, 0x38404242, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x46464646, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x42444646, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x44444040, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x44444444, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x38384042, },
+	{ 0, 1, 2, 0x00000ee0, 0xffffffff, 0x42424242, },
+	{ 0, 1, 2, 0x00000ee4, 0xffffffff, 0x38404242, },
+	{ 0, 1, 2, 0x00000ee8, 0x0000ffff, 0x20203636, },
+	{ 0, 2, 0, 0x00001820, 0xffffffff, 0x48484848, },
+	{ 0, 2, 0, 0x00001824, 0xffffffff, 0x46464646, },
+	{ 0, 2, 0, 0x00001828, 0xffffffff, 0x44464646, },
+	{ 0, 2, 0, 0x0000182c, 0xffffffff, 0x46464646, },
+	{ 0, 2, 0, 0x00001830, 0xffffffff, 0x42444646, },
+	{ 0, 2, 1, 0x00001834, 0xffffffff, 0x44444444, },
+	{ 0, 2, 1, 0x00001838, 0xffffffff, 0x40424444, },
+	{ 0, 2, 2, 0x000018d8, 0xffffffff, 0x42424242, },
+	{ 0, 2, 2, 0x000018dc, 0xffffffff, 0x38404242, },
+	{ 0, 2, 0, 0x0000183c, 0xffffffff, 0x46464646, },
+	{ 0, 2, 0, 0x00001840, 0xffffffff, 0x42444646, },
+	{ 0, 2, 0, 0x00001844, 0xffffffff, 0x44444040, },
+	{ 0, 2, 1, 0x00001848, 0xffffffff, 0x44444444, },
+	{ 0, 2, 1, 0x0000184c, 0xffffffff, 0x38384042, },
+	{ 0, 2, 2, 0x000018e0, 0xffffffff, 0x42424242, },
+	{ 0, 2, 2, 0x000018e4, 0xffffffff, 0x38404242, },
+	{ 0, 2, 2, 0x000018e8, 0x0000ffff, 0x20203636, },
+	{ 0, 3, 0, 0x00001a20, 0xffffffff, 0x48484848, },
+	{ 0, 3, 0, 0x00001a24, 0xffffffff, 0x46464646, },
+	{ 0, 3, 0, 0x00001a28, 0xffffffff, 0x44464646, },
+	{ 0, 3, 0, 0x00001a2c, 0xffffffff, 0x46464646, },
+	{ 0, 3, 0, 0x00001a30, 0xffffffff, 0x42444646, },
+	{ 0, 3, 1, 0x00001a34, 0xffffffff, 0x44444444, },
+	{ 0, 3, 1, 0x00001a38, 0xffffffff, 0x40424444, },
+	{ 0, 3, 2, 0x00001ad8, 0xffffffff, 0x42424242, },
+	{ 0, 3, 2, 0x00001adc, 0xffffffff, 0x38404242, },
+	{ 0, 3, 0, 0x00001a3c, 0xffffffff, 0x46464646, },
+	{ 0, 3, 0, 0x00001a40, 0xffffffff, 0x42444646, },
+	{ 0, 3, 0, 0x00001a44, 0xffffffff, 0x44444040, },
+	{ 0, 3, 1, 0x00001a48, 0xffffffff, 0x44444444, },
+	{ 0, 3, 1, 0x00001a4c, 0xffffffff, 0x38384042, },
+	{ 0, 3, 2, 0x00001ae0, 0xffffffff, 0x42424242, },
+	{ 0, 3, 2, 0x00001ae4, 0xffffffff, 0x38404242, },
+	{ 0, 3, 2, 0x00001ae8, 0x0000ffff, 0x20203636, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x46464646, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x44464646, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x46464646, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x42444646, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x44444444, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x40424444, },
+	{ 1, 0, 2, 0x00000cd8, 0xffffffff, 0x42424242, },
+	{ 1, 0, 2, 0x00000cdc, 0xffffffff, 0x38404242, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x46464646, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x42444646, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x44443840, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x44444444, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x36384042, },
+	{ 1, 0, 2, 0x00000ce0, 0xffffffff, 0x42424242, },
+	{ 1, 0, 2, 0x00000ce4, 0xffffffff, 0x38404242, },
+	{ 1, 0, 2, 0x00000ce8, 0x0000ffff, 0x20203436, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x46464646, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x44464646, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x46464646, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x42444646, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x44444444, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x40424444, },
+	{ 1, 1, 2, 0x00000ed8, 0xffffffff, 0x42424242, },
+	{ 1, 1, 2, 0x00000edc, 0xffffffff, 0x38404242, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x46464646, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x42444646, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x44443840, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x44444444, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x36384042, },
+	{ 1, 1, 2, 0x00000ee0, 0xffffffff, 0x42424242, },
+	{ 1, 1, 2, 0x00000ee4, 0xffffffff, 0x38404242, },
+	{ 1, 1, 2, 0x00000ee8, 0x0000ffff, 0x20203436, },
+	{ 1, 2, 0, 0x00001824, 0xffffffff, 0x46464646, },
+	{ 1, 2, 0, 0x00001828, 0xffffffff, 0x44464646, },
+	{ 1, 2, 0, 0x0000182c, 0xffffffff, 0x46464646, },
+	{ 1, 2, 0, 0x00001830, 0xffffffff, 0x42444646, },
+	{ 1, 2, 1, 0x00001834, 0xffffffff, 0x44444444, },
+	{ 1, 2, 1, 0x00001838, 0xffffffff, 0x40424444, },
+	{ 1, 2, 2, 0x000018d8, 0xffffffff, 0x42424242, },
+	{ 1, 2, 2, 0x000018dc, 0xffffffff, 0x38404242, },
+	{ 1, 2, 0, 0x0000183c, 0xffffffff, 0x46464646, },
+	{ 1, 2, 0, 0x00001840, 0xffffffff, 0x42444646, },
+	{ 1, 2, 0, 0x00001844, 0xffffffff, 0x44443840, },
+	{ 1, 2, 1, 0x00001848, 0xffffffff, 0x44444444, },
+	{ 1, 2, 1, 0x0000184c, 0xffffffff, 0x36384042, },
+	{ 1, 2, 2, 0x000018e0, 0xffffffff, 0x42424242, },
+	{ 1, 2, 2, 0x000018e4, 0xffffffff, 0x38404242, },
+	{ 1, 2, 2, 0x000018e8, 0x0000ffff, 0x20203436, },
+	{ 1, 3, 0, 0x00001a24, 0xffffffff, 0x46464646, },
+	{ 1, 3, 0, 0x00001a28, 0xffffffff, 0x44464646, },
+	{ 1, 3, 0, 0x00001a2c, 0xffffffff, 0x46464646, },
+	{ 1, 3, 0, 0x00001a30, 0xffffffff, 0x42444646, },
+	{ 1, 3, 1, 0x00001a34, 0xffffffff, 0x44444444, },
+	{ 1, 3, 1, 0x00001a38, 0xffffffff, 0x40424444, },
+	{ 1, 3, 2, 0x00001ad8, 0xffffffff, 0x42424242, },
+	{ 1, 3, 2, 0x00001adc, 0xffffffff, 0x38404242, },
+	{ 1, 3, 0, 0x00001a3c, 0xffffffff, 0x46464646, },
+	{ 1, 3, 0, 0x00001a40, 0xffffffff, 0x42444646, },
+	{ 1, 3, 0, 0x00001a44, 0xffffffff, 0x44443840, },
+	{ 1, 3, 1, 0x00001a48, 0xffffffff, 0x44444444, },
+	{ 1, 3, 1, 0x00001a4c, 0xffffffff, 0x36384042, },
+	{ 1, 3, 2, 0x00001ae0, 0xffffffff, 0x42424242, },
+	{ 1, 3, 2, 0x00001ae4, 0xffffffff, 0x38404242, },
+	{ 1, 3, 2, 0x00001ae8, 0x0000ffff, 0x20203436, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8814a_bb_pg_type5);
+
+static const struct rtw_phy_pg_cfg_pair rtw8814a_bb_pg_type7[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x30323434, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x28303234, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x34343434, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x28303234, },
+	{ 0, 0, 2, 0x00000cd8, 0xffffffff, 0x34343434, },
+	{ 0, 0, 2, 0x00000cdc, 0xffffffff, 0x28303234, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x28303234, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x34342426, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x32343434, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x24262830, },
+	{ 0, 0, 2, 0x00000ce0, 0xffffffff, 0x34343434, },
+	{ 0, 0, 2, 0x00000ce4, 0xffffffff, 0x28303234, },
+	{ 0, 0, 2, 0x00000ce8, 0x0000ffff, 0x24263434, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x30323434, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x28303234, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x34343434, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x28303234, },
+	{ 0, 1, 2, 0x00000ed8, 0xffffffff, 0x34343434, },
+	{ 0, 1, 2, 0x00000edc, 0xffffffff, 0x28303234, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x28303234, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x34342426, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x32343434, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x24262830, },
+	{ 0, 1, 2, 0x00000ee0, 0xffffffff, 0x34343434, },
+	{ 0, 1, 2, 0x00000ee4, 0xffffffff, 0x28303234, },
+	{ 0, 1, 2, 0x00000ee8, 0x0000ffff, 0x24263434, },
+	{ 0, 2, 0, 0x00001820, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001824, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001828, 0xffffffff, 0x30323434, },
+	{ 0, 2, 0, 0x0000182c, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001830, 0xffffffff, 0x28303234, },
+	{ 0, 2, 1, 0x00001834, 0xffffffff, 0x34343434, },
+	{ 0, 2, 1, 0x00001838, 0xffffffff, 0x28303234, },
+	{ 0, 2, 2, 0x000018d8, 0xffffffff, 0x34343434, },
+	{ 0, 2, 2, 0x000018dc, 0xffffffff, 0x28303234, },
+	{ 0, 2, 0, 0x0000183c, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001840, 0xffffffff, 0x28303234, },
+	{ 0, 2, 0, 0x00001844, 0xffffffff, 0x34342426, },
+	{ 0, 2, 1, 0x00001848, 0xffffffff, 0x32343434, },
+	{ 0, 2, 1, 0x0000184c, 0xffffffff, 0x24262830, },
+	{ 0, 2, 2, 0x000018e0, 0xffffffff, 0x34343434, },
+	{ 0, 2, 2, 0x000018e4, 0xffffffff, 0x28303234, },
+	{ 0, 2, 2, 0x000018e8, 0x0000ffff, 0x24263434, },
+	{ 0, 3, 0, 0x00001a20, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a24, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a28, 0xffffffff, 0x30323434, },
+	{ 0, 3, 0, 0x00001a2c, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a30, 0xffffffff, 0x28303234, },
+	{ 0, 3, 1, 0x00001a34, 0xffffffff, 0x34343434, },
+	{ 0, 3, 1, 0x00001a38, 0xffffffff, 0x28303234, },
+	{ 0, 3, 2, 0x00001ad8, 0xffffffff, 0x34343434, },
+	{ 0, 3, 2, 0x00001adc, 0xffffffff, 0x28303234, },
+	{ 0, 3, 0, 0x00001a3c, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a40, 0xffffffff, 0x28303234, },
+	{ 0, 3, 0, 0x00001a44, 0xffffffff, 0x34342426, },
+	{ 0, 3, 1, 0x00001a48, 0xffffffff, 0x32343434, },
+	{ 0, 3, 1, 0x00001a4c, 0xffffffff, 0x24262830, },
+	{ 0, 3, 2, 0x00001ae0, 0xffffffff, 0x34343434, },
+	{ 0, 3, 2, 0x00001ae4, 0xffffffff, 0x28303234, },
+	{ 0, 3, 2, 0x00001ae8, 0x0000ffff, 0x24263434, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x34343434, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x30323434, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x34343434, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x28303234, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x34343434, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x28303234, },
+	{ 1, 0, 2, 0x00000cd8, 0xffffffff, 0x34343434, },
+	{ 1, 0, 2, 0x00000cdc, 0xffffffff, 0x28303234, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x34343434, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x28303234, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x34342426, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x32343434, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x24262830, },
+	{ 1, 0, 2, 0x00000ce0, 0xffffffff, 0x34343434, },
+	{ 1, 0, 2, 0x00000ce4, 0xffffffff, 0x28303234, },
+	{ 1, 0, 2, 0x00000ce8, 0x0000ffff, 0x24263434, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x34343434, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x30323434, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x34343434, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x28303234, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x34343434, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x28303234, },
+	{ 1, 1, 2, 0x00000ed8, 0xffffffff, 0x34343434, },
+	{ 1, 1, 2, 0x00000edc, 0xffffffff, 0x28303234, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x34343434, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x28303234, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x34342426, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x32343434, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x24262830, },
+	{ 1, 1, 2, 0x00000ee0, 0xffffffff, 0x34343434, },
+	{ 1, 1, 2, 0x00000ee4, 0xffffffff, 0x28303234, },
+	{ 1, 1, 2, 0x00000ee8, 0x0000ffff, 0x24263434, },
+	{ 1, 2, 0, 0x00001824, 0xffffffff, 0x34343434, },
+	{ 1, 2, 0, 0x00001828, 0xffffffff, 0x30323434, },
+	{ 1, 2, 0, 0x0000182c, 0xffffffff, 0x34343434, },
+	{ 1, 2, 0, 0x00001830, 0xffffffff, 0x28303234, },
+	{ 1, 2, 1, 0x00001834, 0xffffffff, 0x34343434, },
+	{ 1, 2, 1, 0x00001838, 0xffffffff, 0x28303234, },
+	{ 1, 2, 2, 0x000018d8, 0xffffffff, 0x34343434, },
+	{ 1, 2, 2, 0x000018dc, 0xffffffff, 0x28303234, },
+	{ 1, 2, 0, 0x0000183c, 0xffffffff, 0x34343434, },
+	{ 1, 2, 0, 0x00001840, 0xffffffff, 0x28303234, },
+	{ 1, 2, 0, 0x00001844, 0xffffffff, 0x34342426, },
+	{ 1, 2, 1, 0x00001848, 0xffffffff, 0x32343434, },
+	{ 1, 2, 1, 0x0000184c, 0xffffffff, 0x24262830, },
+	{ 1, 2, 2, 0x000018e0, 0xffffffff, 0x34343434, },
+	{ 1, 2, 2, 0x000018e4, 0xffffffff, 0x28303234, },
+	{ 1, 2, 2, 0x000018e8, 0x0000ffff, 0x24263434, },
+	{ 1, 3, 0, 0x00001a24, 0xffffffff, 0x34343434, },
+	{ 1, 3, 0, 0x00001a28, 0xffffffff, 0x30323434, },
+	{ 1, 3, 0, 0x00001a2c, 0xffffffff, 0x34343434, },
+	{ 1, 3, 0, 0x00001a30, 0xffffffff, 0x28303234, },
+	{ 1, 3, 1, 0x00001a34, 0xffffffff, 0x34343434, },
+	{ 1, 3, 1, 0x00001a38, 0xffffffff, 0x28303234, },
+	{ 1, 3, 2, 0x00001ad8, 0xffffffff, 0x34343434, },
+	{ 1, 3, 2, 0x00001adc, 0xffffffff, 0x28303234, },
+	{ 1, 3, 0, 0x00001a3c, 0xffffffff, 0x34343434, },
+	{ 1, 3, 0, 0x00001a40, 0xffffffff, 0x28303234, },
+	{ 1, 3, 0, 0x00001a44, 0xffffffff, 0x34342426, },
+	{ 1, 3, 1, 0x00001a48, 0xffffffff, 0x32343434, },
+	{ 1, 3, 1, 0x00001a4c, 0xffffffff, 0x24262830, },
+	{ 1, 3, 2, 0x00001ae0, 0xffffffff, 0x34343434, },
+	{ 1, 3, 2, 0x00001ae4, 0xffffffff, 0x28303234, },
+	{ 1, 3, 2, 0x00001ae8, 0x0000ffff, 0x24263434, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8814a_bb_pg_type7);
+
+static const struct rtw_phy_pg_cfg_pair rtw8814a_bb_pg_type8[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x43434343, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x43434343, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x35373941, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x43434343, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x33353739, },
+	{ 0, 0, 1, 0x00000c34, 0xffffffff, 0x43434343, },
+	{ 0, 0, 1, 0x00000c38, 0xffffffff, 0x31333537, },
+	{ 0, 0, 2, 0x00000cd8, 0xffffffff, 0x43434343, },
+	{ 0, 0, 2, 0x00000cdc, 0xffffffff, 0x29313335, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x34343434, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x28303234, },
+	{ 0, 0, 0, 0x00000c44, 0xffffffff, 0x32322426, },
+	{ 0, 0, 1, 0x00000c48, 0xffffffff, 0x30323232, },
+	{ 0, 0, 1, 0x00000c4c, 0xffffffff, 0x22242628, },
+	{ 0, 0, 2, 0x00000ce0, 0xffffffff, 0x30303030, },
+	{ 0, 0, 2, 0x00000ce4, 0xffffffff, 0x24262830, },
+	{ 0, 0, 2, 0x00000ce8, 0x0000ffff, 0x20222222, },
+	{ 0, 1, 0, 0x00000e20, 0xffffffff, 0x43434343, },
+	{ 0, 1, 0, 0x00000e24, 0xffffffff, 0x43434343, },
+	{ 0, 1, 0, 0x00000e28, 0xffffffff, 0x35373941, },
+	{ 0, 1, 0, 0x00000e2c, 0xffffffff, 0x41434343, },
+	{ 0, 1, 0, 0x00000e30, 0xffffffff, 0x33353739, },
+	{ 0, 1, 1, 0x00000e34, 0xffffffff, 0x39414141, },
+	{ 0, 1, 1, 0x00000e38, 0xffffffff, 0x31333537, },
+	{ 0, 1, 2, 0x00000ed8, 0xffffffff, 0x37393939, },
+	{ 0, 1, 2, 0x00000edc, 0xffffffff, 0x29313335, },
+	{ 0, 1, 0, 0x00000e3c, 0xffffffff, 0x34343434, },
+	{ 0, 1, 0, 0x00000e40, 0xffffffff, 0x28303234, },
+	{ 0, 1, 0, 0x00000e44, 0xffffffff, 0x32322426, },
+	{ 0, 1, 1, 0x00000e48, 0xffffffff, 0x30323232, },
+	{ 0, 1, 1, 0x00000e4c, 0xffffffff, 0x22242628, },
+	{ 0, 1, 2, 0x00000ee0, 0xffffffff, 0x30303030, },
+	{ 0, 1, 2, 0x00000ee4, 0xffffffff, 0x24262830, },
+	{ 0, 1, 2, 0x00000ee8, 0x0000ffff, 0x20222222, },
+	{ 0, 2, 0, 0x00001820, 0xffffffff, 0x43434343, },
+	{ 0, 2, 0, 0x00001824, 0xffffffff, 0x43434343, },
+	{ 0, 2, 0, 0x00001828, 0xffffffff, 0x35373941, },
+	{ 0, 2, 0, 0x0000182c, 0xffffffff, 0x41434343, },
+	{ 0, 2, 0, 0x00001830, 0xffffffff, 0x33353739, },
+	{ 0, 2, 1, 0x00001834, 0xffffffff, 0x39414141, },
+	{ 0, 2, 1, 0x00001838, 0xffffffff, 0x31333537, },
+	{ 0, 2, 2, 0x000018d8, 0xffffffff, 0x37393939, },
+	{ 0, 2, 2, 0x000018dc, 0xffffffff, 0x29313335, },
+	{ 0, 2, 0, 0x0000183c, 0xffffffff, 0x34343434, },
+	{ 0, 2, 0, 0x00001840, 0xffffffff, 0x28303234, },
+	{ 0, 2, 0, 0x00001844, 0xffffffff, 0x32322426, },
+	{ 0, 2, 1, 0x00001848, 0xffffffff, 0x30323232, },
+	{ 0, 2, 1, 0x0000184c, 0xffffffff, 0x22242628, },
+	{ 0, 2, 2, 0x000018e0, 0xffffffff, 0x30303030, },
+	{ 0, 2, 2, 0x000018e4, 0xffffffff, 0x24262830, },
+	{ 0, 2, 2, 0x000018e8, 0x0000ffff, 0x20222222, },
+	{ 0, 3, 0, 0x00001a20, 0xffffffff, 0x43434343, },
+	{ 0, 3, 0, 0x00001a24, 0xffffffff, 0x43434343, },
+	{ 0, 3, 0, 0x00001a28, 0xffffffff, 0x35373941, },
+	{ 0, 3, 0, 0x00001a2c, 0xffffffff, 0x41434343, },
+	{ 0, 3, 0, 0x00001a30, 0xffffffff, 0x33353739, },
+	{ 0, 3, 1, 0x00001a34, 0xffffffff, 0x39414141, },
+	{ 0, 3, 1, 0x00001a38, 0xffffffff, 0x31333537, },
+	{ 0, 3, 2, 0x00001ad8, 0xffffffff, 0x37393939, },
+	{ 0, 3, 2, 0x00001adc, 0xffffffff, 0x29313335, },
+	{ 0, 3, 0, 0x00001a3c, 0xffffffff, 0x34343434, },
+	{ 0, 3, 0, 0x00001a40, 0xffffffff, 0x28303234, },
+	{ 0, 3, 0, 0x00001a44, 0xffffffff, 0x32322426, },
+	{ 0, 3, 1, 0x00001a48, 0xffffffff, 0x30323232, },
+	{ 0, 3, 1, 0x00001a4c, 0xffffffff, 0x22242628, },
+	{ 0, 3, 2, 0x00001ae0, 0xffffffff, 0x30303030, },
+	{ 0, 3, 2, 0x00001ae4, 0xffffffff, 0x24262830, },
+	{ 0, 3, 2, 0x00001ae8, 0x0000ffff, 0x20222222, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x46464646, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x39414345, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x46464646, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x38404244, },
+	{ 1, 0, 1, 0x00000c34, 0xffffffff, 0x46464646, },
+	{ 1, 0, 1, 0x00000c38, 0xffffffff, 0x36384042, },
+	{ 1, 0, 2, 0x00000cd8, 0xffffffff, 0x46464646, },
+	{ 1, 0, 2, 0x00000cdc, 0xffffffff, 0x34363840, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x46464646, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x38404244, },
+	{ 1, 0, 0, 0x00000c44, 0xffffffff, 0x46463738, },
+	{ 1, 0, 1, 0x00000c48, 0xffffffff, 0x42444646, },
+	{ 1, 0, 1, 0x00000c4c, 0xffffffff, 0x35373840, },
+	{ 1, 0, 2, 0x00000ce0, 0xffffffff, 0x46464646, },
+	{ 1, 0, 2, 0x00000ce4, 0xffffffff, 0x37394143, },
+	{ 1, 0, 2, 0x00000ce8, 0x0000ffff, 0x33333335, },
+	{ 1, 1, 0, 0x00000e24, 0xffffffff, 0x46464646, },
+	{ 1, 1, 0, 0x00000e28, 0xffffffff, 0x39414345, },
+	{ 1, 1, 0, 0x00000e2c, 0xffffffff, 0x46464646, },
+	{ 1, 1, 0, 0x00000e30, 0xffffffff, 0x38404244, },
+	{ 1, 1, 1, 0x00000e34, 0xffffffff, 0x46464646, },
+	{ 1, 1, 1, 0x00000e38, 0xffffffff, 0x36384042, },
+	{ 1, 1, 2, 0x00000ed8, 0xffffffff, 0x46464646, },
+	{ 1, 1, 2, 0x00000edc, 0xffffffff, 0x34363840, },
+	{ 1, 1, 0, 0x00000e3c, 0xffffffff, 0x46464646, },
+	{ 1, 1, 0, 0x00000e40, 0xffffffff, 0x38404244, },
+	{ 1, 1, 0, 0x00000e44, 0xffffffff, 0x46463738, },
+	{ 1, 1, 1, 0x00000e48, 0xffffffff, 0x42444646, },
+	{ 1, 1, 1, 0x00000e4c, 0xffffffff, 0x35373840, },
+	{ 1, 1, 2, 0x00000ee0, 0xffffffff, 0x46464646, },
+	{ 1, 1, 2, 0x00000ee4, 0xffffffff, 0x37394143, },
+	{ 1, 1, 2, 0x00000ee8, 0x0000ffff, 0x33333335, },
+	{ 1, 2, 0, 0x00001824, 0xffffffff, 0x46464646, },
+	{ 1, 2, 0, 0x00001828, 0xffffffff, 0x39414345, },
+	{ 1, 2, 0, 0x0000182c, 0xffffffff, 0x46464646, },
+	{ 1, 2, 0, 0x00001830, 0xffffffff, 0x38404244, },
+	{ 1, 2, 1, 0x00001834, 0xffffffff, 0x46464646, },
+	{ 1, 2, 1, 0x00001838, 0xffffffff, 0x36384042, },
+	{ 1, 2, 2, 0x000018d8, 0xffffffff, 0x46464646, },
+	{ 1, 2, 2, 0x000018dc, 0xffffffff, 0x34363840, },
+	{ 1, 2, 0, 0x0000183c, 0xffffffff, 0x46464646, },
+	{ 1, 2, 0, 0x00001840, 0xffffffff, 0x38404244, },
+	{ 1, 2, 0, 0x00001844, 0xffffffff, 0x46463738, },
+	{ 1, 2, 1, 0x00001848, 0xffffffff, 0x42444646, },
+	{ 1, 2, 1, 0x0000184c, 0xffffffff, 0x35373840, },
+	{ 1, 2, 2, 0x000018e0, 0xffffffff, 0x46464646, },
+	{ 1, 2, 2, 0x000018e4, 0xffffffff, 0x37394143, },
+	{ 1, 2, 2, 0x000018e8, 0x0000ffff, 0x33333335, },
+	{ 1, 3, 0, 0x00001a24, 0xffffffff, 0x46464646, },
+	{ 1, 3, 0, 0x00001a28, 0xffffffff, 0x39414345, },
+	{ 1, 3, 0, 0x00001a2c, 0xffffffff, 0x46464646, },
+	{ 1, 3, 0, 0x00001a30, 0xffffffff, 0x38404244, },
+	{ 1, 3, 1, 0x00001a34, 0xffffffff, 0x46464646, },
+	{ 1, 3, 1, 0x00001a38, 0xffffffff, 0x36384042, },
+	{ 1, 3, 2, 0x00001ad8, 0xffffffff, 0x46464646, },
+	{ 1, 3, 2, 0x00001adc, 0xffffffff, 0x34363840, },
+	{ 1, 3, 0, 0x00001a3c, 0xffffffff, 0x46464646, },
+	{ 1, 3, 0, 0x00001a40, 0xffffffff, 0x38404244, },
+	{ 1, 3, 0, 0x00001a44, 0xffffffff, 0x46463738, },
+	{ 1, 3, 1, 0x00001a48, 0xffffffff, 0x42444646, },
+	{ 1, 3, 1, 0x00001a4c, 0xffffffff, 0x35373840, },
+	{ 1, 3, 2, 0x00001ae0, 0xffffffff, 0x46464646, },
+	{ 1, 3, 2, 0x00001ae4, 0xffffffff, 0x37394143, },
+	{ 1, 3, 2, 0x00001ae8, 0x0000ffff, 0x33333335, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8814a_bb_pg_type8);
+
+static const u32 rtw8814a_rf_a[] = {
+		0x018, 0x00013124,
+		0x040, 0x00000C00,
+		0x058, 0x00000F98,
+		0x07F, 0x00068004,
+		0x0B0, 0x000FFFFE,
+		0x0B1, 0x0003FF48,
+		0x0B2, 0x0006AA3F,
+		0x0B3, 0x000FFC9A,
+		0x0B4, 0x0000A78F,
+		0x0B5, 0x00000A3F,
+		0x0B6, 0x0000C09C,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x0B7, 0x00030008,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x0B7, 0x00030008,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x0B7, 0x00030008,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x0B7, 0x00030008,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x0B7, 0x00030008,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x0B7, 0x00030008,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x0B7, 0x00030008,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x0B7, 0x00030008,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x0B7, 0x00030008,
+	0xA0000000,	0x00000000,
+		0x0B7, 0x0003000C,
+	0xB0000000,	0x00000000,
+		0x0B8, 0x0007400E,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0xA0000000,	0x00000000,
+		0x0B9, 0x000FBF50,
+	0xB0000000,	0x00000000,
+		0x0BA, 0x00050780,
+		0x0BB, 0x00000000,
+		0x0BC, 0x00040009,
+		0x0BD, 0x00000000,
+		0x0BE, 0x00000000,
+		0x0BF, 0x00000000,
+		0x0EF, 0x00020000,
+		0x03E, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03F, 0x00030000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03F, 0x00030000,
+	0xA0000000,	0x00000000,
+		0x03F, 0x00030000,
+	0xB0000000,	0x00000000,
+		0x03E, 0x00020000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03F, 0x00040000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03F, 0x00040000,
+	0xA0000000,	0x00000000,
+		0x03F, 0x00040000,
+	0xB0000000,	0x00000000,
+		0x03E, 0x00040000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03F, 0x00030000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03F, 0x00030000,
+	0xA0000000,	0x00000000,
+		0x03F, 0x00030000,
+	0xB0000000,	0x00000000,
+		0x03E, 0x00060000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03F, 0x00030000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03F, 0x00030000,
+	0xA0000000,	0x00000000,
+		0x03F, 0x00030000,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x00010000,
+		0x03E, 0x00000000,
+		0x03F, 0x00006800,
+		0x03E, 0x00000080,
+		0x03F, 0x00006000,
+		0x03E, 0x00000100,
+		0x03F, 0x00004800,
+		0x03E, 0x00000180,
+		0x03F, 0x00004000,
+		0x03E, 0x00000200,
+		0x03F, 0x00004000,
+		0x03E, 0x00000280,
+		0x03F, 0x00002800,
+		0x03E, 0x00000300,
+		0x03F, 0x00002800,
+		0x03E, 0x00000380,
+		0x03F, 0x00002000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x00040000,
+		0x03E, 0x00000000,
+		0x03F, 0x000000BC,
+		0x03E, 0x00000040,
+		0x03F, 0x00000053,
+		0x03E, 0x00000050,
+		0x03F, 0x00000050,
+		0x03E, 0x00000060,
+		0x03F, 0x00000050,
+		0x0EF, 0x00000000,
+		0x0EF, 0x00000400,
+		0x03E, 0x00000006,
+		0x041, 0x000EE080,
+		0x03E, 0x00000008,
+		0x041, 0x000EE0C0,
+		0x03E, 0x0000000A,
+		0x041, 0x000EE100,
+		0x03E, 0x0000000C,
+		0x041, 0x000EE100,
+		0x0EF, 0x00000000,
+		0x018, 0x00000006,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0xA0000000,	0x00000000,
+		0x086, 0x000E4B58,
+		0x087, 0x00049F80,
+	0xB0000000,	0x00000000,
+		0x0DF, 0x00000008,
+		0x0EF, 0x00002000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x000179C3,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x000179C3,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x000179C3,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x000179C3,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x000179C3,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x000179C3,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x000179C3,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0003F258,
+		0x03B, 0x00030A58,
+		0x03B, 0x0002FA58,
+		0x03B, 0x00022590,
+		0x03B, 0x0001FA50,
+		0x03B, 0x00010248,
+		0x03B, 0x00008240,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000100,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x034, 0x0000ADF6,
+		0x034, 0x00009DF3,
+		0x034, 0x00008DF0,
+		0x034, 0x00007DED,
+		0x034, 0x00006DEA,
+		0x034, 0x00005CED,
+		0x034, 0x00004CEA,
+		0x034, 0x000034EA,
+		0x034, 0x000024E7,
+		0x034, 0x0000146A,
+		0x034, 0x0000006B,
+	0xB0000000,	0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x034, 0x0008ADF6,
+		0x034, 0x00089DF3,
+		0x034, 0x00088DF0,
+		0x034, 0x00087DED,
+		0x034, 0x00086DEA,
+		0x034, 0x00085CED,
+		0x034, 0x00084CEA,
+		0x034, 0x000834EA,
+		0x034, 0x000824E7,
+		0x034, 0x0008146A,
+		0x034, 0x0008006B,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x000020A2,
+		0x0DF, 0x00000080,
+		0x035, 0x00000192,
+		0x035, 0x00008192,
+		0x035, 0x00010192,
+		0x036, 0x00000024,
+		0x036, 0x00008024,
+		0x036, 0x00010024,
+		0x036, 0x00018024,
+		0x0EF, 0x00000000,
+		0x051, 0x00000C21,
+		0x052, 0x000006D9,
+		0x053, 0x000FC649,
+		0x054, 0x0000017E,
+		0x018, 0x0001012A,
+		0x081, 0x0007FC00,
+		0x089, 0x00050110,
+		0x08A, 0x00043E50,
+		0x08B, 0x0002E180,
+		0x08C, 0x00093C3C,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x085, 0x000F8000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x085, 0x000F8000,
+	0xA0000000,	0x00000000,
+		0x085, 0x000F8000,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0xA0000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00001000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00084000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00028000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00030023,
+		0x03C, 0x00048000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00028623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00021633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0001C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00010293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00009593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0000118B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0000078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0xA0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x000AC000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00040000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x0004C000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00070023,
+		0x03C, 0x00048000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00068623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00061633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0005C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00050293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00049593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0004138B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0004078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0xA0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00084000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0008C000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00084000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00084000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00060000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00084000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00084000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00004000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B0023,
+	0x80000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000A8623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000A1633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0009C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00090293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00089593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0008118B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0008078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x00000800,
+		0x03B, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000801,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00000803,
+	0xB0000000,	0x00000000,
+		0x03B, 0x00040000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001801,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000003,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000003,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001001,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00001000,
+	0xB0000000,	0x00000000,
+		0x03B, 0x00080000,
+	0x80000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001802,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000800,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00001002,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+	0xB0000000,	0x00000000,
+		0x018, 0x00013124,
+		0x0EF, 0x00000100,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A1AD,
+		0x034, 0x000491AA,
+		0x034, 0x000481A7,
+		0x034, 0x000470AA,
+		0x034, 0x000460A7,
+		0x034, 0x00045049,
+		0x034, 0x00044046,
+		0x034, 0x00043026,
+		0x034, 0x00042009,
+		0x034, 0x00041006,
+		0x034, 0x00040003,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AF,
+		0x034, 0x000483AB,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004406A,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AF,
+		0x034, 0x000483AB,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004406A,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AF,
+		0x034, 0x000483AB,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004406A,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AF,
+		0x034, 0x000483AB,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004406A,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3F5,
+		0x034, 0x000493F2,
+		0x034, 0x000483B0,
+		0x034, 0x00047370,
+		0x034, 0x0004636D,
+		0x034, 0x0004536A,
+		0x034, 0x00044349,
+		0x034, 0x0004316A,
+		0x034, 0x00042167,
+		0x034, 0x00041129,
+		0x034, 0x00040049,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AF,
+		0x034, 0x000483AB,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004406A,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AF,
+		0x034, 0x000483AB,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004406A,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0004AFF1,
+		0x034, 0x00049FEE,
+		0x034, 0x00048FEB,
+		0x034, 0x00047FE8,
+		0x034, 0x00046DEA,
+		0x034, 0x00045DE7,
+		0x034, 0x00044CEA,
+		0x034, 0x00043CE7,
+		0x034, 0x00042C69,
+		0x034, 0x00041C66,
+		0x034, 0x00040C28,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A1AD,
+		0x034, 0x000291AA,
+		0x034, 0x000281A7,
+		0x034, 0x000270AA,
+		0x034, 0x000260A7,
+		0x034, 0x00025049,
+		0x034, 0x00024046,
+		0x034, 0x00023026,
+		0x034, 0x00022009,
+		0x034, 0x00021006,
+		0x034, 0x00020003,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EF,
+		0x034, 0x000293AC,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EF,
+		0x034, 0x000293AC,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EF,
+		0x034, 0x000293AC,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EF,
+		0x034, 0x000293AC,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3F5,
+		0x034, 0x000293F2,
+		0x034, 0x000282F1,
+		0x034, 0x000272B0,
+		0x034, 0x000262AD,
+		0x034, 0x000252AA,
+		0x034, 0x000242A7,
+		0x034, 0x000230EC,
+		0x034, 0x000220E9,
+		0x034, 0x0002106A,
+		0x034, 0x00020067,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EF,
+		0x034, 0x000293AC,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EF,
+		0x034, 0x000293AC,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0002AFF1,
+		0x034, 0x00029FEE,
+		0x034, 0x00028FEB,
+		0x034, 0x00027FE8,
+		0x034, 0x00026DEA,
+		0x034, 0x00025DE7,
+		0x034, 0x00024CEA,
+		0x034, 0x00023CE7,
+		0x034, 0x00022C69,
+		0x034, 0x00021C66,
+		0x034, 0x00020C28,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EC,
+		0x034, 0x0000938C,
+		0x034, 0x000081AD,
+		0x034, 0x000071AA,
+		0x034, 0x000061A7,
+		0x034, 0x000050AA,
+		0x034, 0x000040A7,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x0000100C,
+		0x034, 0x00000009,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3F4,
+		0x034, 0x000093F1,
+		0x034, 0x000082B1,
+		0x034, 0x000071D1,
+		0x034, 0x000061CE,
+		0x034, 0x000051CB,
+		0x034, 0x000041C8,
+		0x034, 0x000030CB,
+		0x034, 0x000020C8,
+		0x034, 0x00001087,
+		0x034, 0x00000084,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0000AFF1,
+		0x034, 0x00009FEE,
+		0x034, 0x00008FEB,
+		0x034, 0x00007FE8,
+		0x034, 0x00006DEA,
+		0x034, 0x00005DE7,
+		0x034, 0x00004CEA,
+		0x034, 0x00003CE7,
+		0x034, 0x00002C69,
+		0x034, 0x00001C66,
+		0x034, 0x00000C28,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA1AD,
+		0x034, 0x000C91AA,
+		0x034, 0x000C81A7,
+		0x034, 0x000C70AA,
+		0x034, 0x000C60A7,
+		0x034, 0x000C5049,
+		0x034, 0x000C4046,
+		0x034, 0x000C3026,
+		0x034, 0x000C2009,
+		0x034, 0x000C1006,
+		0x034, 0x000C0003,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AF,
+		0x034, 0x000C83AB,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C406A,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AF,
+		0x034, 0x000C83AB,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C406A,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AF,
+		0x034, 0x000C83AB,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C406A,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AF,
+		0x034, 0x000C83AB,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C406A,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3F5,
+		0x034, 0x000C93F2,
+		0x034, 0x000C83B0,
+		0x034, 0x000C7370,
+		0x034, 0x000C636D,
+		0x034, 0x000C536A,
+		0x034, 0x000C4349,
+		0x034, 0x000C316A,
+		0x034, 0x000C2167,
+		0x034, 0x000C1129,
+		0x034, 0x000C0049,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AF,
+		0x034, 0x000C83AB,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C406A,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AF,
+		0x034, 0x000C83AB,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C406A,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0xA0000000,	0x00000000,
+		0x034, 0x000CA794,
+		0x034, 0x000C9791,
+		0x034, 0x000C878E,
+		0x034, 0x000C778B,
+		0x034, 0x000C658D,
+		0x034, 0x000C558A,
+		0x034, 0x000C448D,
+		0x034, 0x000C348A,
+		0x034, 0x000C244C,
+		0x034, 0x000C1449,
+		0x034, 0x000C042B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA1AD,
+		0x034, 0x000A91AA,
+		0x034, 0x000A81A7,
+		0x034, 0x000A70AA,
+		0x034, 0x000A60A7,
+		0x034, 0x000A5049,
+		0x034, 0x000A4046,
+		0x034, 0x000A3026,
+		0x034, 0x000A2009,
+		0x034, 0x000A1006,
+		0x034, 0x000A0003,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EF,
+		0x034, 0x000A93AC,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EF,
+		0x034, 0x000A93AC,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EF,
+		0x034, 0x000A93AC,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EF,
+		0x034, 0x000A93AC,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3F5,
+		0x034, 0x000A93F2,
+		0x034, 0x000A82F1,
+		0x034, 0x000A72B0,
+		0x034, 0x000A62AD,
+		0x034, 0x000A52AA,
+		0x034, 0x000A42A7,
+		0x034, 0x000A30EC,
+		0x034, 0x000A20E9,
+		0x034, 0x000A106A,
+		0x034, 0x000A0067,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EF,
+		0x034, 0x000A93AC,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EF,
+		0x034, 0x000A93AC,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0xA0000000,	0x00000000,
+		0x034, 0x000AA794,
+		0x034, 0x000A9791,
+		0x034, 0x000A878E,
+		0x034, 0x000A778B,
+		0x034, 0x000A658D,
+		0x034, 0x000A558A,
+		0x034, 0x000A448D,
+		0x034, 0x000A348A,
+		0x034, 0x000A244C,
+		0x034, 0x000A1449,
+		0x034, 0x000A042B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EC,
+		0x034, 0x0008938C,
+		0x034, 0x000881AD,
+		0x034, 0x000871AA,
+		0x034, 0x000861A7,
+		0x034, 0x000850AA,
+		0x034, 0x000840A7,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x0008100C,
+		0x034, 0x00080009,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3F4,
+		0x034, 0x000893F1,
+		0x034, 0x000882B1,
+		0x034, 0x000871D1,
+		0x034, 0x000861CE,
+		0x034, 0x000851CB,
+		0x034, 0x000841C8,
+		0x034, 0x000830CB,
+		0x034, 0x000820C8,
+		0x034, 0x00081087,
+		0x034, 0x00080084,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0008A794,
+		0x034, 0x00089791,
+		0x034, 0x0008878E,
+		0x034, 0x0008778B,
+		0x034, 0x0008658D,
+		0x034, 0x0008558A,
+		0x034, 0x0008448D,
+		0x034, 0x0008348A,
+		0x034, 0x0008244C,
+		0x034, 0x00081449,
+		0x034, 0x0008042B,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x0DF, 0x00000001,
+		0x018, 0x0001712A,
+		0x0EF, 0x00000040,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0xA0000000,	0x00000000,
+		0x035, 0x00000747,
+		0x035, 0x00008747,
+		0x035, 0x00010747,
+		0x035, 0x00020747,
+		0x035, 0x00028747,
+		0x035, 0x00030747,
+		0x035, 0x00040747,
+		0x035, 0x00048747,
+		0x035, 0x00050747,
+		0x035, 0x000805FB,
+		0x035, 0x000885FB,
+		0x035, 0x000905FB,
+		0x035, 0x000A05FB,
+		0x035, 0x000A85FB,
+		0x035, 0x000B05FB,
+		0x035, 0x000C05FB,
+		0x035, 0x000C85FB,
+		0x035, 0x000D05FB,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x0DF, 0x00000001,
+		0x018, 0x0001712A,
+		0x0EF, 0x00000010,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000473,
+		0x036, 0x00008473,
+		0x036, 0x00010473,
+		0x036, 0x00020473,
+		0x036, 0x00028473,
+		0x036, 0x00030473,
+		0x036, 0x00040473,
+		0x036, 0x00048473,
+		0x036, 0x00050473,
+		0x036, 0x00080473,
+		0x036, 0x00088473,
+		0x036, 0x00090473,
+		0x036, 0x000A0473,
+		0x036, 0x000A8473,
+		0x036, 0x000B0473,
+		0x036, 0x000C0473,
+		0x036, 0x000C8473,
+		0x036, 0x000D0473,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0xA0000000,	0x00000000,
+		0x036, 0x00000473,
+		0x036, 0x00008473,
+		0x036, 0x00010473,
+		0x036, 0x00020473,
+		0x036, 0x00028473,
+		0x036, 0x00030473,
+		0x036, 0x00040473,
+		0x036, 0x00048473,
+		0x036, 0x00050473,
+		0x036, 0x00080473,
+		0x036, 0x00088473,
+		0x036, 0x00090473,
+		0x036, 0x000A0473,
+		0x036, 0x000A8473,
+		0x036, 0x000B0473,
+		0x036, 0x000C0473,
+		0x036, 0x000C8473,
+		0x036, 0x000D0473,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x0EF, 0x00000004,
+		0x037, 0x00000000,
+		0x038, 0x00005146,
+		0x037, 0x00004000,
+		0x038, 0x00005146,
+		0x037, 0x00008000,
+		0x038, 0x00005146,
+		0x037, 0x00010000,
+		0x038, 0x00005146,
+		0x037, 0x00014000,
+		0x038, 0x00005146,
+		0x037, 0x00018000,
+		0x038, 0x00004D4E,
+		0x037, 0x0001C000,
+		0x038, 0x00004D4E,
+		0x037, 0x00020000,
+		0x038, 0x00004D4E,
+		0x037, 0x00024000,
+		0x038, 0x000071C6,
+		0x037, 0x00028000,
+		0x038, 0x000071C6,
+		0x037, 0x0002C000,
+		0x038, 0x000071C6,
+		0x037, 0x00030000,
+		0x038, 0x000071CE,
+		0x037, 0x00034000,
+		0x038, 0x000071CE,
+		0x037, 0x00038000,
+		0x038, 0x00005126,
+		0x037, 0x0003C000,
+		0x038, 0x00005126,
+		0x037, 0x00040000,
+		0x038, 0x00005126,
+		0x037, 0x00044000,
+		0x038, 0x00005126,
+		0x037, 0x00048000,
+		0x038, 0x00005126,
+		0x037, 0x00080000,
+		0x038, 0x00005ECE,
+		0x037, 0x00084000,
+		0x038, 0x00005ECE,
+		0x037, 0x00088000,
+		0x038, 0x00005ECE,
+		0x037, 0x00090000,
+		0x038, 0x00005ECE,
+		0x037, 0x00094000,
+		0x038, 0x00005ECE,
+		0x037, 0x00098000,
+		0x038, 0x00005ECE,
+		0x037, 0x0009C000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A8000,
+		0x038, 0x00005ECE,
+		0x037, 0x000AC000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B8000,
+		0x038, 0x00005ECE,
+		0x037, 0x000BC000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C8000,
+		0x038, 0x00005ECE,
+		0x0EF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000008,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x0000007D,
+		0x03C, 0x0000047D,
+		0x03C, 0x0000087D,
+		0x03C, 0x0000107D,
+		0x03C, 0x0000147D,
+		0x03C, 0x0000187D,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x0000054A,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x0000154A,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x0000254A,
+		0x03C, 0x00002821,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x0000054A,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x0000154A,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x0000254A,
+		0x03C, 0x00002821,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x0000054A,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x0000154A,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x0000254A,
+		0x03C, 0x00002821,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x0000054A,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x0000154A,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x0000254A,
+		0x03C, 0x00002821,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x0000054A,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x0000154A,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x0000254A,
+		0x03C, 0x00002821,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x0000054A,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x0000154A,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x0000254A,
+		0x03C, 0x00002821,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x0000054A,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x0000154A,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x0000254A,
+		0x03C, 0x00002821,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x0000054A,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x0000154A,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x0000254A,
+		0x03C, 0x00002821,
+	0xA0000000,	0x00000000,
+		0x03C, 0x0000037E,
+		0x03C, 0x00000575,
+		0x03C, 0x00000971,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001575,
+		0x03C, 0x00001871,
+		0x03C, 0x0000217E,
+		0x03C, 0x00002575,
+		0x03C, 0x00002871,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x061, 0x000C0D47,
+		0x062, 0x0000133C,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0xA0000000,	0x00000000,
+		0x063, 0x0007D0E7,
+	0xB0000000,	0x00000000,
+		0x064, 0x00014FEC,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0xA0000000,	0x00000000,
+		0x065, 0x000933FF,
+	0xB0000000,	0x00000000,
+		0x066, 0x00000040,
+		0x057, 0x00050000,
+		0x056, 0x00051DF0,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x055, 0x00082061,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x055, 0x00082061,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x055, 0x00082061,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x055, 0x00082061,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x055, 0x00082061,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x055, 0x00082061,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x055, 0x00082061,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x055, 0x00082061,
+	0xA0000000,	0x00000000,
+		0x055, 0x00082060,
+	0xB0000000,	0x00000000,
+		0x01C, 0x000739D2,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x01F, 0x0002255C,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x01F, 0x0002255C,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x01F, 0x0002255C,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x01F, 0x0002255C,
+	0xA0000000,	0x00000000,
+		0x01F, 0x0002255C,
+	0xB0000000,	0x00000000,
+		0x0B1, 0x0007FF48,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x0C4, 0x00081700,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x0C4, 0x00081700,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x0C4, 0x00081700,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x0C4, 0x00081700,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x0C4, 0x00081700,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x0C4, 0x00081700,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x0C4, 0x00081700,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x0C4, 0x00081700,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x0C4, 0x00081700,
+	0xA0000000,	0x00000000,
+		0x0C4, 0x00083F00,
+	0xB0000000,	0x00000000,
+		0x018, 0x0001B126,
+		0xFFE, 0x00000000,
+		0xFFE, 0x00000000,
+		0xFFE, 0x00000000,
+		0x018, 0x00013126,
+		0x018, 0x00013124,
+};
+
+RTW_DECL_TABLE_RF_RADIO(rtw8814a_rf_a, A);
+
+static const u32 rtw8814a_rf_b[] = {
+		0x018, 0x00013124,
+		0x040, 0x00000C00,
+		0x058, 0x00000F98,
+		0x07F, 0x00068004,
+		0x018, 0x00000006,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0xA0000000,	0x00000000,
+		0x086, 0x000E4B58,
+		0x087, 0x00049F80,
+	0xB0000000,	0x00000000,
+		0x0DF, 0x00000008,
+		0x0EF, 0x00002000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017BC3,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F39B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017BC3,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017BC3,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F39B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017BC3,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017BC3,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017BC3,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017BC3,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0003F258,
+		0x03B, 0x00030A58,
+		0x03B, 0x0002FA58,
+		0x03B, 0x00022590,
+		0x03B, 0x0001FA50,
+		0x03B, 0x00010248,
+		0x03B, 0x00008240,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000100,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x034, 0x0000ADF6,
+		0x034, 0x00009DF3,
+		0x034, 0x00008DF0,
+		0x034, 0x00007DED,
+		0x034, 0x00006DEA,
+		0x034, 0x00005CED,
+		0x034, 0x00004CEA,
+		0x034, 0x000034EA,
+		0x034, 0x000024E7,
+		0x034, 0x0000146A,
+		0x034, 0x0000006B,
+	0xB0000000,	0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x034, 0x0008ADF6,
+		0x034, 0x00089DF3,
+		0x034, 0x00088DF0,
+		0x034, 0x00087DED,
+		0x034, 0x00086DEA,
+		0x034, 0x00085CED,
+		0x034, 0x00084CEA,
+		0x034, 0x000834EA,
+		0x034, 0x000824E7,
+		0x034, 0x0008146A,
+		0x034, 0x0008006B,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x000020A2,
+		0x0DF, 0x00000080,
+		0x035, 0x00000192,
+		0x035, 0x00008192,
+		0x035, 0x00010192,
+		0x036, 0x00000024,
+		0x036, 0x00008024,
+		0x036, 0x00010024,
+		0x036, 0x00018024,
+		0x0EF, 0x00000000,
+		0x051, 0x00000C21,
+		0x052, 0x000006D9,
+		0x053, 0x000FC649,
+		0x054, 0x0000017E,
+		0x018, 0x0001012A,
+		0x081, 0x0007FC00,
+		0x089, 0x00050110,
+		0x08A, 0x00043E50,
+		0x08B, 0x0002E180,
+		0x08C, 0x00093C3C,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x085, 0x000F8000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x085, 0x000F8000,
+	0xA0000000,	0x00000000,
+		0x085, 0x000F8000,
+	0xB0000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+		0x0EF, 0x00001000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00084000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00040000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00030023,
+		0x03C, 0x00048000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00028623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00021633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0001C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00010293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00009593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x00000F8B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0000078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0xA0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00060000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00048000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00048000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00048000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00048000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00070023,
+		0x03C, 0x00048000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00068623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00061633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0005C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00050293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00049593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+		0x03B, 0x0004078B,
+		0x03C, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0xA0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00048000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00060000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0004C000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00044000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0004C000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00048000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00004000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00044000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00044000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B0023,
+	0x80000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000A8623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000A1633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0009C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00090293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00089593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0008138B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0008078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x00000800,
+		0x03B, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00000803,
+	0xB0000000,	0x00000000,
+		0x03B, 0x00040000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000800,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000800,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00001000,
+	0xB0000000,	0x00000000,
+		0x03B, 0x00080000,
+	0x80000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001802,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001802,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00001002,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+	0xB0000000,	0x00000000,
+		0x018, 0x00013124,
+		0x0EF, 0x00000100,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A38C,
+		0x034, 0x000491AD,
+		0x034, 0x000481AA,
+		0x034, 0x000471A7,
+		0x034, 0x000460AA,
+		0x034, 0x000450A7,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x0004200C,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A38C,
+		0x034, 0x00049389,
+		0x034, 0x0004816D,
+		0x034, 0x0004716A,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A38B,
+		0x034, 0x00049388,
+		0x034, 0x0004818B,
+		0x034, 0x00047188,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A38C,
+		0x034, 0x00049389,
+		0x034, 0x0004816D,
+		0x034, 0x0004716A,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A38B,
+		0x034, 0x00049388,
+		0x034, 0x0004818B,
+		0x034, 0x00047188,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3F5,
+		0x034, 0x000493F3,
+		0x034, 0x000483B2,
+		0x034, 0x00047390,
+		0x034, 0x0004638D,
+		0x034, 0x0004538A,
+		0x034, 0x00044387,
+		0x034, 0x0004324A,
+		0x034, 0x00042247,
+		0x034, 0x0004104D,
+		0x034, 0x0004004A,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004AFF7,
+		0x034, 0x00049FF6,
+		0x034, 0x00048FF3,
+		0x034, 0x00047FF0,
+		0x034, 0x00046FED,
+		0x034, 0x00045FEA,
+		0x034, 0x00044FE7,
+		0x034, 0x00043DEA,
+		0x034, 0x00042DE7,
+		0x034, 0x00041DE4,
+		0x034, 0x00040CE7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A38C,
+		0x034, 0x00049389,
+		0x034, 0x0004816D,
+		0x034, 0x0004716A,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A38C,
+		0x034, 0x00049389,
+		0x034, 0x0004816D,
+		0x034, 0x0004716A,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0xA0000000,	0x00000000,
+		0x034, 0x0004AFF4,
+		0x034, 0x00049FF1,
+		0x034, 0x00048FEE,
+		0x034, 0x00047FEB,
+		0x034, 0x00046FE8,
+		0x034, 0x00045DEA,
+		0x034, 0x00044CED,
+		0x034, 0x00043CEA,
+		0x034, 0x00042C6C,
+		0x034, 0x00041C69,
+		0x034, 0x00040C2B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A38C,
+		0x034, 0x000291AD,
+		0x034, 0x000281AA,
+		0x034, 0x000271A7,
+		0x034, 0x000260AA,
+		0x034, 0x000250A7,
+		0x034, 0x0002402C,
+		0x034, 0x00023029,
+		0x034, 0x0002200C,
+		0x034, 0x00021009,
+		0x034, 0x00020006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EE,
+		0x034, 0x000293AC,
+		0x034, 0x00028389,
+		0x034, 0x0002716D,
+		0x034, 0x0002616A,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EF,
+		0x034, 0x000293AD,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EE,
+		0x034, 0x000293AC,
+		0x034, 0x00028389,
+		0x034, 0x0002716D,
+		0x034, 0x0002616A,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EF,
+		0x034, 0x000293AD,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3F5,
+		0x034, 0x000293F3,
+		0x034, 0x000283D0,
+		0x034, 0x00027371,
+		0x034, 0x0002636E,
+		0x034, 0x0002536B,
+		0x034, 0x00024368,
+		0x034, 0x0002332A,
+		0x034, 0x00022327,
+		0x034, 0x0002104C,
+		0x034, 0x00020049,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002AFF7,
+		0x034, 0x00029FF6,
+		0x034, 0x00028FF3,
+		0x034, 0x00027FF0,
+		0x034, 0x00026FED,
+		0x034, 0x00025FEA,
+		0x034, 0x00024FE7,
+		0x034, 0x00023DEA,
+		0x034, 0x00022DE7,
+		0x034, 0x00021DE4,
+		0x034, 0x00020F25,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EE,
+		0x034, 0x000293AC,
+		0x034, 0x00028389,
+		0x034, 0x0002716D,
+		0x034, 0x0002616A,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EE,
+		0x034, 0x000293AC,
+		0x034, 0x00028389,
+		0x034, 0x0002716D,
+		0x034, 0x0002616A,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0002AFF4,
+		0x034, 0x00029FF1,
+		0x034, 0x00028FEE,
+		0x034, 0x00027FEB,
+		0x034, 0x00026FE8,
+		0x034, 0x00025DEA,
+		0x034, 0x00024CED,
+		0x034, 0x00023CEA,
+		0x034, 0x00022C6C,
+		0x034, 0x00021C69,
+		0x034, 0x00020C2B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A38C,
+		0x034, 0x000091AD,
+		0x034, 0x000081AA,
+		0x034, 0x000071A7,
+		0x034, 0x000060AA,
+		0x034, 0x000050A7,
+		0x034, 0x0000402C,
+		0x034, 0x00003029,
+		0x034, 0x00002026,
+		0x034, 0x00001009,
+		0x034, 0x00000006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EC,
+		0x034, 0x000093AC,
+		0x034, 0x000081EC,
+		0x034, 0x0000716D,
+		0x034, 0x0000616A,
+		0x034, 0x0000506D,
+		0x034, 0x0000404C,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EF,
+		0x034, 0x000093AD,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EC,
+		0x034, 0x000093AC,
+		0x034, 0x000081EC,
+		0x034, 0x0000716D,
+		0x034, 0x0000616A,
+		0x034, 0x0000506D,
+		0x034, 0x0000404C,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EF,
+		0x034, 0x000093AD,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3F4,
+		0x034, 0x000093F0,
+		0x034, 0x000083AE,
+		0x034, 0x00007350,
+		0x034, 0x0000634D,
+		0x034, 0x0000534A,
+		0x034, 0x00004347,
+		0x034, 0x0000312D,
+		0x034, 0x0000212A,
+		0x034, 0x00001127,
+		0x034, 0x0000002A,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000AFF7,
+		0x034, 0x00009FF4,
+		0x034, 0x00008FF1,
+		0x034, 0x00007FEE,
+		0x034, 0x00006FEB,
+		0x034, 0x00005FE8,
+		0x034, 0x00004DEB,
+		0x034, 0x00003DE8,
+		0x034, 0x00002DE5,
+		0x034, 0x00001C8B,
+		0x034, 0x00000C88,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EC,
+		0x034, 0x000093AC,
+		0x034, 0x000081EC,
+		0x034, 0x0000716D,
+		0x034, 0x0000616A,
+		0x034, 0x0000506D,
+		0x034, 0x0000404C,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EC,
+		0x034, 0x000093AC,
+		0x034, 0x000081EC,
+		0x034, 0x0000716D,
+		0x034, 0x0000616A,
+		0x034, 0x0000506D,
+		0x034, 0x0000404C,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0000AFF4,
+		0x034, 0x00009FF1,
+		0x034, 0x00008FEE,
+		0x034, 0x00007FEB,
+		0x034, 0x00006FE8,
+		0x034, 0x00005DEA,
+		0x034, 0x00004CED,
+		0x034, 0x00003CEA,
+		0x034, 0x00002C6C,
+		0x034, 0x00001C69,
+		0x034, 0x00000C2B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA38C,
+		0x034, 0x000C91AD,
+		0x034, 0x000C81AA,
+		0x034, 0x000C71A7,
+		0x034, 0x000C60AA,
+		0x034, 0x000C50A7,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C200C,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA38C,
+		0x034, 0x000C9389,
+		0x034, 0x000C816D,
+		0x034, 0x000C716A,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA38B,
+		0x034, 0x000C9388,
+		0x034, 0x000C818B,
+		0x034, 0x000C7188,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA38C,
+		0x034, 0x000C9389,
+		0x034, 0x000C816D,
+		0x034, 0x000C716A,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA38B,
+		0x034, 0x000C9388,
+		0x034, 0x000C818B,
+		0x034, 0x000C7188,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3F5,
+		0x034, 0x000C93F3,
+		0x034, 0x000C83B2,
+		0x034, 0x000C7390,
+		0x034, 0x000C638D,
+		0x034, 0x000C538A,
+		0x034, 0x000C4387,
+		0x034, 0x000C324A,
+		0x034, 0x000C2247,
+		0x034, 0x000C104D,
+		0x034, 0x000C004A,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CAFF7,
+		0x034, 0x000C9FF6,
+		0x034, 0x000C8FF3,
+		0x034, 0x000C7FF0,
+		0x034, 0x000C6FED,
+		0x034, 0x000C5FEA,
+		0x034, 0x000C4FE7,
+		0x034, 0x000C3DEA,
+		0x034, 0x000C2DE7,
+		0x034, 0x000C1DE4,
+		0x034, 0x000C0CE7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA38C,
+		0x034, 0x000C9389,
+		0x034, 0x000C816D,
+		0x034, 0x000C716A,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA38C,
+		0x034, 0x000C9389,
+		0x034, 0x000C816D,
+		0x034, 0x000C716A,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0xA0000000,	0x00000000,
+		0x034, 0x000CA794,
+		0x034, 0x000C9791,
+		0x034, 0x000C878E,
+		0x034, 0x000C778B,
+		0x034, 0x000C658D,
+		0x034, 0x000C558A,
+		0x034, 0x000C448D,
+		0x034, 0x000C348A,
+		0x034, 0x000C244C,
+		0x034, 0x000C1449,
+		0x034, 0x000C042B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA38C,
+		0x034, 0x000A91AD,
+		0x034, 0x000A81AA,
+		0x034, 0x000A71A7,
+		0x034, 0x000A60AA,
+		0x034, 0x000A50A7,
+		0x034, 0x000A402C,
+		0x034, 0x000A3029,
+		0x034, 0x000A200C,
+		0x034, 0x000A1009,
+		0x034, 0x000A0006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EE,
+		0x034, 0x000A93AC,
+		0x034, 0x000A8389,
+		0x034, 0x000A716D,
+		0x034, 0x000A616A,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EF,
+		0x034, 0x000A93AD,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EE,
+		0x034, 0x000A93AC,
+		0x034, 0x000A8389,
+		0x034, 0x000A716D,
+		0x034, 0x000A616A,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EF,
+		0x034, 0x000A93AD,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3F5,
+		0x034, 0x000A93F3,
+		0x034, 0x000A83D0,
+		0x034, 0x000A7371,
+		0x034, 0x000A636E,
+		0x034, 0x000A536B,
+		0x034, 0x000A4368,
+		0x034, 0x000A332A,
+		0x034, 0x000A2327,
+		0x034, 0x000A104C,
+		0x034, 0x000A0049,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AAFF7,
+		0x034, 0x000A9FF6,
+		0x034, 0x000A8FF3,
+		0x034, 0x000A7FF0,
+		0x034, 0x000A6FED,
+		0x034, 0x000A5FEA,
+		0x034, 0x000A4FE7,
+		0x034, 0x000A3DEA,
+		0x034, 0x000A2DE7,
+		0x034, 0x000A1DE4,
+		0x034, 0x000A0F25,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EE,
+		0x034, 0x000A93AC,
+		0x034, 0x000A8389,
+		0x034, 0x000A716D,
+		0x034, 0x000A616A,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EE,
+		0x034, 0x000A93AC,
+		0x034, 0x000A8389,
+		0x034, 0x000A716D,
+		0x034, 0x000A616A,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0xA0000000,	0x00000000,
+		0x034, 0x000AA794,
+		0x034, 0x000A9791,
+		0x034, 0x000A878E,
+		0x034, 0x000A778B,
+		0x034, 0x000A658D,
+		0x034, 0x000A558A,
+		0x034, 0x000A448D,
+		0x034, 0x000A348A,
+		0x034, 0x000A244C,
+		0x034, 0x000A1449,
+		0x034, 0x000A042B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A38C,
+		0x034, 0x000891AD,
+		0x034, 0x000881AA,
+		0x034, 0x000871A7,
+		0x034, 0x000860AA,
+		0x034, 0x000850A7,
+		0x034, 0x0008402C,
+		0x034, 0x00083029,
+		0x034, 0x00082026,
+		0x034, 0x00081009,
+		0x034, 0x00080006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EC,
+		0x034, 0x000893AC,
+		0x034, 0x000881EC,
+		0x034, 0x0008716D,
+		0x034, 0x0008616A,
+		0x034, 0x0008506D,
+		0x034, 0x0008404C,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EF,
+		0x034, 0x000893AD,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EC,
+		0x034, 0x000893AC,
+		0x034, 0x000881EC,
+		0x034, 0x0008716D,
+		0x034, 0x0008616A,
+		0x034, 0x0008506D,
+		0x034, 0x0008404C,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EF,
+		0x034, 0x000893AD,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3F4,
+		0x034, 0x000893F0,
+		0x034, 0x000883AE,
+		0x034, 0x00087350,
+		0x034, 0x0008634D,
+		0x034, 0x0008534A,
+		0x034, 0x00084347,
+		0x034, 0x0008312D,
+		0x034, 0x0008212A,
+		0x034, 0x00081127,
+		0x034, 0x0008002A,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008AFF7,
+		0x034, 0x00089FF4,
+		0x034, 0x00088FF1,
+		0x034, 0x00087FEE,
+		0x034, 0x00086FEB,
+		0x034, 0x00085FE8,
+		0x034, 0x00084DEB,
+		0x034, 0x00083DE8,
+		0x034, 0x00082DE5,
+		0x034, 0x00081C8B,
+		0x034, 0x00080C88,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EC,
+		0x034, 0x000893AC,
+		0x034, 0x000881EC,
+		0x034, 0x0008716D,
+		0x034, 0x0008616A,
+		0x034, 0x0008506D,
+		0x034, 0x0008404C,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EC,
+		0x034, 0x000893AC,
+		0x034, 0x000881EC,
+		0x034, 0x0008716D,
+		0x034, 0x0008616A,
+		0x034, 0x0008506D,
+		0x034, 0x0008404C,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0008A794,
+		0x034, 0x00089791,
+		0x034, 0x0008878E,
+		0x034, 0x0008778B,
+		0x034, 0x0008658D,
+		0x034, 0x0008558A,
+		0x034, 0x0008448D,
+		0x034, 0x0008348A,
+		0x034, 0x0008244C,
+		0x034, 0x00081449,
+		0x034, 0x0008042B,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x0DF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x018, 0x0001712A,
+		0x0EF, 0x00000040,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0xA0000000,	0x00000000,
+		0x035, 0x00000484,
+		0x035, 0x00008484,
+		0x035, 0x00010484,
+		0x035, 0x00020584,
+		0x035, 0x00028584,
+		0x035, 0x00030584,
+		0x035, 0x00040584,
+		0x035, 0x00048584,
+		0x035, 0x00050584,
+		0x035, 0x000805FB,
+		0x035, 0x000885FB,
+		0x035, 0x000905FB,
+		0x035, 0x000A05FB,
+		0x035, 0x000A85FB,
+		0x035, 0x000B05FB,
+		0x035, 0x000C05FB,
+		0x035, 0x000C85FB,
+		0x035, 0x000D05FB,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x0DF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x018, 0x0001712A,
+		0x0EF, 0x00000010,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000473,
+		0x036, 0x00008473,
+		0x036, 0x00010473,
+		0x036, 0x00020473,
+		0x036, 0x00028473,
+		0x036, 0x00030473,
+		0x036, 0x00040473,
+		0x036, 0x00048473,
+		0x036, 0x00050473,
+		0x036, 0x00080473,
+		0x036, 0x00088473,
+		0x036, 0x00090473,
+		0x036, 0x000A0473,
+		0x036, 0x000A8473,
+		0x036, 0x000B0473,
+		0x036, 0x000C0473,
+		0x036, 0x000C8473,
+		0x036, 0x000D0473,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0xA0000000,	0x00000000,
+		0x036, 0x00000474,
+		0x036, 0x00008474,
+		0x036, 0x00010474,
+		0x036, 0x00020474,
+		0x036, 0x00028474,
+		0x036, 0x00030474,
+		0x036, 0x00040474,
+		0x036, 0x00048474,
+		0x036, 0x00050474,
+		0x036, 0x00080474,
+		0x036, 0x00088474,
+		0x036, 0x00090474,
+		0x036, 0x000A0474,
+		0x036, 0x000A8474,
+		0x036, 0x000B0474,
+		0x036, 0x000C0474,
+		0x036, 0x000C8474,
+		0x036, 0x000D0474,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x0EF, 0x00000004,
+		0x037, 0x00000000,
+		0x038, 0x0000514E,
+		0x037, 0x00004000,
+		0x038, 0x0000514E,
+		0x037, 0x00008000,
+		0x038, 0x0000514E,
+		0x037, 0x00010000,
+		0x038, 0x0000514E,
+		0x037, 0x00014000,
+		0x038, 0x0000514E,
+		0x037, 0x00018000,
+		0x038, 0x0000514E,
+		0x037, 0x0001C000,
+		0x038, 0x0000514E,
+		0x037, 0x00020000,
+		0x038, 0x0000514E,
+		0x037, 0x00024000,
+		0x038, 0x0000514E,
+		0x037, 0x00028000,
+		0x038, 0x0000514E,
+		0x037, 0x0002C000,
+		0x038, 0x0000714E,
+		0x037, 0x00030000,
+		0x038, 0x0000514E,
+		0x037, 0x00034000,
+		0x038, 0x0000514E,
+		0x037, 0x00038000,
+		0x038, 0x0000514E,
+		0x037, 0x0003C000,
+		0x038, 0x0000514E,
+		0x037, 0x00040000,
+		0x038, 0x0000514E,
+		0x037, 0x00044000,
+		0x038, 0x0000514E,
+		0x037, 0x00048000,
+		0x038, 0x0000514E,
+		0x037, 0x00080000,
+		0x038, 0x00005ECE,
+		0x037, 0x00084000,
+		0x038, 0x00005ECE,
+		0x037, 0x00088000,
+		0x038, 0x00005ECE,
+		0x037, 0x00090000,
+		0x038, 0x00005ECE,
+		0x037, 0x00094000,
+		0x038, 0x00005ECE,
+		0x037, 0x00098000,
+		0x038, 0x00005ECE,
+		0x037, 0x0009C000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A8000,
+		0x038, 0x00005ECE,
+		0x037, 0x000AC000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B8000,
+		0x038, 0x00005ECE,
+		0x037, 0x000BC000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C8000,
+		0x038, 0x00005ECE,
+		0x0EF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000008,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x0000007D,
+		0x03C, 0x0000047D,
+		0x03C, 0x0000087D,
+		0x03C, 0x0000107D,
+		0x03C, 0x0000147D,
+		0x03C, 0x0000187D,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027E,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227E,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027E,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227E,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027E,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227E,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027E,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227E,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027E,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227E,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027E,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227E,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027E,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227E,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027E,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227E,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0xA0000000,	0x00000000,
+		0x03C, 0x0000037E,
+		0x03C, 0x00000575,
+		0x03C, 0x00000971,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001575,
+		0x03C, 0x00001871,
+		0x03C, 0x0000217E,
+		0x03C, 0x00002575,
+		0x03C, 0x00002871,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x061, 0x000C0D47,
+		0x062, 0x0000133C,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0xA0000000,	0x00000000,
+		0x063, 0x0007D0E7,
+	0xB0000000,	0x00000000,
+		0x064, 0x00014FEC,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0xA0000000,	0x00000000,
+		0x065, 0x000923FF,
+	0xB0000000,	0x00000000,
+		0x066, 0x00000040,
+		0x057, 0x00050000,
+		0x056, 0x00051DF0,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x055, 0x00082060,
+	0xB0000000,	0x00000000,
+};
+
+RTW_DECL_TABLE_RF_RADIO(rtw8814a_rf_b, B);
+
+static const u32 rtw8814a_rf_c[] = {
+		0x018, 0x00013124,
+		0x040, 0x00000C00,
+		0x058, 0x00000F98,
+		0x07F, 0x00068004,
+		0x018, 0x00000006,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0xA0000000,	0x00000000,
+		0x086, 0x000E4B58,
+		0x087, 0x00049F80,
+	0xB0000000,	0x00000000,
+		0x0DF, 0x00000008,
+		0x0EF, 0x00002000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017823,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017823,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017823,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017823,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017823,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017823,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017823,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0003F258,
+		0x03B, 0x00030A58,
+		0x03B, 0x0002FA58,
+		0x03B, 0x00022590,
+		0x03B, 0x0001FA50,
+		0x03B, 0x00010248,
+		0x03B, 0x00008240,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000100,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x034, 0x0000ADF6,
+		0x034, 0x00009DF3,
+		0x034, 0x00008DF0,
+		0x034, 0x00007DED,
+		0x034, 0x00006DEA,
+		0x034, 0x00005CED,
+		0x034, 0x00004CEA,
+		0x034, 0x000034EA,
+		0x034, 0x000024E7,
+		0x034, 0x0000146A,
+		0x034, 0x0000006B,
+	0xB0000000,	0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x034, 0x0008ADF6,
+		0x034, 0x00089DF3,
+		0x034, 0x00088DF0,
+		0x034, 0x00087DED,
+		0x034, 0x00086DEA,
+		0x034, 0x00085CED,
+		0x034, 0x00084CEA,
+		0x034, 0x000834EA,
+		0x034, 0x000824E7,
+		0x034, 0x0008146A,
+		0x034, 0x0008006B,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x000020A2,
+		0x0DF, 0x00000080,
+		0x035, 0x00000192,
+		0x035, 0x00008192,
+		0x035, 0x00010192,
+		0x036, 0x00000024,
+		0x036, 0x00008024,
+		0x036, 0x00010024,
+		0x036, 0x00018024,
+		0x0EF, 0x00000000,
+		0x051, 0x00000C21,
+		0x052, 0x000006D9,
+		0x053, 0x000FC649,
+		0x054, 0x0000017E,
+		0x018, 0x0001012A,
+		0x081, 0x0007FC00,
+		0x089, 0x00050110,
+		0x08A, 0x00043E50,
+		0x08B, 0x0002E180,
+		0x08C, 0x00093C3C,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x085, 0x000F8000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x085, 0x000F8000,
+	0xA0000000,	0x00000000,
+		0x085, 0x000F8000,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0xA0000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00001000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0006C000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x000D4000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00080000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0006C000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0008C000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00004000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x000A0000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00030023,
+		0x03C, 0x00048000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00028623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00021633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0001C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00010293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00009593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0000118B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0000078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0xA0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0004C000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00084000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00080000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0004C000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x000D0000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00080000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00080000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00028000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00070023,
+		0x03C, 0x00048000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00068623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00061633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0005C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00050293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00049593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+		0x03B, 0x0004078B,
+		0x03C, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0xA0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00060000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00080000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B0023,
+	0x80000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000A8623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000A1633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0009C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00090293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00089593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0008128B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0008078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x00000800,
+		0x03B, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001803,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001803,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00000803,
+	0xB0000000,	0x00000000,
+		0x03B, 0x00040000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000800,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00001000,
+	0xB0000000,	0x00000000,
+		0x03B, 0x00080000,
+	0x80000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001802,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001802,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00001002,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+	0xB0000000,	0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x018, 0x00013124,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x018, 0x00013124,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x018, 0x00013124,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x018, 0x00013124,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x018, 0x00013124,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x018, 0x00013124,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x018, 0x00013124,
+	0xA0000000,	0x00000000,
+		0x018, 0x00013124,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000100,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A38C,
+		0x034, 0x000491AD,
+		0x034, 0x000481AA,
+		0x034, 0x000471A7,
+		0x034, 0x000460AA,
+		0x034, 0x000450A7,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x0004200C,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AD,
+		0x034, 0x0004838A,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004404C,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AD,
+		0x034, 0x0004838A,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004404C,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AD,
+		0x034, 0x0004838A,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004404C,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AD,
+		0x034, 0x0004838A,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004404C,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3F5,
+		0x034, 0x000493F3,
+		0x034, 0x00048393,
+		0x034, 0x00047390,
+		0x034, 0x0004638D,
+		0x034, 0x0004538A,
+		0x034, 0x00044387,
+		0x034, 0x000430ED,
+		0x034, 0x000420EA,
+		0x034, 0x000410E7,
+		0x034, 0x0004002D,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004AFF7,
+		0x034, 0x00049FF6,
+		0x034, 0x00048FF3,
+		0x034, 0x00047FF0,
+		0x034, 0x00046FED,
+		0x034, 0x00045FEA,
+		0x034, 0x00044FE7,
+		0x034, 0x00043CD0,
+		0x034, 0x00042CCD,
+		0x034, 0x00041CCA,
+		0x034, 0x00040CC7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AD,
+		0x034, 0x0004838A,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004404C,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EF,
+		0x034, 0x000493AD,
+		0x034, 0x0004838A,
+		0x034, 0x0004718C,
+		0x034, 0x00046189,
+		0x034, 0x0004506D,
+		0x034, 0x0004404C,
+		0x034, 0x0004302C,
+		0x034, 0x00042029,
+		0x034, 0x00041026,
+		0x034, 0x00040023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0004AFF4,
+		0x034, 0x00049FF1,
+		0x034, 0x00048FEE,
+		0x034, 0x00047FEB,
+		0x034, 0x00046FE8,
+		0x034, 0x00045DEA,
+		0x034, 0x00044CED,
+		0x034, 0x00043CEA,
+		0x034, 0x00042C6C,
+		0x034, 0x00041C69,
+		0x034, 0x00040C2B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EC,
+		0x034, 0x0002938C,
+		0x034, 0x000281AD,
+		0x034, 0x000271AA,
+		0x034, 0x000261A7,
+		0x034, 0x000250AA,
+		0x034, 0x000240A7,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x0002100C,
+		0x034, 0x00020009,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EC,
+		0x034, 0x0002936D,
+		0x034, 0x0002836A,
+		0x034, 0x0002716D,
+		0x034, 0x0002616A,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EC,
+		0x034, 0x000293AC,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EC,
+		0x034, 0x0002936D,
+		0x034, 0x0002836A,
+		0x034, 0x0002716D,
+		0x034, 0x0002616A,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EC,
+		0x034, 0x000293AC,
+		0x034, 0x0002838A,
+		0x034, 0x0002718C,
+		0x034, 0x00026189,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3F5,
+		0x034, 0x000293F3,
+		0x034, 0x000282F2,
+		0x034, 0x000272D0,
+		0x034, 0x000262CD,
+		0x034, 0x000252CA,
+		0x034, 0x000242C7,
+		0x034, 0x000230CD,
+		0x034, 0x000220CA,
+		0x034, 0x000210C7,
+		0x034, 0x00020086,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002AFF7,
+		0x034, 0x00029FF6,
+		0x034, 0x00028FF3,
+		0x034, 0x00027FF0,
+		0x034, 0x00026FED,
+		0x034, 0x00025FEA,
+		0x034, 0x00024FE7,
+		0x034, 0x00023DEA,
+		0x034, 0x00022DE7,
+		0x034, 0x00021DE4,
+		0x034, 0x00020E44,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EC,
+		0x034, 0x0002936D,
+		0x034, 0x0002836A,
+		0x034, 0x0002716D,
+		0x034, 0x0002616A,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EC,
+		0x034, 0x0002936D,
+		0x034, 0x0002836A,
+		0x034, 0x0002716D,
+		0x034, 0x0002616A,
+		0x034, 0x0002506D,
+		0x034, 0x0002406A,
+		0x034, 0x0002302C,
+		0x034, 0x00022029,
+		0x034, 0x00021026,
+		0x034, 0x00020023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0002AFF4,
+		0x034, 0x00029FF1,
+		0x034, 0x00028FEE,
+		0x034, 0x00027FEB,
+		0x034, 0x00026FE8,
+		0x034, 0x00025DEA,
+		0x034, 0x00024CED,
+		0x034, 0x00023CEA,
+		0x034, 0x00022C6C,
+		0x034, 0x00021C69,
+		0x034, 0x00020C2B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A38C,
+		0x034, 0x000091AD,
+		0x034, 0x000081AA,
+		0x034, 0x000071A7,
+		0x034, 0x000060AA,
+		0x034, 0x000050A7,
+		0x034, 0x0000402C,
+		0x034, 0x00003029,
+		0x034, 0x0000200C,
+		0x034, 0x00001009,
+		0x034, 0x00000006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AB,
+		0x034, 0x00008389,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AB,
+		0x034, 0x00008389,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AB,
+		0x034, 0x00008389,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AB,
+		0x034, 0x00008389,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3F5,
+		0x034, 0x000093F1,
+		0x034, 0x000083B0,
+		0x034, 0x00007370,
+		0x034, 0x0000636D,
+		0x034, 0x0000536A,
+		0x034, 0x00004367,
+		0x034, 0x0000308E,
+		0x034, 0x0000208B,
+		0x034, 0x00001088,
+		0x034, 0x00000085,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000AFF7,
+		0x034, 0x00009FF5,
+		0x034, 0x00008FF2,
+		0x034, 0x00007FEF,
+		0x034, 0x00006FEC,
+		0x034, 0x00005FE9,
+		0x034, 0x00004EAA,
+		0x034, 0x00003EA7,
+		0x034, 0x00002C70,
+		0x034, 0x00001C6D,
+		0x034, 0x00000C6A,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AB,
+		0x034, 0x00008389,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AB,
+		0x034, 0x00008389,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0000AFF4,
+		0x034, 0x00009FF1,
+		0x034, 0x00008FEE,
+		0x034, 0x00007FEB,
+		0x034, 0x00006FE8,
+		0x034, 0x00005DEA,
+		0x034, 0x00004CED,
+		0x034, 0x00003CEA,
+		0x034, 0x00002C6C,
+		0x034, 0x00001C69,
+		0x034, 0x00000C2B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA38C,
+		0x034, 0x000C91AD,
+		0x034, 0x000C81AA,
+		0x034, 0x000C71A7,
+		0x034, 0x000C60AA,
+		0x034, 0x000C50A7,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C200C,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AD,
+		0x034, 0x000C838A,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C404C,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AD,
+		0x034, 0x000C838A,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C404C,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AD,
+		0x034, 0x000C838A,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C404C,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AD,
+		0x034, 0x000C838A,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C404C,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3F5,
+		0x034, 0x000C93F3,
+		0x034, 0x000C8393,
+		0x034, 0x000C7390,
+		0x034, 0x000C638D,
+		0x034, 0x000C538A,
+		0x034, 0x000C4387,
+		0x034, 0x000C30ED,
+		0x034, 0x000C20EA,
+		0x034, 0x000C10E7,
+		0x034, 0x000C002D,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CAFF7,
+		0x034, 0x000C9FF6,
+		0x034, 0x000C8FF3,
+		0x034, 0x000C7FF0,
+		0x034, 0x000C6FED,
+		0x034, 0x000C5FEA,
+		0x034, 0x000C4FE7,
+		0x034, 0x000C3CD0,
+		0x034, 0x000C2CCD,
+		0x034, 0x000C1CCA,
+		0x034, 0x000C0CC7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AD,
+		0x034, 0x000C838A,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C404C,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EF,
+		0x034, 0x000C93AD,
+		0x034, 0x000C838A,
+		0x034, 0x000C718C,
+		0x034, 0x000C6189,
+		0x034, 0x000C506D,
+		0x034, 0x000C404C,
+		0x034, 0x000C302C,
+		0x034, 0x000C2029,
+		0x034, 0x000C1026,
+		0x034, 0x000C0023,
+	0xA0000000,	0x00000000,
+		0x034, 0x000CA794,
+		0x034, 0x000C9791,
+		0x034, 0x000C878E,
+		0x034, 0x000C778B,
+		0x034, 0x000C658D,
+		0x034, 0x000C558A,
+		0x034, 0x000C448D,
+		0x034, 0x000C348A,
+		0x034, 0x000C244C,
+		0x034, 0x000C1449,
+		0x034, 0x000C042B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EC,
+		0x034, 0x000A938C,
+		0x034, 0x000A81AD,
+		0x034, 0x000A71AA,
+		0x034, 0x000A61A7,
+		0x034, 0x000A50AA,
+		0x034, 0x000A40A7,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A100C,
+		0x034, 0x000A0009,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EC,
+		0x034, 0x000A936D,
+		0x034, 0x000A836A,
+		0x034, 0x000A716D,
+		0x034, 0x000A616A,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EC,
+		0x034, 0x000A93AC,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EC,
+		0x034, 0x000A936D,
+		0x034, 0x000A836A,
+		0x034, 0x000A716D,
+		0x034, 0x000A616A,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EC,
+		0x034, 0x000A93AC,
+		0x034, 0x000A838A,
+		0x034, 0x000A718C,
+		0x034, 0x000A6189,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3F5,
+		0x034, 0x000A93F3,
+		0x034, 0x000A82F2,
+		0x034, 0x000A72D0,
+		0x034, 0x000A62CD,
+		0x034, 0x000A52CA,
+		0x034, 0x000A42C7,
+		0x034, 0x000A30CD,
+		0x034, 0x000A20CA,
+		0x034, 0x000A10C7,
+		0x034, 0x000A0086,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AAFF7,
+		0x034, 0x000A9FF6,
+		0x034, 0x000A8FF3,
+		0x034, 0x000A7FF0,
+		0x034, 0x000A6FED,
+		0x034, 0x000A5FEA,
+		0x034, 0x000A4FE7,
+		0x034, 0x000A3DEA,
+		0x034, 0x000A2DE7,
+		0x034, 0x000A1DE4,
+		0x034, 0x000A0E44,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EC,
+		0x034, 0x000A936D,
+		0x034, 0x000A836A,
+		0x034, 0x000A716D,
+		0x034, 0x000A616A,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EC,
+		0x034, 0x000A936D,
+		0x034, 0x000A836A,
+		0x034, 0x000A716D,
+		0x034, 0x000A616A,
+		0x034, 0x000A506D,
+		0x034, 0x000A406A,
+		0x034, 0x000A302C,
+		0x034, 0x000A2029,
+		0x034, 0x000A1026,
+		0x034, 0x000A0023,
+	0xA0000000,	0x00000000,
+		0x034, 0x000AA794,
+		0x034, 0x000A9791,
+		0x034, 0x000A878E,
+		0x034, 0x000A778B,
+		0x034, 0x000A658D,
+		0x034, 0x000A558A,
+		0x034, 0x000A448D,
+		0x034, 0x000A348A,
+		0x034, 0x000A244C,
+		0x034, 0x000A1449,
+		0x034, 0x000A042B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A38C,
+		0x034, 0x000891AD,
+		0x034, 0x000881AA,
+		0x034, 0x000871A7,
+		0x034, 0x000860AA,
+		0x034, 0x000850A7,
+		0x034, 0x0008402C,
+		0x034, 0x00083029,
+		0x034, 0x0008200C,
+		0x034, 0x00081009,
+		0x034, 0x00000006,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AB,
+		0x034, 0x00088389,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AB,
+		0x034, 0x00088389,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AB,
+		0x034, 0x00088389,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AB,
+		0x034, 0x00088389,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3F5,
+		0x034, 0x000893F1,
+		0x034, 0x000883B0,
+		0x034, 0x00087370,
+		0x034, 0x0008636D,
+		0x034, 0x0008536A,
+		0x034, 0x00084367,
+		0x034, 0x0008308E,
+		0x034, 0x0008208B,
+		0x034, 0x00081088,
+		0x034, 0x00080085,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008AFF7,
+		0x034, 0x00089FF5,
+		0x034, 0x00088FF2,
+		0x034, 0x00087FEF,
+		0x034, 0x00086FEC,
+		0x034, 0x00085FE9,
+		0x034, 0x00084EAA,
+		0x034, 0x00083EA7,
+		0x034, 0x00082C70,
+		0x034, 0x00081C6D,
+		0x034, 0x00080C6A,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AB,
+		0x034, 0x00088389,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AB,
+		0x034, 0x00088389,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0008A794,
+		0x034, 0x00089791,
+		0x034, 0x0008878E,
+		0x034, 0x0008778B,
+		0x034, 0x0008658D,
+		0x034, 0x0008558A,
+		0x034, 0x0008448D,
+		0x034, 0x0008348A,
+		0x034, 0x0008244C,
+		0x034, 0x00081449,
+		0x034, 0x0008042B,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x0DF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x018, 0x0001712A,
+		0x0EF, 0x00000040,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0xA0000000,	0x00000000,
+		0x035, 0x00000484,
+		0x035, 0x00008484,
+		0x035, 0x00010484,
+		0x035, 0x00020584,
+		0x035, 0x00028584,
+		0x035, 0x00030584,
+		0x035, 0x00040584,
+		0x035, 0x00048584,
+		0x035, 0x00050584,
+		0x035, 0x000805FB,
+		0x035, 0x000885FB,
+		0x035, 0x000905FB,
+		0x035, 0x000A05FB,
+		0x035, 0x000A85FB,
+		0x035, 0x000B05FB,
+		0x035, 0x000C05FB,
+		0x035, 0x000C85FB,
+		0x035, 0x000D05FB,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x0DF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x018, 0x0001712A,
+		0x0EF, 0x00000010,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000473,
+		0x036, 0x00008473,
+		0x036, 0x00010473,
+		0x036, 0x00020473,
+		0x036, 0x00028473,
+		0x036, 0x00030473,
+		0x036, 0x00040473,
+		0x036, 0x00048473,
+		0x036, 0x00050473,
+		0x036, 0x00080473,
+		0x036, 0x00088473,
+		0x036, 0x00090473,
+		0x036, 0x000A0473,
+		0x036, 0x000A8473,
+		0x036, 0x000B0473,
+		0x036, 0x000C0473,
+		0x036, 0x000C8473,
+		0x036, 0x000D0473,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0xA0000000,	0x00000000,
+		0x036, 0x00000474,
+		0x036, 0x00008474,
+		0x036, 0x00010474,
+		0x036, 0x00020474,
+		0x036, 0x00028474,
+		0x036, 0x00030474,
+		0x036, 0x00040474,
+		0x036, 0x00048474,
+		0x036, 0x00050474,
+		0x036, 0x00080474,
+		0x036, 0x00088474,
+		0x036, 0x00090474,
+		0x036, 0x000A0474,
+		0x036, 0x000A8474,
+		0x036, 0x000B0474,
+		0x036, 0x000C0474,
+		0x036, 0x000C8474,
+		0x036, 0x000D0474,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x0EF, 0x00000004,
+		0x037, 0x00000000,
+		0x038, 0x0000514E,
+		0x037, 0x00004000,
+		0x038, 0x0000514E,
+		0x037, 0x00008000,
+		0x038, 0x0000514E,
+		0x037, 0x00010000,
+		0x038, 0x0000514E,
+		0x037, 0x00014000,
+		0x038, 0x0000514E,
+		0x037, 0x00018000,
+		0x038, 0x0000514E,
+		0x037, 0x0001C000,
+		0x038, 0x0000514E,
+		0x037, 0x00020000,
+		0x038, 0x0000514E,
+		0x037, 0x00024000,
+		0x038, 0x0000514E,
+		0x037, 0x00028000,
+		0x038, 0x0000514E,
+		0x037, 0x0002C000,
+		0x038, 0x0000714E,
+		0x037, 0x00030000,
+		0x038, 0x0000514E,
+		0x037, 0x00034000,
+		0x038, 0x0000514E,
+		0x037, 0x00038000,
+		0x038, 0x0000514E,
+		0x037, 0x0003C000,
+		0x038, 0x0000514E,
+		0x037, 0x00040000,
+		0x038, 0x0000514E,
+		0x037, 0x00044000,
+		0x038, 0x0000514E,
+		0x037, 0x00048000,
+		0x038, 0x0000514E,
+		0x037, 0x00080000,
+		0x038, 0x00005ECE,
+		0x037, 0x00084000,
+		0x038, 0x00005ECE,
+		0x037, 0x00088000,
+		0x038, 0x00005ECE,
+		0x037, 0x00090000,
+		0x038, 0x00005ECE,
+		0x037, 0x00094000,
+		0x038, 0x00005ECE,
+		0x037, 0x00098000,
+		0x038, 0x00005ECE,
+		0x037, 0x0009C000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A8000,
+		0x038, 0x00005ECE,
+		0x037, 0x000AC000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B8000,
+		0x038, 0x00005ECE,
+		0x037, 0x000BC000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C8000,
+		0x038, 0x00005ECE,
+		0x0EF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000008,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x0000007D,
+		0x03C, 0x0000047D,
+		0x03C, 0x0000087D,
+		0x03C, 0x0000107D,
+		0x03C, 0x0000147D,
+		0x03C, 0x0000187D,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x00000541,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x00001541,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x00002541,
+		0x03C, 0x00002821,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027D,
+		0x03C, 0x00000546,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127D,
+		0x03C, 0x00001546,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227D,
+		0x03C, 0x00002546,
+		0x03C, 0x00002821,
+	0xA0000000,	0x00000000,
+		0x03C, 0x0000037E,
+		0x03C, 0x00000575,
+		0x03C, 0x00000971,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001575,
+		0x03C, 0x00001871,
+		0x03C, 0x0000217E,
+		0x03C, 0x00002575,
+		0x03C, 0x00002871,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x061, 0x000C0D47,
+		0x062, 0x0000133C,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0xA0000000,	0x00000000,
+		0x063, 0x0007D0E7,
+	0xB0000000,	0x00000000,
+		0x064, 0x00014FEC,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0xA0000000,	0x00000000,
+		0x065, 0x000923FF,
+	0xB0000000,	0x00000000,
+		0x066, 0x00000040,
+		0x057, 0x00050000,
+		0x056, 0x00051DF0,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x055, 0x00082060,
+	0xB0000000,	0x00000000,
+};
+
+RTW_DECL_TABLE_RF_RADIO(rtw8814a_rf_c, C);
+
+static const u32 rtw8814a_rf_d[] = {
+		0x018, 0x00013124,
+		0x040, 0x00000C00,
+		0x058, 0x00000F98,
+		0x07F, 0x00068004,
+		0x018, 0x00000006,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x086, 0x000E335A,
+		0x087, 0x00079F80,
+	0xA0000000,	0x00000000,
+		0x086, 0x000E4B58,
+		0x087, 0x00049F80,
+	0xB0000000,	0x00000000,
+		0x0DF, 0x00000008,
+		0x0EF, 0x00002000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017803,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F09B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017803,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017803,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F09B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017803,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017803,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017803,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0003F19B,
+		0x03B, 0x00037A5B,
+		0x03B, 0x0002A433,
+		0x03B, 0x00027BD3,
+		0x03B, 0x0001F80B,
+		0x03B, 0x00017803,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0003F258,
+		0x03B, 0x00030A58,
+		0x03B, 0x0002FA58,
+		0x03B, 0x00022590,
+		0x03B, 0x0001FA50,
+		0x03B, 0x00010248,
+		0x03B, 0x00008240,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000100,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x034, 0x0000ADF6,
+		0x034, 0x00009DF3,
+		0x034, 0x00008DF0,
+		0x034, 0x00007DED,
+		0x034, 0x00006DEA,
+		0x034, 0x00005CED,
+		0x034, 0x00004CEA,
+		0x034, 0x000034EA,
+		0x034, 0x000024E7,
+		0x034, 0x0000146A,
+		0x034, 0x0000006B,
+	0xB0000000,	0x00000000,
+	0x80000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A0D0,
+		0x034, 0x000090CD,
+		0x034, 0x000080CA,
+		0x034, 0x0000704D,
+		0x034, 0x0000604A,
+		0x034, 0x00005047,
+		0x034, 0x0000400A,
+		0x034, 0x00003007,
+		0x034, 0x00002004,
+		0x034, 0x00001001,
+		0x034, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x034, 0x0008ADF6,
+		0x034, 0x00089DF3,
+		0x034, 0x00088DF0,
+		0x034, 0x00087DED,
+		0x034, 0x00086DEA,
+		0x034, 0x00085CED,
+		0x034, 0x00084CEA,
+		0x034, 0x000834EA,
+		0x034, 0x000824E7,
+		0x034, 0x0008146A,
+		0x034, 0x0008006B,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x000020A2,
+		0x0DF, 0x00000080,
+		0x035, 0x00000192,
+		0x035, 0x00008192,
+		0x035, 0x00010192,
+		0x036, 0x00000024,
+		0x036, 0x00008024,
+		0x036, 0x00010024,
+		0x036, 0x00018024,
+		0x0EF, 0x00000000,
+		0x051, 0x00000C21,
+		0x052, 0x000006D9,
+		0x053, 0x000FC649,
+		0x054, 0x0000017E,
+		0x018, 0x0001012A,
+		0x081, 0x0007FC00,
+		0x089, 0x00050110,
+		0x08A, 0x00043E50,
+		0x08B, 0x0002E180,
+		0x08C, 0x00093C3C,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x085, 0x000F8000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x085, 0x000F8000,
+	0xA0000000,	0x00000000,
+		0x085, 0x000F8000,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0xA0000000,	0x00000000,
+		0x08D, 0x000FFFF0,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00001000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0xA0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00038023,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00044000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00048000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00044000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00040000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00088000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00048000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00030023,
+		0x03C, 0x00048000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00028623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00021633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0001C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00010293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00009593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x00000F8B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0000078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0xA0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00078023,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00044000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00044000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00044000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00024000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00070023,
+		0x03C, 0x00048000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00068623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00061633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0005C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00050293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00049593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x00040F8B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0004078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0xA0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B8023,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00004000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00060000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00004000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00060000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00024000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00004000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000B0023,
+	0x80000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x00020000,
+	0xB0000000,	0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000A8623,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x000A1633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x0009C633,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00090293,
+		0x03C, 0x00000000,
+		0x03A, 0x0000013C,
+		0x03B, 0x00089593,
+		0x03C, 0x00000000,
+		0x03A, 0x00000148,
+	0x80000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03B, 0x0008138B,
+	0xA0000000,	0x00000000,
+		0x03B, 0x0008078B,
+	0xB0000000,	0x00000000,
+		0x03C, 0x00000000,
+		0x0EF, 0x00000000,
+		0x0EF, 0x00000800,
+		0x03B, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001003,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001803,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000803,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00000803,
+	0xB0000000,	0x00000000,
+		0x03B, 0x00040000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001002,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000001,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000802,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001803,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00001000,
+	0xB0000000,	0x00000000,
+		0x03B, 0x00080000,
+	0x80000007,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001802,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00001000,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x03A, 0x00000802,
+	0xA0000000,	0x00000000,
+		0x03A, 0x00001002,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000006,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+	0xB0000000,	0x00000000,
+		0x018, 0x00013124,
+		0x0EF, 0x00000100,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3EB,
+		0x034, 0x0004938B,
+		0x034, 0x000481AC,
+		0x034, 0x000471A9,
+		0x034, 0x000460AC,
+		0x034, 0x000450A9,
+		0x034, 0x0004402E,
+		0x034, 0x0004302B,
+		0x034, 0x00042028,
+		0x034, 0x0004100B,
+		0x034, 0x00040008,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3AD,
+		0x034, 0x0004938A,
+		0x034, 0x0004818C,
+		0x034, 0x00047189,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3AD,
+		0x034, 0x0004938A,
+		0x034, 0x0004818C,
+		0x034, 0x00047189,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3AD,
+		0x034, 0x0004938A,
+		0x034, 0x0004818C,
+		0x034, 0x00047189,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3AD,
+		0x034, 0x0004938A,
+		0x034, 0x0004818C,
+		0x034, 0x00047189,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3F4,
+		0x034, 0x000493D2,
+		0x034, 0x000482D1,
+		0x034, 0x000471F1,
+		0x034, 0x000461EE,
+		0x034, 0x000451EB,
+		0x034, 0x000441E8,
+		0x034, 0x0004314B,
+		0x034, 0x00042148,
+		0x034, 0x0004104B,
+		0x034, 0x00040048,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004AFF7,
+		0x034, 0x00049FF6,
+		0x034, 0x00048FF3,
+		0x034, 0x00047FF0,
+		0x034, 0x00046FED,
+		0x034, 0x00045FEA,
+		0x034, 0x00044FE7,
+		0x034, 0x00043CB1,
+		0x034, 0x00042CAE,
+		0x034, 0x00041CAB,
+		0x034, 0x00040CA8,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3AD,
+		0x034, 0x0004938A,
+		0x034, 0x0004818C,
+		0x034, 0x00047189,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0004A3AD,
+		0x034, 0x0004938A,
+		0x034, 0x0004818C,
+		0x034, 0x00047189,
+		0x034, 0x0004606D,
+		0x034, 0x0004506A,
+		0x034, 0x0004402C,
+		0x034, 0x00043029,
+		0x034, 0x00042026,
+		0x034, 0x00041009,
+		0x034, 0x00040006,
+	0xA0000000,	0x00000000,
+		0x034, 0x0004AFF4,
+		0x034, 0x00049FF1,
+		0x034, 0x00048FEE,
+		0x034, 0x00047FEB,
+		0x034, 0x00046FE8,
+		0x034, 0x00045DEA,
+		0x034, 0x00044CED,
+		0x034, 0x00043CEA,
+		0x034, 0x00042C6C,
+		0x034, 0x00041C69,
+		0x034, 0x00040C2B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3EE,
+		0x034, 0x000293EB,
+		0x034, 0x0002838B,
+		0x034, 0x000271AC,
+		0x034, 0x000261A9,
+		0x034, 0x000250AC,
+		0x034, 0x000240A9,
+		0x034, 0x000230A6,
+		0x034, 0x0002202C,
+		0x034, 0x00021029,
+		0x034, 0x00020026,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3AD,
+		0x034, 0x0002938A,
+		0x034, 0x0002818C,
+		0x034, 0x00027189,
+		0x034, 0x0002606D,
+		0x034, 0x0002504C,
+		0x034, 0x0002402C,
+		0x034, 0x00023029,
+		0x034, 0x00022026,
+		0x034, 0x00021023,
+		0x034, 0x00020006,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3AD,
+		0x034, 0x0002938A,
+		0x034, 0x0002818C,
+		0x034, 0x00027189,
+		0x034, 0x0002606D,
+		0x034, 0x0002504C,
+		0x034, 0x0002402C,
+		0x034, 0x00023029,
+		0x034, 0x00022026,
+		0x034, 0x00021023,
+		0x034, 0x00020006,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3AD,
+		0x034, 0x0002938A,
+		0x034, 0x0002818C,
+		0x034, 0x00027189,
+		0x034, 0x0002606D,
+		0x034, 0x0002504C,
+		0x034, 0x0002402C,
+		0x034, 0x00023029,
+		0x034, 0x00022026,
+		0x034, 0x00021023,
+		0x034, 0x00020006,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3AD,
+		0x034, 0x0002938A,
+		0x034, 0x0002818C,
+		0x034, 0x00027189,
+		0x034, 0x0002606D,
+		0x034, 0x0002504C,
+		0x034, 0x0002402C,
+		0x034, 0x00023029,
+		0x034, 0x00022026,
+		0x034, 0x00021023,
+		0x034, 0x00020006,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3F5,
+		0x034, 0x000293D2,
+		0x034, 0x000283CE,
+		0x034, 0x00027290,
+		0x034, 0x0002628D,
+		0x034, 0x0002528A,
+		0x034, 0x00024287,
+		0x034, 0x0002308D,
+		0x034, 0x0002208A,
+		0x034, 0x00021087,
+		0x034, 0x00020048,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002AFF7,
+		0x034, 0x00029FF6,
+		0x034, 0x00028FF3,
+		0x034, 0x00027FF0,
+		0x034, 0x00026FED,
+		0x034, 0x00025FEA,
+		0x034, 0x00024FE7,
+		0x034, 0x00023DEA,
+		0x034, 0x00022DE7,
+		0x034, 0x00021DE4,
+		0x034, 0x00020D48,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3AD,
+		0x034, 0x0002938A,
+		0x034, 0x0002818C,
+		0x034, 0x00027189,
+		0x034, 0x0002606D,
+		0x034, 0x0002504C,
+		0x034, 0x0002402C,
+		0x034, 0x00023029,
+		0x034, 0x00022026,
+		0x034, 0x00021023,
+		0x034, 0x00020006,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0002A3AD,
+		0x034, 0x0002938A,
+		0x034, 0x0002818C,
+		0x034, 0x00027189,
+		0x034, 0x0002606D,
+		0x034, 0x0002504C,
+		0x034, 0x0002402C,
+		0x034, 0x00023029,
+		0x034, 0x00022026,
+		0x034, 0x00021023,
+		0x034, 0x00020006,
+	0xA0000000,	0x00000000,
+		0x034, 0x0002AFF4,
+		0x034, 0x00029FF1,
+		0x034, 0x00028FEE,
+		0x034, 0x00027FEB,
+		0x034, 0x00026FE8,
+		0x034, 0x00025DEA,
+		0x034, 0x00024CED,
+		0x034, 0x00023CEA,
+		0x034, 0x00022C6C,
+		0x034, 0x00021C69,
+		0x034, 0x00020C2B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EF,
+		0x034, 0x000093EC,
+		0x034, 0x0000838C,
+		0x034, 0x000071AD,
+		0x034, 0x000061AA,
+		0x034, 0x000050AD,
+		0x034, 0x000040AA,
+		0x034, 0x0000306A,
+		0x034, 0x0000202D,
+		0x034, 0x0000102A,
+		0x034, 0x00000027,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3F1,
+		0x034, 0x000092B1,
+		0x034, 0x000081CF,
+		0x034, 0x00007170,
+		0x034, 0x0000616D,
+		0x034, 0x0000516A,
+		0x034, 0x00004167,
+		0x034, 0x0000302F,
+		0x034, 0x0000202C,
+		0x034, 0x00001029,
+		0x034, 0x00000026,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000AFF7,
+		0x034, 0x00009FF6,
+		0x034, 0x00008FF3,
+		0x034, 0x00007FF0,
+		0x034, 0x00006FED,
+		0x034, 0x00005FEA,
+		0x034, 0x00004FE7,
+		0x034, 0x00003EC7,
+		0x034, 0x00002EC4,
+		0x034, 0x00001D4B,
+		0x034, 0x00000D48,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0000A3EE,
+		0x034, 0x000093AC,
+		0x034, 0x0000838A,
+		0x034, 0x0000718C,
+		0x034, 0x00006189,
+		0x034, 0x0000506D,
+		0x034, 0x0000406A,
+		0x034, 0x0000302C,
+		0x034, 0x00002029,
+		0x034, 0x00001026,
+		0x034, 0x00000023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0000AFF4,
+		0x034, 0x00009FF1,
+		0x034, 0x00008FEE,
+		0x034, 0x00007FEB,
+		0x034, 0x00006FE8,
+		0x034, 0x00005DEA,
+		0x034, 0x00004CED,
+		0x034, 0x00003CEA,
+		0x034, 0x00002C6C,
+		0x034, 0x00001C69,
+		0x034, 0x00000C2B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3EB,
+		0x034, 0x000C938B,
+		0x034, 0x000C81AC,
+		0x034, 0x000C71A9,
+		0x034, 0x000C60AC,
+		0x034, 0x000C50A9,
+		0x034, 0x000C402E,
+		0x034, 0x000C302B,
+		0x034, 0x000C2028,
+		0x034, 0x000C100B,
+		0x034, 0x000C0008,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3AD,
+		0x034, 0x000C938A,
+		0x034, 0x000C818C,
+		0x034, 0x000C7189,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3AD,
+		0x034, 0x000C938A,
+		0x034, 0x000C818C,
+		0x034, 0x000C7189,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3AD,
+		0x034, 0x000C938A,
+		0x034, 0x000C818C,
+		0x034, 0x000C7189,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3AD,
+		0x034, 0x000C938A,
+		0x034, 0x000C818C,
+		0x034, 0x000C7189,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3F4,
+		0x034, 0x000C93D2,
+		0x034, 0x000C82D1,
+		0x034, 0x000C71F1,
+		0x034, 0x000C61EE,
+		0x034, 0x000C51EB,
+		0x034, 0x000C41E8,
+		0x034, 0x000C314B,
+		0x034, 0x000C2148,
+		0x034, 0x000C104B,
+		0x034, 0x000C0048,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CAFF7,
+		0x034, 0x000C9FF6,
+		0x034, 0x000C8FF3,
+		0x034, 0x000C7FF0,
+		0x034, 0x000C6FED,
+		0x034, 0x000C5FEA,
+		0x034, 0x000C4FE7,
+		0x034, 0x000C3CB1,
+		0x034, 0x000C2CAE,
+		0x034, 0x000C1CAB,
+		0x034, 0x000C0CA8,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3AD,
+		0x034, 0x000C938A,
+		0x034, 0x000C818C,
+		0x034, 0x000C7189,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000CA3AD,
+		0x034, 0x000C938A,
+		0x034, 0x000C818C,
+		0x034, 0x000C7189,
+		0x034, 0x000C606D,
+		0x034, 0x000C506A,
+		0x034, 0x000C402C,
+		0x034, 0x000C3029,
+		0x034, 0x000C2026,
+		0x034, 0x000C1009,
+		0x034, 0x000C0006,
+	0xA0000000,	0x00000000,
+		0x034, 0x000CA794,
+		0x034, 0x000C9791,
+		0x034, 0x000C878E,
+		0x034, 0x000C778B,
+		0x034, 0x000C658D,
+		0x034, 0x000C558A,
+		0x034, 0x000C448D,
+		0x034, 0x000C348A,
+		0x034, 0x000C244C,
+		0x034, 0x000C1449,
+		0x034, 0x000C042B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3EE,
+		0x034, 0x000A93EB,
+		0x034, 0x000A838B,
+		0x034, 0x000A71AC,
+		0x034, 0x000A61A9,
+		0x034, 0x000A50AC,
+		0x034, 0x000A40A9,
+		0x034, 0x000A30A6,
+		0x034, 0x000A202C,
+		0x034, 0x000A1029,
+		0x034, 0x000A0026,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3AD,
+		0x034, 0x000A938A,
+		0x034, 0x000A818C,
+		0x034, 0x000A7189,
+		0x034, 0x000A606D,
+		0x034, 0x000A504C,
+		0x034, 0x000A402C,
+		0x034, 0x000A3029,
+		0x034, 0x000A2026,
+		0x034, 0x000A1023,
+		0x034, 0x000A0006,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3AD,
+		0x034, 0x000A938A,
+		0x034, 0x000A818C,
+		0x034, 0x000A7189,
+		0x034, 0x000A606D,
+		0x034, 0x000A504C,
+		0x034, 0x000A402C,
+		0x034, 0x000A3029,
+		0x034, 0x000A2026,
+		0x034, 0x000A1023,
+		0x034, 0x000A0006,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3AD,
+		0x034, 0x000A938A,
+		0x034, 0x000A818C,
+		0x034, 0x000A7189,
+		0x034, 0x000A606D,
+		0x034, 0x000A504C,
+		0x034, 0x000A402C,
+		0x034, 0x000A3029,
+		0x034, 0x000A2026,
+		0x034, 0x000A1023,
+		0x034, 0x000A0006,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3AD,
+		0x034, 0x000A938A,
+		0x034, 0x000A818C,
+		0x034, 0x000A7189,
+		0x034, 0x000A606D,
+		0x034, 0x000A504C,
+		0x034, 0x000A402C,
+		0x034, 0x000A3029,
+		0x034, 0x000A2026,
+		0x034, 0x000A1023,
+		0x034, 0x000A0006,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3F5,
+		0x034, 0x000A93D2,
+		0x034, 0x000A83CE,
+		0x034, 0x000A7290,
+		0x034, 0x000A628D,
+		0x034, 0x000A528A,
+		0x034, 0x000A4287,
+		0x034, 0x000A308D,
+		0x034, 0x000A208A,
+		0x034, 0x000A1087,
+		0x034, 0x000A0048,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AAFF7,
+		0x034, 0x000A9FF6,
+		0x034, 0x000A8FF3,
+		0x034, 0x000A7FF0,
+		0x034, 0x000A6FED,
+		0x034, 0x000A5FEA,
+		0x034, 0x000A4FE7,
+		0x034, 0x000A3DEA,
+		0x034, 0x000A2DE7,
+		0x034, 0x000A1DE4,
+		0x034, 0x000A0D48,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3AD,
+		0x034, 0x000A938A,
+		0x034, 0x000A818C,
+		0x034, 0x000A7189,
+		0x034, 0x000A606D,
+		0x034, 0x000A504C,
+		0x034, 0x000A402C,
+		0x034, 0x000A3029,
+		0x034, 0x000A2026,
+		0x034, 0x000A1023,
+		0x034, 0x000A0006,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x000AA3AD,
+		0x034, 0x000A938A,
+		0x034, 0x000A818C,
+		0x034, 0x000A7189,
+		0x034, 0x000A606D,
+		0x034, 0x000A504C,
+		0x034, 0x000A402C,
+		0x034, 0x000A3029,
+		0x034, 0x000A2026,
+		0x034, 0x000A1023,
+		0x034, 0x000A0006,
+	0xA0000000,	0x00000000,
+		0x034, 0x000AA794,
+		0x034, 0x000A9791,
+		0x034, 0x000A878E,
+		0x034, 0x000A778B,
+		0x034, 0x000A658D,
+		0x034, 0x000A558A,
+		0x034, 0x000A448D,
+		0x034, 0x000A348A,
+		0x034, 0x000A244C,
+		0x034, 0x000A1449,
+		0x034, 0x000A042B,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EF,
+		0x034, 0x000893EC,
+		0x034, 0x0008838C,
+		0x034, 0x000871AD,
+		0x034, 0x000861AA,
+		0x034, 0x000850AD,
+		0x034, 0x000840AA,
+		0x034, 0x0008306A,
+		0x034, 0x0008202D,
+		0x034, 0x0008102A,
+		0x034, 0x00080027,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3F1,
+		0x034, 0x000892B1,
+		0x034, 0x000881CF,
+		0x034, 0x00087170,
+		0x034, 0x0008616D,
+		0x034, 0x0008516A,
+		0x034, 0x00084167,
+		0x034, 0x0008302F,
+		0x034, 0x0008202C,
+		0x034, 0x00081029,
+		0x034, 0x00080026,
+	0x90000009,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008AFF7,
+		0x034, 0x00089FF6,
+		0x034, 0x00088FF3,
+		0x034, 0x00087FF0,
+		0x034, 0x00086FED,
+		0x034, 0x00085FEA,
+		0x034, 0x00084FE7,
+		0x034, 0x00083EC7,
+		0x034, 0x00082EC4,
+		0x034, 0x00081D4B,
+		0x034, 0x00080D48,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x034, 0x0008A3EE,
+		0x034, 0x000893AC,
+		0x034, 0x0008838A,
+		0x034, 0x0008718C,
+		0x034, 0x00086189,
+		0x034, 0x0008506D,
+		0x034, 0x0008406A,
+		0x034, 0x0008302C,
+		0x034, 0x00082029,
+		0x034, 0x00081026,
+		0x034, 0x00080023,
+	0xA0000000,	0x00000000,
+		0x034, 0x0008A794,
+		0x034, 0x00089791,
+		0x034, 0x0008878E,
+		0x034, 0x0008778B,
+		0x034, 0x0008658D,
+		0x034, 0x0008558A,
+		0x034, 0x0008448D,
+		0x034, 0x0008348A,
+		0x034, 0x0008244C,
+		0x034, 0x00081449,
+		0x034, 0x0008042B,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x0DF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x018, 0x0001712A,
+		0x0EF, 0x00000040,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x035, 0x000006CC,
+		0x035, 0x000086CC,
+		0x035, 0x000106CC,
+		0x035, 0x000206CC,
+		0x035, 0x000286CC,
+		0x035, 0x000306CC,
+		0x035, 0x000406CC,
+		0x035, 0x000486CC,
+		0x035, 0x000506CC,
+		0x035, 0x000806CC,
+		0x035, 0x000886CC,
+		0x035, 0x000906CC,
+		0x035, 0x000A06CC,
+		0x035, 0x000A86CC,
+		0x035, 0x000B06CC,
+		0x035, 0x000C06CC,
+		0x035, 0x000C86CC,
+		0x035, 0x000D06CC,
+	0xA0000000,	0x00000000,
+		0x035, 0x00000484,
+		0x035, 0x00008484,
+		0x035, 0x00010484,
+		0x035, 0x00020584,
+		0x035, 0x00028584,
+		0x035, 0x00030584,
+		0x035, 0x00040584,
+		0x035, 0x00048584,
+		0x035, 0x00050584,
+		0x035, 0x000805FB,
+		0x035, 0x000885FB,
+		0x035, 0x000905FB,
+		0x035, 0x000A05FB,
+		0x035, 0x000A85FB,
+		0x035, 0x000B05FB,
+		0x035, 0x000C05FB,
+		0x035, 0x000C85FB,
+		0x035, 0x000D05FB,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x0DF, 0x00000001,
+	0xA0000000,	0x00000000,
+		0x0DF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x018, 0x0001712A,
+		0x0EF, 0x00000010,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000473,
+		0x036, 0x00008473,
+		0x036, 0x00010473,
+		0x036, 0x00020473,
+		0x036, 0x00028473,
+		0x036, 0x00030473,
+		0x036, 0x00040473,
+		0x036, 0x00048473,
+		0x036, 0x00050473,
+		0x036, 0x00080473,
+		0x036, 0x00088473,
+		0x036, 0x00090473,
+		0x036, 0x000A0473,
+		0x036, 0x000A8473,
+		0x036, 0x000B0473,
+		0x036, 0x000C0473,
+		0x036, 0x000C8473,
+		0x036, 0x000D0473,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x036, 0x00000475,
+		0x036, 0x00008475,
+		0x036, 0x00010475,
+		0x036, 0x00020475,
+		0x036, 0x00028475,
+		0x036, 0x00030475,
+		0x036, 0x00040475,
+		0x036, 0x00048475,
+		0x036, 0x00050475,
+		0x036, 0x00080475,
+		0x036, 0x00088475,
+		0x036, 0x00090475,
+		0x036, 0x000A0475,
+		0x036, 0x000A8475,
+		0x036, 0x000B0475,
+		0x036, 0x000C0475,
+		0x036, 0x000C8475,
+		0x036, 0x000D0475,
+	0xA0000000,	0x00000000,
+		0x036, 0x00000474,
+		0x036, 0x00008474,
+		0x036, 0x00010474,
+		0x036, 0x00020474,
+		0x036, 0x00028474,
+		0x036, 0x00030474,
+		0x036, 0x00040474,
+		0x036, 0x00048474,
+		0x036, 0x00050474,
+		0x036, 0x00080474,
+		0x036, 0x00088474,
+		0x036, 0x00090474,
+		0x036, 0x000A0474,
+		0x036, 0x000A8474,
+		0x036, 0x000B0474,
+		0x036, 0x000C0474,
+		0x036, 0x000C8474,
+		0x036, 0x000D0474,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x0EF, 0x00000004,
+		0x037, 0x00000000,
+		0x038, 0x0000514E,
+		0x037, 0x00004000,
+		0x038, 0x0000514E,
+		0x037, 0x00008000,
+		0x038, 0x0000514E,
+		0x037, 0x00010000,
+		0x038, 0x0000514E,
+		0x037, 0x00014000,
+		0x038, 0x0000514E,
+		0x037, 0x00018000,
+		0x038, 0x0000514E,
+		0x037, 0x0001C000,
+		0x038, 0x0000514E,
+		0x037, 0x00020000,
+		0x038, 0x0000514E,
+		0x037, 0x00024000,
+		0x038, 0x0000514E,
+		0x037, 0x00028000,
+		0x038, 0x0000514E,
+		0x037, 0x0002C000,
+		0x038, 0x0000714E,
+		0x037, 0x00030000,
+		0x038, 0x0000514E,
+		0x037, 0x00034000,
+		0x038, 0x0000514E,
+		0x037, 0x00038000,
+		0x038, 0x0000514E,
+		0x037, 0x0003C000,
+		0x038, 0x0000514E,
+		0x037, 0x00040000,
+		0x038, 0x0000514E,
+		0x037, 0x00044000,
+		0x038, 0x0000514E,
+		0x037, 0x00048000,
+		0x038, 0x0000514E,
+		0x037, 0x00080000,
+		0x038, 0x00005ECE,
+		0x037, 0x00084000,
+		0x038, 0x00005ECE,
+		0x037, 0x00088000,
+		0x038, 0x00005ECE,
+		0x037, 0x00090000,
+		0x038, 0x00005ECE,
+		0x037, 0x00094000,
+		0x038, 0x00005ECE,
+		0x037, 0x00098000,
+		0x038, 0x00005ECE,
+		0x037, 0x0009C000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000A8000,
+		0x038, 0x00005ECE,
+		0x037, 0x000AC000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000B8000,
+		0x038, 0x00005ECE,
+		0x037, 0x000BC000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C0000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C4000,
+		0x038, 0x00005ECE,
+		0x037, 0x000C8000,
+		0x038, 0x00005ECE,
+		0x0EF, 0x00000000,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000008,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x03C, 0x0000007D,
+		0x03C, 0x0000047D,
+		0x03C, 0x0000087D,
+		0x03C, 0x0000107D,
+		0x03C, 0x0000147D,
+		0x03C, 0x0000187D,
+	0xB0000000,	0x00000000,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x00000275,
+		0x03C, 0x00000542,
+		0x03C, 0x00000821,
+		0x03C, 0x00001275,
+		0x03C, 0x00001542,
+		0x03C, 0x00001821,
+		0x03C, 0x00002275,
+		0x03C, 0x00002542,
+		0x03C, 0x00002821,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027F,
+		0x03C, 0x00000542,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127F,
+		0x03C, 0x00001542,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227F,
+		0x03C, 0x00002542,
+		0x03C, 0x00002821,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027F,
+		0x03C, 0x00000542,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127F,
+		0x03C, 0x00001542,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227F,
+		0x03C, 0x00002542,
+		0x03C, 0x00002821,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027F,
+		0x03C, 0x00000542,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127F,
+		0x03C, 0x00001542,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227F,
+		0x03C, 0x00002542,
+		0x03C, 0x00002821,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027F,
+		0x03C, 0x00000542,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127F,
+		0x03C, 0x00001542,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227F,
+		0x03C, 0x00002542,
+		0x03C, 0x00002821,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027F,
+		0x03C, 0x00000542,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127F,
+		0x03C, 0x00001542,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227F,
+		0x03C, 0x00002542,
+		0x03C, 0x00002821,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027F,
+		0x03C, 0x00000542,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127F,
+		0x03C, 0x00001542,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227F,
+		0x03C, 0x00002542,
+		0x03C, 0x00002821,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x03C, 0x0000027F,
+		0x03C, 0x00000542,
+		0x03C, 0x00000821,
+		0x03C, 0x0000127F,
+		0x03C, 0x00001542,
+		0x03C, 0x00001821,
+		0x03C, 0x0000227F,
+		0x03C, 0x00002542,
+		0x03C, 0x00002821,
+	0xA0000000,	0x00000000,
+		0x03C, 0x0000037E,
+		0x03C, 0x00000575,
+		0x03C, 0x00000971,
+		0x03C, 0x0000127E,
+		0x03C, 0x00001575,
+		0x03C, 0x00001871,
+		0x03C, 0x0000217E,
+		0x03C, 0x00002575,
+		0x03C, 0x00002871,
+	0xB0000000,	0x00000000,
+		0x0EF, 0x00000000,
+		0x061, 0x000C0D47,
+		0x062, 0x0000133C,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x063, 0x000750E7,
+	0xA0000000,	0x00000000,
+		0x063, 0x0007D0E7,
+	0xB0000000,	0x00000000,
+		0x064, 0x00014FEC,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+		0x065, 0x000920D0,
+	0xA0000000,	0x00000000,
+		0x065, 0x000923FF,
+	0xB0000000,	0x00000000,
+		0x066, 0x00000040,
+		0x057, 0x00050000,
+		0x056, 0x00051DF0,
+	0x80000001,	0x00000000,	0x40000000,	0x00000000,
+	0x90000002,	0x00000000,	0x40000000,	0x00000000,
+	0x90000003,	0x00000000,	0x40000000,	0x00000000,
+	0x90000004,	0x00000000,	0x40000000,	0x00000000,
+	0x90000005,	0x00000000,	0x40000000,	0x00000000,
+	0x90000008,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000a,	0x00000000,	0x40000000,	0x00000000,
+	0x9000000b,	0x00000000,	0x40000000,	0x00000000,
+	0xA0000000,	0x00000000,
+		0x055, 0x00082060,
+	0xB0000000,	0x00000000,
+};
+
+RTW_DECL_TABLE_RF_RADIO(rtw8814a_rf_d, D);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8814a_txpwr_lmt[] = {
+	{ 0, 0, 0, 0, 1, 36, },
+	{ 2, 0, 0, 0, 1, 32, },
+	{ 1, 0, 0, 0, 1, 32, },
+	{ 0, 0, 0, 0, 2, 36, },
+	{ 2, 0, 0, 0, 2, 32, },
+	{ 1, 0, 0, 0, 2, 32, },
+	{ 0, 0, 0, 0, 3, 36, },
+	{ 2, 0, 0, 0, 3, 32, },
+	{ 1, 0, 0, 0, 3, 32, },
+	{ 0, 0, 0, 0, 4, 36, },
+	{ 2, 0, 0, 0, 4, 32, },
+	{ 1, 0, 0, 0, 4, 32, },
+	{ 0, 0, 0, 0, 5, 36, },
+	{ 2, 0, 0, 0, 5, 32, },
+	{ 1, 0, 0, 0, 5, 32, },
+	{ 0, 0, 0, 0, 6, 36, },
+	{ 2, 0, 0, 0, 6, 32, },
+	{ 1, 0, 0, 0, 6, 32, },
+	{ 0, 0, 0, 0, 7, 36, },
+	{ 2, 0, 0, 0, 7, 32, },
+	{ 1, 0, 0, 0, 7, 32, },
+	{ 0, 0, 0, 0, 8, 36, },
+	{ 2, 0, 0, 0, 8, 32, },
+	{ 1, 0, 0, 0, 8, 32, },
+	{ 0, 0, 0, 0, 9, 36, },
+	{ 2, 0, 0, 0, 9, 32, },
+	{ 1, 0, 0, 0, 9, 32, },
+	{ 0, 0, 0, 0, 10, 36, },
+	{ 2, 0, 0, 0, 10, 32, },
+	{ 1, 0, 0, 0, 10, 32, },
+	{ 0, 0, 0, 0, 11, 36, },
+	{ 2, 0, 0, 0, 11, 32, },
+	{ 1, 0, 0, 0, 11, 32, },
+	{ 0, 0, 0, 0, 12, 63, },
+	{ 2, 0, 0, 0, 12, 32, },
+	{ 1, 0, 0, 0, 12, 32, },
+	{ 0, 0, 0, 0, 13, 63, },
+	{ 2, 0, 0, 0, 13, 32, },
+	{ 1, 0, 0, 0, 13, 32, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 32, },
+	{ 0, 0, 0, 1, 1, 34, },
+	{ 2, 0, 0, 1, 1, 32, },
+	{ 1, 0, 0, 1, 1, 32, },
+	{ 0, 0, 0, 1, 2, 36, },
+	{ 2, 0, 0, 1, 2, 32, },
+	{ 1, 0, 0, 1, 2, 32, },
+	{ 0, 0, 0, 1, 3, 36, },
+	{ 2, 0, 0, 1, 3, 32, },
+	{ 1, 0, 0, 1, 3, 32, },
+	{ 0, 0, 0, 1, 4, 36, },
+	{ 2, 0, 0, 1, 4, 32, },
+	{ 1, 0, 0, 1, 4, 32, },
+	{ 0, 0, 0, 1, 5, 36, },
+	{ 2, 0, 0, 1, 5, 32, },
+	{ 1, 0, 0, 1, 5, 32, },
+	{ 0, 0, 0, 1, 6, 36, },
+	{ 2, 0, 0, 1, 6, 32, },
+	{ 1, 0, 0, 1, 6, 32, },
+	{ 0, 0, 0, 1, 7, 36, },
+	{ 2, 0, 0, 1, 7, 32, },
+	{ 1, 0, 0, 1, 7, 32, },
+	{ 0, 0, 0, 1, 8, 36, },
+	{ 2, 0, 0, 1, 8, 32, },
+	{ 1, 0, 0, 1, 8, 32, },
+	{ 0, 0, 0, 1, 9, 36, },
+	{ 2, 0, 0, 1, 9, 32, },
+	{ 1, 0, 0, 1, 9, 32, },
+	{ 0, 0, 0, 1, 10, 36, },
+	{ 2, 0, 0, 1, 10, 32, },
+	{ 1, 0, 0, 1, 10, 32, },
+	{ 0, 0, 0, 1, 11, 32, },
+	{ 2, 0, 0, 1, 11, 32, },
+	{ 1, 0, 0, 1, 11, 32, },
+	{ 0, 0, 0, 1, 12, 63, },
+	{ 2, 0, 0, 1, 12, 32, },
+	{ 1, 0, 0, 1, 12, 32, },
+	{ 0, 0, 0, 1, 13, 63, },
+	{ 2, 0, 0, 1, 13, 32, },
+	{ 1, 0, 0, 1, 13, 32, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 63, },
+	{ 0, 0, 0, 2, 1, 34, },
+	{ 2, 0, 0, 2, 1, 32, },
+	{ 1, 0, 0, 2, 1, 32, },
+	{ 0, 0, 0, 2, 2, 36, },
+	{ 2, 0, 0, 2, 2, 32, },
+	{ 1, 0, 0, 2, 2, 32, },
+	{ 0, 0, 0, 2, 3, 36, },
+	{ 2, 0, 0, 2, 3, 32, },
+	{ 1, 0, 0, 2, 3, 32, },
+	{ 0, 0, 0, 2, 4, 36, },
+	{ 2, 0, 0, 2, 4, 32, },
+	{ 1, 0, 0, 2, 4, 32, },
+	{ 0, 0, 0, 2, 5, 36, },
+	{ 2, 0, 0, 2, 5, 32, },
+	{ 1, 0, 0, 2, 5, 32, },
+	{ 0, 0, 0, 2, 6, 36, },
+	{ 2, 0, 0, 2, 6, 32, },
+	{ 1, 0, 0, 2, 6, 32, },
+	{ 0, 0, 0, 2, 7, 36, },
+	{ 2, 0, 0, 2, 7, 32, },
+	{ 1, 0, 0, 2, 7, 32, },
+	{ 0, 0, 0, 2, 8, 36, },
+	{ 2, 0, 0, 2, 8, 32, },
+	{ 1, 0, 0, 2, 8, 32, },
+	{ 0, 0, 0, 2, 9, 36, },
+	{ 2, 0, 0, 2, 9, 32, },
+	{ 1, 0, 0, 2, 9, 32, },
+	{ 0, 0, 0, 2, 10, 36, },
+	{ 2, 0, 0, 2, 10, 32, },
+	{ 1, 0, 0, 2, 10, 32, },
+	{ 0, 0, 0, 2, 11, 32, },
+	{ 2, 0, 0, 2, 11, 32, },
+	{ 1, 0, 0, 2, 11, 32, },
+	{ 0, 0, 0, 2, 12, 63, },
+	{ 2, 0, 0, 2, 12, 32, },
+	{ 1, 0, 0, 2, 12, 32, },
+	{ 0, 0, 0, 2, 13, 63, },
+	{ 2, 0, 0, 2, 13, 32, },
+	{ 1, 0, 0, 2, 13, 32, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 63, },
+	{ 0, 0, 0, 3, 1, 32, },
+	{ 2, 0, 0, 3, 1, 30, },
+	{ 1, 0, 0, 3, 1, 30, },
+	{ 0, 0, 0, 3, 2, 34, },
+	{ 2, 0, 0, 3, 2, 30, },
+	{ 1, 0, 0, 3, 2, 30, },
+	{ 0, 0, 0, 3, 3, 34, },
+	{ 2, 0, 0, 3, 3, 30, },
+	{ 1, 0, 0, 3, 3, 30, },
+	{ 0, 0, 0, 3, 4, 34, },
+	{ 2, 0, 0, 3, 4, 30, },
+	{ 1, 0, 0, 3, 4, 30, },
+	{ 0, 0, 0, 3, 5, 34, },
+	{ 2, 0, 0, 3, 5, 30, },
+	{ 1, 0, 0, 3, 5, 30, },
+	{ 0, 0, 0, 3, 6, 34, },
+	{ 2, 0, 0, 3, 6, 30, },
+	{ 1, 0, 0, 3, 6, 30, },
+	{ 0, 0, 0, 3, 7, 34, },
+	{ 2, 0, 0, 3, 7, 30, },
+	{ 1, 0, 0, 3, 7, 30, },
+	{ 0, 0, 0, 3, 8, 34, },
+	{ 2, 0, 0, 3, 8, 30, },
+	{ 1, 0, 0, 3, 8, 30, },
+	{ 0, 0, 0, 3, 9, 34, },
+	{ 2, 0, 0, 3, 9, 30, },
+	{ 1, 0, 0, 3, 9, 30, },
+	{ 0, 0, 0, 3, 10, 34, },
+	{ 2, 0, 0, 3, 10, 30, },
+	{ 1, 0, 0, 3, 10, 30, },
+	{ 0, 0, 0, 3, 11, 30, },
+	{ 2, 0, 0, 3, 11, 30, },
+	{ 1, 0, 0, 3, 11, 30, },
+	{ 0, 0, 0, 3, 12, 63, },
+	{ 2, 0, 0, 3, 12, 30, },
+	{ 1, 0, 0, 3, 12, 30, },
+	{ 0, 0, 0, 3, 13, 63, },
+	{ 2, 0, 0, 3, 13, 30, },
+	{ 1, 0, 0, 3, 13, 30, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 63, },
+	{ 0, 0, 0, 6, 1, 30, },
+	{ 2, 0, 0, 6, 1, 28, },
+	{ 1, 0, 0, 6, 1, 28, },
+	{ 0, 0, 0, 6, 2, 32, },
+	{ 2, 0, 0, 6, 2, 28, },
+	{ 1, 0, 0, 6, 2, 28, },
+	{ 0, 0, 0, 6, 3, 32, },
+	{ 2, 0, 0, 6, 3, 28, },
+	{ 1, 0, 0, 6, 3, 28, },
+	{ 0, 0, 0, 6, 4, 32, },
+	{ 2, 0, 0, 6, 4, 28, },
+	{ 1, 0, 0, 6, 4, 28, },
+	{ 0, 0, 0, 6, 5, 32, },
+	{ 2, 0, 0, 6, 5, 28, },
+	{ 1, 0, 0, 6, 5, 28, },
+	{ 0, 0, 0, 6, 6, 32, },
+	{ 2, 0, 0, 6, 6, 28, },
+	{ 1, 0, 0, 6, 6, 28, },
+	{ 0, 0, 0, 6, 7, 32, },
+	{ 2, 0, 0, 6, 7, 28, },
+	{ 1, 0, 0, 6, 7, 28, },
+	{ 0, 0, 0, 6, 8, 32, },
+	{ 2, 0, 0, 6, 8, 28, },
+	{ 1, 0, 0, 6, 8, 28, },
+	{ 0, 0, 0, 6, 9, 32, },
+	{ 2, 0, 0, 6, 9, 28, },
+	{ 1, 0, 0, 6, 9, 28, },
+	{ 0, 0, 0, 6, 10, 32, },
+	{ 2, 0, 0, 6, 10, 28, },
+	{ 1, 0, 0, 6, 10, 28, },
+	{ 0, 0, 0, 6, 11, 28, },
+	{ 2, 0, 0, 6, 11, 28, },
+	{ 1, 0, 0, 6, 11, 28, },
+	{ 0, 0, 0, 6, 12, 63, },
+	{ 2, 0, 0, 6, 12, 28, },
+	{ 1, 0, 0, 6, 12, 28, },
+	{ 0, 0, 0, 6, 13, 63, },
+	{ 2, 0, 0, 6, 13, 28, },
+	{ 1, 0, 0, 6, 13, 28, },
+	{ 0, 0, 0, 6, 14, 63, },
+	{ 2, 0, 0, 6, 14, 63, },
+	{ 1, 0, 0, 6, 14, 63, },
+	{ 0, 0, 0, 7, 1, 28, },
+	{ 2, 0, 0, 7, 1, 26, },
+	{ 1, 0, 0, 7, 1, 26, },
+	{ 0, 0, 0, 7, 2, 30, },
+	{ 2, 0, 0, 7, 2, 26, },
+	{ 1, 0, 0, 7, 2, 26, },
+	{ 0, 0, 0, 7, 3, 30, },
+	{ 2, 0, 0, 7, 3, 26, },
+	{ 1, 0, 0, 7, 3, 26, },
+	{ 0, 0, 0, 7, 4, 30, },
+	{ 2, 0, 0, 7, 4, 26, },
+	{ 1, 0, 0, 7, 4, 26, },
+	{ 0, 0, 0, 7, 5, 30, },
+	{ 2, 0, 0, 7, 5, 26, },
+	{ 1, 0, 0, 7, 5, 26, },
+	{ 0, 0, 0, 7, 6, 30, },
+	{ 2, 0, 0, 7, 6, 26, },
+	{ 1, 0, 0, 7, 6, 26, },
+	{ 0, 0, 0, 7, 7, 30, },
+	{ 2, 0, 0, 7, 7, 26, },
+	{ 1, 0, 0, 7, 7, 26, },
+	{ 0, 0, 0, 7, 8, 30, },
+	{ 2, 0, 0, 7, 8, 26, },
+	{ 1, 0, 0, 7, 8, 26, },
+	{ 0, 0, 0, 7, 9, 30, },
+	{ 2, 0, 0, 7, 9, 26, },
+	{ 1, 0, 0, 7, 9, 26, },
+	{ 0, 0, 0, 7, 10, 30, },
+	{ 2, 0, 0, 7, 10, 26, },
+	{ 1, 0, 0, 7, 10, 26, },
+	{ 0, 0, 0, 7, 11, 26, },
+	{ 2, 0, 0, 7, 11, 26, },
+	{ 1, 0, 0, 7, 11, 26, },
+	{ 0, 0, 0, 7, 12, 63, },
+	{ 2, 0, 0, 7, 12, 26, },
+	{ 1, 0, 0, 7, 12, 26, },
+	{ 0, 0, 0, 7, 13, 63, },
+	{ 2, 0, 0, 7, 13, 26, },
+	{ 1, 0, 0, 7, 13, 26, },
+	{ 0, 0, 0, 7, 14, 63, },
+	{ 2, 0, 0, 7, 14, 63, },
+	{ 1, 0, 0, 7, 14, 63, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 32, },
+	{ 2, 0, 1, 2, 3, 32, },
+	{ 1, 0, 1, 2, 3, 32, },
+	{ 0, 0, 1, 2, 4, 36, },
+	{ 2, 0, 1, 2, 4, 32, },
+	{ 1, 0, 1, 2, 4, 32, },
+	{ 0, 0, 1, 2, 5, 36, },
+	{ 2, 0, 1, 2, 5, 32, },
+	{ 1, 0, 1, 2, 5, 32, },
+	{ 0, 0, 1, 2, 6, 36, },
+	{ 2, 0, 1, 2, 6, 32, },
+	{ 1, 0, 1, 2, 6, 32, },
+	{ 0, 0, 1, 2, 7, 36, },
+	{ 2, 0, 1, 2, 7, 32, },
+	{ 1, 0, 1, 2, 7, 32, },
+	{ 0, 0, 1, 2, 8, 36, },
+	{ 2, 0, 1, 2, 8, 32, },
+	{ 1, 0, 1, 2, 8, 32, },
+	{ 0, 0, 1, 2, 9, 36, },
+	{ 2, 0, 1, 2, 9, 32, },
+	{ 1, 0, 1, 2, 9, 32, },
+	{ 0, 0, 1, 2, 10, 36, },
+	{ 2, 0, 1, 2, 10, 32, },
+	{ 1, 0, 1, 2, 10, 32, },
+	{ 0, 0, 1, 2, 11, 32, },
+	{ 2, 0, 1, 2, 11, 32, },
+	{ 1, 0, 1, 2, 11, 32, },
+	{ 0, 0, 1, 2, 12, 63, },
+	{ 2, 0, 1, 2, 12, 32, },
+	{ 1, 0, 1, 2, 12, 32, },
+	{ 0, 0, 1, 2, 13, 63, },
+	{ 2, 0, 1, 2, 13, 32, },
+	{ 1, 0, 1, 2, 13, 32, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 30, },
+	{ 2, 0, 1, 3, 3, 30, },
+	{ 1, 0, 1, 3, 3, 30, },
+	{ 0, 0, 1, 3, 4, 34, },
+	{ 2, 0, 1, 3, 4, 30, },
+	{ 1, 0, 1, 3, 4, 30, },
+	{ 0, 0, 1, 3, 5, 34, },
+	{ 2, 0, 1, 3, 5, 30, },
+	{ 1, 0, 1, 3, 5, 30, },
+	{ 0, 0, 1, 3, 6, 34, },
+	{ 2, 0, 1, 3, 6, 30, },
+	{ 1, 0, 1, 3, 6, 30, },
+	{ 0, 0, 1, 3, 7, 34, },
+	{ 2, 0, 1, 3, 7, 30, },
+	{ 1, 0, 1, 3, 7, 30, },
+	{ 0, 0, 1, 3, 8, 34, },
+	{ 2, 0, 1, 3, 8, 30, },
+	{ 1, 0, 1, 3, 8, 30, },
+	{ 0, 0, 1, 3, 9, 34, },
+	{ 2, 0, 1, 3, 9, 30, },
+	{ 1, 0, 1, 3, 9, 30, },
+	{ 0, 0, 1, 3, 10, 34, },
+	{ 2, 0, 1, 3, 10, 30, },
+	{ 1, 0, 1, 3, 10, 30, },
+	{ 0, 0, 1, 3, 11, 30, },
+	{ 2, 0, 1, 3, 11, 30, },
+	{ 1, 0, 1, 3, 11, 30, },
+	{ 0, 0, 1, 3, 12, 63, },
+	{ 2, 0, 1, 3, 12, 30, },
+	{ 1, 0, 1, 3, 12, 30, },
+	{ 0, 0, 1, 3, 13, 63, },
+	{ 2, 0, 1, 3, 13, 30, },
+	{ 1, 0, 1, 3, 13, 30, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 0, 1, 6, 1, 63, },
+	{ 2, 0, 1, 6, 1, 63, },
+	{ 1, 0, 1, 6, 1, 63, },
+	{ 0, 0, 1, 6, 2, 63, },
+	{ 2, 0, 1, 6, 2, 63, },
+	{ 1, 0, 1, 6, 2, 63, },
+	{ 0, 0, 1, 6, 3, 28, },
+	{ 2, 0, 1, 6, 3, 28, },
+	{ 1, 0, 1, 6, 3, 28, },
+	{ 0, 0, 1, 6, 4, 32, },
+	{ 2, 0, 1, 6, 4, 28, },
+	{ 1, 0, 1, 6, 4, 28, },
+	{ 0, 0, 1, 6, 5, 32, },
+	{ 2, 0, 1, 6, 5, 28, },
+	{ 1, 0, 1, 6, 5, 28, },
+	{ 0, 0, 1, 6, 6, 32, },
+	{ 2, 0, 1, 6, 6, 28, },
+	{ 1, 0, 1, 6, 6, 28, },
+	{ 0, 0, 1, 6, 7, 32, },
+	{ 2, 0, 1, 6, 7, 28, },
+	{ 1, 0, 1, 6, 7, 28, },
+	{ 0, 0, 1, 6, 8, 32, },
+	{ 2, 0, 1, 6, 8, 28, },
+	{ 1, 0, 1, 6, 8, 28, },
+	{ 0, 0, 1, 6, 9, 32, },
+	{ 2, 0, 1, 6, 9, 28, },
+	{ 1, 0, 1, 6, 9, 28, },
+	{ 0, 0, 1, 6, 10, 32, },
+	{ 2, 0, 1, 6, 10, 28, },
+	{ 1, 0, 1, 6, 10, 28, },
+	{ 0, 0, 1, 6, 11, 28, },
+	{ 2, 0, 1, 6, 11, 28, },
+	{ 1, 0, 1, 6, 11, 28, },
+	{ 0, 0, 1, 6, 12, 63, },
+	{ 2, 0, 1, 6, 12, 28, },
+	{ 1, 0, 1, 6, 12, 28, },
+	{ 0, 0, 1, 6, 13, 63, },
+	{ 2, 0, 1, 6, 13, 28, },
+	{ 1, 0, 1, 6, 13, 28, },
+	{ 0, 0, 1, 6, 14, 63, },
+	{ 2, 0, 1, 6, 14, 63, },
+	{ 1, 0, 1, 6, 14, 63, },
+	{ 0, 0, 1, 7, 1, 63, },
+	{ 2, 0, 1, 7, 1, 63, },
+	{ 1, 0, 1, 7, 1, 63, },
+	{ 0, 0, 1, 7, 2, 63, },
+	{ 2, 0, 1, 7, 2, 63, },
+	{ 1, 0, 1, 7, 2, 63, },
+	{ 0, 0, 1, 7, 3, 26, },
+	{ 2, 0, 1, 7, 3, 26, },
+	{ 1, 0, 1, 7, 3, 26, },
+	{ 0, 0, 1, 7, 4, 30, },
+	{ 2, 0, 1, 7, 4, 26, },
+	{ 1, 0, 1, 7, 4, 26, },
+	{ 0, 0, 1, 7, 5, 30, },
+	{ 2, 0, 1, 7, 5, 26, },
+	{ 1, 0, 1, 7, 5, 26, },
+	{ 0, 0, 1, 7, 6, 30, },
+	{ 2, 0, 1, 7, 6, 26, },
+	{ 1, 0, 1, 7, 6, 26, },
+	{ 0, 0, 1, 7, 7, 30, },
+	{ 2, 0, 1, 7, 7, 26, },
+	{ 1, 0, 1, 7, 7, 26, },
+	{ 0, 0, 1, 7, 8, 30, },
+	{ 2, 0, 1, 7, 8, 26, },
+	{ 1, 0, 1, 7, 8, 26, },
+	{ 0, 0, 1, 7, 9, 30, },
+	{ 2, 0, 1, 7, 9, 26, },
+	{ 1, 0, 1, 7, 9, 26, },
+	{ 0, 0, 1, 7, 10, 30, },
+	{ 2, 0, 1, 7, 10, 26, },
+	{ 1, 0, 1, 7, 10, 26, },
+	{ 0, 0, 1, 7, 11, 26, },
+	{ 2, 0, 1, 7, 11, 26, },
+	{ 1, 0, 1, 7, 11, 26, },
+	{ 0, 0, 1, 7, 12, 63, },
+	{ 2, 0, 1, 7, 12, 26, },
+	{ 1, 0, 1, 7, 12, 26, },
+	{ 0, 0, 1, 7, 13, 63, },
+	{ 2, 0, 1, 7, 13, 26, },
+	{ 1, 0, 1, 7, 13, 26, },
+	{ 0, 0, 1, 7, 14, 63, },
+	{ 2, 0, 1, 7, 14, 63, },
+	{ 1, 0, 1, 7, 14, 63, },
+	{ 0, 1, 0, 1, 36, 30, },
+	{ 2, 1, 0, 1, 36, 32, },
+	{ 1, 1, 0, 1, 36, 32, },
+	{ 0, 1, 0, 1, 40, 30, },
+	{ 2, 1, 0, 1, 40, 32, },
+	{ 1, 1, 0, 1, 40, 32, },
+	{ 0, 1, 0, 1, 44, 30, },
+	{ 2, 1, 0, 1, 44, 32, },
+	{ 1, 1, 0, 1, 44, 32, },
+	{ 0, 1, 0, 1, 48, 30, },
+	{ 2, 1, 0, 1, 48, 32, },
+	{ 1, 1, 0, 1, 48, 32, },
+	{ 0, 1, 0, 1, 52, 36, },
+	{ 2, 1, 0, 1, 52, 32, },
+	{ 1, 1, 0, 1, 52, 32, },
+	{ 0, 1, 0, 1, 56, 34, },
+	{ 2, 1, 0, 1, 56, 32, },
+	{ 1, 1, 0, 1, 56, 32, },
+	{ 0, 1, 0, 1, 60, 32, },
+	{ 2, 1, 0, 1, 60, 32, },
+	{ 1, 1, 0, 1, 60, 32, },
+	{ 0, 1, 0, 1, 64, 28, },
+	{ 2, 1, 0, 1, 64, 32, },
+	{ 1, 1, 0, 1, 64, 32, },
+	{ 0, 1, 0, 1, 100, 30, },
+	{ 2, 1, 0, 1, 100, 32, },
+	{ 1, 1, 0, 1, 100, 32, },
+	{ 0, 1, 0, 1, 104, 30, },
+	{ 2, 1, 0, 1, 104, 32, },
+	{ 1, 1, 0, 1, 104, 32, },
+	{ 0, 1, 0, 1, 108, 32, },
+	{ 2, 1, 0, 1, 108, 32, },
+	{ 1, 1, 0, 1, 108, 32, },
+	{ 0, 1, 0, 1, 112, 34, },
+	{ 2, 1, 0, 1, 112, 32, },
+	{ 1, 1, 0, 1, 112, 32, },
+	{ 0, 1, 0, 1, 116, 34, },
+	{ 2, 1, 0, 1, 116, 32, },
+	{ 1, 1, 0, 1, 116, 32, },
+	{ 0, 1, 0, 1, 120, 36, },
+	{ 2, 1, 0, 1, 120, 32, },
+	{ 1, 1, 0, 1, 120, 32, },
+	{ 0, 1, 0, 1, 124, 34, },
+	{ 2, 1, 0, 1, 124, 32, },
+	{ 1, 1, 0, 1, 124, 32, },
+	{ 0, 1, 0, 1, 128, 32, },
+	{ 2, 1, 0, 1, 128, 32, },
+	{ 1, 1, 0, 1, 128, 32, },
+	{ 0, 1, 0, 1, 132, 30, },
+	{ 2, 1, 0, 1, 132, 32, },
+	{ 1, 1, 0, 1, 132, 32, },
+	{ 0, 1, 0, 1, 136, 30, },
+	{ 2, 1, 0, 1, 136, 32, },
+	{ 1, 1, 0, 1, 136, 32, },
+	{ 0, 1, 0, 1, 140, 28, },
+	{ 2, 1, 0, 1, 140, 32, },
+	{ 1, 1, 0, 1, 140, 32, },
+	{ 0, 1, 0, 1, 149, 36, },
+	{ 2, 1, 0, 1, 149, 32, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 36, },
+	{ 2, 1, 0, 1, 153, 32, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 36, },
+	{ 2, 1, 0, 1, 157, 32, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 36, },
+	{ 2, 1, 0, 1, 161, 32, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 36, },
+	{ 2, 1, 0, 1, 165, 32, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 30, },
+	{ 2, 1, 0, 2, 36, 32, },
+	{ 1, 1, 0, 2, 36, 32, },
+	{ 0, 1, 0, 2, 40, 30, },
+	{ 2, 1, 0, 2, 40, 32, },
+	{ 1, 1, 0, 2, 40, 32, },
+	{ 0, 1, 0, 2, 44, 30, },
+	{ 2, 1, 0, 2, 44, 32, },
+	{ 1, 1, 0, 2, 44, 32, },
+	{ 0, 1, 0, 2, 48, 30, },
+	{ 2, 1, 0, 2, 48, 32, },
+	{ 1, 1, 0, 2, 48, 32, },
+	{ 0, 1, 0, 2, 52, 36, },
+	{ 2, 1, 0, 2, 52, 32, },
+	{ 1, 1, 0, 2, 52, 32, },
+	{ 0, 1, 0, 2, 56, 34, },
+	{ 2, 1, 0, 2, 56, 32, },
+	{ 1, 1, 0, 2, 56, 32, },
+	{ 0, 1, 0, 2, 60, 32, },
+	{ 2, 1, 0, 2, 60, 32, },
+	{ 1, 1, 0, 2, 60, 32, },
+	{ 0, 1, 0, 2, 64, 28, },
+	{ 2, 1, 0, 2, 64, 32, },
+	{ 1, 1, 0, 2, 64, 32, },
+	{ 0, 1, 0, 2, 100, 30, },
+	{ 2, 1, 0, 2, 100, 32, },
+	{ 1, 1, 0, 2, 100, 32, },
+	{ 0, 1, 0, 2, 104, 30, },
+	{ 2, 1, 0, 2, 104, 32, },
+	{ 1, 1, 0, 2, 104, 32, },
+	{ 0, 1, 0, 2, 108, 32, },
+	{ 2, 1, 0, 2, 108, 32, },
+	{ 1, 1, 0, 2, 108, 32, },
+	{ 0, 1, 0, 2, 112, 34, },
+	{ 2, 1, 0, 2, 112, 32, },
+	{ 1, 1, 0, 2, 112, 32, },
+	{ 0, 1, 0, 2, 116, 34, },
+	{ 2, 1, 0, 2, 116, 32, },
+	{ 1, 1, 0, 2, 116, 32, },
+	{ 0, 1, 0, 2, 120, 36, },
+	{ 2, 1, 0, 2, 120, 32, },
+	{ 1, 1, 0, 2, 120, 32, },
+	{ 0, 1, 0, 2, 124, 34, },
+	{ 2, 1, 0, 2, 124, 32, },
+	{ 1, 1, 0, 2, 124, 32, },
+	{ 0, 1, 0, 2, 128, 32, },
+	{ 2, 1, 0, 2, 128, 32, },
+	{ 1, 1, 0, 2, 128, 32, },
+	{ 0, 1, 0, 2, 132, 30, },
+	{ 2, 1, 0, 2, 132, 32, },
+	{ 1, 1, 0, 2, 132, 32, },
+	{ 0, 1, 0, 2, 136, 30, },
+	{ 2, 1, 0, 2, 136, 32, },
+	{ 1, 1, 0, 2, 136, 32, },
+	{ 0, 1, 0, 2, 140, 28, },
+	{ 2, 1, 0, 2, 140, 32, },
+	{ 1, 1, 0, 2, 140, 32, },
+	{ 0, 1, 0, 2, 149, 36, },
+	{ 2, 1, 0, 2, 149, 32, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 36, },
+	{ 2, 1, 0, 2, 153, 32, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 36, },
+	{ 2, 1, 0, 2, 157, 32, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 36, },
+	{ 2, 1, 0, 2, 161, 32, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 36, },
+	{ 2, 1, 0, 2, 165, 32, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 28, },
+	{ 2, 1, 0, 3, 36, 30, },
+	{ 1, 1, 0, 3, 36, 30, },
+	{ 0, 1, 0, 3, 40, 28, },
+	{ 2, 1, 0, 3, 40, 30, },
+	{ 1, 1, 0, 3, 40, 30, },
+	{ 0, 1, 0, 3, 44, 28, },
+	{ 2, 1, 0, 3, 44, 30, },
+	{ 1, 1, 0, 3, 44, 30, },
+	{ 0, 1, 0, 3, 48, 28, },
+	{ 2, 1, 0, 3, 48, 30, },
+	{ 1, 1, 0, 3, 48, 30, },
+	{ 0, 1, 0, 3, 52, 34, },
+	{ 2, 1, 0, 3, 52, 30, },
+	{ 1, 1, 0, 3, 52, 30, },
+	{ 0, 1, 0, 3, 56, 32, },
+	{ 2, 1, 0, 3, 56, 30, },
+	{ 1, 1, 0, 3, 56, 30, },
+	{ 0, 1, 0, 3, 60, 30, },
+	{ 2, 1, 0, 3, 60, 30, },
+	{ 1, 1, 0, 3, 60, 30, },
+	{ 0, 1, 0, 3, 64, 26, },
+	{ 2, 1, 0, 3, 64, 30, },
+	{ 1, 1, 0, 3, 64, 30, },
+	{ 0, 1, 0, 3, 100, 28, },
+	{ 2, 1, 0, 3, 100, 30, },
+	{ 1, 1, 0, 3, 100, 30, },
+	{ 0, 1, 0, 3, 104, 28, },
+	{ 2, 1, 0, 3, 104, 30, },
+	{ 1, 1, 0, 3, 104, 30, },
+	{ 0, 1, 0, 3, 108, 30, },
+	{ 2, 1, 0, 3, 108, 30, },
+	{ 1, 1, 0, 3, 108, 30, },
+	{ 0, 1, 0, 3, 112, 32, },
+	{ 2, 1, 0, 3, 112, 30, },
+	{ 1, 1, 0, 3, 112, 30, },
+	{ 0, 1, 0, 3, 116, 32, },
+	{ 2, 1, 0, 3, 116, 30, },
+	{ 1, 1, 0, 3, 116, 30, },
+	{ 0, 1, 0, 3, 120, 34, },
+	{ 2, 1, 0, 3, 120, 30, },
+	{ 1, 1, 0, 3, 120, 30, },
+	{ 0, 1, 0, 3, 124, 32, },
+	{ 2, 1, 0, 3, 124, 30, },
+	{ 1, 1, 0, 3, 124, 30, },
+	{ 0, 1, 0, 3, 128, 30, },
+	{ 2, 1, 0, 3, 128, 30, },
+	{ 1, 1, 0, 3, 128, 30, },
+	{ 0, 1, 0, 3, 132, 28, },
+	{ 2, 1, 0, 3, 132, 30, },
+	{ 1, 1, 0, 3, 132, 30, },
+	{ 0, 1, 0, 3, 136, 28, },
+	{ 2, 1, 0, 3, 136, 30, },
+	{ 1, 1, 0, 3, 136, 30, },
+	{ 0, 1, 0, 3, 140, 26, },
+	{ 2, 1, 0, 3, 140, 30, },
+	{ 1, 1, 0, 3, 140, 30, },
+	{ 0, 1, 0, 3, 149, 34, },
+	{ 2, 1, 0, 3, 149, 30, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 34, },
+	{ 2, 1, 0, 3, 153, 30, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 34, },
+	{ 2, 1, 0, 3, 157, 30, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 34, },
+	{ 2, 1, 0, 3, 161, 30, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 34, },
+	{ 2, 1, 0, 3, 165, 30, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 0, 6, 36, 26, },
+	{ 2, 1, 0, 6, 36, 28, },
+	{ 1, 1, 0, 6, 36, 28, },
+	{ 0, 1, 0, 6, 40, 26, },
+	{ 2, 1, 0, 6, 40, 28, },
+	{ 1, 1, 0, 6, 40, 28, },
+	{ 0, 1, 0, 6, 44, 26, },
+	{ 2, 1, 0, 6, 44, 28, },
+	{ 1, 1, 0, 6, 44, 28, },
+	{ 0, 1, 0, 6, 48, 26, },
+	{ 2, 1, 0, 6, 48, 28, },
+	{ 1, 1, 0, 6, 48, 28, },
+	{ 0, 1, 0, 6, 52, 32, },
+	{ 2, 1, 0, 6, 52, 28, },
+	{ 1, 1, 0, 6, 52, 28, },
+	{ 0, 1, 0, 6, 56, 30, },
+	{ 2, 1, 0, 6, 56, 28, },
+	{ 1, 1, 0, 6, 56, 28, },
+	{ 0, 1, 0, 6, 60, 28, },
+	{ 2, 1, 0, 6, 60, 28, },
+	{ 1, 1, 0, 6, 60, 28, },
+	{ 0, 1, 0, 6, 64, 24, },
+	{ 2, 1, 0, 6, 64, 28, },
+	{ 1, 1, 0, 6, 64, 28, },
+	{ 0, 1, 0, 6, 100, 26, },
+	{ 2, 1, 0, 6, 100, 28, },
+	{ 1, 1, 0, 6, 100, 28, },
+	{ 0, 1, 0, 6, 104, 26, },
+	{ 2, 1, 0, 6, 104, 28, },
+	{ 1, 1, 0, 6, 104, 28, },
+	{ 0, 1, 0, 6, 108, 28, },
+	{ 2, 1, 0, 6, 108, 28, },
+	{ 1, 1, 0, 6, 108, 28, },
+	{ 0, 1, 0, 6, 112, 30, },
+	{ 2, 1, 0, 6, 112, 28, },
+	{ 1, 1, 0, 6, 112, 28, },
+	{ 0, 1, 0, 6, 116, 30, },
+	{ 2, 1, 0, 6, 116, 28, },
+	{ 1, 1, 0, 6, 116, 28, },
+	{ 0, 1, 0, 6, 120, 32, },
+	{ 2, 1, 0, 6, 120, 28, },
+	{ 1, 1, 0, 6, 120, 28, },
+	{ 0, 1, 0, 6, 124, 30, },
+	{ 2, 1, 0, 6, 124, 28, },
+	{ 1, 1, 0, 6, 124, 28, },
+	{ 0, 1, 0, 6, 128, 28, },
+	{ 2, 1, 0, 6, 128, 28, },
+	{ 1, 1, 0, 6, 128, 28, },
+	{ 0, 1, 0, 6, 132, 26, },
+	{ 2, 1, 0, 6, 132, 28, },
+	{ 1, 1, 0, 6, 132, 28, },
+	{ 0, 1, 0, 6, 136, 26, },
+	{ 2, 1, 0, 6, 136, 28, },
+	{ 1, 1, 0, 6, 136, 28, },
+	{ 0, 1, 0, 6, 140, 24, },
+	{ 2, 1, 0, 6, 140, 28, },
+	{ 1, 1, 0, 6, 140, 28, },
+	{ 0, 1, 0, 6, 149, 32, },
+	{ 2, 1, 0, 6, 149, 28, },
+	{ 1, 1, 0, 6, 149, 63, },
+	{ 0, 1, 0, 6, 153, 32, },
+	{ 2, 1, 0, 6, 153, 28, },
+	{ 1, 1, 0, 6, 153, 63, },
+	{ 0, 1, 0, 6, 157, 32, },
+	{ 2, 1, 0, 6, 157, 28, },
+	{ 1, 1, 0, 6, 157, 63, },
+	{ 0, 1, 0, 6, 161, 32, },
+	{ 2, 1, 0, 6, 161, 28, },
+	{ 1, 1, 0, 6, 161, 63, },
+	{ 0, 1, 0, 6, 165, 32, },
+	{ 2, 1, 0, 6, 165, 28, },
+	{ 1, 1, 0, 6, 165, 63, },
+	{ 0, 1, 0, 7, 36, 24, },
+	{ 2, 1, 0, 7, 36, 26, },
+	{ 1, 1, 0, 7, 36, 26, },
+	{ 0, 1, 0, 7, 40, 24, },
+	{ 2, 1, 0, 7, 40, 26, },
+	{ 1, 1, 0, 7, 40, 26, },
+	{ 0, 1, 0, 7, 44, 24, },
+	{ 2, 1, 0, 7, 44, 26, },
+	{ 1, 1, 0, 7, 44, 26, },
+	{ 0, 1, 0, 7, 48, 24, },
+	{ 2, 1, 0, 7, 48, 26, },
+	{ 1, 1, 0, 7, 48, 26, },
+	{ 0, 1, 0, 7, 52, 30, },
+	{ 2, 1, 0, 7, 52, 26, },
+	{ 1, 1, 0, 7, 52, 26, },
+	{ 0, 1, 0, 7, 56, 28, },
+	{ 2, 1, 0, 7, 56, 26, },
+	{ 1, 1, 0, 7, 56, 26, },
+	{ 0, 1, 0, 7, 60, 26, },
+	{ 2, 1, 0, 7, 60, 26, },
+	{ 1, 1, 0, 7, 60, 26, },
+	{ 0, 1, 0, 7, 64, 22, },
+	{ 2, 1, 0, 7, 64, 26, },
+	{ 1, 1, 0, 7, 64, 26, },
+	{ 0, 1, 0, 7, 100, 24, },
+	{ 2, 1, 0, 7, 100, 26, },
+	{ 1, 1, 0, 7, 100, 26, },
+	{ 0, 1, 0, 7, 104, 24, },
+	{ 2, 1, 0, 7, 104, 26, },
+	{ 1, 1, 0, 7, 104, 26, },
+	{ 0, 1, 0, 7, 108, 26, },
+	{ 2, 1, 0, 7, 108, 26, },
+	{ 1, 1, 0, 7, 108, 26, },
+	{ 0, 1, 0, 7, 112, 28, },
+	{ 2, 1, 0, 7, 112, 26, },
+	{ 1, 1, 0, 7, 112, 26, },
+	{ 0, 1, 0, 7, 116, 28, },
+	{ 2, 1, 0, 7, 116, 26, },
+	{ 1, 1, 0, 7, 116, 26, },
+	{ 0, 1, 0, 7, 120, 30, },
+	{ 2, 1, 0, 7, 120, 26, },
+	{ 1, 1, 0, 7, 120, 26, },
+	{ 0, 1, 0, 7, 124, 28, },
+	{ 2, 1, 0, 7, 124, 26, },
+	{ 1, 1, 0, 7, 124, 26, },
+	{ 0, 1, 0, 7, 128, 26, },
+	{ 2, 1, 0, 7, 128, 26, },
+	{ 1, 1, 0, 7, 128, 26, },
+	{ 0, 1, 0, 7, 132, 24, },
+	{ 2, 1, 0, 7, 132, 26, },
+	{ 1, 1, 0, 7, 132, 26, },
+	{ 0, 1, 0, 7, 136, 24, },
+	{ 2, 1, 0, 7, 136, 26, },
+	{ 1, 1, 0, 7, 136, 26, },
+	{ 0, 1, 0, 7, 140, 22, },
+	{ 2, 1, 0, 7, 140, 26, },
+	{ 1, 1, 0, 7, 140, 26, },
+	{ 0, 1, 0, 7, 149, 30, },
+	{ 2, 1, 0, 7, 149, 26, },
+	{ 1, 1, 0, 7, 149, 63, },
+	{ 0, 1, 0, 7, 153, 30, },
+	{ 2, 1, 0, 7, 153, 26, },
+	{ 1, 1, 0, 7, 153, 63, },
+	{ 0, 1, 0, 7, 157, 30, },
+	{ 2, 1, 0, 7, 157, 26, },
+	{ 1, 1, 0, 7, 157, 63, },
+	{ 0, 1, 0, 7, 161, 30, },
+	{ 2, 1, 0, 7, 161, 26, },
+	{ 1, 1, 0, 7, 161, 63, },
+	{ 0, 1, 0, 7, 165, 30, },
+	{ 2, 1, 0, 7, 165, 26, },
+	{ 1, 1, 0, 7, 165, 63, },
+	{ 0, 1, 1, 2, 38, 30, },
+	{ 2, 1, 1, 2, 38, 32, },
+	{ 1, 1, 1, 2, 38, 32, },
+	{ 0, 1, 1, 2, 46, 30, },
+	{ 2, 1, 1, 2, 46, 32, },
+	{ 1, 1, 1, 2, 46, 32, },
+	{ 0, 1, 1, 2, 54, 32, },
+	{ 2, 1, 1, 2, 54, 32, },
+	{ 1, 1, 1, 2, 54, 32, },
+	{ 0, 1, 1, 2, 62, 32, },
+	{ 2, 1, 1, 2, 62, 32, },
+	{ 1, 1, 1, 2, 62, 32, },
+	{ 0, 1, 1, 2, 102, 28, },
+	{ 2, 1, 1, 2, 102, 32, },
+	{ 1, 1, 1, 2, 102, 32, },
+	{ 0, 1, 1, 2, 110, 32, },
+	{ 2, 1, 1, 2, 110, 32, },
+	{ 1, 1, 1, 2, 110, 32, },
+	{ 0, 1, 1, 2, 118, 36, },
+	{ 2, 1, 1, 2, 118, 32, },
+	{ 1, 1, 1, 2, 118, 32, },
+	{ 0, 1, 1, 2, 126, 34, },
+	{ 2, 1, 1, 2, 126, 32, },
+	{ 1, 1, 1, 2, 126, 32, },
+	{ 0, 1, 1, 2, 134, 32, },
+	{ 2, 1, 1, 2, 134, 32, },
+	{ 1, 1, 1, 2, 134, 32, },
+	{ 0, 1, 1, 2, 151, 36, },
+	{ 2, 1, 1, 2, 151, 32, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 36, },
+	{ 2, 1, 1, 2, 159, 32, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 28, },
+	{ 2, 1, 1, 3, 38, 30, },
+	{ 1, 1, 1, 3, 38, 30, },
+	{ 0, 1, 1, 3, 46, 28, },
+	{ 2, 1, 1, 3, 46, 30, },
+	{ 1, 1, 1, 3, 46, 30, },
+	{ 0, 1, 1, 3, 54, 30, },
+	{ 2, 1, 1, 3, 54, 30, },
+	{ 1, 1, 1, 3, 54, 30, },
+	{ 0, 1, 1, 3, 62, 30, },
+	{ 2, 1, 1, 3, 62, 30, },
+	{ 1, 1, 1, 3, 62, 30, },
+	{ 0, 1, 1, 3, 102, 26, },
+	{ 2, 1, 1, 3, 102, 30, },
+	{ 1, 1, 1, 3, 102, 30, },
+	{ 0, 1, 1, 3, 110, 30, },
+	{ 2, 1, 1, 3, 110, 30, },
+	{ 1, 1, 1, 3, 110, 30, },
+	{ 0, 1, 1, 3, 118, 34, },
+	{ 2, 1, 1, 3, 118, 30, },
+	{ 1, 1, 1, 3, 118, 30, },
+	{ 0, 1, 1, 3, 126, 32, },
+	{ 2, 1, 1, 3, 126, 30, },
+	{ 1, 1, 1, 3, 126, 30, },
+	{ 0, 1, 1, 3, 134, 30, },
+	{ 2, 1, 1, 3, 134, 30, },
+	{ 1, 1, 1, 3, 134, 30, },
+	{ 0, 1, 1, 3, 151, 34, },
+	{ 2, 1, 1, 3, 151, 30, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 34, },
+	{ 2, 1, 1, 3, 159, 30, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 1, 6, 38, 26, },
+	{ 2, 1, 1, 6, 38, 28, },
+	{ 1, 1, 1, 6, 38, 28, },
+	{ 0, 1, 1, 6, 46, 26, },
+	{ 2, 1, 1, 6, 46, 28, },
+	{ 1, 1, 1, 6, 46, 28, },
+	{ 0, 1, 1, 6, 54, 28, },
+	{ 2, 1, 1, 6, 54, 28, },
+	{ 1, 1, 1, 6, 54, 28, },
+	{ 0, 1, 1, 6, 62, 28, },
+	{ 2, 1, 1, 6, 62, 28, },
+	{ 1, 1, 1, 6, 62, 28, },
+	{ 0, 1, 1, 6, 102, 24, },
+	{ 2, 1, 1, 6, 102, 28, },
+	{ 1, 1, 1, 6, 102, 28, },
+	{ 0, 1, 1, 6, 110, 28, },
+	{ 2, 1, 1, 6, 110, 28, },
+	{ 1, 1, 1, 6, 110, 28, },
+	{ 0, 1, 1, 6, 118, 32, },
+	{ 2, 1, 1, 6, 118, 28, },
+	{ 1, 1, 1, 6, 118, 28, },
+	{ 0, 1, 1, 6, 126, 30, },
+	{ 2, 1, 1, 6, 126, 28, },
+	{ 1, 1, 1, 6, 126, 28, },
+	{ 0, 1, 1, 6, 134, 28, },
+	{ 2, 1, 1, 6, 134, 28, },
+	{ 1, 1, 1, 6, 134, 28, },
+	{ 0, 1, 1, 6, 151, 32, },
+	{ 2, 1, 1, 6, 151, 28, },
+	{ 1, 1, 1, 6, 151, 63, },
+	{ 0, 1, 1, 6, 159, 32, },
+	{ 2, 1, 1, 6, 159, 28, },
+	{ 1, 1, 1, 6, 159, 63, },
+	{ 0, 1, 1, 7, 38, 24, },
+	{ 2, 1, 1, 7, 38, 26, },
+	{ 1, 1, 1, 7, 38, 26, },
+	{ 0, 1, 1, 7, 46, 24, },
+	{ 2, 1, 1, 7, 46, 26, },
+	{ 1, 1, 1, 7, 46, 26, },
+	{ 0, 1, 1, 7, 54, 26, },
+	{ 2, 1, 1, 7, 54, 26, },
+	{ 1, 1, 1, 7, 54, 26, },
+	{ 0, 1, 1, 7, 62, 26, },
+	{ 2, 1, 1, 7, 62, 26, },
+	{ 1, 1, 1, 7, 62, 26, },
+	{ 0, 1, 1, 7, 102, 22, },
+	{ 2, 1, 1, 7, 102, 26, },
+	{ 1, 1, 1, 7, 102, 26, },
+	{ 0, 1, 1, 7, 110, 26, },
+	{ 2, 1, 1, 7, 110, 26, },
+	{ 1, 1, 1, 7, 110, 26, },
+	{ 0, 1, 1, 7, 118, 30, },
+	{ 2, 1, 1, 7, 118, 26, },
+	{ 1, 1, 1, 7, 118, 26, },
+	{ 0, 1, 1, 7, 126, 28, },
+	{ 2, 1, 1, 7, 126, 26, },
+	{ 1, 1, 1, 7, 126, 26, },
+	{ 0, 1, 1, 7, 134, 26, },
+	{ 2, 1, 1, 7, 134, 26, },
+	{ 1, 1, 1, 7, 134, 26, },
+	{ 0, 1, 1, 7, 151, 30, },
+	{ 2, 1, 1, 7, 151, 26, },
+	{ 1, 1, 1, 7, 151, 63, },
+	{ 0, 1, 1, 7, 159, 30, },
+	{ 2, 1, 1, 7, 159, 26, },
+	{ 1, 1, 1, 7, 159, 63, },
+	{ 0, 1, 2, 4, 42, 30, },
+	{ 2, 1, 2, 4, 42, 32, },
+	{ 1, 1, 2, 4, 42, 32, },
+	{ 0, 1, 2, 4, 58, 28, },
+	{ 2, 1, 2, 4, 58, 32, },
+	{ 1, 1, 2, 4, 58, 32, },
+	{ 0, 1, 2, 4, 106, 30, },
+	{ 2, 1, 2, 4, 106, 32, },
+	{ 1, 1, 2, 4, 106, 32, },
+	{ 0, 1, 2, 4, 122, 34, },
+	{ 2, 1, 2, 4, 122, 32, },
+	{ 1, 1, 2, 4, 122, 32, },
+	{ 0, 1, 2, 4, 155, 36, },
+	{ 2, 1, 2, 4, 155, 32, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 28, },
+	{ 2, 1, 2, 5, 42, 30, },
+	{ 1, 1, 2, 5, 42, 30, },
+	{ 0, 1, 2, 5, 58, 26, },
+	{ 2, 1, 2, 5, 58, 30, },
+	{ 1, 1, 2, 5, 58, 30, },
+	{ 0, 1, 2, 5, 106, 28, },
+	{ 2, 1, 2, 5, 106, 30, },
+	{ 1, 1, 2, 5, 106, 30, },
+	{ 0, 1, 2, 5, 122, 32, },
+	{ 2, 1, 2, 5, 122, 30, },
+	{ 1, 1, 2, 5, 122, 30, },
+	{ 0, 1, 2, 5, 155, 34, },
+	{ 2, 1, 2, 5, 155, 30, },
+	{ 1, 1, 2, 5, 155, 63, },
+	{ 0, 1, 2, 8, 42, 26, },
+	{ 2, 1, 2, 8, 42, 28, },
+	{ 1, 1, 2, 8, 42, 28, },
+	{ 0, 1, 2, 8, 58, 24, },
+	{ 2, 1, 2, 8, 58, 28, },
+	{ 1, 1, 2, 8, 58, 28, },
+	{ 0, 1, 2, 8, 106, 26, },
+	{ 2, 1, 2, 8, 106, 28, },
+	{ 1, 1, 2, 8, 106, 28, },
+	{ 0, 1, 2, 8, 122, 30, },
+	{ 2, 1, 2, 8, 122, 28, },
+	{ 1, 1, 2, 8, 122, 28, },
+	{ 0, 1, 2, 8, 155, 32, },
+	{ 2, 1, 2, 8, 155, 28, },
+	{ 1, 1, 2, 8, 155, 63, },
+	{ 0, 1, 2, 9, 42, 24, },
+	{ 2, 1, 2, 9, 42, 26, },
+	{ 1, 1, 2, 9, 42, 26, },
+	{ 0, 1, 2, 9, 58, 22, },
+	{ 2, 1, 2, 9, 58, 26, },
+	{ 1, 1, 2, 9, 58, 26, },
+	{ 0, 1, 2, 9, 106, 24, },
+	{ 2, 1, 2, 9, 106, 26, },
+	{ 1, 1, 2, 9, 106, 26, },
+	{ 0, 1, 2, 9, 122, 28, },
+	{ 2, 1, 2, 9, 122, 26, },
+	{ 1, 1, 2, 9, 122, 26, },
+	{ 0, 1, 2, 9, 155, 30, },
+	{ 2, 1, 2, 9, 155, 26, },
+	{ 1, 1, 2, 9, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8814a_txpwr_lmt);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8814a_txpwr_lmt_type0[] = {
+	{ 0, 0, 0, 0, 1, 32, },
+	{ 2, 0, 0, 0, 1, 32, },
+	{ 1, 0, 0, 0, 1, 32, },
+	{ 0, 0, 0, 0, 2, 32, },
+	{ 2, 0, 0, 0, 2, 32, },
+	{ 1, 0, 0, 0, 2, 32, },
+	{ 0, 0, 0, 0, 3, 32, },
+	{ 2, 0, 0, 0, 3, 32, },
+	{ 1, 0, 0, 0, 3, 32, },
+	{ 0, 0, 0, 0, 4, 32, },
+	{ 2, 0, 0, 0, 4, 32, },
+	{ 1, 0, 0, 0, 4, 32, },
+	{ 0, 0, 0, 0, 5, 32, },
+	{ 2, 0, 0, 0, 5, 32, },
+	{ 1, 0, 0, 0, 5, 32, },
+	{ 0, 0, 0, 0, 6, 32, },
+	{ 2, 0, 0, 0, 6, 32, },
+	{ 1, 0, 0, 0, 6, 32, },
+	{ 0, 0, 0, 0, 7, 32, },
+	{ 2, 0, 0, 0, 7, 32, },
+	{ 1, 0, 0, 0, 7, 32, },
+	{ 0, 0, 0, 0, 8, 32, },
+	{ 2, 0, 0, 0, 8, 32, },
+	{ 1, 0, 0, 0, 8, 32, },
+	{ 0, 0, 0, 0, 9, 32, },
+	{ 2, 0, 0, 0, 9, 32, },
+	{ 1, 0, 0, 0, 9, 32, },
+	{ 0, 0, 0, 0, 10, 32, },
+	{ 2, 0, 0, 0, 10, 32, },
+	{ 1, 0, 0, 0, 10, 32, },
+	{ 0, 0, 0, 0, 11, 32, },
+	{ 2, 0, 0, 0, 11, 32, },
+	{ 1, 0, 0, 0, 11, 32, },
+	{ 0, 0, 0, 0, 12, 24, },
+	{ 2, 0, 0, 0, 12, 32, },
+	{ 1, 0, 0, 0, 12, 32, },
+	{ 0, 0, 0, 0, 13, 16, },
+	{ 2, 0, 0, 0, 13, 32, },
+	{ 1, 0, 0, 0, 13, 32, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 32, },
+	{ 0, 0, 0, 1, 1, 28, },
+	{ 2, 0, 0, 1, 1, 32, },
+	{ 1, 0, 0, 1, 1, 32, },
+	{ 0, 0, 0, 1, 2, 32, },
+	{ 2, 0, 0, 1, 2, 32, },
+	{ 1, 0, 0, 1, 2, 32, },
+	{ 0, 0, 0, 1, 3, 32, },
+	{ 2, 0, 0, 1, 3, 32, },
+	{ 1, 0, 0, 1, 3, 32, },
+	{ 0, 0, 0, 1, 4, 32, },
+	{ 2, 0, 0, 1, 4, 32, },
+	{ 1, 0, 0, 1, 4, 32, },
+	{ 0, 0, 0, 1, 5, 32, },
+	{ 2, 0, 0, 1, 5, 32, },
+	{ 1, 0, 0, 1, 5, 32, },
+	{ 0, 0, 0, 1, 6, 32, },
+	{ 2, 0, 0, 1, 6, 32, },
+	{ 1, 0, 0, 1, 6, 32, },
+	{ 0, 0, 0, 1, 7, 32, },
+	{ 2, 0, 0, 1, 7, 32, },
+	{ 1, 0, 0, 1, 7, 32, },
+	{ 0, 0, 0, 1, 8, 32, },
+	{ 2, 0, 0, 1, 8, 32, },
+	{ 1, 0, 0, 1, 8, 32, },
+	{ 0, 0, 0, 1, 9, 32, },
+	{ 2, 0, 0, 1, 9, 32, },
+	{ 1, 0, 0, 1, 9, 32, },
+	{ 0, 0, 0, 1, 10, 32, },
+	{ 2, 0, 0, 1, 10, 32, },
+	{ 1, 0, 0, 1, 10, 32, },
+	{ 0, 0, 0, 1, 11, 28, },
+	{ 2, 0, 0, 1, 11, 32, },
+	{ 1, 0, 0, 1, 11, 32, },
+	{ 0, 0, 0, 1, 12, 18, },
+	{ 2, 0, 0, 1, 12, 32, },
+	{ 1, 0, 0, 1, 12, 32, },
+	{ 0, 0, 0, 1, 13, 8, },
+	{ 2, 0, 0, 1, 13, 32, },
+	{ 1, 0, 0, 1, 13, 32, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 63, },
+	{ 0, 0, 0, 2, 1, 26, },
+	{ 2, 0, 0, 2, 1, 32, },
+	{ 1, 0, 0, 2, 1, 32, },
+	{ 0, 0, 0, 2, 2, 32, },
+	{ 2, 0, 0, 2, 2, 32, },
+	{ 1, 0, 0, 2, 2, 32, },
+	{ 0, 0, 0, 2, 3, 32, },
+	{ 2, 0, 0, 2, 3, 32, },
+	{ 1, 0, 0, 2, 3, 32, },
+	{ 0, 0, 0, 2, 4, 32, },
+	{ 2, 0, 0, 2, 4, 32, },
+	{ 1, 0, 0, 2, 4, 32, },
+	{ 0, 0, 0, 2, 5, 32, },
+	{ 2, 0, 0, 2, 5, 32, },
+	{ 1, 0, 0, 2, 5, 32, },
+	{ 0, 0, 0, 2, 6, 32, },
+	{ 2, 0, 0, 2, 6, 32, },
+	{ 1, 0, 0, 2, 6, 32, },
+	{ 0, 0, 0, 2, 7, 32, },
+	{ 2, 0, 0, 2, 7, 32, },
+	{ 1, 0, 0, 2, 7, 32, },
+	{ 0, 0, 0, 2, 8, 32, },
+	{ 2, 0, 0, 2, 8, 32, },
+	{ 1, 0, 0, 2, 8, 32, },
+	{ 0, 0, 0, 2, 9, 32, },
+	{ 2, 0, 0, 2, 9, 32, },
+	{ 1, 0, 0, 2, 9, 32, },
+	{ 0, 0, 0, 2, 10, 32, },
+	{ 2, 0, 0, 2, 10, 32, },
+	{ 1, 0, 0, 2, 10, 32, },
+	{ 0, 0, 0, 2, 11, 26, },
+	{ 2, 0, 0, 2, 11, 32, },
+	{ 1, 0, 0, 2, 11, 32, },
+	{ 0, 0, 0, 2, 12, 16, },
+	{ 2, 0, 0, 2, 12, 32, },
+	{ 1, 0, 0, 2, 12, 32, },
+	{ 0, 0, 0, 2, 13, 6, },
+	{ 2, 0, 0, 2, 13, 32, },
+	{ 1, 0, 0, 2, 13, 32, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 63, },
+	{ 0, 0, 0, 3, 1, 24, },
+	{ 2, 0, 0, 3, 1, 30, },
+	{ 1, 0, 0, 3, 1, 30, },
+	{ 0, 0, 0, 3, 2, 30, },
+	{ 2, 0, 0, 3, 2, 30, },
+	{ 1, 0, 0, 3, 2, 30, },
+	{ 0, 0, 0, 3, 3, 30, },
+	{ 2, 0, 0, 3, 3, 30, },
+	{ 1, 0, 0, 3, 3, 30, },
+	{ 0, 0, 0, 3, 4, 30, },
+	{ 2, 0, 0, 3, 4, 30, },
+	{ 1, 0, 0, 3, 4, 30, },
+	{ 0, 0, 0, 3, 5, 30, },
+	{ 2, 0, 0, 3, 5, 30, },
+	{ 1, 0, 0, 3, 5, 30, },
+	{ 0, 0, 0, 3, 6, 30, },
+	{ 2, 0, 0, 3, 6, 30, },
+	{ 1, 0, 0, 3, 6, 30, },
+	{ 0, 0, 0, 3, 7, 30, },
+	{ 2, 0, 0, 3, 7, 30, },
+	{ 1, 0, 0, 3, 7, 30, },
+	{ 0, 0, 0, 3, 8, 30, },
+	{ 2, 0, 0, 3, 8, 30, },
+	{ 1, 0, 0, 3, 8, 30, },
+	{ 0, 0, 0, 3, 9, 30, },
+	{ 2, 0, 0, 3, 9, 30, },
+	{ 1, 0, 0, 3, 9, 30, },
+	{ 0, 0, 0, 3, 10, 30, },
+	{ 2, 0, 0, 3, 10, 30, },
+	{ 1, 0, 0, 3, 10, 30, },
+	{ 0, 0, 0, 3, 11, 24, },
+	{ 2, 0, 0, 3, 11, 30, },
+	{ 1, 0, 0, 3, 11, 30, },
+	{ 0, 0, 0, 3, 12, 14, },
+	{ 2, 0, 0, 3, 12, 30, },
+	{ 1, 0, 0, 3, 12, 30, },
+	{ 0, 0, 0, 3, 13, 4, },
+	{ 2, 0, 0, 3, 13, 30, },
+	{ 1, 0, 0, 3, 13, 30, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 63, },
+	{ 0, 0, 0, 6, 1, 22, },
+	{ 2, 0, 0, 6, 1, 28, },
+	{ 1, 0, 0, 6, 1, 28, },
+	{ 0, 0, 0, 6, 2, 28, },
+	{ 2, 0, 0, 6, 2, 28, },
+	{ 1, 0, 0, 6, 2, 28, },
+	{ 0, 0, 0, 6, 3, 28, },
+	{ 2, 0, 0, 6, 3, 28, },
+	{ 1, 0, 0, 6, 3, 28, },
+	{ 0, 0, 0, 6, 4, 28, },
+	{ 2, 0, 0, 6, 4, 28, },
+	{ 1, 0, 0, 6, 4, 28, },
+	{ 0, 0, 0, 6, 5, 28, },
+	{ 2, 0, 0, 6, 5, 28, },
+	{ 1, 0, 0, 6, 5, 28, },
+	{ 0, 0, 0, 6, 6, 28, },
+	{ 2, 0, 0, 6, 6, 28, },
+	{ 1, 0, 0, 6, 6, 28, },
+	{ 0, 0, 0, 6, 7, 28, },
+	{ 2, 0, 0, 6, 7, 28, },
+	{ 1, 0, 0, 6, 7, 28, },
+	{ 0, 0, 0, 6, 8, 28, },
+	{ 2, 0, 0, 6, 8, 28, },
+	{ 1, 0, 0, 6, 8, 28, },
+	{ 0, 0, 0, 6, 9, 28, },
+	{ 2, 0, 0, 6, 9, 28, },
+	{ 1, 0, 0, 6, 9, 28, },
+	{ 0, 0, 0, 6, 10, 28, },
+	{ 2, 0, 0, 6, 10, 28, },
+	{ 1, 0, 0, 6, 10, 28, },
+	{ 0, 0, 0, 6, 11, 22, },
+	{ 2, 0, 0, 6, 11, 28, },
+	{ 1, 0, 0, 6, 11, 28, },
+	{ 0, 0, 0, 6, 12, 14, },
+	{ 2, 0, 0, 6, 12, 28, },
+	{ 1, 0, 0, 6, 12, 28, },
+	{ 0, 0, 0, 6, 13, 4, },
+	{ 2, 0, 0, 6, 13, 28, },
+	{ 1, 0, 0, 6, 13, 28, },
+	{ 0, 0, 0, 6, 14, 63, },
+	{ 2, 0, 0, 6, 14, 63, },
+	{ 1, 0, 0, 6, 14, 63, },
+	{ 0, 0, 0, 7, 1, 20, },
+	{ 2, 0, 0, 7, 1, 26, },
+	{ 1, 0, 0, 7, 1, 26, },
+	{ 0, 0, 0, 7, 2, 26, },
+	{ 2, 0, 0, 7, 2, 26, },
+	{ 1, 0, 0, 7, 2, 26, },
+	{ 0, 0, 0, 7, 3, 26, },
+	{ 2, 0, 0, 7, 3, 26, },
+	{ 1, 0, 0, 7, 3, 26, },
+	{ 0, 0, 0, 7, 4, 26, },
+	{ 2, 0, 0, 7, 4, 26, },
+	{ 1, 0, 0, 7, 4, 26, },
+	{ 0, 0, 0, 7, 5, 26, },
+	{ 2, 0, 0, 7, 5, 26, },
+	{ 1, 0, 0, 7, 5, 26, },
+	{ 0, 0, 0, 7, 6, 26, },
+	{ 2, 0, 0, 7, 6, 26, },
+	{ 1, 0, 0, 7, 6, 26, },
+	{ 0, 0, 0, 7, 7, 26, },
+	{ 2, 0, 0, 7, 7, 26, },
+	{ 1, 0, 0, 7, 7, 26, },
+	{ 0, 0, 0, 7, 8, 26, },
+	{ 2, 0, 0, 7, 8, 26, },
+	{ 1, 0, 0, 7, 8, 26, },
+	{ 0, 0, 0, 7, 9, 26, },
+	{ 2, 0, 0, 7, 9, 26, },
+	{ 1, 0, 0, 7, 9, 26, },
+	{ 0, 0, 0, 7, 10, 26, },
+	{ 2, 0, 0, 7, 10, 26, },
+	{ 1, 0, 0, 7, 10, 26, },
+	{ 0, 0, 0, 7, 11, 20, },
+	{ 2, 0, 0, 7, 11, 26, },
+	{ 1, 0, 0, 7, 11, 26, },
+	{ 0, 0, 0, 7, 12, 14, },
+	{ 2, 0, 0, 7, 12, 26, },
+	{ 1, 0, 0, 7, 12, 26, },
+	{ 0, 0, 0, 7, 13, 4, },
+	{ 2, 0, 0, 7, 13, 26, },
+	{ 1, 0, 0, 7, 13, 26, },
+	{ 0, 0, 0, 7, 14, 63, },
+	{ 2, 0, 0, 7, 14, 63, },
+	{ 1, 0, 0, 7, 14, 63, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 26, },
+	{ 2, 0, 1, 2, 3, 32, },
+	{ 1, 0, 1, 2, 3, 32, },
+	{ 0, 0, 1, 2, 4, 32, },
+	{ 2, 0, 1, 2, 4, 32, },
+	{ 1, 0, 1, 2, 4, 32, },
+	{ 0, 0, 1, 2, 5, 32, },
+	{ 2, 0, 1, 2, 5, 32, },
+	{ 1, 0, 1, 2, 5, 32, },
+	{ 0, 0, 1, 2, 6, 32, },
+	{ 2, 0, 1, 2, 6, 32, },
+	{ 1, 0, 1, 2, 6, 32, },
+	{ 0, 0, 1, 2, 7, 32, },
+	{ 2, 0, 1, 2, 7, 32, },
+	{ 1, 0, 1, 2, 7, 32, },
+	{ 0, 0, 1, 2, 8, 32, },
+	{ 2, 0, 1, 2, 8, 32, },
+	{ 1, 0, 1, 2, 8, 32, },
+	{ 0, 0, 1, 2, 9, 32, },
+	{ 2, 0, 1, 2, 9, 32, },
+	{ 1, 0, 1, 2, 9, 32, },
+	{ 0, 0, 1, 2, 10, 32, },
+	{ 2, 0, 1, 2, 10, 32, },
+	{ 1, 0, 1, 2, 10, 32, },
+	{ 0, 0, 1, 2, 11, 26, },
+	{ 2, 0, 1, 2, 11, 32, },
+	{ 1, 0, 1, 2, 11, 32, },
+	{ 0, 0, 1, 2, 12, 16, },
+	{ 2, 0, 1, 2, 12, 32, },
+	{ 1, 0, 1, 2, 12, 32, },
+	{ 0, 0, 1, 2, 13, 10, },
+	{ 2, 0, 1, 2, 13, 32, },
+	{ 1, 0, 1, 2, 13, 32, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 24, },
+	{ 2, 0, 1, 3, 3, 30, },
+	{ 1, 0, 1, 3, 3, 30, },
+	{ 0, 0, 1, 3, 4, 30, },
+	{ 2, 0, 1, 3, 4, 30, },
+	{ 1, 0, 1, 3, 4, 30, },
+	{ 0, 0, 1, 3, 5, 30, },
+	{ 2, 0, 1, 3, 5, 30, },
+	{ 1, 0, 1, 3, 5, 30, },
+	{ 0, 0, 1, 3, 6, 30, },
+	{ 2, 0, 1, 3, 6, 30, },
+	{ 1, 0, 1, 3, 6, 30, },
+	{ 0, 0, 1, 3, 7, 30, },
+	{ 2, 0, 1, 3, 7, 30, },
+	{ 1, 0, 1, 3, 7, 30, },
+	{ 0, 0, 1, 3, 8, 30, },
+	{ 2, 0, 1, 3, 8, 30, },
+	{ 1, 0, 1, 3, 8, 30, },
+	{ 0, 0, 1, 3, 9, 30, },
+	{ 2, 0, 1, 3, 9, 30, },
+	{ 1, 0, 1, 3, 9, 30, },
+	{ 0, 0, 1, 3, 10, 30, },
+	{ 2, 0, 1, 3, 10, 30, },
+	{ 1, 0, 1, 3, 10, 30, },
+	{ 0, 0, 1, 3, 11, 24, },
+	{ 2, 0, 1, 3, 11, 30, },
+	{ 1, 0, 1, 3, 11, 30, },
+	{ 0, 0, 1, 3, 12, 14, },
+	{ 2, 0, 1, 3, 12, 30, },
+	{ 1, 0, 1, 3, 12, 30, },
+	{ 0, 0, 1, 3, 13, 8, },
+	{ 2, 0, 1, 3, 13, 30, },
+	{ 1, 0, 1, 3, 13, 30, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 0, 1, 6, 1, 63, },
+	{ 2, 0, 1, 6, 1, 63, },
+	{ 1, 0, 1, 6, 1, 63, },
+	{ 0, 0, 1, 6, 2, 63, },
+	{ 2, 0, 1, 6, 2, 63, },
+	{ 1, 0, 1, 6, 2, 63, },
+	{ 0, 0, 1, 6, 3, 22, },
+	{ 2, 0, 1, 6, 3, 28, },
+	{ 1, 0, 1, 6, 3, 28, },
+	{ 0, 0, 1, 6, 4, 28, },
+	{ 2, 0, 1, 6, 4, 28, },
+	{ 1, 0, 1, 6, 4, 28, },
+	{ 0, 0, 1, 6, 5, 28, },
+	{ 2, 0, 1, 6, 5, 28, },
+	{ 1, 0, 1, 6, 5, 28, },
+	{ 0, 0, 1, 6, 6, 28, },
+	{ 2, 0, 1, 6, 6, 28, },
+	{ 1, 0, 1, 6, 6, 28, },
+	{ 0, 0, 1, 6, 7, 28, },
+	{ 2, 0, 1, 6, 7, 28, },
+	{ 1, 0, 1, 6, 7, 28, },
+	{ 0, 0, 1, 6, 8, 28, },
+	{ 2, 0, 1, 6, 8, 28, },
+	{ 1, 0, 1, 6, 8, 28, },
+	{ 0, 0, 1, 6, 9, 28, },
+	{ 2, 0, 1, 6, 9, 28, },
+	{ 1, 0, 1, 6, 9, 28, },
+	{ 0, 0, 1, 6, 10, 28, },
+	{ 2, 0, 1, 6, 10, 28, },
+	{ 1, 0, 1, 6, 10, 28, },
+	{ 0, 0, 1, 6, 11, 22, },
+	{ 2, 0, 1, 6, 11, 28, },
+	{ 1, 0, 1, 6, 11, 28, },
+	{ 0, 0, 1, 6, 12, 14, },
+	{ 2, 0, 1, 6, 12, 28, },
+	{ 1, 0, 1, 6, 12, 28, },
+	{ 0, 0, 1, 6, 13, 8, },
+	{ 2, 0, 1, 6, 13, 28, },
+	{ 1, 0, 1, 6, 13, 28, },
+	{ 0, 0, 1, 6, 14, 63, },
+	{ 2, 0, 1, 6, 14, 63, },
+	{ 1, 0, 1, 6, 14, 63, },
+	{ 0, 0, 1, 7, 1, 63, },
+	{ 2, 0, 1, 7, 1, 63, },
+	{ 1, 0, 1, 7, 1, 63, },
+	{ 0, 0, 1, 7, 2, 63, },
+	{ 2, 0, 1, 7, 2, 63, },
+	{ 1, 0, 1, 7, 2, 63, },
+	{ 0, 0, 1, 7, 3, 20, },
+	{ 2, 0, 1, 7, 3, 26, },
+	{ 1, 0, 1, 7, 3, 26, },
+	{ 0, 0, 1, 7, 4, 26, },
+	{ 2, 0, 1, 7, 4, 26, },
+	{ 1, 0, 1, 7, 4, 26, },
+	{ 0, 0, 1, 7, 5, 26, },
+	{ 2, 0, 1, 7, 5, 26, },
+	{ 1, 0, 1, 7, 5, 26, },
+	{ 0, 0, 1, 7, 6, 26, },
+	{ 2, 0, 1, 7, 6, 26, },
+	{ 1, 0, 1, 7, 6, 26, },
+	{ 0, 0, 1, 7, 7, 26, },
+	{ 2, 0, 1, 7, 7, 26, },
+	{ 1, 0, 1, 7, 7, 26, },
+	{ 0, 0, 1, 7, 8, 26, },
+	{ 2, 0, 1, 7, 8, 26, },
+	{ 1, 0, 1, 7, 8, 26, },
+	{ 0, 0, 1, 7, 9, 26, },
+	{ 2, 0, 1, 7, 9, 26, },
+	{ 1, 0, 1, 7, 9, 26, },
+	{ 0, 0, 1, 7, 10, 26, },
+	{ 2, 0, 1, 7, 10, 26, },
+	{ 1, 0, 1, 7, 10, 26, },
+	{ 0, 0, 1, 7, 11, 20, },
+	{ 2, 0, 1, 7, 11, 26, },
+	{ 1, 0, 1, 7, 11, 26, },
+	{ 0, 0, 1, 7, 12, 14, },
+	{ 2, 0, 1, 7, 12, 26, },
+	{ 1, 0, 1, 7, 12, 26, },
+	{ 0, 0, 1, 7, 13, 8, },
+	{ 2, 0, 1, 7, 13, 26, },
+	{ 1, 0, 1, 7, 13, 26, },
+	{ 0, 0, 1, 7, 14, 63, },
+	{ 2, 0, 1, 7, 14, 63, },
+	{ 1, 0, 1, 7, 14, 63, },
+	{ 0, 1, 0, 1, 36, 28, },
+	{ 2, 1, 0, 1, 36, 32, },
+	{ 1, 1, 0, 1, 36, 32, },
+	{ 0, 1, 0, 1, 40, 32, },
+	{ 2, 1, 0, 1, 40, 32, },
+	{ 1, 1, 0, 1, 40, 32, },
+	{ 0, 1, 0, 1, 44, 32, },
+	{ 2, 1, 0, 1, 44, 32, },
+	{ 1, 1, 0, 1, 44, 32, },
+	{ 0, 1, 0, 1, 48, 32, },
+	{ 2, 1, 0, 1, 48, 32, },
+	{ 1, 1, 0, 1, 48, 32, },
+	{ 0, 1, 0, 1, 52, 32, },
+	{ 2, 1, 0, 1, 52, 32, },
+	{ 1, 1, 0, 1, 52, 32, },
+	{ 0, 1, 0, 1, 56, 32, },
+	{ 2, 1, 0, 1, 56, 32, },
+	{ 1, 1, 0, 1, 56, 32, },
+	{ 0, 1, 0, 1, 60, 32, },
+	{ 2, 1, 0, 1, 60, 32, },
+	{ 1, 1, 0, 1, 60, 32, },
+	{ 0, 1, 0, 1, 64, 28, },
+	{ 2, 1, 0, 1, 64, 32, },
+	{ 1, 1, 0, 1, 64, 32, },
+	{ 0, 1, 0, 1, 100, 28, },
+	{ 2, 1, 0, 1, 100, 32, },
+	{ 1, 1, 0, 1, 100, 32, },
+	{ 0, 1, 0, 1, 104, 32, },
+	{ 2, 1, 0, 1, 104, 32, },
+	{ 1, 1, 0, 1, 104, 32, },
+	{ 0, 1, 0, 1, 108, 32, },
+	{ 2, 1, 0, 1, 108, 32, },
+	{ 1, 1, 0, 1, 108, 32, },
+	{ 0, 1, 0, 1, 112, 32, },
+	{ 2, 1, 0, 1, 112, 32, },
+	{ 1, 1, 0, 1, 112, 32, },
+	{ 0, 1, 0, 1, 116, 32, },
+	{ 2, 1, 0, 1, 116, 32, },
+	{ 1, 1, 0, 1, 116, 32, },
+	{ 0, 1, 0, 1, 120, 32, },
+	{ 2, 1, 0, 1, 120, 32, },
+	{ 1, 1, 0, 1, 120, 32, },
+	{ 0, 1, 0, 1, 124, 32, },
+	{ 2, 1, 0, 1, 124, 32, },
+	{ 1, 1, 0, 1, 124, 32, },
+	{ 0, 1, 0, 1, 128, 32, },
+	{ 2, 1, 0, 1, 128, 32, },
+	{ 1, 1, 0, 1, 128, 32, },
+	{ 0, 1, 0, 1, 132, 32, },
+	{ 2, 1, 0, 1, 132, 32, },
+	{ 1, 1, 0, 1, 132, 32, },
+	{ 0, 1, 0, 1, 136, 32, },
+	{ 2, 1, 0, 1, 136, 32, },
+	{ 1, 1, 0, 1, 136, 32, },
+	{ 0, 1, 0, 1, 140, 28, },
+	{ 2, 1, 0, 1, 140, 32, },
+	{ 1, 1, 0, 1, 140, 32, },
+	{ 0, 1, 0, 1, 149, 28, },
+	{ 2, 1, 0, 1, 149, 32, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 32, },
+	{ 2, 1, 0, 1, 153, 32, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 32, },
+	{ 2, 1, 0, 1, 157, 32, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 32, },
+	{ 2, 1, 0, 1, 161, 32, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 32, },
+	{ 2, 1, 0, 1, 165, 32, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 26, },
+	{ 2, 1, 0, 2, 36, 32, },
+	{ 1, 1, 0, 2, 36, 32, },
+	{ 0, 1, 0, 2, 40, 32, },
+	{ 2, 1, 0, 2, 40, 32, },
+	{ 1, 1, 0, 2, 40, 32, },
+	{ 0, 1, 0, 2, 44, 32, },
+	{ 2, 1, 0, 2, 44, 32, },
+	{ 1, 1, 0, 2, 44, 32, },
+	{ 0, 1, 0, 2, 48, 32, },
+	{ 2, 1, 0, 2, 48, 32, },
+	{ 1, 1, 0, 2, 48, 32, },
+	{ 0, 1, 0, 2, 52, 32, },
+	{ 2, 1, 0, 2, 52, 32, },
+	{ 1, 1, 0, 2, 52, 32, },
+	{ 0, 1, 0, 2, 56, 32, },
+	{ 2, 1, 0, 2, 56, 32, },
+	{ 1, 1, 0, 2, 56, 32, },
+	{ 0, 1, 0, 2, 60, 32, },
+	{ 2, 1, 0, 2, 60, 32, },
+	{ 1, 1, 0, 2, 60, 32, },
+	{ 0, 1, 0, 2, 64, 26, },
+	{ 2, 1, 0, 2, 64, 32, },
+	{ 1, 1, 0, 2, 64, 32, },
+	{ 0, 1, 0, 2, 100, 26, },
+	{ 2, 1, 0, 2, 100, 32, },
+	{ 1, 1, 0, 2, 100, 32, },
+	{ 0, 1, 0, 2, 104, 32, },
+	{ 2, 1, 0, 2, 104, 32, },
+	{ 1, 1, 0, 2, 104, 32, },
+	{ 0, 1, 0, 2, 108, 32, },
+	{ 2, 1, 0, 2, 108, 32, },
+	{ 1, 1, 0, 2, 108, 32, },
+	{ 0, 1, 0, 2, 112, 32, },
+	{ 2, 1, 0, 2, 112, 32, },
+	{ 1, 1, 0, 2, 112, 32, },
+	{ 0, 1, 0, 2, 116, 32, },
+	{ 2, 1, 0, 2, 116, 32, },
+	{ 1, 1, 0, 2, 116, 32, },
+	{ 0, 1, 0, 2, 120, 32, },
+	{ 2, 1, 0, 2, 120, 32, },
+	{ 1, 1, 0, 2, 120, 32, },
+	{ 0, 1, 0, 2, 124, 32, },
+	{ 2, 1, 0, 2, 124, 32, },
+	{ 1, 1, 0, 2, 124, 32, },
+	{ 0, 1, 0, 2, 128, 32, },
+	{ 2, 1, 0, 2, 128, 32, },
+	{ 1, 1, 0, 2, 128, 32, },
+	{ 0, 1, 0, 2, 132, 32, },
+	{ 2, 1, 0, 2, 132, 32, },
+	{ 1, 1, 0, 2, 132, 32, },
+	{ 0, 1, 0, 2, 136, 32, },
+	{ 2, 1, 0, 2, 136, 32, },
+	{ 1, 1, 0, 2, 136, 32, },
+	{ 0, 1, 0, 2, 140, 26, },
+	{ 2, 1, 0, 2, 140, 32, },
+	{ 1, 1, 0, 2, 140, 32, },
+	{ 0, 1, 0, 2, 149, 26, },
+	{ 2, 1, 0, 2, 149, 32, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 32, },
+	{ 2, 1, 0, 2, 153, 32, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 32, },
+	{ 2, 1, 0, 2, 157, 32, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 32, },
+	{ 2, 1, 0, 2, 161, 32, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 32, },
+	{ 2, 1, 0, 2, 165, 32, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 24, },
+	{ 2, 1, 0, 3, 36, 28, },
+	{ 1, 1, 0, 3, 36, 28, },
+	{ 0, 1, 0, 3, 40, 28, },
+	{ 2, 1, 0, 3, 40, 28, },
+	{ 1, 1, 0, 3, 40, 28, },
+	{ 0, 1, 0, 3, 44, 28, },
+	{ 2, 1, 0, 3, 44, 28, },
+	{ 1, 1, 0, 3, 44, 28, },
+	{ 0, 1, 0, 3, 48, 28, },
+	{ 2, 1, 0, 3, 48, 28, },
+	{ 1, 1, 0, 3, 48, 28, },
+	{ 0, 1, 0, 3, 52, 28, },
+	{ 2, 1, 0, 3, 52, 28, },
+	{ 1, 1, 0, 3, 52, 28, },
+	{ 0, 1, 0, 3, 56, 28, },
+	{ 2, 1, 0, 3, 56, 28, },
+	{ 1, 1, 0, 3, 56, 28, },
+	{ 0, 1, 0, 3, 60, 28, },
+	{ 2, 1, 0, 3, 60, 28, },
+	{ 1, 1, 0, 3, 60, 28, },
+	{ 0, 1, 0, 3, 64, 24, },
+	{ 2, 1, 0, 3, 64, 28, },
+	{ 1, 1, 0, 3, 64, 28, },
+	{ 0, 1, 0, 3, 100, 24, },
+	{ 2, 1, 0, 3, 100, 28, },
+	{ 1, 1, 0, 3, 100, 28, },
+	{ 0, 1, 0, 3, 104, 28, },
+	{ 2, 1, 0, 3, 104, 28, },
+	{ 1, 1, 0, 3, 104, 28, },
+	{ 0, 1, 0, 3, 108, 28, },
+	{ 2, 1, 0, 3, 108, 28, },
+	{ 1, 1, 0, 3, 108, 28, },
+	{ 0, 1, 0, 3, 112, 28, },
+	{ 2, 1, 0, 3, 112, 28, },
+	{ 1, 1, 0, 3, 112, 28, },
+	{ 0, 1, 0, 3, 116, 28, },
+	{ 2, 1, 0, 3, 116, 28, },
+	{ 1, 1, 0, 3, 116, 28, },
+	{ 0, 1, 0, 3, 120, 28, },
+	{ 2, 1, 0, 3, 120, 28, },
+	{ 1, 1, 0, 3, 120, 28, },
+	{ 0, 1, 0, 3, 124, 28, },
+	{ 2, 1, 0, 3, 124, 28, },
+	{ 1, 1, 0, 3, 124, 28, },
+	{ 0, 1, 0, 3, 128, 28, },
+	{ 2, 1, 0, 3, 128, 28, },
+	{ 1, 1, 0, 3, 128, 28, },
+	{ 0, 1, 0, 3, 132, 28, },
+	{ 2, 1, 0, 3, 132, 28, },
+	{ 1, 1, 0, 3, 132, 28, },
+	{ 0, 1, 0, 3, 136, 28, },
+	{ 2, 1, 0, 3, 136, 28, },
+	{ 1, 1, 0, 3, 136, 28, },
+	{ 0, 1, 0, 3, 140, 24, },
+	{ 2, 1, 0, 3, 140, 28, },
+	{ 1, 1, 0, 3, 140, 28, },
+	{ 0, 1, 0, 3, 149, 24, },
+	{ 2, 1, 0, 3, 149, 28, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 28, },
+	{ 2, 1, 0, 3, 153, 28, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 28, },
+	{ 2, 1, 0, 3, 157, 28, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 28, },
+	{ 2, 1, 0, 3, 161, 28, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 28, },
+	{ 2, 1, 0, 3, 165, 28, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 0, 6, 36, 22, },
+	{ 2, 1, 0, 6, 36, 26, },
+	{ 1, 1, 0, 6, 36, 26, },
+	{ 0, 1, 0, 6, 40, 26, },
+	{ 2, 1, 0, 6, 40, 26, },
+	{ 1, 1, 0, 6, 40, 26, },
+	{ 0, 1, 0, 6, 44, 26, },
+	{ 2, 1, 0, 6, 44, 26, },
+	{ 1, 1, 0, 6, 44, 26, },
+	{ 0, 1, 0, 6, 48, 26, },
+	{ 2, 1, 0, 6, 48, 26, },
+	{ 1, 1, 0, 6, 48, 26, },
+	{ 0, 1, 0, 6, 52, 26, },
+	{ 2, 1, 0, 6, 52, 26, },
+	{ 1, 1, 0, 6, 52, 26, },
+	{ 0, 1, 0, 6, 56, 26, },
+	{ 2, 1, 0, 6, 56, 26, },
+	{ 1, 1, 0, 6, 56, 26, },
+	{ 0, 1, 0, 6, 60, 26, },
+	{ 2, 1, 0, 6, 60, 26, },
+	{ 1, 1, 0, 6, 60, 26, },
+	{ 0, 1, 0, 6, 64, 22, },
+	{ 2, 1, 0, 6, 64, 26, },
+	{ 1, 1, 0, 6, 64, 26, },
+	{ 0, 1, 0, 6, 100, 22, },
+	{ 2, 1, 0, 6, 100, 26, },
+	{ 1, 1, 0, 6, 100, 26, },
+	{ 0, 1, 0, 6, 104, 26, },
+	{ 2, 1, 0, 6, 104, 26, },
+	{ 1, 1, 0, 6, 104, 26, },
+	{ 0, 1, 0, 6, 108, 26, },
+	{ 2, 1, 0, 6, 108, 26, },
+	{ 1, 1, 0, 6, 108, 26, },
+	{ 0, 1, 0, 6, 112, 26, },
+	{ 2, 1, 0, 6, 112, 26, },
+	{ 1, 1, 0, 6, 112, 26, },
+	{ 0, 1, 0, 6, 116, 26, },
+	{ 2, 1, 0, 6, 116, 26, },
+	{ 1, 1, 0, 6, 116, 26, },
+	{ 0, 1, 0, 6, 120, 26, },
+	{ 2, 1, 0, 6, 120, 26, },
+	{ 1, 1, 0, 6, 120, 26, },
+	{ 0, 1, 0, 6, 124, 26, },
+	{ 2, 1, 0, 6, 124, 26, },
+	{ 1, 1, 0, 6, 124, 26, },
+	{ 0, 1, 0, 6, 128, 26, },
+	{ 2, 1, 0, 6, 128, 26, },
+	{ 1, 1, 0, 6, 128, 26, },
+	{ 0, 1, 0, 6, 132, 26, },
+	{ 2, 1, 0, 6, 132, 26, },
+	{ 1, 1, 0, 6, 132, 26, },
+	{ 0, 1, 0, 6, 136, 26, },
+	{ 2, 1, 0, 6, 136, 26, },
+	{ 1, 1, 0, 6, 136, 26, },
+	{ 0, 1, 0, 6, 140, 22, },
+	{ 2, 1, 0, 6, 140, 26, },
+	{ 1, 1, 0, 6, 140, 26, },
+	{ 0, 1, 0, 6, 149, 22, },
+	{ 2, 1, 0, 6, 149, 26, },
+	{ 1, 1, 0, 6, 149, 63, },
+	{ 0, 1, 0, 6, 153, 26, },
+	{ 2, 1, 0, 6, 153, 26, },
+	{ 1, 1, 0, 6, 153, 63, },
+	{ 0, 1, 0, 6, 157, 26, },
+	{ 2, 1, 0, 6, 157, 26, },
+	{ 1, 1, 0, 6, 157, 63, },
+	{ 0, 1, 0, 6, 161, 26, },
+	{ 2, 1, 0, 6, 161, 26, },
+	{ 1, 1, 0, 6, 161, 63, },
+	{ 0, 1, 0, 6, 165, 26, },
+	{ 2, 1, 0, 6, 165, 26, },
+	{ 1, 1, 0, 6, 165, 63, },
+	{ 0, 1, 0, 7, 36, 20, },
+	{ 2, 1, 0, 7, 36, 24, },
+	{ 1, 1, 0, 7, 36, 24, },
+	{ 0, 1, 0, 7, 40, 24, },
+	{ 2, 1, 0, 7, 40, 24, },
+	{ 1, 1, 0, 7, 40, 24, },
+	{ 0, 1, 0, 7, 44, 24, },
+	{ 2, 1, 0, 7, 44, 24, },
+	{ 1, 1, 0, 7, 44, 24, },
+	{ 0, 1, 0, 7, 48, 24, },
+	{ 2, 1, 0, 7, 48, 24, },
+	{ 1, 1, 0, 7, 48, 24, },
+	{ 0, 1, 0, 7, 52, 24, },
+	{ 2, 1, 0, 7, 52, 24, },
+	{ 1, 1, 0, 7, 52, 24, },
+	{ 0, 1, 0, 7, 56, 24, },
+	{ 2, 1, 0, 7, 56, 24, },
+	{ 1, 1, 0, 7, 56, 24, },
+	{ 0, 1, 0, 7, 60, 24, },
+	{ 2, 1, 0, 7, 60, 24, },
+	{ 1, 1, 0, 7, 60, 24, },
+	{ 0, 1, 0, 7, 64, 20, },
+	{ 2, 1, 0, 7, 64, 24, },
+	{ 1, 1, 0, 7, 64, 24, },
+	{ 0, 1, 0, 7, 100, 20, },
+	{ 2, 1, 0, 7, 100, 24, },
+	{ 1, 1, 0, 7, 100, 24, },
+	{ 0, 1, 0, 7, 104, 24, },
+	{ 2, 1, 0, 7, 104, 24, },
+	{ 1, 1, 0, 7, 104, 24, },
+	{ 0, 1, 0, 7, 108, 24, },
+	{ 2, 1, 0, 7, 108, 24, },
+	{ 1, 1, 0, 7, 108, 24, },
+	{ 0, 1, 0, 7, 112, 24, },
+	{ 2, 1, 0, 7, 112, 24, },
+	{ 1, 1, 0, 7, 112, 24, },
+	{ 0, 1, 0, 7, 116, 24, },
+	{ 2, 1, 0, 7, 116, 24, },
+	{ 1, 1, 0, 7, 116, 24, },
+	{ 0, 1, 0, 7, 120, 24, },
+	{ 2, 1, 0, 7, 120, 24, },
+	{ 1, 1, 0, 7, 120, 24, },
+	{ 0, 1, 0, 7, 124, 24, },
+	{ 2, 1, 0, 7, 124, 24, },
+	{ 1, 1, 0, 7, 124, 24, },
+	{ 0, 1, 0, 7, 128, 24, },
+	{ 2, 1, 0, 7, 128, 24, },
+	{ 1, 1, 0, 7, 128, 24, },
+	{ 0, 1, 0, 7, 132, 24, },
+	{ 2, 1, 0, 7, 132, 24, },
+	{ 1, 1, 0, 7, 132, 24, },
+	{ 0, 1, 0, 7, 136, 24, },
+	{ 2, 1, 0, 7, 136, 24, },
+	{ 1, 1, 0, 7, 136, 24, },
+	{ 0, 1, 0, 7, 140, 20, },
+	{ 2, 1, 0, 7, 140, 24, },
+	{ 1, 1, 0, 7, 140, 24, },
+	{ 0, 1, 0, 7, 149, 20, },
+	{ 2, 1, 0, 7, 149, 24, },
+	{ 1, 1, 0, 7, 149, 63, },
+	{ 0, 1, 0, 7, 153, 24, },
+	{ 2, 1, 0, 7, 153, 24, },
+	{ 1, 1, 0, 7, 153, 63, },
+	{ 0, 1, 0, 7, 157, 24, },
+	{ 2, 1, 0, 7, 157, 24, },
+	{ 1, 1, 0, 7, 157, 63, },
+	{ 0, 1, 0, 7, 161, 24, },
+	{ 2, 1, 0, 7, 161, 24, },
+	{ 1, 1, 0, 7, 161, 63, },
+	{ 0, 1, 0, 7, 165, 24, },
+	{ 2, 1, 0, 7, 165, 24, },
+	{ 1, 1, 0, 7, 165, 63, },
+	{ 0, 1, 1, 2, 38, 26, },
+	{ 2, 1, 1, 2, 38, 32, },
+	{ 1, 1, 1, 2, 38, 32, },
+	{ 0, 1, 1, 2, 46, 32, },
+	{ 2, 1, 1, 2, 46, 32, },
+	{ 1, 1, 1, 2, 46, 32, },
+	{ 0, 1, 1, 2, 54, 32, },
+	{ 2, 1, 1, 2, 54, 32, },
+	{ 1, 1, 1, 2, 54, 32, },
+	{ 0, 1, 1, 2, 62, 26, },
+	{ 2, 1, 1, 2, 62, 32, },
+	{ 1, 1, 1, 2, 62, 32, },
+	{ 0, 1, 1, 2, 102, 26, },
+	{ 2, 1, 1, 2, 102, 32, },
+	{ 1, 1, 1, 2, 102, 32, },
+	{ 0, 1, 1, 2, 110, 32, },
+	{ 2, 1, 1, 2, 110, 32, },
+	{ 1, 1, 1, 2, 110, 32, },
+	{ 0, 1, 1, 2, 118, 32, },
+	{ 2, 1, 1, 2, 118, 32, },
+	{ 1, 1, 1, 2, 118, 32, },
+	{ 0, 1, 1, 2, 126, 32, },
+	{ 2, 1, 1, 2, 126, 32, },
+	{ 1, 1, 1, 2, 126, 32, },
+	{ 0, 1, 1, 2, 134, 32, },
+	{ 2, 1, 1, 2, 134, 32, },
+	{ 1, 1, 1, 2, 134, 32, },
+	{ 0, 1, 1, 2, 151, 26, },
+	{ 2, 1, 1, 2, 151, 32, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 32, },
+	{ 2, 1, 1, 2, 159, 32, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 24, },
+	{ 2, 1, 1, 3, 38, 28, },
+	{ 1, 1, 1, 3, 38, 28, },
+	{ 0, 1, 1, 3, 46, 28, },
+	{ 2, 1, 1, 3, 46, 28, },
+	{ 1, 1, 1, 3, 46, 28, },
+	{ 0, 1, 1, 3, 54, 28, },
+	{ 2, 1, 1, 3, 54, 28, },
+	{ 1, 1, 1, 3, 54, 28, },
+	{ 0, 1, 1, 3, 62, 24, },
+	{ 2, 1, 1, 3, 62, 28, },
+	{ 1, 1, 1, 3, 62, 28, },
+	{ 0, 1, 1, 3, 102, 24, },
+	{ 2, 1, 1, 3, 102, 28, },
+	{ 1, 1, 1, 3, 102, 28, },
+	{ 0, 1, 1, 3, 110, 28, },
+	{ 2, 1, 1, 3, 110, 28, },
+	{ 1, 1, 1, 3, 110, 28, },
+	{ 0, 1, 1, 3, 118, 28, },
+	{ 2, 1, 1, 3, 118, 28, },
+	{ 1, 1, 1, 3, 118, 28, },
+	{ 0, 1, 1, 3, 126, 28, },
+	{ 2, 1, 1, 3, 126, 28, },
+	{ 1, 1, 1, 3, 126, 28, },
+	{ 0, 1, 1, 3, 134, 28, },
+	{ 2, 1, 1, 3, 134, 28, },
+	{ 1, 1, 1, 3, 134, 28, },
+	{ 0, 1, 1, 3, 151, 24, },
+	{ 2, 1, 1, 3, 151, 28, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 28, },
+	{ 2, 1, 1, 3, 159, 28, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 1, 6, 38, 20, },
+	{ 2, 1, 1, 6, 38, 26, },
+	{ 1, 1, 1, 6, 38, 26, },
+	{ 0, 1, 1, 6, 46, 26, },
+	{ 2, 1, 1, 6, 46, 26, },
+	{ 1, 1, 1, 6, 46, 26, },
+	{ 0, 1, 1, 6, 54, 26, },
+	{ 2, 1, 1, 6, 54, 26, },
+	{ 1, 1, 1, 6, 54, 26, },
+	{ 0, 1, 1, 6, 62, 20, },
+	{ 2, 1, 1, 6, 62, 26, },
+	{ 1, 1, 1, 6, 62, 26, },
+	{ 0, 1, 1, 6, 102, 20, },
+	{ 2, 1, 1, 6, 102, 26, },
+	{ 1, 1, 1, 6, 102, 26, },
+	{ 0, 1, 1, 6, 110, 26, },
+	{ 2, 1, 1, 6, 110, 26, },
+	{ 1, 1, 1, 6, 110, 26, },
+	{ 0, 1, 1, 6, 118, 26, },
+	{ 2, 1, 1, 6, 118, 26, },
+	{ 1, 1, 1, 6, 118, 26, },
+	{ 0, 1, 1, 6, 126, 26, },
+	{ 2, 1, 1, 6, 126, 26, },
+	{ 1, 1, 1, 6, 126, 26, },
+	{ 0, 1, 1, 6, 134, 26, },
+	{ 2, 1, 1, 6, 134, 26, },
+	{ 1, 1, 1, 6, 134, 26, },
+	{ 0, 1, 1, 6, 151, 20, },
+	{ 2, 1, 1, 6, 151, 26, },
+	{ 1, 1, 1, 6, 151, 63, },
+	{ 0, 1, 1, 6, 159, 26, },
+	{ 2, 1, 1, 6, 159, 26, },
+	{ 1, 1, 1, 6, 159, 63, },
+	{ 0, 1, 1, 7, 38, 18, },
+	{ 2, 1, 1, 7, 38, 24, },
+	{ 1, 1, 1, 7, 38, 24, },
+	{ 0, 1, 1, 7, 46, 24, },
+	{ 2, 1, 1, 7, 46, 24, },
+	{ 1, 1, 1, 7, 46, 24, },
+	{ 0, 1, 1, 7, 54, 24, },
+	{ 2, 1, 1, 7, 54, 24, },
+	{ 1, 1, 1, 7, 54, 24, },
+	{ 0, 1, 1, 7, 62, 18, },
+	{ 2, 1, 1, 7, 62, 24, },
+	{ 1, 1, 1, 7, 62, 24, },
+	{ 0, 1, 1, 7, 102, 18, },
+	{ 2, 1, 1, 7, 102, 24, },
+	{ 1, 1, 1, 7, 102, 24, },
+	{ 0, 1, 1, 7, 110, 24, },
+	{ 2, 1, 1, 7, 110, 24, },
+	{ 1, 1, 1, 7, 110, 24, },
+	{ 0, 1, 1, 7, 118, 24, },
+	{ 2, 1, 1, 7, 118, 24, },
+	{ 1, 1, 1, 7, 118, 24, },
+	{ 0, 1, 1, 7, 126, 24, },
+	{ 2, 1, 1, 7, 126, 24, },
+	{ 1, 1, 1, 7, 126, 24, },
+	{ 0, 1, 1, 7, 134, 24, },
+	{ 2, 1, 1, 7, 134, 24, },
+	{ 1, 1, 1, 7, 134, 24, },
+	{ 0, 1, 1, 7, 151, 18, },
+	{ 2, 1, 1, 7, 151, 24, },
+	{ 1, 1, 1, 7, 151, 63, },
+	{ 0, 1, 1, 7, 159, 24, },
+	{ 2, 1, 1, 7, 159, 24, },
+	{ 1, 1, 1, 7, 159, 63, },
+	{ 0, 1, 2, 4, 42, 22, },
+	{ 2, 1, 2, 4, 42, 30, },
+	{ 1, 1, 2, 4, 42, 30, },
+	{ 0, 1, 2, 4, 58, 22, },
+	{ 2, 1, 2, 4, 58, 30, },
+	{ 1, 1, 2, 4, 58, 30, },
+	{ 0, 1, 2, 4, 106, 22, },
+	{ 2, 1, 2, 4, 106, 30, },
+	{ 1, 1, 2, 4, 106, 30, },
+	{ 0, 1, 2, 4, 122, 30, },
+	{ 2, 1, 2, 4, 122, 30, },
+	{ 1, 1, 2, 4, 122, 30, },
+	{ 0, 1, 2, 4, 155, 22, },
+	{ 2, 1, 2, 4, 155, 30, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 20, },
+	{ 2, 1, 2, 5, 42, 28, },
+	{ 1, 1, 2, 5, 42, 28, },
+	{ 0, 1, 2, 5, 58, 20, },
+	{ 2, 1, 2, 5, 58, 28, },
+	{ 1, 1, 2, 5, 58, 28, },
+	{ 0, 1, 2, 5, 106, 20, },
+	{ 2, 1, 2, 5, 106, 28, },
+	{ 1, 1, 2, 5, 106, 28, },
+	{ 0, 1, 2, 5, 122, 28, },
+	{ 2, 1, 2, 5, 122, 28, },
+	{ 1, 1, 2, 5, 122, 28, },
+	{ 0, 1, 2, 5, 155, 20, },
+	{ 2, 1, 2, 5, 155, 28, },
+	{ 1, 1, 2, 5, 155, 63, },
+	{ 0, 1, 2, 8, 42, 18, },
+	{ 2, 1, 2, 8, 42, 26, },
+	{ 1, 1, 2, 8, 42, 26, },
+	{ 0, 1, 2, 8, 58, 18, },
+	{ 2, 1, 2, 8, 58, 26, },
+	{ 1, 1, 2, 8, 58, 26, },
+	{ 0, 1, 2, 8, 106, 18, },
+	{ 2, 1, 2, 8, 106, 26, },
+	{ 1, 1, 2, 8, 106, 26, },
+	{ 0, 1, 2, 8, 122, 26, },
+	{ 2, 1, 2, 8, 122, 26, },
+	{ 1, 1, 2, 8, 122, 26, },
+	{ 0, 1, 2, 8, 155, 18, },
+	{ 2, 1, 2, 8, 155, 26, },
+	{ 1, 1, 2, 8, 155, 63, },
+	{ 0, 1, 2, 9, 42, 16, },
+	{ 2, 1, 2, 9, 42, 24, },
+	{ 1, 1, 2, 9, 42, 24, },
+	{ 0, 1, 2, 9, 58, 16, },
+	{ 2, 1, 2, 9, 58, 24, },
+	{ 1, 1, 2, 9, 58, 24, },
+	{ 0, 1, 2, 9, 106, 16, },
+	{ 2, 1, 2, 9, 106, 24, },
+	{ 1, 1, 2, 9, 106, 24, },
+	{ 0, 1, 2, 9, 122, 24, },
+	{ 2, 1, 2, 9, 122, 24, },
+	{ 1, 1, 2, 9, 122, 24, },
+	{ 0, 1, 2, 9, 155, 16, },
+	{ 2, 1, 2, 9, 155, 24, },
+	{ 1, 1, 2, 9, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8814a_txpwr_lmt_type0);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8814a_txpwr_lmt_type1[] = {
+		{ 0, 0, 0, 0, 1, 34, },
+	{ 2, 0, 0, 0, 1, 32, },
+	{ 1, 0, 0, 0, 1, 32, },
+	{ 0, 0, 0, 0, 2, 34, },
+	{ 2, 0, 0, 0, 2, 32, },
+	{ 1, 0, 0, 0, 2, 32, },
+	{ 0, 0, 0, 0, 3, 34, },
+	{ 2, 0, 0, 0, 3, 32, },
+	{ 1, 0, 0, 0, 3, 32, },
+	{ 0, 0, 0, 0, 4, 34, },
+	{ 2, 0, 0, 0, 4, 32, },
+	{ 1, 0, 0, 0, 4, 32, },
+	{ 0, 0, 0, 0, 5, 34, },
+	{ 2, 0, 0, 0, 5, 32, },
+	{ 1, 0, 0, 0, 5, 32, },
+	{ 0, 0, 0, 0, 6, 34, },
+	{ 2, 0, 0, 0, 6, 32, },
+	{ 1, 0, 0, 0, 6, 32, },
+	{ 0, 0, 0, 0, 7, 34, },
+	{ 2, 0, 0, 0, 7, 32, },
+	{ 1, 0, 0, 0, 7, 32, },
+	{ 0, 0, 0, 0, 8, 34, },
+	{ 2, 0, 0, 0, 8, 32, },
+	{ 1, 0, 0, 0, 8, 32, },
+	{ 0, 0, 0, 0, 9, 34, },
+	{ 2, 0, 0, 0, 9, 32, },
+	{ 1, 0, 0, 0, 9, 32, },
+	{ 0, 0, 0, 0, 10, 34, },
+	{ 2, 0, 0, 0, 10, 32, },
+	{ 1, 0, 0, 0, 10, 32, },
+	{ 0, 0, 0, 0, 11, 34, },
+	{ 2, 0, 0, 0, 11, 32, },
+	{ 1, 0, 0, 0, 11, 32, },
+	{ 0, 0, 0, 0, 12, 24, },
+	{ 2, 0, 0, 0, 12, 32, },
+	{ 1, 0, 0, 0, 12, 32, },
+	{ 0, 0, 0, 0, 13, 16, },
+	{ 2, 0, 0, 0, 13, 32, },
+	{ 1, 0, 0, 0, 13, 32, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 32, },
+	{ 0, 0, 0, 1, 1, 30, },
+	{ 2, 0, 0, 1, 1, 32, },
+	{ 1, 0, 0, 1, 1, 32, },
+	{ 0, 0, 0, 1, 2, 32, },
+	{ 2, 0, 0, 1, 2, 32, },
+	{ 1, 0, 0, 1, 2, 32, },
+	{ 0, 0, 0, 1, 3, 32, },
+	{ 2, 0, 0, 1, 3, 32, },
+	{ 1, 0, 0, 1, 3, 32, },
+	{ 0, 0, 0, 1, 4, 32, },
+	{ 2, 0, 0, 1, 4, 32, },
+	{ 1, 0, 0, 1, 4, 32, },
+	{ 0, 0, 0, 1, 5, 32, },
+	{ 2, 0, 0, 1, 5, 32, },
+	{ 1, 0, 0, 1, 5, 32, },
+	{ 0, 0, 0, 1, 6, 32, },
+	{ 2, 0, 0, 1, 6, 32, },
+	{ 1, 0, 0, 1, 6, 32, },
+	{ 0, 0, 0, 1, 7, 32, },
+	{ 2, 0, 0, 1, 7, 32, },
+	{ 1, 0, 0, 1, 7, 32, },
+	{ 0, 0, 0, 1, 8, 32, },
+	{ 2, 0, 0, 1, 8, 32, },
+	{ 1, 0, 0, 1, 8, 32, },
+	{ 0, 0, 0, 1, 9, 32, },
+	{ 2, 0, 0, 1, 9, 32, },
+	{ 1, 0, 0, 1, 9, 32, },
+	{ 0, 0, 0, 1, 10, 32, },
+	{ 2, 0, 0, 1, 10, 32, },
+	{ 1, 0, 0, 1, 10, 32, },
+	{ 0, 0, 0, 1, 11, 30, },
+	{ 2, 0, 0, 1, 11, 32, },
+	{ 1, 0, 0, 1, 11, 32, },
+	{ 0, 0, 0, 1, 12, 18, },
+	{ 2, 0, 0, 1, 12, 32, },
+	{ 1, 0, 0, 1, 12, 32, },
+	{ 0, 0, 0, 1, 13, 8, },
+	{ 2, 0, 0, 1, 13, 32, },
+	{ 1, 0, 0, 1, 13, 32, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 63, },
+	{ 0, 0, 0, 2, 1, 28, },
+	{ 2, 0, 0, 2, 1, 32, },
+	{ 1, 0, 0, 2, 1, 32, },
+	{ 0, 0, 0, 2, 2, 32, },
+	{ 2, 0, 0, 2, 2, 32, },
+	{ 1, 0, 0, 2, 2, 32, },
+	{ 0, 0, 0, 2, 3, 32, },
+	{ 2, 0, 0, 2, 3, 32, },
+	{ 1, 0, 0, 2, 3, 32, },
+	{ 0, 0, 0, 2, 4, 32, },
+	{ 2, 0, 0, 2, 4, 32, },
+	{ 1, 0, 0, 2, 4, 32, },
+	{ 0, 0, 0, 2, 5, 32, },
+	{ 2, 0, 0, 2, 5, 32, },
+	{ 1, 0, 0, 2, 5, 32, },
+	{ 0, 0, 0, 2, 6, 32, },
+	{ 2, 0, 0, 2, 6, 32, },
+	{ 1, 0, 0, 2, 6, 32, },
+	{ 0, 0, 0, 2, 7, 32, },
+	{ 2, 0, 0, 2, 7, 32, },
+	{ 1, 0, 0, 2, 7, 32, },
+	{ 0, 0, 0, 2, 8, 32, },
+	{ 2, 0, 0, 2, 8, 32, },
+	{ 1, 0, 0, 2, 8, 32, },
+	{ 0, 0, 0, 2, 9, 32, },
+	{ 2, 0, 0, 2, 9, 32, },
+	{ 1, 0, 0, 2, 9, 32, },
+	{ 0, 0, 0, 2, 10, 32, },
+	{ 2, 0, 0, 2, 10, 32, },
+	{ 1, 0, 0, 2, 10, 32, },
+	{ 0, 0, 0, 2, 11, 28, },
+	{ 2, 0, 0, 2, 11, 32, },
+	{ 1, 0, 0, 2, 11, 32, },
+	{ 0, 0, 0, 2, 12, 16, },
+	{ 2, 0, 0, 2, 12, 32, },
+	{ 1, 0, 0, 2, 12, 32, },
+	{ 0, 0, 0, 2, 13, 6, },
+	{ 2, 0, 0, 2, 13, 32, },
+	{ 1, 0, 0, 2, 13, 32, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 63, },
+	{ 0, 0, 0, 3, 1, 26, },
+	{ 2, 0, 0, 3, 1, 30, },
+	{ 1, 0, 0, 3, 1, 30, },
+	{ 0, 0, 0, 3, 2, 30, },
+	{ 2, 0, 0, 3, 2, 30, },
+	{ 1, 0, 0, 3, 2, 30, },
+	{ 0, 0, 0, 3, 3, 30, },
+	{ 2, 0, 0, 3, 3, 30, },
+	{ 1, 0, 0, 3, 3, 30, },
+	{ 0, 0, 0, 3, 4, 30, },
+	{ 2, 0, 0, 3, 4, 30, },
+	{ 1, 0, 0, 3, 4, 30, },
+	{ 0, 0, 0, 3, 5, 30, },
+	{ 2, 0, 0, 3, 5, 30, },
+	{ 1, 0, 0, 3, 5, 30, },
+	{ 0, 0, 0, 3, 6, 30, },
+	{ 2, 0, 0, 3, 6, 30, },
+	{ 1, 0, 0, 3, 6, 30, },
+	{ 0, 0, 0, 3, 7, 30, },
+	{ 2, 0, 0, 3, 7, 30, },
+	{ 1, 0, 0, 3, 7, 30, },
+	{ 0, 0, 0, 3, 8, 30, },
+	{ 2, 0, 0, 3, 8, 30, },
+	{ 1, 0, 0, 3, 8, 30, },
+	{ 0, 0, 0, 3, 9, 30, },
+	{ 2, 0, 0, 3, 9, 30, },
+	{ 1, 0, 0, 3, 9, 30, },
+	{ 0, 0, 0, 3, 10, 30, },
+	{ 2, 0, 0, 3, 10, 30, },
+	{ 1, 0, 0, 3, 10, 30, },
+	{ 0, 0, 0, 3, 11, 26, },
+	{ 2, 0, 0, 3, 11, 30, },
+	{ 1, 0, 0, 3, 11, 30, },
+	{ 0, 0, 0, 3, 12, 14, },
+	{ 2, 0, 0, 3, 12, 30, },
+	{ 1, 0, 0, 3, 12, 30, },
+	{ 0, 0, 0, 3, 13, 4, },
+	{ 2, 0, 0, 3, 13, 30, },
+	{ 1, 0, 0, 3, 13, 30, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 63, },
+	{ 0, 0, 0, 6, 1, 24, },
+	{ 2, 0, 0, 6, 1, 28, },
+	{ 1, 0, 0, 6, 1, 28, },
+	{ 0, 0, 0, 6, 2, 28, },
+	{ 2, 0, 0, 6, 2, 28, },
+	{ 1, 0, 0, 6, 2, 28, },
+	{ 0, 0, 0, 6, 3, 28, },
+	{ 2, 0, 0, 6, 3, 28, },
+	{ 1, 0, 0, 6, 3, 28, },
+	{ 0, 0, 0, 6, 4, 28, },
+	{ 2, 0, 0, 6, 4, 28, },
+	{ 1, 0, 0, 6, 4, 28, },
+	{ 0, 0, 0, 6, 5, 28, },
+	{ 2, 0, 0, 6, 5, 28, },
+	{ 1, 0, 0, 6, 5, 28, },
+	{ 0, 0, 0, 6, 6, 28, },
+	{ 2, 0, 0, 6, 6, 28, },
+	{ 1, 0, 0, 6, 6, 28, },
+	{ 0, 0, 0, 6, 7, 28, },
+	{ 2, 0, 0, 6, 7, 28, },
+	{ 1, 0, 0, 6, 7, 28, },
+	{ 0, 0, 0, 6, 8, 28, },
+	{ 2, 0, 0, 6, 8, 28, },
+	{ 1, 0, 0, 6, 8, 28, },
+	{ 0, 0, 0, 6, 9, 28, },
+	{ 2, 0, 0, 6, 9, 28, },
+	{ 1, 0, 0, 6, 9, 28, },
+	{ 0, 0, 0, 6, 10, 28, },
+	{ 2, 0, 0, 6, 10, 28, },
+	{ 1, 0, 0, 6, 10, 28, },
+	{ 0, 0, 0, 6, 11, 24, },
+	{ 2, 0, 0, 6, 11, 28, },
+	{ 1, 0, 0, 6, 11, 28, },
+	{ 0, 0, 0, 6, 12, 14, },
+	{ 2, 0, 0, 6, 12, 28, },
+	{ 1, 0, 0, 6, 12, 28, },
+	{ 0, 0, 0, 6, 13, 4, },
+	{ 2, 0, 0, 6, 13, 28, },
+	{ 1, 0, 0, 6, 13, 28, },
+	{ 0, 0, 0, 6, 14, 63, },
+	{ 2, 0, 0, 6, 14, 63, },
+	{ 1, 0, 0, 6, 14, 63, },
+	{ 0, 0, 0, 7, 1, 22, },
+	{ 2, 0, 0, 7, 1, 26, },
+	{ 1, 0, 0, 7, 1, 26, },
+	{ 0, 0, 0, 7, 2, 26, },
+	{ 2, 0, 0, 7, 2, 26, },
+	{ 1, 0, 0, 7, 2, 26, },
+	{ 0, 0, 0, 7, 3, 26, },
+	{ 2, 0, 0, 7, 3, 26, },
+	{ 1, 0, 0, 7, 3, 26, },
+	{ 0, 0, 0, 7, 4, 26, },
+	{ 2, 0, 0, 7, 4, 26, },
+	{ 1, 0, 0, 7, 4, 26, },
+	{ 0, 0, 0, 7, 5, 26, },
+	{ 2, 0, 0, 7, 5, 26, },
+	{ 1, 0, 0, 7, 5, 26, },
+	{ 0, 0, 0, 7, 6, 26, },
+	{ 2, 0, 0, 7, 6, 26, },
+	{ 1, 0, 0, 7, 6, 26, },
+	{ 0, 0, 0, 7, 7, 26, },
+	{ 2, 0, 0, 7, 7, 26, },
+	{ 1, 0, 0, 7, 7, 26, },
+	{ 0, 0, 0, 7, 8, 26, },
+	{ 2, 0, 0, 7, 8, 26, },
+	{ 1, 0, 0, 7, 8, 26, },
+	{ 0, 0, 0, 7, 9, 26, },
+	{ 2, 0, 0, 7, 9, 26, },
+	{ 1, 0, 0, 7, 9, 26, },
+	{ 0, 0, 0, 7, 10, 26, },
+	{ 2, 0, 0, 7, 10, 26, },
+	{ 1, 0, 0, 7, 10, 26, },
+	{ 0, 0, 0, 7, 11, 22, },
+	{ 2, 0, 0, 7, 11, 26, },
+	{ 1, 0, 0, 7, 11, 26, },
+	{ 0, 0, 0, 7, 12, 14, },
+	{ 2, 0, 0, 7, 12, 26, },
+	{ 1, 0, 0, 7, 12, 26, },
+	{ 0, 0, 0, 7, 13, 4, },
+	{ 2, 0, 0, 7, 13, 26, },
+	{ 1, 0, 0, 7, 13, 26, },
+	{ 0, 0, 0, 7, 14, 63, },
+	{ 2, 0, 0, 7, 14, 63, },
+	{ 1, 0, 0, 7, 14, 63, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 28, },
+	{ 2, 0, 1, 2, 3, 32, },
+	{ 1, 0, 1, 2, 3, 32, },
+	{ 0, 0, 1, 2, 4, 32, },
+	{ 2, 0, 1, 2, 4, 32, },
+	{ 1, 0, 1, 2, 4, 32, },
+	{ 0, 0, 1, 2, 5, 32, },
+	{ 2, 0, 1, 2, 5, 32, },
+	{ 1, 0, 1, 2, 5, 32, },
+	{ 0, 0, 1, 2, 6, 32, },
+	{ 2, 0, 1, 2, 6, 32, },
+	{ 1, 0, 1, 2, 6, 32, },
+	{ 0, 0, 1, 2, 7, 32, },
+	{ 2, 0, 1, 2, 7, 32, },
+	{ 1, 0, 1, 2, 7, 32, },
+	{ 0, 0, 1, 2, 8, 32, },
+	{ 2, 0, 1, 2, 8, 32, },
+	{ 1, 0, 1, 2, 8, 32, },
+	{ 0, 0, 1, 2, 9, 32, },
+	{ 2, 0, 1, 2, 9, 32, },
+	{ 1, 0, 1, 2, 9, 32, },
+	{ 0, 0, 1, 2, 10, 32, },
+	{ 2, 0, 1, 2, 10, 32, },
+	{ 1, 0, 1, 2, 10, 32, },
+	{ 0, 0, 1, 2, 11, 28, },
+	{ 2, 0, 1, 2, 11, 32, },
+	{ 1, 0, 1, 2, 11, 32, },
+	{ 0, 0, 1, 2, 12, 16, },
+	{ 2, 0, 1, 2, 12, 32, },
+	{ 1, 0, 1, 2, 12, 32, },
+	{ 0, 0, 1, 2, 13, 10, },
+	{ 2, 0, 1, 2, 13, 32, },
+	{ 1, 0, 1, 2, 13, 32, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 26, },
+	{ 2, 0, 1, 3, 3, 30, },
+	{ 1, 0, 1, 3, 3, 30, },
+	{ 0, 0, 1, 3, 4, 30, },
+	{ 2, 0, 1, 3, 4, 30, },
+	{ 1, 0, 1, 3, 4, 30, },
+	{ 0, 0, 1, 3, 5, 30, },
+	{ 2, 0, 1, 3, 5, 30, },
+	{ 1, 0, 1, 3, 5, 30, },
+	{ 0, 0, 1, 3, 6, 30, },
+	{ 2, 0, 1, 3, 6, 30, },
+	{ 1, 0, 1, 3, 6, 30, },
+	{ 0, 0, 1, 3, 7, 30, },
+	{ 2, 0, 1, 3, 7, 30, },
+	{ 1, 0, 1, 3, 7, 30, },
+	{ 0, 0, 1, 3, 8, 30, },
+	{ 2, 0, 1, 3, 8, 30, },
+	{ 1, 0, 1, 3, 8, 30, },
+	{ 0, 0, 1, 3, 9, 30, },
+	{ 2, 0, 1, 3, 9, 30, },
+	{ 1, 0, 1, 3, 9, 30, },
+	{ 0, 0, 1, 3, 10, 30, },
+	{ 2, 0, 1, 3, 10, 30, },
+	{ 1, 0, 1, 3, 10, 30, },
+	{ 0, 0, 1, 3, 11, 26, },
+	{ 2, 0, 1, 3, 11, 30, },
+	{ 1, 0, 1, 3, 11, 30, },
+	{ 0, 0, 1, 3, 12, 14, },
+	{ 2, 0, 1, 3, 12, 30, },
+	{ 1, 0, 1, 3, 12, 30, },
+	{ 0, 0, 1, 3, 13, 8, },
+	{ 2, 0, 1, 3, 13, 30, },
+	{ 1, 0, 1, 3, 13, 30, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 0, 1, 6, 1, 63, },
+	{ 2, 0, 1, 6, 1, 63, },
+	{ 1, 0, 1, 6, 1, 63, },
+	{ 0, 0, 1, 6, 2, 63, },
+	{ 2, 0, 1, 6, 2, 63, },
+	{ 1, 0, 1, 6, 2, 63, },
+	{ 0, 0, 1, 6, 3, 24, },
+	{ 2, 0, 1, 6, 3, 28, },
+	{ 1, 0, 1, 6, 3, 28, },
+	{ 0, 0, 1, 6, 4, 28, },
+	{ 2, 0, 1, 6, 4, 28, },
+	{ 1, 0, 1, 6, 4, 28, },
+	{ 0, 0, 1, 6, 5, 28, },
+	{ 2, 0, 1, 6, 5, 28, },
+	{ 1, 0, 1, 6, 5, 28, },
+	{ 0, 0, 1, 6, 6, 28, },
+	{ 2, 0, 1, 6, 6, 28, },
+	{ 1, 0, 1, 6, 6, 28, },
+	{ 0, 0, 1, 6, 7, 28, },
+	{ 2, 0, 1, 6, 7, 28, },
+	{ 1, 0, 1, 6, 7, 28, },
+	{ 0, 0, 1, 6, 8, 28, },
+	{ 2, 0, 1, 6, 8, 28, },
+	{ 1, 0, 1, 6, 8, 28, },
+	{ 0, 0, 1, 6, 9, 28, },
+	{ 2, 0, 1, 6, 9, 28, },
+	{ 1, 0, 1, 6, 9, 28, },
+	{ 0, 0, 1, 6, 10, 28, },
+	{ 2, 0, 1, 6, 10, 28, },
+	{ 1, 0, 1, 6, 10, 28, },
+	{ 0, 0, 1, 6, 11, 24, },
+	{ 2, 0, 1, 6, 11, 28, },
+	{ 1, 0, 1, 6, 11, 28, },
+	{ 0, 0, 1, 6, 12, 14, },
+	{ 2, 0, 1, 6, 12, 28, },
+	{ 1, 0, 1, 6, 12, 28, },
+	{ 0, 0, 1, 6, 13, 8, },
+	{ 2, 0, 1, 6, 13, 28, },
+	{ 1, 0, 1, 6, 13, 28, },
+	{ 0, 0, 1, 6, 14, 63, },
+	{ 2, 0, 1, 6, 14, 63, },
+	{ 1, 0, 1, 6, 14, 63, },
+	{ 0, 0, 1, 7, 1, 63, },
+	{ 2, 0, 1, 7, 1, 63, },
+	{ 1, 0, 1, 7, 1, 63, },
+	{ 0, 0, 1, 7, 2, 63, },
+	{ 2, 0, 1, 7, 2, 63, },
+	{ 1, 0, 1, 7, 2, 63, },
+	{ 0, 0, 1, 7, 3, 22, },
+	{ 2, 0, 1, 7, 3, 26, },
+	{ 1, 0, 1, 7, 3, 26, },
+	{ 0, 0, 1, 7, 4, 26, },
+	{ 2, 0, 1, 7, 4, 26, },
+	{ 1, 0, 1, 7, 4, 26, },
+	{ 0, 0, 1, 7, 5, 26, },
+	{ 2, 0, 1, 7, 5, 26, },
+	{ 1, 0, 1, 7, 5, 26, },
+	{ 0, 0, 1, 7, 6, 26, },
+	{ 2, 0, 1, 7, 6, 26, },
+	{ 1, 0, 1, 7, 6, 26, },
+	{ 0, 0, 1, 7, 7, 26, },
+	{ 2, 0, 1, 7, 7, 26, },
+	{ 1, 0, 1, 7, 7, 26, },
+	{ 0, 0, 1, 7, 8, 26, },
+	{ 2, 0, 1, 7, 8, 26, },
+	{ 1, 0, 1, 7, 8, 26, },
+	{ 0, 0, 1, 7, 9, 26, },
+	{ 2, 0, 1, 7, 9, 26, },
+	{ 1, 0, 1, 7, 9, 26, },
+	{ 0, 0, 1, 7, 10, 26, },
+	{ 2, 0, 1, 7, 10, 26, },
+	{ 1, 0, 1, 7, 10, 26, },
+	{ 0, 0, 1, 7, 11, 22, },
+	{ 2, 0, 1, 7, 11, 26, },
+	{ 1, 0, 1, 7, 11, 26, },
+	{ 0, 0, 1, 7, 12, 14, },
+	{ 2, 0, 1, 7, 12, 26, },
+	{ 1, 0, 1, 7, 12, 26, },
+	{ 0, 0, 1, 7, 13, 8, },
+	{ 2, 0, 1, 7, 13, 26, },
+	{ 1, 0, 1, 7, 13, 26, },
+	{ 0, 0, 1, 7, 14, 63, },
+	{ 2, 0, 1, 7, 14, 63, },
+	{ 1, 0, 1, 7, 14, 63, },
+	{ 0, 1, 0, 1, 36, 28, },
+	{ 2, 1, 0, 1, 36, 32, },
+	{ 1, 1, 0, 1, 36, 32, },
+	{ 0, 1, 0, 1, 40, 32, },
+	{ 2, 1, 0, 1, 40, 32, },
+	{ 1, 1, 0, 1, 40, 32, },
+	{ 0, 1, 0, 1, 44, 32, },
+	{ 2, 1, 0, 1, 44, 32, },
+	{ 1, 1, 0, 1, 44, 32, },
+	{ 0, 1, 0, 1, 48, 32, },
+	{ 2, 1, 0, 1, 48, 32, },
+	{ 1, 1, 0, 1, 48, 32, },
+	{ 0, 1, 0, 1, 52, 32, },
+	{ 2, 1, 0, 1, 52, 32, },
+	{ 1, 1, 0, 1, 52, 32, },
+	{ 0, 1, 0, 1, 56, 32, },
+	{ 2, 1, 0, 1, 56, 32, },
+	{ 1, 1, 0, 1, 56, 32, },
+	{ 0, 1, 0, 1, 60, 32, },
+	{ 2, 1, 0, 1, 60, 32, },
+	{ 1, 1, 0, 1, 60, 32, },
+	{ 0, 1, 0, 1, 64, 30, },
+	{ 2, 1, 0, 1, 64, 32, },
+	{ 1, 1, 0, 1, 64, 32, },
+	{ 0, 1, 0, 1, 100, 28, },
+	{ 2, 1, 0, 1, 100, 32, },
+	{ 1, 1, 0, 1, 100, 32, },
+	{ 0, 1, 0, 1, 104, 32, },
+	{ 2, 1, 0, 1, 104, 32, },
+	{ 1, 1, 0, 1, 104, 32, },
+	{ 0, 1, 0, 1, 108, 32, },
+	{ 2, 1, 0, 1, 108, 32, },
+	{ 1, 1, 0, 1, 108, 32, },
+	{ 0, 1, 0, 1, 112, 32, },
+	{ 2, 1, 0, 1, 112, 32, },
+	{ 1, 1, 0, 1, 112, 32, },
+	{ 0, 1, 0, 1, 116, 32, },
+	{ 2, 1, 0, 1, 116, 32, },
+	{ 1, 1, 0, 1, 116, 32, },
+	{ 0, 1, 0, 1, 120, 32, },
+	{ 2, 1, 0, 1, 120, 32, },
+	{ 1, 1, 0, 1, 120, 32, },
+	{ 0, 1, 0, 1, 124, 32, },
+	{ 2, 1, 0, 1, 124, 32, },
+	{ 1, 1, 0, 1, 124, 32, },
+	{ 0, 1, 0, 1, 128, 32, },
+	{ 2, 1, 0, 1, 128, 32, },
+	{ 1, 1, 0, 1, 128, 32, },
+	{ 0, 1, 0, 1, 132, 32, },
+	{ 2, 1, 0, 1, 132, 32, },
+	{ 1, 1, 0, 1, 132, 32, },
+	{ 0, 1, 0, 1, 136, 32, },
+	{ 2, 1, 0, 1, 136, 32, },
+	{ 1, 1, 0, 1, 136, 32, },
+	{ 0, 1, 0, 1, 140, 28, },
+	{ 2, 1, 0, 1, 140, 32, },
+	{ 1, 1, 0, 1, 140, 32, },
+	{ 0, 1, 0, 1, 149, 28, },
+	{ 2, 1, 0, 1, 149, 32, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 32, },
+	{ 2, 1, 0, 1, 153, 32, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 32, },
+	{ 2, 1, 0, 1, 157, 32, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 32, },
+	{ 2, 1, 0, 1, 161, 32, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 32, },
+	{ 2, 1, 0, 1, 165, 32, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 28, },
+	{ 2, 1, 0, 2, 36, 32, },
+	{ 1, 1, 0, 2, 36, 32, },
+	{ 0, 1, 0, 2, 40, 32, },
+	{ 2, 1, 0, 2, 40, 32, },
+	{ 1, 1, 0, 2, 40, 32, },
+	{ 0, 1, 0, 2, 44, 32, },
+	{ 2, 1, 0, 2, 44, 32, },
+	{ 1, 1, 0, 2, 44, 32, },
+	{ 0, 1, 0, 2, 48, 32, },
+	{ 2, 1, 0, 2, 48, 32, },
+	{ 1, 1, 0, 2, 48, 32, },
+	{ 0, 1, 0, 2, 52, 32, },
+	{ 2, 1, 0, 2, 52, 32, },
+	{ 1, 1, 0, 2, 52, 32, },
+	{ 0, 1, 0, 2, 56, 32, },
+	{ 2, 1, 0, 2, 56, 32, },
+	{ 1, 1, 0, 2, 56, 32, },
+	{ 0, 1, 0, 2, 60, 32, },
+	{ 2, 1, 0, 2, 60, 32, },
+	{ 1, 1, 0, 2, 60, 32, },
+	{ 0, 1, 0, 2, 64, 30, },
+	{ 2, 1, 0, 2, 64, 32, },
+	{ 1, 1, 0, 2, 64, 32, },
+	{ 0, 1, 0, 2, 100, 28, },
+	{ 2, 1, 0, 2, 100, 32, },
+	{ 1, 1, 0, 2, 100, 32, },
+	{ 0, 1, 0, 2, 104, 32, },
+	{ 2, 1, 0, 2, 104, 32, },
+	{ 1, 1, 0, 2, 104, 32, },
+	{ 0, 1, 0, 2, 108, 32, },
+	{ 2, 1, 0, 2, 108, 32, },
+	{ 1, 1, 0, 2, 108, 32, },
+	{ 0, 1, 0, 2, 112, 32, },
+	{ 2, 1, 0, 2, 112, 32, },
+	{ 1, 1, 0, 2, 112, 32, },
+	{ 0, 1, 0, 2, 116, 32, },
+	{ 2, 1, 0, 2, 116, 32, },
+	{ 1, 1, 0, 2, 116, 32, },
+	{ 0, 1, 0, 2, 120, 32, },
+	{ 2, 1, 0, 2, 120, 32, },
+	{ 1, 1, 0, 2, 120, 32, },
+	{ 0, 1, 0, 2, 124, 32, },
+	{ 2, 1, 0, 2, 124, 32, },
+	{ 1, 1, 0, 2, 124, 32, },
+	{ 0, 1, 0, 2, 128, 32, },
+	{ 2, 1, 0, 2, 128, 32, },
+	{ 1, 1, 0, 2, 128, 32, },
+	{ 0, 1, 0, 2, 132, 32, },
+	{ 2, 1, 0, 2, 132, 32, },
+	{ 1, 1, 0, 2, 132, 32, },
+	{ 0, 1, 0, 2, 136, 32, },
+	{ 2, 1, 0, 2, 136, 32, },
+	{ 1, 1, 0, 2, 136, 32, },
+	{ 0, 1, 0, 2, 140, 28, },
+	{ 2, 1, 0, 2, 140, 32, },
+	{ 1, 1, 0, 2, 140, 32, },
+	{ 0, 1, 0, 2, 149, 28, },
+	{ 2, 1, 0, 2, 149, 32, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 32, },
+	{ 2, 1, 0, 2, 153, 32, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 32, },
+	{ 2, 1, 0, 2, 157, 32, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 32, },
+	{ 2, 1, 0, 2, 161, 32, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 32, },
+	{ 2, 1, 0, 2, 165, 32, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 26, },
+	{ 2, 1, 0, 3, 36, 30, },
+	{ 1, 1, 0, 3, 36, 30, },
+	{ 0, 1, 0, 3, 40, 30, },
+	{ 2, 1, 0, 3, 40, 30, },
+	{ 1, 1, 0, 3, 40, 30, },
+	{ 0, 1, 0, 3, 44, 30, },
+	{ 2, 1, 0, 3, 44, 30, },
+	{ 1, 1, 0, 3, 44, 30, },
+	{ 0, 1, 0, 3, 48, 30, },
+	{ 2, 1, 0, 3, 48, 30, },
+	{ 1, 1, 0, 3, 48, 30, },
+	{ 0, 1, 0, 3, 52, 30, },
+	{ 2, 1, 0, 3, 52, 30, },
+	{ 1, 1, 0, 3, 52, 30, },
+	{ 0, 1, 0, 3, 56, 30, },
+	{ 2, 1, 0, 3, 56, 30, },
+	{ 1, 1, 0, 3, 56, 30, },
+	{ 0, 1, 0, 3, 60, 30, },
+	{ 2, 1, 0, 3, 60, 30, },
+	{ 1, 1, 0, 3, 60, 30, },
+	{ 0, 1, 0, 3, 64, 28, },
+	{ 2, 1, 0, 3, 64, 30, },
+	{ 1, 1, 0, 3, 64, 30, },
+	{ 0, 1, 0, 3, 100, 28, },
+	{ 2, 1, 0, 3, 100, 30, },
+	{ 1, 1, 0, 3, 100, 30, },
+	{ 0, 1, 0, 3, 104, 30, },
+	{ 2, 1, 0, 3, 104, 30, },
+	{ 1, 1, 0, 3, 104, 30, },
+	{ 0, 1, 0, 3, 108, 30, },
+	{ 2, 1, 0, 3, 108, 30, },
+	{ 1, 1, 0, 3, 108, 30, },
+	{ 0, 1, 0, 3, 112, 30, },
+	{ 2, 1, 0, 3, 112, 30, },
+	{ 1, 1, 0, 3, 112, 30, },
+	{ 0, 1, 0, 3, 116, 30, },
+	{ 2, 1, 0, 3, 116, 30, },
+	{ 1, 1, 0, 3, 116, 30, },
+	{ 0, 1, 0, 3, 120, 30, },
+	{ 2, 1, 0, 3, 120, 30, },
+	{ 1, 1, 0, 3, 120, 30, },
+	{ 0, 1, 0, 3, 124, 30, },
+	{ 2, 1, 0, 3, 124, 30, },
+	{ 1, 1, 0, 3, 124, 30, },
+	{ 0, 1, 0, 3, 128, 30, },
+	{ 2, 1, 0, 3, 128, 30, },
+	{ 1, 1, 0, 3, 128, 30, },
+	{ 0, 1, 0, 3, 132, 30, },
+	{ 2, 1, 0, 3, 132, 30, },
+	{ 1, 1, 0, 3, 132, 30, },
+	{ 0, 1, 0, 3, 136, 30, },
+	{ 2, 1, 0, 3, 136, 30, },
+	{ 1, 1, 0, 3, 136, 30, },
+	{ 0, 1, 0, 3, 140, 26, },
+	{ 2, 1, 0, 3, 140, 30, },
+	{ 1, 1, 0, 3, 140, 30, },
+	{ 0, 1, 0, 3, 149, 26, },
+	{ 2, 1, 0, 3, 149, 30, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 30, },
+	{ 2, 1, 0, 3, 153, 30, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 30, },
+	{ 2, 1, 0, 3, 157, 30, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 30, },
+	{ 2, 1, 0, 3, 161, 30, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 30, },
+	{ 2, 1, 0, 3, 165, 30, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 0, 6, 36, 24, },
+	{ 2, 1, 0, 6, 36, 28, },
+	{ 1, 1, 0, 6, 36, 28, },
+	{ 0, 1, 0, 6, 40, 28, },
+	{ 2, 1, 0, 6, 40, 28, },
+	{ 1, 1, 0, 6, 40, 28, },
+	{ 0, 1, 0, 6, 44, 28, },
+	{ 2, 1, 0, 6, 44, 28, },
+	{ 1, 1, 0, 6, 44, 28, },
+	{ 0, 1, 0, 6, 48, 28, },
+	{ 2, 1, 0, 6, 48, 28, },
+	{ 1, 1, 0, 6, 48, 28, },
+	{ 0, 1, 0, 6, 52, 28, },
+	{ 2, 1, 0, 6, 52, 28, },
+	{ 1, 1, 0, 6, 52, 28, },
+	{ 0, 1, 0, 6, 56, 28, },
+	{ 2, 1, 0, 6, 56, 28, },
+	{ 1, 1, 0, 6, 56, 28, },
+	{ 0, 1, 0, 6, 60, 28, },
+	{ 2, 1, 0, 6, 60, 28, },
+	{ 1, 1, 0, 6, 60, 28, },
+	{ 0, 1, 0, 6, 64, 26, },
+	{ 2, 1, 0, 6, 64, 28, },
+	{ 1, 1, 0, 6, 64, 28, },
+	{ 0, 1, 0, 6, 100, 24, },
+	{ 2, 1, 0, 6, 100, 28, },
+	{ 1, 1, 0, 6, 100, 28, },
+	{ 0, 1, 0, 6, 104, 28, },
+	{ 2, 1, 0, 6, 104, 28, },
+	{ 1, 1, 0, 6, 104, 28, },
+	{ 0, 1, 0, 6, 108, 28, },
+	{ 2, 1, 0, 6, 108, 28, },
+	{ 1, 1, 0, 6, 108, 28, },
+	{ 0, 1, 0, 6, 112, 28, },
+	{ 2, 1, 0, 6, 112, 28, },
+	{ 1, 1, 0, 6, 112, 28, },
+	{ 0, 1, 0, 6, 116, 28, },
+	{ 2, 1, 0, 6, 116, 28, },
+	{ 1, 1, 0, 6, 116, 28, },
+	{ 0, 1, 0, 6, 120, 28, },
+	{ 2, 1, 0, 6, 120, 28, },
+	{ 1, 1, 0, 6, 120, 28, },
+	{ 0, 1, 0, 6, 124, 28, },
+	{ 2, 1, 0, 6, 124, 28, },
+	{ 1, 1, 0, 6, 124, 28, },
+	{ 0, 1, 0, 6, 128, 28, },
+	{ 2, 1, 0, 6, 128, 28, },
+	{ 1, 1, 0, 6, 128, 28, },
+	{ 0, 1, 0, 6, 132, 28, },
+	{ 2, 1, 0, 6, 132, 28, },
+	{ 1, 1, 0, 6, 132, 28, },
+	{ 0, 1, 0, 6, 136, 28, },
+	{ 2, 1, 0, 6, 136, 28, },
+	{ 1, 1, 0, 6, 136, 28, },
+	{ 0, 1, 0, 6, 140, 24, },
+	{ 2, 1, 0, 6, 140, 28, },
+	{ 1, 1, 0, 6, 140, 28, },
+	{ 0, 1, 0, 6, 149, 24, },
+	{ 2, 1, 0, 6, 149, 28, },
+	{ 1, 1, 0, 6, 149, 63, },
+	{ 0, 1, 0, 6, 153, 28, },
+	{ 2, 1, 0, 6, 153, 28, },
+	{ 1, 1, 0, 6, 153, 63, },
+	{ 0, 1, 0, 6, 157, 28, },
+	{ 2, 1, 0, 6, 157, 28, },
+	{ 1, 1, 0, 6, 157, 63, },
+	{ 0, 1, 0, 6, 161, 28, },
+	{ 2, 1, 0, 6, 161, 28, },
+	{ 1, 1, 0, 6, 161, 63, },
+	{ 0, 1, 0, 6, 165, 28, },
+	{ 2, 1, 0, 6, 165, 28, },
+	{ 1, 1, 0, 6, 165, 63, },
+	{ 0, 1, 0, 7, 36, 22, },
+	{ 2, 1, 0, 7, 36, 26, },
+	{ 1, 1, 0, 7, 36, 26, },
+	{ 0, 1, 0, 7, 40, 26, },
+	{ 2, 1, 0, 7, 40, 26, },
+	{ 1, 1, 0, 7, 40, 26, },
+	{ 0, 1, 0, 7, 44, 26, },
+	{ 2, 1, 0, 7, 44, 26, },
+	{ 1, 1, 0, 7, 44, 26, },
+	{ 0, 1, 0, 7, 48, 26, },
+	{ 2, 1, 0, 7, 48, 26, },
+	{ 1, 1, 0, 7, 48, 26, },
+	{ 0, 1, 0, 7, 52, 26, },
+	{ 2, 1, 0, 7, 52, 26, },
+	{ 1, 1, 0, 7, 52, 26, },
+	{ 0, 1, 0, 7, 56, 26, },
+	{ 2, 1, 0, 7, 56, 26, },
+	{ 1, 1, 0, 7, 56, 26, },
+	{ 0, 1, 0, 7, 60, 26, },
+	{ 2, 1, 0, 7, 60, 26, },
+	{ 1, 1, 0, 7, 60, 26, },
+	{ 0, 1, 0, 7, 64, 24, },
+	{ 2, 1, 0, 7, 64, 26, },
+	{ 1, 1, 0, 7, 64, 26, },
+	{ 0, 1, 0, 7, 100, 22, },
+	{ 2, 1, 0, 7, 100, 26, },
+	{ 1, 1, 0, 7, 100, 26, },
+	{ 0, 1, 0, 7, 104, 26, },
+	{ 2, 1, 0, 7, 104, 26, },
+	{ 1, 1, 0, 7, 104, 26, },
+	{ 0, 1, 0, 7, 108, 26, },
+	{ 2, 1, 0, 7, 108, 26, },
+	{ 1, 1, 0, 7, 108, 26, },
+	{ 0, 1, 0, 7, 112, 26, },
+	{ 2, 1, 0, 7, 112, 26, },
+	{ 1, 1, 0, 7, 112, 26, },
+	{ 0, 1, 0, 7, 116, 26, },
+	{ 2, 1, 0, 7, 116, 26, },
+	{ 1, 1, 0, 7, 116, 26, },
+	{ 0, 1, 0, 7, 120, 26, },
+	{ 2, 1, 0, 7, 120, 26, },
+	{ 1, 1, 0, 7, 120, 26, },
+	{ 0, 1, 0, 7, 124, 26, },
+	{ 2, 1, 0, 7, 124, 26, },
+	{ 1, 1, 0, 7, 124, 26, },
+	{ 0, 1, 0, 7, 128, 26, },
+	{ 2, 1, 0, 7, 128, 26, },
+	{ 1, 1, 0, 7, 128, 26, },
+	{ 0, 1, 0, 7, 132, 26, },
+	{ 2, 1, 0, 7, 132, 26, },
+	{ 1, 1, 0, 7, 132, 26, },
+	{ 0, 1, 0, 7, 136, 26, },
+	{ 2, 1, 0, 7, 136, 26, },
+	{ 1, 1, 0, 7, 136, 26, },
+	{ 0, 1, 0, 7, 140, 22, },
+	{ 2, 1, 0, 7, 140, 26, },
+	{ 1, 1, 0, 7, 140, 26, },
+	{ 0, 1, 0, 7, 149, 22, },
+	{ 2, 1, 0, 7, 149, 26, },
+	{ 1, 1, 0, 7, 149, 63, },
+	{ 0, 1, 0, 7, 153, 26, },
+	{ 2, 1, 0, 7, 153, 26, },
+	{ 1, 1, 0, 7, 153, 63, },
+	{ 0, 1, 0, 7, 157, 26, },
+	{ 2, 1, 0, 7, 157, 26, },
+	{ 1, 1, 0, 7, 157, 63, },
+	{ 0, 1, 0, 7, 161, 26, },
+	{ 2, 1, 0, 7, 161, 26, },
+	{ 1, 1, 0, 7, 161, 63, },
+	{ 0, 1, 0, 7, 165, 26, },
+	{ 2, 1, 0, 7, 165, 26, },
+	{ 1, 1, 0, 7, 165, 63, },
+	{ 0, 1, 1, 2, 38, 28, },
+	{ 2, 1, 1, 2, 38, 32, },
+	{ 1, 1, 1, 2, 38, 32, },
+	{ 0, 1, 1, 2, 46, 32, },
+	{ 2, 1, 1, 2, 46, 32, },
+	{ 1, 1, 1, 2, 46, 32, },
+	{ 0, 1, 1, 2, 54, 32, },
+	{ 2, 1, 1, 2, 54, 32, },
+	{ 1, 1, 1, 2, 54, 32, },
+	{ 0, 1, 1, 2, 62, 28, },
+	{ 2, 1, 1, 2, 62, 32, },
+	{ 1, 1, 1, 2, 62, 32, },
+	{ 0, 1, 1, 2, 102, 28, },
+	{ 2, 1, 1, 2, 102, 32, },
+	{ 1, 1, 1, 2, 102, 32, },
+	{ 0, 1, 1, 2, 110, 32, },
+	{ 2, 1, 1, 2, 110, 32, },
+	{ 1, 1, 1, 2, 110, 32, },
+	{ 0, 1, 1, 2, 118, 32, },
+	{ 2, 1, 1, 2, 118, 32, },
+	{ 1, 1, 1, 2, 118, 32, },
+	{ 0, 1, 1, 2, 126, 32, },
+	{ 2, 1, 1, 2, 126, 32, },
+	{ 1, 1, 1, 2, 126, 32, },
+	{ 0, 1, 1, 2, 134, 30, },
+	{ 2, 1, 1, 2, 134, 32, },
+	{ 1, 1, 1, 2, 134, 32, },
+	{ 0, 1, 1, 2, 151, 28, },
+	{ 2, 1, 1, 2, 151, 32, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 32, },
+	{ 2, 1, 1, 2, 159, 32, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 26, },
+	{ 2, 1, 1, 3, 38, 30, },
+	{ 1, 1, 1, 3, 38, 30, },
+	{ 0, 1, 1, 3, 46, 30, },
+	{ 2, 1, 1, 3, 46, 30, },
+	{ 1, 1, 1, 3, 46, 30, },
+	{ 0, 1, 1, 3, 54, 30, },
+	{ 2, 1, 1, 3, 54, 30, },
+	{ 1, 1, 1, 3, 54, 30, },
+	{ 0, 1, 1, 3, 62, 26, },
+	{ 2, 1, 1, 3, 62, 30, },
+	{ 1, 1, 1, 3, 62, 30, },
+	{ 0, 1, 1, 3, 102, 26, },
+	{ 2, 1, 1, 3, 102, 30, },
+	{ 1, 1, 1, 3, 102, 30, },
+	{ 0, 1, 1, 3, 110, 30, },
+	{ 2, 1, 1, 3, 110, 30, },
+	{ 1, 1, 1, 3, 110, 30, },
+	{ 0, 1, 1, 3, 118, 30, },
+	{ 2, 1, 1, 3, 118, 30, },
+	{ 1, 1, 1, 3, 118, 30, },
+	{ 0, 1, 1, 3, 126, 30, },
+	{ 2, 1, 1, 3, 126, 30, },
+	{ 1, 1, 1, 3, 126, 30, },
+	{ 0, 1, 1, 3, 134, 28, },
+	{ 2, 1, 1, 3, 134, 30, },
+	{ 1, 1, 1, 3, 134, 30, },
+	{ 0, 1, 1, 3, 151, 26, },
+	{ 2, 1, 1, 3, 151, 30, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 30, },
+	{ 2, 1, 1, 3, 159, 30, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 1, 6, 38, 20, },
+	{ 2, 1, 1, 6, 38, 28, },
+	{ 1, 1, 1, 6, 38, 28, },
+	{ 0, 1, 1, 6, 46, 28, },
+	{ 2, 1, 1, 6, 46, 28, },
+	{ 1, 1, 1, 6, 46, 28, },
+	{ 0, 1, 1, 6, 54, 28, },
+	{ 2, 1, 1, 6, 54, 28, },
+	{ 1, 1, 1, 6, 54, 28, },
+	{ 0, 1, 1, 6, 62, 20, },
+	{ 2, 1, 1, 6, 62, 28, },
+	{ 1, 1, 1, 6, 62, 28, },
+	{ 0, 1, 1, 6, 102, 22, },
+	{ 2, 1, 1, 6, 102, 28, },
+	{ 1, 1, 1, 6, 102, 28, },
+	{ 0, 1, 1, 6, 110, 28, },
+	{ 2, 1, 1, 6, 110, 28, },
+	{ 1, 1, 1, 6, 110, 28, },
+	{ 0, 1, 1, 6, 118, 28, },
+	{ 2, 1, 1, 6, 118, 28, },
+	{ 1, 1, 1, 6, 118, 28, },
+	{ 0, 1, 1, 6, 126, 28, },
+	{ 2, 1, 1, 6, 126, 28, },
+	{ 1, 1, 1, 6, 126, 28, },
+	{ 0, 1, 1, 6, 134, 26, },
+	{ 2, 1, 1, 6, 134, 28, },
+	{ 1, 1, 1, 6, 134, 28, },
+	{ 0, 1, 1, 6, 151, 22, },
+	{ 2, 1, 1, 6, 151, 28, },
+	{ 1, 1, 1, 6, 151, 63, },
+	{ 0, 1, 1, 6, 159, 28, },
+	{ 2, 1, 1, 6, 159, 28, },
+	{ 1, 1, 1, 6, 159, 63, },
+	{ 0, 1, 1, 7, 38, 18, },
+	{ 2, 1, 1, 7, 38, 26, },
+	{ 1, 1, 1, 7, 38, 26, },
+	{ 0, 1, 1, 7, 46, 26, },
+	{ 2, 1, 1, 7, 46, 26, },
+	{ 1, 1, 1, 7, 46, 26, },
+	{ 0, 1, 1, 7, 54, 26, },
+	{ 2, 1, 1, 7, 54, 26, },
+	{ 1, 1, 1, 7, 54, 26, },
+	{ 0, 1, 1, 7, 62, 18, },
+	{ 2, 1, 1, 7, 62, 26, },
+	{ 1, 1, 1, 7, 62, 26, },
+	{ 0, 1, 1, 7, 102, 20, },
+	{ 2, 1, 1, 7, 102, 26, },
+	{ 1, 1, 1, 7, 102, 26, },
+	{ 0, 1, 1, 7, 110, 26, },
+	{ 2, 1, 1, 7, 110, 26, },
+	{ 1, 1, 1, 7, 110, 26, },
+	{ 0, 1, 1, 7, 118, 26, },
+	{ 2, 1, 1, 7, 118, 26, },
+	{ 1, 1, 1, 7, 118, 26, },
+	{ 0, 1, 1, 7, 126, 26, },
+	{ 2, 1, 1, 7, 126, 26, },
+	{ 1, 1, 1, 7, 126, 26, },
+	{ 0, 1, 1, 7, 134, 24, },
+	{ 2, 1, 1, 7, 134, 26, },
+	{ 1, 1, 1, 7, 134, 26, },
+	{ 0, 1, 1, 7, 151, 20, },
+	{ 2, 1, 1, 7, 151, 26, },
+	{ 1, 1, 1, 7, 151, 63, },
+	{ 0, 1, 1, 7, 159, 26, },
+	{ 2, 1, 1, 7, 159, 26, },
+	{ 1, 1, 1, 7, 159, 63, },
+	{ 0, 1, 2, 4, 42, 24, },
+	{ 2, 1, 2, 4, 42, 32, },
+	{ 1, 1, 2, 4, 42, 32, },
+	{ 0, 1, 2, 4, 58, 24, },
+	{ 2, 1, 2, 4, 58, 32, },
+	{ 1, 1, 2, 4, 58, 32, },
+	{ 0, 1, 2, 4, 106, 24, },
+	{ 2, 1, 2, 4, 106, 32, },
+	{ 1, 1, 2, 4, 106, 32, },
+	{ 0, 1, 2, 4, 122, 32, },
+	{ 2, 1, 2, 4, 122, 32, },
+	{ 1, 1, 2, 4, 122, 32, },
+	{ 0, 1, 2, 4, 155, 26, },
+	{ 2, 1, 2, 4, 155, 32, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 22, },
+	{ 2, 1, 2, 5, 42, 30, },
+	{ 1, 1, 2, 5, 42, 30, },
+	{ 0, 1, 2, 5, 58, 22, },
+	{ 2, 1, 2, 5, 58, 30, },
+	{ 1, 1, 2, 5, 58, 30, },
+	{ 0, 1, 2, 5, 106, 22, },
+	{ 2, 1, 2, 5, 106, 30, },
+	{ 1, 1, 2, 5, 106, 30, },
+	{ 0, 1, 2, 5, 122, 30, },
+	{ 2, 1, 2, 5, 122, 30, },
+	{ 1, 1, 2, 5, 122, 30, },
+	{ 0, 1, 2, 5, 155, 24, },
+	{ 2, 1, 2, 5, 155, 30, },
+	{ 1, 1, 2, 5, 155, 63, },
+	{ 0, 1, 2, 8, 42, 20, },
+	{ 2, 1, 2, 8, 42, 28, },
+	{ 1, 1, 2, 8, 42, 28, },
+	{ 0, 1, 2, 8, 58, 20, },
+	{ 2, 1, 2, 8, 58, 28, },
+	{ 1, 1, 2, 8, 58, 28, },
+	{ 0, 1, 2, 8, 106, 20, },
+	{ 2, 1, 2, 8, 106, 28, },
+	{ 1, 1, 2, 8, 106, 28, },
+	{ 0, 1, 2, 8, 122, 28, },
+	{ 2, 1, 2, 8, 122, 28, },
+	{ 1, 1, 2, 8, 122, 28, },
+	{ 0, 1, 2, 8, 155, 20, },
+	{ 2, 1, 2, 8, 155, 28, },
+	{ 1, 1, 2, 8, 155, 63, },
+	{ 0, 1, 2, 9, 42, 18, },
+	{ 2, 1, 2, 9, 42, 26, },
+	{ 1, 1, 2, 9, 42, 26, },
+	{ 0, 1, 2, 9, 58, 18, },
+	{ 2, 1, 2, 9, 58, 26, },
+	{ 1, 1, 2, 9, 58, 26, },
+	{ 0, 1, 2, 9, 106, 18, },
+	{ 2, 1, 2, 9, 106, 26, },
+	{ 1, 1, 2, 9, 106, 26, },
+	{ 0, 1, 2, 9, 122, 26, },
+	{ 2, 1, 2, 9, 122, 26, },
+	{ 1, 1, 2, 9, 122, 26, },
+	{ 0, 1, 2, 9, 155, 18, },
+	{ 2, 1, 2, 9, 155, 26, },
+	{ 1, 1, 2, 9, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8814a_txpwr_lmt_type1);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8814a_txpwr_lmt_type2[] = {
+	{ 0, 0, 0, 0, 1, 42, },
+	{ 2, 0, 0, 0, 1, 42, },
+	{ 1, 0, 0, 0, 1, 42, },
+	{ 0, 0, 0, 0, 2, 50, },
+	{ 2, 0, 0, 0, 2, 42, },
+	{ 1, 0, 0, 0, 2, 42, },
+	{ 0, 0, 0, 0, 3, 50, },
+	{ 2, 0, 0, 0, 3, 42, },
+	{ 1, 0, 0, 0, 3, 42, },
+	{ 0, 0, 0, 0, 4, 50, },
+	{ 2, 0, 0, 0, 4, 42, },
+	{ 1, 0, 0, 0, 4, 42, },
+	{ 0, 0, 0, 0, 5, 50, },
+	{ 2, 0, 0, 0, 5, 42, },
+	{ 1, 0, 0, 0, 5, 42, },
+	{ 0, 0, 0, 0, 6, 50, },
+	{ 2, 0, 0, 0, 6, 42, },
+	{ 1, 0, 0, 0, 6, 42, },
+	{ 0, 0, 0, 0, 7, 50, },
+	{ 2, 0, 0, 0, 7, 42, },
+	{ 1, 0, 0, 0, 7, 42, },
+	{ 0, 0, 0, 0, 8, 50, },
+	{ 2, 0, 0, 0, 8, 42, },
+	{ 1, 0, 0, 0, 8, 42, },
+	{ 0, 0, 0, 0, 9, 50, },
+	{ 2, 0, 0, 0, 9, 42, },
+	{ 1, 0, 0, 0, 9, 42, },
+	{ 0, 0, 0, 0, 10, 50, },
+	{ 2, 0, 0, 0, 10, 42, },
+	{ 1, 0, 0, 0, 10, 42, },
+	{ 0, 0, 0, 0, 11, 44, },
+	{ 2, 0, 0, 0, 11, 42, },
+	{ 1, 0, 0, 0, 11, 42, },
+	{ 0, 0, 0, 0, 12, 63, },
+	{ 2, 0, 0, 0, 12, 42, },
+	{ 1, 0, 0, 0, 12, 42, },
+	{ 0, 0, 0, 0, 13, 63, },
+	{ 2, 0, 0, 0, 13, 42, },
+	{ 1, 0, 0, 0, 13, 42, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 42, },
+	{ 0, 0, 0, 1, 1, 32, },
+	{ 2, 0, 0, 1, 1, 42, },
+	{ 1, 0, 0, 1, 1, 42, },
+	{ 0, 0, 0, 1, 2, 42, },
+	{ 2, 0, 0, 1, 2, 42, },
+	{ 1, 0, 0, 1, 2, 42, },
+	{ 0, 0, 0, 1, 3, 42, },
+	{ 2, 0, 0, 1, 3, 42, },
+	{ 1, 0, 0, 1, 3, 42, },
+	{ 0, 0, 0, 1, 4, 42, },
+	{ 2, 0, 0, 1, 4, 42, },
+	{ 1, 0, 0, 1, 4, 42, },
+	{ 0, 0, 0, 1, 5, 42, },
+	{ 2, 0, 0, 1, 5, 42, },
+	{ 1, 0, 0, 1, 5, 42, },
+	{ 0, 0, 0, 1, 6, 42, },
+	{ 2, 0, 0, 1, 6, 42, },
+	{ 1, 0, 0, 1, 6, 42, },
+	{ 0, 0, 0, 1, 7, 42, },
+	{ 2, 0, 0, 1, 7, 42, },
+	{ 1, 0, 0, 1, 7, 42, },
+	{ 0, 0, 0, 1, 8, 42, },
+	{ 2, 0, 0, 1, 8, 42, },
+	{ 1, 0, 0, 1, 8, 42, },
+	{ 0, 0, 0, 1, 9, 42, },
+	{ 2, 0, 0, 1, 9, 42, },
+	{ 1, 0, 0, 1, 9, 42, },
+	{ 0, 0, 0, 1, 10, 42, },
+	{ 2, 0, 0, 1, 10, 42, },
+	{ 1, 0, 0, 1, 10, 42, },
+	{ 0, 0, 0, 1, 11, 32, },
+	{ 2, 0, 0, 1, 11, 42, },
+	{ 1, 0, 0, 1, 11, 42, },
+	{ 0, 0, 0, 1, 12, 63, },
+	{ 2, 0, 0, 1, 12, 42, },
+	{ 1, 0, 0, 1, 12, 42, },
+	{ 0, 0, 0, 1, 13, 63, },
+	{ 2, 0, 0, 1, 13, 42, },
+	{ 1, 0, 0, 1, 13, 42, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 63, },
+	{ 0, 0, 0, 2, 1, 32, },
+	{ 2, 0, 0, 2, 1, 42, },
+	{ 1, 0, 0, 2, 1, 42, },
+	{ 0, 0, 0, 2, 2, 40, },
+	{ 2, 0, 0, 2, 2, 42, },
+	{ 1, 0, 0, 2, 2, 42, },
+	{ 0, 0, 0, 2, 3, 40, },
+	{ 2, 0, 0, 2, 3, 42, },
+	{ 1, 0, 0, 2, 3, 42, },
+	{ 0, 0, 0, 2, 4, 40, },
+	{ 2, 0, 0, 2, 4, 42, },
+	{ 1, 0, 0, 2, 4, 42, },
+	{ 0, 0, 0, 2, 5, 40, },
+	{ 2, 0, 0, 2, 5, 42, },
+	{ 1, 0, 0, 2, 5, 42, },
+	{ 0, 0, 0, 2, 6, 40, },
+	{ 2, 0, 0, 2, 6, 42, },
+	{ 1, 0, 0, 2, 6, 42, },
+	{ 0, 0, 0, 2, 7, 40, },
+	{ 2, 0, 0, 2, 7, 42, },
+	{ 1, 0, 0, 2, 7, 42, },
+	{ 0, 0, 0, 2, 8, 40, },
+	{ 2, 0, 0, 2, 8, 42, },
+	{ 1, 0, 0, 2, 8, 42, },
+	{ 0, 0, 0, 2, 9, 40, },
+	{ 2, 0, 0, 2, 9, 42, },
+	{ 1, 0, 0, 2, 9, 42, },
+	{ 0, 0, 0, 2, 10, 40, },
+	{ 2, 0, 0, 2, 10, 42, },
+	{ 1, 0, 0, 2, 10, 42, },
+	{ 0, 0, 0, 2, 11, 28, },
+	{ 2, 0, 0, 2, 11, 42, },
+	{ 1, 0, 0, 2, 11, 42, },
+	{ 0, 0, 0, 2, 12, 63, },
+	{ 2, 0, 0, 2, 12, 42, },
+	{ 1, 0, 0, 2, 12, 42, },
+	{ 0, 0, 0, 2, 13, 63, },
+	{ 2, 0, 0, 2, 13, 42, },
+	{ 1, 0, 0, 2, 13, 42, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 63, },
+	{ 0, 0, 0, 3, 1, 32, },
+	{ 2, 0, 0, 3, 1, 40, },
+	{ 1, 0, 0, 3, 1, 40, },
+	{ 0, 0, 0, 3, 2, 40, },
+	{ 2, 0, 0, 3, 2, 40, },
+	{ 1, 0, 0, 3, 2, 40, },
+	{ 0, 0, 0, 3, 3, 40, },
+	{ 2, 0, 0, 3, 3, 40, },
+	{ 1, 0, 0, 3, 3, 40, },
+	{ 0, 0, 0, 3, 4, 40, },
+	{ 2, 0, 0, 3, 4, 40, },
+	{ 1, 0, 0, 3, 4, 40, },
+	{ 0, 0, 0, 3, 5, 40, },
+	{ 2, 0, 0, 3, 5, 40, },
+	{ 1, 0, 0, 3, 5, 40, },
+	{ 0, 0, 0, 3, 6, 40, },
+	{ 2, 0, 0, 3, 6, 40, },
+	{ 1, 0, 0, 3, 6, 40, },
+	{ 0, 0, 0, 3, 7, 40, },
+	{ 2, 0, 0, 3, 7, 40, },
+	{ 1, 0, 0, 3, 7, 40, },
+	{ 0, 0, 0, 3, 8, 40, },
+	{ 2, 0, 0, 3, 8, 40, },
+	{ 1, 0, 0, 3, 8, 40, },
+	{ 0, 0, 0, 3, 9, 40, },
+	{ 2, 0, 0, 3, 9, 40, },
+	{ 1, 0, 0, 3, 9, 40, },
+	{ 0, 0, 0, 3, 10, 40, },
+	{ 2, 0, 0, 3, 10, 40, },
+	{ 1, 0, 0, 3, 10, 40, },
+	{ 0, 0, 0, 3, 11, 28, },
+	{ 2, 0, 0, 3, 11, 40, },
+	{ 1, 0, 0, 3, 11, 40, },
+	{ 0, 0, 0, 3, 12, 63, },
+	{ 2, 0, 0, 3, 12, 40, },
+	{ 1, 0, 0, 3, 12, 40, },
+	{ 0, 0, 0, 3, 13, 63, },
+	{ 2, 0, 0, 3, 13, 40, },
+	{ 1, 0, 0, 3, 13, 40, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 63, },
+	{ 0, 0, 0, 6, 1, 32, },
+	{ 2, 0, 0, 6, 1, 40, },
+	{ 1, 0, 0, 6, 1, 40, },
+	{ 0, 0, 0, 6, 2, 40, },
+	{ 2, 0, 0, 6, 2, 40, },
+	{ 1, 0, 0, 6, 2, 40, },
+	{ 0, 0, 0, 6, 3, 40, },
+	{ 2, 0, 0, 6, 3, 40, },
+	{ 1, 0, 0, 6, 3, 40, },
+	{ 0, 0, 0, 6, 4, 40, },
+	{ 2, 0, 0, 6, 4, 40, },
+	{ 1, 0, 0, 6, 4, 40, },
+	{ 0, 0, 0, 6, 5, 40, },
+	{ 2, 0, 0, 6, 5, 40, },
+	{ 1, 0, 0, 6, 5, 40, },
+	{ 0, 0, 0, 6, 6, 40, },
+	{ 2, 0, 0, 6, 6, 40, },
+	{ 1, 0, 0, 6, 6, 40, },
+	{ 0, 0, 0, 6, 7, 40, },
+	{ 2, 0, 0, 6, 7, 40, },
+	{ 1, 0, 0, 6, 7, 40, },
+	{ 0, 0, 0, 6, 8, 40, },
+	{ 2, 0, 0, 6, 8, 40, },
+	{ 1, 0, 0, 6, 8, 40, },
+	{ 0, 0, 0, 6, 9, 40, },
+	{ 2, 0, 0, 6, 9, 40, },
+	{ 1, 0, 0, 6, 9, 40, },
+	{ 0, 0, 0, 6, 10, 40, },
+	{ 2, 0, 0, 6, 10, 40, },
+	{ 1, 0, 0, 6, 10, 40, },
+	{ 0, 0, 0, 6, 11, 28, },
+	{ 2, 0, 0, 6, 11, 40, },
+	{ 1, 0, 0, 6, 11, 40, },
+	{ 0, 0, 0, 6, 12, 63, },
+	{ 2, 0, 0, 6, 12, 40, },
+	{ 1, 0, 0, 6, 12, 40, },
+	{ 0, 0, 0, 6, 13, 63, },
+	{ 2, 0, 0, 6, 13, 40, },
+	{ 1, 0, 0, 6, 13, 40, },
+	{ 0, 0, 0, 6, 14, 63, },
+	{ 2, 0, 0, 6, 14, 63, },
+	{ 1, 0, 0, 6, 14, 63, },
+	{ 0, 0, 0, 7, 1, 32, },
+	{ 2, 0, 0, 7, 1, 40, },
+	{ 1, 0, 0, 7, 1, 40, },
+	{ 0, 0, 0, 7, 2, 40, },
+	{ 2, 0, 0, 7, 2, 40, },
+	{ 1, 0, 0, 7, 2, 40, },
+	{ 0, 0, 0, 7, 3, 40, },
+	{ 2, 0, 0, 7, 3, 40, },
+	{ 1, 0, 0, 7, 3, 40, },
+	{ 0, 0, 0, 7, 4, 40, },
+	{ 2, 0, 0, 7, 4, 40, },
+	{ 1, 0, 0, 7, 4, 40, },
+	{ 0, 0, 0, 7, 5, 40, },
+	{ 2, 0, 0, 7, 5, 40, },
+	{ 1, 0, 0, 7, 5, 40, },
+	{ 0, 0, 0, 7, 6, 40, },
+	{ 2, 0, 0, 7, 6, 40, },
+	{ 1, 0, 0, 7, 6, 40, },
+	{ 0, 0, 0, 7, 7, 40, },
+	{ 2, 0, 0, 7, 7, 40, },
+	{ 1, 0, 0, 7, 7, 40, },
+	{ 0, 0, 0, 7, 8, 40, },
+	{ 2, 0, 0, 7, 8, 40, },
+	{ 1, 0, 0, 7, 8, 40, },
+	{ 0, 0, 0, 7, 9, 40, },
+	{ 2, 0, 0, 7, 9, 40, },
+	{ 1, 0, 0, 7, 9, 40, },
+	{ 0, 0, 0, 7, 10, 40, },
+	{ 2, 0, 0, 7, 10, 40, },
+	{ 1, 0, 0, 7, 10, 40, },
+	{ 0, 0, 0, 7, 11, 28, },
+	{ 2, 0, 0, 7, 11, 40, },
+	{ 1, 0, 0, 7, 11, 40, },
+	{ 0, 0, 0, 7, 12, 63, },
+	{ 2, 0, 0, 7, 12, 40, },
+	{ 1, 0, 0, 7, 12, 40, },
+	{ 0, 0, 0, 7, 13, 63, },
+	{ 2, 0, 0, 7, 13, 40, },
+	{ 1, 0, 0, 7, 13, 40, },
+	{ 0, 0, 0, 7, 14, 63, },
+	{ 2, 0, 0, 7, 14, 63, },
+	{ 1, 0, 0, 7, 14, 63, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 30, },
+	{ 2, 0, 1, 2, 3, 34, },
+	{ 1, 0, 1, 2, 3, 34, },
+	{ 0, 0, 1, 2, 4, 34, },
+	{ 2, 0, 1, 2, 4, 34, },
+	{ 1, 0, 1, 2, 4, 34, },
+	{ 0, 0, 1, 2, 5, 34, },
+	{ 2, 0, 1, 2, 5, 34, },
+	{ 1, 0, 1, 2, 5, 34, },
+	{ 0, 0, 1, 2, 6, 34, },
+	{ 2, 0, 1, 2, 6, 34, },
+	{ 1, 0, 1, 2, 6, 34, },
+	{ 0, 0, 1, 2, 7, 34, },
+	{ 2, 0, 1, 2, 7, 34, },
+	{ 1, 0, 1, 2, 7, 34, },
+	{ 0, 0, 1, 2, 8, 34, },
+	{ 2, 0, 1, 2, 8, 34, },
+	{ 1, 0, 1, 2, 8, 34, },
+	{ 0, 0, 1, 2, 9, 34, },
+	{ 2, 0, 1, 2, 9, 34, },
+	{ 1, 0, 1, 2, 9, 34, },
+	{ 0, 0, 1, 2, 10, 34, },
+	{ 2, 0, 1, 2, 10, 34, },
+	{ 1, 0, 1, 2, 10, 34, },
+	{ 0, 0, 1, 2, 11, 28, },
+	{ 2, 0, 1, 2, 11, 34, },
+	{ 1, 0, 1, 2, 11, 34, },
+	{ 0, 0, 1, 2, 12, 63, },
+	{ 2, 0, 1, 2, 12, 34, },
+	{ 1, 0, 1, 2, 12, 34, },
+	{ 0, 0, 1, 2, 13, 63, },
+	{ 2, 0, 1, 2, 13, 34, },
+	{ 1, 0, 1, 2, 13, 34, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 30, },
+	{ 2, 0, 1, 3, 3, 34, },
+	{ 1, 0, 1, 3, 3, 34, },
+	{ 0, 0, 1, 3, 4, 34, },
+	{ 2, 0, 1, 3, 4, 34, },
+	{ 1, 0, 1, 3, 4, 34, },
+	{ 0, 0, 1, 3, 5, 34, },
+	{ 2, 0, 1, 3, 5, 34, },
+	{ 1, 0, 1, 3, 5, 34, },
+	{ 0, 0, 1, 3, 6, 34, },
+	{ 2, 0, 1, 3, 6, 34, },
+	{ 1, 0, 1, 3, 6, 34, },
+	{ 0, 0, 1, 3, 7, 34, },
+	{ 2, 0, 1, 3, 7, 34, },
+	{ 1, 0, 1, 3, 7, 34, },
+	{ 0, 0, 1, 3, 8, 34, },
+	{ 2, 0, 1, 3, 8, 34, },
+	{ 1, 0, 1, 3, 8, 34, },
+	{ 0, 0, 1, 3, 9, 34, },
+	{ 2, 0, 1, 3, 9, 34, },
+	{ 1, 0, 1, 3, 9, 34, },
+	{ 0, 0, 1, 3, 10, 34, },
+	{ 2, 0, 1, 3, 10, 34, },
+	{ 1, 0, 1, 3, 10, 34, },
+	{ 0, 0, 1, 3, 11, 28, },
+	{ 2, 0, 1, 3, 11, 34, },
+	{ 1, 0, 1, 3, 11, 34, },
+	{ 0, 0, 1, 3, 12, 63, },
+	{ 2, 0, 1, 3, 12, 34, },
+	{ 1, 0, 1, 3, 12, 34, },
+	{ 0, 0, 1, 3, 13, 63, },
+	{ 2, 0, 1, 3, 13, 34, },
+	{ 1, 0, 1, 3, 13, 34, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 0, 1, 6, 1, 63, },
+	{ 2, 0, 1, 6, 1, 63, },
+	{ 1, 0, 1, 6, 1, 63, },
+	{ 0, 0, 1, 6, 2, 63, },
+	{ 2, 0, 1, 6, 2, 63, },
+	{ 1, 0, 1, 6, 2, 63, },
+	{ 0, 0, 1, 6, 3, 30, },
+	{ 2, 0, 1, 6, 3, 34, },
+	{ 1, 0, 1, 6, 3, 34, },
+	{ 0, 0, 1, 6, 4, 34, },
+	{ 2, 0, 1, 6, 4, 34, },
+	{ 1, 0, 1, 6, 4, 34, },
+	{ 0, 0, 1, 6, 5, 34, },
+	{ 2, 0, 1, 6, 5, 34, },
+	{ 1, 0, 1, 6, 5, 34, },
+	{ 0, 0, 1, 6, 6, 34, },
+	{ 2, 0, 1, 6, 6, 34, },
+	{ 1, 0, 1, 6, 6, 34, },
+	{ 0, 0, 1, 6, 7, 34, },
+	{ 2, 0, 1, 6, 7, 34, },
+	{ 1, 0, 1, 6, 7, 34, },
+	{ 0, 0, 1, 6, 8, 34, },
+	{ 2, 0, 1, 6, 8, 34, },
+	{ 1, 0, 1, 6, 8, 34, },
+	{ 0, 0, 1, 6, 9, 34, },
+	{ 2, 0, 1, 6, 9, 34, },
+	{ 1, 0, 1, 6, 9, 34, },
+	{ 0, 0, 1, 6, 10, 34, },
+	{ 2, 0, 1, 6, 10, 34, },
+	{ 1, 0, 1, 6, 10, 34, },
+	{ 0, 0, 1, 6, 11, 28, },
+	{ 2, 0, 1, 6, 11, 34, },
+	{ 1, 0, 1, 6, 11, 34, },
+	{ 0, 0, 1, 6, 12, 63, },
+	{ 2, 0, 1, 6, 12, 34, },
+	{ 1, 0, 1, 6, 12, 34, },
+	{ 0, 0, 1, 6, 13, 63, },
+	{ 2, 0, 1, 6, 13, 34, },
+	{ 1, 0, 1, 6, 13, 34, },
+	{ 0, 0, 1, 6, 14, 63, },
+	{ 2, 0, 1, 6, 14, 63, },
+	{ 1, 0, 1, 6, 14, 63, },
+	{ 0, 0, 1, 7, 1, 63, },
+	{ 2, 0, 1, 7, 1, 63, },
+	{ 1, 0, 1, 7, 1, 63, },
+	{ 0, 0, 1, 7, 2, 63, },
+	{ 2, 0, 1, 7, 2, 63, },
+	{ 1, 0, 1, 7, 2, 63, },
+	{ 0, 0, 1, 7, 3, 30, },
+	{ 2, 0, 1, 7, 3, 34, },
+	{ 1, 0, 1, 7, 3, 34, },
+	{ 0, 0, 1, 7, 4, 34, },
+	{ 2, 0, 1, 7, 4, 34, },
+	{ 1, 0, 1, 7, 4, 34, },
+	{ 0, 0, 1, 7, 5, 34, },
+	{ 2, 0, 1, 7, 5, 34, },
+	{ 1, 0, 1, 7, 5, 34, },
+	{ 0, 0, 1, 7, 6, 34, },
+	{ 2, 0, 1, 7, 6, 34, },
+	{ 1, 0, 1, 7, 6, 34, },
+	{ 0, 0, 1, 7, 7, 34, },
+	{ 2, 0, 1, 7, 7, 34, },
+	{ 1, 0, 1, 7, 7, 34, },
+	{ 0, 0, 1, 7, 8, 34, },
+	{ 2, 0, 1, 7, 8, 34, },
+	{ 1, 0, 1, 7, 8, 34, },
+	{ 0, 0, 1, 7, 9, 34, },
+	{ 2, 0, 1, 7, 9, 34, },
+	{ 1, 0, 1, 7, 9, 34, },
+	{ 0, 0, 1, 7, 10, 34, },
+	{ 2, 0, 1, 7, 10, 34, },
+	{ 1, 0, 1, 7, 10, 34, },
+	{ 0, 0, 1, 7, 11, 28, },
+	{ 2, 0, 1, 7, 11, 34, },
+	{ 1, 0, 1, 7, 11, 34, },
+	{ 0, 0, 1, 7, 12, 63, },
+	{ 2, 0, 1, 7, 12, 34, },
+	{ 1, 0, 1, 7, 12, 34, },
+	{ 0, 0, 1, 7, 13, 63, },
+	{ 2, 0, 1, 7, 13, 34, },
+	{ 1, 0, 1, 7, 13, 34, },
+	{ 0, 0, 1, 7, 14, 63, },
+	{ 2, 0, 1, 7, 14, 63, },
+	{ 1, 0, 1, 7, 14, 63, },
+	{ 0, 1, 0, 1, 36, 42, },
+	{ 2, 1, 0, 1, 36, 42, },
+	{ 1, 1, 0, 1, 36, 42, },
+	{ 0, 1, 0, 1, 40, 42, },
+	{ 2, 1, 0, 1, 40, 42, },
+	{ 1, 1, 0, 1, 40, 42, },
+	{ 0, 1, 0, 1, 44, 42, },
+	{ 2, 1, 0, 1, 44, 42, },
+	{ 1, 1, 0, 1, 44, 42, },
+	{ 0, 1, 0, 1, 48, 42, },
+	{ 2, 1, 0, 1, 48, 42, },
+	{ 1, 1, 0, 1, 48, 42, },
+	{ 0, 1, 0, 1, 52, 42, },
+	{ 2, 1, 0, 1, 52, 42, },
+	{ 1, 1, 0, 1, 52, 42, },
+	{ 0, 1, 0, 1, 56, 42, },
+	{ 2, 1, 0, 1, 56, 42, },
+	{ 1, 1, 0, 1, 56, 42, },
+	{ 0, 1, 0, 1, 60, 42, },
+	{ 2, 1, 0, 1, 60, 42, },
+	{ 1, 1, 0, 1, 60, 42, },
+	{ 0, 1, 0, 1, 64, 42, },
+	{ 2, 1, 0, 1, 64, 42, },
+	{ 1, 1, 0, 1, 64, 42, },
+	{ 0, 1, 0, 1, 100, 42, },
+	{ 2, 1, 0, 1, 100, 42, },
+	{ 1, 1, 0, 1, 100, 42, },
+	{ 0, 1, 0, 1, 104, 42, },
+	{ 2, 1, 0, 1, 104, 42, },
+	{ 1, 1, 0, 1, 104, 42, },
+	{ 0, 1, 0, 1, 108, 42, },
+	{ 2, 1, 0, 1, 108, 42, },
+	{ 1, 1, 0, 1, 108, 42, },
+	{ 0, 1, 0, 1, 112, 42, },
+	{ 2, 1, 0, 1, 112, 42, },
+	{ 1, 1, 0, 1, 112, 42, },
+	{ 0, 1, 0, 1, 116, 42, },
+	{ 2, 1, 0, 1, 116, 42, },
+	{ 1, 1, 0, 1, 116, 42, },
+	{ 0, 1, 0, 1, 120, 42, },
+	{ 2, 1, 0, 1, 120, 42, },
+	{ 1, 1, 0, 1, 120, 42, },
+	{ 0, 1, 0, 1, 124, 42, },
+	{ 2, 1, 0, 1, 124, 42, },
+	{ 1, 1, 0, 1, 124, 42, },
+	{ 0, 1, 0, 1, 128, 42, },
+	{ 2, 1, 0, 1, 128, 42, },
+	{ 1, 1, 0, 1, 128, 42, },
+	{ 0, 1, 0, 1, 132, 42, },
+	{ 2, 1, 0, 1, 132, 42, },
+	{ 1, 1, 0, 1, 132, 42, },
+	{ 0, 1, 0, 1, 136, 42, },
+	{ 2, 1, 0, 1, 136, 42, },
+	{ 1, 1, 0, 1, 136, 42, },
+	{ 0, 1, 0, 1, 140, 40, },
+	{ 2, 1, 0, 1, 140, 40, },
+	{ 1, 1, 0, 1, 140, 40, },
+	{ 0, 1, 0, 1, 149, 44, },
+	{ 2, 1, 0, 1, 149, 44, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 44, },
+	{ 2, 1, 0, 1, 153, 44, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 44, },
+	{ 2, 1, 0, 1, 157, 44, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 44, },
+	{ 2, 1, 0, 1, 161, 44, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 44, },
+	{ 2, 1, 0, 1, 165, 44, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 32, },
+	{ 2, 1, 0, 2, 36, 32, },
+	{ 1, 1, 0, 2, 36, 32, },
+	{ 0, 1, 0, 2, 40, 32, },
+	{ 2, 1, 0, 2, 40, 32, },
+	{ 1, 1, 0, 2, 40, 32, },
+	{ 0, 1, 0, 2, 44, 32, },
+	{ 2, 1, 0, 2, 44, 32, },
+	{ 1, 1, 0, 2, 44, 32, },
+	{ 0, 1, 0, 2, 48, 36, },
+	{ 2, 1, 0, 2, 48, 36, },
+	{ 1, 1, 0, 2, 48, 36, },
+	{ 0, 1, 0, 2, 52, 36, },
+	{ 2, 1, 0, 2, 52, 36, },
+	{ 1, 1, 0, 2, 52, 36, },
+	{ 0, 1, 0, 2, 56, 32, },
+	{ 2, 1, 0, 2, 56, 32, },
+	{ 1, 1, 0, 2, 56, 32, },
+	{ 0, 1, 0, 2, 60, 32, },
+	{ 2, 1, 0, 2, 60, 32, },
+	{ 1, 1, 0, 2, 60, 32, },
+	{ 0, 1, 0, 2, 64, 32, },
+	{ 2, 1, 0, 2, 64, 32, },
+	{ 1, 1, 0, 2, 64, 32, },
+	{ 0, 1, 0, 2, 100, 32, },
+	{ 2, 1, 0, 2, 100, 32, },
+	{ 1, 1, 0, 2, 100, 32, },
+	{ 0, 1, 0, 2, 104, 32, },
+	{ 2, 1, 0, 2, 104, 32, },
+	{ 1, 1, 0, 2, 104, 32, },
+	{ 0, 1, 0, 2, 108, 32, },
+	{ 2, 1, 0, 2, 108, 32, },
+	{ 1, 1, 0, 2, 108, 32, },
+	{ 0, 1, 0, 2, 112, 32, },
+	{ 2, 1, 0, 2, 112, 32, },
+	{ 1, 1, 0, 2, 112, 32, },
+	{ 0, 1, 0, 2, 116, 32, },
+	{ 2, 1, 0, 2, 116, 32, },
+	{ 1, 1, 0, 2, 116, 32, },
+	{ 0, 1, 0, 2, 120, 32, },
+	{ 2, 1, 0, 2, 120, 32, },
+	{ 1, 1, 0, 2, 120, 32, },
+	{ 0, 1, 0, 2, 124, 32, },
+	{ 2, 1, 0, 2, 124, 32, },
+	{ 1, 1, 0, 2, 124, 32, },
+	{ 0, 1, 0, 2, 128, 32, },
+	{ 2, 1, 0, 2, 128, 32, },
+	{ 1, 1, 0, 2, 128, 32, },
+	{ 0, 1, 0, 2, 132, 32, },
+	{ 2, 1, 0, 2, 132, 32, },
+	{ 1, 1, 0, 2, 132, 32, },
+	{ 0, 1, 0, 2, 136, 32, },
+	{ 2, 1, 0, 2, 136, 32, },
+	{ 1, 1, 0, 2, 136, 32, },
+	{ 0, 1, 0, 2, 140, 30, },
+	{ 2, 1, 0, 2, 140, 30, },
+	{ 1, 1, 0, 2, 140, 30, },
+	{ 0, 1, 0, 2, 149, 40, },
+	{ 2, 1, 0, 2, 149, 40, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 40, },
+	{ 2, 1, 0, 2, 153, 40, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 40, },
+	{ 2, 1, 0, 2, 157, 40, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 40, },
+	{ 2, 1, 0, 2, 161, 40, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 42, },
+	{ 2, 1, 0, 2, 165, 42, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 32, },
+	{ 2, 1, 0, 3, 36, 32, },
+	{ 1, 1, 0, 3, 36, 32, },
+	{ 0, 1, 0, 3, 40, 32, },
+	{ 2, 1, 0, 3, 40, 32, },
+	{ 1, 1, 0, 3, 40, 32, },
+	{ 0, 1, 0, 3, 44, 32, },
+	{ 2, 1, 0, 3, 44, 32, },
+	{ 1, 1, 0, 3, 44, 32, },
+	{ 0, 1, 0, 3, 48, 36, },
+	{ 2, 1, 0, 3, 48, 36, },
+	{ 1, 1, 0, 3, 48, 36, },
+	{ 0, 1, 0, 3, 52, 36, },
+	{ 2, 1, 0, 3, 52, 36, },
+	{ 1, 1, 0, 3, 52, 36, },
+	{ 0, 1, 0, 3, 56, 32, },
+	{ 2, 1, 0, 3, 56, 32, },
+	{ 1, 1, 0, 3, 56, 32, },
+	{ 0, 1, 0, 3, 60, 32, },
+	{ 2, 1, 0, 3, 60, 32, },
+	{ 1, 1, 0, 3, 60, 32, },
+	{ 0, 1, 0, 3, 64, 32, },
+	{ 2, 1, 0, 3, 64, 32, },
+	{ 1, 1, 0, 3, 64, 32, },
+	{ 0, 1, 0, 3, 100, 32, },
+	{ 2, 1, 0, 3, 100, 32, },
+	{ 1, 1, 0, 3, 100, 32, },
+	{ 0, 1, 0, 3, 104, 32, },
+	{ 2, 1, 0, 3, 104, 32, },
+	{ 1, 1, 0, 3, 104, 32, },
+	{ 0, 1, 0, 3, 108, 32, },
+	{ 2, 1, 0, 3, 108, 32, },
+	{ 1, 1, 0, 3, 108, 32, },
+	{ 0, 1, 0, 3, 112, 32, },
+	{ 2, 1, 0, 3, 112, 32, },
+	{ 1, 1, 0, 3, 112, 32, },
+	{ 0, 1, 0, 3, 116, 32, },
+	{ 2, 1, 0, 3, 116, 32, },
+	{ 1, 1, 0, 3, 116, 32, },
+	{ 0, 1, 0, 3, 120, 32, },
+	{ 2, 1, 0, 3, 120, 32, },
+	{ 1, 1, 0, 3, 120, 32, },
+	{ 0, 1, 0, 3, 124, 32, },
+	{ 2, 1, 0, 3, 124, 32, },
+	{ 1, 1, 0, 3, 124, 32, },
+	{ 0, 1, 0, 3, 128, 32, },
+	{ 2, 1, 0, 3, 128, 32, },
+	{ 1, 1, 0, 3, 128, 32, },
+	{ 0, 1, 0, 3, 132, 32, },
+	{ 2, 1, 0, 3, 132, 32, },
+	{ 1, 1, 0, 3, 132, 32, },
+	{ 0, 1, 0, 3, 136, 32, },
+	{ 2, 1, 0, 3, 136, 32, },
+	{ 1, 1, 0, 3, 136, 32, },
+	{ 0, 1, 0, 3, 140, 30, },
+	{ 2, 1, 0, 3, 140, 30, },
+	{ 1, 1, 0, 3, 140, 30, },
+	{ 0, 1, 0, 3, 149, 40, },
+	{ 2, 1, 0, 3, 149, 40, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 40, },
+	{ 2, 1, 0, 3, 153, 40, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 40, },
+	{ 2, 1, 0, 3, 157, 40, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 40, },
+	{ 2, 1, 0, 3, 161, 40, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 42, },
+	{ 2, 1, 0, 3, 165, 42, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 0, 6, 36, 32, },
+	{ 2, 1, 0, 6, 36, 32, },
+	{ 1, 1, 0, 6, 36, 32, },
+	{ 0, 1, 0, 6, 40, 32, },
+	{ 2, 1, 0, 6, 40, 32, },
+	{ 1, 1, 0, 6, 40, 32, },
+	{ 0, 1, 0, 6, 44, 32, },
+	{ 2, 1, 0, 6, 44, 32, },
+	{ 1, 1, 0, 6, 44, 32, },
+	{ 0, 1, 0, 6, 48, 36, },
+	{ 2, 1, 0, 6, 48, 36, },
+	{ 1, 1, 0, 6, 48, 36, },
+	{ 0, 1, 0, 6, 52, 36, },
+	{ 2, 1, 0, 6, 52, 36, },
+	{ 1, 1, 0, 6, 52, 36, },
+	{ 0, 1, 0, 6, 56, 32, },
+	{ 2, 1, 0, 6, 56, 32, },
+	{ 1, 1, 0, 6, 56, 32, },
+	{ 0, 1, 0, 6, 60, 32, },
+	{ 2, 1, 0, 6, 60, 32, },
+	{ 1, 1, 0, 6, 60, 32, },
+	{ 0, 1, 0, 6, 64, 32, },
+	{ 2, 1, 0, 6, 64, 32, },
+	{ 1, 1, 0, 6, 64, 32, },
+	{ 0, 1, 0, 6, 100, 32, },
+	{ 2, 1, 0, 6, 100, 32, },
+	{ 1, 1, 0, 6, 100, 32, },
+	{ 0, 1, 0, 6, 104, 32, },
+	{ 2, 1, 0, 6, 104, 32, },
+	{ 1, 1, 0, 6, 104, 32, },
+	{ 0, 1, 0, 6, 108, 32, },
+	{ 2, 1, 0, 6, 108, 32, },
+	{ 1, 1, 0, 6, 108, 32, },
+	{ 0, 1, 0, 6, 112, 32, },
+	{ 2, 1, 0, 6, 112, 32, },
+	{ 1, 1, 0, 6, 112, 32, },
+	{ 0, 1, 0, 6, 116, 32, },
+	{ 2, 1, 0, 6, 116, 32, },
+	{ 1, 1, 0, 6, 116, 32, },
+	{ 0, 1, 0, 6, 120, 32, },
+	{ 2, 1, 0, 6, 120, 32, },
+	{ 1, 1, 0, 6, 120, 32, },
+	{ 0, 1, 0, 6, 124, 32, },
+	{ 2, 1, 0, 6, 124, 32, },
+	{ 1, 1, 0, 6, 124, 32, },
+	{ 0, 1, 0, 6, 128, 32, },
+	{ 2, 1, 0, 6, 128, 32, },
+	{ 1, 1, 0, 6, 128, 32, },
+	{ 0, 1, 0, 6, 132, 32, },
+	{ 2, 1, 0, 6, 132, 32, },
+	{ 1, 1, 0, 6, 132, 32, },
+	{ 0, 1, 0, 6, 136, 32, },
+	{ 2, 1, 0, 6, 136, 32, },
+	{ 1, 1, 0, 6, 136, 32, },
+	{ 0, 1, 0, 6, 140, 30, },
+	{ 2, 1, 0, 6, 140, 30, },
+	{ 1, 1, 0, 6, 140, 30, },
+	{ 0, 1, 0, 6, 149, 40, },
+	{ 2, 1, 0, 6, 149, 40, },
+	{ 1, 1, 0, 6, 149, 63, },
+	{ 0, 1, 0, 6, 153, 40, },
+	{ 2, 1, 0, 6, 153, 40, },
+	{ 1, 1, 0, 6, 153, 63, },
+	{ 0, 1, 0, 6, 157, 40, },
+	{ 2, 1, 0, 6, 157, 40, },
+	{ 1, 1, 0, 6, 157, 63, },
+	{ 0, 1, 0, 6, 161, 40, },
+	{ 2, 1, 0, 6, 161, 40, },
+	{ 1, 1, 0, 6, 161, 63, },
+	{ 0, 1, 0, 6, 165, 42, },
+	{ 2, 1, 0, 6, 165, 42, },
+	{ 1, 1, 0, 6, 165, 63, },
+	{ 0, 1, 0, 7, 36, 32, },
+	{ 2, 1, 0, 7, 36, 32, },
+	{ 1, 1, 0, 7, 36, 32, },
+	{ 0, 1, 0, 7, 40, 32, },
+	{ 2, 1, 0, 7, 40, 32, },
+	{ 1, 1, 0, 7, 40, 32, },
+	{ 0, 1, 0, 7, 44, 32, },
+	{ 2, 1, 0, 7, 44, 32, },
+	{ 1, 1, 0, 7, 44, 32, },
+	{ 0, 1, 0, 7, 48, 36, },
+	{ 2, 1, 0, 7, 48, 36, },
+	{ 1, 1, 0, 7, 48, 36, },
+	{ 0, 1, 0, 7, 52, 36, },
+	{ 2, 1, 0, 7, 52, 36, },
+	{ 1, 1, 0, 7, 52, 36, },
+	{ 0, 1, 0, 7, 56, 32, },
+	{ 2, 1, 0, 7, 56, 32, },
+	{ 1, 1, 0, 7, 56, 32, },
+	{ 0, 1, 0, 7, 60, 32, },
+	{ 2, 1, 0, 7, 60, 32, },
+	{ 1, 1, 0, 7, 60, 32, },
+	{ 0, 1, 0, 7, 64, 32, },
+	{ 2, 1, 0, 7, 64, 32, },
+	{ 1, 1, 0, 7, 64, 32, },
+	{ 0, 1, 0, 7, 100, 32, },
+	{ 2, 1, 0, 7, 100, 32, },
+	{ 1, 1, 0, 7, 100, 32, },
+	{ 0, 1, 0, 7, 104, 32, },
+	{ 2, 1, 0, 7, 104, 32, },
+	{ 1, 1, 0, 7, 104, 32, },
+	{ 0, 1, 0, 7, 108, 32, },
+	{ 2, 1, 0, 7, 108, 32, },
+	{ 1, 1, 0, 7, 108, 32, },
+	{ 0, 1, 0, 7, 112, 32, },
+	{ 2, 1, 0, 7, 112, 32, },
+	{ 1, 1, 0, 7, 112, 32, },
+	{ 0, 1, 0, 7, 116, 32, },
+	{ 2, 1, 0, 7, 116, 32, },
+	{ 1, 1, 0, 7, 116, 32, },
+	{ 0, 1, 0, 7, 120, 32, },
+	{ 2, 1, 0, 7, 120, 32, },
+	{ 1, 1, 0, 7, 120, 32, },
+	{ 0, 1, 0, 7, 124, 32, },
+	{ 2, 1, 0, 7, 124, 32, },
+	{ 1, 1, 0, 7, 124, 32, },
+	{ 0, 1, 0, 7, 128, 32, },
+	{ 2, 1, 0, 7, 128, 32, },
+	{ 1, 1, 0, 7, 128, 32, },
+	{ 0, 1, 0, 7, 132, 32, },
+	{ 2, 1, 0, 7, 132, 32, },
+	{ 1, 1, 0, 7, 132, 32, },
+	{ 0, 1, 0, 7, 136, 32, },
+	{ 2, 1, 0, 7, 136, 32, },
+	{ 1, 1, 0, 7, 136, 32, },
+	{ 0, 1, 0, 7, 140, 30, },
+	{ 2, 1, 0, 7, 140, 30, },
+	{ 1, 1, 0, 7, 140, 30, },
+	{ 0, 1, 0, 7, 149, 40, },
+	{ 2, 1, 0, 7, 149, 40, },
+	{ 1, 1, 0, 7, 149, 63, },
+	{ 0, 1, 0, 7, 153, 40, },
+	{ 2, 1, 0, 7, 153, 40, },
+	{ 1, 1, 0, 7, 153, 63, },
+	{ 0, 1, 0, 7, 157, 40, },
+	{ 2, 1, 0, 7, 157, 40, },
+	{ 1, 1, 0, 7, 157, 63, },
+	{ 0, 1, 0, 7, 161, 40, },
+	{ 2, 1, 0, 7, 161, 40, },
+	{ 1, 1, 0, 7, 161, 63, },
+	{ 0, 1, 0, 7, 165, 42, },
+	{ 2, 1, 0, 7, 165, 42, },
+	{ 1, 1, 0, 7, 165, 63, },
+	{ 0, 1, 1, 2, 38, 32, },
+	{ 2, 1, 1, 2, 38, 32, },
+	{ 1, 1, 1, 2, 38, 32, },
+	{ 0, 1, 1, 2, 46, 36, },
+	{ 2, 1, 1, 2, 46, 36, },
+	{ 1, 1, 1, 2, 46, 36, },
+	{ 0, 1, 1, 2, 54, 36, },
+	{ 2, 1, 1, 2, 54, 36, },
+	{ 1, 1, 1, 2, 54, 36, },
+	{ 0, 1, 1, 2, 62, 32, },
+	{ 2, 1, 1, 2, 62, 32, },
+	{ 1, 1, 1, 2, 62, 32, },
+	{ 0, 1, 1, 2, 102, 30, },
+	{ 2, 1, 1, 2, 102, 30, },
+	{ 1, 1, 1, 2, 102, 30, },
+	{ 0, 1, 1, 2, 110, 32, },
+	{ 2, 1, 1, 2, 110, 32, },
+	{ 1, 1, 1, 2, 110, 32, },
+	{ 0, 1, 1, 2, 118, 32, },
+	{ 2, 1, 1, 2, 118, 32, },
+	{ 1, 1, 1, 2, 118, 32, },
+	{ 0, 1, 1, 2, 126, 32, },
+	{ 2, 1, 1, 2, 126, 32, },
+	{ 1, 1, 1, 2, 126, 32, },
+	{ 0, 1, 1, 2, 134, 36, },
+	{ 2, 1, 1, 2, 134, 36, },
+	{ 1, 1, 1, 2, 134, 36, },
+	{ 0, 1, 1, 2, 151, 36, },
+	{ 2, 1, 1, 2, 151, 36, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 40, },
+	{ 2, 1, 1, 2, 159, 40, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 32, },
+	{ 2, 1, 1, 3, 38, 32, },
+	{ 1, 1, 1, 3, 38, 32, },
+	{ 0, 1, 1, 3, 46, 36, },
+	{ 2, 1, 1, 3, 46, 36, },
+	{ 1, 1, 1, 3, 46, 36, },
+	{ 0, 1, 1, 3, 54, 36, },
+	{ 2, 1, 1, 3, 54, 36, },
+	{ 1, 1, 1, 3, 54, 36, },
+	{ 0, 1, 1, 3, 62, 32, },
+	{ 2, 1, 1, 3, 62, 32, },
+	{ 1, 1, 1, 3, 62, 32, },
+	{ 0, 1, 1, 3, 102, 30, },
+	{ 2, 1, 1, 3, 102, 30, },
+	{ 1, 1, 1, 3, 102, 30, },
+	{ 0, 1, 1, 3, 110, 32, },
+	{ 2, 1, 1, 3, 110, 32, },
+	{ 1, 1, 1, 3, 110, 32, },
+	{ 0, 1, 1, 3, 118, 32, },
+	{ 2, 1, 1, 3, 118, 32, },
+	{ 1, 1, 1, 3, 118, 32, },
+	{ 0, 1, 1, 3, 126, 32, },
+	{ 2, 1, 1, 3, 126, 32, },
+	{ 1, 1, 1, 3, 126, 32, },
+	{ 0, 1, 1, 3, 134, 36, },
+	{ 2, 1, 1, 3, 134, 36, },
+	{ 1, 1, 1, 3, 134, 36, },
+	{ 0, 1, 1, 3, 151, 36, },
+	{ 2, 1, 1, 3, 151, 36, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 40, },
+	{ 2, 1, 1, 3, 159, 40, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 1, 6, 38, 32, },
+	{ 2, 1, 1, 6, 38, 32, },
+	{ 1, 1, 1, 6, 38, 32, },
+	{ 0, 1, 1, 6, 46, 36, },
+	{ 2, 1, 1, 6, 46, 36, },
+	{ 1, 1, 1, 6, 46, 36, },
+	{ 0, 1, 1, 6, 54, 36, },
+	{ 2, 1, 1, 6, 54, 36, },
+	{ 1, 1, 1, 6, 54, 36, },
+	{ 0, 1, 1, 6, 62, 32, },
+	{ 2, 1, 1, 6, 62, 32, },
+	{ 1, 1, 1, 6, 62, 32, },
+	{ 0, 1, 1, 6, 102, 30, },
+	{ 2, 1, 1, 6, 102, 30, },
+	{ 1, 1, 1, 6, 102, 30, },
+	{ 0, 1, 1, 6, 110, 32, },
+	{ 2, 1, 1, 6, 110, 32, },
+	{ 1, 1, 1, 6, 110, 32, },
+	{ 0, 1, 1, 6, 118, 32, },
+	{ 2, 1, 1, 6, 118, 32, },
+	{ 1, 1, 1, 6, 118, 32, },
+	{ 0, 1, 1, 6, 126, 32, },
+	{ 2, 1, 1, 6, 126, 32, },
+	{ 1, 1, 1, 6, 126, 32, },
+	{ 0, 1, 1, 6, 134, 36, },
+	{ 2, 1, 1, 6, 134, 36, },
+	{ 1, 1, 1, 6, 134, 36, },
+	{ 0, 1, 1, 6, 151, 36, },
+	{ 2, 1, 1, 6, 151, 36, },
+	{ 1, 1, 1, 6, 151, 63, },
+	{ 0, 1, 1, 6, 159, 40, },
+	{ 2, 1, 1, 6, 159, 40, },
+	{ 1, 1, 1, 6, 159, 63, },
+	{ 0, 1, 1, 7, 38, 32, },
+	{ 2, 1, 1, 7, 38, 32, },
+	{ 1, 1, 1, 7, 38, 32, },
+	{ 0, 1, 1, 7, 46, 36, },
+	{ 2, 1, 1, 7, 46, 36, },
+	{ 1, 1, 1, 7, 46, 36, },
+	{ 0, 1, 1, 7, 54, 36, },
+	{ 2, 1, 1, 7, 54, 36, },
+	{ 1, 1, 1, 7, 54, 36, },
+	{ 0, 1, 1, 7, 62, 32, },
+	{ 2, 1, 1, 7, 62, 32, },
+	{ 1, 1, 1, 7, 62, 32, },
+	{ 0, 1, 1, 7, 102, 30, },
+	{ 2, 1, 1, 7, 102, 30, },
+	{ 1, 1, 1, 7, 102, 30, },
+	{ 0, 1, 1, 7, 110, 32, },
+	{ 2, 1, 1, 7, 110, 32, },
+	{ 1, 1, 1, 7, 110, 32, },
+	{ 0, 1, 1, 7, 118, 32, },
+	{ 2, 1, 1, 7, 118, 32, },
+	{ 1, 1, 1, 7, 118, 32, },
+	{ 0, 1, 1, 7, 126, 32, },
+	{ 2, 1, 1, 7, 126, 32, },
+	{ 1, 1, 1, 7, 126, 32, },
+	{ 0, 1, 1, 7, 134, 36, },
+	{ 2, 1, 1, 7, 134, 36, },
+	{ 1, 1, 1, 7, 134, 36, },
+	{ 0, 1, 1, 7, 151, 36, },
+	{ 2, 1, 1, 7, 151, 36, },
+	{ 1, 1, 1, 7, 151, 63, },
+	{ 0, 1, 1, 7, 159, 40, },
+	{ 2, 1, 1, 7, 159, 40, },
+	{ 1, 1, 1, 7, 159, 63, },
+	{ 0, 1, 2, 4, 42, 34, },
+	{ 2, 1, 2, 4, 42, 34, },
+	{ 1, 1, 2, 4, 42, 34, },
+	{ 0, 1, 2, 4, 58, 34, },
+	{ 2, 1, 2, 4, 58, 34, },
+	{ 1, 1, 2, 4, 58, 34, },
+	{ 0, 1, 2, 4, 106, 32, },
+	{ 2, 1, 2, 4, 106, 32, },
+	{ 1, 1, 2, 4, 106, 32, },
+	{ 0, 1, 2, 4, 122, 34, },
+	{ 2, 1, 2, 4, 122, 34, },
+	{ 1, 1, 2, 4, 122, 34, },
+	{ 0, 1, 2, 4, 155, 34, },
+	{ 2, 1, 2, 4, 155, 34, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 34, },
+	{ 2, 1, 2, 5, 42, 34, },
+	{ 1, 1, 2, 5, 42, 34, },
+	{ 0, 1, 2, 5, 58, 34, },
+	{ 2, 1, 2, 5, 58, 34, },
+	{ 1, 1, 2, 5, 58, 34, },
+	{ 0, 1, 2, 5, 106, 32, },
+	{ 2, 1, 2, 5, 106, 32, },
+	{ 1, 1, 2, 5, 106, 32, },
+	{ 0, 1, 2, 5, 122, 34, },
+	{ 2, 1, 2, 5, 122, 34, },
+	{ 1, 1, 2, 5, 122, 34, },
+	{ 0, 1, 2, 5, 155, 34, },
+	{ 2, 1, 2, 5, 155, 34, },
+	{ 1, 1, 2, 5, 155, 63, },
+	{ 0, 1, 2, 8, 42, 34, },
+	{ 2, 1, 2, 8, 42, 34, },
+	{ 1, 1, 2, 8, 42, 34, },
+	{ 0, 1, 2, 8, 58, 34, },
+	{ 2, 1, 2, 8, 58, 34, },
+	{ 1, 1, 2, 8, 58, 34, },
+	{ 0, 1, 2, 8, 106, 32, },
+	{ 2, 1, 2, 8, 106, 32, },
+	{ 1, 1, 2, 8, 106, 32, },
+	{ 0, 1, 2, 8, 122, 34, },
+	{ 2, 1, 2, 8, 122, 34, },
+	{ 1, 1, 2, 8, 122, 34, },
+	{ 0, 1, 2, 8, 155, 34, },
+	{ 2, 1, 2, 8, 155, 34, },
+	{ 1, 1, 2, 8, 155, 63, },
+	{ 0, 1, 2, 9, 42, 34, },
+	{ 2, 1, 2, 9, 42, 34, },
+	{ 1, 1, 2, 9, 42, 34, },
+	{ 0, 1, 2, 9, 58, 34, },
+	{ 2, 1, 2, 9, 58, 34, },
+	{ 1, 1, 2, 9, 58, 34, },
+	{ 0, 1, 2, 9, 106, 32, },
+	{ 2, 1, 2, 9, 106, 32, },
+	{ 1, 1, 2, 9, 106, 32, },
+	{ 0, 1, 2, 9, 122, 34, },
+	{ 2, 1, 2, 9, 122, 34, },
+	{ 1, 1, 2, 9, 122, 34, },
+	{ 0, 1, 2, 9, 155, 34, },
+	{ 2, 1, 2, 9, 155, 34, },
+	{ 1, 1, 2, 9, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8814a_txpwr_lmt_type2);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8814a_txpwr_lmt_type3[] = {
+	{ 0, 0, 0, 0, 1, 46, },
+	{ 2, 0, 0, 0, 1, 40, },
+	{ 1, 0, 0, 0, 1, 40, },
+	{ 0, 0, 0, 0, 2, 46, },
+	{ 2, 0, 0, 0, 2, 40, },
+	{ 1, 0, 0, 0, 2, 40, },
+	{ 0, 0, 0, 0, 3, 46, },
+	{ 2, 0, 0, 0, 3, 40, },
+	{ 1, 0, 0, 0, 3, 40, },
+	{ 0, 0, 0, 0, 4, 46, },
+	{ 2, 0, 0, 0, 4, 40, },
+	{ 1, 0, 0, 0, 4, 40, },
+	{ 0, 0, 0, 0, 5, 46, },
+	{ 2, 0, 0, 0, 5, 40, },
+	{ 1, 0, 0, 0, 5, 40, },
+	{ 0, 0, 0, 0, 6, 46, },
+	{ 2, 0, 0, 0, 6, 40, },
+	{ 1, 0, 0, 0, 6, 40, },
+	{ 0, 0, 0, 0, 7, 46, },
+	{ 2, 0, 0, 0, 7, 40, },
+	{ 1, 0, 0, 0, 7, 40, },
+	{ 0, 0, 0, 0, 8, 46, },
+	{ 2, 0, 0, 0, 8, 40, },
+	{ 1, 0, 0, 0, 8, 40, },
+	{ 0, 0, 0, 0, 9, 46, },
+	{ 2, 0, 0, 0, 9, 40, },
+	{ 1, 0, 0, 0, 9, 40, },
+	{ 0, 0, 0, 0, 10, 46, },
+	{ 2, 0, 0, 0, 10, 40, },
+	{ 1, 0, 0, 0, 10, 40, },
+	{ 0, 0, 0, 0, 11, 46, },
+	{ 2, 0, 0, 0, 11, 40, },
+	{ 1, 0, 0, 0, 11, 40, },
+	{ 0, 0, 0, 0, 12, 63, },
+	{ 2, 0, 0, 0, 12, 40, },
+	{ 1, 0, 0, 0, 12, 40, },
+	{ 0, 0, 0, 0, 13, 63, },
+	{ 2, 0, 0, 0, 13, 40, },
+	{ 1, 0, 0, 0, 13, 40, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 40, },
+	{ 0, 0, 0, 1, 1, 46, },
+	{ 2, 0, 0, 1, 1, 40, },
+	{ 1, 0, 0, 1, 1, 40, },
+	{ 0, 0, 0, 1, 2, 46, },
+	{ 2, 0, 0, 1, 2, 40, },
+	{ 1, 0, 0, 1, 2, 40, },
+	{ 0, 0, 0, 1, 3, 46, },
+	{ 2, 0, 0, 1, 3, 40, },
+	{ 1, 0, 0, 1, 3, 40, },
+	{ 0, 0, 0, 1, 4, 46, },
+	{ 2, 0, 0, 1, 4, 40, },
+	{ 1, 0, 0, 1, 4, 40, },
+	{ 0, 0, 0, 1, 5, 46, },
+	{ 2, 0, 0, 1, 5, 40, },
+	{ 1, 0, 0, 1, 5, 40, },
+	{ 0, 0, 0, 1, 6, 46, },
+	{ 2, 0, 0, 1, 6, 40, },
+	{ 1, 0, 0, 1, 6, 40, },
+	{ 0, 0, 0, 1, 7, 46, },
+	{ 2, 0, 0, 1, 7, 40, },
+	{ 1, 0, 0, 1, 7, 40, },
+	{ 0, 0, 0, 1, 8, 46, },
+	{ 2, 0, 0, 1, 8, 40, },
+	{ 1, 0, 0, 1, 8, 40, },
+	{ 0, 0, 0, 1, 9, 46, },
+	{ 2, 0, 0, 1, 9, 40, },
+	{ 1, 0, 0, 1, 9, 40, },
+	{ 0, 0, 0, 1, 10, 46, },
+	{ 2, 0, 0, 1, 10, 40, },
+	{ 1, 0, 0, 1, 10, 40, },
+	{ 0, 0, 0, 1, 11, 46, },
+	{ 2, 0, 0, 1, 11, 40, },
+	{ 1, 0, 0, 1, 11, 40, },
+	{ 0, 0, 0, 1, 12, 63, },
+	{ 2, 0, 0, 1, 12, 40, },
+	{ 1, 0, 0, 1, 12, 40, },
+	{ 0, 0, 0, 1, 13, 63, },
+	{ 2, 0, 0, 1, 13, 40, },
+	{ 1, 0, 0, 1, 13, 40, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 63, },
+	{ 0, 0, 0, 2, 1, 46, },
+	{ 2, 0, 0, 2, 1, 40, },
+	{ 1, 0, 0, 2, 1, 40, },
+	{ 0, 0, 0, 2, 2, 46, },
+	{ 2, 0, 0, 2, 2, 40, },
+	{ 1, 0, 0, 2, 2, 40, },
+	{ 0, 0, 0, 2, 3, 46, },
+	{ 2, 0, 0, 2, 3, 40, },
+	{ 1, 0, 0, 2, 3, 40, },
+	{ 0, 0, 0, 2, 4, 46, },
+	{ 2, 0, 0, 2, 4, 40, },
+	{ 1, 0, 0, 2, 4, 40, },
+	{ 0, 0, 0, 2, 5, 46, },
+	{ 2, 0, 0, 2, 5, 40, },
+	{ 1, 0, 0, 2, 5, 40, },
+	{ 0, 0, 0, 2, 6, 46, },
+	{ 2, 0, 0, 2, 6, 40, },
+	{ 1, 0, 0, 2, 6, 40, },
+	{ 0, 0, 0, 2, 7, 46, },
+	{ 2, 0, 0, 2, 7, 40, },
+	{ 1, 0, 0, 2, 7, 40, },
+	{ 0, 0, 0, 2, 8, 46, },
+	{ 2, 0, 0, 2, 8, 40, },
+	{ 1, 0, 0, 2, 8, 40, },
+	{ 0, 0, 0, 2, 9, 46, },
+	{ 2, 0, 0, 2, 9, 40, },
+	{ 1, 0, 0, 2, 9, 40, },
+	{ 0, 0, 0, 2, 10, 46, },
+	{ 2, 0, 0, 2, 10, 40, },
+	{ 1, 0, 0, 2, 10, 40, },
+	{ 0, 0, 0, 2, 11, 46, },
+	{ 2, 0, 0, 2, 11, 40, },
+	{ 1, 0, 0, 2, 11, 40, },
+	{ 0, 0, 0, 2, 12, 63, },
+	{ 2, 0, 0, 2, 12, 40, },
+	{ 1, 0, 0, 2, 12, 40, },
+	{ 0, 0, 0, 2, 13, 63, },
+	{ 2, 0, 0, 2, 13, 40, },
+	{ 1, 0, 0, 2, 13, 40, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 63, },
+	{ 0, 0, 0, 3, 1, 46, },
+	{ 2, 0, 0, 3, 1, 40, },
+	{ 1, 0, 0, 3, 1, 40, },
+	{ 0, 0, 0, 3, 2, 46, },
+	{ 2, 0, 0, 3, 2, 40, },
+	{ 1, 0, 0, 3, 2, 40, },
+	{ 0, 0, 0, 3, 3, 46, },
+	{ 2, 0, 0, 3, 3, 40, },
+	{ 1, 0, 0, 3, 3, 40, },
+	{ 0, 0, 0, 3, 4, 46, },
+	{ 2, 0, 0, 3, 4, 40, },
+	{ 1, 0, 0, 3, 4, 40, },
+	{ 0, 0, 0, 3, 5, 46, },
+	{ 2, 0, 0, 3, 5, 40, },
+	{ 1, 0, 0, 3, 5, 40, },
+	{ 0, 0, 0, 3, 6, 46, },
+	{ 2, 0, 0, 3, 6, 40, },
+	{ 1, 0, 0, 3, 6, 40, },
+	{ 0, 0, 0, 3, 7, 46, },
+	{ 2, 0, 0, 3, 7, 40, },
+	{ 1, 0, 0, 3, 7, 40, },
+	{ 0, 0, 0, 3, 8, 46, },
+	{ 2, 0, 0, 3, 8, 40, },
+	{ 1, 0, 0, 3, 8, 40, },
+	{ 0, 0, 0, 3, 9, 46, },
+	{ 2, 0, 0, 3, 9, 40, },
+	{ 1, 0, 0, 3, 9, 40, },
+	{ 0, 0, 0, 3, 10, 46, },
+	{ 2, 0, 0, 3, 10, 40, },
+	{ 1, 0, 0, 3, 10, 40, },
+	{ 0, 0, 0, 3, 11, 46, },
+	{ 2, 0, 0, 3, 11, 40, },
+	{ 1, 0, 0, 3, 11, 40, },
+	{ 0, 0, 0, 3, 12, 63, },
+	{ 2, 0, 0, 3, 12, 40, },
+	{ 1, 0, 0, 3, 12, 40, },
+	{ 0, 0, 0, 3, 13, 63, },
+	{ 2, 0, 0, 3, 13, 40, },
+	{ 1, 0, 0, 3, 13, 40, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 63, },
+	{ 0, 0, 0, 6, 1, 46, },
+	{ 2, 0, 0, 6, 1, 40, },
+	{ 1, 0, 0, 6, 1, 40, },
+	{ 0, 0, 0, 6, 2, 46, },
+	{ 2, 0, 0, 6, 2, 40, },
+	{ 1, 0, 0, 6, 2, 40, },
+	{ 0, 0, 0, 6, 3, 46, },
+	{ 2, 0, 0, 6, 3, 40, },
+	{ 1, 0, 0, 6, 3, 40, },
+	{ 0, 0, 0, 6, 4, 46, },
+	{ 2, 0, 0, 6, 4, 40, },
+	{ 1, 0, 0, 6, 4, 40, },
+	{ 0, 0, 0, 6, 5, 46, },
+	{ 2, 0, 0, 6, 5, 40, },
+	{ 1, 0, 0, 6, 5, 40, },
+	{ 0, 0, 0, 6, 6, 46, },
+	{ 2, 0, 0, 6, 6, 40, },
+	{ 1, 0, 0, 6, 6, 40, },
+	{ 0, 0, 0, 6, 7, 46, },
+	{ 2, 0, 0, 6, 7, 40, },
+	{ 1, 0, 0, 6, 7, 40, },
+	{ 0, 0, 0, 6, 8, 46, },
+	{ 2, 0, 0, 6, 8, 40, },
+	{ 1, 0, 0, 6, 8, 40, },
+	{ 0, 0, 0, 6, 9, 46, },
+	{ 2, 0, 0, 6, 9, 40, },
+	{ 1, 0, 0, 6, 9, 40, },
+	{ 0, 0, 0, 6, 10, 46, },
+	{ 2, 0, 0, 6, 10, 40, },
+	{ 1, 0, 0, 6, 10, 40, },
+	{ 0, 0, 0, 6, 11, 46, },
+	{ 2, 0, 0, 6, 11, 40, },
+	{ 1, 0, 0, 6, 11, 40, },
+	{ 0, 0, 0, 6, 12, 63, },
+	{ 2, 0, 0, 6, 12, 40, },
+	{ 1, 0, 0, 6, 12, 40, },
+	{ 0, 0, 0, 6, 13, 63, },
+	{ 2, 0, 0, 6, 13, 40, },
+	{ 1, 0, 0, 6, 13, 40, },
+	{ 0, 0, 0, 6, 14, 63, },
+	{ 2, 0, 0, 6, 14, 63, },
+	{ 1, 0, 0, 6, 14, 63, },
+	{ 0, 0, 0, 7, 1, 46, },
+	{ 2, 0, 0, 7, 1, 40, },
+	{ 1, 0, 0, 7, 1, 40, },
+	{ 0, 0, 0, 7, 2, 46, },
+	{ 2, 0, 0, 7, 2, 40, },
+	{ 1, 0, 0, 7, 2, 40, },
+	{ 0, 0, 0, 7, 3, 46, },
+	{ 2, 0, 0, 7, 3, 40, },
+	{ 1, 0, 0, 7, 3, 40, },
+	{ 0, 0, 0, 7, 4, 46, },
+	{ 2, 0, 0, 7, 4, 40, },
+	{ 1, 0, 0, 7, 4, 40, },
+	{ 0, 0, 0, 7, 5, 46, },
+	{ 2, 0, 0, 7, 5, 40, },
+	{ 1, 0, 0, 7, 5, 40, },
+	{ 0, 0, 0, 7, 6, 46, },
+	{ 2, 0, 0, 7, 6, 40, },
+	{ 1, 0, 0, 7, 6, 40, },
+	{ 0, 0, 0, 7, 7, 46, },
+	{ 2, 0, 0, 7, 7, 40, },
+	{ 1, 0, 0, 7, 7, 40, },
+	{ 0, 0, 0, 7, 8, 46, },
+	{ 2, 0, 0, 7, 8, 40, },
+	{ 1, 0, 0, 7, 8, 40, },
+	{ 0, 0, 0, 7, 9, 46, },
+	{ 2, 0, 0, 7, 9, 40, },
+	{ 1, 0, 0, 7, 9, 40, },
+	{ 0, 0, 0, 7, 10, 46, },
+	{ 2, 0, 0, 7, 10, 40, },
+	{ 1, 0, 0, 7, 10, 40, },
+	{ 0, 0, 0, 7, 11, 46, },
+	{ 2, 0, 0, 7, 11, 40, },
+	{ 1, 0, 0, 7, 11, 40, },
+	{ 0, 0, 0, 7, 12, 63, },
+	{ 2, 0, 0, 7, 12, 40, },
+	{ 1, 0, 0, 7, 12, 40, },
+	{ 0, 0, 0, 7, 13, 63, },
+	{ 2, 0, 0, 7, 13, 40, },
+	{ 1, 0, 0, 7, 13, 40, },
+	{ 0, 0, 0, 7, 14, 63, },
+	{ 2, 0, 0, 7, 14, 63, },
+	{ 1, 0, 0, 7, 14, 63, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 46, },
+	{ 2, 0, 1, 2, 3, 40, },
+	{ 1, 0, 1, 2, 3, 40, },
+	{ 0, 0, 1, 2, 4, 46, },
+	{ 2, 0, 1, 2, 4, 40, },
+	{ 1, 0, 1, 2, 4, 40, },
+	{ 0, 0, 1, 2, 5, 46, },
+	{ 2, 0, 1, 2, 5, 40, },
+	{ 1, 0, 1, 2, 5, 40, },
+	{ 0, 0, 1, 2, 6, 46, },
+	{ 2, 0, 1, 2, 6, 40, },
+	{ 1, 0, 1, 2, 6, 40, },
+	{ 0, 0, 1, 2, 7, 46, },
+	{ 2, 0, 1, 2, 7, 40, },
+	{ 1, 0, 1, 2, 7, 40, },
+	{ 0, 0, 1, 2, 8, 46, },
+	{ 2, 0, 1, 2, 8, 40, },
+	{ 1, 0, 1, 2, 8, 40, },
+	{ 0, 0, 1, 2, 9, 46, },
+	{ 2, 0, 1, 2, 9, 40, },
+	{ 1, 0, 1, 2, 9, 40, },
+	{ 0, 0, 1, 2, 10, 46, },
+	{ 2, 0, 1, 2, 10, 40, },
+	{ 1, 0, 1, 2, 10, 40, },
+	{ 0, 0, 1, 2, 11, 46, },
+	{ 2, 0, 1, 2, 11, 40, },
+	{ 1, 0, 1, 2, 11, 40, },
+	{ 0, 0, 1, 2, 12, 63, },
+	{ 2, 0, 1, 2, 12, 40, },
+	{ 1, 0, 1, 2, 12, 40, },
+	{ 0, 0, 1, 2, 13, 63, },
+	{ 2, 0, 1, 2, 13, 40, },
+	{ 1, 0, 1, 2, 13, 40, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 46, },
+	{ 2, 0, 1, 3, 3, 40, },
+	{ 1, 0, 1, 3, 3, 40, },
+	{ 0, 0, 1, 3, 4, 46, },
+	{ 2, 0, 1, 3, 4, 40, },
+	{ 1, 0, 1, 3, 4, 40, },
+	{ 0, 0, 1, 3, 5, 46, },
+	{ 2, 0, 1, 3, 5, 40, },
+	{ 1, 0, 1, 3, 5, 40, },
+	{ 0, 0, 1, 3, 6, 46, },
+	{ 2, 0, 1, 3, 6, 40, },
+	{ 1, 0, 1, 3, 6, 40, },
+	{ 0, 0, 1, 3, 7, 46, },
+	{ 2, 0, 1, 3, 7, 40, },
+	{ 1, 0, 1, 3, 7, 40, },
+	{ 0, 0, 1, 3, 8, 46, },
+	{ 2, 0, 1, 3, 8, 40, },
+	{ 1, 0, 1, 3, 8, 40, },
+	{ 0, 0, 1, 3, 9, 46, },
+	{ 2, 0, 1, 3, 9, 40, },
+	{ 1, 0, 1, 3, 9, 40, },
+	{ 0, 0, 1, 3, 10, 46, },
+	{ 2, 0, 1, 3, 10, 40, },
+	{ 1, 0, 1, 3, 10, 40, },
+	{ 0, 0, 1, 3, 11, 46, },
+	{ 2, 0, 1, 3, 11, 40, },
+	{ 1, 0, 1, 3, 11, 40, },
+	{ 0, 0, 1, 3, 12, 63, },
+	{ 2, 0, 1, 3, 12, 40, },
+	{ 1, 0, 1, 3, 12, 40, },
+	{ 0, 0, 1, 3, 13, 63, },
+	{ 2, 0, 1, 3, 13, 40, },
+	{ 1, 0, 1, 3, 13, 40, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 0, 1, 6, 1, 63, },
+	{ 2, 0, 1, 6, 1, 63, },
+	{ 1, 0, 1, 6, 1, 63, },
+	{ 0, 0, 1, 6, 2, 63, },
+	{ 2, 0, 1, 6, 2, 63, },
+	{ 1, 0, 1, 6, 2, 63, },
+	{ 0, 0, 1, 6, 3, 46, },
+	{ 2, 0, 1, 6, 3, 40, },
+	{ 1, 0, 1, 6, 3, 40, },
+	{ 0, 0, 1, 6, 4, 46, },
+	{ 2, 0, 1, 6, 4, 40, },
+	{ 1, 0, 1, 6, 4, 40, },
+	{ 0, 0, 1, 6, 5, 46, },
+	{ 2, 0, 1, 6, 5, 40, },
+	{ 1, 0, 1, 6, 5, 40, },
+	{ 0, 0, 1, 6, 6, 46, },
+	{ 2, 0, 1, 6, 6, 40, },
+	{ 1, 0, 1, 6, 6, 40, },
+	{ 0, 0, 1, 6, 7, 46, },
+	{ 2, 0, 1, 6, 7, 40, },
+	{ 1, 0, 1, 6, 7, 40, },
+	{ 0, 0, 1, 6, 8, 46, },
+	{ 2, 0, 1, 6, 8, 40, },
+	{ 1, 0, 1, 6, 8, 40, },
+	{ 0, 0, 1, 6, 9, 46, },
+	{ 2, 0, 1, 6, 9, 40, },
+	{ 1, 0, 1, 6, 9, 40, },
+	{ 0, 0, 1, 6, 10, 46, },
+	{ 2, 0, 1, 6, 10, 40, },
+	{ 1, 0, 1, 6, 10, 40, },
+	{ 0, 0, 1, 6, 11, 46, },
+	{ 2, 0, 1, 6, 11, 40, },
+	{ 1, 0, 1, 6, 11, 40, },
+	{ 0, 0, 1, 6, 12, 63, },
+	{ 2, 0, 1, 6, 12, 40, },
+	{ 1, 0, 1, 6, 12, 40, },
+	{ 0, 0, 1, 6, 13, 63, },
+	{ 2, 0, 1, 6, 13, 40, },
+	{ 1, 0, 1, 6, 13, 40, },
+	{ 0, 0, 1, 6, 14, 63, },
+	{ 2, 0, 1, 6, 14, 63, },
+	{ 1, 0, 1, 6, 14, 63, },
+	{ 0, 0, 1, 7, 1, 63, },
+	{ 2, 0, 1, 7, 1, 63, },
+	{ 1, 0, 1, 7, 1, 63, },
+	{ 0, 0, 1, 7, 2, 63, },
+	{ 2, 0, 1, 7, 2, 63, },
+	{ 1, 0, 1, 7, 2, 63, },
+	{ 0, 0, 1, 7, 3, 46, },
+	{ 2, 0, 1, 7, 3, 40, },
+	{ 1, 0, 1, 7, 3, 40, },
+	{ 0, 0, 1, 7, 4, 46, },
+	{ 2, 0, 1, 7, 4, 40, },
+	{ 1, 0, 1, 7, 4, 40, },
+	{ 0, 0, 1, 7, 5, 46, },
+	{ 2, 0, 1, 7, 5, 40, },
+	{ 1, 0, 1, 7, 5, 40, },
+	{ 0, 0, 1, 7, 6, 46, },
+	{ 2, 0, 1, 7, 6, 40, },
+	{ 1, 0, 1, 7, 6, 40, },
+	{ 0, 0, 1, 7, 7, 46, },
+	{ 2, 0, 1, 7, 7, 40, },
+	{ 1, 0, 1, 7, 7, 40, },
+	{ 0, 0, 1, 7, 8, 46, },
+	{ 2, 0, 1, 7, 8, 40, },
+	{ 1, 0, 1, 7, 8, 40, },
+	{ 0, 0, 1, 7, 9, 46, },
+	{ 2, 0, 1, 7, 9, 40, },
+	{ 1, 0, 1, 7, 9, 40, },
+	{ 0, 0, 1, 7, 10, 46, },
+	{ 2, 0, 1, 7, 10, 40, },
+	{ 1, 0, 1, 7, 10, 40, },
+	{ 0, 0, 1, 7, 11, 46, },
+	{ 2, 0, 1, 7, 11, 40, },
+	{ 1, 0, 1, 7, 11, 40, },
+	{ 0, 0, 1, 7, 12, 63, },
+	{ 2, 0, 1, 7, 12, 40, },
+	{ 1, 0, 1, 7, 12, 40, },
+	{ 0, 0, 1, 7, 13, 63, },
+	{ 2, 0, 1, 7, 13, 40, },
+	{ 1, 0, 1, 7, 13, 40, },
+	{ 0, 0, 1, 7, 14, 63, },
+	{ 2, 0, 1, 7, 14, 63, },
+	{ 1, 0, 1, 7, 14, 63, },
+	{ 0, 1, 0, 1, 36, 46, },
+	{ 2, 1, 0, 1, 36, 40, },
+	{ 1, 1, 0, 1, 36, 40, },
+	{ 0, 1, 0, 1, 40, 46, },
+	{ 2, 1, 0, 1, 40, 40, },
+	{ 1, 1, 0, 1, 40, 40, },
+	{ 0, 1, 0, 1, 44, 46, },
+	{ 2, 1, 0, 1, 44, 40, },
+	{ 1, 1, 0, 1, 44, 40, },
+	{ 0, 1, 0, 1, 48, 46, },
+	{ 2, 1, 0, 1, 48, 40, },
+	{ 1, 1, 0, 1, 48, 40, },
+	{ 0, 1, 0, 1, 52, 46, },
+	{ 2, 1, 0, 1, 52, 40, },
+	{ 1, 1, 0, 1, 52, 40, },
+	{ 0, 1, 0, 1, 56, 46, },
+	{ 2, 1, 0, 1, 56, 40, },
+	{ 1, 1, 0, 1, 56, 40, },
+	{ 0, 1, 0, 1, 60, 46, },
+	{ 2, 1, 0, 1, 60, 40, },
+	{ 1, 1, 0, 1, 60, 40, },
+	{ 0, 1, 0, 1, 64, 46, },
+	{ 2, 1, 0, 1, 64, 40, },
+	{ 1, 1, 0, 1, 64, 40, },
+	{ 0, 1, 0, 1, 100, 46, },
+	{ 2, 1, 0, 1, 100, 40, },
+	{ 1, 1, 0, 1, 100, 40, },
+	{ 0, 1, 0, 1, 104, 46, },
+	{ 2, 1, 0, 1, 104, 40, },
+	{ 1, 1, 0, 1, 104, 40, },
+	{ 0, 1, 0, 1, 108, 46, },
+	{ 2, 1, 0, 1, 108, 40, },
+	{ 1, 1, 0, 1, 108, 40, },
+	{ 0, 1, 0, 1, 112, 46, },
+	{ 2, 1, 0, 1, 112, 40, },
+	{ 1, 1, 0, 1, 112, 40, },
+	{ 0, 1, 0, 1, 116, 46, },
+	{ 2, 1, 0, 1, 116, 40, },
+	{ 1, 1, 0, 1, 116, 40, },
+	{ 0, 1, 0, 1, 120, 46, },
+	{ 2, 1, 0, 1, 120, 40, },
+	{ 1, 1, 0, 1, 120, 40, },
+	{ 0, 1, 0, 1, 124, 46, },
+	{ 2, 1, 0, 1, 124, 40, },
+	{ 1, 1, 0, 1, 124, 40, },
+	{ 0, 1, 0, 1, 128, 46, },
+	{ 2, 1, 0, 1, 128, 40, },
+	{ 1, 1, 0, 1, 128, 40, },
+	{ 0, 1, 0, 1, 132, 46, },
+	{ 2, 1, 0, 1, 132, 40, },
+	{ 1, 1, 0, 1, 132, 40, },
+	{ 0, 1, 0, 1, 136, 46, },
+	{ 2, 1, 0, 1, 136, 40, },
+	{ 1, 1, 0, 1, 136, 40, },
+	{ 0, 1, 0, 1, 140, 46, },
+	{ 2, 1, 0, 1, 140, 40, },
+	{ 1, 1, 0, 1, 140, 40, },
+	{ 0, 1, 0, 1, 149, 46, },
+	{ 2, 1, 0, 1, 149, 40, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 46, },
+	{ 2, 1, 0, 1, 153, 40, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 46, },
+	{ 2, 1, 0, 1, 157, 40, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 46, },
+	{ 2, 1, 0, 1, 161, 40, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 46, },
+	{ 2, 1, 0, 1, 165, 40, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 46, },
+	{ 2, 1, 0, 2, 36, 40, },
+	{ 1, 1, 0, 2, 36, 40, },
+	{ 0, 1, 0, 2, 40, 46, },
+	{ 2, 1, 0, 2, 40, 40, },
+	{ 1, 1, 0, 2, 40, 40, },
+	{ 0, 1, 0, 2, 44, 46, },
+	{ 2, 1, 0, 2, 44, 40, },
+	{ 1, 1, 0, 2, 44, 40, },
+	{ 0, 1, 0, 2, 48, 46, },
+	{ 2, 1, 0, 2, 48, 40, },
+	{ 1, 1, 0, 2, 48, 40, },
+	{ 0, 1, 0, 2, 52, 46, },
+	{ 2, 1, 0, 2, 52, 40, },
+	{ 1, 1, 0, 2, 52, 40, },
+	{ 0, 1, 0, 2, 56, 46, },
+	{ 2, 1, 0, 2, 56, 40, },
+	{ 1, 1, 0, 2, 56, 40, },
+	{ 0, 1, 0, 2, 60, 46, },
+	{ 2, 1, 0, 2, 60, 40, },
+	{ 1, 1, 0, 2, 60, 40, },
+	{ 0, 1, 0, 2, 64, 46, },
+	{ 2, 1, 0, 2, 64, 40, },
+	{ 1, 1, 0, 2, 64, 40, },
+	{ 0, 1, 0, 2, 100, 46, },
+	{ 2, 1, 0, 2, 100, 40, },
+	{ 1, 1, 0, 2, 100, 40, },
+	{ 0, 1, 0, 2, 104, 46, },
+	{ 2, 1, 0, 2, 104, 40, },
+	{ 1, 1, 0, 2, 104, 40, },
+	{ 0, 1, 0, 2, 108, 46, },
+	{ 2, 1, 0, 2, 108, 40, },
+	{ 1, 1, 0, 2, 108, 40, },
+	{ 0, 1, 0, 2, 112, 46, },
+	{ 2, 1, 0, 2, 112, 40, },
+	{ 1, 1, 0, 2, 112, 40, },
+	{ 0, 1, 0, 2, 116, 46, },
+	{ 2, 1, 0, 2, 116, 40, },
+	{ 1, 1, 0, 2, 116, 40, },
+	{ 0, 1, 0, 2, 120, 46, },
+	{ 2, 1, 0, 2, 120, 40, },
+	{ 1, 1, 0, 2, 120, 40, },
+	{ 0, 1, 0, 2, 124, 46, },
+	{ 2, 1, 0, 2, 124, 40, },
+	{ 1, 1, 0, 2, 124, 40, },
+	{ 0, 1, 0, 2, 128, 46, },
+	{ 2, 1, 0, 2, 128, 40, },
+	{ 1, 1, 0, 2, 128, 40, },
+	{ 0, 1, 0, 2, 132, 46, },
+	{ 2, 1, 0, 2, 132, 40, },
+	{ 1, 1, 0, 2, 132, 40, },
+	{ 0, 1, 0, 2, 136, 46, },
+	{ 2, 1, 0, 2, 136, 40, },
+	{ 1, 1, 0, 2, 136, 40, },
+	{ 0, 1, 0, 2, 140, 46, },
+	{ 2, 1, 0, 2, 140, 40, },
+	{ 1, 1, 0, 2, 140, 40, },
+	{ 0, 1, 0, 2, 149, 46, },
+	{ 2, 1, 0, 2, 149, 40, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 46, },
+	{ 2, 1, 0, 2, 153, 40, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 46, },
+	{ 2, 1, 0, 2, 157, 40, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 46, },
+	{ 2, 1, 0, 2, 161, 40, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 46, },
+	{ 2, 1, 0, 2, 165, 40, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 46, },
+	{ 2, 1, 0, 3, 36, 40, },
+	{ 1, 1, 0, 3, 36, 40, },
+	{ 0, 1, 0, 3, 40, 46, },
+	{ 2, 1, 0, 3, 40, 40, },
+	{ 1, 1, 0, 3, 40, 40, },
+	{ 0, 1, 0, 3, 44, 46, },
+	{ 2, 1, 0, 3, 44, 40, },
+	{ 1, 1, 0, 3, 44, 40, },
+	{ 0, 1, 0, 3, 48, 46, },
+	{ 2, 1, 0, 3, 48, 40, },
+	{ 1, 1, 0, 3, 48, 40, },
+	{ 0, 1, 0, 3, 52, 46, },
+	{ 2, 1, 0, 3, 52, 40, },
+	{ 1, 1, 0, 3, 52, 40, },
+	{ 0, 1, 0, 3, 56, 46, },
+	{ 2, 1, 0, 3, 56, 40, },
+	{ 1, 1, 0, 3, 56, 40, },
+	{ 0, 1, 0, 3, 60, 46, },
+	{ 2, 1, 0, 3, 60, 40, },
+	{ 1, 1, 0, 3, 60, 40, },
+	{ 0, 1, 0, 3, 64, 46, },
+	{ 2, 1, 0, 3, 64, 40, },
+	{ 1, 1, 0, 3, 64, 40, },
+	{ 0, 1, 0, 3, 100, 46, },
+	{ 2, 1, 0, 3, 100, 40, },
+	{ 1, 1, 0, 3, 100, 40, },
+	{ 0, 1, 0, 3, 104, 46, },
+	{ 2, 1, 0, 3, 104, 40, },
+	{ 1, 1, 0, 3, 104, 40, },
+	{ 0, 1, 0, 3, 108, 46, },
+	{ 2, 1, 0, 3, 108, 40, },
+	{ 1, 1, 0, 3, 108, 40, },
+	{ 0, 1, 0, 3, 112, 46, },
+	{ 2, 1, 0, 3, 112, 40, },
+	{ 1, 1, 0, 3, 112, 40, },
+	{ 0, 1, 0, 3, 116, 46, },
+	{ 2, 1, 0, 3, 116, 40, },
+	{ 1, 1, 0, 3, 116, 40, },
+	{ 0, 1, 0, 3, 120, 46, },
+	{ 2, 1, 0, 3, 120, 40, },
+	{ 1, 1, 0, 3, 120, 40, },
+	{ 0, 1, 0, 3, 124, 46, },
+	{ 2, 1, 0, 3, 124, 40, },
+	{ 1, 1, 0, 3, 124, 40, },
+	{ 0, 1, 0, 3, 128, 46, },
+	{ 2, 1, 0, 3, 128, 40, },
+	{ 1, 1, 0, 3, 128, 40, },
+	{ 0, 1, 0, 3, 132, 46, },
+	{ 2, 1, 0, 3, 132, 40, },
+	{ 1, 1, 0, 3, 132, 40, },
+	{ 0, 1, 0, 3, 136, 46, },
+	{ 2, 1, 0, 3, 136, 40, },
+	{ 1, 1, 0, 3, 136, 40, },
+	{ 0, 1, 0, 3, 140, 46, },
+	{ 2, 1, 0, 3, 140, 40, },
+	{ 1, 1, 0, 3, 140, 40, },
+	{ 0, 1, 0, 3, 149, 46, },
+	{ 2, 1, 0, 3, 149, 40, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 46, },
+	{ 2, 1, 0, 3, 153, 40, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 46, },
+	{ 2, 1, 0, 3, 157, 40, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 46, },
+	{ 2, 1, 0, 3, 161, 40, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 46, },
+	{ 2, 1, 0, 3, 165, 40, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 0, 6, 36, 46, },
+	{ 2, 1, 0, 6, 36, 40, },
+	{ 1, 1, 0, 6, 36, 40, },
+	{ 0, 1, 0, 6, 40, 46, },
+	{ 2, 1, 0, 6, 40, 40, },
+	{ 1, 1, 0, 6, 40, 40, },
+	{ 0, 1, 0, 6, 44, 46, },
+	{ 2, 1, 0, 6, 44, 40, },
+	{ 1, 1, 0, 6, 44, 40, },
+	{ 0, 1, 0, 6, 48, 46, },
+	{ 2, 1, 0, 6, 48, 40, },
+	{ 1, 1, 0, 6, 48, 40, },
+	{ 0, 1, 0, 6, 52, 46, },
+	{ 2, 1, 0, 6, 52, 40, },
+	{ 1, 1, 0, 6, 52, 40, },
+	{ 0, 1, 0, 6, 56, 46, },
+	{ 2, 1, 0, 6, 56, 40, },
+	{ 1, 1, 0, 6, 56, 40, },
+	{ 0, 1, 0, 6, 60, 46, },
+	{ 2, 1, 0, 6, 60, 40, },
+	{ 1, 1, 0, 6, 60, 40, },
+	{ 0, 1, 0, 6, 64, 46, },
+	{ 2, 1, 0, 6, 64, 40, },
+	{ 1, 1, 0, 6, 64, 40, },
+	{ 0, 1, 0, 6, 100, 46, },
+	{ 2, 1, 0, 6, 100, 40, },
+	{ 1, 1, 0, 6, 100, 40, },
+	{ 0, 1, 0, 6, 104, 46, },
+	{ 2, 1, 0, 6, 104, 40, },
+	{ 1, 1, 0, 6, 104, 40, },
+	{ 0, 1, 0, 6, 108, 46, },
+	{ 2, 1, 0, 6, 108, 40, },
+	{ 1, 1, 0, 6, 108, 40, },
+	{ 0, 1, 0, 6, 112, 46, },
+	{ 2, 1, 0, 6, 112, 40, },
+	{ 1, 1, 0, 6, 112, 40, },
+	{ 0, 1, 0, 6, 116, 46, },
+	{ 2, 1, 0, 6, 116, 40, },
+	{ 1, 1, 0, 6, 116, 40, },
+	{ 0, 1, 0, 6, 120, 46, },
+	{ 2, 1, 0, 6, 120, 40, },
+	{ 1, 1, 0, 6, 120, 40, },
+	{ 0, 1, 0, 6, 124, 46, },
+	{ 2, 1, 0, 6, 124, 40, },
+	{ 1, 1, 0, 6, 124, 40, },
+	{ 0, 1, 0, 6, 128, 46, },
+	{ 2, 1, 0, 6, 128, 40, },
+	{ 1, 1, 0, 6, 128, 40, },
+	{ 0, 1, 0, 6, 132, 46, },
+	{ 2, 1, 0, 6, 132, 40, },
+	{ 1, 1, 0, 6, 132, 40, },
+	{ 0, 1, 0, 6, 136, 46, },
+	{ 2, 1, 0, 6, 136, 40, },
+	{ 1, 1, 0, 6, 136, 40, },
+	{ 0, 1, 0, 6, 140, 46, },
+	{ 2, 1, 0, 6, 140, 40, },
+	{ 1, 1, 0, 6, 140, 40, },
+	{ 0, 1, 0, 6, 149, 46, },
+	{ 2, 1, 0, 6, 149, 40, },
+	{ 1, 1, 0, 6, 149, 63, },
+	{ 0, 1, 0, 6, 153, 46, },
+	{ 2, 1, 0, 6, 153, 40, },
+	{ 1, 1, 0, 6, 153, 63, },
+	{ 0, 1, 0, 6, 157, 46, },
+	{ 2, 1, 0, 6, 157, 40, },
+	{ 1, 1, 0, 6, 157, 63, },
+	{ 0, 1, 0, 6, 161, 46, },
+	{ 2, 1, 0, 6, 161, 40, },
+	{ 1, 1, 0, 6, 161, 63, },
+	{ 0, 1, 0, 6, 165, 46, },
+	{ 2, 1, 0, 6, 165, 40, },
+	{ 1, 1, 0, 6, 165, 63, },
+	{ 0, 1, 0, 7, 36, 46, },
+	{ 2, 1, 0, 7, 36, 40, },
+	{ 1, 1, 0, 7, 36, 40, },
+	{ 0, 1, 0, 7, 40, 46, },
+	{ 2, 1, 0, 7, 40, 40, },
+	{ 1, 1, 0, 7, 40, 40, },
+	{ 0, 1, 0, 7, 44, 46, },
+	{ 2, 1, 0, 7, 44, 40, },
+	{ 1, 1, 0, 7, 44, 40, },
+	{ 0, 1, 0, 7, 48, 46, },
+	{ 2, 1, 0, 7, 48, 40, },
+	{ 1, 1, 0, 7, 48, 40, },
+	{ 0, 1, 0, 7, 52, 46, },
+	{ 2, 1, 0, 7, 52, 40, },
+	{ 1, 1, 0, 7, 52, 40, },
+	{ 0, 1, 0, 7, 56, 46, },
+	{ 2, 1, 0, 7, 56, 40, },
+	{ 1, 1, 0, 7, 56, 40, },
+	{ 0, 1, 0, 7, 60, 46, },
+	{ 2, 1, 0, 7, 60, 40, },
+	{ 1, 1, 0, 7, 60, 40, },
+	{ 0, 1, 0, 7, 64, 46, },
+	{ 2, 1, 0, 7, 64, 40, },
+	{ 1, 1, 0, 7, 64, 40, },
+	{ 0, 1, 0, 7, 100, 46, },
+	{ 2, 1, 0, 7, 100, 40, },
+	{ 1, 1, 0, 7, 100, 40, },
+	{ 0, 1, 0, 7, 104, 46, },
+	{ 2, 1, 0, 7, 104, 40, },
+	{ 1, 1, 0, 7, 104, 40, },
+	{ 0, 1, 0, 7, 108, 46, },
+	{ 2, 1, 0, 7, 108, 40, },
+	{ 1, 1, 0, 7, 108, 40, },
+	{ 0, 1, 0, 7, 112, 46, },
+	{ 2, 1, 0, 7, 112, 40, },
+	{ 1, 1, 0, 7, 112, 40, },
+	{ 0, 1, 0, 7, 116, 46, },
+	{ 2, 1, 0, 7, 116, 40, },
+	{ 1, 1, 0, 7, 116, 40, },
+	{ 0, 1, 0, 7, 120, 46, },
+	{ 2, 1, 0, 7, 120, 40, },
+	{ 1, 1, 0, 7, 120, 40, },
+	{ 0, 1, 0, 7, 124, 46, },
+	{ 2, 1, 0, 7, 124, 40, },
+	{ 1, 1, 0, 7, 124, 40, },
+	{ 0, 1, 0, 7, 128, 46, },
+	{ 2, 1, 0, 7, 128, 40, },
+	{ 1, 1, 0, 7, 128, 40, },
+	{ 0, 1, 0, 7, 132, 46, },
+	{ 2, 1, 0, 7, 132, 40, },
+	{ 1, 1, 0, 7, 132, 40, },
+	{ 0, 1, 0, 7, 136, 46, },
+	{ 2, 1, 0, 7, 136, 40, },
+	{ 1, 1, 0, 7, 136, 40, },
+	{ 0, 1, 0, 7, 140, 46, },
+	{ 2, 1, 0, 7, 140, 40, },
+	{ 1, 1, 0, 7, 140, 40, },
+	{ 0, 1, 0, 7, 149, 46, },
+	{ 2, 1, 0, 7, 149, 40, },
+	{ 1, 1, 0, 7, 149, 63, },
+	{ 0, 1, 0, 7, 153, 46, },
+	{ 2, 1, 0, 7, 153, 40, },
+	{ 1, 1, 0, 7, 153, 63, },
+	{ 0, 1, 0, 7, 157, 46, },
+	{ 2, 1, 0, 7, 157, 40, },
+	{ 1, 1, 0, 7, 157, 63, },
+	{ 0, 1, 0, 7, 161, 46, },
+	{ 2, 1, 0, 7, 161, 40, },
+	{ 1, 1, 0, 7, 161, 63, },
+	{ 0, 1, 0, 7, 165, 46, },
+	{ 2, 1, 0, 7, 165, 40, },
+	{ 1, 1, 0, 7, 165, 63, },
+	{ 0, 1, 1, 2, 38, 46, },
+	{ 2, 1, 1, 2, 38, 40, },
+	{ 1, 1, 1, 2, 38, 40, },
+	{ 0, 1, 1, 2, 46, 46, },
+	{ 2, 1, 1, 2, 46, 40, },
+	{ 1, 1, 1, 2, 46, 40, },
+	{ 0, 1, 1, 2, 54, 46, },
+	{ 2, 1, 1, 2, 54, 40, },
+	{ 1, 1, 1, 2, 54, 40, },
+	{ 0, 1, 1, 2, 62, 46, },
+	{ 2, 1, 1, 2, 62, 40, },
+	{ 1, 1, 1, 2, 62, 40, },
+	{ 0, 1, 1, 2, 102, 46, },
+	{ 2, 1, 1, 2, 102, 40, },
+	{ 1, 1, 1, 2, 102, 40, },
+	{ 0, 1, 1, 2, 110, 46, },
+	{ 2, 1, 1, 2, 110, 40, },
+	{ 1, 1, 1, 2, 110, 40, },
+	{ 0, 1, 1, 2, 118, 46, },
+	{ 2, 1, 1, 2, 118, 40, },
+	{ 1, 1, 1, 2, 118, 40, },
+	{ 0, 1, 1, 2, 126, 46, },
+	{ 2, 1, 1, 2, 126, 40, },
+	{ 1, 1, 1, 2, 126, 40, },
+	{ 0, 1, 1, 2, 134, 46, },
+	{ 2, 1, 1, 2, 134, 40, },
+	{ 1, 1, 1, 2, 134, 40, },
+	{ 0, 1, 1, 2, 151, 46, },
+	{ 2, 1, 1, 2, 151, 40, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 46, },
+	{ 2, 1, 1, 2, 159, 40, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 46, },
+	{ 2, 1, 1, 3, 38, 40, },
+	{ 1, 1, 1, 3, 38, 40, },
+	{ 0, 1, 1, 3, 46, 46, },
+	{ 2, 1, 1, 3, 46, 40, },
+	{ 1, 1, 1, 3, 46, 40, },
+	{ 0, 1, 1, 3, 54, 46, },
+	{ 2, 1, 1, 3, 54, 40, },
+	{ 1, 1, 1, 3, 54, 40, },
+	{ 0, 1, 1, 3, 62, 46, },
+	{ 2, 1, 1, 3, 62, 40, },
+	{ 1, 1, 1, 3, 62, 40, },
+	{ 0, 1, 1, 3, 102, 46, },
+	{ 2, 1, 1, 3, 102, 40, },
+	{ 1, 1, 1, 3, 102, 40, },
+	{ 0, 1, 1, 3, 110, 46, },
+	{ 2, 1, 1, 3, 110, 40, },
+	{ 1, 1, 1, 3, 110, 40, },
+	{ 0, 1, 1, 3, 118, 46, },
+	{ 2, 1, 1, 3, 118, 40, },
+	{ 1, 1, 1, 3, 118, 40, },
+	{ 0, 1, 1, 3, 126, 46, },
+	{ 2, 1, 1, 3, 126, 40, },
+	{ 1, 1, 1, 3, 126, 40, },
+	{ 0, 1, 1, 3, 134, 46, },
+	{ 2, 1, 1, 3, 134, 40, },
+	{ 1, 1, 1, 3, 134, 40, },
+	{ 0, 1, 1, 3, 151, 46, },
+	{ 2, 1, 1, 3, 151, 40, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 46, },
+	{ 2, 1, 1, 3, 159, 40, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 1, 6, 38, 46, },
+	{ 2, 1, 1, 6, 38, 40, },
+	{ 1, 1, 1, 6, 38, 40, },
+	{ 0, 1, 1, 6, 46, 46, },
+	{ 2, 1, 1, 6, 46, 40, },
+	{ 1, 1, 1, 6, 46, 40, },
+	{ 0, 1, 1, 6, 54, 46, },
+	{ 2, 1, 1, 6, 54, 40, },
+	{ 1, 1, 1, 6, 54, 40, },
+	{ 0, 1, 1, 6, 62, 46, },
+	{ 2, 1, 1, 6, 62, 40, },
+	{ 1, 1, 1, 6, 62, 40, },
+	{ 0, 1, 1, 6, 102, 46, },
+	{ 2, 1, 1, 6, 102, 40, },
+	{ 1, 1, 1, 6, 102, 40, },
+	{ 0, 1, 1, 6, 110, 46, },
+	{ 2, 1, 1, 6, 110, 40, },
+	{ 1, 1, 1, 6, 110, 40, },
+	{ 0, 1, 1, 6, 118, 46, },
+	{ 2, 1, 1, 6, 118, 40, },
+	{ 1, 1, 1, 6, 118, 40, },
+	{ 0, 1, 1, 6, 126, 46, },
+	{ 2, 1, 1, 6, 126, 40, },
+	{ 1, 1, 1, 6, 126, 40, },
+	{ 0, 1, 1, 6, 134, 46, },
+	{ 2, 1, 1, 6, 134, 40, },
+	{ 1, 1, 1, 6, 134, 40, },
+	{ 0, 1, 1, 6, 151, 46, },
+	{ 2, 1, 1, 6, 151, 40, },
+	{ 1, 1, 1, 6, 151, 63, },
+	{ 0, 1, 1, 6, 159, 46, },
+	{ 2, 1, 1, 6, 159, 40, },
+	{ 1, 1, 1, 6, 159, 63, },
+	{ 0, 1, 1, 7, 38, 46, },
+	{ 2, 1, 1, 7, 38, 40, },
+	{ 1, 1, 1, 7, 38, 40, },
+	{ 0, 1, 1, 7, 46, 46, },
+	{ 2, 1, 1, 7, 46, 40, },
+	{ 1, 1, 1, 7, 46, 40, },
+	{ 0, 1, 1, 7, 54, 46, },
+	{ 2, 1, 1, 7, 54, 40, },
+	{ 1, 1, 1, 7, 54, 40, },
+	{ 0, 1, 1, 7, 62, 46, },
+	{ 2, 1, 1, 7, 62, 40, },
+	{ 1, 1, 1, 7, 62, 40, },
+	{ 0, 1, 1, 7, 102, 46, },
+	{ 2, 1, 1, 7, 102, 40, },
+	{ 1, 1, 1, 7, 102, 40, },
+	{ 0, 1, 1, 7, 110, 46, },
+	{ 2, 1, 1, 7, 110, 40, },
+	{ 1, 1, 1, 7, 110, 40, },
+	{ 0, 1, 1, 7, 118, 46, },
+	{ 2, 1, 1, 7, 118, 40, },
+	{ 1, 1, 1, 7, 118, 40, },
+	{ 0, 1, 1, 7, 126, 46, },
+	{ 2, 1, 1, 7, 126, 40, },
+	{ 1, 1, 1, 7, 126, 40, },
+	{ 0, 1, 1, 7, 134, 46, },
+	{ 2, 1, 1, 7, 134, 40, },
+	{ 1, 1, 1, 7, 134, 40, },
+	{ 0, 1, 1, 7, 151, 46, },
+	{ 2, 1, 1, 7, 151, 40, },
+	{ 1, 1, 1, 7, 151, 63, },
+	{ 0, 1, 1, 7, 159, 46, },
+	{ 2, 1, 1, 7, 159, 40, },
+	{ 1, 1, 1, 7, 159, 63, },
+	{ 0, 1, 2, 4, 42, 46, },
+	{ 2, 1, 2, 4, 42, 40, },
+	{ 1, 1, 2, 4, 42, 40, },
+	{ 0, 1, 2, 4, 58, 46, },
+	{ 2, 1, 2, 4, 58, 40, },
+	{ 1, 1, 2, 4, 58, 40, },
+	{ 0, 1, 2, 4, 106, 46, },
+	{ 2, 1, 2, 4, 106, 40, },
+	{ 1, 1, 2, 4, 106, 40, },
+	{ 0, 1, 2, 4, 122, 46, },
+	{ 2, 1, 2, 4, 122, 40, },
+	{ 1, 1, 2, 4, 122, 40, },
+	{ 0, 1, 2, 4, 155, 46, },
+	{ 2, 1, 2, 4, 155, 40, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 46, },
+	{ 2, 1, 2, 5, 42, 40, },
+	{ 1, 1, 2, 5, 42, 40, },
+	{ 0, 1, 2, 5, 58, 46, },
+	{ 2, 1, 2, 5, 58, 40, },
+	{ 1, 1, 2, 5, 58, 40, },
+	{ 0, 1, 2, 5, 106, 46, },
+	{ 2, 1, 2, 5, 106, 40, },
+	{ 1, 1, 2, 5, 106, 40, },
+	{ 0, 1, 2, 5, 122, 46, },
+	{ 2, 1, 2, 5, 122, 40, },
+	{ 1, 1, 2, 5, 122, 40, },
+	{ 0, 1, 2, 5, 155, 46, },
+	{ 2, 1, 2, 5, 155, 40, },
+	{ 1, 1, 2, 5, 155, 63, },
+	{ 0, 1, 2, 8, 42, 46, },
+	{ 2, 1, 2, 8, 42, 40, },
+	{ 1, 1, 2, 8, 42, 40, },
+	{ 0, 1, 2, 8, 58, 46, },
+	{ 2, 1, 2, 8, 58, 40, },
+	{ 1, 1, 2, 8, 58, 40, },
+	{ 0, 1, 2, 8, 106, 46, },
+	{ 2, 1, 2, 8, 106, 40, },
+	{ 1, 1, 2, 8, 106, 40, },
+	{ 0, 1, 2, 8, 122, 46, },
+	{ 2, 1, 2, 8, 122, 40, },
+	{ 1, 1, 2, 8, 122, 40, },
+	{ 0, 1, 2, 8, 155, 46, },
+	{ 2, 1, 2, 8, 155, 40, },
+	{ 1, 1, 2, 8, 155, 63, },
+	{ 0, 1, 2, 9, 42, 46, },
+	{ 2, 1, 2, 9, 42, 40, },
+	{ 1, 1, 2, 9, 42, 40, },
+	{ 0, 1, 2, 9, 58, 46, },
+	{ 2, 1, 2, 9, 58, 40, },
+	{ 1, 1, 2, 9, 58, 40, },
+	{ 0, 1, 2, 9, 106, 46, },
+	{ 2, 1, 2, 9, 106, 40, },
+	{ 1, 1, 2, 9, 106, 40, },
+	{ 0, 1, 2, 9, 122, 46, },
+	{ 2, 1, 2, 9, 122, 40, },
+	{ 1, 1, 2, 9, 122, 40, },
+	{ 0, 1, 2, 9, 155, 46, },
+	{ 2, 1, 2, 9, 155, 40, },
+	{ 1, 1, 2, 9, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8814a_txpwr_lmt_type3);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8814a_txpwr_lmt_type5[] = {
+	{ 0, 0, 0, 0, 1, 46, },
+	{ 2, 0, 0, 0, 1, 40, },
+	{ 1, 0, 0, 0, 1, 40, },
+	{ 0, 0, 0, 0, 2, 46, },
+	{ 2, 0, 0, 0, 2, 40, },
+	{ 1, 0, 0, 0, 2, 40, },
+	{ 0, 0, 0, 0, 3, 46, },
+	{ 2, 0, 0, 0, 3, 40, },
+	{ 1, 0, 0, 0, 3, 40, },
+	{ 0, 0, 0, 0, 4, 46, },
+	{ 2, 0, 0, 0, 4, 40, },
+	{ 1, 0, 0, 0, 4, 40, },
+	{ 0, 0, 0, 0, 5, 46, },
+	{ 2, 0, 0, 0, 5, 40, },
+	{ 1, 0, 0, 0, 5, 40, },
+	{ 0, 0, 0, 0, 6, 46, },
+	{ 2, 0, 0, 0, 6, 40, },
+	{ 1, 0, 0, 0, 6, 40, },
+	{ 0, 0, 0, 0, 7, 46, },
+	{ 2, 0, 0, 0, 7, 40, },
+	{ 1, 0, 0, 0, 7, 40, },
+	{ 0, 0, 0, 0, 8, 46, },
+	{ 2, 0, 0, 0, 8, 40, },
+	{ 1, 0, 0, 0, 8, 40, },
+	{ 0, 0, 0, 0, 9, 46, },
+	{ 2, 0, 0, 0, 9, 40, },
+	{ 1, 0, 0, 0, 9, 40, },
+	{ 0, 0, 0, 0, 10, 46, },
+	{ 2, 0, 0, 0, 10, 40, },
+	{ 1, 0, 0, 0, 10, 40, },
+	{ 0, 0, 0, 0, 11, 46, },
+	{ 2, 0, 0, 0, 11, 40, },
+	{ 1, 0, 0, 0, 11, 40, },
+	{ 0, 0, 0, 0, 12, 63, },
+	{ 2, 0, 0, 0, 12, 40, },
+	{ 1, 0, 0, 0, 12, 40, },
+	{ 0, 0, 0, 0, 13, 63, },
+	{ 2, 0, 0, 0, 13, 40, },
+	{ 1, 0, 0, 0, 13, 40, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 40, },
+	{ 0, 0, 0, 1, 1, 46, },
+	{ 2, 0, 0, 1, 1, 40, },
+	{ 1, 0, 0, 1, 1, 40, },
+	{ 0, 0, 0, 1, 2, 46, },
+	{ 2, 0, 0, 1, 2, 40, },
+	{ 1, 0, 0, 1, 2, 40, },
+	{ 0, 0, 0, 1, 3, 46, },
+	{ 2, 0, 0, 1, 3, 40, },
+	{ 1, 0, 0, 1, 3, 40, },
+	{ 0, 0, 0, 1, 4, 46, },
+	{ 2, 0, 0, 1, 4, 40, },
+	{ 1, 0, 0, 1, 4, 40, },
+	{ 0, 0, 0, 1, 5, 46, },
+	{ 2, 0, 0, 1, 5, 40, },
+	{ 1, 0, 0, 1, 5, 40, },
+	{ 0, 0, 0, 1, 6, 46, },
+	{ 2, 0, 0, 1, 6, 40, },
+	{ 1, 0, 0, 1, 6, 40, },
+	{ 0, 0, 0, 1, 7, 46, },
+	{ 2, 0, 0, 1, 7, 40, },
+	{ 1, 0, 0, 1, 7, 40, },
+	{ 0, 0, 0, 1, 8, 46, },
+	{ 2, 0, 0, 1, 8, 40, },
+	{ 1, 0, 0, 1, 8, 40, },
+	{ 0, 0, 0, 1, 9, 46, },
+	{ 2, 0, 0, 1, 9, 40, },
+	{ 1, 0, 0, 1, 9, 40, },
+	{ 0, 0, 0, 1, 10, 46, },
+	{ 2, 0, 0, 1, 10, 40, },
+	{ 1, 0, 0, 1, 10, 40, },
+	{ 0, 0, 0, 1, 11, 46, },
+	{ 2, 0, 0, 1, 11, 40, },
+	{ 1, 0, 0, 1, 11, 40, },
+	{ 0, 0, 0, 1, 12, 63, },
+	{ 2, 0, 0, 1, 12, 40, },
+	{ 1, 0, 0, 1, 12, 40, },
+	{ 0, 0, 0, 1, 13, 63, },
+	{ 2, 0, 0, 1, 13, 40, },
+	{ 1, 0, 0, 1, 13, 40, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 63, },
+	{ 0, 0, 0, 2, 1, 46, },
+	{ 2, 0, 0, 2, 1, 40, },
+	{ 1, 0, 0, 2, 1, 40, },
+	{ 0, 0, 0, 2, 2, 46, },
+	{ 2, 0, 0, 2, 2, 40, },
+	{ 1, 0, 0, 2, 2, 40, },
+	{ 0, 0, 0, 2, 3, 46, },
+	{ 2, 0, 0, 2, 3, 40, },
+	{ 1, 0, 0, 2, 3, 40, },
+	{ 0, 0, 0, 2, 4, 46, },
+	{ 2, 0, 0, 2, 4, 40, },
+	{ 1, 0, 0, 2, 4, 40, },
+	{ 0, 0, 0, 2, 5, 46, },
+	{ 2, 0, 0, 2, 5, 40, },
+	{ 1, 0, 0, 2, 5, 40, },
+	{ 0, 0, 0, 2, 6, 46, },
+	{ 2, 0, 0, 2, 6, 40, },
+	{ 1, 0, 0, 2, 6, 40, },
+	{ 0, 0, 0, 2, 7, 46, },
+	{ 2, 0, 0, 2, 7, 40, },
+	{ 1, 0, 0, 2, 7, 40, },
+	{ 0, 0, 0, 2, 8, 46, },
+	{ 2, 0, 0, 2, 8, 40, },
+	{ 1, 0, 0, 2, 8, 40, },
+	{ 0, 0, 0, 2, 9, 46, },
+	{ 2, 0, 0, 2, 9, 40, },
+	{ 1, 0, 0, 2, 9, 40, },
+	{ 0, 0, 0, 2, 10, 46, },
+	{ 2, 0, 0, 2, 10, 40, },
+	{ 1, 0, 0, 2, 10, 40, },
+	{ 0, 0, 0, 2, 11, 46, },
+	{ 2, 0, 0, 2, 11, 40, },
+	{ 1, 0, 0, 2, 11, 40, },
+	{ 0, 0, 0, 2, 12, 63, },
+	{ 2, 0, 0, 2, 12, 40, },
+	{ 1, 0, 0, 2, 12, 40, },
+	{ 0, 0, 0, 2, 13, 63, },
+	{ 2, 0, 0, 2, 13, 40, },
+	{ 1, 0, 0, 2, 13, 40, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 63, },
+	{ 0, 0, 0, 3, 1, 46, },
+	{ 2, 0, 0, 3, 1, 40, },
+	{ 1, 0, 0, 3, 1, 40, },
+	{ 0, 0, 0, 3, 2, 46, },
+	{ 2, 0, 0, 3, 2, 40, },
+	{ 1, 0, 0, 3, 2, 40, },
+	{ 0, 0, 0, 3, 3, 46, },
+	{ 2, 0, 0, 3, 3, 40, },
+	{ 1, 0, 0, 3, 3, 40, },
+	{ 0, 0, 0, 3, 4, 46, },
+	{ 2, 0, 0, 3, 4, 40, },
+	{ 1, 0, 0, 3, 4, 40, },
+	{ 0, 0, 0, 3, 5, 46, },
+	{ 2, 0, 0, 3, 5, 40, },
+	{ 1, 0, 0, 3, 5, 40, },
+	{ 0, 0, 0, 3, 6, 46, },
+	{ 2, 0, 0, 3, 6, 40, },
+	{ 1, 0, 0, 3, 6, 40, },
+	{ 0, 0, 0, 3, 7, 46, },
+	{ 2, 0, 0, 3, 7, 40, },
+	{ 1, 0, 0, 3, 7, 40, },
+	{ 0, 0, 0, 3, 8, 46, },
+	{ 2, 0, 0, 3, 8, 40, },
+	{ 1, 0, 0, 3, 8, 40, },
+	{ 0, 0, 0, 3, 9, 46, },
+	{ 2, 0, 0, 3, 9, 40, },
+	{ 1, 0, 0, 3, 9, 40, },
+	{ 0, 0, 0, 3, 10, 46, },
+	{ 2, 0, 0, 3, 10, 40, },
+	{ 1, 0, 0, 3, 10, 40, },
+	{ 0, 0, 0, 3, 11, 46, },
+	{ 2, 0, 0, 3, 11, 40, },
+	{ 1, 0, 0, 3, 11, 40, },
+	{ 0, 0, 0, 3, 12, 63, },
+	{ 2, 0, 0, 3, 12, 40, },
+	{ 1, 0, 0, 3, 12, 40, },
+	{ 0, 0, 0, 3, 13, 63, },
+	{ 2, 0, 0, 3, 13, 40, },
+	{ 1, 0, 0, 3, 13, 40, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 63, },
+	{ 0, 0, 0, 6, 1, 46, },
+	{ 2, 0, 0, 6, 1, 40, },
+	{ 1, 0, 0, 6, 1, 40, },
+	{ 0, 0, 0, 6, 2, 46, },
+	{ 2, 0, 0, 6, 2, 40, },
+	{ 1, 0, 0, 6, 2, 40, },
+	{ 0, 0, 0, 6, 3, 46, },
+	{ 2, 0, 0, 6, 3, 40, },
+	{ 1, 0, 0, 6, 3, 40, },
+	{ 0, 0, 0, 6, 4, 46, },
+	{ 2, 0, 0, 6, 4, 40, },
+	{ 1, 0, 0, 6, 4, 40, },
+	{ 0, 0, 0, 6, 5, 46, },
+	{ 2, 0, 0, 6, 5, 40, },
+	{ 1, 0, 0, 6, 5, 40, },
+	{ 0, 0, 0, 6, 6, 46, },
+	{ 2, 0, 0, 6, 6, 40, },
+	{ 1, 0, 0, 6, 6, 40, },
+	{ 0, 0, 0, 6, 7, 46, },
+	{ 2, 0, 0, 6, 7, 40, },
+	{ 1, 0, 0, 6, 7, 40, },
+	{ 0, 0, 0, 6, 8, 46, },
+	{ 2, 0, 0, 6, 8, 40, },
+	{ 1, 0, 0, 6, 8, 40, },
+	{ 0, 0, 0, 6, 9, 46, },
+	{ 2, 0, 0, 6, 9, 40, },
+	{ 1, 0, 0, 6, 9, 40, },
+	{ 0, 0, 0, 6, 10, 46, },
+	{ 2, 0, 0, 6, 10, 40, },
+	{ 1, 0, 0, 6, 10, 40, },
+	{ 0, 0, 0, 6, 11, 46, },
+	{ 2, 0, 0, 6, 11, 40, },
+	{ 1, 0, 0, 6, 11, 40, },
+	{ 0, 0, 0, 6, 12, 63, },
+	{ 2, 0, 0, 6, 12, 40, },
+	{ 1, 0, 0, 6, 12, 40, },
+	{ 0, 0, 0, 6, 13, 63, },
+	{ 2, 0, 0, 6, 13, 40, },
+	{ 1, 0, 0, 6, 13, 40, },
+	{ 0, 0, 0, 6, 14, 63, },
+	{ 2, 0, 0, 6, 14, 63, },
+	{ 1, 0, 0, 6, 14, 63, },
+	{ 0, 0, 0, 7, 1, 46, },
+	{ 2, 0, 0, 7, 1, 40, },
+	{ 1, 0, 0, 7, 1, 40, },
+	{ 0, 0, 0, 7, 2, 46, },
+	{ 2, 0, 0, 7, 2, 40, },
+	{ 1, 0, 0, 7, 2, 40, },
+	{ 0, 0, 0, 7, 3, 46, },
+	{ 2, 0, 0, 7, 3, 40, },
+	{ 1, 0, 0, 7, 3, 40, },
+	{ 0, 0, 0, 7, 4, 46, },
+	{ 2, 0, 0, 7, 4, 40, },
+	{ 1, 0, 0, 7, 4, 40, },
+	{ 0, 0, 0, 7, 5, 46, },
+	{ 2, 0, 0, 7, 5, 40, },
+	{ 1, 0, 0, 7, 5, 40, },
+	{ 0, 0, 0, 7, 6, 46, },
+	{ 2, 0, 0, 7, 6, 40, },
+	{ 1, 0, 0, 7, 6, 40, },
+	{ 0, 0, 0, 7, 7, 46, },
+	{ 2, 0, 0, 7, 7, 40, },
+	{ 1, 0, 0, 7, 7, 40, },
+	{ 0, 0, 0, 7, 8, 46, },
+	{ 2, 0, 0, 7, 8, 40, },
+	{ 1, 0, 0, 7, 8, 40, },
+	{ 0, 0, 0, 7, 9, 46, },
+	{ 2, 0, 0, 7, 9, 40, },
+	{ 1, 0, 0, 7, 9, 40, },
+	{ 0, 0, 0, 7, 10, 46, },
+	{ 2, 0, 0, 7, 10, 40, },
+	{ 1, 0, 0, 7, 10, 40, },
+	{ 0, 0, 0, 7, 11, 46, },
+	{ 2, 0, 0, 7, 11, 40, },
+	{ 1, 0, 0, 7, 11, 40, },
+	{ 0, 0, 0, 7, 12, 63, },
+	{ 2, 0, 0, 7, 12, 40, },
+	{ 1, 0, 0, 7, 12, 40, },
+	{ 0, 0, 0, 7, 13, 63, },
+	{ 2, 0, 0, 7, 13, 40, },
+	{ 1, 0, 0, 7, 13, 40, },
+	{ 0, 0, 0, 7, 14, 63, },
+	{ 2, 0, 0, 7, 14, 63, },
+	{ 1, 0, 0, 7, 14, 63, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 46, },
+	{ 2, 0, 1, 2, 3, 40, },
+	{ 1, 0, 1, 2, 3, 40, },
+	{ 0, 0, 1, 2, 4, 46, },
+	{ 2, 0, 1, 2, 4, 40, },
+	{ 1, 0, 1, 2, 4, 40, },
+	{ 0, 0, 1, 2, 5, 46, },
+	{ 2, 0, 1, 2, 5, 40, },
+	{ 1, 0, 1, 2, 5, 40, },
+	{ 0, 0, 1, 2, 6, 46, },
+	{ 2, 0, 1, 2, 6, 40, },
+	{ 1, 0, 1, 2, 6, 40, },
+	{ 0, 0, 1, 2, 7, 46, },
+	{ 2, 0, 1, 2, 7, 40, },
+	{ 1, 0, 1, 2, 7, 40, },
+	{ 0, 0, 1, 2, 8, 46, },
+	{ 2, 0, 1, 2, 8, 40, },
+	{ 1, 0, 1, 2, 8, 40, },
+	{ 0, 0, 1, 2, 9, 46, },
+	{ 2, 0, 1, 2, 9, 40, },
+	{ 1, 0, 1, 2, 9, 40, },
+	{ 0, 0, 1, 2, 10, 46, },
+	{ 2, 0, 1, 2, 10, 40, },
+	{ 1, 0, 1, 2, 10, 40, },
+	{ 0, 0, 1, 2, 11, 46, },
+	{ 2, 0, 1, 2, 11, 40, },
+	{ 1, 0, 1, 2, 11, 40, },
+	{ 0, 0, 1, 2, 12, 63, },
+	{ 2, 0, 1, 2, 12, 40, },
+	{ 1, 0, 1, 2, 12, 40, },
+	{ 0, 0, 1, 2, 13, 63, },
+	{ 2, 0, 1, 2, 13, 40, },
+	{ 1, 0, 1, 2, 13, 40, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 46, },
+	{ 2, 0, 1, 3, 3, 40, },
+	{ 1, 0, 1, 3, 3, 40, },
+	{ 0, 0, 1, 3, 4, 46, },
+	{ 2, 0, 1, 3, 4, 40, },
+	{ 1, 0, 1, 3, 4, 40, },
+	{ 0, 0, 1, 3, 5, 46, },
+	{ 2, 0, 1, 3, 5, 40, },
+	{ 1, 0, 1, 3, 5, 40, },
+	{ 0, 0, 1, 3, 6, 46, },
+	{ 2, 0, 1, 3, 6, 40, },
+	{ 1, 0, 1, 3, 6, 40, },
+	{ 0, 0, 1, 3, 7, 46, },
+	{ 2, 0, 1, 3, 7, 40, },
+	{ 1, 0, 1, 3, 7, 40, },
+	{ 0, 0, 1, 3, 8, 46, },
+	{ 2, 0, 1, 3, 8, 40, },
+	{ 1, 0, 1, 3, 8, 40, },
+	{ 0, 0, 1, 3, 9, 46, },
+	{ 2, 0, 1, 3, 9, 40, },
+	{ 1, 0, 1, 3, 9, 40, },
+	{ 0, 0, 1, 3, 10, 46, },
+	{ 2, 0, 1, 3, 10, 40, },
+	{ 1, 0, 1, 3, 10, 40, },
+	{ 0, 0, 1, 3, 11, 46, },
+	{ 2, 0, 1, 3, 11, 40, },
+	{ 1, 0, 1, 3, 11, 40, },
+	{ 0, 0, 1, 3, 12, 63, },
+	{ 2, 0, 1, 3, 12, 40, },
+	{ 1, 0, 1, 3, 12, 40, },
+	{ 0, 0, 1, 3, 13, 63, },
+	{ 2, 0, 1, 3, 13, 40, },
+	{ 1, 0, 1, 3, 13, 40, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 0, 1, 6, 1, 63, },
+	{ 2, 0, 1, 6, 1, 63, },
+	{ 1, 0, 1, 6, 1, 63, },
+	{ 0, 0, 1, 6, 2, 63, },
+	{ 2, 0, 1, 6, 2, 63, },
+	{ 1, 0, 1, 6, 2, 63, },
+	{ 0, 0, 1, 6, 3, 46, },
+	{ 2, 0, 1, 6, 3, 40, },
+	{ 1, 0, 1, 6, 3, 40, },
+	{ 0, 0, 1, 6, 4, 46, },
+	{ 2, 0, 1, 6, 4, 40, },
+	{ 1, 0, 1, 6, 4, 40, },
+	{ 0, 0, 1, 6, 5, 46, },
+	{ 2, 0, 1, 6, 5, 40, },
+	{ 1, 0, 1, 6, 5, 40, },
+	{ 0, 0, 1, 6, 6, 46, },
+	{ 2, 0, 1, 6, 6, 40, },
+	{ 1, 0, 1, 6, 6, 40, },
+	{ 0, 0, 1, 6, 7, 46, },
+	{ 2, 0, 1, 6, 7, 40, },
+	{ 1, 0, 1, 6, 7, 40, },
+	{ 0, 0, 1, 6, 8, 46, },
+	{ 2, 0, 1, 6, 8, 40, },
+	{ 1, 0, 1, 6, 8, 40, },
+	{ 0, 0, 1, 6, 9, 46, },
+	{ 2, 0, 1, 6, 9, 40, },
+	{ 1, 0, 1, 6, 9, 40, },
+	{ 0, 0, 1, 6, 10, 46, },
+	{ 2, 0, 1, 6, 10, 40, },
+	{ 1, 0, 1, 6, 10, 40, },
+	{ 0, 0, 1, 6, 11, 46, },
+	{ 2, 0, 1, 6, 11, 40, },
+	{ 1, 0, 1, 6, 11, 40, },
+	{ 0, 0, 1, 6, 12, 63, },
+	{ 2, 0, 1, 6, 12, 40, },
+	{ 1, 0, 1, 6, 12, 40, },
+	{ 0, 0, 1, 6, 13, 63, },
+	{ 2, 0, 1, 6, 13, 40, },
+	{ 1, 0, 1, 6, 13, 40, },
+	{ 0, 0, 1, 6, 14, 63, },
+	{ 2, 0, 1, 6, 14, 63, },
+	{ 1, 0, 1, 6, 14, 63, },
+	{ 0, 0, 1, 7, 1, 63, },
+	{ 2, 0, 1, 7, 1, 63, },
+	{ 1, 0, 1, 7, 1, 63, },
+	{ 0, 0, 1, 7, 2, 63, },
+	{ 2, 0, 1, 7, 2, 63, },
+	{ 1, 0, 1, 7, 2, 63, },
+	{ 0, 0, 1, 7, 3, 46, },
+	{ 2, 0, 1, 7, 3, 40, },
+	{ 1, 0, 1, 7, 3, 40, },
+	{ 0, 0, 1, 7, 4, 46, },
+	{ 2, 0, 1, 7, 4, 40, },
+	{ 1, 0, 1, 7, 4, 40, },
+	{ 0, 0, 1, 7, 5, 46, },
+	{ 2, 0, 1, 7, 5, 40, },
+	{ 1, 0, 1, 7, 5, 40, },
+	{ 0, 0, 1, 7, 6, 46, },
+	{ 2, 0, 1, 7, 6, 40, },
+	{ 1, 0, 1, 7, 6, 40, },
+	{ 0, 0, 1, 7, 7, 46, },
+	{ 2, 0, 1, 7, 7, 40, },
+	{ 1, 0, 1, 7, 7, 40, },
+	{ 0, 0, 1, 7, 8, 46, },
+	{ 2, 0, 1, 7, 8, 40, },
+	{ 1, 0, 1, 7, 8, 40, },
+	{ 0, 0, 1, 7, 9, 46, },
+	{ 2, 0, 1, 7, 9, 40, },
+	{ 1, 0, 1, 7, 9, 40, },
+	{ 0, 0, 1, 7, 10, 46, },
+	{ 2, 0, 1, 7, 10, 40, },
+	{ 1, 0, 1, 7, 10, 40, },
+	{ 0, 0, 1, 7, 11, 46, },
+	{ 2, 0, 1, 7, 11, 40, },
+	{ 1, 0, 1, 7, 11, 40, },
+	{ 0, 0, 1, 7, 12, 63, },
+	{ 2, 0, 1, 7, 12, 40, },
+	{ 1, 0, 1, 7, 12, 40, },
+	{ 0, 0, 1, 7, 13, 63, },
+	{ 2, 0, 1, 7, 13, 40, },
+	{ 1, 0, 1, 7, 13, 40, },
+	{ 0, 0, 1, 7, 14, 63, },
+	{ 2, 0, 1, 7, 14, 63, },
+	{ 1, 0, 1, 7, 14, 63, },
+	{ 0, 1, 0, 1, 36, 46, },
+	{ 2, 1, 0, 1, 36, 40, },
+	{ 1, 1, 0, 1, 36, 40, },
+	{ 0, 1, 0, 1, 40, 46, },
+	{ 2, 1, 0, 1, 40, 40, },
+	{ 1, 1, 0, 1, 40, 40, },
+	{ 0, 1, 0, 1, 44, 46, },
+	{ 2, 1, 0, 1, 44, 40, },
+	{ 1, 1, 0, 1, 44, 40, },
+	{ 0, 1, 0, 1, 48, 46, },
+	{ 2, 1, 0, 1, 48, 40, },
+	{ 1, 1, 0, 1, 48, 40, },
+	{ 0, 1, 0, 1, 52, 46, },
+	{ 2, 1, 0, 1, 52, 40, },
+	{ 1, 1, 0, 1, 52, 40, },
+	{ 0, 1, 0, 1, 56, 46, },
+	{ 2, 1, 0, 1, 56, 40, },
+	{ 1, 1, 0, 1, 56, 40, },
+	{ 0, 1, 0, 1, 60, 46, },
+	{ 2, 1, 0, 1, 60, 40, },
+	{ 1, 1, 0, 1, 60, 40, },
+	{ 0, 1, 0, 1, 64, 46, },
+	{ 2, 1, 0, 1, 64, 40, },
+	{ 1, 1, 0, 1, 64, 40, },
+	{ 0, 1, 0, 1, 100, 46, },
+	{ 2, 1, 0, 1, 100, 40, },
+	{ 1, 1, 0, 1, 100, 40, },
+	{ 0, 1, 0, 1, 104, 46, },
+	{ 2, 1, 0, 1, 104, 40, },
+	{ 1, 1, 0, 1, 104, 40, },
+	{ 0, 1, 0, 1, 108, 46, },
+	{ 2, 1, 0, 1, 108, 40, },
+	{ 1, 1, 0, 1, 108, 40, },
+	{ 0, 1, 0, 1, 112, 46, },
+	{ 2, 1, 0, 1, 112, 40, },
+	{ 1, 1, 0, 1, 112, 40, },
+	{ 0, 1, 0, 1, 116, 46, },
+	{ 2, 1, 0, 1, 116, 40, },
+	{ 1, 1, 0, 1, 116, 40, },
+	{ 0, 1, 0, 1, 120, 46, },
+	{ 2, 1, 0, 1, 120, 40, },
+	{ 1, 1, 0, 1, 120, 40, },
+	{ 0, 1, 0, 1, 124, 46, },
+	{ 2, 1, 0, 1, 124, 40, },
+	{ 1, 1, 0, 1, 124, 40, },
+	{ 0, 1, 0, 1, 128, 46, },
+	{ 2, 1, 0, 1, 128, 40, },
+	{ 1, 1, 0, 1, 128, 40, },
+	{ 0, 1, 0, 1, 132, 46, },
+	{ 2, 1, 0, 1, 132, 40, },
+	{ 1, 1, 0, 1, 132, 40, },
+	{ 0, 1, 0, 1, 136, 46, },
+	{ 2, 1, 0, 1, 136, 40, },
+	{ 1, 1, 0, 1, 136, 40, },
+	{ 0, 1, 0, 1, 140, 46, },
+	{ 2, 1, 0, 1, 140, 40, },
+	{ 1, 1, 0, 1, 140, 40, },
+	{ 0, 1, 0, 1, 149, 46, },
+	{ 2, 1, 0, 1, 149, 40, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 46, },
+	{ 2, 1, 0, 1, 153, 40, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 46, },
+	{ 2, 1, 0, 1, 157, 40, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 46, },
+	{ 2, 1, 0, 1, 161, 40, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 46, },
+	{ 2, 1, 0, 1, 165, 40, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 46, },
+	{ 2, 1, 0, 2, 36, 40, },
+	{ 1, 1, 0, 2, 36, 40, },
+	{ 0, 1, 0, 2, 40, 46, },
+	{ 2, 1, 0, 2, 40, 40, },
+	{ 1, 1, 0, 2, 40, 40, },
+	{ 0, 1, 0, 2, 44, 46, },
+	{ 2, 1, 0, 2, 44, 40, },
+	{ 1, 1, 0, 2, 44, 40, },
+	{ 0, 1, 0, 2, 48, 46, },
+	{ 2, 1, 0, 2, 48, 40, },
+	{ 1, 1, 0, 2, 48, 40, },
+	{ 0, 1, 0, 2, 52, 46, },
+	{ 2, 1, 0, 2, 52, 40, },
+	{ 1, 1, 0, 2, 52, 40, },
+	{ 0, 1, 0, 2, 56, 46, },
+	{ 2, 1, 0, 2, 56, 40, },
+	{ 1, 1, 0, 2, 56, 40, },
+	{ 0, 1, 0, 2, 60, 46, },
+	{ 2, 1, 0, 2, 60, 40, },
+	{ 1, 1, 0, 2, 60, 40, },
+	{ 0, 1, 0, 2, 64, 46, },
+	{ 2, 1, 0, 2, 64, 40, },
+	{ 1, 1, 0, 2, 64, 40, },
+	{ 0, 1, 0, 2, 100, 46, },
+	{ 2, 1, 0, 2, 100, 40, },
+	{ 1, 1, 0, 2, 100, 40, },
+	{ 0, 1, 0, 2, 104, 46, },
+	{ 2, 1, 0, 2, 104, 40, },
+	{ 1, 1, 0, 2, 104, 40, },
+	{ 0, 1, 0, 2, 108, 46, },
+	{ 2, 1, 0, 2, 108, 40, },
+	{ 1, 1, 0, 2, 108, 40, },
+	{ 0, 1, 0, 2, 112, 46, },
+	{ 2, 1, 0, 2, 112, 40, },
+	{ 1, 1, 0, 2, 112, 40, },
+	{ 0, 1, 0, 2, 116, 46, },
+	{ 2, 1, 0, 2, 116, 40, },
+	{ 1, 1, 0, 2, 116, 40, },
+	{ 0, 1, 0, 2, 120, 46, },
+	{ 2, 1, 0, 2, 120, 40, },
+	{ 1, 1, 0, 2, 120, 40, },
+	{ 0, 1, 0, 2, 124, 46, },
+	{ 2, 1, 0, 2, 124, 40, },
+	{ 1, 1, 0, 2, 124, 40, },
+	{ 0, 1, 0, 2, 128, 46, },
+	{ 2, 1, 0, 2, 128, 40, },
+	{ 1, 1, 0, 2, 128, 40, },
+	{ 0, 1, 0, 2, 132, 46, },
+	{ 2, 1, 0, 2, 132, 40, },
+	{ 1, 1, 0, 2, 132, 40, },
+	{ 0, 1, 0, 2, 136, 46, },
+	{ 2, 1, 0, 2, 136, 40, },
+	{ 1, 1, 0, 2, 136, 40, },
+	{ 0, 1, 0, 2, 140, 46, },
+	{ 2, 1, 0, 2, 140, 40, },
+	{ 1, 1, 0, 2, 140, 40, },
+	{ 0, 1, 0, 2, 149, 46, },
+	{ 2, 1, 0, 2, 149, 40, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 46, },
+	{ 2, 1, 0, 2, 153, 40, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 46, },
+	{ 2, 1, 0, 2, 157, 40, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 46, },
+	{ 2, 1, 0, 2, 161, 40, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 46, },
+	{ 2, 1, 0, 2, 165, 40, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 46, },
+	{ 2, 1, 0, 3, 36, 40, },
+	{ 1, 1, 0, 3, 36, 40, },
+	{ 0, 1, 0, 3, 40, 46, },
+	{ 2, 1, 0, 3, 40, 40, },
+	{ 1, 1, 0, 3, 40, 40, },
+	{ 0, 1, 0, 3, 44, 46, },
+	{ 2, 1, 0, 3, 44, 40, },
+	{ 1, 1, 0, 3, 44, 40, },
+	{ 0, 1, 0, 3, 48, 46, },
+	{ 2, 1, 0, 3, 48, 40, },
+	{ 1, 1, 0, 3, 48, 40, },
+	{ 0, 1, 0, 3, 52, 46, },
+	{ 2, 1, 0, 3, 52, 40, },
+	{ 1, 1, 0, 3, 52, 40, },
+	{ 0, 1, 0, 3, 56, 46, },
+	{ 2, 1, 0, 3, 56, 40, },
+	{ 1, 1, 0, 3, 56, 40, },
+	{ 0, 1, 0, 3, 60, 46, },
+	{ 2, 1, 0, 3, 60, 40, },
+	{ 1, 1, 0, 3, 60, 40, },
+	{ 0, 1, 0, 3, 64, 46, },
+	{ 2, 1, 0, 3, 64, 40, },
+	{ 1, 1, 0, 3, 64, 40, },
+	{ 0, 1, 0, 3, 100, 46, },
+	{ 2, 1, 0, 3, 100, 40, },
+	{ 1, 1, 0, 3, 100, 40, },
+	{ 0, 1, 0, 3, 104, 46, },
+	{ 2, 1, 0, 3, 104, 40, },
+	{ 1, 1, 0, 3, 104, 40, },
+	{ 0, 1, 0, 3, 108, 46, },
+	{ 2, 1, 0, 3, 108, 40, },
+	{ 1, 1, 0, 3, 108, 40, },
+	{ 0, 1, 0, 3, 112, 46, },
+	{ 2, 1, 0, 3, 112, 40, },
+	{ 1, 1, 0, 3, 112, 40, },
+	{ 0, 1, 0, 3, 116, 46, },
+	{ 2, 1, 0, 3, 116, 40, },
+	{ 1, 1, 0, 3, 116, 40, },
+	{ 0, 1, 0, 3, 120, 46, },
+	{ 2, 1, 0, 3, 120, 40, },
+	{ 1, 1, 0, 3, 120, 40, },
+	{ 0, 1, 0, 3, 124, 46, },
+	{ 2, 1, 0, 3, 124, 40, },
+	{ 1, 1, 0, 3, 124, 40, },
+	{ 0, 1, 0, 3, 128, 46, },
+	{ 2, 1, 0, 3, 128, 40, },
+	{ 1, 1, 0, 3, 128, 40, },
+	{ 0, 1, 0, 3, 132, 46, },
+	{ 2, 1, 0, 3, 132, 40, },
+	{ 1, 1, 0, 3, 132, 40, },
+	{ 0, 1, 0, 3, 136, 46, },
+	{ 2, 1, 0, 3, 136, 40, },
+	{ 1, 1, 0, 3, 136, 40, },
+	{ 0, 1, 0, 3, 140, 46, },
+	{ 2, 1, 0, 3, 140, 40, },
+	{ 1, 1, 0, 3, 140, 40, },
+	{ 0, 1, 0, 3, 149, 46, },
+	{ 2, 1, 0, 3, 149, 40, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 46, },
+	{ 2, 1, 0, 3, 153, 40, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 46, },
+	{ 2, 1, 0, 3, 157, 40, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 46, },
+	{ 2, 1, 0, 3, 161, 40, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 46, },
+	{ 2, 1, 0, 3, 165, 40, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 0, 6, 36, 46, },
+	{ 2, 1, 0, 6, 36, 40, },
+	{ 1, 1, 0, 6, 36, 40, },
+	{ 0, 1, 0, 6, 40, 46, },
+	{ 2, 1, 0, 6, 40, 40, },
+	{ 1, 1, 0, 6, 40, 40, },
+	{ 0, 1, 0, 6, 44, 46, },
+	{ 2, 1, 0, 6, 44, 40, },
+	{ 1, 1, 0, 6, 44, 40, },
+	{ 0, 1, 0, 6, 48, 46, },
+	{ 2, 1, 0, 6, 48, 40, },
+	{ 1, 1, 0, 6, 48, 40, },
+	{ 0, 1, 0, 6, 52, 46, },
+	{ 2, 1, 0, 6, 52, 40, },
+	{ 1, 1, 0, 6, 52, 40, },
+	{ 0, 1, 0, 6, 56, 46, },
+	{ 2, 1, 0, 6, 56, 40, },
+	{ 1, 1, 0, 6, 56, 40, },
+	{ 0, 1, 0, 6, 60, 46, },
+	{ 2, 1, 0, 6, 60, 40, },
+	{ 1, 1, 0, 6, 60, 40, },
+	{ 0, 1, 0, 6, 64, 46, },
+	{ 2, 1, 0, 6, 64, 40, },
+	{ 1, 1, 0, 6, 64, 40, },
+	{ 0, 1, 0, 6, 100, 46, },
+	{ 2, 1, 0, 6, 100, 40, },
+	{ 1, 1, 0, 6, 100, 40, },
+	{ 0, 1, 0, 6, 104, 46, },
+	{ 2, 1, 0, 6, 104, 40, },
+	{ 1, 1, 0, 6, 104, 40, },
+	{ 0, 1, 0, 6, 108, 46, },
+	{ 2, 1, 0, 6, 108, 40, },
+	{ 1, 1, 0, 6, 108, 40, },
+	{ 0, 1, 0, 6, 112, 46, },
+	{ 2, 1, 0, 6, 112, 40, },
+	{ 1, 1, 0, 6, 112, 40, },
+	{ 0, 1, 0, 6, 116, 46, },
+	{ 2, 1, 0, 6, 116, 40, },
+	{ 1, 1, 0, 6, 116, 40, },
+	{ 0, 1, 0, 6, 120, 46, },
+	{ 2, 1, 0, 6, 120, 40, },
+	{ 1, 1, 0, 6, 120, 40, },
+	{ 0, 1, 0, 6, 124, 46, },
+	{ 2, 1, 0, 6, 124, 40, },
+	{ 1, 1, 0, 6, 124, 40, },
+	{ 0, 1, 0, 6, 128, 46, },
+	{ 2, 1, 0, 6, 128, 40, },
+	{ 1, 1, 0, 6, 128, 40, },
+	{ 0, 1, 0, 6, 132, 46, },
+	{ 2, 1, 0, 6, 132, 40, },
+	{ 1, 1, 0, 6, 132, 40, },
+	{ 0, 1, 0, 6, 136, 46, },
+	{ 2, 1, 0, 6, 136, 40, },
+	{ 1, 1, 0, 6, 136, 40, },
+	{ 0, 1, 0, 6, 140, 46, },
+	{ 2, 1, 0, 6, 140, 40, },
+	{ 1, 1, 0, 6, 140, 40, },
+	{ 0, 1, 0, 6, 149, 46, },
+	{ 2, 1, 0, 6, 149, 40, },
+	{ 1, 1, 0, 6, 149, 63, },
+	{ 0, 1, 0, 6, 153, 46, },
+	{ 2, 1, 0, 6, 153, 40, },
+	{ 1, 1, 0, 6, 153, 63, },
+	{ 0, 1, 0, 6, 157, 46, },
+	{ 2, 1, 0, 6, 157, 40, },
+	{ 1, 1, 0, 6, 157, 63, },
+	{ 0, 1, 0, 6, 161, 46, },
+	{ 2, 1, 0, 6, 161, 40, },
+	{ 1, 1, 0, 6, 161, 63, },
+	{ 0, 1, 0, 6, 165, 46, },
+	{ 2, 1, 0, 6, 165, 40, },
+	{ 1, 1, 0, 6, 165, 63, },
+	{ 0, 1, 0, 7, 36, 46, },
+	{ 2, 1, 0, 7, 36, 40, },
+	{ 1, 1, 0, 7, 36, 40, },
+	{ 0, 1, 0, 7, 40, 46, },
+	{ 2, 1, 0, 7, 40, 40, },
+	{ 1, 1, 0, 7, 40, 40, },
+	{ 0, 1, 0, 7, 44, 46, },
+	{ 2, 1, 0, 7, 44, 40, },
+	{ 1, 1, 0, 7, 44, 40, },
+	{ 0, 1, 0, 7, 48, 46, },
+	{ 2, 1, 0, 7, 48, 40, },
+	{ 1, 1, 0, 7, 48, 40, },
+	{ 0, 1, 0, 7, 52, 46, },
+	{ 2, 1, 0, 7, 52, 40, },
+	{ 1, 1, 0, 7, 52, 40, },
+	{ 0, 1, 0, 7, 56, 46, },
+	{ 2, 1, 0, 7, 56, 40, },
+	{ 1, 1, 0, 7, 56, 40, },
+	{ 0, 1, 0, 7, 60, 46, },
+	{ 2, 1, 0, 7, 60, 40, },
+	{ 1, 1, 0, 7, 60, 40, },
+	{ 0, 1, 0, 7, 64, 46, },
+	{ 2, 1, 0, 7, 64, 40, },
+	{ 1, 1, 0, 7, 64, 40, },
+	{ 0, 1, 0, 7, 100, 46, },
+	{ 2, 1, 0, 7, 100, 40, },
+	{ 1, 1, 0, 7, 100, 40, },
+	{ 0, 1, 0, 7, 104, 46, },
+	{ 2, 1, 0, 7, 104, 40, },
+	{ 1, 1, 0, 7, 104, 40, },
+	{ 0, 1, 0, 7, 108, 46, },
+	{ 2, 1, 0, 7, 108, 40, },
+	{ 1, 1, 0, 7, 108, 40, },
+	{ 0, 1, 0, 7, 112, 46, },
+	{ 2, 1, 0, 7, 112, 40, },
+	{ 1, 1, 0, 7, 112, 40, },
+	{ 0, 1, 0, 7, 116, 46, },
+	{ 2, 1, 0, 7, 116, 40, },
+	{ 1, 1, 0, 7, 116, 40, },
+	{ 0, 1, 0, 7, 120, 46, },
+	{ 2, 1, 0, 7, 120, 40, },
+	{ 1, 1, 0, 7, 120, 40, },
+	{ 0, 1, 0, 7, 124, 46, },
+	{ 2, 1, 0, 7, 124, 40, },
+	{ 1, 1, 0, 7, 124, 40, },
+	{ 0, 1, 0, 7, 128, 46, },
+	{ 2, 1, 0, 7, 128, 40, },
+	{ 1, 1, 0, 7, 128, 40, },
+	{ 0, 1, 0, 7, 132, 46, },
+	{ 2, 1, 0, 7, 132, 40, },
+	{ 1, 1, 0, 7, 132, 40, },
+	{ 0, 1, 0, 7, 136, 46, },
+	{ 2, 1, 0, 7, 136, 40, },
+	{ 1, 1, 0, 7, 136, 40, },
+	{ 0, 1, 0, 7, 140, 46, },
+	{ 2, 1, 0, 7, 140, 40, },
+	{ 1, 1, 0, 7, 140, 40, },
+	{ 0, 1, 0, 7, 149, 46, },
+	{ 2, 1, 0, 7, 149, 40, },
+	{ 1, 1, 0, 7, 149, 63, },
+	{ 0, 1, 0, 7, 153, 46, },
+	{ 2, 1, 0, 7, 153, 40, },
+	{ 1, 1, 0, 7, 153, 63, },
+	{ 0, 1, 0, 7, 157, 46, },
+	{ 2, 1, 0, 7, 157, 40, },
+	{ 1, 1, 0, 7, 157, 63, },
+	{ 0, 1, 0, 7, 161, 46, },
+	{ 2, 1, 0, 7, 161, 40, },
+	{ 1, 1, 0, 7, 161, 63, },
+	{ 0, 1, 0, 7, 165, 46, },
+	{ 2, 1, 0, 7, 165, 40, },
+	{ 1, 1, 0, 7, 165, 63, },
+	{ 0, 1, 1, 2, 38, 46, },
+	{ 2, 1, 1, 2, 38, 40, },
+	{ 1, 1, 1, 2, 38, 40, },
+	{ 0, 1, 1, 2, 46, 46, },
+	{ 2, 1, 1, 2, 46, 40, },
+	{ 1, 1, 1, 2, 46, 40, },
+	{ 0, 1, 1, 2, 54, 46, },
+	{ 2, 1, 1, 2, 54, 40, },
+	{ 1, 1, 1, 2, 54, 40, },
+	{ 0, 1, 1, 2, 62, 46, },
+	{ 2, 1, 1, 2, 62, 40, },
+	{ 1, 1, 1, 2, 62, 40, },
+	{ 0, 1, 1, 2, 102, 46, },
+	{ 2, 1, 1, 2, 102, 40, },
+	{ 1, 1, 1, 2, 102, 40, },
+	{ 0, 1, 1, 2, 110, 46, },
+	{ 2, 1, 1, 2, 110, 40, },
+	{ 1, 1, 1, 2, 110, 40, },
+	{ 0, 1, 1, 2, 118, 46, },
+	{ 2, 1, 1, 2, 118, 40, },
+	{ 1, 1, 1, 2, 118, 40, },
+	{ 0, 1, 1, 2, 126, 46, },
+	{ 2, 1, 1, 2, 126, 40, },
+	{ 1, 1, 1, 2, 126, 40, },
+	{ 0, 1, 1, 2, 134, 46, },
+	{ 2, 1, 1, 2, 134, 40, },
+	{ 1, 1, 1, 2, 134, 40, },
+	{ 0, 1, 1, 2, 151, 46, },
+	{ 2, 1, 1, 2, 151, 40, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 46, },
+	{ 2, 1, 1, 2, 159, 40, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 46, },
+	{ 2, 1, 1, 3, 38, 40, },
+	{ 1, 1, 1, 3, 38, 40, },
+	{ 0, 1, 1, 3, 46, 46, },
+	{ 2, 1, 1, 3, 46, 40, },
+	{ 1, 1, 1, 3, 46, 40, },
+	{ 0, 1, 1, 3, 54, 46, },
+	{ 2, 1, 1, 3, 54, 40, },
+	{ 1, 1, 1, 3, 54, 40, },
+	{ 0, 1, 1, 3, 62, 46, },
+	{ 2, 1, 1, 3, 62, 40, },
+	{ 1, 1, 1, 3, 62, 40, },
+	{ 0, 1, 1, 3, 102, 46, },
+	{ 2, 1, 1, 3, 102, 40, },
+	{ 1, 1, 1, 3, 102, 40, },
+	{ 0, 1, 1, 3, 110, 46, },
+	{ 2, 1, 1, 3, 110, 40, },
+	{ 1, 1, 1, 3, 110, 40, },
+	{ 0, 1, 1, 3, 118, 46, },
+	{ 2, 1, 1, 3, 118, 40, },
+	{ 1, 1, 1, 3, 118, 40, },
+	{ 0, 1, 1, 3, 126, 46, },
+	{ 2, 1, 1, 3, 126, 40, },
+	{ 1, 1, 1, 3, 126, 40, },
+	{ 0, 1, 1, 3, 134, 46, },
+	{ 2, 1, 1, 3, 134, 40, },
+	{ 1, 1, 1, 3, 134, 40, },
+	{ 0, 1, 1, 3, 151, 46, },
+	{ 2, 1, 1, 3, 151, 40, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 46, },
+	{ 2, 1, 1, 3, 159, 40, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 1, 6, 38, 46, },
+	{ 2, 1, 1, 6, 38, 40, },
+	{ 1, 1, 1, 6, 38, 40, },
+	{ 0, 1, 1, 6, 46, 46, },
+	{ 2, 1, 1, 6, 46, 40, },
+	{ 1, 1, 1, 6, 46, 40, },
+	{ 0, 1, 1, 6, 54, 46, },
+	{ 2, 1, 1, 6, 54, 40, },
+	{ 1, 1, 1, 6, 54, 40, },
+	{ 0, 1, 1, 6, 62, 46, },
+	{ 2, 1, 1, 6, 62, 40, },
+	{ 1, 1, 1, 6, 62, 40, },
+	{ 0, 1, 1, 6, 102, 46, },
+	{ 2, 1, 1, 6, 102, 40, },
+	{ 1, 1, 1, 6, 102, 40, },
+	{ 0, 1, 1, 6, 110, 46, },
+	{ 2, 1, 1, 6, 110, 40, },
+	{ 1, 1, 1, 6, 110, 40, },
+	{ 0, 1, 1, 6, 118, 46, },
+	{ 2, 1, 1, 6, 118, 40, },
+	{ 1, 1, 1, 6, 118, 40, },
+	{ 0, 1, 1, 6, 126, 46, },
+	{ 2, 1, 1, 6, 126, 40, },
+	{ 1, 1, 1, 6, 126, 40, },
+	{ 0, 1, 1, 6, 134, 46, },
+	{ 2, 1, 1, 6, 134, 40, },
+	{ 1, 1, 1, 6, 134, 40, },
+	{ 0, 1, 1, 6, 151, 46, },
+	{ 2, 1, 1, 6, 151, 40, },
+	{ 1, 1, 1, 6, 151, 63, },
+	{ 0, 1, 1, 6, 159, 46, },
+	{ 2, 1, 1, 6, 159, 40, },
+	{ 1, 1, 1, 6, 159, 63, },
+	{ 0, 1, 1, 7, 38, 46, },
+	{ 2, 1, 1, 7, 38, 40, },
+	{ 1, 1, 1, 7, 38, 40, },
+	{ 0, 1, 1, 7, 46, 46, },
+	{ 2, 1, 1, 7, 46, 40, },
+	{ 1, 1, 1, 7, 46, 40, },
+	{ 0, 1, 1, 7, 54, 46, },
+	{ 2, 1, 1, 7, 54, 40, },
+	{ 1, 1, 1, 7, 54, 40, },
+	{ 0, 1, 1, 7, 62, 46, },
+	{ 2, 1, 1, 7, 62, 40, },
+	{ 1, 1, 1, 7, 62, 40, },
+	{ 0, 1, 1, 7, 102, 46, },
+	{ 2, 1, 1, 7, 102, 40, },
+	{ 1, 1, 1, 7, 102, 40, },
+	{ 0, 1, 1, 7, 110, 46, },
+	{ 2, 1, 1, 7, 110, 40, },
+	{ 1, 1, 1, 7, 110, 40, },
+	{ 0, 1, 1, 7, 118, 46, },
+	{ 2, 1, 1, 7, 118, 40, },
+	{ 1, 1, 1, 7, 118, 40, },
+	{ 0, 1, 1, 7, 126, 46, },
+	{ 2, 1, 1, 7, 126, 40, },
+	{ 1, 1, 1, 7, 126, 40, },
+	{ 0, 1, 1, 7, 134, 46, },
+	{ 2, 1, 1, 7, 134, 40, },
+	{ 1, 1, 1, 7, 134, 40, },
+	{ 0, 1, 1, 7, 151, 46, },
+	{ 2, 1, 1, 7, 151, 40, },
+	{ 1, 1, 1, 7, 151, 63, },
+	{ 0, 1, 1, 7, 159, 46, },
+	{ 2, 1, 1, 7, 159, 40, },
+	{ 1, 1, 1, 7, 159, 63, },
+	{ 0, 1, 2, 4, 42, 46, },
+	{ 2, 1, 2, 4, 42, 40, },
+	{ 1, 1, 2, 4, 42, 40, },
+	{ 0, 1, 2, 4, 58, 46, },
+	{ 2, 1, 2, 4, 58, 40, },
+	{ 1, 1, 2, 4, 58, 40, },
+	{ 0, 1, 2, 4, 106, 46, },
+	{ 2, 1, 2, 4, 106, 40, },
+	{ 1, 1, 2, 4, 106, 40, },
+	{ 0, 1, 2, 4, 122, 46, },
+	{ 2, 1, 2, 4, 122, 40, },
+	{ 1, 1, 2, 4, 122, 40, },
+	{ 0, 1, 2, 4, 155, 46, },
+	{ 2, 1, 2, 4, 155, 40, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 46, },
+	{ 2, 1, 2, 5, 42, 40, },
+	{ 1, 1, 2, 5, 42, 40, },
+	{ 0, 1, 2, 5, 58, 46, },
+	{ 2, 1, 2, 5, 58, 40, },
+	{ 1, 1, 2, 5, 58, 40, },
+	{ 0, 1, 2, 5, 106, 46, },
+	{ 2, 1, 2, 5, 106, 40, },
+	{ 1, 1, 2, 5, 106, 40, },
+	{ 0, 1, 2, 5, 122, 46, },
+	{ 2, 1, 2, 5, 122, 40, },
+	{ 1, 1, 2, 5, 122, 40, },
+	{ 0, 1, 2, 5, 155, 46, },
+	{ 2, 1, 2, 5, 155, 40, },
+	{ 1, 1, 2, 5, 155, 63, },
+	{ 0, 1, 2, 8, 42, 46, },
+	{ 2, 1, 2, 8, 42, 40, },
+	{ 1, 1, 2, 8, 42, 40, },
+	{ 0, 1, 2, 8, 58, 46, },
+	{ 2, 1, 2, 8, 58, 40, },
+	{ 1, 1, 2, 8, 58, 40, },
+	{ 0, 1, 2, 8, 106, 46, },
+	{ 2, 1, 2, 8, 106, 40, },
+	{ 1, 1, 2, 8, 106, 40, },
+	{ 0, 1, 2, 8, 122, 46, },
+	{ 2, 1, 2, 8, 122, 40, },
+	{ 1, 1, 2, 8, 122, 40, },
+	{ 0, 1, 2, 8, 155, 46, },
+	{ 2, 1, 2, 8, 155, 40, },
+	{ 1, 1, 2, 8, 155, 63, },
+	{ 0, 1, 2, 9, 42, 46, },
+	{ 2, 1, 2, 9, 42, 40, },
+	{ 1, 1, 2, 9, 42, 40, },
+	{ 0, 1, 2, 9, 58, 46, },
+	{ 2, 1, 2, 9, 58, 40, },
+	{ 1, 1, 2, 9, 58, 40, },
+	{ 0, 1, 2, 9, 106, 46, },
+	{ 2, 1, 2, 9, 106, 40, },
+	{ 1, 1, 2, 9, 106, 40, },
+	{ 0, 1, 2, 9, 122, 46, },
+	{ 2, 1, 2, 9, 122, 40, },
+	{ 1, 1, 2, 9, 122, 40, },
+	{ 0, 1, 2, 9, 155, 46, },
+	{ 2, 1, 2, 9, 155, 40, },
+	{ 1, 1, 2, 9, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8814a_txpwr_lmt_type5);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8814a_txpwr_lmt_type7[] = {
+	{ 0, 0, 0, 0, 1, 44, },
+	{ 2, 0, 0, 0, 1, 32, },
+	{ 1, 0, 0, 0, 1, 32, },
+	{ 0, 0, 0, 0, 2, 52, },
+	{ 2, 0, 0, 0, 2, 32, },
+	{ 1, 0, 0, 0, 2, 32, },
+	{ 0, 0, 0, 0, 3, 52, },
+	{ 2, 0, 0, 0, 3, 32, },
+	{ 1, 0, 0, 0, 3, 32, },
+	{ 0, 0, 0, 0, 4, 52, },
+	{ 2, 0, 0, 0, 4, 32, },
+	{ 1, 0, 0, 0, 4, 32, },
+	{ 0, 0, 0, 0, 5, 52, },
+	{ 2, 0, 0, 0, 5, 32, },
+	{ 1, 0, 0, 0, 5, 32, },
+	{ 0, 0, 0, 0, 6, 52, },
+	{ 2, 0, 0, 0, 6, 32, },
+	{ 1, 0, 0, 0, 6, 32, },
+	{ 0, 0, 0, 0, 7, 52, },
+	{ 2, 0, 0, 0, 7, 32, },
+	{ 1, 0, 0, 0, 7, 32, },
+	{ 0, 0, 0, 0, 8, 52, },
+	{ 2, 0, 0, 0, 8, 32, },
+	{ 1, 0, 0, 0, 8, 32, },
+	{ 0, 0, 0, 0, 9, 52, },
+	{ 2, 0, 0, 0, 9, 32, },
+	{ 1, 0, 0, 0, 9, 32, },
+	{ 0, 0, 0, 0, 10, 52, },
+	{ 2, 0, 0, 0, 10, 32, },
+	{ 1, 0, 0, 0, 10, 32, },
+	{ 0, 0, 0, 0, 11, 44, },
+	{ 2, 0, 0, 0, 11, 32, },
+	{ 1, 0, 0, 0, 11, 32, },
+	{ 0, 0, 0, 0, 12, 63, },
+	{ 2, 0, 0, 0, 12, 32, },
+	{ 1, 0, 0, 0, 12, 32, },
+	{ 0, 0, 0, 0, 13, 63, },
+	{ 2, 0, 0, 0, 13, 32, },
+	{ 1, 0, 0, 0, 13, 32, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 32, },
+	{ 0, 0, 0, 1, 1, 38, },
+	{ 2, 0, 0, 1, 1, 32, },
+	{ 1, 0, 0, 1, 1, 32, },
+	{ 0, 0, 0, 1, 2, 46, },
+	{ 2, 0, 0, 1, 2, 32, },
+	{ 1, 0, 0, 1, 2, 32, },
+	{ 0, 0, 0, 1, 3, 46, },
+	{ 2, 0, 0, 1, 3, 32, },
+	{ 1, 0, 0, 1, 3, 32, },
+	{ 0, 0, 0, 1, 4, 46, },
+	{ 2, 0, 0, 1, 4, 32, },
+	{ 1, 0, 0, 1, 4, 32, },
+	{ 0, 0, 0, 1, 5, 46, },
+	{ 2, 0, 0, 1, 5, 32, },
+	{ 1, 0, 0, 1, 5, 32, },
+	{ 0, 0, 0, 1, 6, 46, },
+	{ 2, 0, 0, 1, 6, 32, },
+	{ 1, 0, 0, 1, 6, 32, },
+	{ 0, 0, 0, 1, 7, 46, },
+	{ 2, 0, 0, 1, 7, 32, },
+	{ 1, 0, 0, 1, 7, 32, },
+	{ 0, 0, 0, 1, 8, 46, },
+	{ 2, 0, 0, 1, 8, 32, },
+	{ 1, 0, 0, 1, 8, 32, },
+	{ 0, 0, 0, 1, 9, 46, },
+	{ 2, 0, 0, 1, 9, 32, },
+	{ 1, 0, 0, 1, 9, 32, },
+	{ 0, 0, 0, 1, 10, 46, },
+	{ 2, 0, 0, 1, 10, 32, },
+	{ 1, 0, 0, 1, 10, 32, },
+	{ 0, 0, 0, 1, 11, 38, },
+	{ 2, 0, 0, 1, 11, 32, },
+	{ 1, 0, 0, 1, 11, 32, },
+	{ 0, 0, 0, 1, 12, 63, },
+	{ 2, 0, 0, 1, 12, 32, },
+	{ 1, 0, 0, 1, 12, 32, },
+	{ 0, 0, 0, 1, 13, 63, },
+	{ 2, 0, 0, 1, 13, 32, },
+	{ 1, 0, 0, 1, 13, 32, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 63, },
+	{ 0, 0, 0, 2, 1, 34, },
+	{ 2, 0, 0, 2, 1, 32, },
+	{ 1, 0, 0, 2, 1, 32, },
+	{ 0, 0, 0, 2, 2, 46, },
+	{ 2, 0, 0, 2, 2, 32, },
+	{ 1, 0, 0, 2, 2, 32, },
+	{ 0, 0, 0, 2, 3, 46, },
+	{ 2, 0, 0, 2, 3, 32, },
+	{ 1, 0, 0, 2, 3, 32, },
+	{ 0, 0, 0, 2, 4, 46, },
+	{ 2, 0, 0, 2, 4, 32, },
+	{ 1, 0, 0, 2, 4, 32, },
+	{ 0, 0, 0, 2, 5, 46, },
+	{ 2, 0, 0, 2, 5, 32, },
+	{ 1, 0, 0, 2, 5, 32, },
+	{ 0, 0, 0, 2, 6, 46, },
+	{ 2, 0, 0, 2, 6, 32, },
+	{ 1, 0, 0, 2, 6, 32, },
+	{ 0, 0, 0, 2, 7, 46, },
+	{ 2, 0, 0, 2, 7, 32, },
+	{ 1, 0, 0, 2, 7, 32, },
+	{ 0, 0, 0, 2, 8, 46, },
+	{ 2, 0, 0, 2, 8, 32, },
+	{ 1, 0, 0, 2, 8, 32, },
+	{ 0, 0, 0, 2, 9, 46, },
+	{ 2, 0, 0, 2, 9, 32, },
+	{ 1, 0, 0, 2, 9, 32, },
+	{ 0, 0, 0, 2, 10, 46, },
+	{ 2, 0, 0, 2, 10, 32, },
+	{ 1, 0, 0, 2, 10, 32, },
+	{ 0, 0, 0, 2, 11, 34, },
+	{ 2, 0, 0, 2, 11, 32, },
+	{ 1, 0, 0, 2, 11, 32, },
+	{ 0, 0, 0, 2, 12, 63, },
+	{ 2, 0, 0, 2, 12, 32, },
+	{ 1, 0, 0, 2, 12, 32, },
+	{ 0, 0, 0, 2, 13, 63, },
+	{ 2, 0, 0, 2, 13, 32, },
+	{ 1, 0, 0, 2, 13, 32, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 63, },
+	{ 0, 0, 0, 3, 1, 32, },
+	{ 2, 0, 0, 3, 1, 30, },
+	{ 1, 0, 0, 3, 1, 30, },
+	{ 0, 0, 0, 3, 2, 44, },
+	{ 2, 0, 0, 3, 2, 30, },
+	{ 1, 0, 0, 3, 2, 30, },
+	{ 0, 0, 0, 3, 3, 44, },
+	{ 2, 0, 0, 3, 3, 30, },
+	{ 1, 0, 0, 3, 3, 30, },
+	{ 0, 0, 0, 3, 4, 44, },
+	{ 2, 0, 0, 3, 4, 30, },
+	{ 1, 0, 0, 3, 4, 30, },
+	{ 0, 0, 0, 3, 5, 44, },
+	{ 2, 0, 0, 3, 5, 30, },
+	{ 1, 0, 0, 3, 5, 30, },
+	{ 0, 0, 0, 3, 6, 44, },
+	{ 2, 0, 0, 3, 6, 30, },
+	{ 1, 0, 0, 3, 6, 30, },
+	{ 0, 0, 0, 3, 7, 44, },
+	{ 2, 0, 0, 3, 7, 30, },
+	{ 1, 0, 0, 3, 7, 30, },
+	{ 0, 0, 0, 3, 8, 44, },
+	{ 2, 0, 0, 3, 8, 30, },
+	{ 1, 0, 0, 3, 8, 30, },
+	{ 0, 0, 0, 3, 9, 44, },
+	{ 2, 0, 0, 3, 9, 30, },
+	{ 1, 0, 0, 3, 9, 30, },
+	{ 0, 0, 0, 3, 10, 44, },
+	{ 2, 0, 0, 3, 10, 30, },
+	{ 1, 0, 0, 3, 10, 30, },
+	{ 0, 0, 0, 3, 11, 32, },
+	{ 2, 0, 0, 3, 11, 30, },
+	{ 1, 0, 0, 3, 11, 30, },
+	{ 0, 0, 0, 3, 12, 63, },
+	{ 2, 0, 0, 3, 12, 30, },
+	{ 1, 0, 0, 3, 12, 30, },
+	{ 0, 0, 0, 3, 13, 63, },
+	{ 2, 0, 0, 3, 13, 30, },
+	{ 1, 0, 0, 3, 13, 30, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 63, },
+	{ 0, 0, 0, 6, 1, 30, },
+	{ 2, 0, 0, 6, 1, 28, },
+	{ 1, 0, 0, 6, 1, 28, },
+	{ 0, 0, 0, 6, 2, 42, },
+	{ 2, 0, 0, 6, 2, 28, },
+	{ 1, 0, 0, 6, 2, 28, },
+	{ 0, 0, 0, 6, 3, 42, },
+	{ 2, 0, 0, 6, 3, 28, },
+	{ 1, 0, 0, 6, 3, 28, },
+	{ 0, 0, 0, 6, 4, 42, },
+	{ 2, 0, 0, 6, 4, 28, },
+	{ 1, 0, 0, 6, 4, 28, },
+	{ 0, 0, 0, 6, 5, 42, },
+	{ 2, 0, 0, 6, 5, 28, },
+	{ 1, 0, 0, 6, 5, 28, },
+	{ 0, 0, 0, 6, 6, 42, },
+	{ 2, 0, 0, 6, 6, 28, },
+	{ 1, 0, 0, 6, 6, 28, },
+	{ 0, 0, 0, 6, 7, 42, },
+	{ 2, 0, 0, 6, 7, 28, },
+	{ 1, 0, 0, 6, 7, 28, },
+	{ 0, 0, 0, 6, 8, 42, },
+	{ 2, 0, 0, 6, 8, 28, },
+	{ 1, 0, 0, 6, 8, 28, },
+	{ 0, 0, 0, 6, 9, 42, },
+	{ 2, 0, 0, 6, 9, 28, },
+	{ 1, 0, 0, 6, 9, 28, },
+	{ 0, 0, 0, 6, 10, 42, },
+	{ 2, 0, 0, 6, 10, 28, },
+	{ 1, 0, 0, 6, 10, 28, },
+	{ 0, 0, 0, 6, 11, 30, },
+	{ 2, 0, 0, 6, 11, 28, },
+	{ 1, 0, 0, 6, 11, 28, },
+	{ 0, 0, 0, 6, 12, 63, },
+	{ 2, 0, 0, 6, 12, 28, },
+	{ 1, 0, 0, 6, 12, 28, },
+	{ 0, 0, 0, 6, 13, 63, },
+	{ 2, 0, 0, 6, 13, 28, },
+	{ 1, 0, 0, 6, 13, 28, },
+	{ 0, 0, 0, 6, 14, 63, },
+	{ 2, 0, 0, 6, 14, 63, },
+	{ 1, 0, 0, 6, 14, 63, },
+	{ 0, 0, 0, 7, 1, 28, },
+	{ 2, 0, 0, 7, 1, 26, },
+	{ 1, 0, 0, 7, 1, 26, },
+	{ 0, 0, 0, 7, 2, 40, },
+	{ 2, 0, 0, 7, 2, 26, },
+	{ 1, 0, 0, 7, 2, 26, },
+	{ 0, 0, 0, 7, 3, 40, },
+	{ 2, 0, 0, 7, 3, 26, },
+	{ 1, 0, 0, 7, 3, 26, },
+	{ 0, 0, 0, 7, 4, 40, },
+	{ 2, 0, 0, 7, 4, 26, },
+	{ 1, 0, 0, 7, 4, 26, },
+	{ 0, 0, 0, 7, 5, 40, },
+	{ 2, 0, 0, 7, 5, 26, },
+	{ 1, 0, 0, 7, 5, 26, },
+	{ 0, 0, 0, 7, 6, 40, },
+	{ 2, 0, 0, 7, 6, 26, },
+	{ 1, 0, 0, 7, 6, 26, },
+	{ 0, 0, 0, 7, 7, 40, },
+	{ 2, 0, 0, 7, 7, 26, },
+	{ 1, 0, 0, 7, 7, 26, },
+	{ 0, 0, 0, 7, 8, 40, },
+	{ 2, 0, 0, 7, 8, 26, },
+	{ 1, 0, 0, 7, 8, 26, },
+	{ 0, 0, 0, 7, 9, 40, },
+	{ 2, 0, 0, 7, 9, 26, },
+	{ 1, 0, 0, 7, 9, 26, },
+	{ 0, 0, 0, 7, 10, 40, },
+	{ 2, 0, 0, 7, 10, 26, },
+	{ 1, 0, 0, 7, 10, 26, },
+	{ 0, 0, 0, 7, 11, 28, },
+	{ 2, 0, 0, 7, 11, 26, },
+	{ 1, 0, 0, 7, 11, 26, },
+	{ 0, 0, 0, 7, 12, 63, },
+	{ 2, 0, 0, 7, 12, 26, },
+	{ 1, 0, 0, 7, 12, 26, },
+	{ 0, 0, 0, 7, 13, 63, },
+	{ 2, 0, 0, 7, 13, 26, },
+	{ 1, 0, 0, 7, 13, 26, },
+	{ 0, 0, 0, 7, 14, 63, },
+	{ 2, 0, 0, 7, 14, 63, },
+	{ 1, 0, 0, 7, 14, 63, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 36, },
+	{ 2, 0, 1, 2, 3, 32, },
+	{ 1, 0, 1, 2, 3, 32, },
+	{ 0, 0, 1, 2, 4, 40, },
+	{ 2, 0, 1, 2, 4, 32, },
+	{ 1, 0, 1, 2, 4, 32, },
+	{ 0, 0, 1, 2, 5, 40, },
+	{ 2, 0, 1, 2, 5, 32, },
+	{ 1, 0, 1, 2, 5, 32, },
+	{ 0, 0, 1, 2, 6, 40, },
+	{ 2, 0, 1, 2, 6, 32, },
+	{ 1, 0, 1, 2, 6, 32, },
+	{ 0, 0, 1, 2, 7, 40, },
+	{ 2, 0, 1, 2, 7, 32, },
+	{ 1, 0, 1, 2, 7, 32, },
+	{ 0, 0, 1, 2, 8, 40, },
+	{ 2, 0, 1, 2, 8, 32, },
+	{ 1, 0, 1, 2, 8, 32, },
+	{ 0, 0, 1, 2, 9, 40, },
+	{ 2, 0, 1, 2, 9, 32, },
+	{ 1, 0, 1, 2, 9, 32, },
+	{ 0, 0, 1, 2, 10, 40, },
+	{ 2, 0, 1, 2, 10, 32, },
+	{ 1, 0, 1, 2, 10, 32, },
+	{ 0, 0, 1, 2, 11, 34, },
+	{ 2, 0, 1, 2, 11, 32, },
+	{ 1, 0, 1, 2, 11, 32, },
+	{ 0, 0, 1, 2, 12, 63, },
+	{ 2, 0, 1, 2, 12, 32, },
+	{ 1, 0, 1, 2, 12, 32, },
+	{ 0, 0, 1, 2, 13, 63, },
+	{ 2, 0, 1, 2, 13, 32, },
+	{ 1, 0, 1, 2, 13, 32, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 34, },
+	{ 2, 0, 1, 3, 3, 30, },
+	{ 1, 0, 1, 3, 3, 30, },
+	{ 0, 0, 1, 3, 4, 38, },
+	{ 2, 0, 1, 3, 4, 30, },
+	{ 1, 0, 1, 3, 4, 30, },
+	{ 0, 0, 1, 3, 5, 38, },
+	{ 2, 0, 1, 3, 5, 30, },
+	{ 1, 0, 1, 3, 5, 30, },
+	{ 0, 0, 1, 3, 6, 38, },
+	{ 2, 0, 1, 3, 6, 30, },
+	{ 1, 0, 1, 3, 6, 30, },
+	{ 0, 0, 1, 3, 7, 38, },
+	{ 2, 0, 1, 3, 7, 30, },
+	{ 1, 0, 1, 3, 7, 30, },
+	{ 0, 0, 1, 3, 8, 38, },
+	{ 2, 0, 1, 3, 8, 30, },
+	{ 1, 0, 1, 3, 8, 30, },
+	{ 0, 0, 1, 3, 9, 38, },
+	{ 2, 0, 1, 3, 9, 30, },
+	{ 1, 0, 1, 3, 9, 30, },
+	{ 0, 0, 1, 3, 10, 38, },
+	{ 2, 0, 1, 3, 10, 30, },
+	{ 1, 0, 1, 3, 10, 30, },
+	{ 0, 0, 1, 3, 11, 32, },
+	{ 2, 0, 1, 3, 11, 30, },
+	{ 1, 0, 1, 3, 11, 30, },
+	{ 0, 0, 1, 3, 12, 63, },
+	{ 2, 0, 1, 3, 12, 30, },
+	{ 1, 0, 1, 3, 12, 30, },
+	{ 0, 0, 1, 3, 13, 63, },
+	{ 2, 0, 1, 3, 13, 30, },
+	{ 1, 0, 1, 3, 13, 30, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 0, 1, 6, 1, 63, },
+	{ 2, 0, 1, 6, 1, 63, },
+	{ 1, 0, 1, 6, 1, 63, },
+	{ 0, 0, 1, 6, 2, 63, },
+	{ 2, 0, 1, 6, 2, 63, },
+	{ 1, 0, 1, 6, 2, 63, },
+	{ 0, 0, 1, 6, 3, 32, },
+	{ 2, 0, 1, 6, 3, 28, },
+	{ 1, 0, 1, 6, 3, 28, },
+	{ 0, 0, 1, 6, 4, 36, },
+	{ 2, 0, 1, 6, 4, 28, },
+	{ 1, 0, 1, 6, 4, 28, },
+	{ 0, 0, 1, 6, 5, 36, },
+	{ 2, 0, 1, 6, 5, 28, },
+	{ 1, 0, 1, 6, 5, 28, },
+	{ 0, 0, 1, 6, 6, 36, },
+	{ 2, 0, 1, 6, 6, 28, },
+	{ 1, 0, 1, 6, 6, 28, },
+	{ 0, 0, 1, 6, 7, 36, },
+	{ 2, 0, 1, 6, 7, 28, },
+	{ 1, 0, 1, 6, 7, 28, },
+	{ 0, 0, 1, 6, 8, 36, },
+	{ 2, 0, 1, 6, 8, 28, },
+	{ 1, 0, 1, 6, 8, 28, },
+	{ 0, 0, 1, 6, 9, 36, },
+	{ 2, 0, 1, 6, 9, 28, },
+	{ 1, 0, 1, 6, 9, 28, },
+	{ 0, 0, 1, 6, 10, 36, },
+	{ 2, 0, 1, 6, 10, 28, },
+	{ 1, 0, 1, 6, 10, 28, },
+	{ 0, 0, 1, 6, 11, 30, },
+	{ 2, 0, 1, 6, 11, 28, },
+	{ 1, 0, 1, 6, 11, 28, },
+	{ 0, 0, 1, 6, 12, 63, },
+	{ 2, 0, 1, 6, 12, 28, },
+	{ 1, 0, 1, 6, 12, 28, },
+	{ 0, 0, 1, 6, 13, 63, },
+	{ 2, 0, 1, 6, 13, 28, },
+	{ 1, 0, 1, 6, 13, 28, },
+	{ 0, 0, 1, 6, 14, 63, },
+	{ 2, 0, 1, 6, 14, 63, },
+	{ 1, 0, 1, 6, 14, 63, },
+	{ 0, 0, 1, 7, 1, 63, },
+	{ 2, 0, 1, 7, 1, 63, },
+	{ 1, 0, 1, 7, 1, 63, },
+	{ 0, 0, 1, 7, 2, 63, },
+	{ 2, 0, 1, 7, 2, 63, },
+	{ 1, 0, 1, 7, 2, 63, },
+	{ 0, 0, 1, 7, 3, 32, },
+	{ 2, 0, 1, 7, 3, 26, },
+	{ 1, 0, 1, 7, 3, 26, },
+	{ 0, 0, 1, 7, 4, 36, },
+	{ 2, 0, 1, 7, 4, 26, },
+	{ 1, 0, 1, 7, 4, 26, },
+	{ 0, 0, 1, 7, 5, 36, },
+	{ 2, 0, 1, 7, 5, 26, },
+	{ 1, 0, 1, 7, 5, 26, },
+	{ 0, 0, 1, 7, 6, 36, },
+	{ 2, 0, 1, 7, 6, 26, },
+	{ 1, 0, 1, 7, 6, 26, },
+	{ 0, 0, 1, 7, 7, 36, },
+	{ 2, 0, 1, 7, 7, 26, },
+	{ 1, 0, 1, 7, 7, 26, },
+	{ 0, 0, 1, 7, 8, 36, },
+	{ 2, 0, 1, 7, 8, 26, },
+	{ 1, 0, 1, 7, 8, 26, },
+	{ 0, 0, 1, 7, 9, 36, },
+	{ 2, 0, 1, 7, 9, 26, },
+	{ 1, 0, 1, 7, 9, 26, },
+	{ 0, 0, 1, 7, 10, 36, },
+	{ 2, 0, 1, 7, 10, 26, },
+	{ 1, 0, 1, 7, 10, 26, },
+	{ 0, 0, 1, 7, 11, 30, },
+	{ 2, 0, 1, 7, 11, 26, },
+	{ 1, 0, 1, 7, 11, 26, },
+	{ 0, 0, 1, 7, 12, 63, },
+	{ 2, 0, 1, 7, 12, 26, },
+	{ 1, 0, 1, 7, 12, 26, },
+	{ 0, 0, 1, 7, 13, 63, },
+	{ 2, 0, 1, 7, 13, 26, },
+	{ 1, 0, 1, 7, 13, 26, },
+	{ 0, 0, 1, 7, 14, 63, },
+	{ 2, 0, 1, 7, 14, 63, },
+	{ 1, 0, 1, 7, 14, 63, },
+	{ 0, 1, 0, 1, 36, 38, },
+	{ 2, 1, 0, 1, 36, 32, },
+	{ 1, 1, 0, 1, 36, 32, },
+	{ 0, 1, 0, 1, 40, 38, },
+	{ 2, 1, 0, 1, 40, 32, },
+	{ 1, 1, 0, 1, 40, 32, },
+	{ 0, 1, 0, 1, 44, 38, },
+	{ 2, 1, 0, 1, 44, 32, },
+	{ 1, 1, 0, 1, 44, 32, },
+	{ 0, 1, 0, 1, 48, 38, },
+	{ 2, 1, 0, 1, 48, 32, },
+	{ 1, 1, 0, 1, 48, 32, },
+	{ 0, 1, 0, 1, 52, 38, },
+	{ 2, 1, 0, 1, 52, 32, },
+	{ 1, 1, 0, 1, 52, 32, },
+	{ 0, 1, 0, 1, 56, 38, },
+	{ 2, 1, 0, 1, 56, 32, },
+	{ 1, 1, 0, 1, 56, 32, },
+	{ 0, 1, 0, 1, 60, 38, },
+	{ 2, 1, 0, 1, 60, 32, },
+	{ 1, 1, 0, 1, 60, 32, },
+	{ 0, 1, 0, 1, 64, 38, },
+	{ 2, 1, 0, 1, 64, 32, },
+	{ 1, 1, 0, 1, 64, 32, },
+	{ 0, 1, 0, 1, 100, 36, },
+	{ 2, 1, 0, 1, 100, 32, },
+	{ 1, 1, 0, 1, 100, 32, },
+	{ 0, 1, 0, 1, 104, 36, },
+	{ 2, 1, 0, 1, 104, 32, },
+	{ 1, 1, 0, 1, 104, 32, },
+	{ 0, 1, 0, 1, 108, 36, },
+	{ 2, 1, 0, 1, 108, 32, },
+	{ 1, 1, 0, 1, 108, 32, },
+	{ 0, 1, 0, 1, 112, 36, },
+	{ 2, 1, 0, 1, 112, 32, },
+	{ 1, 1, 0, 1, 112, 32, },
+	{ 0, 1, 0, 1, 116, 36, },
+	{ 2, 1, 0, 1, 116, 32, },
+	{ 1, 1, 0, 1, 116, 32, },
+	{ 0, 1, 0, 1, 120, 36, },
+	{ 2, 1, 0, 1, 120, 32, },
+	{ 1, 1, 0, 1, 120, 32, },
+	{ 0, 1, 0, 1, 124, 36, },
+	{ 2, 1, 0, 1, 124, 32, },
+	{ 1, 1, 0, 1, 124, 32, },
+	{ 0, 1, 0, 1, 128, 36, },
+	{ 2, 1, 0, 1, 128, 32, },
+	{ 1, 1, 0, 1, 128, 32, },
+	{ 0, 1, 0, 1, 132, 36, },
+	{ 2, 1, 0, 1, 132, 32, },
+	{ 1, 1, 0, 1, 132, 32, },
+	{ 0, 1, 0, 1, 136, 36, },
+	{ 2, 1, 0, 1, 136, 32, },
+	{ 1, 1, 0, 1, 136, 32, },
+	{ 0, 1, 0, 1, 140, 36, },
+	{ 2, 1, 0, 1, 140, 32, },
+	{ 1, 1, 0, 1, 140, 32, },
+	{ 0, 1, 0, 1, 149, 36, },
+	{ 2, 1, 0, 1, 149, 32, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 36, },
+	{ 2, 1, 0, 1, 153, 32, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 36, },
+	{ 2, 1, 0, 1, 157, 32, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 36, },
+	{ 2, 1, 0, 1, 161, 32, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 36, },
+	{ 2, 1, 0, 1, 165, 32, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 36, },
+	{ 2, 1, 0, 2, 36, 32, },
+	{ 1, 1, 0, 2, 36, 32, },
+	{ 0, 1, 0, 2, 40, 36, },
+	{ 2, 1, 0, 2, 40, 32, },
+	{ 1, 1, 0, 2, 40, 32, },
+	{ 0, 1, 0, 2, 44, 36, },
+	{ 2, 1, 0, 2, 44, 32, },
+	{ 1, 1, 0, 2, 44, 32, },
+	{ 0, 1, 0, 2, 48, 36, },
+	{ 2, 1, 0, 2, 48, 32, },
+	{ 1, 1, 0, 2, 48, 32, },
+	{ 0, 1, 0, 2, 52, 36, },
+	{ 2, 1, 0, 2, 52, 32, },
+	{ 1, 1, 0, 2, 52, 32, },
+	{ 0, 1, 0, 2, 56, 36, },
+	{ 2, 1, 0, 2, 56, 32, },
+	{ 1, 1, 0, 2, 56, 32, },
+	{ 0, 1, 0, 2, 60, 36, },
+	{ 2, 1, 0, 2, 60, 32, },
+	{ 1, 1, 0, 2, 60, 32, },
+	{ 0, 1, 0, 2, 64, 36, },
+	{ 2, 1, 0, 2, 64, 32, },
+	{ 1, 1, 0, 2, 64, 32, },
+	{ 0, 1, 0, 2, 100, 36, },
+	{ 2, 1, 0, 2, 100, 32, },
+	{ 1, 1, 0, 2, 100, 32, },
+	{ 0, 1, 0, 2, 104, 36, },
+	{ 2, 1, 0, 2, 104, 32, },
+	{ 1, 1, 0, 2, 104, 32, },
+	{ 0, 1, 0, 2, 108, 36, },
+	{ 2, 1, 0, 2, 108, 32, },
+	{ 1, 1, 0, 2, 108, 32, },
+	{ 0, 1, 0, 2, 112, 36, },
+	{ 2, 1, 0, 2, 112, 32, },
+	{ 1, 1, 0, 2, 112, 32, },
+	{ 0, 1, 0, 2, 116, 36, },
+	{ 2, 1, 0, 2, 116, 32, },
+	{ 1, 1, 0, 2, 116, 32, },
+	{ 0, 1, 0, 2, 120, 36, },
+	{ 2, 1, 0, 2, 120, 32, },
+	{ 1, 1, 0, 2, 120, 32, },
+	{ 0, 1, 0, 2, 124, 36, },
+	{ 2, 1, 0, 2, 124, 32, },
+	{ 1, 1, 0, 2, 124, 32, },
+	{ 0, 1, 0, 2, 128, 36, },
+	{ 2, 1, 0, 2, 128, 32, },
+	{ 1, 1, 0, 2, 128, 32, },
+	{ 0, 1, 0, 2, 132, 36, },
+	{ 2, 1, 0, 2, 132, 32, },
+	{ 1, 1, 0, 2, 132, 32, },
+	{ 0, 1, 0, 2, 136, 36, },
+	{ 2, 1, 0, 2, 136, 32, },
+	{ 1, 1, 0, 2, 136, 32, },
+	{ 0, 1, 0, 2, 140, 34, },
+	{ 2, 1, 0, 2, 140, 32, },
+	{ 1, 1, 0, 2, 140, 32, },
+	{ 0, 1, 0, 2, 149, 32, },
+	{ 2, 1, 0, 2, 149, 32, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 38, },
+	{ 2, 1, 0, 2, 153, 32, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 38, },
+	{ 2, 1, 0, 2, 157, 32, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 38, },
+	{ 2, 1, 0, 2, 161, 32, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 38, },
+	{ 2, 1, 0, 2, 165, 32, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 34, },
+	{ 2, 1, 0, 3, 36, 30, },
+	{ 1, 1, 0, 3, 36, 30, },
+	{ 0, 1, 0, 3, 40, 34, },
+	{ 2, 1, 0, 3, 40, 30, },
+	{ 1, 1, 0, 3, 40, 30, },
+	{ 0, 1, 0, 3, 44, 34, },
+	{ 2, 1, 0, 3, 44, 30, },
+	{ 1, 1, 0, 3, 44, 30, },
+	{ 0, 1, 0, 3, 48, 34, },
+	{ 2, 1, 0, 3, 48, 30, },
+	{ 1, 1, 0, 3, 48, 30, },
+	{ 0, 1, 0, 3, 52, 34, },
+	{ 2, 1, 0, 3, 52, 30, },
+	{ 1, 1, 0, 3, 52, 30, },
+	{ 0, 1, 0, 3, 56, 34, },
+	{ 2, 1, 0, 3, 56, 30, },
+	{ 1, 1, 0, 3, 56, 30, },
+	{ 0, 1, 0, 3, 60, 34, },
+	{ 2, 1, 0, 3, 60, 30, },
+	{ 1, 1, 0, 3, 60, 30, },
+	{ 0, 1, 0, 3, 64, 34, },
+	{ 2, 1, 0, 3, 64, 30, },
+	{ 1, 1, 0, 3, 64, 30, },
+	{ 0, 1, 0, 3, 100, 34, },
+	{ 2, 1, 0, 3, 100, 30, },
+	{ 1, 1, 0, 3, 100, 30, },
+	{ 0, 1, 0, 3, 104, 34, },
+	{ 2, 1, 0, 3, 104, 30, },
+	{ 1, 1, 0, 3, 104, 30, },
+	{ 0, 1, 0, 3, 108, 34, },
+	{ 2, 1, 0, 3, 108, 30, },
+	{ 1, 1, 0, 3, 108, 30, },
+	{ 0, 1, 0, 3, 112, 34, },
+	{ 2, 1, 0, 3, 112, 30, },
+	{ 1, 1, 0, 3, 112, 30, },
+	{ 0, 1, 0, 3, 116, 34, },
+	{ 2, 1, 0, 3, 116, 30, },
+	{ 1, 1, 0, 3, 116, 30, },
+	{ 0, 1, 0, 3, 120, 34, },
+	{ 2, 1, 0, 3, 120, 30, },
+	{ 1, 1, 0, 3, 120, 30, },
+	{ 0, 1, 0, 3, 124, 34, },
+	{ 2, 1, 0, 3, 124, 30, },
+	{ 1, 1, 0, 3, 124, 30, },
+	{ 0, 1, 0, 3, 128, 34, },
+	{ 2, 1, 0, 3, 128, 30, },
+	{ 1, 1, 0, 3, 128, 30, },
+	{ 0, 1, 0, 3, 132, 34, },
+	{ 2, 1, 0, 3, 132, 30, },
+	{ 1, 1, 0, 3, 132, 30, },
+	{ 0, 1, 0, 3, 136, 34, },
+	{ 2, 1, 0, 3, 136, 30, },
+	{ 1, 1, 0, 3, 136, 30, },
+	{ 0, 1, 0, 3, 140, 32, },
+	{ 2, 1, 0, 3, 140, 30, },
+	{ 1, 1, 0, 3, 140, 30, },
+	{ 0, 1, 0, 3, 149, 30, },
+	{ 2, 1, 0, 3, 149, 30, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 36, },
+	{ 2, 1, 0, 3, 153, 30, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 36, },
+	{ 2, 1, 0, 3, 157, 30, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 36, },
+	{ 2, 1, 0, 3, 161, 30, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 36, },
+	{ 2, 1, 0, 3, 165, 30, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 0, 6, 36, 32, },
+	{ 2, 1, 0, 6, 36, 28, },
+	{ 1, 1, 0, 6, 36, 28, },
+	{ 0, 1, 0, 6, 40, 32, },
+	{ 2, 1, 0, 6, 40, 28, },
+	{ 1, 1, 0, 6, 40, 28, },
+	{ 0, 1, 0, 6, 44, 32, },
+	{ 2, 1, 0, 6, 44, 28, },
+	{ 1, 1, 0, 6, 44, 28, },
+	{ 0, 1, 0, 6, 48, 32, },
+	{ 2, 1, 0, 6, 48, 28, },
+	{ 1, 1, 0, 6, 48, 28, },
+	{ 0, 1, 0, 6, 52, 32, },
+	{ 2, 1, 0, 6, 52, 28, },
+	{ 1, 1, 0, 6, 52, 28, },
+	{ 0, 1, 0, 6, 56, 32, },
+	{ 2, 1, 0, 6, 56, 28, },
+	{ 1, 1, 0, 6, 56, 28, },
+	{ 0, 1, 0, 6, 60, 32, },
+	{ 2, 1, 0, 6, 60, 28, },
+	{ 1, 1, 0, 6, 60, 28, },
+	{ 0, 1, 0, 6, 64, 32, },
+	{ 2, 1, 0, 6, 64, 28, },
+	{ 1, 1, 0, 6, 64, 28, },
+	{ 0, 1, 0, 6, 100, 32, },
+	{ 2, 1, 0, 6, 100, 28, },
+	{ 1, 1, 0, 6, 100, 28, },
+	{ 0, 1, 0, 6, 104, 32, },
+	{ 2, 1, 0, 6, 104, 28, },
+	{ 1, 1, 0, 6, 104, 28, },
+	{ 0, 1, 0, 6, 108, 32, },
+	{ 2, 1, 0, 6, 108, 28, },
+	{ 1, 1, 0, 6, 108, 28, },
+	{ 0, 1, 0, 6, 112, 32, },
+	{ 2, 1, 0, 6, 112, 28, },
+	{ 1, 1, 0, 6, 112, 28, },
+	{ 0, 1, 0, 6, 116, 32, },
+	{ 2, 1, 0, 6, 116, 28, },
+	{ 1, 1, 0, 6, 116, 28, },
+	{ 0, 1, 0, 6, 120, 32, },
+	{ 2, 1, 0, 6, 120, 28, },
+	{ 1, 1, 0, 6, 120, 28, },
+	{ 0, 1, 0, 6, 124, 32, },
+	{ 2, 1, 0, 6, 124, 28, },
+	{ 1, 1, 0, 6, 124, 28, },
+	{ 0, 1, 0, 6, 128, 32, },
+	{ 2, 1, 0, 6, 128, 28, },
+	{ 1, 1, 0, 6, 128, 28, },
+	{ 0, 1, 0, 6, 132, 32, },
+	{ 2, 1, 0, 6, 132, 28, },
+	{ 1, 1, 0, 6, 132, 28, },
+	{ 0, 1, 0, 6, 136, 32, },
+	{ 2, 1, 0, 6, 136, 28, },
+	{ 1, 1, 0, 6, 136, 28, },
+	{ 0, 1, 0, 6, 140, 30, },
+	{ 2, 1, 0, 6, 140, 28, },
+	{ 1, 1, 0, 6, 140, 28, },
+	{ 0, 1, 0, 6, 149, 28, },
+	{ 2, 1, 0, 6, 149, 28, },
+	{ 1, 1, 0, 6, 149, 63, },
+	{ 0, 1, 0, 6, 153, 34, },
+	{ 2, 1, 0, 6, 153, 28, },
+	{ 1, 1, 0, 6, 153, 63, },
+	{ 0, 1, 0, 6, 157, 34, },
+	{ 2, 1, 0, 6, 157, 28, },
+	{ 1, 1, 0, 6, 157, 63, },
+	{ 0, 1, 0, 6, 161, 34, },
+	{ 2, 1, 0, 6, 161, 28, },
+	{ 1, 1, 0, 6, 161, 63, },
+	{ 0, 1, 0, 6, 165, 34, },
+	{ 2, 1, 0, 6, 165, 28, },
+	{ 1, 1, 0, 6, 165, 63, },
+	{ 0, 1, 0, 7, 36, 30, },
+	{ 2, 1, 0, 7, 36, 26, },
+	{ 1, 1, 0, 7, 36, 26, },
+	{ 0, 1, 0, 7, 40, 30, },
+	{ 2, 1, 0, 7, 40, 26, },
+	{ 1, 1, 0, 7, 40, 26, },
+	{ 0, 1, 0, 7, 44, 30, },
+	{ 2, 1, 0, 7, 44, 26, },
+	{ 1, 1, 0, 7, 44, 26, },
+	{ 0, 1, 0, 7, 48, 30, },
+	{ 2, 1, 0, 7, 48, 26, },
+	{ 1, 1, 0, 7, 48, 26, },
+	{ 0, 1, 0, 7, 52, 30, },
+	{ 2, 1, 0, 7, 52, 26, },
+	{ 1, 1, 0, 7, 52, 26, },
+	{ 0, 1, 0, 7, 56, 30, },
+	{ 2, 1, 0, 7, 56, 26, },
+	{ 1, 1, 0, 7, 56, 26, },
+	{ 0, 1, 0, 7, 60, 30, },
+	{ 2, 1, 0, 7, 60, 26, },
+	{ 1, 1, 0, 7, 60, 26, },
+	{ 0, 1, 0, 7, 64, 30, },
+	{ 2, 1, 0, 7, 64, 26, },
+	{ 1, 1, 0, 7, 64, 26, },
+	{ 0, 1, 0, 7, 100, 30, },
+	{ 2, 1, 0, 7, 100, 26, },
+	{ 1, 1, 0, 7, 100, 26, },
+	{ 0, 1, 0, 7, 104, 30, },
+	{ 2, 1, 0, 7, 104, 26, },
+	{ 1, 1, 0, 7, 104, 26, },
+	{ 0, 1, 0, 7, 108, 30, },
+	{ 2, 1, 0, 7, 108, 26, },
+	{ 1, 1, 0, 7, 108, 26, },
+	{ 0, 1, 0, 7, 112, 30, },
+	{ 2, 1, 0, 7, 112, 26, },
+	{ 1, 1, 0, 7, 112, 26, },
+	{ 0, 1, 0, 7, 116, 30, },
+	{ 2, 1, 0, 7, 116, 26, },
+	{ 1, 1, 0, 7, 116, 26, },
+	{ 0, 1, 0, 7, 120, 30, },
+	{ 2, 1, 0, 7, 120, 26, },
+	{ 1, 1, 0, 7, 120, 26, },
+	{ 0, 1, 0, 7, 124, 30, },
+	{ 2, 1, 0, 7, 124, 26, },
+	{ 1, 1, 0, 7, 124, 26, },
+	{ 0, 1, 0, 7, 128, 30, },
+	{ 2, 1, 0, 7, 128, 26, },
+	{ 1, 1, 0, 7, 128, 26, },
+	{ 0, 1, 0, 7, 132, 30, },
+	{ 2, 1, 0, 7, 132, 26, },
+	{ 1, 1, 0, 7, 132, 26, },
+	{ 0, 1, 0, 7, 136, 30, },
+	{ 2, 1, 0, 7, 136, 26, },
+	{ 1, 1, 0, 7, 136, 26, },
+	{ 0, 1, 0, 7, 140, 28, },
+	{ 2, 1, 0, 7, 140, 26, },
+	{ 1, 1, 0, 7, 140, 26, },
+	{ 0, 1, 0, 7, 149, 26, },
+	{ 2, 1, 0, 7, 149, 26, },
+	{ 1, 1, 0, 7, 149, 63, },
+	{ 0, 1, 0, 7, 153, 32, },
+	{ 2, 1, 0, 7, 153, 26, },
+	{ 1, 1, 0, 7, 153, 63, },
+	{ 0, 1, 0, 7, 157, 32, },
+	{ 2, 1, 0, 7, 157, 26, },
+	{ 1, 1, 0, 7, 157, 63, },
+	{ 0, 1, 0, 7, 161, 32, },
+	{ 2, 1, 0, 7, 161, 26, },
+	{ 1, 1, 0, 7, 161, 63, },
+	{ 0, 1, 0, 7, 165, 32, },
+	{ 2, 1, 0, 7, 165, 26, },
+	{ 1, 1, 0, 7, 165, 63, },
+	{ 0, 1, 1, 2, 38, 32, },
+	{ 2, 1, 1, 2, 38, 32, },
+	{ 1, 1, 1, 2, 38, 32, },
+	{ 0, 1, 1, 2, 46, 32, },
+	{ 2, 1, 1, 2, 46, 32, },
+	{ 1, 1, 1, 2, 46, 32, },
+	{ 0, 1, 1, 2, 54, 32, },
+	{ 2, 1, 1, 2, 54, 32, },
+	{ 1, 1, 1, 2, 54, 32, },
+	{ 0, 1, 1, 2, 62, 30, },
+	{ 2, 1, 1, 2, 62, 32, },
+	{ 1, 1, 1, 2, 62, 32, },
+	{ 0, 1, 1, 2, 102, 30, },
+	{ 2, 1, 1, 2, 102, 32, },
+	{ 1, 1, 1, 2, 102, 32, },
+	{ 0, 1, 1, 2, 110, 38, },
+	{ 2, 1, 1, 2, 110, 32, },
+	{ 1, 1, 1, 2, 110, 32, },
+	{ 0, 1, 1, 2, 118, 38, },
+	{ 2, 1, 1, 2, 118, 32, },
+	{ 1, 1, 1, 2, 118, 32, },
+	{ 0, 1, 1, 2, 126, 38, },
+	{ 2, 1, 1, 2, 126, 32, },
+	{ 1, 1, 1, 2, 126, 32, },
+	{ 0, 1, 1, 2, 134, 38, },
+	{ 2, 1, 1, 2, 134, 32, },
+	{ 1, 1, 1, 2, 134, 32, },
+	{ 0, 1, 1, 2, 151, 32, },
+	{ 2, 1, 1, 2, 151, 32, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 32, },
+	{ 2, 1, 1, 2, 159, 32, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 30, },
+	{ 2, 1, 1, 3, 38, 30, },
+	{ 1, 1, 1, 3, 38, 30, },
+	{ 0, 1, 1, 3, 46, 30, },
+	{ 2, 1, 1, 3, 46, 30, },
+	{ 1, 1, 1, 3, 46, 30, },
+	{ 0, 1, 1, 3, 54, 30, },
+	{ 2, 1, 1, 3, 54, 30, },
+	{ 1, 1, 1, 3, 54, 30, },
+	{ 0, 1, 1, 3, 62, 28, },
+	{ 2, 1, 1, 3, 62, 30, },
+	{ 1, 1, 1, 3, 62, 30, },
+	{ 0, 1, 1, 3, 102, 28, },
+	{ 2, 1, 1, 3, 102, 30, },
+	{ 1, 1, 1, 3, 102, 30, },
+	{ 0, 1, 1, 3, 110, 36, },
+	{ 2, 1, 1, 3, 110, 30, },
+	{ 1, 1, 1, 3, 110, 30, },
+	{ 0, 1, 1, 3, 118, 36, },
+	{ 2, 1, 1, 3, 118, 30, },
+	{ 1, 1, 1, 3, 118, 30, },
+	{ 0, 1, 1, 3, 126, 36, },
+	{ 2, 1, 1, 3, 126, 30, },
+	{ 1, 1, 1, 3, 126, 30, },
+	{ 0, 1, 1, 3, 134, 36, },
+	{ 2, 1, 1, 3, 134, 30, },
+	{ 1, 1, 1, 3, 134, 30, },
+	{ 0, 1, 1, 3, 151, 30, },
+	{ 2, 1, 1, 3, 151, 30, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 30, },
+	{ 2, 1, 1, 3, 159, 30, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 1, 6, 38, 28, },
+	{ 2, 1, 1, 6, 38, 28, },
+	{ 1, 1, 1, 6, 38, 28, },
+	{ 0, 1, 1, 6, 46, 28, },
+	{ 2, 1, 1, 6, 46, 28, },
+	{ 1, 1, 1, 6, 46, 28, },
+	{ 0, 1, 1, 6, 54, 28, },
+	{ 2, 1, 1, 6, 54, 28, },
+	{ 1, 1, 1, 6, 54, 28, },
+	{ 0, 1, 1, 6, 62, 26, },
+	{ 2, 1, 1, 6, 62, 28, },
+	{ 1, 1, 1, 6, 62, 28, },
+	{ 0, 1, 1, 6, 102, 26, },
+	{ 2, 1, 1, 6, 102, 28, },
+	{ 1, 1, 1, 6, 102, 28, },
+	{ 0, 1, 1, 6, 110, 34, },
+	{ 2, 1, 1, 6, 110, 28, },
+	{ 1, 1, 1, 6, 110, 28, },
+	{ 0, 1, 1, 6, 118, 34, },
+	{ 2, 1, 1, 6, 118, 28, },
+	{ 1, 1, 1, 6, 118, 28, },
+	{ 0, 1, 1, 6, 126, 34, },
+	{ 2, 1, 1, 6, 126, 28, },
+	{ 1, 1, 1, 6, 126, 28, },
+	{ 0, 1, 1, 6, 134, 34, },
+	{ 2, 1, 1, 6, 134, 28, },
+	{ 1, 1, 1, 6, 134, 28, },
+	{ 0, 1, 1, 6, 151, 28, },
+	{ 2, 1, 1, 6, 151, 28, },
+	{ 1, 1, 1, 6, 151, 63, },
+	{ 0, 1, 1, 6, 159, 28, },
+	{ 2, 1, 1, 6, 159, 28, },
+	{ 1, 1, 1, 6, 159, 63, },
+	{ 0, 1, 1, 7, 38, 26, },
+	{ 2, 1, 1, 7, 38, 26, },
+	{ 1, 1, 1, 7, 38, 26, },
+	{ 0, 1, 1, 7, 46, 26, },
+	{ 2, 1, 1, 7, 46, 26, },
+	{ 1, 1, 1, 7, 46, 26, },
+	{ 0, 1, 1, 7, 54, 26, },
+	{ 2, 1, 1, 7, 54, 26, },
+	{ 1, 1, 1, 7, 54, 26, },
+	{ 0, 1, 1, 7, 62, 24, },
+	{ 2, 1, 1, 7, 62, 26, },
+	{ 1, 1, 1, 7, 62, 26, },
+	{ 0, 1, 1, 7, 102, 24, },
+	{ 2, 1, 1, 7, 102, 26, },
+	{ 1, 1, 1, 7, 102, 26, },
+	{ 0, 1, 1, 7, 110, 32, },
+	{ 2, 1, 1, 7, 110, 26, },
+	{ 1, 1, 1, 7, 110, 26, },
+	{ 0, 1, 1, 7, 118, 32, },
+	{ 2, 1, 1, 7, 118, 26, },
+	{ 1, 1, 1, 7, 118, 26, },
+	{ 0, 1, 1, 7, 126, 32, },
+	{ 2, 1, 1, 7, 126, 26, },
+	{ 1, 1, 1, 7, 126, 26, },
+	{ 0, 1, 1, 7, 134, 32, },
+	{ 2, 1, 1, 7, 134, 26, },
+	{ 1, 1, 1, 7, 134, 26, },
+	{ 0, 1, 1, 7, 151, 26, },
+	{ 2, 1, 1, 7, 151, 26, },
+	{ 1, 1, 1, 7, 151, 63, },
+	{ 0, 1, 1, 7, 159, 26, },
+	{ 2, 1, 1, 7, 159, 26, },
+	{ 1, 1, 1, 7, 159, 63, },
+	{ 0, 1, 2, 4, 42, 26, },
+	{ 2, 1, 2, 4, 42, 32, },
+	{ 1, 1, 2, 4, 42, 32, },
+	{ 0, 1, 2, 4, 58, 26, },
+	{ 2, 1, 2, 4, 58, 32, },
+	{ 1, 1, 2, 4, 58, 32, },
+	{ 0, 1, 2, 4, 106, 28, },
+	{ 2, 1, 2, 4, 106, 32, },
+	{ 1, 1, 2, 4, 106, 32, },
+	{ 0, 1, 2, 4, 122, 28, },
+	{ 2, 1, 2, 4, 122, 32, },
+	{ 1, 1, 2, 4, 122, 32, },
+	{ 0, 1, 2, 4, 155, 28, },
+	{ 2, 1, 2, 4, 155, 32, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 24, },
+	{ 2, 1, 2, 5, 42, 30, },
+	{ 1, 1, 2, 5, 42, 30, },
+	{ 0, 1, 2, 5, 58, 24, },
+	{ 2, 1, 2, 5, 58, 30, },
+	{ 1, 1, 2, 5, 58, 30, },
+	{ 0, 1, 2, 5, 106, 26, },
+	{ 2, 1, 2, 5, 106, 30, },
+	{ 1, 1, 2, 5, 106, 30, },
+	{ 0, 1, 2, 5, 122, 26, },
+	{ 2, 1, 2, 5, 122, 30, },
+	{ 1, 1, 2, 5, 122, 30, },
+	{ 0, 1, 2, 5, 155, 26, },
+	{ 2, 1, 2, 5, 155, 30, },
+	{ 1, 1, 2, 5, 155, 63, },
+	{ 0, 1, 2, 8, 42, 22, },
+	{ 2, 1, 2, 8, 42, 28, },
+	{ 1, 1, 2, 8, 42, 28, },
+	{ 0, 1, 2, 8, 58, 22, },
+	{ 2, 1, 2, 8, 58, 28, },
+	{ 1, 1, 2, 8, 58, 28, },
+	{ 0, 1, 2, 8, 106, 24, },
+	{ 2, 1, 2, 8, 106, 28, },
+	{ 1, 1, 2, 8, 106, 28, },
+	{ 0, 1, 2, 8, 122, 24, },
+	{ 2, 1, 2, 8, 122, 28, },
+	{ 1, 1, 2, 8, 122, 28, },
+	{ 0, 1, 2, 8, 155, 24, },
+	{ 2, 1, 2, 8, 155, 28, },
+	{ 1, 1, 2, 8, 155, 63, },
+	{ 0, 1, 2, 9, 42, 20, },
+	{ 2, 1, 2, 9, 42, 26, },
+	{ 1, 1, 2, 9, 42, 26, },
+	{ 0, 1, 2, 9, 58, 20, },
+	{ 2, 1, 2, 9, 58, 26, },
+	{ 1, 1, 2, 9, 58, 26, },
+	{ 0, 1, 2, 9, 106, 22, },
+	{ 2, 1, 2, 9, 106, 26, },
+	{ 1, 1, 2, 9, 106, 26, },
+	{ 0, 1, 2, 9, 122, 22, },
+	{ 2, 1, 2, 9, 122, 26, },
+	{ 1, 1, 2, 9, 122, 26, },
+	{ 0, 1, 2, 9, 155, 22, },
+	{ 2, 1, 2, 9, 155, 26, },
+	{ 1, 1, 2, 9, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8814a_txpwr_lmt_type7);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8814a_txpwr_lmt_type8[] = {
+	{ 0, 0, 0, 0, 1, 46, },
+	{ 2, 0, 0, 0, 1, 46, },
+	{ 1, 0, 0, 0, 1, 46, },
+	{ 0, 0, 0, 0, 2, 46, },
+	{ 2, 0, 0, 0, 2, 46, },
+	{ 1, 0, 0, 0, 2, 46, },
+	{ 0, 0, 0, 0, 3, 46, },
+	{ 2, 0, 0, 0, 3, 46, },
+	{ 1, 0, 0, 0, 3, 46, },
+	{ 0, 0, 0, 0, 4, 46, },
+	{ 2, 0, 0, 0, 4, 46, },
+	{ 1, 0, 0, 0, 4, 46, },
+	{ 0, 0, 0, 0, 5, 46, },
+	{ 2, 0, 0, 0, 5, 46, },
+	{ 1, 0, 0, 0, 5, 46, },
+	{ 0, 0, 0, 0, 6, 46, },
+	{ 2, 0, 0, 0, 6, 46, },
+	{ 1, 0, 0, 0, 6, 46, },
+	{ 0, 0, 0, 0, 7, 46, },
+	{ 2, 0, 0, 0, 7, 46, },
+	{ 1, 0, 0, 0, 7, 46, },
+	{ 0, 0, 0, 0, 8, 46, },
+	{ 2, 0, 0, 0, 8, 46, },
+	{ 1, 0, 0, 0, 8, 46, },
+	{ 0, 0, 0, 0, 9, 46, },
+	{ 2, 0, 0, 0, 9, 46, },
+	{ 1, 0, 0, 0, 9, 46, },
+	{ 0, 0, 0, 0, 10, 46, },
+	{ 2, 0, 0, 0, 10, 46, },
+	{ 1, 0, 0, 0, 10, 46, },
+	{ 0, 0, 0, 0, 11, 46, },
+	{ 2, 0, 0, 0, 11, 46, },
+	{ 1, 0, 0, 0, 11, 46, },
+	{ 0, 0, 0, 0, 12, 63, },
+	{ 2, 0, 0, 0, 12, 46, },
+	{ 1, 0, 0, 0, 12, 46, },
+	{ 0, 0, 0, 0, 13, 63, },
+	{ 2, 0, 0, 0, 13, 46, },
+	{ 1, 0, 0, 0, 13, 46, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 46, },
+	{ 0, 0, 0, 1, 1, 46, },
+	{ 2, 0, 0, 1, 1, 46, },
+	{ 1, 0, 0, 1, 1, 46, },
+	{ 0, 0, 0, 1, 2, 46, },
+	{ 2, 0, 0, 1, 2, 46, },
+	{ 1, 0, 0, 1, 2, 46, },
+	{ 0, 0, 0, 1, 3, 46, },
+	{ 2, 0, 0, 1, 3, 46, },
+	{ 1, 0, 0, 1, 3, 46, },
+	{ 0, 0, 0, 1, 4, 46, },
+	{ 2, 0, 0, 1, 4, 46, },
+	{ 1, 0, 0, 1, 4, 46, },
+	{ 0, 0, 0, 1, 5, 46, },
+	{ 2, 0, 0, 1, 5, 46, },
+	{ 1, 0, 0, 1, 5, 46, },
+	{ 0, 0, 0, 1, 6, 46, },
+	{ 2, 0, 0, 1, 6, 46, },
+	{ 1, 0, 0, 1, 6, 46, },
+	{ 0, 0, 0, 1, 7, 46, },
+	{ 2, 0, 0, 1, 7, 46, },
+	{ 1, 0, 0, 1, 7, 46, },
+	{ 0, 0, 0, 1, 8, 46, },
+	{ 2, 0, 0, 1, 8, 46, },
+	{ 1, 0, 0, 1, 8, 46, },
+	{ 0, 0, 0, 1, 9, 46, },
+	{ 2, 0, 0, 1, 9, 46, },
+	{ 1, 0, 0, 1, 9, 46, },
+	{ 0, 0, 0, 1, 10, 46, },
+	{ 2, 0, 0, 1, 10, 46, },
+	{ 1, 0, 0, 1, 10, 46, },
+	{ 0, 0, 0, 1, 11, 46, },
+	{ 2, 0, 0, 1, 11, 46, },
+	{ 1, 0, 0, 1, 11, 46, },
+	{ 0, 0, 0, 1, 12, 63, },
+	{ 2, 0, 0, 1, 12, 46, },
+	{ 1, 0, 0, 1, 12, 46, },
+	{ 0, 0, 0, 1, 13, 63, },
+	{ 2, 0, 0, 1, 13, 46, },
+	{ 1, 0, 0, 1, 13, 46, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 46, },
+	{ 0, 0, 0, 2, 1, 46, },
+	{ 2, 0, 0, 2, 1, 46, },
+	{ 1, 0, 0, 2, 1, 46, },
+	{ 0, 0, 0, 2, 2, 46, },
+	{ 2, 0, 0, 2, 2, 46, },
+	{ 1, 0, 0, 2, 2, 46, },
+	{ 0, 0, 0, 2, 3, 46, },
+	{ 2, 0, 0, 2, 3, 46, },
+	{ 1, 0, 0, 2, 3, 46, },
+	{ 0, 0, 0, 2, 4, 46, },
+	{ 2, 0, 0, 2, 4, 46, },
+	{ 1, 0, 0, 2, 4, 46, },
+	{ 0, 0, 0, 2, 5, 46, },
+	{ 2, 0, 0, 2, 5, 46, },
+	{ 1, 0, 0, 2, 5, 46, },
+	{ 0, 0, 0, 2, 6, 46, },
+	{ 2, 0, 0, 2, 6, 46, },
+	{ 1, 0, 0, 2, 6, 46, },
+	{ 0, 0, 0, 2, 7, 46, },
+	{ 2, 0, 0, 2, 7, 46, },
+	{ 1, 0, 0, 2, 7, 46, },
+	{ 0, 0, 0, 2, 8, 46, },
+	{ 2, 0, 0, 2, 8, 46, },
+	{ 1, 0, 0, 2, 8, 46, },
+	{ 0, 0, 0, 2, 9, 46, },
+	{ 2, 0, 0, 2, 9, 46, },
+	{ 1, 0, 0, 2, 9, 46, },
+	{ 0, 0, 0, 2, 10, 46, },
+	{ 2, 0, 0, 2, 10, 46, },
+	{ 1, 0, 0, 2, 10, 46, },
+	{ 0, 0, 0, 2, 11, 46, },
+	{ 2, 0, 0, 2, 11, 46, },
+	{ 1, 0, 0, 2, 11, 46, },
+	{ 0, 0, 0, 2, 12, 63, },
+	{ 2, 0, 0, 2, 12, 46, },
+	{ 1, 0, 0, 2, 12, 46, },
+	{ 0, 0, 0, 2, 13, 63, },
+	{ 2, 0, 0, 2, 13, 46, },
+	{ 1, 0, 0, 2, 13, 46, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 46, },
+	{ 0, 0, 0, 3, 1, 46, },
+	{ 2, 0, 0, 3, 1, 46, },
+	{ 1, 0, 0, 3, 1, 46, },
+	{ 0, 0, 0, 3, 2, 46, },
+	{ 2, 0, 0, 3, 2, 46, },
+	{ 1, 0, 0, 3, 2, 46, },
+	{ 0, 0, 0, 3, 3, 46, },
+	{ 2, 0, 0, 3, 3, 46, },
+	{ 1, 0, 0, 3, 3, 46, },
+	{ 0, 0, 0, 3, 4, 46, },
+	{ 2, 0, 0, 3, 4, 46, },
+	{ 1, 0, 0, 3, 4, 46, },
+	{ 0, 0, 0, 3, 5, 46, },
+	{ 2, 0, 0, 3, 5, 46, },
+	{ 1, 0, 0, 3, 5, 46, },
+	{ 0, 0, 0, 3, 6, 46, },
+	{ 2, 0, 0, 3, 6, 46, },
+	{ 1, 0, 0, 3, 6, 46, },
+	{ 0, 0, 0, 3, 7, 46, },
+	{ 2, 0, 0, 3, 7, 46, },
+	{ 1, 0, 0, 3, 7, 46, },
+	{ 0, 0, 0, 3, 8, 46, },
+	{ 2, 0, 0, 3, 8, 46, },
+	{ 1, 0, 0, 3, 8, 46, },
+	{ 0, 0, 0, 3, 9, 46, },
+	{ 2, 0, 0, 3, 9, 46, },
+	{ 1, 0, 0, 3, 9, 46, },
+	{ 0, 0, 0, 3, 10, 46, },
+	{ 2, 0, 0, 3, 10, 46, },
+	{ 1, 0, 0, 3, 10, 46, },
+	{ 0, 0, 0, 3, 11, 46, },
+	{ 2, 0, 0, 3, 11, 46, },
+	{ 1, 0, 0, 3, 11, 46, },
+	{ 0, 0, 0, 3, 12, 63, },
+	{ 2, 0, 0, 3, 12, 46, },
+	{ 1, 0, 0, 3, 12, 46, },
+	{ 0, 0, 0, 3, 13, 63, },
+	{ 2, 0, 0, 3, 13, 46, },
+	{ 1, 0, 0, 3, 13, 46, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 46, },
+	{ 0, 0, 0, 6, 1, 46, },
+	{ 2, 0, 0, 6, 1, 46, },
+	{ 1, 0, 0, 6, 1, 46, },
+	{ 0, 0, 0, 6, 2, 46, },
+	{ 2, 0, 0, 6, 2, 46, },
+	{ 1, 0, 0, 6, 2, 46, },
+	{ 0, 0, 0, 6, 3, 46, },
+	{ 2, 0, 0, 6, 3, 46, },
+	{ 1, 0, 0, 6, 3, 46, },
+	{ 0, 0, 0, 6, 4, 46, },
+	{ 2, 0, 0, 6, 4, 46, },
+	{ 1, 0, 0, 6, 4, 46, },
+	{ 0, 0, 0, 6, 5, 46, },
+	{ 2, 0, 0, 6, 5, 46, },
+	{ 1, 0, 0, 6, 5, 46, },
+	{ 0, 0, 0, 6, 6, 46, },
+	{ 2, 0, 0, 6, 6, 46, },
+	{ 1, 0, 0, 6, 6, 46, },
+	{ 0, 0, 0, 6, 7, 46, },
+	{ 2, 0, 0, 6, 7, 46, },
+	{ 1, 0, 0, 6, 7, 46, },
+	{ 0, 0, 0, 6, 8, 46, },
+	{ 2, 0, 0, 6, 8, 46, },
+	{ 1, 0, 0, 6, 8, 46, },
+	{ 0, 0, 0, 6, 9, 46, },
+	{ 2, 0, 0, 6, 9, 46, },
+	{ 1, 0, 0, 6, 9, 46, },
+	{ 0, 0, 0, 6, 10, 46, },
+	{ 2, 0, 0, 6, 10, 46, },
+	{ 1, 0, 0, 6, 10, 46, },
+	{ 0, 0, 0, 6, 11, 46, },
+	{ 2, 0, 0, 6, 11, 46, },
+	{ 1, 0, 0, 6, 11, 46, },
+	{ 0, 0, 0, 6, 12, 63, },
+	{ 2, 0, 0, 6, 12, 46, },
+	{ 1, 0, 0, 6, 12, 46, },
+	{ 0, 0, 0, 6, 13, 63, },
+	{ 2, 0, 0, 6, 13, 46, },
+	{ 1, 0, 0, 6, 13, 46, },
+	{ 0, 0, 0, 6, 14, 63, },
+	{ 2, 0, 0, 6, 14, 63, },
+	{ 1, 0, 0, 6, 14, 46, },
+	{ 0, 0, 0, 7, 1, 46, },
+	{ 2, 0, 0, 7, 1, 46, },
+	{ 1, 0, 0, 7, 1, 46, },
+	{ 0, 0, 0, 7, 2, 46, },
+	{ 2, 0, 0, 7, 2, 46, },
+	{ 1, 0, 0, 7, 2, 46, },
+	{ 0, 0, 0, 7, 3, 46, },
+	{ 2, 0, 0, 7, 3, 46, },
+	{ 1, 0, 0, 7, 3, 46, },
+	{ 0, 0, 0, 7, 4, 46, },
+	{ 2, 0, 0, 7, 4, 46, },
+	{ 1, 0, 0, 7, 4, 46, },
+	{ 0, 0, 0, 7, 5, 46, },
+	{ 2, 0, 0, 7, 5, 46, },
+	{ 1, 0, 0, 7, 5, 46, },
+	{ 0, 0, 0, 7, 6, 46, },
+	{ 2, 0, 0, 7, 6, 46, },
+	{ 1, 0, 0, 7, 6, 46, },
+	{ 0, 0, 0, 7, 7, 46, },
+	{ 2, 0, 0, 7, 7, 46, },
+	{ 1, 0, 0, 7, 7, 46, },
+	{ 0, 0, 0, 7, 8, 46, },
+	{ 2, 0, 0, 7, 8, 46, },
+	{ 1, 0, 0, 7, 8, 46, },
+	{ 0, 0, 0, 7, 9, 46, },
+	{ 2, 0, 0, 7, 9, 46, },
+	{ 1, 0, 0, 7, 9, 46, },
+	{ 0, 0, 0, 7, 10, 46, },
+	{ 2, 0, 0, 7, 10, 46, },
+	{ 1, 0, 0, 7, 10, 46, },
+	{ 0, 0, 0, 7, 11, 46, },
+	{ 2, 0, 0, 7, 11, 46, },
+	{ 1, 0, 0, 7, 11, 46, },
+	{ 0, 0, 0, 7, 12, 63, },
+	{ 2, 0, 0, 7, 12, 46, },
+	{ 1, 0, 0, 7, 12, 46, },
+	{ 0, 0, 0, 7, 13, 63, },
+	{ 2, 0, 0, 7, 13, 46, },
+	{ 1, 0, 0, 7, 13, 46, },
+	{ 0, 0, 0, 7, 14, 63, },
+	{ 2, 0, 0, 7, 14, 63, },
+	{ 1, 0, 0, 7, 14, 46, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 30, },
+	{ 2, 0, 1, 2, 3, 34, },
+	{ 1, 0, 1, 2, 3, 34, },
+	{ 0, 0, 1, 2, 4, 34, },
+	{ 2, 0, 1, 2, 4, 34, },
+	{ 1, 0, 1, 2, 4, 34, },
+	{ 0, 0, 1, 2, 5, 34, },
+	{ 2, 0, 1, 2, 5, 34, },
+	{ 1, 0, 1, 2, 5, 34, },
+	{ 0, 0, 1, 2, 6, 34, },
+	{ 2, 0, 1, 2, 6, 34, },
+	{ 1, 0, 1, 2, 6, 34, },
+	{ 0, 0, 1, 2, 7, 34, },
+	{ 2, 0, 1, 2, 7, 34, },
+	{ 1, 0, 1, 2, 7, 34, },
+	{ 0, 0, 1, 2, 8, 34, },
+	{ 2, 0, 1, 2, 8, 34, },
+	{ 1, 0, 1, 2, 8, 34, },
+	{ 0, 0, 1, 2, 9, 34, },
+	{ 2, 0, 1, 2, 9, 34, },
+	{ 1, 0, 1, 2, 9, 34, },
+	{ 0, 0, 1, 2, 10, 34, },
+	{ 2, 0, 1, 2, 10, 34, },
+	{ 1, 0, 1, 2, 10, 34, },
+	{ 0, 0, 1, 2, 11, 28, },
+	{ 2, 0, 1, 2, 11, 34, },
+	{ 1, 0, 1, 2, 11, 34, },
+	{ 0, 0, 1, 2, 12, 63, },
+	{ 2, 0, 1, 2, 12, 34, },
+	{ 1, 0, 1, 2, 12, 34, },
+	{ 0, 0, 1, 2, 13, 63, },
+	{ 2, 0, 1, 2, 13, 34, },
+	{ 1, 0, 1, 2, 13, 34, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 30, },
+	{ 2, 0, 1, 3, 3, 34, },
+	{ 1, 0, 1, 3, 3, 34, },
+	{ 0, 0, 1, 3, 4, 34, },
+	{ 2, 0, 1, 3, 4, 34, },
+	{ 1, 0, 1, 3, 4, 34, },
+	{ 0, 0, 1, 3, 5, 34, },
+	{ 2, 0, 1, 3, 5, 34, },
+	{ 1, 0, 1, 3, 5, 34, },
+	{ 0, 0, 1, 3, 6, 34, },
+	{ 2, 0, 1, 3, 6, 34, },
+	{ 1, 0, 1, 3, 6, 34, },
+	{ 0, 0, 1, 3, 7, 34, },
+	{ 2, 0, 1, 3, 7, 34, },
+	{ 1, 0, 1, 3, 7, 34, },
+	{ 0, 0, 1, 3, 8, 34, },
+	{ 2, 0, 1, 3, 8, 34, },
+	{ 1, 0, 1, 3, 8, 34, },
+	{ 0, 0, 1, 3, 9, 34, },
+	{ 2, 0, 1, 3, 9, 34, },
+	{ 1, 0, 1, 3, 9, 34, },
+	{ 0, 0, 1, 3, 10, 34, },
+	{ 2, 0, 1, 3, 10, 34, },
+	{ 1, 0, 1, 3, 10, 34, },
+	{ 0, 0, 1, 3, 11, 28, },
+	{ 2, 0, 1, 3, 11, 34, },
+	{ 1, 0, 1, 3, 11, 34, },
+	{ 0, 0, 1, 3, 12, 63, },
+	{ 2, 0, 1, 3, 12, 34, },
+	{ 1, 0, 1, 3, 12, 34, },
+	{ 0, 0, 1, 3, 13, 63, },
+	{ 2, 0, 1, 3, 13, 34, },
+	{ 1, 0, 1, 3, 13, 34, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 0, 1, 6, 1, 63, },
+	{ 2, 0, 1, 6, 1, 63, },
+	{ 1, 0, 1, 6, 1, 63, },
+	{ 0, 0, 1, 6, 2, 63, },
+	{ 2, 0, 1, 6, 2, 63, },
+	{ 1, 0, 1, 6, 2, 63, },
+	{ 0, 0, 1, 6, 3, 30, },
+	{ 2, 0, 1, 6, 3, 34, },
+	{ 1, 0, 1, 6, 3, 34, },
+	{ 0, 0, 1, 6, 4, 34, },
+	{ 2, 0, 1, 6, 4, 34, },
+	{ 1, 0, 1, 6, 4, 34, },
+	{ 0, 0, 1, 6, 5, 34, },
+	{ 2, 0, 1, 6, 5, 34, },
+	{ 1, 0, 1, 6, 5, 34, },
+	{ 0, 0, 1, 6, 6, 34, },
+	{ 2, 0, 1, 6, 6, 34, },
+	{ 1, 0, 1, 6, 6, 34, },
+	{ 0, 0, 1, 6, 7, 34, },
+	{ 2, 0, 1, 6, 7, 34, },
+	{ 1, 0, 1, 6, 7, 34, },
+	{ 0, 0, 1, 6, 8, 34, },
+	{ 2, 0, 1, 6, 8, 34, },
+	{ 1, 0, 1, 6, 8, 34, },
+	{ 0, 0, 1, 6, 9, 34, },
+	{ 2, 0, 1, 6, 9, 34, },
+	{ 1, 0, 1, 6, 9, 34, },
+	{ 0, 0, 1, 6, 10, 34, },
+	{ 2, 0, 1, 6, 10, 34, },
+	{ 1, 0, 1, 6, 10, 34, },
+	{ 0, 0, 1, 6, 11, 28, },
+	{ 2, 0, 1, 6, 11, 34, },
+	{ 1, 0, 1, 6, 11, 34, },
+	{ 0, 0, 1, 6, 12, 63, },
+	{ 2, 0, 1, 6, 12, 34, },
+	{ 1, 0, 1, 6, 12, 34, },
+	{ 0, 0, 1, 6, 13, 63, },
+	{ 2, 0, 1, 6, 13, 34, },
+	{ 1, 0, 1, 6, 13, 34, },
+	{ 0, 0, 1, 6, 14, 63, },
+	{ 2, 0, 1, 6, 14, 63, },
+	{ 1, 0, 1, 6, 14, 63, },
+	{ 0, 0, 1, 7, 1, 63, },
+	{ 2, 0, 1, 7, 1, 63, },
+	{ 1, 0, 1, 7, 1, 63, },
+	{ 0, 0, 1, 7, 2, 63, },
+	{ 2, 0, 1, 7, 2, 63, },
+	{ 1, 0, 1, 7, 2, 63, },
+	{ 0, 0, 1, 7, 3, 30, },
+	{ 2, 0, 1, 7, 3, 34, },
+	{ 1, 0, 1, 7, 3, 34, },
+	{ 0, 0, 1, 7, 4, 34, },
+	{ 2, 0, 1, 7, 4, 34, },
+	{ 1, 0, 1, 7, 4, 34, },
+	{ 0, 0, 1, 7, 5, 34, },
+	{ 2, 0, 1, 7, 5, 34, },
+	{ 1, 0, 1, 7, 5, 34, },
+	{ 0, 0, 1, 7, 6, 34, },
+	{ 2, 0, 1, 7, 6, 34, },
+	{ 1, 0, 1, 7, 6, 34, },
+	{ 0, 0, 1, 7, 7, 34, },
+	{ 2, 0, 1, 7, 7, 34, },
+	{ 1, 0, 1, 7, 7, 34, },
+	{ 0, 0, 1, 7, 8, 34, },
+	{ 2, 0, 1, 7, 8, 34, },
+	{ 1, 0, 1, 7, 8, 34, },
+	{ 0, 0, 1, 7, 9, 34, },
+	{ 2, 0, 1, 7, 9, 34, },
+	{ 1, 0, 1, 7, 9, 34, },
+	{ 0, 0, 1, 7, 10, 34, },
+	{ 2, 0, 1, 7, 10, 34, },
+	{ 1, 0, 1, 7, 10, 34, },
+	{ 0, 0, 1, 7, 11, 28, },
+	{ 2, 0, 1, 7, 11, 34, },
+	{ 1, 0, 1, 7, 11, 34, },
+	{ 0, 0, 1, 7, 12, 63, },
+	{ 2, 0, 1, 7, 12, 34, },
+	{ 1, 0, 1, 7, 12, 34, },
+	{ 0, 0, 1, 7, 13, 63, },
+	{ 2, 0, 1, 7, 13, 34, },
+	{ 1, 0, 1, 7, 13, 34, },
+	{ 0, 0, 1, 7, 14, 63, },
+	{ 2, 0, 1, 7, 14, 63, },
+	{ 1, 0, 1, 7, 14, 63, },
+	{ 0, 1, 0, 1, 36, 46, },
+	{ 2, 1, 0, 1, 36, 46, },
+	{ 1, 1, 0, 1, 36, 46, },
+	{ 0, 1, 0, 1, 40, 46, },
+	{ 2, 1, 0, 1, 40, 46, },
+	{ 1, 1, 0, 1, 40, 46, },
+	{ 0, 1, 0, 1, 44, 46, },
+	{ 2, 1, 0, 1, 44, 46, },
+	{ 1, 1, 0, 1, 44, 46, },
+	{ 0, 1, 0, 1, 48, 46, },
+	{ 2, 1, 0, 1, 48, 46, },
+	{ 1, 1, 0, 1, 48, 46, },
+	{ 0, 1, 0, 1, 52, 46, },
+	{ 2, 1, 0, 1, 52, 46, },
+	{ 1, 1, 0, 1, 52, 46, },
+	{ 0, 1, 0, 1, 56, 46, },
+	{ 2, 1, 0, 1, 56, 46, },
+	{ 1, 1, 0, 1, 56, 46, },
+	{ 0, 1, 0, 1, 60, 46, },
+	{ 2, 1, 0, 1, 60, 46, },
+	{ 1, 1, 0, 1, 60, 46, },
+	{ 0, 1, 0, 1, 64, 46, },
+	{ 2, 1, 0, 1, 64, 46, },
+	{ 1, 1, 0, 1, 64, 46, },
+	{ 0, 1, 0, 1, 100, 46, },
+	{ 2, 1, 0, 1, 100, 46, },
+	{ 1, 1, 0, 1, 100, 46, },
+	{ 0, 1, 0, 1, 104, 46, },
+	{ 2, 1, 0, 1, 104, 46, },
+	{ 1, 1, 0, 1, 104, 46, },
+	{ 0, 1, 0, 1, 108, 46, },
+	{ 2, 1, 0, 1, 108, 46, },
+	{ 1, 1, 0, 1, 108, 46, },
+	{ 0, 1, 0, 1, 112, 46, },
+	{ 2, 1, 0, 1, 112, 46, },
+	{ 1, 1, 0, 1, 112, 46, },
+	{ 0, 1, 0, 1, 116, 46, },
+	{ 2, 1, 0, 1, 116, 46, },
+	{ 1, 1, 0, 1, 116, 46, },
+	{ 0, 1, 0, 1, 120, 46, },
+	{ 2, 1, 0, 1, 120, 46, },
+	{ 1, 1, 0, 1, 120, 46, },
+	{ 0, 1, 0, 1, 124, 46, },
+	{ 2, 1, 0, 1, 124, 46, },
+	{ 1, 1, 0, 1, 124, 46, },
+	{ 0, 1, 0, 1, 128, 46, },
+	{ 2, 1, 0, 1, 128, 46, },
+	{ 1, 1, 0, 1, 128, 46, },
+	{ 0, 1, 0, 1, 132, 46, },
+	{ 2, 1, 0, 1, 132, 46, },
+	{ 1, 1, 0, 1, 132, 46, },
+	{ 0, 1, 0, 1, 136, 46, },
+	{ 2, 1, 0, 1, 136, 46, },
+	{ 1, 1, 0, 1, 136, 46, },
+	{ 0, 1, 0, 1, 140, 46, },
+	{ 2, 1, 0, 1, 140, 46, },
+	{ 1, 1, 0, 1, 140, 46, },
+	{ 0, 1, 0, 1, 149, 46, },
+	{ 2, 1, 0, 1, 149, 46, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 46, },
+	{ 2, 1, 0, 1, 153, 46, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 46, },
+	{ 2, 1, 0, 1, 157, 46, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 46, },
+	{ 2, 1, 0, 1, 161, 46, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 46, },
+	{ 2, 1, 0, 1, 165, 46, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 46, },
+	{ 2, 1, 0, 2, 36, 46, },
+	{ 1, 1, 0, 2, 36, 46, },
+	{ 0, 1, 0, 2, 40, 46, },
+	{ 2, 1, 0, 2, 40, 46, },
+	{ 1, 1, 0, 2, 40, 46, },
+	{ 0, 1, 0, 2, 44, 46, },
+	{ 2, 1, 0, 2, 44, 46, },
+	{ 1, 1, 0, 2, 44, 46, },
+	{ 0, 1, 0, 2, 48, 46, },
+	{ 2, 1, 0, 2, 48, 46, },
+	{ 1, 1, 0, 2, 48, 46, },
+	{ 0, 1, 0, 2, 52, 46, },
+	{ 2, 1, 0, 2, 52, 46, },
+	{ 1, 1, 0, 2, 52, 46, },
+	{ 0, 1, 0, 2, 56, 46, },
+	{ 2, 1, 0, 2, 56, 46, },
+	{ 1, 1, 0, 2, 56, 46, },
+	{ 0, 1, 0, 2, 60, 46, },
+	{ 2, 1, 0, 2, 60, 46, },
+	{ 1, 1, 0, 2, 60, 46, },
+	{ 0, 1, 0, 2, 64, 46, },
+	{ 2, 1, 0, 2, 64, 46, },
+	{ 1, 1, 0, 2, 64, 46, },
+	{ 0, 1, 0, 2, 100, 46, },
+	{ 2, 1, 0, 2, 100, 46, },
+	{ 1, 1, 0, 2, 100, 46, },
+	{ 0, 1, 0, 2, 104, 46, },
+	{ 2, 1, 0, 2, 104, 46, },
+	{ 1, 1, 0, 2, 104, 46, },
+	{ 0, 1, 0, 2, 108, 46, },
+	{ 2, 1, 0, 2, 108, 46, },
+	{ 1, 1, 0, 2, 108, 46, },
+	{ 0, 1, 0, 2, 112, 46, },
+	{ 2, 1, 0, 2, 112, 46, },
+	{ 1, 1, 0, 2, 112, 46, },
+	{ 0, 1, 0, 2, 116, 46, },
+	{ 2, 1, 0, 2, 116, 46, },
+	{ 1, 1, 0, 2, 116, 46, },
+	{ 0, 1, 0, 2, 120, 46, },
+	{ 2, 1, 0, 2, 120, 46, },
+	{ 1, 1, 0, 2, 120, 46, },
+	{ 0, 1, 0, 2, 124, 46, },
+	{ 2, 1, 0, 2, 124, 46, },
+	{ 1, 1, 0, 2, 124, 46, },
+	{ 0, 1, 0, 2, 128, 46, },
+	{ 2, 1, 0, 2, 128, 46, },
+	{ 1, 1, 0, 2, 128, 46, },
+	{ 0, 1, 0, 2, 132, 46, },
+	{ 2, 1, 0, 2, 132, 46, },
+	{ 1, 1, 0, 2, 132, 46, },
+	{ 0, 1, 0, 2, 136, 46, },
+	{ 2, 1, 0, 2, 136, 46, },
+	{ 1, 1, 0, 2, 136, 46, },
+	{ 0, 1, 0, 2, 140, 46, },
+	{ 2, 1, 0, 2, 140, 46, },
+	{ 1, 1, 0, 2, 140, 46, },
+	{ 0, 1, 0, 2, 149, 46, },
+	{ 2, 1, 0, 2, 149, 46, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 46, },
+	{ 2, 1, 0, 2, 153, 46, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 46, },
+	{ 2, 1, 0, 2, 157, 46, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 46, },
+	{ 2, 1, 0, 2, 161, 46, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 46, },
+	{ 2, 1, 0, 2, 165, 46, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 46, },
+	{ 2, 1, 0, 3, 36, 46, },
+	{ 1, 1, 0, 3, 36, 46, },
+	{ 0, 1, 0, 3, 40, 46, },
+	{ 2, 1, 0, 3, 40, 46, },
+	{ 1, 1, 0, 3, 40, 46, },
+	{ 0, 1, 0, 3, 44, 46, },
+	{ 2, 1, 0, 3, 44, 46, },
+	{ 1, 1, 0, 3, 44, 46, },
+	{ 0, 1, 0, 3, 48, 46, },
+	{ 2, 1, 0, 3, 48, 46, },
+	{ 1, 1, 0, 3, 48, 46, },
+	{ 0, 1, 0, 3, 52, 46, },
+	{ 2, 1, 0, 3, 52, 46, },
+	{ 1, 1, 0, 3, 52, 46, },
+	{ 0, 1, 0, 3, 56, 46, },
+	{ 2, 1, 0, 3, 56, 46, },
+	{ 1, 1, 0, 3, 56, 46, },
+	{ 0, 1, 0, 3, 60, 46, },
+	{ 2, 1, 0, 3, 60, 46, },
+	{ 1, 1, 0, 3, 60, 46, },
+	{ 0, 1, 0, 3, 64, 46, },
+	{ 2, 1, 0, 3, 64, 46, },
+	{ 1, 1, 0, 3, 64, 46, },
+	{ 0, 1, 0, 3, 100, 46, },
+	{ 2, 1, 0, 3, 100, 46, },
+	{ 1, 1, 0, 3, 100, 46, },
+	{ 0, 1, 0, 3, 104, 46, },
+	{ 2, 1, 0, 3, 104, 46, },
+	{ 1, 1, 0, 3, 104, 46, },
+	{ 0, 1, 0, 3, 108, 46, },
+	{ 2, 1, 0, 3, 108, 46, },
+	{ 1, 1, 0, 3, 108, 46, },
+	{ 0, 1, 0, 3, 112, 46, },
+	{ 2, 1, 0, 3, 112, 46, },
+	{ 1, 1, 0, 3, 112, 46, },
+	{ 0, 1, 0, 3, 116, 46, },
+	{ 2, 1, 0, 3, 116, 46, },
+	{ 1, 1, 0, 3, 116, 46, },
+	{ 0, 1, 0, 3, 120, 46, },
+	{ 2, 1, 0, 3, 120, 46, },
+	{ 1, 1, 0, 3, 120, 46, },
+	{ 0, 1, 0, 3, 124, 46, },
+	{ 2, 1, 0, 3, 124, 46, },
+	{ 1, 1, 0, 3, 124, 46, },
+	{ 0, 1, 0, 3, 128, 46, },
+	{ 2, 1, 0, 3, 128, 46, },
+	{ 1, 1, 0, 3, 128, 46, },
+	{ 0, 1, 0, 3, 132, 46, },
+	{ 2, 1, 0, 3, 132, 46, },
+	{ 1, 1, 0, 3, 132, 46, },
+	{ 0, 1, 0, 3, 136, 46, },
+	{ 2, 1, 0, 3, 136, 46, },
+	{ 1, 1, 0, 3, 136, 46, },
+	{ 0, 1, 0, 3, 140, 46, },
+	{ 2, 1, 0, 3, 140, 46, },
+	{ 1, 1, 0, 3, 140, 46, },
+	{ 0, 1, 0, 3, 149, 46, },
+	{ 2, 1, 0, 3, 149, 46, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 46, },
+	{ 2, 1, 0, 3, 153, 46, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 46, },
+	{ 2, 1, 0, 3, 157, 46, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 46, },
+	{ 2, 1, 0, 3, 161, 46, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 46, },
+	{ 2, 1, 0, 3, 165, 46, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 0, 6, 36, 46, },
+	{ 2, 1, 0, 6, 36, 46, },
+	{ 1, 1, 0, 6, 36, 46, },
+	{ 0, 1, 0, 6, 40, 46, },
+	{ 2, 1, 0, 6, 40, 46, },
+	{ 1, 1, 0, 6, 40, 46, },
+	{ 0, 1, 0, 6, 44, 46, },
+	{ 2, 1, 0, 6, 44, 46, },
+	{ 1, 1, 0, 6, 44, 46, },
+	{ 0, 1, 0, 6, 48, 46, },
+	{ 2, 1, 0, 6, 48, 46, },
+	{ 1, 1, 0, 6, 48, 46, },
+	{ 0, 1, 0, 6, 52, 46, },
+	{ 2, 1, 0, 6, 52, 46, },
+	{ 1, 1, 0, 6, 52, 46, },
+	{ 0, 1, 0, 6, 56, 46, },
+	{ 2, 1, 0, 6, 56, 46, },
+	{ 1, 1, 0, 6, 56, 46, },
+	{ 0, 1, 0, 6, 60, 46, },
+	{ 2, 1, 0, 6, 60, 46, },
+	{ 1, 1, 0, 6, 60, 46, },
+	{ 0, 1, 0, 6, 64, 46, },
+	{ 2, 1, 0, 6, 64, 46, },
+	{ 1, 1, 0, 6, 64, 46, },
+	{ 0, 1, 0, 6, 100, 46, },
+	{ 2, 1, 0, 6, 100, 46, },
+	{ 1, 1, 0, 6, 100, 46, },
+	{ 0, 1, 0, 6, 104, 46, },
+	{ 2, 1, 0, 6, 104, 46, },
+	{ 1, 1, 0, 6, 104, 46, },
+	{ 0, 1, 0, 6, 108, 46, },
+	{ 2, 1, 0, 6, 108, 46, },
+	{ 1, 1, 0, 6, 108, 46, },
+	{ 0, 1, 0, 6, 112, 46, },
+	{ 2, 1, 0, 6, 112, 46, },
+	{ 1, 1, 0, 6, 112, 46, },
+	{ 0, 1, 0, 6, 116, 46, },
+	{ 2, 1, 0, 6, 116, 46, },
+	{ 1, 1, 0, 6, 116, 46, },
+	{ 0, 1, 0, 6, 120, 46, },
+	{ 2, 1, 0, 6, 120, 46, },
+	{ 1, 1, 0, 6, 120, 46, },
+	{ 0, 1, 0, 6, 124, 46, },
+	{ 2, 1, 0, 6, 124, 46, },
+	{ 1, 1, 0, 6, 124, 46, },
+	{ 0, 1, 0, 6, 128, 46, },
+	{ 2, 1, 0, 6, 128, 46, },
+	{ 1, 1, 0, 6, 128, 46, },
+	{ 0, 1, 0, 6, 132, 46, },
+	{ 2, 1, 0, 6, 132, 46, },
+	{ 1, 1, 0, 6, 132, 46, },
+	{ 0, 1, 0, 6, 136, 46, },
+	{ 2, 1, 0, 6, 136, 46, },
+	{ 1, 1, 0, 6, 136, 46, },
+	{ 0, 1, 0, 6, 140, 46, },
+	{ 2, 1, 0, 6, 140, 46, },
+	{ 1, 1, 0, 6, 140, 46, },
+	{ 0, 1, 0, 6, 149, 46, },
+	{ 2, 1, 0, 6, 149, 46, },
+	{ 1, 1, 0, 6, 149, 63, },
+	{ 0, 1, 0, 6, 153, 46, },
+	{ 2, 1, 0, 6, 153, 46, },
+	{ 1, 1, 0, 6, 153, 63, },
+	{ 0, 1, 0, 6, 157, 46, },
+	{ 2, 1, 0, 6, 157, 46, },
+	{ 1, 1, 0, 6, 157, 63, },
+	{ 0, 1, 0, 6, 161, 46, },
+	{ 2, 1, 0, 6, 161, 46, },
+	{ 1, 1, 0, 6, 161, 63, },
+	{ 0, 1, 0, 6, 165, 46, },
+	{ 2, 1, 0, 6, 165, 46, },
+	{ 1, 1, 0, 6, 165, 63, },
+	{ 0, 1, 0, 7, 36, 46, },
+	{ 2, 1, 0, 7, 36, 46, },
+	{ 1, 1, 0, 7, 36, 46, },
+	{ 0, 1, 0, 7, 40, 46, },
+	{ 2, 1, 0, 7, 40, 46, },
+	{ 1, 1, 0, 7, 40, 46, },
+	{ 0, 1, 0, 7, 44, 46, },
+	{ 2, 1, 0, 7, 44, 46, },
+	{ 1, 1, 0, 7, 44, 46, },
+	{ 0, 1, 0, 7, 48, 46, },
+	{ 2, 1, 0, 7, 48, 46, },
+	{ 1, 1, 0, 7, 48, 46, },
+	{ 0, 1, 0, 7, 52, 46, },
+	{ 2, 1, 0, 7, 52, 46, },
+	{ 1, 1, 0, 7, 52, 46, },
+	{ 0, 1, 0, 7, 56, 46, },
+	{ 2, 1, 0, 7, 56, 46, },
+	{ 1, 1, 0, 7, 56, 46, },
+	{ 0, 1, 0, 7, 60, 46, },
+	{ 2, 1, 0, 7, 60, 46, },
+	{ 1, 1, 0, 7, 60, 46, },
+	{ 0, 1, 0, 7, 64, 46, },
+	{ 2, 1, 0, 7, 64, 46, },
+	{ 1, 1, 0, 7, 64, 46, },
+	{ 0, 1, 0, 7, 100, 46, },
+	{ 2, 1, 0, 7, 100, 46, },
+	{ 1, 1, 0, 7, 100, 46, },
+	{ 0, 1, 0, 7, 104, 46, },
+	{ 2, 1, 0, 7, 104, 46, },
+	{ 1, 1, 0, 7, 104, 46, },
+	{ 0, 1, 0, 7, 108, 46, },
+	{ 2, 1, 0, 7, 108, 46, },
+	{ 1, 1, 0, 7, 108, 46, },
+	{ 0, 1, 0, 7, 112, 46, },
+	{ 2, 1, 0, 7, 112, 46, },
+	{ 1, 1, 0, 7, 112, 46, },
+	{ 0, 1, 0, 7, 116, 46, },
+	{ 2, 1, 0, 7, 116, 46, },
+	{ 1, 1, 0, 7, 116, 46, },
+	{ 0, 1, 0, 7, 120, 46, },
+	{ 2, 1, 0, 7, 120, 46, },
+	{ 1, 1, 0, 7, 120, 46, },
+	{ 0, 1, 0, 7, 124, 46, },
+	{ 2, 1, 0, 7, 124, 46, },
+	{ 1, 1, 0, 7, 124, 46, },
+	{ 0, 1, 0, 7, 128, 46, },
+	{ 2, 1, 0, 7, 128, 46, },
+	{ 1, 1, 0, 7, 128, 46, },
+	{ 0, 1, 0, 7, 132, 46, },
+	{ 2, 1, 0, 7, 132, 46, },
+	{ 1, 1, 0, 7, 132, 46, },
+	{ 0, 1, 0, 7, 136, 46, },
+	{ 2, 1, 0, 7, 136, 46, },
+	{ 1, 1, 0, 7, 136, 46, },
+	{ 0, 1, 0, 7, 140, 46, },
+	{ 2, 1, 0, 7, 140, 46, },
+	{ 1, 1, 0, 7, 140, 46, },
+	{ 0, 1, 0, 7, 149, 46, },
+	{ 2, 1, 0, 7, 149, 46, },
+	{ 1, 1, 0, 7, 149, 63, },
+	{ 0, 1, 0, 7, 153, 46, },
+	{ 2, 1, 0, 7, 153, 46, },
+	{ 1, 1, 0, 7, 153, 63, },
+	{ 0, 1, 0, 7, 157, 46, },
+	{ 2, 1, 0, 7, 157, 46, },
+	{ 1, 1, 0, 7, 157, 63, },
+	{ 0, 1, 0, 7, 161, 46, },
+	{ 2, 1, 0, 7, 161, 46, },
+	{ 1, 1, 0, 7, 161, 63, },
+	{ 0, 1, 0, 7, 165, 46, },
+	{ 2, 1, 0, 7, 165, 46, },
+	{ 1, 1, 0, 7, 165, 63, },
+	{ 0, 1, 1, 2, 38, 46, },
+	{ 2, 1, 1, 2, 38, 46, },
+	{ 1, 1, 1, 2, 38, 46, },
+	{ 0, 1, 1, 2, 46, 46, },
+	{ 2, 1, 1, 2, 46, 46, },
+	{ 1, 1, 1, 2, 46, 46, },
+	{ 0, 1, 1, 2, 54, 46, },
+	{ 2, 1, 1, 2, 54, 46, },
+	{ 1, 1, 1, 2, 54, 46, },
+	{ 0, 1, 1, 2, 62, 46, },
+	{ 2, 1, 1, 2, 62, 46, },
+	{ 1, 1, 1, 2, 62, 46, },
+	{ 0, 1, 1, 2, 102, 46, },
+	{ 2, 1, 1, 2, 102, 46, },
+	{ 1, 1, 1, 2, 102, 46, },
+	{ 0, 1, 1, 2, 110, 46, },
+	{ 2, 1, 1, 2, 110, 46, },
+	{ 1, 1, 1, 2, 110, 46, },
+	{ 0, 1, 1, 2, 118, 46, },
+	{ 2, 1, 1, 2, 118, 46, },
+	{ 1, 1, 1, 2, 118, 46, },
+	{ 0, 1, 1, 2, 126, 46, },
+	{ 2, 1, 1, 2, 126, 46, },
+	{ 1, 1, 1, 2, 126, 46, },
+	{ 0, 1, 1, 2, 134, 46, },
+	{ 2, 1, 1, 2, 134, 46, },
+	{ 1, 1, 1, 2, 134, 46, },
+	{ 0, 1, 1, 2, 151, 46, },
+	{ 2, 1, 1, 2, 151, 46, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 46, },
+	{ 2, 1, 1, 2, 159, 46, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 46, },
+	{ 2, 1, 1, 3, 38, 46, },
+	{ 1, 1, 1, 3, 38, 46, },
+	{ 0, 1, 1, 3, 46, 46, },
+	{ 2, 1, 1, 3, 46, 46, },
+	{ 1, 1, 1, 3, 46, 46, },
+	{ 0, 1, 1, 3, 54, 46, },
+	{ 2, 1, 1, 3, 54, 46, },
+	{ 1, 1, 1, 3, 54, 46, },
+	{ 0, 1, 1, 3, 62, 46, },
+	{ 2, 1, 1, 3, 62, 46, },
+	{ 1, 1, 1, 3, 62, 46, },
+	{ 0, 1, 1, 3, 102, 46, },
+	{ 2, 1, 1, 3, 102, 46, },
+	{ 1, 1, 1, 3, 102, 46, },
+	{ 0, 1, 1, 3, 110, 46, },
+	{ 2, 1, 1, 3, 110, 46, },
+	{ 1, 1, 1, 3, 110, 46, },
+	{ 0, 1, 1, 3, 118, 46, },
+	{ 2, 1, 1, 3, 118, 46, },
+	{ 1, 1, 1, 3, 118, 46, },
+	{ 0, 1, 1, 3, 126, 46, },
+	{ 2, 1, 1, 3, 126, 46, },
+	{ 1, 1, 1, 3, 126, 46, },
+	{ 0, 1, 1, 3, 134, 46, },
+	{ 2, 1, 1, 3, 134, 46, },
+	{ 1, 1, 1, 3, 134, 46, },
+	{ 0, 1, 1, 3, 151, 46, },
+	{ 2, 1, 1, 3, 151, 46, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 46, },
+	{ 2, 1, 1, 3, 159, 46, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 1, 6, 38, 46, },
+	{ 2, 1, 1, 6, 38, 46, },
+	{ 1, 1, 1, 6, 38, 46, },
+	{ 0, 1, 1, 6, 46, 46, },
+	{ 2, 1, 1, 6, 46, 46, },
+	{ 1, 1, 1, 6, 46, 46, },
+	{ 0, 1, 1, 6, 54, 46, },
+	{ 2, 1, 1, 6, 54, 46, },
+	{ 1, 1, 1, 6, 54, 46, },
+	{ 0, 1, 1, 6, 62, 46, },
+	{ 2, 1, 1, 6, 62, 46, },
+	{ 1, 1, 1, 6, 62, 46, },
+	{ 0, 1, 1, 6, 102, 46, },
+	{ 2, 1, 1, 6, 102, 46, },
+	{ 1, 1, 1, 6, 102, 46, },
+	{ 0, 1, 1, 6, 110, 46, },
+	{ 2, 1, 1, 6, 110, 46, },
+	{ 1, 1, 1, 6, 110, 46, },
+	{ 0, 1, 1, 6, 118, 46, },
+	{ 2, 1, 1, 6, 118, 46, },
+	{ 1, 1, 1, 6, 118, 46, },
+	{ 0, 1, 1, 6, 126, 46, },
+	{ 2, 1, 1, 6, 126, 46, },
+	{ 1, 1, 1, 6, 126, 46, },
+	{ 0, 1, 1, 6, 134, 46, },
+	{ 2, 1, 1, 6, 134, 46, },
+	{ 1, 1, 1, 6, 134, 46, },
+	{ 0, 1, 1, 6, 151, 46, },
+	{ 2, 1, 1, 6, 151, 46, },
+	{ 1, 1, 1, 6, 151, 63, },
+	{ 0, 1, 1, 6, 159, 46, },
+	{ 2, 1, 1, 6, 159, 46, },
+	{ 1, 1, 1, 6, 159, 63, },
+	{ 0, 1, 1, 7, 38, 46, },
+	{ 2, 1, 1, 7, 38, 46, },
+	{ 1, 1, 1, 7, 38, 46, },
+	{ 0, 1, 1, 7, 46, 46, },
+	{ 2, 1, 1, 7, 46, 46, },
+	{ 1, 1, 1, 7, 46, 46, },
+	{ 0, 1, 1, 7, 54, 46, },
+	{ 2, 1, 1, 7, 54, 46, },
+	{ 1, 1, 1, 7, 54, 46, },
+	{ 0, 1, 1, 7, 62, 46, },
+	{ 2, 1, 1, 7, 62, 46, },
+	{ 1, 1, 1, 7, 62, 46, },
+	{ 0, 1, 1, 7, 102, 46, },
+	{ 2, 1, 1, 7, 102, 46, },
+	{ 1, 1, 1, 7, 102, 46, },
+	{ 0, 1, 1, 7, 110, 46, },
+	{ 2, 1, 1, 7, 110, 46, },
+	{ 1, 1, 1, 7, 110, 46, },
+	{ 0, 1, 1, 7, 118, 46, },
+	{ 2, 1, 1, 7, 118, 46, },
+	{ 1, 1, 1, 7, 118, 46, },
+	{ 0, 1, 1, 7, 126, 46, },
+	{ 2, 1, 1, 7, 126, 46, },
+	{ 1, 1, 1, 7, 126, 46, },
+	{ 0, 1, 1, 7, 134, 46, },
+	{ 2, 1, 1, 7, 134, 46, },
+	{ 1, 1, 1, 7, 134, 46, },
+	{ 0, 1, 1, 7, 151, 46, },
+	{ 2, 1, 1, 7, 151, 46, },
+	{ 1, 1, 1, 7, 151, 63, },
+	{ 0, 1, 1, 7, 159, 46, },
+	{ 2, 1, 1, 7, 159, 46, },
+	{ 1, 1, 1, 7, 159, 63, },
+	{ 0, 1, 2, 4, 42, 46, },
+	{ 2, 1, 2, 4, 42, 46, },
+	{ 1, 1, 2, 4, 42, 46, },
+	{ 0, 1, 2, 4, 58, 46, },
+	{ 2, 1, 2, 4, 58, 46, },
+	{ 1, 1, 2, 4, 58, 46, },
+	{ 0, 1, 2, 4, 106, 46, },
+	{ 2, 1, 2, 4, 106, 46, },
+	{ 1, 1, 2, 4, 106, 46, },
+	{ 0, 1, 2, 4, 122, 46, },
+	{ 2, 1, 2, 4, 122, 46, },
+	{ 1, 1, 2, 4, 122, 46, },
+	{ 0, 1, 2, 4, 155, 46, },
+	{ 2, 1, 2, 4, 155, 46, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 46, },
+	{ 2, 1, 2, 5, 42, 46, },
+	{ 1, 1, 2, 5, 42, 46, },
+	{ 0, 1, 2, 5, 58, 46, },
+	{ 2, 1, 2, 5, 58, 46, },
+	{ 1, 1, 2, 5, 58, 46, },
+	{ 0, 1, 2, 5, 106, 46, },
+	{ 2, 1, 2, 5, 106, 46, },
+	{ 1, 1, 2, 5, 106, 46, },
+	{ 0, 1, 2, 5, 122, 46, },
+	{ 2, 1, 2, 5, 122, 46, },
+	{ 1, 1, 2, 5, 122, 46, },
+	{ 0, 1, 2, 5, 155, 46, },
+	{ 2, 1, 2, 5, 155, 46, },
+	{ 1, 1, 2, 5, 155, 63, },
+	{ 0, 1, 2, 8, 42, 46, },
+	{ 2, 1, 2, 8, 42, 46, },
+	{ 1, 1, 2, 8, 42, 46, },
+	{ 0, 1, 2, 8, 58, 46, },
+	{ 2, 1, 2, 8, 58, 46, },
+	{ 1, 1, 2, 8, 58, 46, },
+	{ 0, 1, 2, 8, 106, 46, },
+	{ 2, 1, 2, 8, 106, 46, },
+	{ 1, 1, 2, 8, 106, 46, },
+	{ 0, 1, 2, 8, 122, 46, },
+	{ 2, 1, 2, 8, 122, 46, },
+	{ 1, 1, 2, 8, 122, 46, },
+	{ 0, 1, 2, 8, 155, 46, },
+	{ 2, 1, 2, 8, 155, 46, },
+	{ 1, 1, 2, 8, 155, 63, },
+	{ 0, 1, 2, 9, 42, 46, },
+	{ 2, 1, 2, 9, 42, 46, },
+	{ 1, 1, 2, 9, 42, 46, },
+	{ 0, 1, 2, 9, 58, 46, },
+	{ 2, 1, 2, 9, 58, 46, },
+	{ 1, 1, 2, 9, 58, 46, },
+	{ 0, 1, 2, 9, 106, 46, },
+	{ 2, 1, 2, 9, 106, 46, },
+	{ 1, 1, 2, 9, 106, 46, },
+	{ 0, 1, 2, 9, 122, 46, },
+	{ 2, 1, 2, 9, 122, 46, },
+	{ 1, 1, 2, 9, 122, 46, },
+	{ 0, 1, 2, 9, 155, 46, },
+	{ 2, 1, 2, 9, 155, 46, },
+	{ 1, 1, 2, 9, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8814a_txpwr_lmt_type8);
+
+static const u8
+rtw8814a_pwrtrk_5gd_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10, 11,
+	 11, 12, 13, 13, 14, 15, 15, 16, 17, 17, 18, 19, 19},
+	{0, 1, 1, 2, 2, 3, 4, 4, 5, 6, 6, 7, 7, 8, 9, 9, 10, 10,
+	 11, 12, 12, 13, 13, 14, 15, 15, 16, 17, 17, 18},
+	{0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 12, 12, 13, 14, 14, 15, 16, 16, 17, 17, 18, 19},
+};
+
+static const u8
+rtw8814a_pwrtrk_5gd_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
+	 17, 18, 19, 20, 21, 22, 23, 24, 25, 25, 25, 25, 25},
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
+	 17, 17, 18, 19, 20, 21, 22, 23, 24, 25, 25, 25, 25},
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
+	 17, 17, 18, 19, 20, 21, 22, 23, 24, 25, 25, 25, 25},
+};
+
+static const u8
+rtw8814a_pwrtrk_5gc_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 2, 3, 4, 4, 5, 5, 6, 7, 7, 8, 8, 9, 10, 10,
+	 11, 12, 13, 14, 15, 15, 15, 15, 16, 16, 17, 18},
+	{0, 1, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 8, 9, 10, 10, 11,
+	 12, 12, 13, 14, 15, 15, 16, 17, 17, 18, 19, 19, 20},
+	{0, 1, 1, 2, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 10, 11, 11,
+	 12, 13, 13, 14, 14, 15, 16, 17, 18, 18, 19, 20, 20},
+};
+
+static const u8
+rtw8814a_pwrtrk_5gc_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
+	 16, 16, 17, 18, 19, 20, 21, 21, 22, 23, 24, 25, 25},
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
+	 17, 17, 18, 19, 20, 21, 22, 23, 24, 24, 25, 25, 25},
+	{0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
+	 16, 16, 17, 18, 19, 20, 21, 22, 23, 23, 24, 25, 25},
+};
+
+static const u8
+rtw8814a_pwrtrk_5gb_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 2, 3, 4, 4, 5, 5, 6, 7, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 13, 13, 14, 14, 15, 15, 16, 17, 17},
+	{0, 1, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 8, 9, 10, 10, 11,
+	 12, 12, 13, 14, 15, 15, 16, 17, 17, 18, 19, 19, 20},
+	{0, 1, 1, 2, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 10, 11, 11,
+	 12, 13, 13, 14, 14, 15, 16, 17, 18, 18, 19, 20, 20},
+};
+
+static const u8
+rtw8814a_pwrtrk_5gb_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14,
+	 15, 15, 16, 17, 18, 18, 19, 20, 21, 22, 23, 23, 24},
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
+	 17, 18, 18, 19, 20, 21, 22, 23, 24, 25, 25, 25, 25},
+	{0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
+	 16, 16, 17, 18, 19, 20, 20, 21, 22, 23, 24, 25, 25},
+};
+
+static const u8
+rtw8814a_pwrtrk_5ga_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8,
+	 8, 9, 9, 10, 11, 11, 11, 11, 12, 12, 13, 13, 14},
+	{0, 1, 1, 2, 3, 4, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 11,
+	 12, 13, 14, 14, 15, 16, 16, 17, 18, 19, 19, 20, 21},
+	{0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 12, 12, 13, 14, 14, 15, 16, 16, 17, 17, 18, 19},
+};
+
+static const u8
+rtw8814a_pwrtrk_5ga_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 12, 13,
+	 14, 15, 16, 16, 17, 18, 19, 20, 21, 21, 22, 23, 24},
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
+	 17, 18, 19, 20, 21, 22, 23, 23, 24, 25, 25, 25, 25},
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
+	 17, 17, 18, 19, 20, 21, 22, 23, 24, 25, 25, 25, 25},
+};
+
+static const u8 rtw8814a_pwrtrk_2gd_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6, 6, 7,
+	 7, 8, 8, 9, 9, 9, 10, 10, 11, 11, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_2gd_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 9, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_2gc_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7,
+	 7, 7, 8, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_2gc_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 13
+};
+
+static const u8 rtw8814a_pwrtrk_2gb_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7,
+	 7, 8, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_2gb_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 9, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_2ga_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 7,
+	 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 13
+};
+
+static const u8 rtw8814a_pwrtrk_2ga_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8,
+	 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_2g_cck_d_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7,
+	 7, 8, 8, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_2g_cck_d_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 9, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_2g_cck_c_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 6,
+	 7, 7, 8, 8, 8, 9, 9, 10, 10, 10, 11, 11, 12
+};
+
+static const u8 rtw8814a_pwrtrk_2g_cck_c_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 6, 6, 7, 7,
+	 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 13
+};
+
+static const u8 rtw8814a_pwrtrk_2g_cck_b_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6,
+	 6, 6, 7, 7, 8, 8, 8, 9, 9, 10, 10, 10, 11, 11
+};
+
+static const u8 rtw8814a_pwrtrk_2g_cck_b_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6, 6, 7,
+	 7, 8, 8, 9, 9, 9, 10, 10, 11, 11, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_2g_cck_a_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7,
+	 7, 8, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_2g_cck_a_p[RTW_PWR_TRK_TBL_SZ] = {
+	 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7,
+	 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14
+};
+
+const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_tbl = {
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_5gd_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_5gd_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_5gd_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_5gd_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_5gd_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_5gd_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_5gc_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_5gc_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_5gc_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_5gc_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_5gc_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_5gc_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_5gb_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_5gb_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_5gb_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_5gb_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_5gb_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_5gb_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_5ga_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_5ga_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_5ga_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_5ga_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_5ga_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_5ga_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_2gd_n = rtw8814a_pwrtrk_2gd_n,
+	.pwrtrk_2gd_p = rtw8814a_pwrtrk_2gd_p,
+	.pwrtrk_2gc_n = rtw8814a_pwrtrk_2gc_n,
+	.pwrtrk_2gc_p = rtw8814a_pwrtrk_2gc_p,
+	.pwrtrk_2gb_n = rtw8814a_pwrtrk_2gb_n,
+	.pwrtrk_2gb_p = rtw8814a_pwrtrk_2gb_p,
+	.pwrtrk_2ga_n = rtw8814a_pwrtrk_2ga_n,
+	.pwrtrk_2ga_p = rtw8814a_pwrtrk_2ga_p,
+	.pwrtrk_2g_cckd_n = rtw8814a_pwrtrk_2g_cck_d_n,
+	.pwrtrk_2g_cckd_p = rtw8814a_pwrtrk_2g_cck_d_p,
+	.pwrtrk_2g_cckc_n = rtw8814a_pwrtrk_2g_cck_c_n,
+	.pwrtrk_2g_cckc_p = rtw8814a_pwrtrk_2g_cck_c_p,
+	.pwrtrk_2g_cckb_n = rtw8814a_pwrtrk_2g_cck_b_n,
+	.pwrtrk_2g_cckb_p = rtw8814a_pwrtrk_2g_cck_b_p,
+	.pwrtrk_2g_ccka_n = rtw8814a_pwrtrk_2g_cck_a_n,
+	.pwrtrk_2g_ccka_p = rtw8814a_pwrtrk_2g_cck_a_p,
+};
+
+static const u8
+rtw8814a_pwrtrk_type0_5gd_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+};
+
+static const u8
+rtw8814a_pwrtrk_type0_5gd_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8
+rtw8814a_pwrtrk_type0_5gc_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+};
+
+static const u8
+rtw8814a_pwrtrk_type0_5gc_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8
+rtw8814a_pwrtrk_type0_5gb_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+};
+
+static const u8
+rtw8814a_pwrtrk_type0_5gb_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8
+rtw8814a_pwrtrk_type0_5ga_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+};
+
+static const u8
+rtw8814a_pwrtrk_type0_5ga_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2gd_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2gd_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2gc_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2gc_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2gb_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2gb_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2ga_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2ga_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2g_cck_d_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2g_cck_d_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2g_cck_c_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2g_cck_c_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2g_cck_b_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2g_cck_b_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2g_cck_a_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type0_2g_cck_a_p[RTW_PWR_TRK_TBL_SZ] = {
+	 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type0_tbl = {
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type0_5gd_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type0_5gd_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type0_5gd_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type0_5gd_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type0_5gd_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type0_5gd_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type0_5gc_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type0_5gc_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type0_5gc_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type0_5gc_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type0_5gc_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type0_5gc_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type0_5gb_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type0_5gb_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type0_5gb_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type0_5gb_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type0_5gb_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type0_5gb_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type0_5ga_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type0_5ga_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type0_5ga_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type0_5ga_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type0_5ga_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type0_5ga_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_2gd_n = rtw8814a_pwrtrk_type0_2gd_n,
+	.pwrtrk_2gd_p = rtw8814a_pwrtrk_type0_2gd_p,
+	.pwrtrk_2gc_n = rtw8814a_pwrtrk_type0_2gc_n,
+	.pwrtrk_2gc_p = rtw8814a_pwrtrk_type0_2gc_p,
+	.pwrtrk_2gb_n = rtw8814a_pwrtrk_type0_2gb_n,
+	.pwrtrk_2gb_p = rtw8814a_pwrtrk_type0_2gb_p,
+	.pwrtrk_2ga_n = rtw8814a_pwrtrk_type0_2ga_n,
+	.pwrtrk_2ga_p = rtw8814a_pwrtrk_type0_2ga_p,
+	.pwrtrk_2g_cckd_n = rtw8814a_pwrtrk_type0_2g_cck_d_n,
+	.pwrtrk_2g_cckd_p = rtw8814a_pwrtrk_type0_2g_cck_d_p,
+	.pwrtrk_2g_cckc_n = rtw8814a_pwrtrk_type0_2g_cck_c_n,
+	.pwrtrk_2g_cckc_p = rtw8814a_pwrtrk_type0_2g_cck_c_p,
+	.pwrtrk_2g_cckb_n = rtw8814a_pwrtrk_type0_2g_cck_b_n,
+	.pwrtrk_2g_cckb_p = rtw8814a_pwrtrk_type0_2g_cck_b_p,
+	.pwrtrk_2g_ccka_n = rtw8814a_pwrtrk_type0_2g_cck_a_n,
+	.pwrtrk_2g_ccka_p = rtw8814a_pwrtrk_type0_2g_cck_a_p,
+};
+
+static const u8
+rtw8814a_pwrtrk_type2_5gd_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 10, 11, 11, 12, 12,
+	 12, 13, 14, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16},
+	{0, 1, 2, 3, 4, 5, 5, 6, 6, 7, 8, 9, 9, 10, 10, 10, 10,
+	 11, 11, 12, 12, 13, 14, 15, 16, 16, 16, 16, 16, 16},
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 10, 11, 11, 11, 12,
+	 12, 13, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+};
+
+static const u8
+rtw8814a_pwrtrk_type2_5gd_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14,
+	 15, 16, 17, 18, 19, 20, 21, 22, 22, 22, 22, 22, 22},
+	{0, 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14,
+	 15, 16, 17, 18, 19, 20, 21, 22, 22, 22, 22, 22, 22},
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
+	 17, 18, 19, 20, 21, 22, 23, 23, 23, 23, 23, 23, 23},
+};
+
+static const u8
+rtw8814a_pwrtrk_type2_5gc_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 10, 10, 11, 11, 12,
+	 12, 13, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 9, 10, 10, 11, 11, 12,
+	 13, 13, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 1, 2, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 9, 10, 11, 11,
+	 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type2_5gc_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14,
+	 15, 16, 17, 18, 19, 20, 21, 21, 21, 21, 21, 21, 21},
+	{0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 8, 9, 10, 11, 12, 13, 14,
+	 15, 16, 17, 18, 19, 20, 20, 20, 21, 21, 21, 21, 21},
+	{0, 1, 2, 3, 3, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14,
+	 15, 16, 17, 18, 19, 20, 21, 21, 21, 21, 21, 21, 21},
+};
+
+static const u8
+rtw8814a_pwrtrk_type2_5gb_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 11, 12, 13,
+	 13, 13, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 9, 10, 10, 11, 11, 12,
+	 13, 13, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 1, 2, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 9, 10, 11, 11,
+	 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type2_5gb_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15,
+	 16, 17, 18, 19, 20, 21, 21, 21, 21, 21, 21, 21, 21},
+	{0, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 10, 11, 12, 13,
+	 14, 15, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 20},
+	{0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14,
+	 15, 16, 17, 18, 19, 20, 21, 21, 21, 21, 21, 21, 21},
+};
+
+static const u8
+rtw8814a_pwrtrk_type2_5ga_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 5, 5, 6, 7, 7, 8, 9, 10, 10, 11, 11, 11,
+	 12, 13, 13, 13, 13, 14, 15, 15, 15, 15, 15, 15, 15},
+	{0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 8, 9, 10, 10, 11, 12, 12,
+	 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+	{0, 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10, 11, 11, 11, 12,
+	 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13},
+};
+
+static const u8
+rtw8814a_pwrtrk_type2_5ga_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 10, 11, 12, 13, 14,
+	 15, 15, 16, 17, 18, 18, 19, 19, 20, 20, 20, 20, 20},
+	{0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 11, 12, 13, 14,
+	 15, 16, 16, 17, 18, 19, 20, 20, 20, 20, 20, 20, 20},
+	{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15,
+	 15, 16, 17, 18, 19, 19, 20, 20, 20, 20, 20, 20, 20},
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2gd_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5,
+	 6, 6, 7, 8, 9, 10, 11, 11, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2gd_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 6, 7, 7, 8, 9, 9, 10,
+	 10, 11, 12, 12, 13, 14, 14, 14, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2gc_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 6, 6, 7, 7, 8, 8, 9, 10,
+	 10, 11, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2gc_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 8, 9, 10, 10,
+	 11, 12, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2gb_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7, 8, 8, 8,
+	 9, 9, 10, 10, 11, 11, 12, 12, 12, 13, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2gb_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 9, 10,
+	 10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2ga_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 2, 2, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 9, 9, 9,
+	 10, 11, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2ga_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 3, 3, 4, 4, 4, 5, 6, 6, 7, 7, 8, 8, 9, 10,
+	 11, 12, 12, 13, 13, 14, 14, 14, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2g_cck_d_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 7, 8,
+	 9, 9, 9, 9, 9, 9, 10, 10, 11, 11, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2g_cck_d_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 1, 2, 3, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 10, 11, 12, 12, 13, 14, 14, 14, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2g_cck_c_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 2, 2, 3, 4, 5, 5, 6, 6, 6, 6, 7, 8, 9, 9, 10,
+	 10, 11, 11, 11, 12, 13, 13, 13, 13, 13, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2g_cck_c_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10,
+	 10, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2g_cck_b_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 4, 5, 6, 6, 7, 7, 8, 8, 9, 10,
+	 10, 10, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2g_cck_b_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6, 7, 8, 8, 9, 9, 10,
+	 10, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2g_cck_a_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 2, 2, 3, 4, 4, 4, 5, 5, 6, 6, 7, 8, 9, 9, 9, 9,
+	 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type2_2g_cck_a_p[RTW_PWR_TRK_TBL_SZ] = {
+	 0, 0, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9, 10, 10,
+	 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13
+};
+
+const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type2_tbl = {
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type2_5gd_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type2_5gd_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type2_5gd_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type2_5gd_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type2_5gd_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type2_5gd_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type2_5gc_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type2_5gc_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type2_5gc_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type2_5gc_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type2_5gc_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type2_5gc_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type2_5gb_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type2_5gb_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type2_5gb_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type2_5gb_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type2_5gb_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type2_5gb_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type2_5ga_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type2_5ga_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type2_5ga_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type2_5ga_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type2_5ga_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type2_5ga_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_2gd_n = rtw8814a_pwrtrk_type2_2gd_n,
+	.pwrtrk_2gd_p = rtw8814a_pwrtrk_type2_2gd_p,
+	.pwrtrk_2gc_n = rtw8814a_pwrtrk_type2_2gc_n,
+	.pwrtrk_2gc_p = rtw8814a_pwrtrk_type2_2gc_p,
+	.pwrtrk_2gb_n = rtw8814a_pwrtrk_type2_2gb_n,
+	.pwrtrk_2gb_p = rtw8814a_pwrtrk_type2_2gb_p,
+	.pwrtrk_2ga_n = rtw8814a_pwrtrk_type2_2ga_n,
+	.pwrtrk_2ga_p = rtw8814a_pwrtrk_type2_2ga_p,
+	.pwrtrk_2g_cckd_n = rtw8814a_pwrtrk_type2_2g_cck_d_n,
+	.pwrtrk_2g_cckd_p = rtw8814a_pwrtrk_type2_2g_cck_d_p,
+	.pwrtrk_2g_cckc_n = rtw8814a_pwrtrk_type2_2g_cck_c_n,
+	.pwrtrk_2g_cckc_p = rtw8814a_pwrtrk_type2_2g_cck_c_p,
+	.pwrtrk_2g_cckb_n = rtw8814a_pwrtrk_type2_2g_cck_b_n,
+	.pwrtrk_2g_cckb_p = rtw8814a_pwrtrk_type2_2g_cck_b_p,
+	.pwrtrk_2g_ccka_n = rtw8814a_pwrtrk_type2_2g_cck_a_n,
+	.pwrtrk_2g_ccka_p = rtw8814a_pwrtrk_type2_2g_cck_a_p,
+};
+
+static const u8
+rtw8814a_pwrtrk_type5_5gd_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 3, 3, 3, 4, 6, 6, 7, 7, 8, 9, 10, 11, 12, 13, 13, 14,
+	 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 4, 5, 6, 7, 7, 8, 7, 8, 10, 11, 12, 12, 13, 13, 14, 14,
+	 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 5, 5, 6, 7, 8, 9, 9, 10, 11, 12, 13, 13, 14, 15, 15, 16,
+	 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16},
+};
+
+static const u8
+rtw8814a_pwrtrk_type5_5gd_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 0, 1, 2, 2, 3, 4, 5, 5, 6, 7, 9, 10, 10, 11, 12,
+	 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
+	{0, 0, 0, 1, 1, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 11, 12,
+	 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14},
+	{0, 0, 0, 1, 1, 2, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 13,
+	 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type5_5gc_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 3, 3, 4, 6, 7, 7, 8, 9, 9, 9, 10, 10, 10,
+	 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12},
+	{0, 1, 2, 3, 3, 7, 7, 8, 8, 9, 11, 12, 12, 13, 14, 14, 15,
+	 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 0, 1, 2, 3, 4, 5, 7, 8, 8, 10, 11, 12, 12, 13, 13, 14,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type5_5gc_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 0, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 8, 9, 11, 11,
+	 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13},
+	{0, 0, 1, 2, 3, 3, 5, 5, 6, 8, 8, 9, 10, 11, 13, 13, 13,
+	 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+	{0, 0, 1, 2, 3, 4, 4, 5, 7, 8, 9, 9, 10, 11, 12, 12, 12,
+	 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type5_5gb_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 2, 2, 2, 3, 4, 5, 6, 7, 9, 10, 10, 10, 10, 10,
+	 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12},
+	{0, 1, 2, 3, 3, 7, 7, 8, 8, 9, 11, 12, 12, 13, 14, 14, 15,
+	 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 0, 1, 2, 3, 4, 5, 7, 8, 8, 10, 11, 12, 12, 13, 13, 14,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type5_5gb_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 1, 2, 2, 4, 5, 6, 6, 7, 8, 9, 10, 11, 11, 11,
+	 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 0, 2, 3, 4, 5, 6, 8, 8, 9, 9, 11, 12, 13, 13, 13,
+	 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+	{0, 0, 0, 1, 2, 3, 3, 4, 6, 7, 8, 9, 10, 11, 12, 12, 12,
+	 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type5_5ga_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 0, 1, 2, 3, 3, 3, 4, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12},
+	{0, 2, 3, 4, 5, 7, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 17,
+	 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18},
+	{0, 1, 2, 3, 3, 4, 6, 7, 8, 8, 10, 11, 11, 12, 13, 13, 13,
+	 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type5_5ga_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 1, 3, 3, 3, 5, 5, 6, 6, 8, 8, 9, 10, 11, 11, 11,
+	 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 8, 9, 11, 12, 13, 14, 15,
+	 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 0, 1, 3, 3, 4, 5, 5, 6, 7, 7, 8, 10, 10, 11, 11, 11,
+	 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13},
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2gd_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 2, 2, 3, 4, 4, 5, 6, 6, 7, 7, 7, 8, 9, 9, 9,
+	 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2gd_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 2, 3, 4, 4, 5, 6, 6, 7, 7, 8, 8,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2gc_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 2, 2, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 10, 10, 10,
+	 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2gc_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 8, 8, 9, 9, 9,
+	 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2gb_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 2, 2, 3, 4, 4, 5, 6, 6, 7, 7, 8, 9, 10, 10, 10,
+	 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2gb_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 8, 9, 9, 9, 9,
+	 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2ga_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 2, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 10, 10, 10,
+	 10, 11, 11, 11, 11, 111, 12, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2ga_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 9,
+	 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2g_cck_d_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 2, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9,
+	 10, 10, 10, 10, 10, 11, 11, 10, 11, 11, 11, 11
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2g_cck_d_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 7, 7, 8, 8, 8,
+	 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2g_cck_c_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 2, 3, 4, 4, 5, 6, 6, 7, 8, 8, 8, 8, 9, 10, 10, 10,
+	 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2g_cck_c_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 7, 7, 8, 8, 8,
+	 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2g_cck_b_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 2, 3, 4, 4, 5, 6, 6, 6, 7, 7, 8, 8, 9, 10, 10, 10,
+	 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2g_cck_b_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 7, 7, 8, 8, 8,
+	 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2g_cck_a_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 2, 2, 3, 4, 5, 5, 6, 7, 7, 8, 8, 9, 9, 9, 9, 10,
+	 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10
+};
+
+static const u8 rtw8814a_pwrtrk_type5_2g_cck_a_p[RTW_PWR_TRK_TBL_SZ] = {
+	 0, 1, 1, 2, 2, 2, 3, 4, 4, 5, 6, 7, 8, 8, 9, 9, 9,
+	 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10
+};
+
+const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type5_tbl = {
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type5_5gd_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type5_5gd_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type5_5gd_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type5_5gd_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type5_5gd_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type5_5gd_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type5_5gc_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type5_5gc_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type5_5gc_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type5_5gc_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type5_5gc_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type5_5gc_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type5_5gb_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type5_5gb_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type5_5gb_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type5_5gb_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type5_5gb_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type5_5gb_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type5_5ga_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type5_5ga_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type5_5ga_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type5_5ga_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type5_5ga_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type5_5ga_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_2gd_n = rtw8814a_pwrtrk_type5_2gd_n,
+	.pwrtrk_2gd_p = rtw8814a_pwrtrk_type5_2gd_p,
+	.pwrtrk_2gc_n = rtw8814a_pwrtrk_type5_2gc_n,
+	.pwrtrk_2gc_p = rtw8814a_pwrtrk_type5_2gc_p,
+	.pwrtrk_2gb_n = rtw8814a_pwrtrk_type5_2gb_n,
+	.pwrtrk_2gb_p = rtw8814a_pwrtrk_type5_2gb_p,
+	.pwrtrk_2ga_n = rtw8814a_pwrtrk_type5_2ga_n,
+	.pwrtrk_2ga_p = rtw8814a_pwrtrk_type5_2ga_p,
+	.pwrtrk_2g_cckd_n = rtw8814a_pwrtrk_type5_2g_cck_d_n,
+	.pwrtrk_2g_cckd_p = rtw8814a_pwrtrk_type5_2g_cck_d_p,
+	.pwrtrk_2g_cckc_n = rtw8814a_pwrtrk_type5_2g_cck_c_n,
+	.pwrtrk_2g_cckc_p = rtw8814a_pwrtrk_type5_2g_cck_c_p,
+	.pwrtrk_2g_cckb_n = rtw8814a_pwrtrk_type5_2g_cck_b_n,
+	.pwrtrk_2g_cckb_p = rtw8814a_pwrtrk_type5_2g_cck_b_p,
+	.pwrtrk_2g_ccka_n = rtw8814a_pwrtrk_type5_2g_cck_a_n,
+	.pwrtrk_2g_ccka_p = rtw8814a_pwrtrk_type5_2g_cck_a_p,
+};
+
+static const u8
+rtw8814a_pwrtrk_type7_5gd_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+};
+
+static const u8
+rtw8814a_pwrtrk_type7_5gd_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8
+rtw8814a_pwrtrk_type7_5gc_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+};
+
+static const u8
+rtw8814a_pwrtrk_type7_5gc_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8
+rtw8814a_pwrtrk_type7_5gb_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+};
+
+static const u8
+rtw8814a_pwrtrk_type7_5gb_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8
+rtw8814a_pwrtrk_type7_5ga_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+	{0, 0, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
+	 8, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10},
+};
+
+static const u8
+rtw8814a_pwrtrk_type7_5ga_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 0, 1, 1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2gd_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2gd_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2gc_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2gc_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2gb_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2gb_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2ga_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2ga_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2g_cck_d_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2g_cck_d_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2g_cck_c_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2g_cck_c_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2g_cck_b_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2g_cck_b_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2g_cck_a_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 7, 7,
+	 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+static const u8 rtw8814a_pwrtrk_type7_2g_cck_a_p[RTW_PWR_TRK_TBL_SZ] = {
+	 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9
+};
+
+const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type7_tbl = {
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type7_5gd_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type7_5gd_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type7_5gd_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type7_5gd_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type7_5gd_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type7_5gd_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type7_5gc_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type7_5gc_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type7_5gc_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type7_5gc_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type7_5gc_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type7_5gc_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type7_5gb_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type7_5gb_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type7_5gb_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type7_5gb_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type7_5gb_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type7_5gb_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type7_5ga_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type7_5ga_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type7_5ga_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type7_5ga_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type7_5ga_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type7_5ga_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_2gd_n = rtw8814a_pwrtrk_type7_2gd_n,
+	.pwrtrk_2gd_p = rtw8814a_pwrtrk_type7_2gd_p,
+	.pwrtrk_2gc_n = rtw8814a_pwrtrk_type7_2gc_n,
+	.pwrtrk_2gc_p = rtw8814a_pwrtrk_type7_2gc_p,
+	.pwrtrk_2gb_n = rtw8814a_pwrtrk_type7_2gb_n,
+	.pwrtrk_2gb_p = rtw8814a_pwrtrk_type7_2gb_p,
+	.pwrtrk_2ga_n = rtw8814a_pwrtrk_type7_2ga_n,
+	.pwrtrk_2ga_p = rtw8814a_pwrtrk_type7_2ga_p,
+	.pwrtrk_2g_cckd_n = rtw8814a_pwrtrk_type7_2g_cck_d_n,
+	.pwrtrk_2g_cckd_p = rtw8814a_pwrtrk_type7_2g_cck_d_p,
+	.pwrtrk_2g_cckc_n = rtw8814a_pwrtrk_type7_2g_cck_c_n,
+	.pwrtrk_2g_cckc_p = rtw8814a_pwrtrk_type7_2g_cck_c_p,
+	.pwrtrk_2g_cckb_n = rtw8814a_pwrtrk_type7_2g_cck_b_n,
+	.pwrtrk_2g_cckb_p = rtw8814a_pwrtrk_type7_2g_cck_b_p,
+	.pwrtrk_2g_ccka_n = rtw8814a_pwrtrk_type7_2g_cck_a_n,
+	.pwrtrk_2g_ccka_p = rtw8814a_pwrtrk_type7_2g_cck_a_p,
+};
+
+static const u8
+rtw8814a_pwrtrk_type8_5gd_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 4, 6, 7, 7, 8, 8, 9, 10, 10, 11, 11, 12,
+	 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
+	{0, 1, 2, 3, 4, 4, 6, 7, 7, 8, 9, 9, 10, 10, 11, 11, 12,
+	 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
+	{0, 1, 2, 3, 4, 4, 5, 6, 6, 7, 7, 8, 8, 8, 9, 10, 10,
+	 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11},
+};
+
+static const u8
+rtw8814a_pwrtrk_type8_5gd_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 14,
+	 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 0, 1, 2, 3, 5, 5, 6, 6, 7, 8, 9, 10, 11, 12, 13, 14,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+	{0, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 11, 12, 13, 14,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type8_5gc_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 4, 4, 5, 6, 7, 7, 8, 8, 9, 9, 10, 11, 11, 12,
+	 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
+	{0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11,
+	 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
+	{0, 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 8, 9, 10, 10, 11, 11,
+	 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8
+rtw8814a_pwrtrk_type8_5gc_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 4, 4, 5, 6, 7, 7, 8, 9, 10, 11, 12, 13, 14,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+	{0, 0, 1, 3, 4, 4, 5, 6, 7, 7, 8, 10, 11, 12, 13, 14,
+	 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15},
+	{0, 0, 1, 2, 4, 5, 5, 6, 6, 7, 7, 9, 10, 11, 12, 13, 14,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type8_5gb_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 8, 9, 9, 10, 11, 11,
+	 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11,
+	 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
+	{0, 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 8, 9, 10, 10, 11, 11,
+	 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+};
+
+static const u8
+rtw8814a_pwrtrk_type8_5gb_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+	{0, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 10, 11, 11, 13, 13,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+	{0, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 10, 10, 11, 13, 13,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8
+rtw8814a_pwrtrk_type8_5ga_n[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 1, 2, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 9, 10, 11, 11,
+	 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12},
+	{0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 9, 10, 10, 10, 11, 11,
+	 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
+	{0, 1, 2, 3, 4, 4, 5, 6, 7, 7, 8, 9, 10, 10, 10, 11, 12,
+	 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
+};
+
+static const u8
+rtw8814a_pwrtrk_type8_5ga_p[RTW_PWR_TRK_5G_NUM][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 7, 7, 9, 10, 11, 12, 13, 14,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+	{0, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 11, 12, 13, 13,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+	{0, 0, 1, 2, 3, 3, 4, 4, 6, 7, 7, 9, 10, 11, 12, 13, 14,
+	 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14},
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2gd_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5,
+	 6, 6, 7, 8, 9, 10, 11, 11, 11, 11, 11, 11, 11
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2gd_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 6, 7, 7, 8, 9, 9, 10,
+	 10, 11, 12, 12, 13, 14, 14, 14, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2gc_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 5, 6, 6, 6, 7, 7, 8, 8, 9, 10,
+	 10, 11, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2gc_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 3, 3, 4, 4, 4, 5, 5, 6, 7, 8, 8, 9, 10, 10,
+	 11, 12, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2gb_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7, 8, 8, 8,
+	 9, 9, 10, 10, 11, 11, 12, 12, 12, 13, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2gb_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 9, 10,
+	 10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2ga_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 2, 2, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 9, 9, 9,
+	 10, 11, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2ga_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 3, 3, 4, 4, 4, 5, 6, 6, 7, 7, 8, 8, 9, 10,
+	 11, 12, 12, 13, 13, 14, 14, 14, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2g_cck_d_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 7, 8,
+	 9, 9, 9, 9, 9, 9, 10, 10, 11, 11, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2g_cck_d_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 1, 2, 3, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9, 10, 10,
+	 10, 11, 12, 12, 13, 14, 14, 14, 14, 14, 14, 14
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2g_cck_c_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 2, 2, 3, 4, 5, 5, 6, 6, 6, 6, 7, 8, 9, 9, 10,
+	 10, 11, 11, 11, 12, 13, 13, 13, 13, 13, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2g_cck_c_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10,
+	 10, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2g_cck_b_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 4, 5, 6, 6, 7, 7, 8, 8, 9, 10,
+	 10, 10, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2g_cck_b_p[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6, 7, 8, 8, 9, 9, 10,
+	 10, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2g_cck_a_n[RTW_PWR_TRK_TBL_SZ] = {
+	0, 1, 2, 2, 3, 4, 4, 4, 5, 5, 6, 6, 7, 8, 9, 9, 9, 9,
+	 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8814a_pwrtrk_type8_2g_cck_a_p[RTW_PWR_TRK_TBL_SZ] = {
+	 0, 0, 1, 2, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9, 10, 10,
+	 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13
+};
+
+const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type8_tbl = {
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type8_5gd_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type8_5gd_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type8_5gd_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type8_5gd_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type8_5gd_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gd_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type8_5gd_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type8_5gc_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type8_5gc_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type8_5gc_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type8_5gc_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type8_5gc_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gc_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type8_5gc_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type8_5gb_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type8_5gb_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type8_5gb_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type8_5gb_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type8_5gb_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5gb_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type8_5gb_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type8_5ga_n[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type8_5ga_n[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_n[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type8_5ga_n[RTW_PWR_TRK_5G_3],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_1] = rtw8814a_pwrtrk_type8_5ga_p[RTW_PWR_TRK_5G_1],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_2] = rtw8814a_pwrtrk_type8_5ga_p[RTW_PWR_TRK_5G_2],
+	.pwrtrk_5ga_p[RTW_PWR_TRK_5G_3] = rtw8814a_pwrtrk_type8_5ga_p[RTW_PWR_TRK_5G_3],
+	.pwrtrk_2gd_n = rtw8814a_pwrtrk_type8_2gd_n,
+	.pwrtrk_2gd_p = rtw8814a_pwrtrk_type8_2gd_p,
+	.pwrtrk_2gc_n = rtw8814a_pwrtrk_type8_2gc_n,
+	.pwrtrk_2gc_p = rtw8814a_pwrtrk_type8_2gc_p,
+	.pwrtrk_2gb_n = rtw8814a_pwrtrk_type8_2gb_n,
+	.pwrtrk_2gb_p = rtw8814a_pwrtrk_type8_2gb_p,
+	.pwrtrk_2ga_n = rtw8814a_pwrtrk_type8_2ga_n,
+	.pwrtrk_2ga_p = rtw8814a_pwrtrk_type8_2ga_p,
+	.pwrtrk_2g_cckd_n = rtw8814a_pwrtrk_type8_2g_cck_d_n,
+	.pwrtrk_2g_cckd_p = rtw8814a_pwrtrk_type8_2g_cck_d_p,
+	.pwrtrk_2g_cckc_n = rtw8814a_pwrtrk_type8_2g_cck_c_n,
+	.pwrtrk_2g_cckc_p = rtw8814a_pwrtrk_type8_2g_cck_c_p,
+	.pwrtrk_2g_cckb_n = rtw8814a_pwrtrk_type8_2g_cck_b_n,
+	.pwrtrk_2g_cckb_p = rtw8814a_pwrtrk_type8_2g_cck_b_p,
+	.pwrtrk_2g_ccka_n = rtw8814a_pwrtrk_type8_2g_cck_a_n,
+	.pwrtrk_2g_ccka_p = rtw8814a_pwrtrk_type8_2g_cck_a_p,
+};
+
+static const struct rtw_pwr_seq_cmd init_power_on_8814a[] = {
+	{0x10c2,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), BIT(1)},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_carddis_to_cardemu_8814a[] = {
+	{0x0012,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(6), BIT(6)},
+	{0x0015,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(5), 0},
+	{0x0015,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(6), 0},
+	{0x0023,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(4), 0},
+	{0x0046,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x00},
+	{0x0062,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x00},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(2), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3), 0},
+	{0x0301,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0},
+	{0x0071,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(2), 0},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_cardemu_to_act_8814a[] = {
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(2), 0},
+	{0x0006,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, BIT(1), BIT(1)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3), 0},
+	{0x00F0,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(7), 0},
+	{0x0081,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x30, 0x20},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, BIT(0), 0},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_act_to_cardemu_8814a[] = {
+	{0x0c00,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x04},
+	{0x0e00,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x04},
+	{0x1002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_DELAY, 1, RTW_PWR_DELAY_US},
+	{0x1002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x001F,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0},
+	{0x0007,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x28},
+	{0x0008,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0x02, 0},
+	{0x0066,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(7), 0},
+	{0x0041,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(4), 0},
+	{0x0042,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x004e,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(5), BIT(5)},
+	{0x0041,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), BIT(1)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, BIT(1), 0},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_cardemu_to_carddis_8814a[] = {
+	{0x0003,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(2), 0},
+	{0x0080,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x01},
+	{0x0081,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x30},
+	{0x0045,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x00},
+	{0x0046,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0xff},
+	{0x0047,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0},
+	{0x0015,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(6), BIT(6)},
+	{0x0015,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(5), BIT(5)},
+	{0x0012,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(6), 0},
+	{0x0023,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(4), BIT(4)},
+	{0x0008,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0007,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x20},
+	{0x001f,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0020,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0021,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0076,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0091,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xA0, 0xA0},
+	{0x0070,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3), BIT(3)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3), BIT(3)},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+const struct rtw_pwr_seq_cmd * const card_enable_flow_8814a[] = {
+	init_power_on_8814a,
+	trans_carddis_to_cardemu_8814a,
+	trans_cardemu_to_act_8814a,
+	NULL
+};
+
+const struct rtw_pwr_seq_cmd * const card_disable_flow_8814a[] = {
+	trans_act_to_cardemu_8814a,
+	trans_cardemu_to_carddis_8814a,
+	NULL
+};
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8814a_table.h b/drivers/net/wireless/realtek/rtw88/rtw8814a_table.h
new file mode 100644
index 000000000000..69fb87e36c48
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8814a_table.h
@@ -0,0 +1,40 @@
+/* SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause */
+/* Copyright(c) 2025  Realtek Corporation
+ */
+
+#ifndef __RTW8814A_TABLE_H__
+#define __RTW8814A_TABLE_H__
+
+extern const struct rtw_table rtw8814a_mac_tbl;
+extern const struct rtw_table rtw8814a_agc_tbl;
+extern const struct rtw_table rtw8814a_bb_tbl;
+extern const struct rtw_table rtw8814a_bb_pg_tbl;
+extern const struct rtw_table rtw8814a_bb_pg_type0_tbl;
+extern const struct rtw_table rtw8814a_bb_pg_type2_tbl;
+extern const struct rtw_table rtw8814a_bb_pg_type3_tbl;
+extern const struct rtw_table rtw8814a_bb_pg_type4_tbl;
+extern const struct rtw_table rtw8814a_bb_pg_type5_tbl;
+extern const struct rtw_table rtw8814a_bb_pg_type7_tbl;
+extern const struct rtw_table rtw8814a_bb_pg_type8_tbl;
+extern const struct rtw_table rtw8814a_rf_a_tbl;
+extern const struct rtw_table rtw8814a_rf_b_tbl;
+extern const struct rtw_table rtw8814a_rf_c_tbl;
+extern const struct rtw_table rtw8814a_rf_d_tbl;
+extern const struct rtw_table rtw8814a_txpwr_lmt_tbl;
+extern const struct rtw_table rtw8814a_txpwr_lmt_type0_tbl;
+extern const struct rtw_table rtw8814a_txpwr_lmt_type1_tbl;
+extern const struct rtw_table rtw8814a_txpwr_lmt_type2_tbl;
+extern const struct rtw_table rtw8814a_txpwr_lmt_type3_tbl;
+extern const struct rtw_table rtw8814a_txpwr_lmt_type5_tbl;
+extern const struct rtw_table rtw8814a_txpwr_lmt_type7_tbl;
+extern const struct rtw_table rtw8814a_txpwr_lmt_type8_tbl;
+extern const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_tbl;
+extern const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type0_tbl;
+extern const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type2_tbl;
+extern const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type5_tbl;
+extern const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type7_tbl;
+extern const struct rtw_pwr_track_tbl rtw8814a_rtw_pwrtrk_type8_tbl;
+extern const struct rtw_pwr_seq_cmd * const card_disable_flow_8814a[];
+extern const struct rtw_pwr_seq_cmd * const card_enable_flow_8814a[];
+
+#endif
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8814ae.c b/drivers/net/wireless/realtek/rtw88/rtw8814ae.c
new file mode 100644
index 000000000000..54d2e20a7764
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8814ae.c
@@ -0,0 +1,31 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2025  Realtek Corporation
+ */
+
+#include <linux/module.h>
+#include <linux/pci.h>
+#include "pci.h"
+#include "rtw8814a.h"
+
+static const struct pci_device_id rtw_8814ae_id_table[] = {
+	{
+		PCI_DEVICE(PCI_VENDOR_ID_REALTEK, 0x8813),
+		.driver_data = (kernel_ulong_t)&rtw8814a_hw_spec
+	},
+	{}
+};
+MODULE_DEVICE_TABLE(pci, rtw_8814ae_id_table);
+
+static struct pci_driver rtw_8814ae_driver = {
+	.name = "rtw_8814ae",
+	.id_table = rtw_8814ae_id_table,
+	.probe = rtw_pci_probe,
+	.remove = rtw_pci_remove,
+	.driver.pm = &rtw_pm_ops,
+	.shutdown = rtw_pci_shutdown,
+};
+module_pci_driver(rtw_8814ae_driver);
+
+MODULE_AUTHOR("Bitterblue Smith <rtl8821cerfe2@gmail.com>");
+MODULE_DESCRIPTION("Realtek 802.11ac wireless 8814ae driver");
+MODULE_LICENSE("Dual BSD/GPL");
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8814au.c b/drivers/net/wireless/realtek/rtw88/rtw8814au.c
new file mode 100644
index 000000000000..afe045fb84de
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8814au.c
@@ -0,0 +1,54 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2025  Realtek Corporation
+ */
+
+#include <linux/module.h>
+#include <linux/usb.h>
+#include "main.h"
+#include "rtw8814a.h"
+#include "usb.h"
+
+static const struct usb_device_id rtw_8814au_id_table[] = {
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x8813, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x056e, 0x400b, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x056e, 0x400d, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0846, 0x9054, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0b05, 0x1817, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0b05, 0x1852, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0b05, 0x1853, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0e66, 0x0026, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2001, 0x331a, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x20f4, 0x809a, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x20f4, 0x809b, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x0106, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x7392, 0xa834, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x7392, 0xa833, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8814a_hw_spec) },
+	{},
+};
+MODULE_DEVICE_TABLE(usb, rtw_8814au_id_table);
+
+static struct usb_driver rtw_8814au_driver = {
+	.name = "rtw_8814au",
+	.id_table = rtw_8814au_id_table,
+	.probe = rtw_usb_probe,
+	.disconnect = rtw_usb_disconnect,
+};
+module_usb_driver(rtw_8814au_driver);
+
+MODULE_AUTHOR("Bitterblue Smith <rtl8821cerfe2@gmail.com>");
+MODULE_DESCRIPTION("Realtek 802.11ac wireless 8814au driver");
+MODULE_LICENSE("Dual BSD/GPL");
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8821a.c b/drivers/net/wireless/realtek/rtw88/rtw8821a.c
new file mode 100644
index 000000000000..fa4b1a53303b
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8821a.c
@@ -0,0 +1,1235 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#include "main.h"
+#include "coex.h"
+#include "phy.h"
+#include "reg.h"
+#include "rtw88xxa.h"
+#include "rtw8821a.h"
+#include "rtw8821a_table.h"
+#include "tx.h"
+
+static void rtw8821a_power_off(struct rtw_dev *rtwdev)
+{
+	rtw88xxa_power_off(rtwdev, enter_lps_flow_8821a);
+}
+
+static s8 rtw8821a_cck_rx_pwr(u8 lna_idx, u8 vga_idx)
+{
+	static const s8 lna_gain_table[] = {15, -1, -17, 0, -30, -38};
+	s8 rx_pwr_all = 0;
+	s8 lna_gain;
+
+	switch (lna_idx) {
+	case 5:
+	case 4:
+	case 2:
+	case 1:
+	case 0:
+		lna_gain = lna_gain_table[lna_idx];
+		rx_pwr_all = lna_gain - 2 * vga_idx;
+		break;
+	default:
+		break;
+	}
+
+	return rx_pwr_all;
+}
+
+static void rtw8821a_query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
+				      struct rtw_rx_pkt_stat *pkt_stat)
+{
+	rtw88xxa_query_phy_status(rtwdev, phy_status, pkt_stat,
+				  rtw8821a_cck_rx_pwr);
+}
+
+static void rtw8821a_cfg_ldo25(struct rtw_dev *rtwdev, bool enable)
+{
+}
+
+static void rtw8821a_set_ampdu_factor(struct rtw_dev *rtwdev, u8 factor)
+{
+	u32 len;
+
+	factor = min_t(u8, factor, IEEE80211_VHT_MAX_AMPDU_64K);
+	len = BIT(31) | ((8192 << factor) - 1);
+
+	rtw_write32(rtwdev, REG_AMPDU_MAX_LENGTH, len);
+}
+
+#define CAL_NUM_8821A 3
+#define MACBB_REG_NUM_8821A 8
+#define AFE_REG_NUM_8821A 4
+#define RF_REG_NUM_8821A 3
+
+static void rtw8821a_iqk_backup_rf(struct rtw_dev *rtwdev, u32 *rfa_backup,
+				   const u32 *backup_rf_reg, u32 rf_num)
+{
+	u32 i;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	/* Save RF Parameters */
+	for (i = 0; i < rf_num; i++)
+		rfa_backup[i] = rtw_read_rf(rtwdev, RF_PATH_A,
+					    backup_rf_reg[i], MASKDWORD);
+}
+
+static void rtw8821a_iqk_restore_rf(struct rtw_dev *rtwdev,
+				    const u32 *backup_rf_reg,
+				    u32 *RF_backup, u32 rf_reg_num)
+{
+	u32 i;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	for (i = 0; i < rf_reg_num; i++)
+		rtw_write_rf(rtwdev, RF_PATH_A, backup_rf_reg[i],
+			     RFREG_MASK, RF_backup[i]);
+}
+
+static void rtw8821a_iqk_restore_afe(struct rtw_dev *rtwdev, u32 *afe_backup,
+				     const u32 *backup_afe_reg, u32 afe_num)
+{
+	u32 i;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	/* Reload AFE Parameters */
+	for (i = 0; i < afe_num; i++)
+		rtw_write32(rtwdev, backup_afe_reg[i], afe_backup[i]);
+
+	/* [31] = 1 --> Page C1 */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+	rtw_write32(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE, 0x0);
+	rtw_write32(rtwdev, REG_OFDM0_A_TX_AFE, 0x0);
+	rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE, 0x0);
+	rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x3c000000);
+	rtw_write32(rtwdev, REG_LSSI_WRITE_A, 0x00000080);
+	rtw_write32(rtwdev, REG_TXAGCIDX, 0x00000000);
+	rtw_write32(rtwdev, REG_IQK_DPD_CFG, 0x20040000);
+	rtw_write32(rtwdev, REG_CFG_PMPD, 0x20000000);
+	rtw_write32(rtwdev, REG_RFECTL_A, 0x0);
+}
+
+static void rtw8821a_iqk_rx_fill(struct rtw_dev *rtwdev,
+				 unsigned int rx_x, unsigned int rx_y)
+{
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	rtw_write32_mask(rtwdev, REG_RX_IQC_AB_A,
+			 0x000003ff, rx_x >> 1);
+	rtw_write32_mask(rtwdev, REG_RX_IQC_AB_A,
+			 0x03ff0000, (rx_y >> 1) & 0x3ff);
+}
+
+static void rtw8821a_iqk_tx_fill(struct rtw_dev *rtwdev,
+				 unsigned int tx_x, unsigned int tx_y)
+{
+	/* [31] = 1 --> Page C1 */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+	rtw_write32(rtwdev, REG_LSSI_WRITE_A, 0x00000080);
+	rtw_write32(rtwdev, REG_IQK_DPD_CFG, 0x20040000);
+	rtw_write32(rtwdev, REG_CFG_PMPD, 0x20000000);
+	rtw_write32_mask(rtwdev, REG_IQC_Y, 0x000007ff, tx_y);
+	rtw_write32_mask(rtwdev, REG_IQC_X, 0x000007ff, tx_x);
+}
+
+static void rtw8821a_iqk_tx_vdf_true(struct rtw_dev *rtwdev, u32 cal,
+				     bool *tx0iqkok,
+				     int tx_x0[CAL_NUM_8821A],
+				     int tx_y0[CAL_NUM_8821A])
+{
+	u32 cal_retry, delay_count, iqk_ready, tx_fail;
+	int tx_dt[3], vdf_y[3], vdf_x[3];
+	int k;
+
+	for (k = 0; k < 3; k++) {
+		switch (k) {
+		case 0:
+			/* TX_Tone_idx[9:0], TxK_Mask[29] TX_Tone = 16 */
+			rtw_write32(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE,
+				    0x18008c38);
+			/* RX_Tone_idx[9:0], RxK_Mask[29] */
+			rtw_write32(rtwdev, REG_OFDM0_A_TX_AFE, 0x38008c38);
+			rtw_write32_mask(rtwdev, REG_INTPO_SETA, BIT(31), 0x0);
+			break;
+		case 1:
+			rtw_write32_mask(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE,
+					 BIT(28), 0x0);
+			rtw_write32_mask(rtwdev, REG_OFDM0_A_TX_AFE,
+					 BIT(28), 0x0);
+			rtw_write32_mask(rtwdev, REG_INTPO_SETA, BIT(31), 0x0);
+			break;
+		case 2:
+			rtw_dbg(rtwdev, RTW_DBG_RFK,
+				"vdf_y[1] = %x vdf_y[0] = %x\n",
+				vdf_y[1] >> 21 & 0x00007ff,
+				vdf_y[0] >> 21 & 0x00007ff);
+
+			rtw_dbg(rtwdev, RTW_DBG_RFK,
+				"vdf_x[1] = %x vdf_x[0] = %x\n",
+				vdf_x[1] >> 21 & 0x00007ff,
+				vdf_x[0] >> 21 & 0x00007ff);
+
+			tx_dt[cal] = (vdf_y[1] >> 20) - (vdf_y[0] >> 20);
+			tx_dt[cal] = (16 * tx_dt[cal]) * 10000 / 15708;
+			tx_dt[cal] = (tx_dt[cal] >> 1) + (tx_dt[cal] & BIT(0));
+
+			/* TX_Tone_idx[9:0], TxK_Mask[29] TX_Tone = 16 */
+			rtw_write32(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE,
+				    0x18008c20);
+			/* RX_Tone_idx[9:0], RxK_Mask[29] */
+			rtw_write32(rtwdev, REG_OFDM0_A_TX_AFE, 0x38008c20);
+			rtw_write32_mask(rtwdev, REG_INTPO_SETA, BIT(31), 0x1);
+			rtw_write32_mask(rtwdev, REG_INTPO_SETA, 0x3fff0000,
+					 tx_dt[cal] & 0x00003fff);
+			break;
+		}
+
+		rtw_write32(rtwdev, REG_RFECTL_A, 0x00100000);
+
+		for (cal_retry = 0; cal_retry < 10; cal_retry++) {
+			/* one shot */
+			rtw_write32(rtwdev, REG_IQK_COM64, 0xfa000000);
+			rtw_write32(rtwdev, REG_IQK_COM64, 0xf8000000);
+
+			mdelay(10);
+
+			rtw_write32(rtwdev, REG_RFECTL_A, 0x00000000);
+
+			for (delay_count = 0; delay_count < 20; delay_count++) {
+				iqk_ready = rtw_read32_mask(rtwdev,
+							    REG_IQKA_END,
+							    BIT(10));
+
+				/* Originally: if (~iqk_ready || delay_count > 20)
+				 * that looks like a typo so make it more explicit
+				 */
+				iqk_ready = true;
+
+				if (iqk_ready)
+					break;
+
+				mdelay(1);
+			}
+
+			if (delay_count < 20) {
+				/* ============TXIQK Check============== */
+				tx_fail = rtw_read32_mask(rtwdev,
+							  REG_IQKA_END,
+							  BIT(12));
+
+				/* Originally: if (~tx_fail) {
+				 * It looks like a typo, so make it more explicit.
+				 */
+				tx_fail = false;
+
+				if (!tx_fail) {
+					rtw_write32(rtwdev, REG_RFECTL_A,
+						    0x02000000);
+					vdf_x[k] = rtw_read32_mask(rtwdev,
+								   REG_IQKA_END,
+								   0x07ff0000);
+					vdf_x[k] <<= 21;
+
+					rtw_write32(rtwdev, REG_RFECTL_A,
+						    0x04000000);
+					vdf_y[k] = rtw_read32_mask(rtwdev,
+								   REG_IQKA_END,
+								   0x07ff0000);
+					vdf_y[k] <<= 21;
+
+					*tx0iqkok = true;
+					break;
+				}
+
+				rtw_write32_mask(rtwdev, REG_IQC_Y,
+						 0x000007ff, 0x0);
+				rtw_write32_mask(rtwdev, REG_IQC_X,
+						 0x000007ff, 0x200);
+			}
+
+			*tx0iqkok = false;
+		}
+	}
+
+	if (k == 3) {
+		tx_x0[cal] = vdf_x[k - 1];
+		tx_y0[cal] = vdf_y[k - 1];
+	}
+}
+
+static void rtw8821a_iqk_tx_vdf_false(struct rtw_dev *rtwdev, u32 cal,
+				      bool *tx0iqkok,
+				      int tx_x0[CAL_NUM_8821A],
+				      int tx_y0[CAL_NUM_8821A])
+{
+	u32 cal_retry, delay_count, iqk_ready, tx_fail;
+
+	/* TX_Tone_idx[9:0], TxK_Mask[29] TX_Tone = 16 */
+	rtw_write32(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE, 0x18008c10);
+	/* RX_Tone_idx[9:0], RxK_Mask[29] */
+	rtw_write32(rtwdev, REG_OFDM0_A_TX_AFE, 0x38008c10);
+	rtw_write32(rtwdev, REG_RFECTL_A, 0x00100000);
+
+	for (cal_retry = 0; cal_retry < 10; cal_retry++) {
+		/* one shot */
+		rtw_write32(rtwdev, REG_IQK_COM64, 0xfa000000);
+		rtw_write32(rtwdev, REG_IQK_COM64, 0xf8000000);
+
+		mdelay(10);
+		rtw_write32(rtwdev, REG_RFECTL_A, 0x00000000);
+
+		for (delay_count = 0; delay_count < 20; delay_count++) {
+			iqk_ready = rtw_read32_mask(rtwdev, REG_IQKA_END, BIT(10));
+
+			/* Originally: if (~iqk_ready || delay_count > 20)
+			 * that looks like a typo so make it more explicit
+			 */
+			iqk_ready = true;
+
+			if (iqk_ready)
+				break;
+
+			mdelay(1);
+		}
+
+		if (delay_count < 20) {
+			/* ============TXIQK Check============== */
+			tx_fail = rtw_read32_mask(rtwdev, REG_IQKA_END, BIT(12));
+
+			/* Originally: if (~tx_fail) {
+			 * It looks like a typo, so make it more explicit.
+			 */
+			tx_fail = false;
+
+			if (!tx_fail) {
+				rtw_write32(rtwdev, REG_RFECTL_A, 0x02000000);
+				tx_x0[cal] = rtw_read32_mask(rtwdev, REG_IQKA_END,
+							     0x07ff0000);
+				tx_x0[cal] <<= 21;
+
+				rtw_write32(rtwdev, REG_RFECTL_A, 0x04000000);
+				tx_y0[cal] = rtw_read32_mask(rtwdev, REG_IQKA_END,
+							     0x07ff0000);
+				tx_y0[cal] <<= 21;
+
+				*tx0iqkok = true;
+				break;
+			}
+
+			rtw_write32_mask(rtwdev, REG_IQC_Y, 0x000007ff, 0x0);
+			rtw_write32_mask(rtwdev, REG_IQC_X, 0x000007ff, 0x200);
+		}
+
+		*tx0iqkok = false;
+	}
+}
+
+static void rtw8821a_iqk_rx(struct rtw_dev *rtwdev, u32 cal, bool *rx0iqkok,
+			    int rx_x0[CAL_NUM_8821A],
+			    int rx_y0[CAL_NUM_8821A])
+{
+	u32 cal_retry, delay_count, iqk_ready, rx_fail;
+
+	rtw_write32(rtwdev, REG_RFECTL_A, 0x00100000);
+
+	for (cal_retry = 0; cal_retry < 10; cal_retry++) {
+		/* one shot */
+		rtw_write32(rtwdev, REG_IQK_COM64, 0xfa000000);
+		rtw_write32(rtwdev, REG_IQK_COM64, 0xf8000000);
+
+		mdelay(10);
+
+		rtw_write32(rtwdev, REG_RFECTL_A, 0x00000000);
+
+		for (delay_count = 0; delay_count < 20; delay_count++) {
+			iqk_ready = rtw_read32_mask(rtwdev, REG_IQKA_END, BIT(10));
+
+			/* Originally: if (~iqk_ready || delay_count > 20)
+			 * that looks like a typo so make it more explicit
+			 */
+			iqk_ready = true;
+
+			if (iqk_ready)
+				break;
+
+			mdelay(1);
+		}
+
+		if (delay_count < 20) {
+			/* ============RXIQK Check============== */
+			rx_fail = rtw_read32_mask(rtwdev, REG_IQKA_END, BIT(11));
+			if (!rx_fail) {
+				rtw_write32(rtwdev, REG_RFECTL_A, 0x06000000);
+				rx_x0[cal] = rtw_read32_mask(rtwdev, REG_IQKA_END,
+							     0x07ff0000);
+				rx_x0[cal] <<= 21;
+
+				rtw_write32(rtwdev, REG_RFECTL_A, 0x08000000);
+				rx_y0[cal] = rtw_read32_mask(rtwdev, REG_IQKA_END,
+							     0x07ff0000);
+				rx_y0[cal] <<= 21;
+
+				*rx0iqkok = true;
+				break;
+			}
+
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_A,
+					 0x000003ff, 0x200 >> 1);
+			rtw_write32_mask(rtwdev, REG_RX_IQC_AB_A,
+					 0x03ff0000, 0x0 >> 1);
+		}
+
+		*rx0iqkok = false;
+	}
+}
+
+static void rtw8821a_iqk(struct rtw_dev *rtwdev)
+{
+	int tx_average = 0, rx_average = 0, rx_iqk_loop = 0;
+	const struct rtw_efuse *efuse = &rtwdev->efuse;
+	int tx_x = 0, tx_y = 0, rx_x = 0, rx_y = 0;
+	const struct rtw_hal *hal = &rtwdev->hal;
+	bool tx0iqkok = false, rx0iqkok = false;
+	int rx_x_temp = 0, rx_y_temp = 0;
+	int rx_x0[2][CAL_NUM_8821A];
+	int rx_y0[2][CAL_NUM_8821A];
+	int tx_x0[CAL_NUM_8821A];
+	int tx_y0[CAL_NUM_8821A];
+	bool rx_finish1 = false;
+	bool rx_finish2 = false;
+	bool vdf_enable;
+	u32 cal;
+	int i;
+
+	rtw_dbg(rtwdev, RTW_DBG_RFK,
+		"band_width = %d, ext_pa = %d, ext_pa_5g = %d\n",
+		hal->current_band_width, efuse->ext_pa_2g, efuse->ext_pa_5g);
+
+	vdf_enable = hal->current_band_width == RTW_CHANNEL_WIDTH_80;
+
+	for (cal = 0; cal < CAL_NUM_8821A; cal++) {
+		/* path-A LOK */
+
+		/* [31] = 0 --> Page C */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+		/* ========path-A AFE all on======== */
+		/* Port 0 DAC/ADC on */
+		rtw_write32(rtwdev, REG_AFE_PWR1_A, 0x77777777);
+		rtw_write32(rtwdev, REG_AFE_PWR2_A, 0x77777777);
+
+		rtw_write32(rtwdev, REG_RX_WAIT_CCA_TX_CCK_RFON_A, 0x19791979);
+
+		/* hardware 3-wire off */
+		rtw_write32_mask(rtwdev, REG_3WIRE_SWA, 0xf, 0x4);
+
+		/* LOK setting */
+
+		/* 1. DAC/ADC sampling rate (160 MHz) */
+		rtw_write32_mask(rtwdev, REG_CK_MONHA, GENMASK(26, 24), 0x7);
+
+		/* 2. LoK RF setting (at BW = 20M) */
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_LUTWE, RFREG_MASK, 0x80002);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_CFGCH, 0x00c00, 0x3);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_ADDR, RFREG_MASK,
+			     0x20000);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA0, RFREG_MASK,
+			     0x0003f);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA1, RFREG_MASK,
+			     0xf3fc3);
+
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_TXA_PREPAD, RFREG_MASK,
+			     0x931d5);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_RXBB2, RFREG_MASK, 0x8a001);
+		rtw_write32(rtwdev, REG_DAC_RSTB, 0x00008000);
+		rtw_write32_mask(rtwdev, REG_TXAGCIDX, BIT(0), 0x1);
+		/* TX (X,Y) */
+		rtw_write32(rtwdev, REG_IQK_COM00, 0x29002000);
+		/* RX (X,Y) */
+		rtw_write32(rtwdev, REG_IQK_COM32, 0xa9002000);
+		/* [0]:AGC_en, [15]:idac_K_Mask */
+		rtw_write32(rtwdev, REG_IQK_COM96, 0x00462910);
+
+		/* [31] = 1 --> Page C1 */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+		if (efuse->ext_pa_5g)
+			rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE,
+				    0x821403f7);
+		else
+			rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE,
+				    0x821403f4);
+
+		if (hal->current_band_type == RTW_BAND_5G)
+			rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x68163e96);
+		else
+			rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x28163e96);
+
+		/* TX_Tone_idx[9:0], TxK_Mask[29] TX_Tone = 16 */
+		rtw_write32(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE, 0x18008c10);
+		/* RX_Tone_idx[9:0], RxK_Mask[29] */
+		rtw_write32(rtwdev, REG_OFDM0_A_TX_AFE, 0x38008c10);
+		rtw_write32(rtwdev, REG_RFECTL_A, 0x00100000);
+		rtw_write32(rtwdev, REG_IQK_COM64, 0xfa000000);
+		rtw_write32(rtwdev, REG_IQK_COM64, 0xf8000000);
+
+		mdelay(10);
+		rtw_write32(rtwdev, REG_RFECTL_A, 0x00000000);
+
+		/* [31] = 0 --> Page C */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_TXMOD, 0x7fe00,
+			     rtw_read_rf(rtwdev, RF_PATH_A, RF_DTXLOK, 0xffc00));
+
+		if (hal->current_band_width == RTW_CHANNEL_WIDTH_40)
+			rtw_write_rf(rtwdev, RF_PATH_A, RF_CFGCH,
+				     RF18_BW_MASK, 0x1);
+		else if (hal->current_band_width == RTW_CHANNEL_WIDTH_80)
+			rtw_write_rf(rtwdev, RF_PATH_A, RF_CFGCH,
+				     RF18_BW_MASK, 0x0);
+
+		/* [31] = 1 --> Page C1 */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+		/* 3. TX RF setting */
+		/* [31] = 0 --> Page C */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_LUTWE, RFREG_MASK, 0x80000);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_ADDR, RFREG_MASK,
+			     0x20000);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA0, RFREG_MASK,
+			     0x0003f);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA1, RFREG_MASK,
+			     0xf3fc3);
+
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_TXA_PREPAD, RFREG_MASK, 0x931d5);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_RXBB2, RFREG_MASK, 0x8a001);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_LUTWE, RFREG_MASK, 0x00000);
+		rtw_write32(rtwdev, REG_DAC_RSTB, 0x00008000);
+		rtw_write32_mask(rtwdev, REG_TXAGCIDX, BIT(0), 0x1);
+		/* TX (X,Y) */
+		rtw_write32(rtwdev, REG_IQK_COM00, 0x29002000);
+		/* RX (X,Y) */
+		rtw_write32(rtwdev, REG_IQK_COM32, 0xa9002000);
+		/* [0]:AGC_en, [15]:idac_K_Mask */
+		rtw_write32(rtwdev, REG_IQK_COM96, 0x0046a910);
+
+		/* [31] = 1 --> Page C1 */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+		if (efuse->ext_pa_5g)
+			rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE,
+				    0x821403f7);
+		else
+			rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE,
+				    0x821403e3);
+
+		if (hal->current_band_type == RTW_BAND_5G)
+			rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x40163e96);
+		else
+			rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x00163e96);
+
+		if (vdf_enable)
+			rtw8821a_iqk_tx_vdf_true(rtwdev, cal, &tx0iqkok,
+						 tx_x0, tx_y0);
+		else
+			rtw8821a_iqk_tx_vdf_false(rtwdev, cal, &tx0iqkok,
+						  tx_x0, tx_y0);
+
+		if (!tx0iqkok)
+			break; /* TXK fail, Don't do RXK */
+
+		/* ====== RX IQK ====== */
+		/* [31] = 0 --> Page C */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+		/* 1. RX RF setting */
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_LUTWE, RFREG_MASK, 0x80000);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_ADDR, RFREG_MASK,
+			     0x30000);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA0, RFREG_MASK,
+			     0x0002f);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_MODE_TABLE_DATA1, RFREG_MASK,
+			     0xfffbb);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_RXBB2, RFREG_MASK, 0x88001);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_TXA_PREPAD, RFREG_MASK, 0x931d8);
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_LUTWE, RFREG_MASK, 0x00000);
+
+		rtw_write32_mask(rtwdev, REG_IQK_COM00, 0x03FF8000,
+				 (tx_x0[cal] >> 21) & 0x000007ff);
+		rtw_write32_mask(rtwdev, REG_IQK_COM00, 0x000007FF,
+				 (tx_y0[cal] >> 21) & 0x000007ff);
+		rtw_write32_mask(rtwdev, REG_IQK_COM00, BIT(31), 0x1);
+		rtw_write32_mask(rtwdev, REG_IQK_COM00, BIT(31), 0x0);
+		rtw_write32(rtwdev, REG_DAC_RSTB, 0x00008000);
+		rtw_write32(rtwdev, REG_IQK_COM96, 0x0046a911);
+
+		/* [31] = 1 --> Page C1 */
+		rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x1);
+
+		/* TX_Tone_idx[9:0], TxK_Mask[29] TX_Tone = 16 */
+		rtw_write32(rtwdev, REG_OFDM0_XA_TX_IQ_IMBALANCE, 0x38008c10);
+		/* RX_Tone_idx[9:0], RxK_Mask[29] */
+		rtw_write32(rtwdev, REG_OFDM0_A_TX_AFE, 0x18008c10);
+		rtw_write32(rtwdev, REG_OFDM0_XB_TX_IQ_IMBALANCE, 0x02140119);
+
+		if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_PCIE)
+			rx_iqk_loop = 2; /* for 2% fail; */
+		else
+			rx_iqk_loop = 1;
+
+		for (i = 0; i < rx_iqk_loop; i++) {
+			if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_PCIE && i == 0)
+				rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x28161100); /* Good */
+			else
+				rtw_write32(rtwdev, REG_TSSI_TRK_SW, 0x28160d00);
+
+			rtw8821a_iqk_rx(rtwdev, cal, &rx0iqkok,
+					rx_x0[i], rx_y0[i]);
+		}
+
+		if (tx0iqkok)
+			tx_average++;
+		if (rx0iqkok)
+			rx_average++;
+	}
+
+	/* FillIQK Result */
+
+	if (tx_average == 0)
+		return;
+
+	for (i = 0; i < tx_average; i++)
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"tx_x0[%d] = %x ;; tx_y0[%d] = %x\n",
+			i, (tx_x0[i] >> 21) & 0x000007ff,
+			i, (tx_y0[i] >> 21) & 0x000007ff);
+
+	if (rtw88xxa_iqk_finish(tx_average, 3, tx_x0, tx_y0,
+				&tx_x, &tx_y, true, true))
+		rtw8821a_iqk_tx_fill(rtwdev, tx_x, tx_y);
+	else
+		rtw8821a_iqk_tx_fill(rtwdev, 0x200, 0x0);
+
+	if (rx_average == 0)
+		return;
+
+	for (i = 0; i < rx_average; i++) {
+		rtw_dbg(rtwdev, RTW_DBG_RFK,
+			"rx_x0[0][%d] = %x ;; rx_y0[0][%d] = %x\n",
+			i, (rx_x0[0][i] >> 21) & 0x000007ff,
+			i, (rx_y0[0][i] >> 21) & 0x000007ff);
+
+		if (rx_iqk_loop == 2)
+			rtw_dbg(rtwdev, RTW_DBG_RFK,
+				"rx_x0[1][%d] = %x ;; rx_y0[1][%d] = %x\n",
+				i, (rx_x0[1][i] >> 21) & 0x000007ff,
+				i, (rx_y0[1][i] >> 21) & 0x000007ff);
+	}
+
+	rx_finish1 = rtw88xxa_iqk_finish(rx_average, 4, rx_x0[0], rx_y0[0],
+					 &rx_x_temp, &rx_y_temp, true, true);
+
+	if (rx_finish1) {
+		rx_x = rx_x_temp;
+		rx_y = rx_y_temp;
+	}
+
+	if (rx_iqk_loop == 2) {
+		rx_finish2 = rtw88xxa_iqk_finish(rx_average, 4,
+						 rx_x0[1], rx_y0[1],
+						 &rx_x, &rx_y, true, true);
+
+		if (rx_finish1 && rx_finish2) {
+			rx_x = (rx_x + rx_x_temp) / 2;
+			rx_y = (rx_y + rx_y_temp) / 2;
+		}
+	}
+
+	if (rx_finish1 || rx_finish2)
+		rtw8821a_iqk_rx_fill(rtwdev, rx_x, rx_y);
+	else
+		rtw8821a_iqk_rx_fill(rtwdev, 0x200, 0x0);
+}
+
+static void rtw8821a_do_iqk(struct rtw_dev *rtwdev)
+{
+	static const u32 backup_macbb_reg[MACBB_REG_NUM_8821A] = {
+		0x520, 0x550, 0x808, 0xa04, 0x90c, 0xc00, 0x838, 0x82c
+	};
+	static const u32 backup_afe_reg[AFE_REG_NUM_8821A] = {
+		0xc5c, 0xc60, 0xc64, 0xc68
+	};
+	static const u32 backup_rf_reg[RF_REG_NUM_8821A] = {
+		0x65, 0x8f, 0x0
+	};
+	u32 macbb_backup[MACBB_REG_NUM_8821A];
+	u32 afe_backup[AFE_REG_NUM_8821A];
+	u32 rfa_backup[RF_REG_NUM_8821A];
+
+	rtw88xxa_iqk_backup_mac_bb(rtwdev, macbb_backup,
+				   backup_macbb_reg, MACBB_REG_NUM_8821A);
+	rtw88xxa_iqk_backup_afe(rtwdev, afe_backup,
+				backup_afe_reg, AFE_REG_NUM_8821A);
+	rtw8821a_iqk_backup_rf(rtwdev, rfa_backup,
+			       backup_rf_reg, RF_REG_NUM_8821A);
+
+	rtw88xxa_iqk_configure_mac(rtwdev);
+
+	rtw8821a_iqk(rtwdev);
+
+	rtw8821a_iqk_restore_rf(rtwdev, backup_rf_reg,
+				rfa_backup, RF_REG_NUM_8821A);
+	rtw8821a_iqk_restore_afe(rtwdev, afe_backup,
+				 backup_afe_reg, AFE_REG_NUM_8821A);
+	rtw88xxa_iqk_restore_mac_bb(rtwdev, macbb_backup,
+				    backup_macbb_reg, MACBB_REG_NUM_8821A);
+}
+
+static void rtw8821a_phy_calibration(struct rtw_dev *rtwdev)
+{
+	rtw8821a_do_iqk(rtwdev);
+}
+
+static void rtw8821a_pwr_track(struct rtw_dev *rtwdev)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+
+	if (!dm_info->pwr_trk_triggered) {
+		rtw_write_rf(rtwdev, RF_PATH_A, RF_T_METER,
+			     GENMASK(17, 16), 0x03);
+		dm_info->pwr_trk_triggered = true;
+		return;
+	}
+
+	rtw88xxa_phy_pwrtrack(rtwdev, NULL, rtw8821a_do_iqk);
+	dm_info->pwr_trk_triggered = false;
+}
+
+static void rtw8821a_led_set(struct led_classdev *led,
+			     enum led_brightness brightness)
+{
+	struct rtw_dev *rtwdev = container_of(led, struct rtw_dev, led_cdev);
+	u32 gpio8_cfg;
+	u8 ledcfg;
+
+	if (brightness == LED_OFF) {
+		gpio8_cfg = rtw_read32(rtwdev, REG_GPIO_PIN_CTRL_2);
+		gpio8_cfg &= ~BIT(24);
+		gpio8_cfg |= BIT(16) | BIT(8);
+		rtw_write32(rtwdev, REG_GPIO_PIN_CTRL_2, gpio8_cfg);
+	} else {
+		ledcfg = rtw_read8(rtwdev, REG_LED_CFG + 2);
+		gpio8_cfg = rtw_read32(rtwdev, REG_GPIO_PIN_CTRL_2);
+
+		ledcfg &= BIT(7) | BIT(6);
+		rtw_write8(rtwdev, REG_LED_CFG + 2, ledcfg);
+
+		gpio8_cfg &= ~(BIT(24) | BIT(8));
+		gpio8_cfg |= BIT(16);
+		rtw_write32(rtwdev, REG_GPIO_PIN_CTRL_2, gpio8_cfg);
+	}
+}
+
+static void rtw8821a_fill_txdesc_checksum(struct rtw_dev *rtwdev,
+					  struct rtw_tx_pkt_info *pkt_info,
+					  u8 *txdesc)
+{
+	fill_txdesc_checksum_common(txdesc, 16);
+}
+
+static void rtw8821a_coex_cfg_init(struct rtw_dev *rtwdev)
+{
+	u8 val8;
+
+	/* BT report packet sample rate */
+	rtw_write8_mask(rtwdev, REG_BT_TDMA_TIME, BIT_MASK_SAMPLE_RATE, 0x5);
+
+	val8 = BIT_STATIS_BT_EN;
+	if (rtwdev->efuse.share_ant)
+		val8 |= BIT_R_GRANTALL_WLMASK;
+	rtw_write8(rtwdev, REG_BT_COEX_ENH_INTR_CTRL, val8);
+
+	/* enable BT counter statistics */
+	rtw_write8(rtwdev, REG_BT_STAT_CTRL, 0x3);
+
+	/* enable PTA */
+	rtw_write32_set(rtwdev, REG_GPIO_MUXCFG, BIT_BT_PTA_EN);
+}
+
+static void rtw8821a_coex_cfg_ant_switch(struct rtw_dev *rtwdev, u8 ctrl_type,
+					 u8 pos_type)
+{
+	bool share_ant = rtwdev->efuse.share_ant;
+	struct rtw_coex *coex = &rtwdev->coex;
+	struct rtw_coex_dm *coex_dm = &coex->dm;
+	u32 phase = coex_dm->cur_ant_pos_type;
+
+	if (!rtwdev->efuse.btcoex)
+		return;
+
+	switch (phase) {
+	case COEX_SET_ANT_POWERON:
+	case COEX_SET_ANT_INIT:
+		rtw_write32_clr(rtwdev, REG_LED_CFG, BIT_DPDT_SEL_EN);
+		rtw_write32_set(rtwdev, REG_LED_CFG, BIT_DPDT_WL_SEL);
+		rtw_write8_set(rtwdev, REG_GNT_BT, BIT_PTA_SW_CTL);
+
+		rtw_write8(rtwdev, REG_RFE_CTRL8,
+			   share_ant ? PTA_CTRL_PIN : DPDT_CTRL_PIN);
+		rtw_write32_mask(rtwdev, REG_RFE_CTRL8, 0x30000000, 0x1);
+		break;
+	case COEX_SET_ANT_WONLY:
+		rtw_write32_clr(rtwdev, REG_LED_CFG, BIT_DPDT_SEL_EN);
+		rtw_write32_set(rtwdev, REG_LED_CFG, BIT_DPDT_WL_SEL);
+		rtw_write8_clr(rtwdev, REG_GNT_BT, BIT_PTA_SW_CTL);
+
+		rtw_write8(rtwdev, REG_RFE_CTRL8, DPDT_CTRL_PIN);
+		rtw_write32_mask(rtwdev, REG_RFE_CTRL8, 0x30000000, 0x1);
+		break;
+	case COEX_SET_ANT_2G:
+		rtw_write32_clr(rtwdev, REG_LED_CFG, BIT_DPDT_SEL_EN);
+		rtw_write32_set(rtwdev, REG_LED_CFG, BIT_DPDT_WL_SEL);
+		rtw_write8_clr(rtwdev, REG_GNT_BT, BIT_PTA_SW_CTL);
+
+		rtw_write8(rtwdev, REG_RFE_CTRL8,
+			   share_ant ? PTA_CTRL_PIN : DPDT_CTRL_PIN);
+		rtw_write32_mask(rtwdev, REG_RFE_CTRL8, 0x30000000, 0x1);
+		break;
+	case COEX_SET_ANT_5G:
+		rtw_write32_clr(rtwdev, REG_LED_CFG, BIT_DPDT_SEL_EN);
+		rtw_write32_set(rtwdev, REG_LED_CFG, BIT_DPDT_WL_SEL);
+		rtw_write8_set(rtwdev, REG_GNT_BT, BIT_PTA_SW_CTL);
+
+		rtw_write8(rtwdev, REG_RFE_CTRL8, DPDT_CTRL_PIN);
+		rtw_write32_mask(rtwdev, REG_RFE_CTRL8, 0x30000000,
+				 share_ant ? 0x2 : 0x1);
+		break;
+	case COEX_SET_ANT_WOFF:
+		rtw_write32_clr(rtwdev, REG_LED_CFG, BIT_DPDT_SEL_EN);
+		rtw_write32_clr(rtwdev, REG_LED_CFG, BIT_DPDT_WL_SEL);
+		rtw_write8_set(rtwdev, REG_GNT_BT, BIT_PTA_SW_CTL);
+
+		rtw_write8(rtwdev, REG_RFE_CTRL8, DPDT_CTRL_PIN);
+		rtw_write32_mask(rtwdev, REG_RFE_CTRL8, 0x30000000,
+				 share_ant ? 0x2 : 0x1);
+		break;
+	default:
+		rtw_warn(rtwdev, "%s: not handling phase %d\n",
+			 __func__, phase);
+		break;
+	}
+}
+
+static void rtw8821a_coex_cfg_gnt_fix(struct rtw_dev *rtwdev)
+{
+}
+
+static void rtw8821a_coex_cfg_gnt_debug(struct rtw_dev *rtwdev)
+{
+}
+
+static void rtw8821a_coex_cfg_rfe_type(struct rtw_dev *rtwdev)
+{
+	struct rtw_coex *coex = &rtwdev->coex;
+	struct rtw_coex_rfe *coex_rfe = &coex->rfe;
+
+	coex_rfe->ant_switch_exist = true;
+}
+
+static void rtw8821a_coex_cfg_wl_tx_power(struct rtw_dev *rtwdev, u8 wl_pwr)
+{
+	struct rtw_coex *coex = &rtwdev->coex;
+	struct rtw_coex_dm *coex_dm = &coex->dm;
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+	bool share_ant = efuse->share_ant;
+
+	if (share_ant)
+		return;
+
+	if (wl_pwr == coex_dm->cur_wl_pwr_lvl)
+		return;
+
+	coex_dm->cur_wl_pwr_lvl = wl_pwr;
+}
+
+static void rtw8821a_coex_cfg_wl_rx_gain(struct rtw_dev *rtwdev, bool low_gain)
+{
+}
+
+static const struct rtw_chip_ops rtw8821a_ops = {
+	.power_on		= rtw88xxa_power_on,
+	.power_off		= rtw8821a_power_off,
+	.phy_set_param		= NULL,
+	.read_efuse		= rtw88xxa_read_efuse,
+	.query_phy_status	= rtw8821a_query_phy_status,
+	.set_channel		= rtw88xxa_set_channel,
+	.mac_init		= NULL,
+	.read_rf		= rtw88xxa_phy_read_rf,
+	.write_rf		= rtw_phy_write_rf_reg_sipi,
+	.set_antenna		= NULL,
+	.set_tx_power_index	= rtw88xxa_set_tx_power_index,
+	.cfg_ldo25		= rtw8821a_cfg_ldo25,
+	.efuse_grant		= rtw88xxa_efuse_grant,
+	.set_ampdu_factor	= rtw8821a_set_ampdu_factor,
+	.false_alarm_statistics	= rtw88xxa_false_alarm_statistics,
+	.phy_calibration	= rtw8821a_phy_calibration,
+	.cck_pd_set		= rtw88xxa_phy_cck_pd_set,
+	.pwr_track		= rtw8821a_pwr_track,
+	.config_bfee		= NULL,
+	.set_gid_table		= NULL,
+	.cfg_csi_rate		= NULL,
+	.led_set		= rtw8821a_led_set,
+	.fill_txdesc_checksum	= rtw8821a_fill_txdesc_checksum,
+	.coex_set_init		= rtw8821a_coex_cfg_init,
+	.coex_set_ant_switch	= rtw8821a_coex_cfg_ant_switch,
+	.coex_set_gnt_fix	= rtw8821a_coex_cfg_gnt_fix,
+	.coex_set_gnt_debug	= rtw8821a_coex_cfg_gnt_debug,
+	.coex_set_rfe_type	= rtw8821a_coex_cfg_rfe_type,
+	.coex_set_wl_tx_power	= rtw8821a_coex_cfg_wl_tx_power,
+	.coex_set_wl_rx_gain	= rtw8821a_coex_cfg_wl_rx_gain,
+};
+
+static const struct rtw_page_table page_table_8821a[] = {
+	/* hq_num, nq_num, lq_num, exq_num, gapq_num */
+	{0, 0, 0, 0, 0},	/* SDIO */
+	{0, 0, 0, 0, 0},	/* PCI */
+	{8, 0, 0, 0, 1},	/* 2 bulk out endpoints */
+	{8, 0, 8, 0, 1},	/* 3 bulk out endpoints */
+	{8, 0, 8, 4, 1},	/* 4 bulk out endpoints */
+};
+
+static const struct rtw_rqpn rqpn_table_8821a[] = {
+	{RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
+
+	{RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
+
+	{RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH,
+	 RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH},
+
+	{RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_HIGH, RTW_DMA_MAPPING_HIGH},
+
+	{RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
+	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
+	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
+};
+
+static const struct rtw_prioq_addrs prioq_addrs_8821a = {
+	.prio[RTW_DMA_MAPPING_EXTRA] = {
+		.rsvd = REG_RQPN_NPQ + 2, .avail = REG_RQPN_NPQ + 3,
+	},
+	.prio[RTW_DMA_MAPPING_LOW] = {
+		.rsvd = REG_RQPN + 1, .avail = REG_FIFOPAGE_CTRL_2 + 1,
+	},
+	.prio[RTW_DMA_MAPPING_NORMAL] = {
+		.rsvd = REG_RQPN_NPQ, .avail = REG_RQPN_NPQ + 1,
+	},
+	.prio[RTW_DMA_MAPPING_HIGH] = {
+		.rsvd = REG_RQPN, .avail = REG_FIFOPAGE_CTRL_2,
+	},
+	.wsize = false,
+};
+
+static const struct rtw_hw_reg rtw8821a_dig[] = {
+	[0] = { .addr = REG_RXIGI_A, .mask = 0x7f },
+};
+
+static const struct rtw_rfe_def rtw8821a_rfe_defs[] = {
+	[0] = { .phy_pg_tbl	= &rtw8821a_bb_pg_tbl,
+		.txpwr_lmt_tbl	= &rtw8821a_txpwr_lmt_tbl,
+		.pwr_track_tbl	= &rtw8821a_rtw_pwr_track_tbl, },
+};
+
+/* TODO */
+/* rssi in percentage % (dbm = % - 100) */
+static const u8 wl_rssi_step_8821a[] = {101, 45, 101, 40};
+static const u8 bt_rssi_step_8821a[] = {101, 101, 101, 101};
+
+/* table_sant_8821a, table_nsant_8821a, tdma_sant_8821a, and tdma_nsant_8821a
+ * are copied from rtw8821c.c because the 8821au driver's tables are not
+ * compatible with the coex code in rtw88.
+ *
+ * tdma case 112 (A2DP) byte 0 had to be modified from 0x61 to 0x51,
+ * otherwise the firmware gets confused after pausing the music:
+ * rtw_8821au 1-2:1.2: [BTCoex], Bt_info[1], len=7, data=[81 00 0a 01 00 00]
+ * - 81 means PAN (personal area network) when it should be 4x (A2DP)
+ * The music is not smooth with the PAN algorithm.
+ */
+
+/* Shared-Antenna Coex Table */
+static const struct coex_table_para table_sant_8821a[] = {
+	{0x55555555, 0x55555555}, /* case-0 */
+	{0x55555555, 0x55555555},
+	{0x66555555, 0x66555555},
+	{0xaaaaaaaa, 0xaaaaaaaa},
+	{0x5a5a5a5a, 0x5a5a5a5a},
+	{0xfafafafa, 0xfafafafa}, /* case-5 */
+	{0x6a5a5555, 0xaaaaaaaa},
+	{0x6a5a56aa, 0x6a5a56aa},
+	{0x6a5a5a5a, 0x6a5a5a5a},
+	{0x66555555, 0x5a5a5a5a},
+	{0x66555555, 0x6a5a5a5a}, /* case-10 */
+	{0x66555555, 0xaaaaaaaa},
+	{0x66555555, 0x6a5a5aaa},
+	{0x66555555, 0x6aaa6aaa},
+	{0x66555555, 0x6a5a5aaa},
+	{0x66555555, 0xaaaaaaaa}, /* case-15 */
+	{0xffff55ff, 0xfafafafa},
+	{0xffff55ff, 0x6afa5afa},
+	{0xaaffffaa, 0xfafafafa},
+	{0xaa5555aa, 0x5a5a5a5a},
+	{0xaa5555aa, 0x6a5a5a5a}, /* case-20 */
+	{0xaa5555aa, 0xaaaaaaaa},
+	{0xffffffff, 0x55555555},
+	{0xffffffff, 0x5a5a5a5a},
+	{0xffffffff, 0x5a5a5a5a},
+	{0xffffffff, 0x5a5a5aaa}, /* case-25 */
+	{0x55555555, 0x5a5a5a5a},
+	{0x55555555, 0xaaaaaaaa},
+	{0x66555555, 0x6a5a6a5a},
+	{0x66556655, 0x66556655},
+	{0x66556aaa, 0x6a5a6aaa}, /* case-30 */
+	{0xffffffff, 0x5aaa5aaa},
+	{0x56555555, 0x5a5a5aaa}
+};
+
+/* Non-Shared-Antenna Coex Table */
+static const struct coex_table_para table_nsant_8821a[] = {
+	{0xffffffff, 0xffffffff}, /* case-100 */
+	{0xffff55ff, 0xfafafafa},
+	{0x66555555, 0x66555555},
+	{0xaaaaaaaa, 0xaaaaaaaa},
+	{0x5a5a5a5a, 0x5a5a5a5a},
+	{0xffffffff, 0xffffffff}, /* case-105 */
+	{0x5afa5afa, 0x5afa5afa},
+	{0x55555555, 0xfafafafa},
+	{0x66555555, 0xfafafafa},
+	{0x66555555, 0x5a5a5a5a},
+	{0x66555555, 0x6a5a5a5a}, /* case-110 */
+	{0x66555555, 0xaaaaaaaa},
+	{0xffff55ff, 0xfafafafa},
+	{0xffff55ff, 0x5afa5afa},
+	{0xffff55ff, 0xaaaaaaaa},
+	{0xffff55ff, 0xffff55ff}, /* case-115 */
+	{0xaaffffaa, 0x5afa5afa},
+	{0xaaffffaa, 0xaaaaaaaa},
+	{0xffffffff, 0xfafafafa},
+	{0xffff55ff, 0xfafafafa},
+	{0xffffffff, 0xaaaaaaaa}, /* case-120 */
+	{0xffff55ff, 0x5afa5afa},
+	{0xffff55ff, 0x5afa5afa},
+	{0x55ff55ff, 0x55ff55ff}
+};
+
+/* Shared-Antenna TDMA */
+static const struct coex_tdma_para tdma_sant_8821a[] = {
+	{ {0x00, 0x00, 0x00, 0x00, 0x00} }, /* case-0 */
+	{ {0x61, 0x45, 0x03, 0x11, 0x11} }, /* case-1 */
+	{ {0x61, 0x3a, 0x03, 0x11, 0x11} },
+	{ {0x61, 0x35, 0x03, 0x11, 0x11} },
+	{ {0x61, 0x20, 0x03, 0x11, 0x11} },
+	{ {0x61, 0x3a, 0x03, 0x11, 0x11} }, /* case-5 */
+	{ {0x61, 0x45, 0x03, 0x11, 0x10} },
+	{ {0x61, 0x35, 0x03, 0x11, 0x10} },
+	{ {0x61, 0x30, 0x03, 0x11, 0x10} },
+	{ {0x61, 0x20, 0x03, 0x11, 0x10} },
+	{ {0x61, 0x10, 0x03, 0x11, 0x10} }, /* case-10 */
+	{ {0x61, 0x08, 0x03, 0x11, 0x15} },
+	{ {0x61, 0x08, 0x03, 0x10, 0x14} },
+	{ {0x51, 0x08, 0x03, 0x10, 0x54} },
+	{ {0x51, 0x08, 0x03, 0x10, 0x55} },
+	{ {0x51, 0x08, 0x07, 0x10, 0x54} }, /* case-15 */
+	{ {0x51, 0x45, 0x03, 0x10, 0x50} },
+	{ {0x51, 0x3a, 0x03, 0x11, 0x50} },
+	{ {0x51, 0x30, 0x03, 0x10, 0x50} },
+	{ {0x51, 0x21, 0x03, 0x10, 0x50} },
+	{ {0x51, 0x10, 0x03, 0x10, 0x50} }, /* case-20 */
+	{ {0x51, 0x4a, 0x03, 0x10, 0x50} },
+	{ {0x51, 0x08, 0x03, 0x30, 0x54} },
+	{ {0x55, 0x08, 0x03, 0x10, 0x54} },
+	{ {0x65, 0x10, 0x03, 0x11, 0x10} },
+	{ {0x51, 0x10, 0x03, 0x10, 0x51} }, /* case-25 */
+	{ {0x51, 0x21, 0x03, 0x10, 0x50} },
+	{ {0x61, 0x08, 0x03, 0x11, 0x11} }
+};
+
+/* Non-Shared-Antenna TDMA */
+static const struct coex_tdma_para tdma_nsant_8821a[] = {
+	{ {0x00, 0x00, 0x00, 0x40, 0x00} }, /* case-100 */
+	{ {0x61, 0x45, 0x03, 0x11, 0x11} },
+	{ {0x61, 0x25, 0x03, 0x11, 0x11} },
+	{ {0x61, 0x35, 0x03, 0x11, 0x11} },
+	{ {0x61, 0x20, 0x03, 0x11, 0x11} },
+	{ {0x61, 0x10, 0x03, 0x11, 0x11} }, /* case-105 */
+	{ {0x61, 0x45, 0x03, 0x11, 0x10} },
+	{ {0x61, 0x30, 0x03, 0x11, 0x10} },
+	{ {0x61, 0x30, 0x03, 0x11, 0x10} },
+	{ {0x61, 0x20, 0x03, 0x11, 0x10} },
+	{ {0x61, 0x10, 0x03, 0x11, 0x10} }, /* case-110 */
+	{ {0x61, 0x10, 0x03, 0x11, 0x11} },
+	{ {0x51, 0x08, 0x03, 0x10, 0x14} }, /* a2dp high rssi */
+	{ {0x51, 0x08, 0x03, 0x10, 0x54} }, /* a2dp not high rssi */
+	{ {0x51, 0x08, 0x03, 0x10, 0x55} },
+	{ {0x51, 0x08, 0x07, 0x10, 0x54} }, /* case-115 */
+	{ {0x51, 0x45, 0x03, 0x10, 0x50} },
+	{ {0x51, 0x3a, 0x03, 0x10, 0x50} },
+	{ {0x51, 0x30, 0x03, 0x10, 0x50} },
+	{ {0x51, 0x21, 0x03, 0x10, 0x50} },
+	{ {0x51, 0x21, 0x03, 0x10, 0x50} }, /* case-120 */
+	{ {0x51, 0x10, 0x03, 0x10, 0x50} }
+};
+
+/* TODO */
+static const struct coex_rf_para rf_para_tx_8821a[] = {
+	{0, 0, false, 7},  /* for normal */
+	{0, 20, false, 7}, /* for WL-CPT */
+	{8, 17, true, 4},
+	{7, 18, true, 4},
+	{6, 19, true, 4},
+	{5, 20, true, 4}
+};
+
+static const struct coex_rf_para rf_para_rx_8821a[] = {
+	{0, 0, false, 7},  /* for normal */
+	{0, 20, false, 7}, /* for WL-CPT */
+	{3, 24, true, 5},
+	{2, 26, true, 5},
+	{1, 27, true, 5},
+	{0, 28, true, 5}
+};
+
+static_assert(ARRAY_SIZE(rf_para_tx_8821a) == ARRAY_SIZE(rf_para_rx_8821a));
+
+static const struct coex_5g_afh_map afh_5g_8821a[] = { {0, 0, 0} };
+
+static const struct rtw_reg_domain coex_info_hw_regs_8821a[] = {
+	{0xCB0, MASKDWORD, RTW_REG_DOMAIN_MAC32},
+	{0xCB4, MASKDWORD, RTW_REG_DOMAIN_MAC32},
+	{0xCBA, MASKBYTE0, RTW_REG_DOMAIN_MAC8},
+	{0, 0, RTW_REG_DOMAIN_NL},
+	{0x430, MASKDWORD, RTW_REG_DOMAIN_MAC32},
+	{0x434, MASKDWORD, RTW_REG_DOMAIN_MAC32},
+	{0x42a, MASKLWORD, RTW_REG_DOMAIN_MAC16},
+	{0x426, MASKBYTE0, RTW_REG_DOMAIN_MAC8},
+	{0x45e, BIT(3), RTW_REG_DOMAIN_MAC8},
+	{0x454, MASKLWORD, RTW_REG_DOMAIN_MAC16},
+	{0, 0, RTW_REG_DOMAIN_NL},
+	{0x4c, BIT(24) | BIT(23), RTW_REG_DOMAIN_MAC32},
+	{0x64, BIT(0), RTW_REG_DOMAIN_MAC8},
+	{0x4c6, BIT(4), RTW_REG_DOMAIN_MAC8},
+	{0x40, BIT(5), RTW_REG_DOMAIN_MAC8},
+	{0x1, RFREG_MASK, RTW_REG_DOMAIN_RF_A},
+	{0, 0, RTW_REG_DOMAIN_NL},
+	{0x550, MASKDWORD, RTW_REG_DOMAIN_MAC32},
+	{0x522, MASKBYTE0, RTW_REG_DOMAIN_MAC8},
+	{0x953, BIT(1), RTW_REG_DOMAIN_MAC8},
+	{0xc50,  MASKBYTE0, RTW_REG_DOMAIN_MAC8},
+	{0x60A, MASKBYTE0, RTW_REG_DOMAIN_MAC8},
+};
+
+const struct rtw_chip_info rtw8821a_hw_spec = {
+	.ops = &rtw8821a_ops,
+	.id = RTW_CHIP_TYPE_8821A,
+	.fw_name = "rtw88/rtw8821a_fw.bin",
+	.wlan_cpu = RTW_WCPU_11N,
+	.tx_pkt_desc_sz = 40,
+	.tx_buf_desc_sz = 16,
+	.rx_pkt_desc_sz = 24,
+	.rx_buf_desc_sz = 8,
+	.phy_efuse_size = 512,
+	.log_efuse_size = 512,
+	.ptct_efuse_size = 0,
+	.txff_size = 65536,
+	.rxff_size = 16128,
+	.rsvd_drv_pg_num = 8,
+	.txgi_factor = 1,
+	.is_pwr_by_rate_dec = true,
+	.max_power_index = 0x3f,
+	.csi_buf_pg_num = 0,
+	.band = RTW_BAND_2G | RTW_BAND_5G,
+	.page_size = 256,
+	.dig_min = 0x20,
+	.ht_supported = true,
+	.vht_supported = true,
+	.lps_deep_mode_supported = 0,
+	.sys_func_en = 0xFD,
+	.pwr_on_seq = card_enable_flow_8821a,
+	.pwr_off_seq = card_disable_flow_8821a,
+	.page_table = page_table_8821a,
+	.rqpn_table = rqpn_table_8821a,
+	.prioq_addrs = &prioq_addrs_8821a,
+	.intf_table = NULL,
+	.dig = rtw8821a_dig,
+	.rf_sipi_addr = {REG_LSSI_WRITE_A, REG_LSSI_WRITE_B},
+	.ltecoex_addr = NULL,
+	.mac_tbl = &rtw8821a_mac_tbl,
+	.agc_tbl = &rtw8821a_agc_tbl,
+	.bb_tbl = &rtw8821a_bb_tbl,
+	.rf_tbl = {&rtw8821a_rf_a_tbl},
+	.rfe_defs = rtw8821a_rfe_defs,
+	.rfe_defs_size = ARRAY_SIZE(rtw8821a_rfe_defs),
+	.rx_ldpc = false,
+	.amsdu_in_ampdu = true,
+	.hw_feature_report = false,
+	.c2h_ra_report_size = 4,
+	.old_datarate_fb_limit = true,
+	.usb_tx_agg_desc_num = 6,
+	.iqk_threshold = 8,
+	.ampdu_density = IEEE80211_HT_MPDU_DENSITY_16,
+	.max_scan_ie_len = IEEE80211_MAX_DATA_LEN,
+
+	.coex_para_ver = 20190509, /* glcoex_ver_date_8821a_1ant */
+	.bt_desired_ver = 0x62, /* But for 2 ant it's 0x5c */
+	.scbd_support = false,
+	.new_scbd10_def = false,
+	.ble_hid_profile_support = false,
+	.wl_mimo_ps_support = false,
+	.pstdma_type = COEX_PSTDMA_FORCE_LPSOFF,
+	.bt_rssi_type = COEX_BTRSSI_RATIO,
+	.ant_isolation = 10,
+	.rssi_tolerance = 2,
+	.wl_rssi_step = wl_rssi_step_8821a,
+	.bt_rssi_step = bt_rssi_step_8821a,
+	.table_sant_num = ARRAY_SIZE(table_sant_8821a),
+	.table_sant = table_sant_8821a,
+	.table_nsant_num = ARRAY_SIZE(table_nsant_8821a),
+	.table_nsant = table_nsant_8821a,
+	.tdma_sant_num = ARRAY_SIZE(tdma_sant_8821a),
+	.tdma_sant = tdma_sant_8821a,
+	.tdma_nsant_num = ARRAY_SIZE(tdma_nsant_8821a),
+	.tdma_nsant = tdma_nsant_8821a,
+	.wl_rf_para_num = ARRAY_SIZE(rf_para_tx_8821a),
+	.wl_rf_para_tx = rf_para_tx_8821a,
+	.wl_rf_para_rx = rf_para_rx_8821a,
+	.bt_afh_span_bw20 = 0x20,
+	.bt_afh_span_bw40 = 0x30,
+	.afh_5g_num = ARRAY_SIZE(afh_5g_8821a),
+	.afh_5g = afh_5g_8821a,
+
+	.coex_info_hw_regs_num = ARRAY_SIZE(coex_info_hw_regs_8821a),
+	.coex_info_hw_regs = coex_info_hw_regs_8821a,
+};
+EXPORT_SYMBOL(rtw8821a_hw_spec);
+
+MODULE_FIRMWARE("rtw88/rtw8821a_fw.bin");
+
+MODULE_AUTHOR("Realtek Corporation");
+MODULE_DESCRIPTION("Realtek 802.11ac wireless 8821a/8811a driver");
+MODULE_LICENSE("Dual BSD/GPL");
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8821a.h b/drivers/net/wireless/realtek/rtw88/rtw8821a.h
new file mode 100644
index 000000000000..1b2e548f7234
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8821a.h
@@ -0,0 +1,10 @@
+/* SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause */
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#ifndef __RTW8821A_H__
+#define __RTW8821A_H__
+
+extern const struct rtw_chip_info rtw8821a_hw_spec;
+
+#endif
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8821a_table.c b/drivers/net/wireless/realtek/rtw88/rtw8821a_table.c
new file mode 100644
index 000000000000..c8fd8e331f69
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8821a_table.c
@@ -0,0 +1,2350 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#include "main.h"
+#include "phy.h"
+#include "rtw8821a_table.h"
+
+static const u32 rtw8821a_mac[] = {
+	0x421, 0x0000000F,
+	0x428, 0x0000000A,
+	0x429, 0x00000010,
+	0x430, 0x00000000,
+	0x431, 0x00000000,
+	0x432, 0x00000000,
+	0x433, 0x00000001,
+	0x434, 0x00000004,
+	0x435, 0x00000005,
+	0x436, 0x00000007,
+	0x437, 0x00000008,
+	0x43C, 0x00000004,
+	0x43D, 0x00000005,
+	0x43E, 0x00000007,
+	0x43F, 0x00000008,
+	0x440, 0x0000005D,
+	0x441, 0x00000001,
+	0x442, 0x00000000,
+	0x444, 0x00000010,
+	0x445, 0x00000000,
+	0x446, 0x00000000,
+	0x447, 0x00000000,
+	0x448, 0x00000000,
+	0x449, 0x000000F0,
+	0x44A, 0x0000000F,
+	0x44B, 0x0000003E,
+	0x44C, 0x00000010,
+	0x44D, 0x00000000,
+	0x44E, 0x00000000,
+	0x44F, 0x00000000,
+	0x450, 0x00000000,
+	0x451, 0x000000F0,
+	0x452, 0x0000000F,
+	0x453, 0x00000000,
+	0x456, 0x0000005E,
+	0x460, 0x00000066,
+	0x461, 0x00000066,
+	0x4C8, 0x0000003F,
+	0x4C9, 0x000000FF,
+	0x4CC, 0x000000FF,
+	0x4CD, 0x000000FF,
+	0x4CE, 0x00000001,
+	0x500, 0x00000026,
+	0x501, 0x000000A2,
+	0x502, 0x0000002F,
+	0x503, 0x00000000,
+	0x504, 0x00000028,
+	0x505, 0x000000A3,
+	0x506, 0x0000005E,
+	0x507, 0x00000000,
+	0x508, 0x0000002B,
+	0x509, 0x000000A4,
+	0x50A, 0x0000005E,
+	0x50B, 0x00000000,
+	0x50C, 0x0000004F,
+	0x50D, 0x000000A4,
+	0x50E, 0x00000000,
+	0x50F, 0x00000000,
+	0x512, 0x0000001C,
+	0x514, 0x0000000A,
+	0x516, 0x0000000A,
+	0x525, 0x0000004F,
+	0x550, 0x00000010,
+	0x551, 0x00000010,
+	0x559, 0x00000002,
+	0x55C, 0x00000050,
+	0x55D, 0x000000FF,
+	0x605, 0x00000030,
+	0x607, 0x00000007,
+	0x608, 0x0000000E,
+	0x609, 0x0000002A,
+	0x620, 0x000000FF,
+	0x621, 0x000000FF,
+	0x622, 0x000000FF,
+	0x623, 0x000000FF,
+	0x624, 0x000000FF,
+	0x625, 0x000000FF,
+	0x626, 0x000000FF,
+	0x627, 0x000000FF,
+	0x638, 0x00000050,
+	0x63C, 0x0000000A,
+	0x63D, 0x0000000A,
+	0x63E, 0x0000000E,
+	0x63F, 0x0000000E,
+	0x640, 0x00000040,
+	0x642, 0x00000040,
+	0x643, 0x00000000,
+	0x652, 0x000000C8,
+	0x66E, 0x00000005,
+	0x700, 0x00000021,
+	0x701, 0x00000043,
+	0x702, 0x00000065,
+	0x703, 0x00000087,
+	0x708, 0x00000021,
+	0x709, 0x00000043,
+	0x70A, 0x00000065,
+	0x70B, 0x00000087,
+	0x718, 0x00000040,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8821a_mac, rtw_phy_cfg_mac);
+
+static const u32 rtw8821a_agc[] = {
+	0x81C, 0xBF000001,
+	0x81C, 0xBF020001,
+	0x81C, 0xBF040001,
+	0x81C, 0xBF060001,
+	0x81C, 0xBE080001,
+	0x81C, 0xBD0A0001,
+	0x81C, 0xBC0C0001,
+	0x81C, 0xBA0E0001,
+	0x81C, 0xB9100001,
+	0x81C, 0xB8120001,
+	0x81C, 0xB7140001,
+	0x81C, 0xB6160001,
+	0x81C, 0xB5180001,
+	0x81C, 0xB41A0001,
+	0x81C, 0xB31C0001,
+	0x81C, 0xB21E0001,
+	0x81C, 0xB1200001,
+	0x81C, 0xB0220001,
+	0x81C, 0xAF240001,
+	0x81C, 0xAE260001,
+	0x81C, 0xAD280001,
+	0x81C, 0xAC2A0001,
+	0x81C, 0xAB2C0001,
+	0x81C, 0xAA2E0001,
+	0x81C, 0xA9300001,
+	0x81C, 0xA8320001,
+	0x81C, 0xA7340001,
+	0x81C, 0xA6360001,
+	0x81C, 0xA5380001,
+	0x81C, 0xA43A0001,
+	0x81C, 0x683C0001,
+	0x81C, 0x673E0001,
+	0x81C, 0x66400001,
+	0x81C, 0x65420001,
+	0x81C, 0x64440001,
+	0x81C, 0x63460001,
+	0x81C, 0x62480001,
+	0x81C, 0x614A0001,
+	0x81C, 0x474C0001,
+	0x81C, 0x464E0001,
+	0x81C, 0x45500001,
+	0x81C, 0x44520001,
+	0x81C, 0x43540001,
+	0x81C, 0x42560001,
+	0x81C, 0x41580001,
+	0x81C, 0x285A0001,
+	0x81C, 0x275C0001,
+	0x81C, 0x265E0001,
+	0x81C, 0x25600001,
+	0x81C, 0x24620001,
+	0x81C, 0x0A640001,
+	0x81C, 0x09660001,
+	0x81C, 0x08680001,
+	0x81C, 0x076A0001,
+	0x81C, 0x066C0001,
+	0x81C, 0x056E0001,
+	0x81C, 0x04700001,
+	0x81C, 0x03720001,
+	0x81C, 0x02740001,
+	0x81C, 0x01760001,
+	0x81C, 0x01780001,
+	0x81C, 0x017A0001,
+	0x81C, 0x017C0001,
+	0x81C, 0x017E0001,
+	0x8000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFB000101,
+	0x81C, 0xFA020101,
+	0x81C, 0xF9040101,
+	0x81C, 0xF8060101,
+	0x81C, 0xF7080101,
+	0x81C, 0xF60A0101,
+	0x81C, 0xF50C0101,
+	0x81C, 0xF40E0101,
+	0x81C, 0xF3100101,
+	0x81C, 0xF2120101,
+	0x81C, 0xF1140101,
+	0x81C, 0xF0160101,
+	0x81C, 0xEF180101,
+	0x81C, 0xEE1A0101,
+	0x81C, 0xED1C0101,
+	0x81C, 0xEC1E0101,
+	0x81C, 0xEB200101,
+	0x81C, 0xEA220101,
+	0x81C, 0xE9240101,
+	0x81C, 0xE8260101,
+	0x81C, 0xE7280101,
+	0x81C, 0xE62A0101,
+	0x81C, 0xE52C0101,
+	0x81C, 0xE42E0101,
+	0x81C, 0xE3300101,
+	0x81C, 0xA5320101,
+	0x81C, 0xA4340101,
+	0x81C, 0xA3360101,
+	0x81C, 0x87380101,
+	0x81C, 0x863A0101,
+	0x81C, 0x853C0101,
+	0x81C, 0x843E0101,
+	0x81C, 0x69400101,
+	0x81C, 0x68420101,
+	0x81C, 0x67440101,
+	0x81C, 0x66460101,
+	0x81C, 0x49480101,
+	0x81C, 0x484A0101,
+	0x81C, 0x474C0101,
+	0x81C, 0x2A4E0101,
+	0x81C, 0x29500101,
+	0x81C, 0x28520101,
+	0x81C, 0x27540101,
+	0x81C, 0x26560101,
+	0x81C, 0x25580101,
+	0x81C, 0x245A0101,
+	0x81C, 0x235C0101,
+	0x81C, 0x055E0101,
+	0x81C, 0x04600101,
+	0x81C, 0x03620101,
+	0x81C, 0x02640101,
+	0x81C, 0x01660101,
+	0x81C, 0x01680101,
+	0x81C, 0x016A0101,
+	0x81C, 0x016C0101,
+	0x81C, 0x016E0101,
+	0x81C, 0x01700101,
+	0x81C, 0x01720101,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x81C, 0xFB000101,
+	0x81C, 0xFA020101,
+	0x81C, 0xF9040101,
+	0x81C, 0xF8060101,
+	0x81C, 0xF7080101,
+	0x81C, 0xF60A0101,
+	0x81C, 0xF50C0101,
+	0x81C, 0xF40E0101,
+	0x81C, 0xF3100101,
+	0x81C, 0xF2120101,
+	0x81C, 0xF1140101,
+	0x81C, 0xF0160101,
+	0x81C, 0xEF180101,
+	0x81C, 0xEE1A0101,
+	0x81C, 0xED1C0101,
+	0x81C, 0xEC1E0101,
+	0x81C, 0xEB200101,
+	0x81C, 0xEA220101,
+	0x81C, 0xE9240101,
+	0x81C, 0xE8260101,
+	0x81C, 0xE7280101,
+	0x81C, 0xE62A0101,
+	0x81C, 0xE52C0101,
+	0x81C, 0xE42E0101,
+	0x81C, 0xE3300101,
+	0x81C, 0xA5320101,
+	0x81C, 0xA4340101,
+	0x81C, 0xA3360101,
+	0x81C, 0x87380101,
+	0x81C, 0x863A0101,
+	0x81C, 0x853C0101,
+	0x81C, 0x843E0101,
+	0x81C, 0x69400101,
+	0x81C, 0x68420101,
+	0x81C, 0x67440101,
+	0x81C, 0x66460101,
+	0x81C, 0x49480101,
+	0x81C, 0x484A0101,
+	0x81C, 0x474C0101,
+	0x81C, 0x2A4E0101,
+	0x81C, 0x29500101,
+	0x81C, 0x28520101,
+	0x81C, 0x27540101,
+	0x81C, 0x26560101,
+	0x81C, 0x25580101,
+	0x81C, 0x245A0101,
+	0x81C, 0x235C0101,
+	0x81C, 0x055E0101,
+	0x81C, 0x04600101,
+	0x81C, 0x03620101,
+	0x81C, 0x02640101,
+	0x81C, 0x01660101,
+	0x81C, 0x01680101,
+	0x81C, 0x016A0101,
+	0x81C, 0x016C0101,
+	0x81C, 0x016E0101,
+	0x81C, 0x01700101,
+	0x81C, 0x01720101,
+	0xA0000000,	0x00000000,
+	0x81C, 0xFF000101,
+	0x81C, 0xFF020101,
+	0x81C, 0xFE040101,
+	0x81C, 0xFD060101,
+	0x81C, 0xFC080101,
+	0x81C, 0xFD0A0101,
+	0x81C, 0xFC0C0101,
+	0x81C, 0xFB0E0101,
+	0x81C, 0xFA100101,
+	0x81C, 0xF9120101,
+	0x81C, 0xF8140101,
+	0x81C, 0xF7160101,
+	0x81C, 0xF6180101,
+	0x81C, 0xF51A0101,
+	0x81C, 0xF41C0101,
+	0x81C, 0xF31E0101,
+	0x81C, 0xF2200101,
+	0x81C, 0xF1220101,
+	0x81C, 0xF0240101,
+	0x81C, 0xEF260101,
+	0x81C, 0xEE280101,
+	0x81C, 0xED2A0101,
+	0x81C, 0xEC2C0101,
+	0x81C, 0xEB2E0101,
+	0x81C, 0xEA300101,
+	0x81C, 0xE9320101,
+	0x81C, 0xE8340101,
+	0x81C, 0xE7360101,
+	0x81C, 0xE6380101,
+	0x81C, 0xE53A0101,
+	0x81C, 0xE43C0101,
+	0x81C, 0xE33E0101,
+	0x81C, 0xA5400101,
+	0x81C, 0xA4420101,
+	0x81C, 0xA3440101,
+	0x81C, 0x87460101,
+	0x81C, 0x86480101,
+	0x81C, 0x854A0101,
+	0x81C, 0x844C0101,
+	0x81C, 0x694E0101,
+	0x81C, 0x68500101,
+	0x81C, 0x67520101,
+	0x81C, 0x66540101,
+	0x81C, 0x49560101,
+	0x81C, 0x48580101,
+	0x81C, 0x475A0101,
+	0x81C, 0x2A5C0101,
+	0x81C, 0x295E0101,
+	0x81C, 0x28600101,
+	0x81C, 0x27620101,
+	0x81C, 0x26640101,
+	0x81C, 0x25660101,
+	0x81C, 0x24680101,
+	0x81C, 0x236A0101,
+	0x81C, 0x056C0101,
+	0x81C, 0x046E0101,
+	0x81C, 0x03700101,
+	0x81C, 0x02720101,
+	0xB0000000,	0x00000000,
+	0x81C, 0x01740101,
+	0x81C, 0x01760101,
+	0x81C, 0x01780101,
+	0x81C, 0x017A0101,
+	0x81C, 0x017C0101,
+	0x81C, 0x017E0101,
+	0xC50, 0x00000022,
+	0xC50, 0x00000020,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8821a_agc, rtw_phy_cfg_agc);
+
+static const u32 rtw8821a_bb[] = {
+	0x800, 0x0020D090,
+	0x804, 0x080112E0,
+	0x808, 0x0E028211,
+	0x80C, 0x92131111,
+	0x810, 0x20101261,
+	0x814, 0x020C3D10,
+	0x818, 0x03A00385,
+	0x820, 0x00000000,
+	0x824, 0x00030FE0,
+	0x828, 0x00000000,
+	0x82C, 0x002081DD,
+	0x830, 0x2AAAEEC8,
+	0x834, 0x0037A706,
+	0x838, 0x06489B44,
+	0x83C, 0x0000095B,
+	0x840, 0xC0000001,
+	0x844, 0x40003CDE,
+	0x848, 0x62103F8B,
+	0x84C, 0x6CFDFFB8,
+	0x850, 0x28874706,
+	0x854, 0x0001520C,
+	0x858, 0x8060E000,
+	0x85C, 0x74210168,
+	0x860, 0x6929C321,
+	0x864, 0x79727432,
+	0x868, 0x8CA7A314,
+	0x86C, 0x888C2878,
+	0x870, 0x08888888,
+	0x874, 0x31612C2E,
+	0x878, 0x00000152,
+	0x87C, 0x000FD000,
+	0x8A0, 0x00000013,
+	0x8A4, 0x7F7F7F7F,
+	0x8A8, 0xA2000338,
+	0x8AC, 0x0FF0FA0A,
+	0x8B4, 0x000FC080,
+	0x8B8, 0x6C10D7FF,
+	0x8BC, 0x0CA52090,
+	0x8C0, 0x1BF00020,
+	0x8C4, 0x00000000,
+	0x8C8, 0x00013169,
+	0x8CC, 0x08248492,
+	0x8D4, 0x940008A0,
+	0x8D8, 0x290B5612,
+	0x8F8, 0x400002C0,
+	0x8FC, 0x00000000,
+	0x900, 0x00000700,
+	0x90C, 0x00000000,
+	0x910, 0x0000FC00,
+	0x914, 0x00000404,
+	0x918, 0x1C1028C0,
+	0x91C, 0x64B11A1C,
+	0x920, 0xE0767233,
+	0x924, 0x055AA500,
+	0x928, 0x00000004,
+	0x92C, 0xFFFE0000,
+	0x930, 0xFFFFFFFE,
+	0x934, 0x001FFFFF,
+	0x960, 0x00000000,
+	0x964, 0x00000000,
+	0x968, 0x00000000,
+	0x96C, 0x00000000,
+	0x970, 0x801FFFFF,
+	0x974, 0x000003FF,
+	0x978, 0x00000000,
+	0x97C, 0x00000000,
+	0x980, 0x00000000,
+	0x984, 0x00000000,
+	0x988, 0x00000000,
+	0x990, 0x27100000,
+	0x994, 0xFFFF0100,
+	0x998, 0xFFFFFF5C,
+	0x99C, 0xFFFFFFFF,
+	0x9A0, 0x000000FF,
+	0x9A4, 0x00480080,
+	0x9A8, 0x00000000,
+	0x9AC, 0x00000000,
+	0x9B0, 0x81081008,
+	0x9B4, 0x01081008,
+	0x9B8, 0x01081008,
+	0x9BC, 0x01081008,
+	0x9D0, 0x00000000,
+	0x9D4, 0x00000000,
+	0x9D8, 0x00000000,
+	0x9DC, 0x00000000,
+	0x9E0, 0x00005D00,
+	0x9E4, 0x00000003,
+	0x9E8, 0x00000001,
+	0xA00, 0x00D047C8,
+	0xA04, 0x01FF800C,
+	0xA08, 0x8C8A8300,
+	0xA0C, 0x2E68000F,
+	0xA10, 0x9500BB78,
+	0xA14, 0x11144028,
+	0xA18, 0x00881117,
+	0xA1C, 0x89140F00,
+	0xA20, 0x1A1B0000,
+	0xA24, 0x090E1317,
+	0xA28, 0x00000204,
+	0xA2C, 0x00900000,
+	0xA70, 0x101FFF00,
+	0xA74, 0x00000008,
+	0xA78, 0x00000900,
+	0xA7C, 0x225B0606,
+	0xA80, 0x21805490,
+	0xA84, 0x001F0000,
+	0XB00, 0x03100040,
+	0XB04, 0x0000B000,
+	0XB08, 0xAE0201EB,
+	0XB0C, 0x01003207,
+	0XB10, 0x00009807,
+	0XB14, 0x01000000,
+	0XB18, 0x00000002,
+	0XB1C, 0x00000002,
+	0XB20, 0x0000001F,
+	0XB24, 0x03020100,
+	0XB28, 0x07060504,
+	0XB2C, 0x0B0A0908,
+	0XB30, 0x0F0E0D0C,
+	0XB34, 0x13121110,
+	0XB38, 0x17161514,
+	0XB3C, 0x0000003A,
+	0XB40, 0x00000000,
+	0XB44, 0x00000000,
+	0XB48, 0x13000032,
+	0XB4C, 0x48080000,
+	0XB50, 0x00000000,
+	0XB54, 0x00000000,
+	0XB58, 0x00000000,
+	0XB5C, 0x00000000,
+	0xC00, 0x00000007,
+	0xC04, 0x00042020,
+	0xC08, 0x80410231,
+	0xC0C, 0x00000000,
+	0xC10, 0x00000100,
+	0xC14, 0x01000000,
+	0xC1C, 0x40000003,
+	0xC20, 0x2C2C2C2C,
+	0xC24, 0x30303030,
+	0xC28, 0x30303030,
+	0xC2C, 0x2C2C2C2C,
+	0xC30, 0x2C2C2C2C,
+	0xC34, 0x2C2C2C2C,
+	0xC38, 0x2C2C2C2C,
+	0xC3C, 0x2A2A2A2A,
+	0xC40, 0x2A2A2A2A,
+	0xC44, 0x2A2A2A2A,
+	0xC48, 0x2A2A2A2A,
+	0xC4C, 0x2A2A2A2A,
+	0xC50, 0x00000020,
+	0xC54, 0x001C1208,
+	0xC58, 0x30000C1C,
+	0xC5C, 0x00000058,
+	0xC60, 0x34344443,
+	0xC64, 0x07003333,
+	0xC68, 0x19791979,
+	0xC6C, 0x19791979,
+	0xC70, 0x19791979,
+	0xC74, 0x19791979,
+	0xC78, 0x19791979,
+	0xC7C, 0x19791979,
+	0xC80, 0x19791979,
+	0xC84, 0x19791979,
+	0xC94, 0x0100005C,
+	0xC98, 0x00000000,
+	0xC9C, 0x00000000,
+	0xCA0, 0x00000029,
+	0xCA4, 0x08040201,
+	0xCA8, 0x80402010,
+	0xCB0, 0x77775747,
+	0xCB4, 0x10000077,
+	0xCB8, 0x00508240,
+};
+
+RTW_DECL_TABLE_PHY_COND(rtw8821a_bb, rtw_phy_cfg_bb);
+
+static const struct rtw_phy_pg_cfg_pair rtw8821a_bb_pg[] = {
+	{ 0, 0, 0, 0x00000c20, 0xffffffff, 0x32343638, },
+	{ 0, 0, 0, 0x00000c24, 0xffffffff, 0x36363838, },
+	{ 0, 0, 0, 0x00000c28, 0xffffffff, 0x28303234, },
+	{ 0, 0, 0, 0x00000c2c, 0xffffffff, 0x34363838, },
+	{ 0, 0, 0, 0x00000c30, 0xffffffff, 0x26283032, },
+	{ 0, 0, 0, 0x00000c3c, 0xffffffff, 0x32343636, },
+	{ 0, 0, 0, 0x00000c40, 0xffffffff, 0x24262830, },
+	{ 0, 0, 0, 0x00000c44, 0x0000ffff, 0x00002022, },
+	{ 1, 0, 0, 0x00000c24, 0xffffffff, 0x34343636, },
+	{ 1, 0, 0, 0x00000c28, 0xffffffff, 0x26283032, },
+	{ 1, 0, 0, 0x00000c2c, 0xffffffff, 0x32343636, },
+	{ 1, 0, 0, 0x00000c30, 0xffffffff, 0x24262830, },
+	{ 1, 0, 0, 0x00000c3c, 0xffffffff, 0x32343636, },
+	{ 1, 0, 0, 0x00000c40, 0xffffffff, 0x24262830, },
+	{ 1, 0, 0, 0x00000c44, 0x0000ffff, 0x00002022, },
+};
+
+RTW_DECL_TABLE_BB_PG(rtw8821a_bb_pg);
+
+static const u32 rtw8821a_rf_a[] = {
+	0x018, 0x0001712A,
+	0x056, 0x00051CF2,
+	0x066, 0x00040000,
+	0x000, 0x00010000,
+	0x01E, 0x00080000,
+	0x082, 0x00000830,
+	0x083, 0x00021800,
+	0x084, 0x00028000,
+	0x085, 0x00048000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x086, 0x0009483A,
+	0xA0000000,	0x00000000,
+	0x086, 0x00094838,
+	0xB0000000,	0x00000000,
+	0x087, 0x00044980,
+	0x088, 0x00048000,
+	0x089, 0x0000D480,
+	0x08A, 0x00042240,
+	0x08B, 0x000F0380,
+	0x08C, 0x00090000,
+	0x08D, 0x00022852,
+	0x08E, 0x00065540,
+	0x08F, 0x00088001,
+	0x0EF, 0x00020000,
+	0x03E, 0x00000380,
+	0x03F, 0x00090018,
+	0x03E, 0x00020380,
+	0x03F, 0x000A0018,
+	0x03E, 0x00040308,
+	0x03F, 0x000A0018,
+	0x03E, 0x00060018,
+	0x03F, 0x000A0018,
+	0x0EF, 0x00000000,
+	0x018, 0x0001712A,
+	0x089, 0x00000080,
+	0x08B, 0x00080180,
+	0x0EF, 0x00001000,
+	0x03A, 0x00000244,
+	0x03B, 0x00038027,
+	0x03C, 0x00082000,
+	0x03A, 0x00000244,
+	0x03B, 0x00030113,
+	0x03C, 0x00082000,
+	0x03A, 0x0000014C,
+	0x03B, 0x00028027,
+	0x03C, 0x00082000,
+	0x03A, 0x000000CC,
+	0x03B, 0x00027027,
+	0x03C, 0x00042000,
+	0x03A, 0x0000014C,
+	0x03B, 0x0001F913,
+	0x03C, 0x00042000,
+	0x03A, 0x0000010C,
+	0x03B, 0x00017F10,
+	0x03C, 0x00012000,
+	0x03A, 0x000000D0,
+	0x03B, 0x00008027,
+	0x03C, 0x000CA000,
+	0x03A, 0x00000244,
+	0x03B, 0x00078027,
+	0x03C, 0x00082000,
+	0x03A, 0x00000244,
+	0x03B, 0x00070113,
+	0x03C, 0x00082000,
+	0x03A, 0x0000014C,
+	0x03B, 0x00068027,
+	0x03C, 0x00082000,
+	0x03A, 0x000000CC,
+	0x03B, 0x00067027,
+	0x03C, 0x00042000,
+	0x03A, 0x0000014C,
+	0x03B, 0x0005F913,
+	0x03C, 0x00042000,
+	0x03A, 0x0000010C,
+	0x03B, 0x00057F10,
+	0x03C, 0x00012000,
+	0x03A, 0x000000D0,
+	0x03B, 0x00048027,
+	0x03C, 0x000CA000,
+	0x03A, 0x00000244,
+	0x03B, 0x000B8027,
+	0x03C, 0x00082000,
+	0x03A, 0x00000244,
+	0x03B, 0x000B0113,
+	0x03C, 0x00082000,
+	0x03A, 0x0000014C,
+	0x03B, 0x000A8027,
+	0x03C, 0x00082000,
+	0x03A, 0x000000CC,
+	0x03B, 0x000A7027,
+	0x03C, 0x00042000,
+	0x03A, 0x0000014C,
+	0x03B, 0x0009F913,
+	0x03C, 0x00042000,
+	0x03A, 0x0000010C,
+	0x03B, 0x00097F10,
+	0x03C, 0x00012000,
+	0x03A, 0x000000D0,
+	0x03B, 0x00088027,
+	0x03C, 0x000CA000,
+	0x0EF, 0x00000000,
+	0x0EF, 0x00001100,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0004ADF3,
+	0x034, 0x00049DF0,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0004ADF3,
+	0x034, 0x00049DF0,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0004ADF5,
+	0x034, 0x00049DF2,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0004A0F3,
+	0x034, 0x000490B1,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0004A0F3,
+	0x034, 0x000490B1,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0004ADF5,
+	0x034, 0x00049DF2,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0004ADF3,
+	0x034, 0x00049DF0,
+	0xA0000000,	0x00000000,
+	0x034, 0x0004ADF7,
+	0x034, 0x00049DF3,
+	0xB0000000,	0x00000000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00048DED,
+	0x034, 0x00047DEA,
+	0x034, 0x00046DE7,
+	0x034, 0x00045CE9,
+	0x034, 0x00044CE6,
+	0x034, 0x000438C6,
+	0x034, 0x00042886,
+	0x034, 0x00041486,
+	0x034, 0x00040447,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00048DED,
+	0x034, 0x00047DEA,
+	0x034, 0x00046DE7,
+	0x034, 0x00045CE9,
+	0x034, 0x00044CE6,
+	0x034, 0x000438C6,
+	0x034, 0x00042886,
+	0x034, 0x00041486,
+	0x034, 0x00040447,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x000480AE,
+	0x034, 0x000470AB,
+	0x034, 0x0004608B,
+	0x034, 0x00045069,
+	0x034, 0x00044048,
+	0x034, 0x00043045,
+	0x034, 0x00042026,
+	0x034, 0x00041023,
+	0x034, 0x00040002,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x000480AE,
+	0x034, 0x000470AB,
+	0x034, 0x0004608B,
+	0x034, 0x00045069,
+	0x034, 0x00044048,
+	0x034, 0x00043045,
+	0x034, 0x00042026,
+	0x034, 0x00041023,
+	0x034, 0x00040002,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00048DED,
+	0x034, 0x00047DEA,
+	0x034, 0x00046DE7,
+	0x034, 0x00045CE9,
+	0x034, 0x00044CE6,
+	0x034, 0x000438C6,
+	0x034, 0x00042886,
+	0x034, 0x00041486,
+	0x034, 0x00040447,
+	0xA0000000,	0x00000000,
+	0x034, 0x00048DEF,
+	0x034, 0x00047DEC,
+	0x034, 0x00046DE9,
+	0x034, 0x00045CCB,
+	0x034, 0x0004488D,
+	0x034, 0x0004348D,
+	0x034, 0x0004248A,
+	0x034, 0x0004108D,
+	0x034, 0x0004008A,
+	0xB0000000,	0x00000000,
+	0x80000210,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0002ADF4,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0002A0F3,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0002A0F3,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0002ADF4,
+	0xA0000000,	0x00000000,
+	0x034, 0x0002ADF7,
+	0xB0000000,	0x00000000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00029DF4,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00029DF4,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00029DF1,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x000290F0,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x000290F0,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00029DF1,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00029DF4,
+	0xA0000000,	0x00000000,
+	0x034, 0x00029DF2,
+	0xB0000000,	0x00000000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00028DF1,
+	0x034, 0x00027DEE,
+	0x034, 0x00026DEB,
+	0x034, 0x00025CEC,
+	0x034, 0x00024CE9,
+	0x034, 0x000238CA,
+	0x034, 0x00022889,
+	0x034, 0x00021489,
+	0x034, 0x0002044A,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00028DF1,
+	0x034, 0x00027DEE,
+	0x034, 0x00026DEB,
+	0x034, 0x00025CEC,
+	0x034, 0x00024CE9,
+	0x034, 0x000238CA,
+	0x034, 0x00022889,
+	0x034, 0x00021489,
+	0x034, 0x0002044A,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x000280AF,
+	0x034, 0x000270AC,
+	0x034, 0x0002608B,
+	0x034, 0x00025069,
+	0x034, 0x00024048,
+	0x034, 0x00023045,
+	0x034, 0x00022026,
+	0x034, 0x00021023,
+	0x034, 0x00020002,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x000280AF,
+	0x034, 0x000270AC,
+	0x034, 0x0002608B,
+	0x034, 0x00025069,
+	0x034, 0x00024048,
+	0x034, 0x00023045,
+	0x034, 0x00022026,
+	0x034, 0x00021023,
+	0x034, 0x00020002,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00028DF1,
+	0x034, 0x00027DEE,
+	0x034, 0x00026DEB,
+	0x034, 0x00025CEC,
+	0x034, 0x00024CE9,
+	0x034, 0x000238CA,
+	0x034, 0x00022889,
+	0x034, 0x00021489,
+	0x034, 0x0002044A,
+	0xA0000000,	0x00000000,
+	0x034, 0x00028DEE,
+	0x034, 0x00027DEB,
+	0x034, 0x00026CCD,
+	0x034, 0x00025CCA,
+	0x034, 0x0002488C,
+	0x034, 0x0002384C,
+	0x034, 0x00022849,
+	0x034, 0x00021449,
+	0x034, 0x0002004D,
+	0xB0000000,	0x00000000,
+	0x8000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0000A0D7,
+	0x034, 0x000090D3,
+	0x034, 0x000080B1,
+	0x034, 0x000070AE,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0000A0D7,
+	0x034, 0x000090D3,
+	0x034, 0x000080B1,
+	0x034, 0x000070AE,
+	0xA0000000,	0x00000000,
+	0x034, 0x0000ADF7,
+	0x034, 0x00009DF4,
+	0x034, 0x00008DF1,
+	0x034, 0x00007DEE,
+	0xB0000000,	0x00000000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00006DEB,
+	0x034, 0x00005CEC,
+	0x034, 0x00004CE9,
+	0x034, 0x000038CA,
+	0x034, 0x00002889,
+	0x034, 0x00001489,
+	0x034, 0x0000044A,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00006DEB,
+	0x034, 0x00005CEC,
+	0x034, 0x00004CE9,
+	0x034, 0x000038CA,
+	0x034, 0x00002889,
+	0x034, 0x00001489,
+	0x034, 0x0000044A,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0000608D,
+	0x034, 0x0000506B,
+	0x034, 0x0000404A,
+	0x034, 0x00003047,
+	0x034, 0x00002044,
+	0x034, 0x00001025,
+	0x034, 0x00000004,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x0000608D,
+	0x034, 0x0000506B,
+	0x034, 0x0000404A,
+	0x034, 0x00003047,
+	0x034, 0x00002044,
+	0x034, 0x00001025,
+	0x034, 0x00000004,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x034, 0x00006DEB,
+	0x034, 0x00005CEC,
+	0x034, 0x00004CE9,
+	0x034, 0x000038CA,
+	0x034, 0x00002889,
+	0x034, 0x00001489,
+	0x034, 0x0000044A,
+	0xA0000000,	0x00000000,
+	0x034, 0x00006DCD,
+	0x034, 0x00005CCD,
+	0x034, 0x00004CCA,
+	0x034, 0x0000388C,
+	0x034, 0x00002888,
+	0x034, 0x00001488,
+	0x034, 0x00000486,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000040,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x035, 0x00000187,
+	0x035, 0x00008187,
+	0x035, 0x00010187,
+	0x035, 0x00020188,
+	0x035, 0x00028188,
+	0x035, 0x00030188,
+	0x035, 0x00040188,
+	0x035, 0x00048188,
+	0x035, 0x00050188,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x035, 0x00000187,
+	0x035, 0x00008187,
+	0x035, 0x00010187,
+	0x035, 0x00020188,
+	0x035, 0x00028188,
+	0x035, 0x00030188,
+	0x035, 0x00040188,
+	0x035, 0x00048188,
+	0x035, 0x00050188,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x035, 0x00000128,
+	0x035, 0x00008128,
+	0x035, 0x00010128,
+	0x035, 0x000201C8,
+	0x035, 0x000281C8,
+	0x035, 0x000301C8,
+	0x035, 0x000401C8,
+	0x035, 0x000481C8,
+	0x035, 0x000501C8,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x035, 0x00000145,
+	0x035, 0x00008145,
+	0x035, 0x00010145,
+	0x035, 0x00020196,
+	0x035, 0x00028196,
+	0x035, 0x00030196,
+	0x035, 0x000401C7,
+	0x035, 0x000481C7,
+	0x035, 0x000501C7,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x035, 0x00000128,
+	0x035, 0x00008128,
+	0x035, 0x00010128,
+	0x035, 0x000201C8,
+	0x035, 0x000281C8,
+	0x035, 0x000301C8,
+	0x035, 0x000401C8,
+	0x035, 0x000481C8,
+	0x035, 0x000501C8,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x035, 0x00000187,
+	0x035, 0x00008187,
+	0x035, 0x00010187,
+	0x035, 0x00020188,
+	0x035, 0x00028188,
+	0x035, 0x00030188,
+	0x035, 0x00040188,
+	0x035, 0x00048188,
+	0x035, 0x00050188,
+	0xA0000000,	0x00000000,
+	0x035, 0x00000145,
+	0x035, 0x00008145,
+	0x035, 0x00010145,
+	0x035, 0x00020196,
+	0x035, 0x00028196,
+	0x035, 0x00030196,
+	0x035, 0x000401C7,
+	0x035, 0x000481C7,
+	0x035, 0x000501C7,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000010,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x036, 0x00085733,
+	0x036, 0x0008D733,
+	0x036, 0x00095733,
+	0x036, 0x0009D733,
+	0x036, 0x000A64B4,
+	0x036, 0x000AE4B4,
+	0x036, 0x000B64B4,
+	0x036, 0x000BE4B4,
+	0x036, 0x000C64B4,
+	0x036, 0x000CE4B4,
+	0x036, 0x000D64B4,
+	0x036, 0x000DE4B4,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x036, 0x00085733,
+	0x036, 0x0008D733,
+	0x036, 0x00095733,
+	0x036, 0x0009D733,
+	0x036, 0x000A64B4,
+	0x036, 0x000AE4B4,
+	0x036, 0x000B64B4,
+	0x036, 0x000BE4B4,
+	0x036, 0x000C64B4,
+	0x036, 0x000CE4B4,
+	0x036, 0x000D64B4,
+	0x036, 0x000DE4B4,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x036, 0x000063B5,
+	0x036, 0x0000E3B5,
+	0x036, 0x000163B5,
+	0x036, 0x0001E3B5,
+	0x036, 0x000263B5,
+	0x036, 0x0002E3B5,
+	0x036, 0x000363B5,
+	0x036, 0x0003E3B5,
+	0x036, 0x000463B5,
+	0x036, 0x0004E3B5,
+	0x036, 0x000563B5,
+	0x036, 0x0005E3B5,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x036, 0x000056B3,
+	0x036, 0x0000D6B3,
+	0x036, 0x000156B3,
+	0x036, 0x0001D6B3,
+	0x036, 0x00026634,
+	0x036, 0x0002E634,
+	0x036, 0x00036634,
+	0x036, 0x0003E634,
+	0x036, 0x000467B4,
+	0x036, 0x0004E7B4,
+	0x036, 0x000567B4,
+	0x036, 0x0005E7B4,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x036, 0x000063B5,
+	0x036, 0x0000E3B5,
+	0x036, 0x000163B5,
+	0x036, 0x0001E3B5,
+	0x036, 0x000263B5,
+	0x036, 0x0002E3B5,
+	0x036, 0x000363B5,
+	0x036, 0x0003E3B5,
+	0x036, 0x000463B5,
+	0x036, 0x0004E3B5,
+	0x036, 0x000563B5,
+	0x036, 0x0005E3B5,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x036, 0x00085733,
+	0x036, 0x0008D733,
+	0x036, 0x00095733,
+	0x036, 0x0009D733,
+	0x036, 0x000A64B4,
+	0x036, 0x000AE4B4,
+	0x036, 0x000B64B4,
+	0x036, 0x000BE4B4,
+	0x036, 0x000C64B4,
+	0x036, 0x000CE4B4,
+	0x036, 0x000D64B4,
+	0x036, 0x000DE4B4,
+	0xA0000000,	0x00000000,
+	0x036, 0x000056B3,
+	0x036, 0x0000D6B3,
+	0x036, 0x000156B3,
+	0x036, 0x0001D6B3,
+	0x036, 0x00026634,
+	0x036, 0x0002E634,
+	0x036, 0x00036634,
+	0x036, 0x0003E634,
+	0x036, 0x000467B4,
+	0x036, 0x0004E7B4,
+	0x036, 0x000567B4,
+	0x036, 0x0005E7B4,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x0EF, 0x00000008,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x000001C8,
+	0x03C, 0x00000492,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x000001C8,
+	0x03C, 0x00000492,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x000001B6,
+	0x03C, 0x00000492,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x0000022A,
+	0x03C, 0x00000594,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x000001B6,
+	0x03C, 0x00000492,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x000001C8,
+	0x03C, 0x00000492,
+	0xA0000000,	0x00000000,
+	0x03C, 0x0000022A,
+	0x03C, 0x00000594,
+	0xB0000000,	0x00000000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x00000800,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x00000800,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x00000800,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x00000820,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x00000820,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x00000800,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x03C, 0x00000800,
+	0xA0000000,	0x00000000,
+	0x03C, 0x00000900,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x018, 0x0001712A,
+	0x0EF, 0x00000002,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x008, 0x0004E400,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x008, 0x0004E400,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x008, 0x00002000,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x008, 0x00002000,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x008, 0x00002000,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x008, 0x00002000,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x008, 0x0004E400,
+	0xA0000000,	0x00000000,
+	0x008, 0x00002000,
+	0xB0000000,	0x00000000,
+	0x0EF, 0x00000000,
+	0x0DF, 0x000000C0,
+	0x01F, 0x00000064,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x058, 0x000A7284,
+	0x059, 0x000600EC,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x058, 0x000A7284,
+	0x059, 0x000600EC,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x058, 0x00081184,
+	0x059, 0x0006016C,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x058, 0x00081184,
+	0x059, 0x0006016C,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x058, 0x00081184,
+	0x059, 0x0006016C,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x058, 0x000A7284,
+	0x059, 0x000600EC,
+	0xA0000000,	0x00000000,
+	0x058, 0x00081184,
+	0x059, 0x0006016C,
+	0xB0000000,	0x00000000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x061, 0x000E8D73,
+	0x062, 0x00093FC5,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x061, 0x000E8D73,
+	0x062, 0x00093FC5,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x061, 0x000EFD83,
+	0x062, 0x00093FCC,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x061, 0x000EAD53,
+	0x062, 0x00093BC4,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x061, 0x000EFD83,
+	0x062, 0x00093FCC,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x061, 0x000E8D73,
+	0x062, 0x00093FC5,
+	0xA0000000,	0x00000000,
+	0x061, 0x000EAD53,
+	0x062, 0x00093BC4,
+	0xB0000000,	0x00000000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x063, 0x000110E9,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x063, 0x000110E9,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x063, 0x000110EB,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x063, 0x000110E9,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x063, 0x000110E9,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x063, 0x000110EB,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x063, 0x000110E9,
+	0xA0000000,	0x00000000,
+	0x063, 0x000714E9,
+	0xB0000000,	0x00000000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x064, 0x0001C27C,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x064, 0x0001C27C,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x064, 0x0001C27C,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x064, 0x0001C67C,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x064, 0x0001C27C,
+	0x90000410,	0x00000000,	0x40000000,	0x00000000,
+	0x064, 0x0001C27C,
+	0xA0000000,	0x00000000,
+	0x064, 0x0001C67C,
+	0xB0000000,	0x00000000,
+	0x80000111,	0x00000000,	0x40000000,	0x00000000,
+	0x065, 0x00091016,
+	0x90000110,	0x00000000,	0x40000000,	0x00000000,
+	0x065, 0x00091016,
+	0x90000210,	0x00000000,	0x40000000,	0x00000000,
+	0x065, 0x00093016,
+	0x9000020c,	0x00000000,	0x40000000,	0x00000000,
+	0x065, 0x00093015,
+	0x9000040c,	0x00000000,	0x40000000,	0x00000000,
+	0x065, 0x00093015,
+	0x90000200,	0x00000000,	0x40000000,	0x00000000,
+	0x065, 0x00093016,
+	0xA0000000,	0x00000000,
+	0x065, 0x00091016,
+	0xB0000000,	0x00000000,
+	0x018, 0x00000006,
+	0x0EF, 0x00002000,
+	0x03B, 0x0003824B,
+	0x03B, 0x0003024B,
+	0x03B, 0x0002844B,
+	0x03B, 0x00020F4B,
+	0x03B, 0x00018F4B,
+	0x03B, 0x000104B2,
+	0x03B, 0x00008049,
+	0x03B, 0x00000148,
+	0x03B, 0x0007824B,
+	0x03B, 0x0007024B,
+	0x03B, 0x0006824B,
+	0x03B, 0x00060F4B,
+	0x03B, 0x00058F4B,
+	0x03B, 0x000504B2,
+	0x03B, 0x00048049,
+	0x03B, 0x00040148,
+	0x0EF, 0x00000000,
+	0x0EF, 0x00000100,
+	0x034, 0x0000ADF3,
+	0x034, 0x00009DF0,
+	0x034, 0x00008D70,
+	0x034, 0x00007D6D,
+	0x034, 0x00006CEE,
+	0x034, 0x00005CCC,
+	0x034, 0x000044EC,
+	0x034, 0x000034AC,
+	0x034, 0x0000246D,
+	0x034, 0x0000106F,
+	0x034, 0x0000006C,
+	0x0EF, 0x00000000,
+	0x0ED, 0x00000010,
+	0x044, 0x0000ADF2,
+	0x044, 0x00009DEF,
+	0x044, 0x00008DEC,
+	0x044, 0x00007DE9,
+	0x044, 0x00006CEC,
+	0x044, 0x00005CE9,
+	0x044, 0x000044EC,
+	0x044, 0x000034E9,
+	0x044, 0x0000246C,
+	0x044, 0x00001469,
+	0x044, 0x0000006C,
+	0x0ED, 0x00000000,
+	0x0ED, 0x00000001,
+	0x040, 0x00038DA7,
+	0x040, 0x000300C2,
+	0x040, 0x000288E2,
+	0x040, 0x000200B8,
+	0x040, 0x000188A5,
+	0x040, 0x00010FBC,
+	0x040, 0x00008F71,
+	0x040, 0x00000240,
+	0x0ED, 0x00000000,
+	0x0EF, 0x000020A2,
+	0x0DF, 0x00000080,
+	0x035, 0x00000120,
+	0x035, 0x00008120,
+	0x035, 0x00010120,
+	0x036, 0x00000085,
+	0x036, 0x00008085,
+	0x036, 0x00010085,
+	0x036, 0x00018085,
+	0x0EF, 0x00000000,
+	0x051, 0x00000C31,
+	0x052, 0x00000622,
+	0x053, 0x000FC70B,
+	0x054, 0x0000017E,
+	0x056, 0x00051DF3,
+	0x051, 0x00000C01,
+	0x052, 0x000006D6,
+	0x053, 0x000FC649,
+	0x070, 0x00049661,
+	0x071, 0x0007843E,
+	0x072, 0x00000382,
+	0x074, 0x00051400,
+	0x035, 0x00000160,
+	0x035, 0x00008160,
+	0x035, 0x00010160,
+	0x036, 0x00000124,
+	0x036, 0x00008124,
+	0x036, 0x00010124,
+	0x036, 0x00018124,
+	0x0ED, 0x0000000C,
+	0x045, 0x00000140,
+	0x045, 0x00008140,
+	0x045, 0x00010140,
+	0x046, 0x00000124,
+	0x046, 0x00008124,
+	0x046, 0x00010124,
+	0x046, 0x00018124,
+	0x0DF, 0x00000088,
+	0x0B3, 0x000F0E18,
+	0x0B4, 0x0001214C,
+	0x0B7, 0x0003000C,
+	0x01C, 0x000539D2,
+	0x0C4, 0x000AFE00,
+	0x018, 0x0001F12A,
+	0xFFE, 0x00000000,
+	0xFFE, 0x00000000,
+	0x018, 0x0001712A,
+};
+
+RTW_DECL_TABLE_RF_RADIO(rtw8821a_rf_a, A);
+
+static const struct rtw_txpwr_lmt_cfg_pair rtw8821a_txpwr_lmt[] = {
+	{ 0, 0, 0, 0, 1, 32, },
+	{ 2, 0, 0, 0, 1, 28, },
+	{ 1, 0, 0, 0, 1, 32, },
+	{ 0, 0, 0, 0, 2, 32, },
+	{ 2, 0, 0, 0, 2, 28, },
+	{ 1, 0, 0, 0, 2, 32, },
+	{ 0, 0, 0, 0, 3, 36, },
+	{ 2, 0, 0, 0, 3, 28, },
+	{ 1, 0, 0, 0, 3, 32, },
+	{ 0, 0, 0, 0, 4, 36, },
+	{ 2, 0, 0, 0, 4, 28, },
+	{ 1, 0, 0, 0, 4, 32, },
+	{ 0, 0, 0, 0, 5, 36, },
+	{ 2, 0, 0, 0, 5, 28, },
+	{ 1, 0, 0, 0, 5, 32, },
+	{ 0, 0, 0, 0, 6, 36, },
+	{ 2, 0, 0, 0, 6, 28, },
+	{ 1, 0, 0, 0, 6, 32, },
+	{ 0, 0, 0, 0, 7, 36, },
+	{ 2, 0, 0, 0, 7, 28, },
+	{ 1, 0, 0, 0, 7, 32, },
+	{ 0, 0, 0, 0, 8, 36, },
+	{ 2, 0, 0, 0, 8, 28, },
+	{ 1, 0, 0, 0, 8, 32, },
+	{ 0, 0, 0, 0, 9, 32, },
+	{ 2, 0, 0, 0, 9, 28, },
+	{ 1, 0, 0, 0, 9, 32, },
+	{ 0, 0, 0, 0, 10, 32, },
+	{ 2, 0, 0, 0, 10, 28, },
+	{ 1, 0, 0, 0, 10, 32, },
+	{ 0, 0, 0, 0, 11, 32, },
+	{ 2, 0, 0, 0, 11, 28, },
+	{ 1, 0, 0, 0, 11, 32, },
+	{ 0, 0, 0, 0, 12, 28, },
+	{ 2, 0, 0, 0, 12, 28, },
+	{ 1, 0, 0, 0, 12, 32, },
+	{ 0, 0, 0, 0, 13, 26, },
+	{ 2, 0, 0, 0, 13, 28, },
+	{ 1, 0, 0, 0, 13, 32, },
+	{ 0, 0, 0, 0, 14, 63, },
+	{ 2, 0, 0, 0, 14, 63, },
+	{ 1, 0, 0, 0, 14, 32, },
+	{ 0, 0, 0, 1, 1, 30, },
+	{ 2, 0, 0, 1, 1, 30, },
+	{ 1, 0, 0, 1, 1, 32, },
+	{ 0, 0, 0, 1, 2, 30, },
+	{ 2, 0, 0, 1, 2, 32, },
+	{ 1, 0, 0, 1, 2, 32, },
+	{ 0, 0, 0, 1, 3, 32, },
+	{ 2, 0, 0, 1, 3, 32, },
+	{ 1, 0, 0, 1, 3, 32, },
+	{ 0, 0, 0, 1, 4, 32, },
+	{ 2, 0, 0, 1, 4, 32, },
+	{ 1, 0, 0, 1, 4, 32, },
+	{ 0, 0, 0, 1, 5, 32, },
+	{ 2, 0, 0, 1, 5, 32, },
+	{ 1, 0, 0, 1, 5, 32, },
+	{ 0, 0, 0, 1, 6, 32, },
+	{ 2, 0, 0, 1, 6, 32, },
+	{ 1, 0, 0, 1, 6, 32, },
+	{ 0, 0, 0, 1, 7, 32, },
+	{ 2, 0, 0, 1, 7, 32, },
+	{ 1, 0, 0, 1, 7, 32, },
+	{ 0, 0, 0, 1, 8, 32, },
+	{ 2, 0, 0, 1, 8, 32, },
+	{ 1, 0, 0, 1, 8, 32, },
+	{ 0, 0, 0, 1, 9, 30, },
+	{ 2, 0, 0, 1, 9, 32, },
+	{ 1, 0, 0, 1, 9, 32, },
+	{ 0, 0, 0, 1, 10, 30, },
+	{ 2, 0, 0, 1, 10, 32, },
+	{ 1, 0, 0, 1, 10, 32, },
+	{ 0, 0, 0, 1, 11, 30, },
+	{ 2, 0, 0, 1, 11, 32, },
+	{ 1, 0, 0, 1, 11, 32, },
+	{ 0, 0, 0, 1, 12, 26, },
+	{ 2, 0, 0, 1, 12, 32, },
+	{ 1, 0, 0, 1, 12, 32, },
+	{ 0, 0, 0, 1, 13, 24, },
+	{ 2, 0, 0, 1, 13, 30, },
+	{ 1, 0, 0, 1, 13, 32, },
+	{ 0, 0, 0, 1, 14, 63, },
+	{ 2, 0, 0, 1, 14, 63, },
+	{ 1, 0, 0, 1, 14, 63, },
+	{ 0, 0, 0, 2, 1, 26, },
+	{ 2, 0, 0, 2, 1, 26, },
+	{ 1, 0, 0, 2, 1, 32, },
+	{ 0, 0, 0, 2, 2, 26, },
+	{ 2, 0, 0, 2, 2, 32, },
+	{ 1, 0, 0, 2, 2, 32, },
+	{ 0, 0, 0, 2, 3, 32, },
+	{ 2, 0, 0, 2, 3, 32, },
+	{ 1, 0, 0, 2, 3, 32, },
+	{ 0, 0, 0, 2, 4, 32, },
+	{ 2, 0, 0, 2, 4, 32, },
+	{ 1, 0, 0, 2, 4, 32, },
+	{ 0, 0, 0, 2, 5, 32, },
+	{ 2, 0, 0, 2, 5, 32, },
+	{ 1, 0, 0, 2, 5, 32, },
+	{ 0, 0, 0, 2, 6, 32, },
+	{ 2, 0, 0, 2, 6, 32, },
+	{ 1, 0, 0, 2, 6, 32, },
+	{ 0, 0, 0, 2, 7, 32, },
+	{ 2, 0, 0, 2, 7, 32, },
+	{ 1, 0, 0, 2, 7, 32, },
+	{ 0, 0, 0, 2, 8, 32, },
+	{ 2, 0, 0, 2, 8, 32, },
+	{ 1, 0, 0, 2, 8, 32, },
+	{ 0, 0, 0, 2, 9, 26, },
+	{ 2, 0, 0, 2, 9, 32, },
+	{ 1, 0, 0, 2, 9, 32, },
+	{ 0, 0, 0, 2, 10, 26, },
+	{ 2, 0, 0, 2, 10, 32, },
+	{ 1, 0, 0, 2, 10, 32, },
+	{ 0, 0, 0, 2, 11, 26, },
+	{ 2, 0, 0, 2, 11, 32, },
+	{ 1, 0, 0, 2, 11, 32, },
+	{ 0, 0, 0, 2, 12, 26, },
+	{ 2, 0, 0, 2, 12, 32, },
+	{ 1, 0, 0, 2, 12, 32, },
+	{ 0, 0, 0, 2, 13, 24, },
+	{ 2, 0, 0, 2, 13, 26, },
+	{ 1, 0, 0, 2, 13, 32, },
+	{ 0, 0, 0, 2, 14, 63, },
+	{ 2, 0, 0, 2, 14, 63, },
+	{ 1, 0, 0, 2, 14, 63, },
+	{ 0, 0, 0, 3, 1, 30, },
+	{ 2, 0, 0, 3, 1, 32, },
+	{ 1, 0, 0, 3, 1, 32, },
+	{ 0, 0, 0, 3, 2, 32, },
+	{ 2, 0, 0, 3, 2, 32, },
+	{ 1, 0, 0, 3, 2, 32, },
+	{ 0, 0, 0, 3, 3, 32, },
+	{ 2, 0, 0, 3, 3, 32, },
+	{ 1, 0, 0, 3, 3, 32, },
+	{ 0, 0, 0, 3, 4, 32, },
+	{ 2, 0, 0, 3, 4, 32, },
+	{ 1, 0, 0, 3, 4, 32, },
+	{ 0, 0, 0, 3, 5, 32, },
+	{ 2, 0, 0, 3, 5, 32, },
+	{ 1, 0, 0, 3, 5, 32, },
+	{ 0, 0, 0, 3, 6, 32, },
+	{ 2, 0, 0, 3, 6, 32, },
+	{ 1, 0, 0, 3, 6, 32, },
+	{ 0, 0, 0, 3, 7, 32, },
+	{ 2, 0, 0, 3, 7, 32, },
+	{ 1, 0, 0, 3, 7, 32, },
+	{ 0, 0, 0, 3, 8, 32, },
+	{ 2, 0, 0, 3, 8, 32, },
+	{ 1, 0, 0, 3, 8, 32, },
+	{ 0, 0, 0, 3, 9, 32, },
+	{ 2, 0, 0, 3, 9, 32, },
+	{ 1, 0, 0, 3, 9, 32, },
+	{ 0, 0, 0, 3, 10, 32, },
+	{ 2, 0, 0, 3, 10, 32, },
+	{ 1, 0, 0, 3, 10, 32, },
+	{ 0, 0, 0, 3, 11, 30, },
+	{ 2, 0, 0, 3, 11, 32, },
+	{ 1, 0, 0, 3, 11, 32, },
+	{ 0, 0, 0, 3, 12, 63, },
+	{ 2, 0, 0, 3, 12, 32, },
+	{ 1, 0, 0, 3, 12, 32, },
+	{ 0, 0, 0, 3, 13, 63, },
+	{ 2, 0, 0, 3, 13, 32, },
+	{ 1, 0, 0, 3, 13, 32, },
+	{ 0, 0, 0, 3, 14, 63, },
+	{ 2, 0, 0, 3, 14, 63, },
+	{ 1, 0, 0, 3, 14, 63, },
+	{ 0, 0, 1, 2, 1, 63, },
+	{ 2, 0, 1, 2, 1, 63, },
+	{ 1, 0, 1, 2, 1, 63, },
+	{ 0, 0, 1, 2, 2, 63, },
+	{ 2, 0, 1, 2, 2, 63, },
+	{ 1, 0, 1, 2, 2, 63, },
+	{ 0, 0, 1, 2, 3, 26, },
+	{ 2, 0, 1, 2, 3, 26, },
+	{ 1, 0, 1, 2, 3, 32, },
+	{ 0, 0, 1, 2, 4, 26, },
+	{ 2, 0, 1, 2, 4, 32, },
+	{ 1, 0, 1, 2, 4, 32, },
+	{ 0, 0, 1, 2, 5, 26, },
+	{ 2, 0, 1, 2, 5, 32, },
+	{ 1, 0, 1, 2, 5, 32, },
+	{ 0, 0, 1, 2, 6, 32, },
+	{ 2, 0, 1, 2, 6, 32, },
+	{ 1, 0, 1, 2, 6, 32, },
+	{ 0, 0, 1, 2, 7, 32, },
+	{ 2, 0, 1, 2, 7, 32, },
+	{ 1, 0, 1, 2, 7, 32, },
+	{ 0, 0, 1, 2, 8, 32, },
+	{ 2, 0, 1, 2, 8, 32, },
+	{ 1, 0, 1, 2, 8, 32, },
+	{ 0, 0, 1, 2, 9, 26, },
+	{ 2, 0, 1, 2, 9, 32, },
+	{ 1, 0, 1, 2, 9, 32, },
+	{ 0, 0, 1, 2, 10, 24, },
+	{ 2, 0, 1, 2, 10, 32, },
+	{ 1, 0, 1, 2, 10, 32, },
+	{ 0, 0, 1, 2, 11, 22, },
+	{ 2, 0, 1, 2, 11, 26, },
+	{ 1, 0, 1, 2, 11, 32, },
+	{ 0, 0, 1, 2, 12, 63, },
+	{ 2, 0, 1, 2, 12, 63, },
+	{ 1, 0, 1, 2, 12, 63, },
+	{ 0, 0, 1, 2, 13, 63, },
+	{ 2, 0, 1, 2, 13, 63, },
+	{ 1, 0, 1, 2, 13, 63, },
+	{ 0, 0, 1, 2, 14, 63, },
+	{ 2, 0, 1, 2, 14, 63, },
+	{ 1, 0, 1, 2, 14, 63, },
+	{ 0, 0, 1, 3, 1, 63, },
+	{ 2, 0, 1, 3, 1, 63, },
+	{ 1, 0, 1, 3, 1, 63, },
+	{ 0, 0, 1, 3, 2, 63, },
+	{ 2, 0, 1, 3, 2, 63, },
+	{ 1, 0, 1, 3, 2, 63, },
+	{ 0, 0, 1, 3, 3, 30, },
+	{ 2, 0, 1, 3, 3, 30, },
+	{ 1, 0, 1, 3, 3, 30, },
+	{ 0, 0, 1, 3, 4, 32, },
+	{ 2, 0, 1, 3, 4, 30, },
+	{ 1, 0, 1, 3, 4, 30, },
+	{ 0, 0, 1, 3, 5, 32, },
+	{ 2, 0, 1, 3, 5, 30, },
+	{ 1, 0, 1, 3, 5, 30, },
+	{ 0, 0, 1, 3, 6, 32, },
+	{ 2, 0, 1, 3, 6, 30, },
+	{ 1, 0, 1, 3, 6, 30, },
+	{ 0, 0, 1, 3, 7, 32, },
+	{ 2, 0, 1, 3, 7, 30, },
+	{ 1, 0, 1, 3, 7, 30, },
+	{ 0, 0, 1, 3, 8, 32, },
+	{ 2, 0, 1, 3, 8, 30, },
+	{ 1, 0, 1, 3, 8, 30, },
+	{ 0, 0, 1, 3, 9, 32, },
+	{ 2, 0, 1, 3, 9, 30, },
+	{ 1, 0, 1, 3, 9, 30, },
+	{ 0, 0, 1, 3, 10, 32, },
+	{ 2, 0, 1, 3, 10, 30, },
+	{ 1, 0, 1, 3, 10, 30, },
+	{ 0, 0, 1, 3, 11, 30, },
+	{ 2, 0, 1, 3, 11, 30, },
+	{ 1, 0, 1, 3, 11, 30, },
+	{ 0, 0, 1, 3, 12, 63, },
+	{ 2, 0, 1, 3, 12, 32, },
+	{ 1, 0, 1, 3, 12, 32, },
+	{ 0, 0, 1, 3, 13, 63, },
+	{ 2, 0, 1, 3, 13, 32, },
+	{ 1, 0, 1, 3, 13, 32, },
+	{ 0, 0, 1, 3, 14, 63, },
+	{ 2, 0, 1, 3, 14, 63, },
+	{ 1, 0, 1, 3, 14, 63, },
+	{ 0, 1, 0, 1, 36, 32, },
+	{ 2, 1, 0, 1, 36, 30, },
+	{ 1, 1, 0, 1, 36, 30, },
+	{ 0, 1, 0, 1, 40, 32, },
+	{ 2, 1, 0, 1, 40, 30, },
+	{ 1, 1, 0, 1, 40, 30, },
+	{ 0, 1, 0, 1, 44, 32, },
+	{ 2, 1, 0, 1, 44, 30, },
+	{ 1, 1, 0, 1, 44, 30, },
+	{ 0, 1, 0, 1, 48, 32, },
+	{ 2, 1, 0, 1, 48, 30, },
+	{ 1, 1, 0, 1, 48, 30, },
+	{ 0, 1, 0, 1, 52, 32, },
+	{ 2, 1, 0, 1, 52, 30, },
+	{ 1, 1, 0, 1, 52, 30, },
+	{ 0, 1, 0, 1, 56, 32, },
+	{ 2, 1, 0, 1, 56, 30, },
+	{ 1, 1, 0, 1, 56, 30, },
+	{ 0, 1, 0, 1, 60, 32, },
+	{ 2, 1, 0, 1, 60, 30, },
+	{ 1, 1, 0, 1, 60, 30, },
+	{ 0, 1, 0, 1, 64, 32, },
+	{ 2, 1, 0, 1, 64, 30, },
+	{ 1, 1, 0, 1, 64, 30, },
+	{ 0, 1, 0, 1, 100, 32, },
+	{ 2, 1, 0, 1, 100, 30, },
+	{ 1, 1, 0, 1, 100, 30, },
+	{ 0, 1, 0, 1, 104, 32, },
+	{ 2, 1, 0, 1, 104, 30, },
+	{ 1, 1, 0, 1, 104, 30, },
+	{ 0, 1, 0, 1, 108, 32, },
+	{ 2, 1, 0, 1, 108, 30, },
+	{ 1, 1, 0, 1, 108, 30, },
+	{ 0, 1, 0, 1, 112, 32, },
+	{ 2, 1, 0, 1, 112, 30, },
+	{ 1, 1, 0, 1, 112, 30, },
+	{ 0, 1, 0, 1, 116, 32, },
+	{ 2, 1, 0, 1, 116, 30, },
+	{ 1, 1, 0, 1, 116, 30, },
+	{ 0, 1, 0, 1, 120, 32, },
+	{ 2, 1, 0, 1, 120, 30, },
+	{ 1, 1, 0, 1, 120, 30, },
+	{ 0, 1, 0, 1, 124, 32, },
+	{ 2, 1, 0, 1, 124, 30, },
+	{ 1, 1, 0, 1, 124, 30, },
+	{ 0, 1, 0, 1, 128, 32, },
+	{ 2, 1, 0, 1, 128, 30, },
+	{ 1, 1, 0, 1, 128, 30, },
+	{ 0, 1, 0, 1, 132, 32, },
+	{ 2, 1, 0, 1, 132, 30, },
+	{ 1, 1, 0, 1, 132, 30, },
+	{ 0, 1, 0, 1, 136, 32, },
+	{ 2, 1, 0, 1, 136, 30, },
+	{ 1, 1, 0, 1, 136, 30, },
+	{ 0, 1, 0, 1, 140, 32, },
+	{ 2, 1, 0, 1, 140, 30, },
+	{ 1, 1, 0, 1, 140, 30, },
+	{ 0, 1, 0, 1, 149, 32, },
+	{ 2, 1, 0, 1, 149, 30, },
+	{ 1, 1, 0, 1, 149, 63, },
+	{ 0, 1, 0, 1, 153, 32, },
+	{ 2, 1, 0, 1, 153, 30, },
+	{ 1, 1, 0, 1, 153, 63, },
+	{ 0, 1, 0, 1, 157, 32, },
+	{ 2, 1, 0, 1, 157, 30, },
+	{ 1, 1, 0, 1, 157, 63, },
+	{ 0, 1, 0, 1, 161, 32, },
+	{ 2, 1, 0, 1, 161, 30, },
+	{ 1, 1, 0, 1, 161, 63, },
+	{ 0, 1, 0, 1, 165, 32, },
+	{ 2, 1, 0, 1, 165, 30, },
+	{ 1, 1, 0, 1, 165, 63, },
+	{ 0, 1, 0, 2, 36, 32, },
+	{ 2, 1, 0, 2, 36, 30, },
+	{ 1, 1, 0, 2, 36, 30, },
+	{ 0, 1, 0, 2, 40, 32, },
+	{ 2, 1, 0, 2, 40, 30, },
+	{ 1, 1, 0, 2, 40, 30, },
+	{ 0, 1, 0, 2, 44, 32, },
+	{ 2, 1, 0, 2, 44, 30, },
+	{ 1, 1, 0, 2, 44, 30, },
+	{ 0, 1, 0, 2, 48, 32, },
+	{ 2, 1, 0, 2, 48, 30, },
+	{ 1, 1, 0, 2, 48, 30, },
+	{ 0, 1, 0, 2, 52, 32, },
+	{ 2, 1, 0, 2, 52, 30, },
+	{ 1, 1, 0, 2, 52, 30, },
+	{ 0, 1, 0, 2, 56, 32, },
+	{ 2, 1, 0, 2, 56, 30, },
+	{ 1, 1, 0, 2, 56, 30, },
+	{ 0, 1, 0, 2, 60, 32, },
+	{ 2, 1, 0, 2, 60, 30, },
+	{ 1, 1, 0, 2, 60, 30, },
+	{ 0, 1, 0, 2, 64, 32, },
+	{ 2, 1, 0, 2, 64, 30, },
+	{ 1, 1, 0, 2, 64, 30, },
+	{ 0, 1, 0, 2, 100, 32, },
+	{ 2, 1, 0, 2, 100, 30, },
+	{ 1, 1, 0, 2, 100, 30, },
+	{ 0, 1, 0, 2, 104, 32, },
+	{ 2, 1, 0, 2, 104, 30, },
+	{ 1, 1, 0, 2, 104, 30, },
+	{ 0, 1, 0, 2, 108, 32, },
+	{ 2, 1, 0, 2, 108, 30, },
+	{ 1, 1, 0, 2, 108, 30, },
+	{ 0, 1, 0, 2, 112, 32, },
+	{ 2, 1, 0, 2, 112, 30, },
+	{ 1, 1, 0, 2, 112, 30, },
+	{ 0, 1, 0, 2, 116, 32, },
+	{ 2, 1, 0, 2, 116, 30, },
+	{ 1, 1, 0, 2, 116, 30, },
+	{ 0, 1, 0, 2, 120, 32, },
+	{ 2, 1, 0, 2, 120, 30, },
+	{ 1, 1, 0, 2, 120, 30, },
+	{ 0, 1, 0, 2, 124, 32, },
+	{ 2, 1, 0, 2, 124, 30, },
+	{ 1, 1, 0, 2, 124, 30, },
+	{ 0, 1, 0, 2, 128, 32, },
+	{ 2, 1, 0, 2, 128, 30, },
+	{ 1, 1, 0, 2, 128, 30, },
+	{ 0, 1, 0, 2, 132, 32, },
+	{ 2, 1, 0, 2, 132, 30, },
+	{ 1, 1, 0, 2, 132, 30, },
+	{ 0, 1, 0, 2, 136, 32, },
+	{ 2, 1, 0, 2, 136, 30, },
+	{ 1, 1, 0, 2, 136, 30, },
+	{ 0, 1, 0, 2, 140, 32, },
+	{ 2, 1, 0, 2, 140, 30, },
+	{ 1, 1, 0, 2, 140, 30, },
+	{ 0, 1, 0, 2, 149, 32, },
+	{ 2, 1, 0, 2, 149, 30, },
+	{ 1, 1, 0, 2, 149, 63, },
+	{ 0, 1, 0, 2, 153, 32, },
+	{ 2, 1, 0, 2, 153, 30, },
+	{ 1, 1, 0, 2, 153, 63, },
+	{ 0, 1, 0, 2, 157, 32, },
+	{ 2, 1, 0, 2, 157, 30, },
+	{ 1, 1, 0, 2, 157, 63, },
+	{ 0, 1, 0, 2, 161, 32, },
+	{ 2, 1, 0, 2, 161, 30, },
+	{ 1, 1, 0, 2, 161, 63, },
+	{ 0, 1, 0, 2, 165, 32, },
+	{ 2, 1, 0, 2, 165, 30, },
+	{ 1, 1, 0, 2, 165, 63, },
+	{ 0, 1, 0, 3, 36, 28, },
+	{ 2, 1, 0, 3, 36, 30, },
+	{ 1, 1, 0, 3, 36, 30, },
+	{ 0, 1, 0, 3, 40, 28, },
+	{ 2, 1, 0, 3, 40, 30, },
+	{ 1, 1, 0, 3, 40, 30, },
+	{ 0, 1, 0, 3, 44, 28, },
+	{ 2, 1, 0, 3, 44, 30, },
+	{ 1, 1, 0, 3, 44, 30, },
+	{ 0, 1, 0, 3, 48, 28, },
+	{ 2, 1, 0, 3, 48, 30, },
+	{ 1, 1, 0, 3, 48, 30, },
+	{ 0, 1, 0, 3, 52, 34, },
+	{ 2, 1, 0, 3, 52, 30, },
+	{ 1, 1, 0, 3, 52, 30, },
+	{ 0, 1, 0, 3, 56, 32, },
+	{ 2, 1, 0, 3, 56, 30, },
+	{ 1, 1, 0, 3, 56, 30, },
+	{ 0, 1, 0, 3, 60, 30, },
+	{ 2, 1, 0, 3, 60, 30, },
+	{ 1, 1, 0, 3, 60, 30, },
+	{ 0, 1, 0, 3, 64, 26, },
+	{ 2, 1, 0, 3, 64, 30, },
+	{ 1, 1, 0, 3, 64, 30, },
+	{ 0, 1, 0, 3, 100, 28, },
+	{ 2, 1, 0, 3, 100, 30, },
+	{ 1, 1, 0, 3, 100, 30, },
+	{ 0, 1, 0, 3, 104, 28, },
+	{ 2, 1, 0, 3, 104, 30, },
+	{ 1, 1, 0, 3, 104, 30, },
+	{ 0, 1, 0, 3, 108, 30, },
+	{ 2, 1, 0, 3, 108, 30, },
+	{ 1, 1, 0, 3, 108, 30, },
+	{ 0, 1, 0, 3, 112, 32, },
+	{ 2, 1, 0, 3, 112, 30, },
+	{ 1, 1, 0, 3, 112, 30, },
+	{ 0, 1, 0, 3, 116, 32, },
+	{ 2, 1, 0, 3, 116, 30, },
+	{ 1, 1, 0, 3, 116, 30, },
+	{ 0, 1, 0, 3, 120, 34, },
+	{ 2, 1, 0, 3, 120, 30, },
+	{ 1, 1, 0, 3, 120, 30, },
+	{ 0, 1, 0, 3, 124, 32, },
+	{ 2, 1, 0, 3, 124, 30, },
+	{ 1, 1, 0, 3, 124, 30, },
+	{ 0, 1, 0, 3, 128, 30, },
+	{ 2, 1, 0, 3, 128, 30, },
+	{ 1, 1, 0, 3, 128, 30, },
+	{ 0, 1, 0, 3, 132, 28, },
+	{ 2, 1, 0, 3, 132, 30, },
+	{ 1, 1, 0, 3, 132, 30, },
+	{ 0, 1, 0, 3, 136, 28, },
+	{ 2, 1, 0, 3, 136, 30, },
+	{ 1, 1, 0, 3, 136, 30, },
+	{ 0, 1, 0, 3, 140, 26, },
+	{ 2, 1, 0, 3, 140, 30, },
+	{ 1, 1, 0, 3, 140, 30, },
+	{ 0, 1, 0, 3, 149, 34, },
+	{ 2, 1, 0, 3, 149, 30, },
+	{ 1, 1, 0, 3, 149, 63, },
+	{ 0, 1, 0, 3, 153, 34, },
+	{ 2, 1, 0, 3, 153, 30, },
+	{ 1, 1, 0, 3, 153, 63, },
+	{ 0, 1, 0, 3, 157, 34, },
+	{ 2, 1, 0, 3, 157, 30, },
+	{ 1, 1, 0, 3, 157, 63, },
+	{ 0, 1, 0, 3, 161, 34, },
+	{ 2, 1, 0, 3, 161, 30, },
+	{ 1, 1, 0, 3, 161, 63, },
+	{ 0, 1, 0, 3, 165, 34, },
+	{ 2, 1, 0, 3, 165, 30, },
+	{ 1, 1, 0, 3, 165, 63, },
+	{ 0, 1, 1, 2, 38, 26, },
+	{ 2, 1, 1, 2, 38, 30, },
+	{ 1, 1, 1, 2, 38, 30, },
+	{ 0, 1, 1, 2, 46, 32, },
+	{ 2, 1, 1, 2, 46, 30, },
+	{ 1, 1, 1, 2, 46, 30, },
+	{ 0, 1, 1, 2, 54, 32, },
+	{ 2, 1, 1, 2, 54, 30, },
+	{ 1, 1, 1, 2, 54, 30, },
+	{ 0, 1, 1, 2, 62, 24, },
+	{ 2, 1, 1, 2, 62, 30, },
+	{ 1, 1, 1, 2, 62, 30, },
+	{ 0, 1, 1, 2, 102, 24, },
+	{ 2, 1, 1, 2, 102, 30, },
+	{ 1, 1, 1, 2, 102, 30, },
+	{ 0, 1, 1, 2, 110, 32, },
+	{ 2, 1, 1, 2, 110, 30, },
+	{ 1, 1, 1, 2, 110, 30, },
+	{ 0, 1, 1, 2, 118, 32, },
+	{ 2, 1, 1, 2, 118, 30, },
+	{ 1, 1, 1, 2, 118, 30, },
+	{ 0, 1, 1, 2, 126, 32, },
+	{ 2, 1, 1, 2, 126, 30, },
+	{ 1, 1, 1, 2, 126, 30, },
+	{ 0, 1, 1, 2, 134, 32, },
+	{ 2, 1, 1, 2, 134, 30, },
+	{ 1, 1, 1, 2, 134, 30, },
+	{ 0, 1, 1, 2, 151, 30, },
+	{ 2, 1, 1, 2, 151, 30, },
+	{ 1, 1, 1, 2, 151, 63, },
+	{ 0, 1, 1, 2, 159, 32, },
+	{ 2, 1, 1, 2, 159, 30, },
+	{ 1, 1, 1, 2, 159, 63, },
+	{ 0, 1, 1, 3, 38, 28, },
+	{ 2, 1, 1, 3, 38, 30, },
+	{ 1, 1, 1, 3, 38, 30, },
+	{ 0, 1, 1, 3, 46, 28, },
+	{ 2, 1, 1, 3, 46, 30, },
+	{ 1, 1, 1, 3, 46, 30, },
+	{ 0, 1, 1, 3, 54, 30, },
+	{ 2, 1, 1, 3, 54, 30, },
+	{ 1, 1, 1, 3, 54, 30, },
+	{ 0, 1, 1, 3, 62, 30, },
+	{ 2, 1, 1, 3, 62, 30, },
+	{ 1, 1, 1, 3, 62, 30, },
+	{ 0, 1, 1, 3, 102, 26, },
+	{ 2, 1, 1, 3, 102, 30, },
+	{ 1, 1, 1, 3, 102, 30, },
+	{ 0, 1, 1, 3, 110, 30, },
+	{ 2, 1, 1, 3, 110, 30, },
+	{ 1, 1, 1, 3, 110, 30, },
+	{ 0, 1, 1, 3, 118, 34, },
+	{ 2, 1, 1, 3, 118, 30, },
+	{ 1, 1, 1, 3, 118, 30, },
+	{ 0, 1, 1, 3, 126, 32, },
+	{ 2, 1, 1, 3, 126, 30, },
+	{ 1, 1, 1, 3, 126, 30, },
+	{ 0, 1, 1, 3, 134, 30, },
+	{ 2, 1, 1, 3, 134, 30, },
+	{ 1, 1, 1, 3, 134, 30, },
+	{ 0, 1, 1, 3, 151, 34, },
+	{ 2, 1, 1, 3, 151, 30, },
+	{ 1, 1, 1, 3, 151, 63, },
+	{ 0, 1, 1, 3, 159, 34, },
+	{ 2, 1, 1, 3, 159, 30, },
+	{ 1, 1, 1, 3, 159, 63, },
+	{ 0, 1, 2, 4, 42, 22, },
+	{ 2, 1, 2, 4, 42, 30, },
+	{ 1, 1, 2, 4, 42, 30, },
+	{ 0, 1, 2, 4, 58, 20, },
+	{ 2, 1, 2, 4, 58, 30, },
+	{ 1, 1, 2, 4, 58, 30, },
+	{ 0, 1, 2, 4, 106, 20, },
+	{ 2, 1, 2, 4, 106, 30, },
+	{ 1, 1, 2, 4, 106, 30, },
+	{ 0, 1, 2, 4, 122, 20, },
+	{ 2, 1, 2, 4, 122, 30, },
+	{ 1, 1, 2, 4, 122, 30, },
+	{ 0, 1, 2, 4, 155, 28, },
+	{ 2, 1, 2, 4, 155, 30, },
+	{ 1, 1, 2, 4, 155, 63, },
+	{ 0, 1, 2, 5, 42, 28, },
+	{ 2, 1, 2, 5, 42, 30, },
+	{ 1, 1, 2, 5, 42, 30, },
+	{ 0, 1, 2, 5, 58, 26, },
+	{ 2, 1, 2, 5, 58, 30, },
+	{ 1, 1, 2, 5, 58, 30, },
+	{ 0, 1, 2, 5, 106, 28, },
+	{ 2, 1, 2, 5, 106, 30, },
+	{ 1, 1, 2, 5, 106, 30, },
+	{ 0, 1, 2, 5, 122, 32, },
+	{ 2, 1, 2, 5, 122, 30, },
+	{ 1, 1, 2, 5, 122, 30, },
+	{ 0, 1, 2, 5, 155, 34, },
+	{ 2, 1, 2, 5, 155, 30, },
+	{ 1, 1, 2, 5, 155, 63, },
+};
+
+RTW_DECL_TABLE_TXPWR_LMT(rtw8821a_txpwr_lmt);
+
+static const struct rtw_pwr_seq_cmd trans_carddis_to_cardemu_8821a[] = {
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3) | BIT(7), 0},
+	{0x0086,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_SDIO,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0x0086,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_SDIO,
+	 RTW_PWR_CMD_POLLING, BIT(1), BIT(1)},
+	{0x004A,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3) | BIT(4), 0},
+	{0x0023,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(4), 0},
+	{0x0301,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_cardemu_to_act_8821a[] = {
+	{0x0020,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK | RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0067,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK | RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(4), 0},
+	{0x0001,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK | RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_DELAY, 1, RTW_PWR_DELAY_MS},
+	{0x0000,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK | RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(5), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(4) | BIT(3) | BIT(2), 0},
+	{0x0075,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0006,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, BIT(1), BIT(1)},
+	{0x0075,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0x0006,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(7), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(4) | BIT(3), 0},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, BIT(0), 0},
+	{0x004F,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0067,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(5) | BIT(4), BIT(5) | BIT(4)},
+	{0x0025,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(6), 0},
+	{0x0049,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), BIT(1)},
+	{0x0063,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), BIT(1)},
+	{0x0062,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0058,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x005A,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), BIT(1)},
+	{0x002E,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x82},
+	{0x0010,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(6), BIT(6)},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_act_to_lps_8821a[] = {
+	{0x0301,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0xFF},
+	{0x0522,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0xFF},
+	{0x05F8,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, 0xFF, 0},
+	{0x05F9,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, 0xFF, 0},
+	{0x05FA,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, 0xFF, 0},
+	{0x05FB,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, 0xFF, 0},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_DELAY, 0, RTW_PWR_DELAY_US},
+	{0x0002,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0100,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x03},
+	{0x0101,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0093,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x00},
+	{0x0553,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(5), BIT(5)},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_act_to_cardemu_8821a[] = {
+	{0x001F,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0},
+	{0x004F,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0x0049,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), 0},
+	{0x0006,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(1), BIT(1)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_POLLING, BIT(1), 0},
+	{0x0000,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK | RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(5), BIT(5)},
+	{0x0020,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK | RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 0},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+static const struct rtw_pwr_seq_cmd trans_cardemu_to_carddis_8821a[] = {
+	{0x0007,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, 0xFF, 0x20},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK | RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(3) | BIT(4), BIT(3)},
+	{0x0005,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_PCI_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(2), BIT(2)},
+	{0x004A,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_USB_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(0), 1},
+	{0x0023,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_MAC,
+	 RTW_PWR_CMD_WRITE, BIT(4), BIT(4)},
+	{0x0086,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_SDIO,
+	 RTW_PWR_CMD_WRITE, BIT(0), BIT(0)},
+	{0x0086,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_SDIO_MSK,
+	 RTW_PWR_ADDR_SDIO,
+	 RTW_PWR_CMD_POLLING, BIT(1), 0},
+	{0xFFFF,
+	 RTW_PWR_CUT_ALL_MSK,
+	 RTW_PWR_INTF_ALL_MSK,
+	 0,
+	 RTW_PWR_CMD_END, 0, 0},
+};
+
+const struct rtw_pwr_seq_cmd * const card_enable_flow_8821a[] = {
+	trans_carddis_to_cardemu_8821a,
+	trans_cardemu_to_act_8821a,
+	NULL
+};
+
+const struct rtw_pwr_seq_cmd * const enter_lps_flow_8821a[] = {
+	trans_act_to_lps_8821a,
+	NULL
+};
+
+const struct rtw_pwr_seq_cmd * const card_disable_flow_8821a[] = {
+	trans_act_to_cardemu_8821a,
+	trans_cardemu_to_carddis_8821a,
+	NULL
+};
+
+static const u8 rtw8821a_pwrtrk_5gb_n[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+};
+
+static const u8 rtw8821a_pwrtrk_5gb_p[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+};
+
+static const u8 rtw8821a_pwrtrk_5ga_n[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+};
+
+static const u8 rtw8821a_pwrtrk_5ga_p[][RTW_PWR_TRK_TBL_SZ] = {
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+	{0, 0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15,
+	 15, 16, 16, 16, 16, 16, 16, 16, 16},
+};
+
+static const u8 rtw8821a_pwrtrk_2gb_n[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10
+};
+
+static const u8 rtw8821a_pwrtrk_2gb_p[] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8821a_pwrtrk_2ga_n[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10
+};
+
+static const u8 rtw8821a_pwrtrk_2ga_p[] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8821a_pwrtrk_2g_cck_b_n[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10
+};
+
+static const u8 rtw8821a_pwrtrk_2g_cck_b_p[] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 12
+};
+
+static const u8 rtw8821a_pwrtrk_2g_cck_a_n[] = {
+	0, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6,
+	6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10
+};
+
+static const u8 rtw8821a_pwrtrk_2g_cck_a_p[] = {
+	0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7,
+	8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 12
+};
+
+const struct rtw_pwr_track_tbl rtw8821a_rtw_pwr_track_tbl = {
+	.pwrtrk_5gb_n[0] = rtw8821a_pwrtrk_5gb_n[0],
+	.pwrtrk_5gb_n[1] = rtw8821a_pwrtrk_5gb_n[1],
+	.pwrtrk_5gb_n[2] = rtw8821a_pwrtrk_5gb_n[2],
+	.pwrtrk_5gb_p[0] = rtw8821a_pwrtrk_5gb_p[0],
+	.pwrtrk_5gb_p[1] = rtw8821a_pwrtrk_5gb_p[1],
+	.pwrtrk_5gb_p[2] = rtw8821a_pwrtrk_5gb_p[2],
+	.pwrtrk_5ga_n[0] = rtw8821a_pwrtrk_5ga_n[0],
+	.pwrtrk_5ga_n[1] = rtw8821a_pwrtrk_5ga_n[1],
+	.pwrtrk_5ga_n[2] = rtw8821a_pwrtrk_5ga_n[2],
+	.pwrtrk_5ga_p[0] = rtw8821a_pwrtrk_5ga_p[0],
+	.pwrtrk_5ga_p[1] = rtw8821a_pwrtrk_5ga_p[1],
+	.pwrtrk_5ga_p[2] = rtw8821a_pwrtrk_5ga_p[2],
+	.pwrtrk_2gb_n = rtw8821a_pwrtrk_2gb_n,
+	.pwrtrk_2gb_p = rtw8821a_pwrtrk_2gb_p,
+	.pwrtrk_2ga_n = rtw8821a_pwrtrk_2ga_n,
+	.pwrtrk_2ga_p = rtw8821a_pwrtrk_2ga_p,
+	.pwrtrk_2g_cckb_n = rtw8821a_pwrtrk_2g_cck_b_n,
+	.pwrtrk_2g_cckb_p = rtw8821a_pwrtrk_2g_cck_b_p,
+	.pwrtrk_2g_ccka_n = rtw8821a_pwrtrk_2g_cck_a_n,
+	.pwrtrk_2g_ccka_p = rtw8821a_pwrtrk_2g_cck_a_p,
+};
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8821a_table.h b/drivers/net/wireless/realtek/rtw88/rtw8821a_table.h
new file mode 100644
index 000000000000..90379ac7a817
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8821a_table.h
@@ -0,0 +1,21 @@
+/* SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause */
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#ifndef __RTW8821A_TABLE_H__
+#define __RTW8821A_TABLE_H__
+
+extern const struct rtw_table rtw8821a_mac_tbl;
+extern const struct rtw_table rtw8821a_agc_tbl;
+extern const struct rtw_table rtw8821a_bb_tbl;
+extern const struct rtw_table rtw8821a_bb_pg_tbl;
+extern const struct rtw_table rtw8821a_rf_a_tbl;
+extern const struct rtw_table rtw8821a_txpwr_lmt_tbl;
+
+extern const struct rtw_pwr_seq_cmd * const card_enable_flow_8821a[];
+extern const struct rtw_pwr_seq_cmd * const enter_lps_flow_8821a[];
+extern const struct rtw_pwr_seq_cmd * const card_disable_flow_8821a[];
+
+extern const struct rtw_pwr_track_tbl rtw8821a_rtw_pwr_track_tbl;
+
+#endif
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8821au.c b/drivers/net/wireless/realtek/rtw88/rtw8821au.c
new file mode 100644
index 000000000000..a01744b64e8d
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw8821au.c
@@ -0,0 +1,78 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#include <linux/module.h>
+#include <linux/usb.h>
+#include "main.h"
+#include "rtw8821a.h"
+#include "usb.h"
+
+static const struct usb_device_id rtw_8821au_id_table[] = {
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x0811, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x0820, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x0821, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x8822, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0x0823, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(RTW_USB_VENDOR_ID_REALTEK, 0xa811, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) },
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0411, 0x0242, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* Buffalo */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0411, 0x029b, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* Buffalo */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x04bb, 0x0953, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* I-O DATA */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x056e, 0x4007, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* ELECOM */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x056e, 0x400e, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* ELECOM */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x056e, 0x400f, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* ELECOM */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0846, 0x9052, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* Netgear */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x0e66, 0x0023, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* HAWKING */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2001, 0x3314, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* D-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2001, 0x3318, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* D-Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2019, 0xab32, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* Planex */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x20f4, 0x804b, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* TRENDnet */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x011e, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* TP Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x011f, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* TP Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2357, 0x0120, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* TP Link */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x3823, 0x6249, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* Obihai */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x7392, 0xa811, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* Edimax */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x7392, 0xa812, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* Edimax */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x7392, 0xa813, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* Edimax */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x7392, 0xb611, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8821a_hw_spec) }, /* Edimax */
+	{},
+};
+MODULE_DEVICE_TABLE(usb, rtw_8821au_id_table);
+
+static struct usb_driver rtw_8821au_driver = {
+	.name = "rtw_8821au",
+	.id_table = rtw_8821au_id_table,
+	.probe = rtw_usb_probe,
+	.disconnect = rtw_usb_disconnect,
+};
+module_usb_driver(rtw_8821au_driver);
+
+MODULE_AUTHOR("Bitterblue Smith <rtl8821cerfe2@gmail.com>");
+MODULE_DESCRIPTION("Realtek 802.11ac wireless 8821au/8811au driver");
+MODULE_LICENSE("Dual BSD/GPL");
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8821c.c b/drivers/net/wireless/realtek/rtw88/rtw8821c.c
index 526e8de77b3e..97e081ddd0d8 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8821c.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8821c.c
@@ -55,6 +55,7 @@ static int rtw8821c_read_efuse(struct rtw_dev *rtwdev, u8 *log_map)
 	map = (struct rtw8821c_efuse *)log_map;
 
 	efuse->rfe_option = map->rfe_option & 0x1f;
+	efuse->rfe_option_full = map->rfe_option;
 	efuse->rf_board_option = map->rf_board_option;
 	efuse->crystal_cap = map->xtal_k;
 	efuse->pa_type_2g = map->pa_type;
@@ -679,53 +680,12 @@ static void query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
 	}
 }
 
-static void rtw8821c_query_rx_desc(struct rtw_dev *rtwdev, u8 *rx_desc,
-				   struct rtw_rx_pkt_stat *pkt_stat,
-				   struct ieee80211_rx_status *rx_status)
-{
-	struct ieee80211_hdr *hdr;
-	u32 desc_sz = rtwdev->chip->rx_pkt_desc_sz;
-	u8 *phy_status = NULL;
-
-	memset(pkt_stat, 0, sizeof(*pkt_stat));
-
-	pkt_stat->phy_status = GET_RX_DESC_PHYST(rx_desc);
-	pkt_stat->icv_err = GET_RX_DESC_ICV_ERR(rx_desc);
-	pkt_stat->crc_err = GET_RX_DESC_CRC32(rx_desc);
-	pkt_stat->decrypted = !GET_RX_DESC_SWDEC(rx_desc) &&
-			      GET_RX_DESC_ENC_TYPE(rx_desc) != RX_DESC_ENC_NONE;
-	pkt_stat->is_c2h = GET_RX_DESC_C2H(rx_desc);
-	pkt_stat->pkt_len = GET_RX_DESC_PKT_LEN(rx_desc);
-	pkt_stat->drv_info_sz = GET_RX_DESC_DRV_INFO_SIZE(rx_desc);
-	pkt_stat->shift = GET_RX_DESC_SHIFT(rx_desc);
-	pkt_stat->rate = GET_RX_DESC_RX_RATE(rx_desc);
-	pkt_stat->cam_id = GET_RX_DESC_MACID(rx_desc);
-	pkt_stat->ppdu_cnt = GET_RX_DESC_PPDU_CNT(rx_desc);
-	pkt_stat->tsf_low = GET_RX_DESC_TSFL(rx_desc);
-
-	/* drv_info_sz is in unit of 8-bytes */
-	pkt_stat->drv_info_sz *= 8;
-
-	/* c2h cmd pkt's rx/phy status is not interested */
-	if (pkt_stat->is_c2h)
-		return;
-
-	hdr = (struct ieee80211_hdr *)(rx_desc + desc_sz + pkt_stat->shift +
-				       pkt_stat->drv_info_sz);
-	if (pkt_stat->phy_status) {
-		phy_status = rx_desc + desc_sz + pkt_stat->shift;
-		query_phy_status(rtwdev, phy_status, pkt_stat);
-	}
-
-	rtw_rx_fill_rx_status(rtwdev, pkt_stat, hdr, rx_status, phy_status);
-}
-
 static void
-rtw8821c_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path, u8 rs)
+rtw8821c_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path,
+				    u8 rs, u32 *phy_pwr_idx)
 {
 	struct rtw_hal *hal = &rtwdev->hal;
 	static const u32 offset_txagc[2] = {0x1d00, 0x1d80};
-	static u32 phy_pwr_idx;
 	u8 rate, rate_idx, pwr_index, shift;
 	int j;
 
@@ -733,12 +693,12 @@ rtw8821c_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path, u8 rs)
 		rate = rtw_rate_section[rs][j];
 		pwr_index = hal->tx_pwr_tbl[path][rate];
 		shift = rate & 0x3;
-		phy_pwr_idx |= ((u32)pwr_index << (shift * 8));
+		*phy_pwr_idx |= ((u32)pwr_index << (shift * 8));
 		if (shift == 0x3 || rate == DESC_RATEVHT1SS_MCS9) {
 			rate_idx = rate & 0xfc;
 			rtw_write32(rtwdev, offset_txagc[path] + rate_idx,
-				    phy_pwr_idx);
-			phy_pwr_idx = 0;
+				    *phy_pwr_idx);
+			*phy_pwr_idx = 0;
 		}
 	}
 }
@@ -746,18 +706,25 @@ rtw8821c_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path, u8 rs)
 static void rtw8821c_set_tx_power_index(struct rtw_dev *rtwdev)
 {
 	struct rtw_hal *hal = &rtwdev->hal;
+	u32 phy_pwr_idx = 0;
 	int rs, path;
 
 	for (path = 0; path < hal->rf_path_num; path++) {
-		for (rs = 0; rs < RTW_RATE_SECTION_MAX; rs++) {
+		for (rs = 0; rs <= __RTW_RATE_SECTION_2SS_MAX; rs++) {
 			if (rs == RTW_RATE_SECTION_HT_2S ||
 			    rs == RTW_RATE_SECTION_VHT_2S)
 				continue;
-			rtw8821c_set_tx_power_index_by_rate(rtwdev, path, rs);
+			rtw8821c_set_tx_power_index_by_rate(rtwdev, path, rs,
+							    &phy_pwr_idx);
 		}
 	}
 }
 
+static void rtw8821c_set_ampdu_factor(struct rtw_dev *rtwdev, u8 factor)
+{
+	rtw_write32(rtwdev, REG_AMPDU_MAX_LENGTH, (8192 << factor) - 1);
+}
+
 static void rtw8821c_false_alarm_statistics(struct rtw_dev *rtwdev)
 {
 	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
@@ -1247,6 +1214,24 @@ static void rtw8821c_phy_cck_pd_set(struct rtw_dev *rtwdev, u8 new_lvl)
 			 dm_info->cck_pd_default + new_lvl * 2);
 }
 
+static void rtw8821c_led_set(struct led_classdev *led,
+			     enum led_brightness brightness)
+{
+	struct rtw_dev *rtwdev = container_of(led, struct rtw_dev, led_cdev);
+	u32 ledcfg;
+
+	ledcfg = rtw_read32(rtwdev, REG_LED_CFG);
+	u32p_replace_bits(&ledcfg, BIT_LED_MODE_SW_CTRL, BIT_LED2_CM);
+	ledcfg &= ~BIT_GPIO13_14_WL_CTRL_EN;
+
+	if (brightness == LED_OFF)
+		ledcfg |= BIT_LED2_SV;
+	else
+		ledcfg &= ~BIT_LED2_SV;
+
+	rtw_write32(rtwdev, REG_LED_CFG, ledcfg);
+}
+
 static void rtw8821c_fill_txdesc_checksum(struct rtw_dev *rtwdev,
 					  struct rtw_tx_pkt_info *pkt_info,
 					  u8 *txdesc)
@@ -1254,7 +1239,7 @@ static void rtw8821c_fill_txdesc_checksum(struct rtw_dev *rtwdev,
 	fill_txdesc_checksum_common(txdesc, 16);
 }
 
-static struct rtw_pwr_seq_cmd trans_carddis_to_cardemu_8821c[] = {
+static const struct rtw_pwr_seq_cmd trans_carddis_to_cardemu_8821c[] = {
 	{0x0086,
 	 RTW_PWR_CUT_ALL_MSK,
 	 RTW_PWR_INTF_SDIO_MSK,
@@ -1292,7 +1277,7 @@ static struct rtw_pwr_seq_cmd trans_carddis_to_cardemu_8821c[] = {
 	 RTW_PWR_CMD_END, 0, 0},
 };
 
-static struct rtw_pwr_seq_cmd trans_cardemu_to_act_8821c[] = {
+static const struct rtw_pwr_seq_cmd trans_cardemu_to_act_8821c[] = {
 	{0x0020,
 	 RTW_PWR_CUT_ALL_MSK,
 	 RTW_PWR_INTF_USB_MSK | RTW_PWR_INTF_SDIO_MSK,
@@ -1396,7 +1381,7 @@ static struct rtw_pwr_seq_cmd trans_cardemu_to_act_8821c[] = {
 	 RTW_PWR_CMD_END, 0, 0},
 };
 
-static struct rtw_pwr_seq_cmd trans_act_to_cardemu_8821c[] = {
+static const struct rtw_pwr_seq_cmd trans_act_to_cardemu_8821c[] = {
 	{0x0093,
 	 RTW_PWR_CUT_ALL_MSK,
 	 RTW_PWR_INTF_ALL_MSK,
@@ -1454,7 +1439,7 @@ static struct rtw_pwr_seq_cmd trans_act_to_cardemu_8821c[] = {
 	 RTW_PWR_CMD_END, 0, 0},
 };
 
-static struct rtw_pwr_seq_cmd trans_cardemu_to_carddis_8821c[] = {
+static const struct rtw_pwr_seq_cmd trans_cardemu_to_carddis_8821c[] = {
 	{0x0007,
 	 RTW_PWR_CUT_ALL_MSK,
 	 RTW_PWR_INTF_USB_MSK | RTW_PWR_INTF_SDIO_MSK,
@@ -1567,13 +1552,13 @@ static struct rtw_pwr_seq_cmd trans_cardemu_to_carddis_8821c[] = {
 	 RTW_PWR_CMD_END, 0, 0},
 };
 
-static const struct rtw_pwr_seq_cmd *card_enable_flow_8821c[] = {
+static const struct rtw_pwr_seq_cmd * const card_enable_flow_8821c[] = {
 	trans_carddis_to_cardemu_8821c,
 	trans_cardemu_to_act_8821c,
 	NULL
 };
 
-static const struct rtw_pwr_seq_cmd *card_disable_flow_8821c[] = {
+static const struct rtw_pwr_seq_cmd * const card_disable_flow_8821c[] = {
 	trans_act_to_cardemu_8821c,
 	trans_cardemu_to_carddis_8821c,
 	NULL
@@ -1622,14 +1607,7 @@ static const struct rtw_intf_phy_para_table phy_para_table_8821c = {
 	.n_gen2_para	= ARRAY_SIZE(pcie_gen2_param_8821c),
 };
 
-static const struct rtw_rfe_def rtw8821c_rfe_defs[] = {
-	[0] = RTW_DEF_RFE(8821c, 0, 0),
-	[2] = RTW_DEF_RFE_EXT(8821c, 0, 0, 2),
-	[4] = RTW_DEF_RFE_EXT(8821c, 0, 0, 2),
-	[6] = RTW_DEF_RFE(8821c, 0, 0),
-};
-
-static struct rtw_hw_reg rtw8821c_dig[] = {
+static const struct rtw_hw_reg rtw8821c_dig[] = {
 	[0] = { .addr = 0xc50, .mask = 0x7f },
 };
 
@@ -1639,7 +1617,7 @@ static const struct rtw_ltecoex_addr rtw8821c_ltecoex_addr = {
 	.rdata = LTECOEX_READ_DATA,
 };
 
-static struct rtw_page_table page_table_8821c[] = {
+static const struct rtw_page_table page_table_8821c[] = {
 	/* not sure what [0] stands for */
 	{16, 16, 16, 14, 1},
 	{16, 16, 16, 14, 1},
@@ -1648,7 +1626,7 @@ static struct rtw_page_table page_table_8821c[] = {
 	{16, 16, 16, 14, 1},
 };
 
-static struct rtw_rqpn rqpn_table_8821c[] = {
+static const struct rtw_rqpn rqpn_table_8821c[] = {
 	/* not sure what [0] stands for */
 	{RTW_DMA_MAPPING_NORMAL, RTW_DMA_MAPPING_NORMAL,
 	 RTW_DMA_MAPPING_LOW, RTW_DMA_MAPPING_LOW,
@@ -1667,7 +1645,7 @@ static struct rtw_rqpn rqpn_table_8821c[] = {
 	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
 };
 
-static struct rtw_prioq_addrs prioq_addrs_8821c = {
+static const struct rtw_prioq_addrs prioq_addrs_8821c = {
 	.prio[RTW_DMA_MAPPING_EXTRA] = {
 		.rsvd = REG_FIFOPAGE_INFO_4, .avail = REG_FIFOPAGE_INFO_4 + 2,
 	},
@@ -1683,10 +1661,12 @@ static struct rtw_prioq_addrs prioq_addrs_8821c = {
 	.wsize = true,
 };
 
-static struct rtw_chip_ops rtw8821c_ops = {
+static const struct rtw_chip_ops rtw8821c_ops = {
+	.power_on		= rtw_power_on,
+	.power_off		= rtw_power_off,
 	.phy_set_param		= rtw8821c_phy_set_param,
 	.read_efuse		= rtw8821c_read_efuse,
-	.query_rx_desc		= rtw8821c_query_rx_desc,
+	.query_phy_status	= query_phy_status,
 	.set_channel		= rtw8821c_set_channel,
 	.mac_init		= rtw8821c_mac_init,
 	.read_rf		= rtw_phy_read_rf,
@@ -1694,6 +1674,7 @@ static struct rtw_chip_ops rtw8821c_ops = {
 	.set_antenna		= NULL,
 	.set_tx_power_index	= rtw8821c_set_tx_power_index,
 	.cfg_ldo25		= rtw8821c_cfg_ldo25,
+	.set_ampdu_factor	= rtw8821c_set_ampdu_factor,
 	.false_alarm_statistics	= rtw8821c_false_alarm_statistics,
 	.phy_calibration	= rtw8821c_phy_calibration,
 	.cck_pd_set		= rtw8821c_phy_cck_pd_set,
@@ -1701,6 +1682,7 @@ static struct rtw_chip_ops rtw8821c_ops = {
 	.config_bfee		= rtw8821c_bf_config_bfee,
 	.set_gid_table		= rtw_bf_set_gid_table,
 	.cfg_csi_rate		= rtw_bf_cfg_csi_rate,
+	.led_set		= rtw8821c_led_set,
 	.fill_txdesc_checksum	= rtw8821c_fill_txdesc_checksum,
 
 	.coex_set_init		= rtw8821c_coex_cfg_init,
@@ -1938,7 +1920,7 @@ static const u8 rtw8821c_pwrtrk_2g_cck_a_p[] = {
 	5, 6, 6, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9
 };
 
-static const struct rtw_pwr_track_tbl rtw8821c_rtw_pwr_track_tbl = {
+static const struct rtw_pwr_track_tbl rtw8821c_pwr_track_type0_tbl = {
 	.pwrtrk_5gb_n[0] = rtw8821c_pwrtrk_5gb_n[0],
 	.pwrtrk_5gb_n[1] = rtw8821c_pwrtrk_5gb_n[1],
 	.pwrtrk_5gb_n[2] = rtw8821c_pwrtrk_5gb_n[2],
@@ -1961,6 +1943,13 @@ static const struct rtw_pwr_track_tbl rtw8821c_rtw_pwr_track_tbl = {
 	.pwrtrk_2g_ccka_p = rtw8821c_pwrtrk_2g_cck_a_p,
 };
 
+static const struct rtw_rfe_def rtw8821c_rfe_defs[] = {
+	[0] = RTW_DEF_RFE(8821c, 0, 0, 0),
+	[2] = RTW_DEF_RFE_EXT(8821c, 0, 0, 0, 2),
+	[4] = RTW_DEF_RFE_EXT(8821c, 0, 0, 0, 2),
+	[6] = RTW_DEF_RFE(8821c, 0, 0, 0),
+};
+
 static const struct rtw_reg_domain coex_info_hw_regs_8821c[] = {
 	{0xCB0, MASKDWORD, RTW_REG_DOMAIN_MAC32},
 	{0xCB4, MASKDWORD, RTW_REG_DOMAIN_MAC32},
@@ -2008,7 +1997,11 @@ const struct rtw_chip_info rtw8821c_hw_spec = {
 	.band = RTW_BAND_2G | RTW_BAND_5G,
 	.page_size = TX_PAGE_SIZE,
 	.dig_min = 0x1c,
+	.amsdu_in_ampdu = true,
 	.usb_tx_agg_desc_num = 3,
+	.hw_feature_report = true,
+	.c2h_ra_report_size = 7,
+	.old_datarate_fb_limit = false,
 	.ht_supported = true,
 	.vht_supported = true,
 	.lps_deep_mode_supported = BIT(LPS_DEEP_MODE_LCLK),
@@ -2030,7 +2023,6 @@ const struct rtw_chip_info rtw8821c_hw_spec = {
 	.rfe_defs = rtw8821c_rfe_defs,
 	.rfe_defs_size = ARRAY_SIZE(rtw8821c_rfe_defs),
 	.rx_ldpc = false,
-	.pwr_track_tbl = &rtw8821c_rtw_pwr_track_tbl,
 	.iqk_threshold = 8,
 	.bfer_su_max_num = 2,
 	.bfer_mu_max_num = 1,
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8821c.h b/drivers/net/wireless/realtek/rtw88/rtw8821c.h
index 10172f4d74bf..954e93c8020d 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8821c.h
+++ b/drivers/net/wireless/realtek/rtw88/rtw8821c.h
@@ -215,19 +215,10 @@ extern const struct rtw_chip_info rtw8821c_hw_spec;
 #define BIT_FEN_EN	BIT(26)
 #define REG_INIRTS_RATE_SEL 0x0480
 #define REG_HTSTFWT	0x800
-#define REG_RXPSEL	0x808
-#define BIT_RX_PSEL_RST		(BIT(28) | BIT(29))
-#define REG_TXPSEL	0x80c
 #define REG_RXCCAMSK	0x814
-#define REG_CCASEL	0x82c
-#define REG_PDMFTH	0x830
-#define REG_CCA2ND	0x838
 #define REG_L1WT	0x83c
 #define REG_L1PKWT	0x840
 #define REG_MRC		0x850
-#define REG_CLKTRK	0x860
-#define REG_ADCCLK	0x8ac
-#define REG_ADC160	0x8c4
 #define REG_ADC40	0x8c8
 #define REG_CHFIR	0x8f0
 #define REG_CDDTXP	0x93c
@@ -235,14 +226,11 @@ extern const struct rtw_chip_info rtw8821c_hw_spec;
 #define REG_ACBB0	0x948
 #define REG_ACBBRXFIR	0x94c
 #define REG_ACGG2TBL	0x958
-#define REG_FAS		0x9a4
-#define REG_RXSB	0xa00
 #define REG_ADCINI	0xa04
 #define REG_PWRTH	0xa08
 #define REG_CCA_FLTR	0xa20
 #define REG_TXSF2	0xa24
 #define REG_TXSF6	0xa28
-#define REG_FA_CCK	0xa5c
 #define REG_RXDESC	0xa2c
 #define REG_ENTXCCK	0xa80
 #define BTG_LNA		0xfc84
@@ -253,12 +241,8 @@ extern const struct rtw_chip_info rtw8821c_hw_spec;
 #define REG_PWRTH2	0xaa8
 #define REG_CSRATIO	0xaaa
 #define REG_TXFILTER	0xaac
-#define REG_CNTRST	0xb58
 #define REG_AGCTR_A	0xc08
-#define REG_TXSCALE_A	0xc1c
 #define REG_TXDFIR	0xc20
-#define REG_RXIGI_A	0xc50
-#define REG_TXAGCIDX	0xc94
 #define REG_TRSW	0xca0
 #define REG_RFESEL0	0xcb0
 #define REG_RFESEL8	0xcb4
@@ -270,14 +254,6 @@ extern const struct rtw_chip_info rtw8821c_hw_spec;
 #define B_WLA_SWITCH	BIT(23)
 #define REG_RFEINV	0xcbc
 #define REG_AGCTR_B	0xe08
-#define REG_RXIGI_B	0xe50
-#define REG_CRC_CCK	0xf04
-#define REG_CRC_OFDM	0xf14
-#define REG_CRC_HT	0xf10
-#define REG_CRC_VHT	0xf0c
-#define REG_CCA_OFDM	0xf08
-#define REG_FA_OFDM	0xf48
-#define REG_CCA_CCK	0xfcc
 #define REG_DMEM_CTRL	0x1080
 #define BIT_WL_RST	BIT(16)
 #define REG_ANTWT	0x1904
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8821cs.c b/drivers/net/wireless/realtek/rtw88/rtw8821cs.c
index a359413369a4..649f41baa064 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8821cs.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8821cs.c
@@ -3,7 +3,7 @@
  */
 
 #include <linux/mmc/sdio_func.h>
-#include <linux/mmc/sdio_ids.h>
+#include "sdio_ids.h"
 #include <linux/module.h>
 #include "main.h"
 #include "rtw8821c.h"
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8822b.c b/drivers/net/wireless/realtek/rtw88/rtw8822b.c
index 6edb17aea90e..d631c7ade282 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8822b.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8822b.c
@@ -934,53 +934,12 @@ static void query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
 	}
 }
 
-static void rtw8822b_query_rx_desc(struct rtw_dev *rtwdev, u8 *rx_desc,
-				   struct rtw_rx_pkt_stat *pkt_stat,
-				   struct ieee80211_rx_status *rx_status)
-{
-	struct ieee80211_hdr *hdr;
-	u32 desc_sz = rtwdev->chip->rx_pkt_desc_sz;
-	u8 *phy_status = NULL;
-
-	memset(pkt_stat, 0, sizeof(*pkt_stat));
-
-	pkt_stat->phy_status = GET_RX_DESC_PHYST(rx_desc);
-	pkt_stat->icv_err = GET_RX_DESC_ICV_ERR(rx_desc);
-	pkt_stat->crc_err = GET_RX_DESC_CRC32(rx_desc);
-	pkt_stat->decrypted = !GET_RX_DESC_SWDEC(rx_desc) &&
-			      GET_RX_DESC_ENC_TYPE(rx_desc) != RX_DESC_ENC_NONE;
-	pkt_stat->is_c2h = GET_RX_DESC_C2H(rx_desc);
-	pkt_stat->pkt_len = GET_RX_DESC_PKT_LEN(rx_desc);
-	pkt_stat->drv_info_sz = GET_RX_DESC_DRV_INFO_SIZE(rx_desc);
-	pkt_stat->shift = GET_RX_DESC_SHIFT(rx_desc);
-	pkt_stat->rate = GET_RX_DESC_RX_RATE(rx_desc);
-	pkt_stat->cam_id = GET_RX_DESC_MACID(rx_desc);
-	pkt_stat->ppdu_cnt = GET_RX_DESC_PPDU_CNT(rx_desc);
-	pkt_stat->tsf_low = GET_RX_DESC_TSFL(rx_desc);
-
-	/* drv_info_sz is in unit of 8-bytes */
-	pkt_stat->drv_info_sz *= 8;
-
-	/* c2h cmd pkt's rx/phy status is not interested */
-	if (pkt_stat->is_c2h)
-		return;
-
-	hdr = (struct ieee80211_hdr *)(rx_desc + desc_sz + pkt_stat->shift +
-				       pkt_stat->drv_info_sz);
-	if (pkt_stat->phy_status) {
-		phy_status = rx_desc + desc_sz + pkt_stat->shift;
-		query_phy_status(rtwdev, phy_status, pkt_stat);
-	}
-
-	rtw_rx_fill_rx_status(rtwdev, pkt_stat, hdr, rx_status, phy_status);
-}
-
 static void
-rtw8822b_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path, u8 rs)
+rtw8822b_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path,
+				    u8 rs, u32 *phy_pwr_idx)
 {
 	struct rtw_hal *hal = &rtwdev->hal;
 	static const u32 offset_txagc[2] = {0x1d00, 0x1d80};
-	static u32 phy_pwr_idx;
 	u8 rate, rate_idx, pwr_index, shift;
 	int j;
 
@@ -988,12 +947,12 @@ rtw8822b_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path, u8 rs)
 		rate = rtw_rate_section[rs][j];
 		pwr_index = hal->tx_pwr_tbl[path][rate];
 		shift = rate & 0x3;
-		phy_pwr_idx |= ((u32)pwr_index << (shift * 8));
+		*phy_pwr_idx |= ((u32)pwr_index << (shift * 8));
 		if (shift == 0x3) {
 			rate_idx = rate & 0xfc;
 			rtw_write32(rtwdev, offset_txagc[path] + rate_idx,
-				    phy_pwr_idx);
-			phy_pwr_idx = 0;
+				    *phy_pwr_idx);
+			*phy_pwr_idx = 0;
 		}
 	}
 }
@@ -1001,11 +960,13 @@ rtw8822b_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path, u8 rs)
 static void rtw8822b_set_tx_power_index(struct rtw_dev *rtwdev)
 {
 	struct rtw_hal *hal = &rtwdev->hal;
+	u32 phy_pwr_idx = 0;
 	int rs, path;
 
 	for (path = 0; path < hal->rf_path_num; path++) {
-		for (rs = 0; rs < RTW_RATE_SECTION_MAX; rs++)
-			rtw8822b_set_tx_power_index_by_rate(rtwdev, path, rs);
+		for (rs = 0; rs <= __RTW_RATE_SECTION_2SS_MAX; rs++)
+			rtw8822b_set_tx_power_index_by_rate(rtwdev, path, rs,
+							    &phy_pwr_idx);
 	}
 }
 
@@ -1057,6 +1018,11 @@ static void rtw8822b_cfg_ldo25(struct rtw_dev *rtwdev, bool enable)
 	rtw_write8(rtwdev, REG_LDO_EFUSE_CTRL + 3, ldo_pwr);
 }
 
+static void rtw8822b_set_ampdu_factor(struct rtw_dev *rtwdev, u8 factor)
+{
+	rtw_write32(rtwdev, REG_AMPDU_MAX_LENGTH, (8192 << factor) - 1);
+}
+
 static void rtw8822b_false_alarm_statistics(struct rtw_dev *rtwdev)
 {
 	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
@@ -1607,6 +1573,24 @@ static void rtw8822b_adaptivity(struct rtw_dev *rtwdev)
 	rtw_phy_set_edcca_th(rtwdev, l2h, h2l);
 }
 
+static void rtw8822b_led_set(struct led_classdev *led,
+			     enum led_brightness brightness)
+{
+	struct rtw_dev *rtwdev = container_of(led, struct rtw_dev, led_cdev);
+	u32 ledcfg;
+
+	ledcfg = rtw_read32(rtwdev, REG_LED_CFG);
+	u32p_replace_bits(&ledcfg, BIT_LED_MODE_SW_CTRL, BIT_LED2_CM);
+	ledcfg &= ~BIT_GPIO13_14_WL_CTRL_EN;
+
+	if (brightness == LED_OFF)
+		ledcfg |= BIT_LED2_SV;
+	else
+		ledcfg &= ~BIT_LED2_SV;
+
+	rtw_write32(rtwdev, REG_LED_CFG, ledcfg);
+}
+
 static void rtw8822b_fill_txdesc_checksum(struct rtw_dev *rtwdev,
 					  struct rtw_tx_pkt_info *pkt_info,
 					  u8 *txdesc)
@@ -1978,13 +1962,13 @@ static const struct rtw_pwr_seq_cmd trans_cardemu_to_carddis_8822b[] = {
 	 RTW_PWR_CMD_END, 0, 0},
 };
 
-static const struct rtw_pwr_seq_cmd *card_enable_flow_8822b[] = {
+static const struct rtw_pwr_seq_cmd * const card_enable_flow_8822b[] = {
 	trans_carddis_to_cardemu_8822b,
 	trans_cardemu_to_act_8822b,
 	NULL
 };
 
-static const struct rtw_pwr_seq_cmd *card_disable_flow_8822b[] = {
+static const struct rtw_pwr_seq_cmd * const card_disable_flow_8822b[] = {
 	trans_act_to_cardemu_8822b,
 	trans_cardemu_to_carddis_8822b,
 	NULL
@@ -2113,12 +2097,6 @@ static const struct rtw_intf_phy_para_table phy_para_table_8822b = {
 	.n_gen2_para	= ARRAY_SIZE(pcie_gen2_param_8822b),
 };
 
-static const struct rtw_rfe_def rtw8822b_rfe_defs[] = {
-	[2] = RTW_DEF_RFE(8822b, 2, 2),
-	[3] = RTW_DEF_RFE(8822b, 3, 0),
-	[5] = RTW_DEF_RFE(8822b, 5, 5),
-};
-
 static const struct rtw_hw_reg rtw8822b_dig[] = {
 	[0] = { .addr = 0xc50, .mask = 0x7f },
 	[1] = { .addr = 0xe50, .mask = 0x7f },
@@ -2156,7 +2134,7 @@ static const struct rtw_rqpn rqpn_table_8822b[] = {
 	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
 };
 
-static struct rtw_prioq_addrs prioq_addrs_8822b = {
+static const struct rtw_prioq_addrs prioq_addrs_8822b = {
 	.prio[RTW_DMA_MAPPING_EXTRA] = {
 		.rsvd = REG_FIFOPAGE_INFO_4, .avail = REG_FIFOPAGE_INFO_4 + 2,
 	},
@@ -2172,10 +2150,12 @@ static struct rtw_prioq_addrs prioq_addrs_8822b = {
 	.wsize = true,
 };
 
-static struct rtw_chip_ops rtw8822b_ops = {
+static const struct rtw_chip_ops rtw8822b_ops = {
+	.power_on		= rtw_power_on,
+	.power_off		= rtw_power_off,
 	.phy_set_param		= rtw8822b_phy_set_param,
 	.read_efuse		= rtw8822b_read_efuse,
-	.query_rx_desc		= rtw8822b_query_rx_desc,
+	.query_phy_status	= query_phy_status,
 	.set_channel		= rtw8822b_set_channel,
 	.mac_init		= rtw8822b_mac_init,
 	.read_rf		= rtw_phy_read_rf,
@@ -2183,6 +2163,7 @@ static struct rtw_chip_ops rtw8822b_ops = {
 	.set_tx_power_index	= rtw8822b_set_tx_power_index,
 	.set_antenna		= rtw8822b_set_antenna,
 	.cfg_ldo25		= rtw8822b_cfg_ldo25,
+	.set_ampdu_factor	= rtw8822b_set_ampdu_factor,
 	.false_alarm_statistics	= rtw8822b_false_alarm_statistics,
 	.phy_calibration	= rtw8822b_phy_calibration,
 	.pwr_track		= rtw8822b_pwr_track,
@@ -2191,6 +2172,7 @@ static struct rtw_chip_ops rtw8822b_ops = {
 	.cfg_csi_rate		= rtw_bf_cfg_csi_rate,
 	.adaptivity_init	= rtw8822b_adaptivity_init,
 	.adaptivity		= rtw8822b_adaptivity,
+	.led_set		= rtw8822b_led_set,
 	.fill_txdesc_checksum	= rtw8822b_fill_txdesc_checksum,
 
 	.coex_set_init		= rtw8822b_coex_cfg_init,
@@ -2471,7 +2453,7 @@ static const u8 rtw8822b_pwrtrk_2g_cck_a_p[RTW_PWR_TRK_TBL_SZ] = {
 	10, 11, 11, 12, 12, 13, 13, 14, 14, 15
 };
 
-static const struct rtw_pwr_track_tbl rtw8822b_rtw_pwr_track_tbl = {
+static const struct rtw_pwr_track_tbl rtw8822b_pwr_track_type0_tbl = {
 	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_1] = rtw8822b_pwrtrk_5gb_n[RTW_PWR_TRK_5G_1],
 	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_2] = rtw8822b_pwrtrk_5gb_n[RTW_PWR_TRK_5G_2],
 	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_3] = rtw8822b_pwrtrk_5gb_n[RTW_PWR_TRK_5G_3],
@@ -2494,6 +2476,12 @@ static const struct rtw_pwr_track_tbl rtw8822b_rtw_pwr_track_tbl = {
 	.pwrtrk_2g_ccka_p = rtw8822b_pwrtrk_2g_cck_a_p,
 };
 
+static const struct rtw_rfe_def rtw8822b_rfe_defs[] = {
+	[2] = RTW_DEF_RFE(8822b, 2, 2, 0),
+	[3] = RTW_DEF_RFE(8822b, 3, 0, 0),
+	[5] = RTW_DEF_RFE(8822b, 5, 5, 0),
+};
+
 static const struct rtw_reg_domain coex_info_hw_regs_8822b[] = {
 	{0xcb0, MASKDWORD, RTW_REG_DOMAIN_MAC32},
 	{0xcb4, MASKDWORD, RTW_REG_DOMAIN_MAC32},
@@ -2521,7 +2509,7 @@ static const struct rtw_reg_domain coex_info_hw_regs_8822b[] = {
 	{0xc50,  MASKBYTE0, RTW_REG_DOMAIN_MAC8},
 };
 
-static struct rtw_hw_reg_offset rtw8822b_edcca_th[] = {
+static const struct rtw_hw_reg_offset rtw8822b_edcca_th[] = {
 	[EDCCA_TH_L2H_IDX] = {{.addr = 0x8a4, .mask = MASKBYTE0}, .offset = 0},
 	[EDCCA_TH_H2L_IDX] = {{.addr = 0x8a4, .mask = MASKBYTE1}, .offset = 0},
 };
@@ -2549,7 +2537,11 @@ const struct rtw_chip_info rtw8822b_hw_spec = {
 	.band = RTW_BAND_2G | RTW_BAND_5G,
 	.page_size = TX_PAGE_SIZE,
 	.dig_min = 0x1c,
+	.amsdu_in_ampdu = true,
 	.usb_tx_agg_desc_num = 3,
+	.hw_feature_report = true,
+	.c2h_ra_report_size = 7,
+	.old_datarate_fb_limit = false,
 	.ht_supported = true,
 	.vht_supported = true,
 	.lps_deep_mode_supported = BIT(LPS_DEEP_MODE_LCLK),
@@ -2571,7 +2563,6 @@ const struct rtw_chip_info rtw8822b_hw_spec = {
 	.rf_tbl = {&rtw8822b_rf_a_tbl, &rtw8822b_rf_b_tbl},
 	.rfe_defs = rtw8822b_rfe_defs,
 	.rfe_defs_size = ARRAY_SIZE(rtw8822b_rfe_defs),
-	.pwr_track_tbl = &rtw8822b_rtw_pwr_track_tbl,
 	.iqk_threshold = 8,
 	.bfer_su_max_num = 2,
 	.bfer_mu_max_num = 1,
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8822b.h b/drivers/net/wireless/realtek/rtw88/rtw8822b.h
index e815bc97c218..9fca9ba67c90 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8822b.h
+++ b/drivers/net/wireless/realtek/rtw88/rtw8822b.h
@@ -152,21 +152,12 @@ _rtw_write32s_mask(struct rtw_dev *rtwdev, u32 addr, u32 mask, u32 data)
 #define RTW8822B_EDCCA_MAX	0x7f
 #define RTW8822B_EDCCA_SRC_DEF	1
 #define REG_HTSTFWT	0x800
-#define REG_RXPSEL	0x808
-#define BIT_RX_PSEL_RST		(BIT(28) | BIT(29))
-#define REG_TXPSEL	0x80c
 #define REG_RXCCAMSK	0x814
-#define REG_CCASEL	0x82c
-#define REG_PDMFTH	0x830
-#define REG_CCA2ND	0x838
 #define REG_L1WT	0x83c
 #define REG_L1PKWT	0x840
 #define REG_MRC		0x850
-#define REG_CLKTRK	0x860
 #define REG_EDCCA_POW_MA	0x8a0
 #define BIT_MA_LEVEL	GENMASK(1, 0)
-#define REG_ADCCLK	0x8ac
-#define REG_ADC160	0x8c4
 #define REG_ADC40	0x8c8
 #define REG_EDCCA_DECISION	0x8dc
 #define BIT_EDCCA_OPTION	BIT(5)
@@ -177,7 +168,6 @@ _rtw_write32s_mask(struct rtw_dev *rtwdev, u32 addr, u32 mask, u32 data)
 #define REG_ACBB0	0x948
 #define REG_ACBBRXFIR	0x94c
 #define REG_ACGG2TBL	0x958
-#define REG_RXSB	0xa00
 #define REG_ADCINI	0xa04
 #define REG_TXSF2	0xa24
 #define REG_TXSF6	0xa28
@@ -185,14 +175,12 @@ _rtw_write32s_mask(struct rtw_dev *rtwdev, u32 addr, u32 mask, u32 data)
 #define REG_ENTXCCK	0xa80
 #define REG_AGCTR_A	0xc08
 #define REG_TXDFIR	0xc20
-#define REG_RXIGI_A	0xc50
 #define REG_TRSW	0xca0
 #define REG_RFESEL0	0xcb0
 #define REG_RFESEL8	0xcb4
 #define REG_RFECTL	0xcb8
 #define REG_RFEINV	0xcbc
 #define REG_AGCTR_B	0xe08
-#define REG_RXIGI_B	0xe50
 #define REG_ANTWT	0x1904
 #define REG_IQKFAILMSK	0x1bf0
 
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8822bs.c b/drivers/net/wireless/realtek/rtw88/rtw8822bs.c
index 31d8645f83bd..1ddef81dae0e 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8822bs.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8822bs.c
@@ -3,7 +3,7 @@
  */
 
 #include <linux/mmc/sdio_func.h>
-#include <linux/mmc/sdio_ids.h>
+#include "sdio_ids.h"
 #include <linux/module.h>
 #include "main.h"
 #include "rtw8822b.h"
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8822bu.c b/drivers/net/wireless/realtek/rtw88/rtw8822bu.c
index ab620a0b1dfc..572d1f31832e 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8822bu.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8822bu.c
@@ -67,6 +67,16 @@ static const struct usb_device_id rtw_8822bu_id_table[] = {
 	  .driver_info = (kernel_ulong_t)&(rtw8822b_hw_spec) }, /* LiteOn */
 	{ USB_DEVICE_AND_INTERFACE_INFO(0x20f4, 0x808a, 0xff, 0xff, 0xff),
 	  .driver_info = (kernel_ulong_t)&(rtw8822b_hw_spec) }, /* TRENDnet TEW-808UBM */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x20f4, 0x805a, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8822b_hw_spec) }, /* TRENDnet TEW-805UBH */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x056e, 0x4011, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8822b_hw_spec) }, /* ELECOM WDB-867DU3S */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2c4e, 0x0107, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8822b_hw_spec) }, /* Mercusys MA30H */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2c4e, 0x010a, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8822b_hw_spec) }, /* Mercusys MA30N */
+	{ USB_DEVICE_AND_INTERFACE_INFO(0x2001, 0x3322, 0xff, 0xff, 0xff),
+	  .driver_info = (kernel_ulong_t)&(rtw8822b_hw_spec) }, /* D-Link DWA-T185 rev. A1 */
 	{},
 };
 MODULE_DEVICE_TABLE(usb, rtw_8822bu_id_table);
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8822c.c b/drivers/net/wireless/realtek/rtw88/rtw8822c.c
index 1dbe1cdbc3fd..910bd36b4974 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8822c.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8822c.c
@@ -2690,48 +2690,6 @@ static void query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
 	}
 }
 
-static void rtw8822c_query_rx_desc(struct rtw_dev *rtwdev, u8 *rx_desc,
-				   struct rtw_rx_pkt_stat *pkt_stat,
-				   struct ieee80211_rx_status *rx_status)
-{
-	struct ieee80211_hdr *hdr;
-	u32 desc_sz = rtwdev->chip->rx_pkt_desc_sz;
-	u8 *phy_status = NULL;
-
-	memset(pkt_stat, 0, sizeof(*pkt_stat));
-
-	pkt_stat->phy_status = GET_RX_DESC_PHYST(rx_desc);
-	pkt_stat->icv_err = GET_RX_DESC_ICV_ERR(rx_desc);
-	pkt_stat->crc_err = GET_RX_DESC_CRC32(rx_desc);
-	pkt_stat->decrypted = !GET_RX_DESC_SWDEC(rx_desc) &&
-			      GET_RX_DESC_ENC_TYPE(rx_desc) != RX_DESC_ENC_NONE;
-	pkt_stat->is_c2h = GET_RX_DESC_C2H(rx_desc);
-	pkt_stat->pkt_len = GET_RX_DESC_PKT_LEN(rx_desc);
-	pkt_stat->drv_info_sz = GET_RX_DESC_DRV_INFO_SIZE(rx_desc);
-	pkt_stat->shift = GET_RX_DESC_SHIFT(rx_desc);
-	pkt_stat->rate = GET_RX_DESC_RX_RATE(rx_desc);
-	pkt_stat->cam_id = GET_RX_DESC_MACID(rx_desc);
-	pkt_stat->ppdu_cnt = GET_RX_DESC_PPDU_CNT(rx_desc);
-	pkt_stat->tsf_low = GET_RX_DESC_TSFL(rx_desc);
-
-	/* drv_info_sz is in unit of 8-bytes */
-	pkt_stat->drv_info_sz *= 8;
-
-	/* c2h cmd pkt's rx/phy status is not interested */
-	if (pkt_stat->is_c2h)
-		return;
-
-	hdr = (struct ieee80211_hdr *)(rx_desc + desc_sz + pkt_stat->shift +
-				       pkt_stat->drv_info_sz);
-	pkt_stat->hdr = hdr;
-	if (pkt_stat->phy_status) {
-		phy_status = rx_desc + desc_sz + pkt_stat->shift;
-		query_phy_status(rtwdev, phy_status, pkt_stat);
-	}
-
-	rtw_rx_fill_rx_status(rtwdev, pkt_stat, hdr, rx_status, phy_status);
-}
-
 static void
 rtw8822c_set_write_tx_power_ref(struct rtw_dev *rtwdev, u8 *tx_pwr_ref_cck,
 				u8 *tx_pwr_ref_ofdm)
@@ -2788,7 +2746,7 @@ static void rtw8822c_set_tx_power_index(struct rtw_dev *rtwdev)
 	s8 diff_idx[4];
 
 	rtw8822c_set_write_tx_power_ref(rtwdev, pwr_ref_cck, pwr_ref_ofdm);
-	for (rs = 0; rs < RTW_RATE_SECTION_MAX; rs++) {
+	for (rs = 0; rs <= __RTW_RATE_SECTION_2SS_MAX; rs++) {
 		for (j = 0; j < rtw_rate_size[rs]; j++) {
 			rate = rtw_rate_section[rs][j];
 			pwr_a = hal->tx_pwr_tbl[RF_PATH_A][rate];
@@ -2851,6 +2809,11 @@ static void rtw8822c_cfg_ldo25(struct rtw_dev *rtwdev, bool enable)
 	rtw_write8(rtwdev, REG_ANAPARLDO_POW_MAC, ldo_pwr);
 }
 
+static void rtw8822c_set_ampdu_factor(struct rtw_dev *rtwdev, u8 factor)
+{
+	rtw_write32(rtwdev, REG_AMPDU_MAX_LENGTH, (8192 << factor) - 1);
+}
+
 static void rtw8822c_false_alarm_statistics(struct rtw_dev *rtwdev)
 {
 	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
@@ -4579,6 +4542,24 @@ static void rtw8822c_adaptivity(struct rtw_dev *rtwdev)
 	rtw_phy_set_edcca_th(rtwdev, l2h, h2l);
 }
 
+static void rtw8822c_led_set(struct led_classdev *led,
+			     enum led_brightness brightness)
+{
+	struct rtw_dev *rtwdev = container_of(led, struct rtw_dev, led_cdev);
+	u32 ledcfg;
+
+	ledcfg = rtw_read32(rtwdev, REG_LED_CFG);
+	u32p_replace_bits(&ledcfg, BIT_LED_MODE_SW_CTRL, BIT_LED2_CM);
+	ledcfg &= ~BIT_GPIO13_14_WL_CTRL_EN;
+
+	if (brightness == LED_OFF)
+		ledcfg |= BIT_LED2_SV;
+	else
+		ledcfg &= ~BIT_LED2_SV;
+
+	rtw_write32(rtwdev, REG_LED_CFG, ledcfg);
+}
+
 static void rtw8822c_fill_txdesc_checksum(struct rtw_dev *rtwdev,
 					  struct rtw_tx_pkt_info *pkt_info,
 					  u8 *txdesc)
@@ -4874,13 +4855,13 @@ static const struct rtw_pwr_seq_cmd trans_cardemu_to_carddis_8822c[] = {
 	 RTW_PWR_CMD_END, 0, 0},
 };
 
-static const struct rtw_pwr_seq_cmd *card_enable_flow_8822c[] = {
+static const struct rtw_pwr_seq_cmd * const card_enable_flow_8822c[] = {
 	trans_carddis_to_cardemu_8822c,
 	trans_cardemu_to_act_8822c,
 	NULL
 };
 
-static const struct rtw_pwr_seq_cmd *card_disable_flow_8822c[] = {
+static const struct rtw_pwr_seq_cmd * const card_disable_flow_8822c[] = {
 	trans_act_to_cardemu_8822c,
 	trans_cardemu_to_carddis_8822c,
 	NULL
@@ -4925,16 +4906,6 @@ static const struct rtw_intf_phy_para_table phy_para_table_8822c = {
 	.n_gen2_para	= ARRAY_SIZE(pcie_gen2_param_8822c),
 };
 
-static const struct rtw_rfe_def rtw8822c_rfe_defs[] = {
-	[0] = RTW_DEF_RFE(8822c, 0, 0),
-	[1] = RTW_DEF_RFE(8822c, 0, 0),
-	[2] = RTW_DEF_RFE(8822c, 0, 0),
-	[3] = RTW_DEF_RFE(8822c, 0, 0),
-	[4] = RTW_DEF_RFE(8822c, 0, 0),
-	[5] = RTW_DEF_RFE(8822c, 0, 5),
-	[6] = RTW_DEF_RFE(8822c, 0, 0),
-};
-
 static const struct rtw_hw_reg rtw8822c_dig[] = {
 	[0] = { .addr = 0x1d70, .mask = 0x7f },
 	[1] = { .addr = 0x1d70, .mask = 0x7f00 },
@@ -4972,7 +4943,7 @@ static const struct rtw_rqpn rqpn_table_8822c[] = {
 	 RTW_DMA_MAPPING_EXTRA, RTW_DMA_MAPPING_HIGH},
 };
 
-static struct rtw_prioq_addrs prioq_addrs_8822c = {
+static const struct rtw_prioq_addrs prioq_addrs_8822c = {
 	.prio[RTW_DMA_MAPPING_EXTRA] = {
 		.rsvd = REG_FIFOPAGE_INFO_4, .avail = REG_FIFOPAGE_INFO_4 + 2,
 	},
@@ -4988,10 +4959,12 @@ static struct rtw_prioq_addrs prioq_addrs_8822c = {
 	.wsize = true,
 };
 
-static struct rtw_chip_ops rtw8822c_ops = {
+static const struct rtw_chip_ops rtw8822c_ops = {
+	.power_on		= rtw_power_on,
+	.power_off		= rtw_power_off,
 	.phy_set_param		= rtw8822c_phy_set_param,
 	.read_efuse		= rtw8822c_read_efuse,
-	.query_rx_desc		= rtw8822c_query_rx_desc,
+	.query_phy_status	= query_phy_status,
 	.set_channel		= rtw8822c_set_channel,
 	.mac_init		= rtw8822c_mac_init,
 	.dump_fw_crash		= rtw8822c_dump_fw_crash,
@@ -5000,6 +4973,7 @@ static struct rtw_chip_ops rtw8822c_ops = {
 	.set_tx_power_index	= rtw8822c_set_tx_power_index,
 	.set_antenna		= rtw8822c_set_antenna,
 	.cfg_ldo25		= rtw8822c_cfg_ldo25,
+	.set_ampdu_factor	= rtw8822c_set_ampdu_factor,
 	.false_alarm_statistics	= rtw8822c_false_alarm_statistics,
 	.dpk_track		= rtw8822c_dpk_track,
 	.phy_calibration	= rtw8822c_phy_calibration,
@@ -5014,6 +4988,7 @@ static struct rtw_chip_ops rtw8822c_ops = {
 	.cfo_track		= rtw8822c_cfo_track,
 	.config_tx_path		= rtw8822c_config_tx_path,
 	.config_txrx_mode	= rtw8822c_config_trx_mode,
+	.led_set		= rtw8822c_led_set,
 	.fill_txdesc_checksum	= rtw8822c_fill_txdesc_checksum,
 
 	.coex_set_init		= rtw8822c_coex_cfg_init,
@@ -5278,7 +5253,7 @@ static const u8 rtw8822c_pwrtrk_2g_cck_a_p[RTW_PWR_TRK_TBL_SZ] = {
 	18, 18, 19, 20, 21, 22, 23, 24, 24, 25
 };
 
-static const struct rtw_pwr_track_tbl rtw8822c_rtw_pwr_track_tbl = {
+static const struct rtw_pwr_track_tbl rtw8822c_pwr_track_type0_tbl = {
 	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_1] = rtw8822c_pwrtrk_5gb_n[RTW_PWR_TRK_5G_1],
 	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_2] = rtw8822c_pwrtrk_5gb_n[RTW_PWR_TRK_5G_2],
 	.pwrtrk_5gb_n[RTW_PWR_TRK_5G_3] = rtw8822c_pwrtrk_5gb_n[RTW_PWR_TRK_5G_3],
@@ -5301,7 +5276,17 @@ static const struct rtw_pwr_track_tbl rtw8822c_rtw_pwr_track_tbl = {
 	.pwrtrk_2g_ccka_p = rtw8822c_pwrtrk_2g_cck_a_p,
 };
 
-static struct rtw_hw_reg_offset rtw8822c_edcca_th[] = {
+static const struct rtw_rfe_def rtw8822c_rfe_defs[] = {
+	[0] = RTW_DEF_RFE(8822c, 0, 0, 0),
+	[1] = RTW_DEF_RFE(8822c, 0, 0, 0),
+	[2] = RTW_DEF_RFE(8822c, 0, 0, 0),
+	[3] = RTW_DEF_RFE(8822c, 0, 0, 0),
+	[4] = RTW_DEF_RFE(8822c, 0, 0, 0),
+	[5] = RTW_DEF_RFE(8822c, 0, 5, 0),
+	[6] = RTW_DEF_RFE(8822c, 0, 0, 0),
+};
+
+static const struct rtw_hw_reg_offset rtw8822c_edcca_th[] = {
 	[EDCCA_TH_L2H_IDX] = {
 		{.addr = 0x84c, .mask = MASKBYTE2}, .offset = 0x80
 	},
@@ -5370,7 +5355,11 @@ const struct rtw_chip_info rtw8822c_hw_spec = {
 	.band = RTW_BAND_2G | RTW_BAND_5G,
 	.page_size = TX_PAGE_SIZE,
 	.dig_min = 0x20,
+	.amsdu_in_ampdu = true,
 	.usb_tx_agg_desc_num = 3,
+	.hw_feature_report = true,
+	.c2h_ra_report_size = 7,
+	.old_datarate_fb_limit = false,
 	.default_1ss_tx_path = BB_PATH_A,
 	.path_div_supported = true,
 	.ht_supported = true,
@@ -5397,7 +5386,6 @@ const struct rtw_chip_info rtw8822c_hw_spec = {
 	.rfe_defs_size = ARRAY_SIZE(rtw8822c_rfe_defs),
 	.en_dis_dpd = true,
 	.dpd_ratemask = DIS_DPD_RATEALL,
-	.pwr_track_tbl = &rtw8822c_rtw_pwr_track_tbl,
 	.iqk_threshold = 8,
 	.lck_threshold = 8,
 	.bfer_su_max_num = 2,
diff --git a/drivers/net/wireless/realtek/rtw88/rtw8822cs.c b/drivers/net/wireless/realtek/rtw88/rtw8822cs.c
index 975e81c824f2..5d68b9aa5fd7 100644
--- a/drivers/net/wireless/realtek/rtw88/rtw8822cs.c
+++ b/drivers/net/wireless/realtek/rtw88/rtw8822cs.c
@@ -3,7 +3,7 @@
  */
 
 #include <linux/mmc/sdio_func.h>
-#include <linux/mmc/sdio_ids.h>
+#include "sdio_ids.h"
 #include <linux/module.h>
 #include "main.h"
 #include "rtw8822c.h"
diff --git a/drivers/net/wireless/realtek/rtw88/rtw88xxa.c b/drivers/net/wireless/realtek/rtw88/rtw88xxa.c
new file mode 100644
index 000000000000..0fa943271fb6
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw88xxa.c
@@ -0,0 +1,1989 @@
+// SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#include <linux/usb.h>
+#include "main.h"
+#include "coex.h"
+#include "phy.h"
+#include "rtw88xxa.h"
+#include "mac.h"
+#include "reg.h"
+#include "sec.h"
+#include "debug.h"
+#include "bf.h"
+#include "efuse.h"
+#include "usb.h"
+
+void rtw88xxa_efuse_grant(struct rtw_dev *rtwdev, bool on)
+{
+	if (on) {
+		rtw_write8(rtwdev, REG_EFUSE_ACCESS, EFUSE_ACCESS_ON);
+
+		rtw_write16_set(rtwdev, REG_SYS_FUNC_EN, BIT_FEN_ELDR);
+		rtw_write16_set(rtwdev, REG_SYS_CLKR,
+				BIT_LOADER_CLK_EN | BIT_ANA8M);
+	} else {
+		rtw_write8(rtwdev, REG_EFUSE_ACCESS, EFUSE_ACCESS_OFF);
+	}
+}
+EXPORT_SYMBOL(rtw88xxa_efuse_grant);
+
+static void rtw8812a_read_amplifier_type(struct rtw_dev *rtwdev)
+{
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+
+	efuse->ext_pa_2g = (efuse->pa_type_2g & BIT(5)) &&
+			   (efuse->pa_type_2g & BIT(4));
+	efuse->ext_lna_2g = (efuse->lna_type_2g & BIT(7)) &&
+			    (efuse->lna_type_2g & BIT(3));
+
+	efuse->ext_pa_5g = (efuse->pa_type_5g & BIT(1)) &&
+			   (efuse->pa_type_5g & BIT(0));
+	efuse->ext_lna_5g = (efuse->lna_type_5g & BIT(7)) &&
+			    (efuse->lna_type_5g & BIT(3));
+
+	/* For rtw_phy_cond2: */
+	if (efuse->ext_pa_2g) {
+		u8 ext_type_pa_2g_a = u8_get_bits(efuse->lna_type_2g, BIT(2));
+		u8 ext_type_pa_2g_b = u8_get_bits(efuse->lna_type_2g, BIT(6));
+
+		efuse->gpa_type = (ext_type_pa_2g_b << 2) | ext_type_pa_2g_a;
+	}
+
+	if (efuse->ext_pa_5g) {
+		u8 ext_type_pa_5g_a = u8_get_bits(efuse->lna_type_5g, BIT(2));
+		u8 ext_type_pa_5g_b = u8_get_bits(efuse->lna_type_5g, BIT(6));
+
+		efuse->apa_type = (ext_type_pa_5g_b << 2) | ext_type_pa_5g_a;
+	}
+
+	if (efuse->ext_lna_2g) {
+		u8 ext_type_lna_2g_a = u8_get_bits(efuse->lna_type_2g,
+						   BIT(1) | BIT(0));
+		u8 ext_type_lna_2g_b = u8_get_bits(efuse->lna_type_2g,
+						   BIT(5) | BIT(4));
+
+		efuse->glna_type = (ext_type_lna_2g_b << 2) | ext_type_lna_2g_a;
+	}
+
+	if (efuse->ext_lna_5g) {
+		u8 ext_type_lna_5g_a = u8_get_bits(efuse->lna_type_5g,
+						   BIT(1) | BIT(0));
+		u8 ext_type_lna_5g_b = u8_get_bits(efuse->lna_type_5g,
+						   BIT(5) | BIT(4));
+
+		efuse->alna_type = (ext_type_lna_5g_b << 2) | ext_type_lna_5g_a;
+	}
+}
+
+static void rtw8812a_read_rfe_type(struct rtw_dev *rtwdev,
+				   struct rtw88xxa_efuse *map)
+{
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+
+	if (map->rfe_option == 0xff) {
+		if (rtwdev->hci.type == RTW_HCI_TYPE_USB)
+			efuse->rfe_option = 0;
+		else if (rtwdev->hci.type == RTW_HCI_TYPE_PCIE)
+			efuse->rfe_option = 2;
+		else
+			efuse->rfe_option = 4;
+	} else if (map->rfe_option & BIT(7)) {
+		if (efuse->ext_lna_5g) {
+			if (efuse->ext_pa_5g) {
+				if (efuse->ext_lna_2g && efuse->ext_pa_2g)
+					efuse->rfe_option = 3;
+				else
+					efuse->rfe_option = 0;
+			} else {
+				efuse->rfe_option = 2;
+			}
+		} else {
+			efuse->rfe_option = 4;
+		}
+	} else {
+		efuse->rfe_option = map->rfe_option & 0x3f;
+
+		/* Due to other customer already use incorrect EFUSE map for
+		 * their product. We need to add workaround to prevent to
+		 * modify spec and notify all customer to revise the IC 0xca
+		 * content.
+		 */
+		if (efuse->rfe_option == 4 &&
+		    (efuse->ext_pa_5g || efuse->ext_pa_2g ||
+		     efuse->ext_lna_5g || efuse->ext_lna_2g)) {
+			if (rtwdev->hci.type == RTW_HCI_TYPE_USB)
+				efuse->rfe_option = 0;
+			else if (rtwdev->hci.type == RTW_HCI_TYPE_PCIE)
+				efuse->rfe_option = 2;
+		}
+	}
+}
+
+static void rtw88xxa_read_usb_type(struct rtw_dev *rtwdev)
+{
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+	struct rtw_hal *hal = &rtwdev->hal;
+	u8 antenna = 0;
+	u8 wmode = 0;
+	u8 val8, i;
+
+	efuse->hw_cap.bw = BIT(RTW_CHANNEL_WIDTH_20) |
+			   BIT(RTW_CHANNEL_WIDTH_40) |
+			   BIT(RTW_CHANNEL_WIDTH_80);
+	efuse->hw_cap.ptcl = EFUSE_HW_CAP_PTCL_VHT;
+
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8821A)
+		efuse->hw_cap.nss = 1;
+	else
+		efuse->hw_cap.nss = 2;
+
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8821A)
+		goto print_hw_cap;
+
+	for (i = 0; i < 2; i++) {
+		rtw_read8_physical_efuse(rtwdev, 1019 - i, &val8);
+
+		antenna = u8_get_bits(val8, GENMASK(7, 5));
+		if (antenna)
+			break;
+		antenna = u8_get_bits(val8, GENMASK(3, 1));
+		if (antenna)
+			break;
+	}
+
+	for (i = 0; i < 2; i++) {
+		rtw_read8_physical_efuse(rtwdev, 1021 - i, &val8);
+
+		wmode = u8_get_bits(val8, GENMASK(3, 2));
+		if (wmode)
+			break;
+	}
+
+	if (antenna == 1) {
+		rtw_info(rtwdev, "This RTL8812AU says it is 1T1R.\n");
+
+		efuse->hw_cap.nss = 1;
+		hal->rf_type = RF_1T1R;
+		hal->rf_path_num = 1;
+		hal->rf_phy_num = 1;
+		hal->antenna_tx = BB_PATH_A;
+		hal->antenna_rx = BB_PATH_A;
+	} else {
+		/* Override rtw_chip_parameter_setup(). It detects 8812au as 1T1R. */
+		efuse->hw_cap.nss = 2;
+		hal->rf_type = RF_2T2R;
+		hal->rf_path_num = 2;
+		hal->rf_phy_num = 2;
+		hal->antenna_tx = BB_PATH_AB;
+		hal->antenna_rx = BB_PATH_AB;
+
+		if (antenna == 2 && wmode == 2) {
+			rtw_info(rtwdev, "This RTL8812AU says it can't do VHT.\n");
+
+			/* Can't be EFUSE_HW_CAP_IGNORE and can't be
+			 * EFUSE_HW_CAP_PTCL_VHT, so make it 1.
+			 */
+			efuse->hw_cap.ptcl = 1;
+			efuse->hw_cap.bw &= ~BIT(RTW_CHANNEL_WIDTH_80);
+		}
+	}
+
+print_hw_cap:
+	rtw_dbg(rtwdev, RTW_DBG_EFUSE,
+		"hw cap: hci=0x%02x, bw=0x%02x, ptcl=0x%02x, ant_num=%d, nss=%d\n",
+		efuse->hw_cap.hci, efuse->hw_cap.bw, efuse->hw_cap.ptcl,
+		efuse->hw_cap.ant_num, efuse->hw_cap.nss);
+}
+
+int rtw88xxa_read_efuse(struct rtw_dev *rtwdev, u8 *log_map)
+{
+	const struct rtw_chip_info *chip = rtwdev->chip;
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+	struct rtw88xxa_efuse *map;
+	int i;
+
+	if (chip->id == RTW_CHIP_TYPE_8812A)
+		rtwdev->hal.cut_version += 1;
+
+	if (rtw_dbg_is_enabled(rtwdev, RTW_DBG_EFUSE))
+		print_hex_dump(KERN_INFO, "", DUMP_PREFIX_OFFSET, 16, 1,
+			       log_map, chip->log_efuse_size, true);
+
+	map = (struct rtw88xxa_efuse *)log_map;
+
+	efuse->rf_board_option = map->rf_board_option;
+	efuse->crystal_cap = map->xtal_k;
+	if (efuse->crystal_cap == 0xff)
+		efuse->crystal_cap = 0x20;
+	efuse->pa_type_2g = map->pa_type;
+	efuse->pa_type_5g = map->pa_type;
+	efuse->lna_type_2g = map->lna_type_2g;
+	efuse->lna_type_5g = map->lna_type_5g;
+	if (chip->id == RTW_CHIP_TYPE_8812A) {
+		rtw8812a_read_amplifier_type(rtwdev);
+		rtw8812a_read_rfe_type(rtwdev, map);
+
+		efuse->usb_mode_switch = u8_get_bits(map->usb_mode, BIT(1));
+	}
+	efuse->channel_plan = map->channel_plan;
+	efuse->country_code[0] = map->country_code[0];
+	efuse->country_code[1] = map->country_code[1];
+	efuse->bt_setting = map->rf_bt_setting;
+	efuse->regd = map->rf_board_option & 0x7;
+	efuse->thermal_meter[0] = map->thermal_meter;
+	efuse->thermal_meter[1] = map->thermal_meter;
+	efuse->thermal_meter_k = map->thermal_meter;
+	efuse->tx_bb_swing_setting_2g = map->tx_bb_swing_setting_2g;
+	efuse->tx_bb_swing_setting_5g = map->tx_bb_swing_setting_5g;
+
+	rtw88xxa_read_usb_type(rtwdev);
+
+	if (chip->id == RTW_CHIP_TYPE_8821A)
+		efuse->btcoex = rtw_read32_mask(rtwdev, REG_WL_BT_PWR_CTRL,
+						BIT_BT_FUNC_EN);
+	else
+		efuse->btcoex = (map->rf_board_option & 0xe0) == 0x20;
+	efuse->share_ant = !!(efuse->bt_setting & BIT(0));
+
+	/* No antenna diversity because it's disabled in the vendor driver */
+	efuse->ant_div_cfg = 0;
+
+	efuse->ant_div_type = map->rf_antenna_option;
+	if (efuse->ant_div_type == 0xff)
+		efuse->ant_div_type = 0x3;
+
+	for (i = 0; i < 4; i++)
+		efuse->txpwr_idx_table[i] = map->txpwr_idx_table[i];
+
+	switch (rtw_hci_type(rtwdev)) {
+	case RTW_HCI_TYPE_USB:
+		if (chip->id == RTW_CHIP_TYPE_8821A)
+			ether_addr_copy(efuse->addr, map->rtw8821au.mac_addr);
+		else
+			ether_addr_copy(efuse->addr, map->rtw8812au.mac_addr);
+		break;
+	case RTW_HCI_TYPE_PCIE:
+	case RTW_HCI_TYPE_SDIO:
+	default:
+		/* unsupported now */
+		return -EOPNOTSUPP;
+	}
+
+	return 0;
+}
+EXPORT_SYMBOL(rtw88xxa_read_efuse);
+
+static void rtw88xxa_reset_8051(struct rtw_dev *rtwdev)
+{
+	const struct rtw_chip_info *chip = rtwdev->chip;
+	u8 val8;
+
+	/* Reset MCU IO Wrapper */
+	rtw_write8_clr(rtwdev, REG_RSV_CTRL, BIT(1));
+	if (chip->id == RTW_CHIP_TYPE_8812A)
+		rtw_write8_clr(rtwdev, REG_RSV_CTRL + 1, BIT(3));
+	else
+		rtw_write8_clr(rtwdev, REG_RSV_CTRL + 1, BIT(0));
+
+	val8 = rtw_read8(rtwdev, REG_SYS_FUNC_EN + 1);
+	rtw_write8(rtwdev, REG_SYS_FUNC_EN + 1, val8 & ~BIT(2));
+
+	/* Enable MCU IO Wrapper */
+	rtw_write8_clr(rtwdev, REG_RSV_CTRL, BIT(1));
+	if (chip->id == RTW_CHIP_TYPE_8812A)
+		rtw_write8_set(rtwdev, REG_RSV_CTRL + 1, BIT(3));
+	else
+		rtw_write8_set(rtwdev, REG_RSV_CTRL + 1, BIT(0));
+
+	rtw_write8(rtwdev, REG_SYS_FUNC_EN + 1, val8 | BIT(2));
+}
+
+/* A lightweight deinit function */
+static void rtw88xxau_hw_reset(struct rtw_dev *rtwdev)
+{
+	u8 val8;
+
+	if (!(rtw_read8(rtwdev, REG_MCUFW_CTRL) & BIT_RAM_DL_SEL))
+		return;
+
+	rtw88xxa_reset_8051(rtwdev);
+	rtw_write8(rtwdev, REG_MCUFW_CTRL, 0x00);
+
+	/* before BB reset should do clock gated */
+	rtw_write32_set(rtwdev, REG_FPGA0_XCD_RF_PARA, BIT(6));
+
+	/* reset BB */
+	rtw_write8_clr(rtwdev, REG_SYS_FUNC_EN, BIT(0) | BIT(1));
+
+	/* reset RF */
+	rtw_write8(rtwdev, REG_RF_CTRL, 0);
+
+	/* reset TRX path */
+	rtw_write16(rtwdev, REG_CR, 0);
+
+	/* reset MAC, reg0x5[1], auto FSM off */
+	rtw_write8_set(rtwdev, REG_APS_FSMCO + 1, APS_FSMCO_MAC_OFF >> 8);
+
+	/* check if reg0x5[1] auto cleared */
+	if (read_poll_timeout_atomic(rtw_read8, val8,
+				     !(val8 & (APS_FSMCO_MAC_OFF >> 8)),
+				     1, 5000, false,
+				     rtwdev, REG_APS_FSMCO + 1))
+		rtw_err(rtwdev, "%s: timed out waiting for 0x5[1]\n", __func__);
+
+	/* reg0x5[0], auto FSM on */
+	val8 |= APS_FSMCO_MAC_ENABLE >> 8;
+	rtw_write8(rtwdev, REG_APS_FSMCO + 1, val8);
+
+	rtw_write8_clr(rtwdev, REG_SYS_FUNC_EN + 1, BIT(4) | BIT(7));
+	rtw_write8_set(rtwdev, REG_SYS_FUNC_EN + 1, BIT(4) | BIT(7));
+}
+
+static int rtw88xxau_init_power_on(struct rtw_dev *rtwdev)
+{
+	const struct rtw_chip_info *chip = rtwdev->chip;
+	u16 val16;
+	int ret;
+
+	ret = rtw_pwr_seq_parser(rtwdev, chip->pwr_on_seq);
+	if (ret) {
+		rtw_err(rtwdev, "power on flow failed\n");
+		return ret;
+	}
+
+	rtw_write16(rtwdev, REG_CR, 0);
+	val16 = BIT_HCI_TXDMA_EN | BIT_HCI_RXDMA_EN | BIT_TXDMA_EN |
+		BIT_RXDMA_EN | BIT_PROTOCOL_EN | BIT_SCHEDULE_EN |
+		BIT_MAC_SEC_EN | BIT_32K_CAL_TMR_EN;
+	rtw_write16_set(rtwdev, REG_CR, val16);
+
+	if (chip->id == RTW_CHIP_TYPE_8821A) {
+		if (rtw_read8(rtwdev, REG_SYS_CFG1 + 3) & BIT(0))
+			rtw_write8_set(rtwdev, REG_LDO_SWR_CTRL, BIT(6));
+	}
+
+	return ret;
+}
+
+static int rtw88xxa_llt_write(struct rtw_dev *rtwdev, u32 address, u32 data)
+{
+	u32 value = BIT_LLT_WRITE_ACCESS | (address << 8) | data;
+	int count = 0;
+
+	rtw_write32(rtwdev, REG_LLT_INIT, value);
+
+	do {
+		if (!rtw_read32_mask(rtwdev, REG_LLT_INIT, BIT(31) | BIT(30)))
+			break;
+
+		if (count > 20) {
+			rtw_err(rtwdev, "Failed to poll write LLT done at %d!\n",
+				address);
+			return -EBUSY;
+		}
+	} while (++count);
+
+	return 0;
+}
+
+static int rtw88xxa_llt_init(struct rtw_dev *rtwdev, u32 boundary)
+{
+	u32 last_entry = 255;
+	int status = 0;
+	u32 i;
+
+	for (i = 0; i < boundary - 1; i++) {
+		status = rtw88xxa_llt_write(rtwdev, i, i + 1);
+		if (status)
+			return status;
+	}
+
+	status = rtw88xxa_llt_write(rtwdev, boundary - 1, 0xFF);
+	if (status)
+		return status;
+
+	for (i = boundary; i < last_entry; i++) {
+		status = rtw88xxa_llt_write(rtwdev, i, i + 1);
+		if (status)
+			return status;
+	}
+
+	status = rtw88xxa_llt_write(rtwdev, last_entry, boundary);
+
+	return status;
+}
+
+static void rtw88xxau_init_queue_reserved_page(struct rtw_dev *rtwdev)
+{
+	const struct rtw_chip_info *chip = rtwdev->chip;
+	struct rtw_fifo_conf *fifo = &rtwdev->fifo;
+	const struct rtw_page_table *pg_tbl = NULL;
+	u16 pubq_num;
+	u32 val32;
+
+	switch (rtw_hci_type(rtwdev)) {
+	case RTW_HCI_TYPE_PCIE:
+		pg_tbl = &chip->page_table[1];
+		break;
+	case RTW_HCI_TYPE_USB:
+		if (rtwdev->hci.bulkout_num == 2)
+			pg_tbl = &chip->page_table[2];
+		else if (rtwdev->hci.bulkout_num == 3)
+			pg_tbl = &chip->page_table[3];
+		else if (rtwdev->hci.bulkout_num == 4)
+			pg_tbl = &chip->page_table[4];
+		break;
+	case RTW_HCI_TYPE_SDIO:
+		pg_tbl = &chip->page_table[0];
+		break;
+	default:
+		break;
+	}
+
+	pubq_num = fifo->acq_pg_num - pg_tbl->hq_num - pg_tbl->lq_num -
+		   pg_tbl->nq_num - pg_tbl->exq_num - pg_tbl->gapq_num;
+
+	val32 = BIT_RQPN_NE(pg_tbl->nq_num, pg_tbl->exq_num);
+	rtw_write32(rtwdev, REG_RQPN_NPQ, val32);
+
+	val32 = BIT_RQPN_HLP(pg_tbl->hq_num, pg_tbl->lq_num, pubq_num);
+	rtw_write32(rtwdev, REG_RQPN, val32);
+}
+
+static void rtw88xxau_init_tx_buffer_boundary(struct rtw_dev *rtwdev)
+{
+	struct rtw_fifo_conf *fifo = &rtwdev->fifo;
+
+	rtw_write8(rtwdev, REG_BCNQ_BDNY, fifo->rsvd_boundary);
+	rtw_write8(rtwdev, REG_MGQ_BDNY, fifo->rsvd_boundary);
+	rtw_write8(rtwdev, REG_WMAC_LBK_BF_HD, fifo->rsvd_boundary);
+	rtw_write8(rtwdev, REG_TRXFF_BNDY, fifo->rsvd_boundary);
+	rtw_write8(rtwdev, REG_DWBCN0_CTRL + 1, fifo->rsvd_boundary);
+}
+
+static int rtw88xxau_init_queue_priority(struct rtw_dev *rtwdev)
+{
+	const struct rtw_chip_info *chip = rtwdev->chip;
+	u8 bulkout_num = rtwdev->hci.bulkout_num;
+	const struct rtw_rqpn *rqpn = NULL;
+	u16 txdma_pq_map;
+
+	switch (rtw_hci_type(rtwdev)) {
+	case RTW_HCI_TYPE_PCIE:
+		rqpn = &chip->rqpn_table[1];
+		break;
+	case RTW_HCI_TYPE_USB:
+		if (bulkout_num == 2)
+			rqpn = &chip->rqpn_table[2];
+		else if (bulkout_num == 3)
+			rqpn = &chip->rqpn_table[3];
+		else if (bulkout_num == 4)
+			rqpn = &chip->rqpn_table[4];
+		else
+			return -EINVAL;
+		break;
+	case RTW_HCI_TYPE_SDIO:
+		rqpn = &chip->rqpn_table[0];
+		break;
+	default:
+		return -EINVAL;
+	}
+
+	rtwdev->fifo.rqpn = rqpn;
+
+	txdma_pq_map = rtw_read16(rtwdev, REG_TXDMA_PQ_MAP) & 0x7;
+	txdma_pq_map |= BIT_TXDMA_HIQ_MAP(rqpn->dma_map_hi);
+	txdma_pq_map |= BIT_TXDMA_MGQ_MAP(rqpn->dma_map_mg);
+	txdma_pq_map |= BIT_TXDMA_BKQ_MAP(rqpn->dma_map_bk);
+	txdma_pq_map |= BIT_TXDMA_BEQ_MAP(rqpn->dma_map_be);
+	txdma_pq_map |= BIT_TXDMA_VIQ_MAP(rqpn->dma_map_vi);
+	txdma_pq_map |= BIT_TXDMA_VOQ_MAP(rqpn->dma_map_vo);
+	rtw_write16(rtwdev, REG_TXDMA_PQ_MAP, txdma_pq_map);
+
+	/* Packet in Hi Queue Tx immediately (No constraint for ATIM Period). */
+	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_USB && bulkout_num == 4)
+		rtw_write8(rtwdev, REG_HIQ_NO_LMT_EN, 0xff);
+
+	return 0;
+}
+
+static void rtw88xxa_init_wmac_setting(struct rtw_dev *rtwdev)
+{
+	rtw_write16(rtwdev, REG_RXFLTMAP0, 0xffff);
+	rtw_write16(rtwdev, REG_RXFLTMAP1, 0x0400);
+	rtw_write16(rtwdev, REG_RXFLTMAP2, 0xffff);
+
+	rtw_write32(rtwdev, REG_MAR, 0xffffffff);
+	rtw_write32(rtwdev, REG_MAR + 4, 0xffffffff);
+}
+
+static void rtw88xxa_init_adaptive_ctrl(struct rtw_dev *rtwdev)
+{
+	rtw_write32_mask(rtwdev, REG_RRSR, 0xfffff, 0xffff1);
+	rtw_write16(rtwdev, REG_RETRY_LIMIT, 0x3030);
+}
+
+static void rtw88xxa_init_edca(struct rtw_dev *rtwdev)
+{
+	rtw_write16(rtwdev, REG_SPEC_SIFS, 0x100a);
+	rtw_write16(rtwdev, REG_MAC_SPEC_SIFS, 0x100a);
+
+	rtw_write16(rtwdev, REG_SIFS, 0x100a);
+	rtw_write16(rtwdev, REG_SIFS + 2, 0x100a);
+
+	rtw_write32(rtwdev, REG_EDCA_BE_PARAM, 0x005EA42B);
+	rtw_write32(rtwdev, REG_EDCA_BK_PARAM, 0x0000A44F);
+	rtw_write32(rtwdev, REG_EDCA_VI_PARAM, 0x005EA324);
+	rtw_write32(rtwdev, REG_EDCA_VO_PARAM, 0x002FA226);
+
+	rtw_write8(rtwdev, REG_USTIME_TSF, 0x50);
+	rtw_write8(rtwdev, REG_USTIME_EDCA, 0x50);
+}
+
+static void rtw88xxau_tx_aggregation(struct rtw_dev *rtwdev)
+{
+	const struct rtw_chip_info *chip = rtwdev->chip;
+
+	rtw_write32_mask(rtwdev, REG_DWBCN0_CTRL, 0xf0,
+			 chip->usb_tx_agg_desc_num);
+
+	if (chip->id == RTW_CHIP_TYPE_8821A)
+		rtw_write8(rtwdev, REG_DWBCN1_CTRL,
+			   chip->usb_tx_agg_desc_num << 1);
+}
+
+static void rtw88xxa_init_beacon_parameters(struct rtw_dev *rtwdev)
+{
+	u16 val16;
+
+	val16 = (BIT_DIS_TSF_UDT << 8) | BIT_DIS_TSF_UDT;
+	if (rtwdev->efuse.btcoex)
+		val16 |= BIT_EN_BCN_FUNCTION;
+	rtw_write16(rtwdev, REG_BCN_CTRL, val16);
+
+	rtw_write32_mask(rtwdev, REG_TBTT_PROHIBIT, 0xfffff, WLAN_TBTT_TIME);
+	rtw_write8(rtwdev, REG_DRVERLYINT, 0x05);
+	rtw_write8(rtwdev, REG_BCNDMATIM, WLAN_BCN_DMA_TIME);
+	rtw_write16(rtwdev, REG_BCNTCFG, 0x4413);
+}
+
+static void rtw88xxa_phy_bb_config(struct rtw_dev *rtwdev)
+{
+	u8 val8, crystal_cap;
+
+	/* power on BB/RF domain */
+	val8 = rtw_read8(rtwdev, REG_SYS_FUNC_EN);
+	val8 |= BIT_FEN_USBA;
+	rtw_write8(rtwdev, REG_SYS_FUNC_EN, val8);
+
+	/* toggle BB reset */
+	val8 |= BIT_FEN_BB_RSTB | BIT_FEN_BB_GLB_RST;
+	rtw_write8(rtwdev, REG_SYS_FUNC_EN, val8);
+
+	rtw_write8(rtwdev, REG_RF_CTRL,
+		   BIT_RF_EN | BIT_RF_RSTB | BIT_RF_SDM_RSTB);
+	rtw_write8(rtwdev, REG_RF_B_CTRL,
+		   BIT_RF_EN | BIT_RF_RSTB | BIT_RF_SDM_RSTB);
+
+	rtw_load_table(rtwdev, rtwdev->chip->bb_tbl);
+	rtw_load_table(rtwdev, rtwdev->chip->agc_tbl);
+
+	crystal_cap = rtwdev->efuse.crystal_cap & 0x3F;
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8812A)
+		rtw_write32_mask(rtwdev, REG_AFE_CTRL3, 0x7FF80000,
+				 crystal_cap | (crystal_cap << 6));
+	else
+		rtw_write32_mask(rtwdev, REG_AFE_CTRL3, 0x00FFF000,
+				 crystal_cap | (crystal_cap << 6));
+}
+
+static void rtw88xxa_phy_rf_config(struct rtw_dev *rtwdev)
+{
+	u8 rf_path;
+
+	for (rf_path = 0; rf_path < rtwdev->hal.rf_path_num; rf_path++)
+		rtw_load_table(rtwdev, rtwdev->chip->rf_tbl[rf_path]);
+}
+
+static void rtw8812a_config_1t(struct rtw_dev *rtwdev)
+{
+	/* BB OFDM RX Path_A */
+	rtw_write32_mask(rtwdev, REG_RXPSEL, 0xff, 0x11);
+
+	/* BB OFDM TX Path_A */
+	rtw_write32_mask(rtwdev, REG_TXPSEL, MASKLWORD, 0x1111);
+
+	/* BB CCK R/Rx Path_A */
+	rtw_write32_mask(rtwdev, REG_CCK_RX, 0x0c000000, 0x0);
+
+	/* MCS support */
+	rtw_write32_mask(rtwdev, REG_RX_MCS_LIMIT, 0xc0000060, 0x4);
+
+	/* RF Path_B HSSI OFF */
+	rtw_write32_mask(rtwdev, REG_3WIRE_SWB, 0xf, 0x4);
+
+	/* RF Path_B Power Down */
+	rtw_write32_mask(rtwdev, REG_LSSI_WRITE_B, MASKDWORD, 0);
+
+	/* ADDA Path_B OFF */
+	rtw_write32_mask(rtwdev, REG_AFE_PWR1_B, MASKDWORD, 0);
+	rtw_write32_mask(rtwdev, REG_AFE_PWR2_B, MASKDWORD, 0);
+}
+
+static const u32 rtw88xxa_txscale_tbl[] = {
+	0x081, 0x088, 0x090, 0x099, 0x0a2, 0x0ac, 0x0b6, 0x0c0, 0x0cc, 0x0d8,
+	0x0e5, 0x0f2, 0x101, 0x110, 0x120, 0x131, 0x143, 0x156, 0x16a, 0x180,
+	0x197, 0x1af, 0x1c8, 0x1e3, 0x200, 0x21e, 0x23e, 0x261, 0x285, 0x2ab,
+	0x2d3, 0x2fe, 0x32b, 0x35c, 0x38e, 0x3c4, 0x3fe
+};
+
+static u32 rtw88xxa_get_bb_swing(struct rtw_dev *rtwdev, u8 band, u8 path)
+{
+	static const u32 swing2setting[4] = {0x200, 0x16a, 0x101, 0x0b6};
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+	u8 tx_bb_swing;
+
+	if (band == RTW_BAND_2G)
+		tx_bb_swing = efuse->tx_bb_swing_setting_2g;
+	else
+		tx_bb_swing = efuse->tx_bb_swing_setting_5g;
+
+	if (path == RF_PATH_B)
+		tx_bb_swing >>= 2;
+	tx_bb_swing &= 0x3;
+
+	return swing2setting[tx_bb_swing];
+}
+
+static u8 rtw88xxa_get_swing_index(struct rtw_dev *rtwdev)
+{
+	u32 swing, table_value;
+	u8 i;
+
+	swing = rtw88xxa_get_bb_swing(rtwdev, rtwdev->hal.current_band_type,
+				      RF_PATH_A);
+
+	for (i = 0; i < ARRAY_SIZE(rtw88xxa_txscale_tbl); i++) {
+		table_value = rtw88xxa_txscale_tbl[i];
+		if (swing == table_value)
+			return i;
+	}
+
+	return 24;
+}
+
+static void rtw88xxa_pwrtrack_init(struct rtw_dev *rtwdev)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	u8 path;
+
+	dm_info->default_ofdm_index = rtw88xxa_get_swing_index(rtwdev);
+
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8821A)
+		dm_info->default_cck_index = 0;
+	else
+		dm_info->default_cck_index = 24;
+
+	for (path = RF_PATH_A; path < rtwdev->hal.rf_path_num; path++) {
+		ewma_thermal_init(&dm_info->avg_thermal[path]);
+		dm_info->delta_power_index[path] = 0;
+		dm_info->delta_power_index_last[path] = 0;
+	}
+
+	dm_info->pwr_trk_triggered = false;
+	dm_info->pwr_trk_init_trigger = true;
+	dm_info->thermal_meter_k = rtwdev->efuse.thermal_meter_k;
+}
+
+void rtw88xxa_power_off(struct rtw_dev *rtwdev,
+			const struct rtw_pwr_seq_cmd *const *enter_lps_flow)
+{
+	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
+	enum usb_device_speed speed = rtwusb->udev->speed;
+	u16 ori_fsmc0;
+	u8 reg_cr;
+
+	reg_cr = rtw_read8(rtwdev, REG_CR);
+
+	/* Already powered off */
+	if (reg_cr == 0 || reg_cr == 0xEA)
+		return;
+
+	rtw_hci_stop(rtwdev);
+
+	if (!rtwdev->efuse.btcoex)
+		rtw_write16_clr(rtwdev, REG_GPIO_MUXCFG, BIT_EN_SIC);
+
+	/* set Reg 0xf008[3:4] to 2'11 to enable U1/U2 Mode in USB3.0. */
+	if (speed == USB_SPEED_SUPER)
+		rtw_write8_set(rtwdev, REG_USB_MOD, 0x18);
+
+	rtw_write32(rtwdev, REG_HISR0, 0xffffffff);
+	rtw_write32(rtwdev, REG_HISR1, 0xffffffff);
+	rtw_write32(rtwdev, REG_HIMR0, 0);
+	rtw_write32(rtwdev, REG_HIMR1, 0);
+
+	if (rtwdev->efuse.btcoex)
+		rtw_coex_power_off_setting(rtwdev);
+
+	ori_fsmc0 = rtw_read16(rtwdev, REG_APS_FSMCO);
+	rtw_write16(rtwdev, REG_APS_FSMCO, ori_fsmc0 & ~APS_FSMCO_HW_POWERDOWN);
+
+	/* Stop Tx Report Timer. */
+	rtw_write8_clr(rtwdev, REG_TX_RPT_CTRL, BIT(1));
+
+	/* Stop Rx */
+	rtw_write8(rtwdev, REG_CR, 0);
+
+	rtw_pwr_seq_parser(rtwdev, enter_lps_flow);
+
+	if (rtw_read8(rtwdev, REG_MCUFW_CTRL) & BIT_RAM_DL_SEL)
+		rtw88xxa_reset_8051(rtwdev);
+
+	rtw_write8_clr(rtwdev, REG_SYS_FUNC_EN + 1, BIT(2));
+	rtw_write8(rtwdev, REG_MCUFW_CTRL, 0);
+
+	rtw_pwr_seq_parser(rtwdev, rtwdev->chip->pwr_off_seq);
+
+	if (ori_fsmc0 & APS_FSMCO_HW_POWERDOWN)
+		rtw_write16_set(rtwdev, REG_APS_FSMCO, APS_FSMCO_HW_POWERDOWN);
+
+	clear_bit(RTW_FLAG_POWERON, rtwdev->flags);
+}
+EXPORT_SYMBOL(rtw88xxa_power_off);
+
+static void rtw88xxa_set_channel_bb_swing(struct rtw_dev *rtwdev, u8 band)
+{
+	rtw_write32_mask(rtwdev, REG_TXSCALE_A, BB_SWING_MASK,
+			 rtw88xxa_get_bb_swing(rtwdev, band, RF_PATH_A));
+	rtw_write32_mask(rtwdev, REG_TXSCALE_B, BB_SWING_MASK,
+			 rtw88xxa_get_bb_swing(rtwdev, band, RF_PATH_B));
+	rtw88xxa_pwrtrack_init(rtwdev);
+}
+
+static void rtw8821a_set_ext_band_switch(struct rtw_dev *rtwdev, u8 band)
+{
+	rtw_write32_mask(rtwdev, REG_LED_CFG, BIT_DPDT_SEL_EN, 0);
+	rtw_write32_mask(rtwdev, REG_LED_CFG, BIT_DPDT_WL_SEL, 1);
+	rtw_write32_mask(rtwdev, REG_RFE_INV_A, 0xf, 7);
+	rtw_write32_mask(rtwdev, REG_RFE_INV_A, 0xf0, 7);
+
+	if (band == RTW_BAND_2G)
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, BIT(29) | BIT(28), 1);
+	else
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, BIT(29) | BIT(28), 2);
+}
+
+static void rtw8821a_phy_set_rfe_reg_24g(struct rtw_dev *rtwdev)
+{
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+
+	/* Turn off RF PA and LNA */
+
+	/* 0xCB0[15:12] = 0x7 (LNA_On)*/
+	rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, 0xF000, 0x7);
+	/* 0xCB0[7:4] = 0x7 (PAPE_A)*/
+	rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, 0xF0, 0x7);
+
+	if (efuse->ext_lna_2g) {
+		/* Turn on 2.4G External LNA */
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, BIT(20), 1);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, BIT(22), 0);
+		rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, GENMASK(2, 0), 0x2);
+		rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, GENMASK(10, 8), 0x2);
+	} else {
+		/* Bypass 2.4G External LNA */
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, BIT(20), 0);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, BIT(22), 0);
+		rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, GENMASK(2, 0), 0x7);
+		rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, GENMASK(10, 8), 0x7);
+	}
+}
+
+static void rtw8821a_phy_set_rfe_reg_5g(struct rtw_dev *rtwdev)
+{
+	/* Turn ON RF PA and LNA */
+
+	/* 0xCB0[15:12] = 0x7 (LNA_On)*/
+	rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, 0xF000, 0x5);
+	/* 0xCB0[7:4] = 0x7 (PAPE_A)*/
+	rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, 0xF0, 0x4);
+
+	/* Bypass 2.4G External LNA */
+	rtw_write32_mask(rtwdev, REG_RFE_INV_A, BIT(20), 0);
+	rtw_write32_mask(rtwdev, REG_RFE_INV_A, BIT(22), 0);
+	rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, GENMASK(2, 0), 0x7);
+	rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, GENMASK(10, 8), 0x7);
+}
+
+static void rtw8812a_phy_set_rfe_reg_24g(struct rtw_dev *rtwdev)
+{
+	switch (rtwdev->efuse.rfe_option) {
+	case 0:
+	case 2:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77777777);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777777);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, RFE_INV_MASK, 0x000);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x000);
+		break;
+	case 1:
+		if (rtwdev->efuse.btcoex) {
+			rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, 0xffffff, 0x777777);
+			rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777777);
+			rtw_write32_mask(rtwdev, REG_RFE_INV_A, 0x33f00000, 0x000);
+			rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x000);
+		} else {
+			rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77777777);
+			rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777777);
+			rtw_write32_mask(rtwdev, REG_RFE_INV_A, RFE_INV_MASK, 0x000);
+			rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x000);
+		}
+		break;
+	case 3:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x54337770);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x54337770);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, RFE_INV_MASK, 0x010);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x010);
+		rtw_write32_mask(rtwdev, REG_ANTSEL_SW, 0x00000303, 0x1);
+		break;
+	case 4:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77777777);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777777);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, RFE_INV_MASK, 0x001);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x001);
+		break;
+	case 5:
+		rtw_write8(rtwdev, REG_RFE_PINMUX_A + 2, 0x77);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77777777);
+		rtw_write8_clr(rtwdev, REG_RFE_INV_A + 3, BIT(0));
+		rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x000);
+		break;
+	case 6:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x07772770);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x07772770);
+		rtw_write32(rtwdev, REG_RFE_INV_A, 0x00000077);
+		rtw_write32(rtwdev, REG_RFE_INV_B, 0x00000077);
+		break;
+	default:
+		break;
+	}
+}
+
+static void rtw8812a_phy_set_rfe_reg_5g(struct rtw_dev *rtwdev)
+{
+	switch (rtwdev->efuse.rfe_option) {
+	case 0:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77337717);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77337717);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, RFE_INV_MASK, 0x010);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x010);
+		break;
+	case 1:
+		if (rtwdev->efuse.btcoex) {
+			rtw_write32_mask(rtwdev, REG_RFE_PINMUX_A, 0xffffff, 0x337717);
+			rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77337717);
+			rtw_write32_mask(rtwdev, REG_RFE_INV_A, 0x33f00000, 0x000);
+			rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x000);
+		} else {
+			rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77337717);
+			rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77337717);
+			rtw_write32_mask(rtwdev, REG_RFE_INV_A, RFE_INV_MASK, 0x000);
+			rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x000);
+		}
+		break;
+	case 2:
+	case 4:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x77337777);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77337777);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, RFE_INV_MASK, 0x010);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x010);
+		break;
+	case 3:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x54337717);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x54337717);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_A, RFE_INV_MASK, 0x010);
+		rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x010);
+		rtw_write32_mask(rtwdev, REG_ANTSEL_SW, 0x00000303, 0x1);
+		break;
+	case 5:
+		rtw_write8(rtwdev, REG_RFE_PINMUX_A + 2, 0x33);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x77337777);
+		rtw_write8_set(rtwdev, REG_RFE_INV_A + 3, BIT(0));
+		rtw_write32_mask(rtwdev, REG_RFE_INV_B, RFE_INV_MASK, 0x010);
+		break;
+	case 6:
+		rtw_write32(rtwdev, REG_RFE_PINMUX_A, 0x07737717);
+		rtw_write32(rtwdev, REG_RFE_PINMUX_B, 0x07737717);
+		rtw_write32(rtwdev, REG_RFE_INV_A, 0x00000077);
+		rtw_write32(rtwdev, REG_RFE_INV_B, 0x00000077);
+		break;
+	default:
+		break;
+	}
+}
+
+static void rtw88xxa_switch_band(struct rtw_dev *rtwdev, u8 new_band, u8 bw)
+{
+	const struct rtw_chip_info *chip = rtwdev->chip;
+	u16 basic_rates, reg_41a;
+
+	/* 8811au one antenna module doesn't support antenna div, so driver must
+	 * control antenna band, otherwise one of the band will have issue
+	 */
+	if (chip->id == RTW_CHIP_TYPE_8821A && !rtwdev->efuse.btcoex &&
+	    rtwdev->efuse.ant_div_cfg == 0)
+		rtw8821a_set_ext_band_switch(rtwdev, new_band);
+
+	if (new_band == RTW_BAND_2G) {
+		rtw_write32_set(rtwdev, REG_RXPSEL, BIT_RX_PSEL_RST);
+
+		if (chip->id == RTW_CHIP_TYPE_8821A) {
+			rtw8821a_phy_set_rfe_reg_24g(rtwdev);
+
+			rtw_write32_mask(rtwdev, REG_TXSCALE_A, 0xf00, 0);
+		} else {
+			rtw_write32_mask(rtwdev, REG_BWINDICATION, 0x3, 0x1);
+			rtw_write32_mask(rtwdev, REG_PDMFTH, GENMASK(17, 13), 0x17);
+
+			if (bw == RTW_CHANNEL_WIDTH_20 &&
+			    rtwdev->hal.rf_type == RF_1T1R &&
+			    !rtwdev->efuse.ext_lna_2g)
+				rtw_write32_mask(rtwdev, REG_PDMFTH, GENMASK(3, 1), 0x02);
+			else
+				rtw_write32_mask(rtwdev, REG_PDMFTH, GENMASK(3, 1), 0x04);
+
+			rtw_write32_mask(rtwdev, REG_CCASEL, 0x3, 0);
+
+			rtw8812a_phy_set_rfe_reg_24g(rtwdev);
+		}
+
+		rtw_write32_mask(rtwdev, REG_TXPSEL, 0xf0, 0x1);
+		rtw_write32_mask(rtwdev, REG_CCK_RX, 0x0f000000, 0x1);
+
+		basic_rates = BIT(DESC_RATE1M) | BIT(DESC_RATE2M) |
+			      BIT(DESC_RATE5_5M) | BIT(DESC_RATE11M) |
+			      BIT(DESC_RATE6M) | BIT(DESC_RATE12M) |
+			      BIT(DESC_RATE24M);
+		rtw_write32_mask(rtwdev, REG_RRSR, 0xfffff, basic_rates);
+
+		rtw_write8_clr(rtwdev, REG_CCK_CHECK, BIT_CHECK_CCK_EN);
+	} else { /* RTW_BAND_5G */
+		if (chip->id == RTW_CHIP_TYPE_8821A)
+			rtw8821a_phy_set_rfe_reg_5g(rtwdev);
+
+		rtw_write8_set(rtwdev, REG_CCK_CHECK, BIT_CHECK_CCK_EN);
+
+		read_poll_timeout_atomic(rtw_read16, reg_41a, (reg_41a & 0x30) == 0x30,
+					 50, 2500, false, rtwdev, REG_TXPKT_EMPTY);
+
+		rtw_write32_set(rtwdev, REG_RXPSEL, BIT_RX_PSEL_RST);
+
+		if (chip->id == RTW_CHIP_TYPE_8821A) {
+			rtw_write32_mask(rtwdev, REG_TXSCALE_A, 0xf00, 1);
+		} else {
+			rtw_write32_mask(rtwdev, REG_BWINDICATION, 0x3, 0x2);
+			rtw_write32_mask(rtwdev, REG_PDMFTH, GENMASK(17, 13), 0x15);
+			rtw_write32_mask(rtwdev, REG_PDMFTH, GENMASK(3, 1), 0x04);
+
+			rtw_write32_mask(rtwdev, REG_CCASEL, 0x3, 1);
+
+			rtw8812a_phy_set_rfe_reg_5g(rtwdev);
+		}
+
+		rtw_write32_mask(rtwdev, REG_TXPSEL, 0xf0, 0);
+		rtw_write32_mask(rtwdev, REG_CCK_RX, 0x0f000000, 0xf);
+
+		basic_rates = BIT(DESC_RATE6M) | BIT(DESC_RATE12M) |
+			      BIT(DESC_RATE24M);
+		rtw_write32_mask(rtwdev, REG_RRSR, 0xfffff, basic_rates);
+	}
+
+	rtw88xxa_set_channel_bb_swing(rtwdev, new_band);
+}
+
+int rtw88xxa_power_on(struct rtw_dev *rtwdev)
+{
+	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
+	const struct rtw_chip_info *chip = rtwdev->chip;
+	struct rtw_efuse *efuse = &rtwdev->efuse;
+	struct rtw_hal *hal = &rtwdev->hal;
+	int ret;
+
+	if (test_bit(RTW_FLAG_POWERON, rtwdev->flags))
+		return 0;
+
+	/* Override rtw_chip_efuse_info_setup() */
+	if (chip->id == RTW_CHIP_TYPE_8821A)
+		efuse->btcoex = rtw_read32_mask(rtwdev, REG_WL_BT_PWR_CTRL,
+						BIT_BT_FUNC_EN);
+
+	/* Override rtw_chip_efuse_info_setup() */
+	if (chip->id == RTW_CHIP_TYPE_8812A)
+		rtw8812a_read_amplifier_type(rtwdev);
+
+	ret = rtw_hci_setup(rtwdev);
+	if (ret) {
+		rtw_err(rtwdev, "failed to setup hci\n");
+		goto err;
+	}
+
+	/* Revise for U2/U3 switch we can not update RF-A/B reset.
+	 * Reset after MAC power on to prevent RF R/W error.
+	 * Is it a right method?
+	 */
+	if (chip->id == RTW_CHIP_TYPE_8812A) {
+		rtw_write8(rtwdev, REG_RF_CTRL, 5);
+		rtw_write8(rtwdev, REG_RF_CTRL, 7);
+		rtw_write8(rtwdev, REG_RF_B_CTRL, 5);
+		rtw_write8(rtwdev, REG_RF_B_CTRL, 7);
+	}
+
+	/* If HW didn't go through a complete de-initial procedure,
+	 * it probably occurs some problem for double initial
+	 * procedure.
+	 */
+	rtw88xxau_hw_reset(rtwdev);
+
+	ret = rtw88xxau_init_power_on(rtwdev);
+	if (ret) {
+		rtw_err(rtwdev, "failed to power on\n");
+		goto err;
+	}
+
+	ret = rtw_set_trx_fifo_info(rtwdev);
+	if (ret) {
+		rtw_err(rtwdev, "failed to set trx fifo info\n");
+		goto err;
+	}
+
+	ret = rtw88xxa_llt_init(rtwdev, rtwdev->fifo.rsvd_boundary);
+	if (ret) {
+		rtw_err(rtwdev, "failed to init llt\n");
+		goto err;
+	}
+
+	rtw_write32_set(rtwdev, REG_TXDMA_OFFSET_CHK, BIT_DROP_DATA_EN);
+
+	ret = rtw_wait_firmware_completion(rtwdev);
+	if (ret) {
+		rtw_err(rtwdev, "failed to wait firmware completion\n");
+		goto err_off;
+	}
+
+	ret = rtw_download_firmware(rtwdev, &rtwdev->fw);
+	if (ret) {
+		rtw_err(rtwdev, "failed to download firmware\n");
+		goto err_off;
+	}
+
+	rtw_write8(rtwdev, REG_HMETFR, 0xf);
+
+	rtw_load_table(rtwdev, chip->mac_tbl);
+
+	rtw88xxau_init_queue_reserved_page(rtwdev);
+	rtw88xxau_init_tx_buffer_boundary(rtwdev);
+	rtw88xxau_init_queue_priority(rtwdev);
+
+	rtw_write16(rtwdev, REG_TRXFF_BNDY + 2,
+		    chip->rxff_size - REPORT_BUF - 1);
+
+	if (chip->id == RTW_CHIP_TYPE_8812A)
+		rtw_write8(rtwdev, REG_PBP,
+			   u8_encode_bits(PBP_512, PBP_TX_MASK) |
+			   u8_encode_bits(PBP_64, PBP_RX_MASK));
+
+	rtw_write8(rtwdev, REG_RX_DRVINFO_SZ, PHY_STATUS_SIZE);
+
+	rtw_write32(rtwdev, REG_HIMR0, 0);
+	rtw_write32(rtwdev, REG_HIMR1, 0);
+
+	rtw_write32_mask(rtwdev, REG_CR, 0x30000, 0x2);
+
+	rtw88xxa_init_wmac_setting(rtwdev);
+	rtw88xxa_init_adaptive_ctrl(rtwdev);
+	rtw88xxa_init_edca(rtwdev);
+
+	rtw_write8_set(rtwdev, REG_FWHW_TXQ_CTRL, BIT(7));
+	rtw_write8(rtwdev, REG_ACKTO, 0x80);
+
+	rtw88xxau_tx_aggregation(rtwdev);
+
+	rtw88xxa_init_beacon_parameters(rtwdev);
+	rtw_write8(rtwdev, REG_BCN_MAX_ERR, 0xff);
+
+	rtw_hci_interface_cfg(rtwdev);
+
+	/* usb3 rx interval */
+	rtw_write8(rtwdev, REG_USB3_RXITV, 0x01);
+
+	/* burst length=4, set 0x3400 for burst length=2 */
+	rtw_write16(rtwdev, REG_RXDMA_STATUS, 0x7400);
+	rtw_write8(rtwdev, REG_RXDMA_STATUS + 1, 0xf5);
+
+	/* 0x456 = 0x70, sugguested by Zhilin */
+	if (chip->id == RTW_CHIP_TYPE_8821A)
+		rtw_write8(rtwdev, REG_AMPDU_MAX_TIME, 0x5e);
+	else
+		rtw_write8(rtwdev, REG_AMPDU_MAX_TIME, 0x70);
+
+	rtw_write32(rtwdev, REG_AMPDU_MAX_LENGTH, 0xffffffff);
+	rtw_write8(rtwdev, REG_USTIME_TSF, 0x50);
+	rtw_write8(rtwdev, REG_USTIME_EDCA, 0x50);
+
+	if (rtwusb->udev->speed == USB_SPEED_SUPER)
+		/* Disable U1/U2 Mode to avoid 2.5G spur in USB3.0. */
+		rtw_write8_clr(rtwdev, REG_USB_MOD, BIT(4) | BIT(3));
+
+	rtw_write8_set(rtwdev, REG_SINGLE_AMPDU_CTRL, BIT_EN_SINGLE_APMDU);
+
+	/* for VHT packet length 11K */
+	rtw_write8(rtwdev, REG_RX_PKT_LIMIT, 0x18);
+
+	rtw_write8(rtwdev, REG_PIFS, 0x00);
+
+	if (chip->id == RTW_CHIP_TYPE_8821A) {
+		/* 0x0a0a too small, it can't pass AC logo. change to 0x1f1f */
+		rtw_write16(rtwdev, REG_MAX_AGGR_NUM, 0x1f1f);
+		rtw_write8(rtwdev, REG_FWHW_TXQ_CTRL, 0x80);
+		rtw_write32(rtwdev, REG_FAST_EDCA_CTRL, 0x03087777);
+	} else {
+		rtw_write16(rtwdev, REG_MAX_AGGR_NUM, 0x1f1f);
+		rtw_write8_clr(rtwdev, REG_FWHW_TXQ_CTRL, BIT(7));
+	}
+
+	 /* to prevent mac is reseted by bus. */
+	rtw_write8_set(rtwdev, REG_RSV_CTRL, BIT(5) | BIT(6));
+
+	/* ARFB table 9 for 11ac 5G 2SS */
+	rtw_write32(rtwdev, REG_ARFR0, 0x00000010);
+	rtw_write32(rtwdev, REG_ARFRH0, 0xfffff000);
+
+	/* ARFB table 10 for 11ac 5G 1SS */
+	rtw_write32(rtwdev, REG_ARFR1_V1, 0x00000010);
+	rtw_write32(rtwdev, REG_ARFRH1_V1, 0x003ff000);
+
+	/* ARFB table 11 for 11ac 24G 1SS */
+	rtw_write32(rtwdev, REG_ARFR2_V1, 0x00000015);
+	rtw_write32(rtwdev, REG_ARFRH2_V1, 0x003ff000);
+
+	/* ARFB table 12 for 11ac 24G 2SS */
+	rtw_write32(rtwdev, REG_ARFR3_V1, 0x00000015);
+	rtw_write32(rtwdev, REG_ARFRH3_V1, 0xffcff000);
+
+	rtw_write8_set(rtwdev, REG_CR, BIT_MACTXEN | BIT_MACRXEN);
+
+	rtw88xxa_phy_bb_config(rtwdev);
+	rtw88xxa_phy_rf_config(rtwdev);
+
+	if (chip->id == RTW_CHIP_TYPE_8812A && hal->rf_path_num == 1)
+		rtw8812a_config_1t(rtwdev);
+
+	rtw88xxa_switch_band(rtwdev, RTW_BAND_2G, RTW_CHANNEL_WIDTH_20);
+
+	rtw_write32(rtwdev, RTW_SEC_CMD_REG, BIT(31) | BIT(30));
+
+	rtw_write8(rtwdev, REG_HWSEQ_CTRL, 0xff);
+	rtw_write32(rtwdev, REG_BAR_MODE_CTRL, 0x0201ffff);
+	rtw_write8(rtwdev, REG_NAV_CTRL + 2, 0);
+
+	rtw_write8_clr(rtwdev, REG_GPIO_MUXCFG, BIT(5));
+
+	rtw_phy_init(rtwdev);
+
+	rtw88xxa_pwrtrack_init(rtwdev);
+
+	/* 0x4c6[3] 1: RTS BW = Data BW
+	 * 0: RTS BW depends on CCA / secondary CCA result.
+	 */
+	rtw_write8_clr(rtwdev, REG_QUEUE_CTRL, BIT(3));
+
+	/* enable Tx report. */
+	rtw_write8(rtwdev, REG_FWHW_TXQ_CTRL + 1, 0x0f);
+
+	/* Pretx_en, for WEP/TKIP SEC */
+	rtw_write8(rtwdev, REG_EARLY_MODE_CONTROL + 3, 0x01);
+
+	rtw_write16(rtwdev, REG_TX_RPT_TIME, 0x3df0);
+
+	/* Reset USB mode switch setting */
+	rtw_write8(rtwdev, REG_SYS_SDIO_CTRL, 0x0);
+	rtw_write8(rtwdev, REG_ACLK_MON, 0x0);
+
+	rtw_write8(rtwdev, REG_USB_HRPWM, 0);
+
+	/* ack for xmit mgmt frames. */
+	rtw_write32_set(rtwdev, REG_FWHW_TXQ_CTRL, BIT(12));
+
+	hal->cck_high_power = rtw_read32_mask(rtwdev, REG_CCK_RPT_FORMAT,
+					      BIT_CCK_RPT_FORMAT);
+
+	ret = rtw_hci_start(rtwdev);
+	if (ret) {
+		rtw_err(rtwdev, "failed to start hci\n");
+		goto err_off;
+	}
+
+	if (efuse->btcoex) {
+		rtw_coex_power_on_setting(rtwdev);
+		rtw_coex_init_hw_config(rtwdev, false);
+	}
+
+	set_bit(RTW_FLAG_POWERON, rtwdev->flags);
+
+	return 0;
+
+err_off:
+	chip->ops->power_off(rtwdev);
+
+err:
+	return ret;
+}
+EXPORT_SYMBOL(rtw88xxa_power_on);
+
+u32 rtw88xxa_phy_read_rf(struct rtw_dev *rtwdev,
+			 enum rtw_rf_path rf_path, u32 addr, u32 mask)
+{
+	static const u32 pi_addr[2] = { REG_3WIRE_SWA, REG_3WIRE_SWB };
+	static const u32 read_addr[2][2] = {
+		{ REG_SI_READ_A, REG_SI_READ_B },
+		{ REG_PI_READ_A, REG_PI_READ_B }
+	};
+	const struct rtw_chip_info *chip = rtwdev->chip;
+	const struct rtw_hal *hal = &rtwdev->hal;
+	bool set_cca, pi_mode;
+	u32 val;
+
+	if (rf_path >= hal->rf_phy_num) {
+		rtw_err(rtwdev, "unsupported rf path (%d)\n", rf_path);
+		return INV_RF_DATA;
+	}
+
+	/* CCA off to avoid reading the wrong value.
+	 * Toggling CCA would affect RF 0x0, skip it.
+	 */
+	set_cca = addr != 0x0 && chip->id == RTW_CHIP_TYPE_8812A &&
+		  hal->cut_version != RTW_CHIP_VER_CUT_C;
+
+	if (set_cca)
+		rtw_write32_set(rtwdev, REG_CCA2ND, BIT(3));
+
+	addr &= 0xff;
+
+	pi_mode = rtw_read32_mask(rtwdev, pi_addr[rf_path], 0x4);
+
+	rtw_write32_mask(rtwdev, REG_HSSI_READ, MASKBYTE0, addr);
+
+	if (chip->id == RTW_CHIP_TYPE_8821A ||
+	    hal->cut_version == RTW_CHIP_VER_CUT_C)
+		udelay(20);
+
+	val = rtw_read32_mask(rtwdev, read_addr[pi_mode][rf_path], mask);
+
+	/* CCA on */
+	if (set_cca)
+		rtw_write32_clr(rtwdev, REG_CCA2ND, BIT(3));
+
+	return val;
+}
+EXPORT_SYMBOL(rtw88xxa_phy_read_rf);
+
+static void rtw8812a_phy_fix_spur(struct rtw_dev *rtwdev, u8 channel, u8 bw)
+{
+	/* C cut Item12 ADC FIFO CLOCK */
+	if (rtwdev->hal.cut_version == RTW_CHIP_VER_CUT_C) {
+		if (bw == RTW_CHANNEL_WIDTH_40 && channel == 11)
+			rtw_write32_mask(rtwdev, REG_ADCCLK, 0xC00, 0x3);
+		else
+			rtw_write32_mask(rtwdev, REG_ADCCLK, 0xC00, 0x2);
+
+		/* A workaround to resolve 2480Mhz spur by setting ADC clock
+		 * as 160M.
+		 */
+		if (bw == RTW_CHANNEL_WIDTH_20 && (channel == 13 || channel == 14)) {
+			rtw_write32_mask(rtwdev, REG_ADCCLK, 0x300, 0x3);
+			rtw_write32_mask(rtwdev, REG_ADC160, BIT(30), 1);
+		} else if (bw == RTW_CHANNEL_WIDTH_40 && channel == 11) {
+			rtw_write32_mask(rtwdev, REG_ADC160, BIT(30), 1);
+		} else if (bw != RTW_CHANNEL_WIDTH_80) {
+			rtw_write32_mask(rtwdev, REG_ADCCLK, 0x300, 0x2);
+			rtw_write32_mask(rtwdev, REG_ADC160, BIT(30), 0);
+		}
+	} else {
+		/* A workaround to resolve 2480Mhz spur by setting ADC clock
+		 * as 160M.
+		 */
+		if (bw == RTW_CHANNEL_WIDTH_20 && (channel == 13 || channel == 14))
+			rtw_write32_mask(rtwdev, REG_ADCCLK, 0x300, 0x3);
+		else if (channel <= 14) /* 2.4G only */
+			rtw_write32_mask(rtwdev, REG_ADCCLK, 0x300, 0x2);
+	}
+}
+
+static void rtw88xxa_switch_channel(struct rtw_dev *rtwdev, u8 channel, u8 bw)
+{
+	struct rtw_hal *hal = &rtwdev->hal;
+	u32 fc_area, rf_mod_ag;
+	u8 path;
+
+	switch (channel) {
+	case 36 ... 48:
+		fc_area = 0x494;
+		break;
+	case 50 ... 64:
+		fc_area = 0x453;
+		break;
+	case 100 ... 116:
+		fc_area = 0x452;
+		break;
+	default:
+		if (channel >= 118)
+			fc_area = 0x412;
+		else
+			fc_area = 0x96a;
+		break;
+	}
+
+	rtw_write32_mask(rtwdev, REG_CLKTRK, 0x1ffe0000, fc_area);
+
+	for (path = 0; path < hal->rf_path_num; path++) {
+		switch (channel) {
+		case 36 ... 64:
+			rf_mod_ag = 0x101;
+			break;
+		case 100 ... 140:
+			rf_mod_ag = 0x301;
+			break;
+		default:
+			if (channel > 140)
+				rf_mod_ag = 0x501;
+			else
+				rf_mod_ag = 0x000;
+			break;
+		}
+
+		rtw_write_rf(rtwdev, path, RF_CFGCH,
+			     RF18_RFSI_MASK | RF18_BAND_MASK, rf_mod_ag);
+
+		if (rtwdev->chip->id == RTW_CHIP_TYPE_8812A)
+			rtw8812a_phy_fix_spur(rtwdev, channel, bw);
+
+		rtw_write_rf(rtwdev, path, RF_CFGCH, RF18_CHANNEL_MASK, channel);
+	}
+}
+
+static void rtw88xxa_set_reg_bw(struct rtw_dev *rtwdev, u8 bw)
+{
+	u16 val16 = rtw_read16(rtwdev, REG_WMAC_TRXPTCL_CTL);
+
+	val16 &= ~BIT_RFMOD;
+	if (bw == RTW_CHANNEL_WIDTH_80)
+		val16 |= BIT_RFMOD_80M;
+	else if (bw == RTW_CHANNEL_WIDTH_40)
+		val16 |= BIT_RFMOD_40M;
+
+	rtw_write16(rtwdev, REG_WMAC_TRXPTCL_CTL, val16);
+}
+
+static void rtw88xxa_post_set_bw_mode(struct rtw_dev *rtwdev, u8 channel,
+				      u8 bw, u8 primary_chan_idx)
+{
+	struct rtw_hal *hal = &rtwdev->hal;
+	u8 txsc40 = 0, txsc20, txsc;
+	u8 reg_837, l1pkval;
+
+	rtw88xxa_set_reg_bw(rtwdev, bw);
+
+	txsc20 = primary_chan_idx;
+	if (bw == RTW_CHANNEL_WIDTH_80) {
+		if (txsc20 == RTW_SC_20_UPPER || txsc20 == RTW_SC_20_UPMOST)
+			txsc40 = RTW_SC_40_UPPER;
+		else
+			txsc40 = RTW_SC_40_LOWER;
+	}
+
+	txsc = BIT_TXSC_20M(txsc20) | BIT_TXSC_40M(txsc40);
+	rtw_write8(rtwdev, REG_DATA_SC, txsc);
+
+	reg_837 = rtw_read8(rtwdev, REG_BWINDICATION + 3);
+
+	switch (bw) {
+	default:
+	case RTW_CHANNEL_WIDTH_20:
+		rtw_write32_mask(rtwdev, REG_ADCCLK, 0x003003C3, 0x00300200);
+		rtw_write32_mask(rtwdev, REG_ADC160, BIT(30), 0);
+
+		if (hal->rf_type == RF_2T2R)
+			rtw_write32_mask(rtwdev, REG_L1PKTH, 0x03C00000, 7);
+		else
+			rtw_write32_mask(rtwdev, REG_L1PKTH, 0x03C00000, 8);
+
+		break;
+	case RTW_CHANNEL_WIDTH_40:
+		rtw_write32_mask(rtwdev, REG_ADCCLK, 0x003003C3, 0x00300201);
+		rtw_write32_mask(rtwdev, REG_ADC160, BIT(30), 0);
+		rtw_write32_mask(rtwdev, REG_ADCCLK, 0x3C, txsc);
+		rtw_write32_mask(rtwdev, REG_CCA2ND, 0xf0000000, txsc);
+
+		if (reg_837 & BIT(2)) {
+			l1pkval = 6;
+		} else {
+			if (hal->rf_type == RF_2T2R)
+				l1pkval = 7;
+			else
+				l1pkval = 8;
+		}
+
+		rtw_write32_mask(rtwdev, REG_L1PKTH, 0x03C00000, l1pkval);
+
+		if (txsc == RTW_SC_20_UPPER)
+			rtw_write32_set(rtwdev, REG_RXSB, BIT(4));
+		else
+			rtw_write32_clr(rtwdev, REG_RXSB, BIT(4));
+
+		break;
+	case RTW_CHANNEL_WIDTH_80:
+		rtw_write32_mask(rtwdev, REG_ADCCLK, 0x003003C3, 0x00300202);
+		rtw_write32_mask(rtwdev, REG_ADC160, BIT(30), 1);
+		rtw_write32_mask(rtwdev, REG_ADCCLK, 0x3C, txsc);
+		rtw_write32_mask(rtwdev, REG_CCA2ND, 0xf0000000, txsc);
+
+		if (reg_837 & BIT(2)) {
+			l1pkval = 5;
+		} else {
+			if (hal->rf_type == RF_2T2R)
+				l1pkval = 6;
+			else
+				l1pkval = 7;
+		}
+
+		rtw_write32_mask(rtwdev, REG_L1PKTH, 0x03C00000, l1pkval);
+
+		break;
+	}
+}
+
+static void rtw88xxa_set_channel_rf(struct rtw_dev *rtwdev, u8 channel, u8 bw)
+{
+	u8 path;
+
+	for (path = RF_PATH_A; path < rtwdev->hal.rf_path_num; path++) {
+		switch (bw) {
+		case RTW_CHANNEL_WIDTH_5:
+		case RTW_CHANNEL_WIDTH_10:
+		case RTW_CHANNEL_WIDTH_20:
+		default:
+			rtw_write_rf(rtwdev, path, RF_CFGCH, RF18_BW_MASK, 3);
+			break;
+		case RTW_CHANNEL_WIDTH_40:
+			rtw_write_rf(rtwdev, path, RF_CFGCH, RF18_BW_MASK, 1);
+			break;
+		case RTW_CHANNEL_WIDTH_80:
+			rtw_write_rf(rtwdev, path, RF_CFGCH, RF18_BW_MASK, 0);
+			break;
+		}
+	}
+}
+
+void rtw88xxa_set_channel(struct rtw_dev *rtwdev, u8 channel, u8 bw,
+			  u8 primary_chan_idx)
+{
+	u8 old_band, new_band;
+
+	if (rtw_read8(rtwdev, REG_CCK_CHECK) & BIT_CHECK_CCK_EN)
+		old_band = RTW_BAND_5G;
+	else
+		old_band = RTW_BAND_2G;
+
+	if (channel > 14)
+		new_band = RTW_BAND_5G;
+	else
+		new_band = RTW_BAND_2G;
+
+	if (new_band != old_band)
+		rtw88xxa_switch_band(rtwdev, new_band, bw);
+
+	rtw88xxa_switch_channel(rtwdev, channel, bw);
+
+	rtw88xxa_post_set_bw_mode(rtwdev, channel, bw, primary_chan_idx);
+
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8812A)
+		rtw8812a_phy_fix_spur(rtwdev, channel, bw);
+
+	rtw88xxa_set_channel_rf(rtwdev, channel, bw);
+}
+EXPORT_SYMBOL(rtw88xxa_set_channel);
+
+void rtw88xxa_query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
+			       struct rtw_rx_pkt_stat *pkt_stat,
+			       s8 (*cck_rx_pwr)(u8 lna_idx, u8 vga_idx))
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	struct rtw_jaguar_phy_status_rpt *rpt;
+	u8 gain[RTW_RF_PATH_MAX], rssi, i;
+	s8 rx_pwr_db, power_a, power_b;
+	const s8 min_rx_power = -120;
+	u8 lna_idx, vga_idx;
+
+	rpt = (struct rtw_jaguar_phy_status_rpt *)phy_status;
+
+	if (pkt_stat->rate <= DESC_RATE11M) {
+		lna_idx = le32_get_bits(rpt->w1, RTW_JGRPHY_W1_AGC_RPT_LNA_IDX);
+		vga_idx = le32_get_bits(rpt->w1, RTW_JGRPHY_W1_AGC_RPT_VGA_IDX);
+
+		rx_pwr_db = cck_rx_pwr(lna_idx, vga_idx);
+
+		pkt_stat->rx_power[RF_PATH_A] = rx_pwr_db;
+		pkt_stat->rssi = rtw_phy_rf_power_2_rssi(pkt_stat->rx_power, 1);
+		dm_info->rssi[RF_PATH_A] = pkt_stat->rssi;
+		pkt_stat->bw = RTW_CHANNEL_WIDTH_20;
+		pkt_stat->signal_power = rx_pwr_db;
+	} else { /* OFDM rate */
+		gain[RF_PATH_A] = le32_get_bits(rpt->w0, RTW_JGRPHY_W0_GAIN_A);
+		gain[RF_PATH_B] = le32_get_bits(rpt->w0, RTW_JGRPHY_W0_GAIN_B);
+
+		for (i = RF_PATH_A; i < rtwdev->hal.rf_path_num; i++) {
+			pkt_stat->rx_power[i] = gain[i] - 110;
+			rssi = rtw_phy_rf_power_2_rssi(&pkt_stat->rx_power[i], 1);
+			dm_info->rssi[i] = rssi;
+		}
+
+		pkt_stat->rssi = rtw_phy_rf_power_2_rssi(pkt_stat->rx_power,
+							 rtwdev->hal.rf_path_num);
+
+		power_a = pkt_stat->rx_power[RF_PATH_A];
+		power_b = pkt_stat->rx_power[RF_PATH_B];
+		if (rtwdev->hal.rf_path_num == 1)
+			power_b = power_a;
+
+		pkt_stat->signal_power = max3(power_a, power_b, min_rx_power);
+	}
+}
+EXPORT_SYMBOL(rtw88xxa_query_phy_status);
+
+static void
+rtw88xxa_set_tx_power_index_by_rate(struct rtw_dev *rtwdev, u8 path,
+				    u8 rs, u32 *phy_pwr_idx)
+{
+	static const u32 offset_txagc[2] = {
+		REG_TX_AGC_A_CCK_11_CCK_1, REG_TX_AGC_B_CCK_11_CCK_1
+	};
+	u8 rate, rate_idx, pwr_index, shift;
+	struct rtw_hal *hal = &rtwdev->hal;
+	bool write_1ss_mcs9;
+	u32 mask;
+	int j;
+
+	for (j = 0; j < rtw_rate_size[rs]; j++) {
+		rate = rtw_rate_section[rs][j];
+
+		pwr_index = hal->tx_pwr_tbl[path][rate];
+
+		shift = rate & 0x3;
+		*phy_pwr_idx |= ((u32)pwr_index << (shift * 8));
+
+		write_1ss_mcs9 = rate == DESC_RATEVHT1SS_MCS9 &&
+				 hal->rf_path_num == 1;
+
+		if (write_1ss_mcs9)
+			mask = MASKLWORD;
+		else
+			mask = MASKDWORD;
+
+		if (shift == 0x3 || write_1ss_mcs9) {
+			rate_idx = rate & 0xfc;
+			if (rate >= DESC_RATEVHT1SS_MCS0)
+				rate_idx -= 0x10;
+
+			rtw_write32_mask(rtwdev, offset_txagc[path] + rate_idx,
+					 mask, *phy_pwr_idx);
+
+			*phy_pwr_idx = 0;
+		}
+	}
+}
+
+static void rtw88xxa_tx_power_training(struct rtw_dev *rtwdev, u8 bw,
+				       u8 channel, u8 path)
+{
+	static const u32 write_offset[] = {
+		REG_TX_PWR_TRAINING_A, REG_TX_PWR_TRAINING_B,
+	};
+	u32 power_level, write_data;
+	u8 i;
+
+	power_level = rtwdev->hal.tx_pwr_tbl[path][DESC_RATEMCS7];
+	write_data = 0;
+
+	for (i = 0; i < 3; i++) {
+		if (i == 0)
+			power_level -= 10;
+		else if (i == 1)
+			power_level -= 8;
+		else
+			power_level -= 6;
+
+		write_data |= max_t(u32, power_level, 2) << (i * 8);
+	}
+
+	rtw_write32_mask(rtwdev, write_offset[path], 0xffffff, write_data);
+}
+
+void rtw88xxa_set_tx_power_index(struct rtw_dev *rtwdev)
+{
+	struct rtw_hal *hal = &rtwdev->hal;
+	u32 phy_pwr_idx = 0;
+	int rs, path;
+
+	for (path = 0; path < hal->rf_path_num; path++) {
+		for (rs = 0; rs <= __RTW_RATE_SECTION_2SS_MAX; rs++) {
+			if (hal->rf_path_num == 1 &&
+			    (rs == RTW_RATE_SECTION_HT_2S ||
+			     rs == RTW_RATE_SECTION_VHT_2S))
+				continue;
+
+			if (test_bit(RTW_FLAG_SCANNING, rtwdev->flags) &&
+			    rs > RTW_RATE_SECTION_OFDM)
+				continue;
+
+			if (hal->current_band_type == RTW_BAND_5G &&
+			    rs == RTW_RATE_SECTION_CCK)
+				continue;
+
+			rtw88xxa_set_tx_power_index_by_rate(rtwdev, path, rs,
+							    &phy_pwr_idx);
+		}
+
+		rtw88xxa_tx_power_training(rtwdev, hal->current_band_width,
+					   hal->current_channel, path);
+	}
+}
+EXPORT_SYMBOL(rtw88xxa_set_tx_power_index);
+
+void rtw88xxa_false_alarm_statistics(struct rtw_dev *rtwdev)
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	u32 cck_fa_cnt, ofdm_fa_cnt;
+	u32 crc32_cnt, cca32_cnt;
+	u32 cck_enable;
+
+	cck_enable = rtw_read32(rtwdev, REG_RXPSEL) & BIT(28);
+	cck_fa_cnt = rtw_read16(rtwdev, REG_FA_CCK);
+	ofdm_fa_cnt = rtw_read16(rtwdev, REG_FA_OFDM);
+
+	dm_info->cck_fa_cnt = cck_fa_cnt;
+	dm_info->ofdm_fa_cnt = ofdm_fa_cnt;
+	dm_info->total_fa_cnt = ofdm_fa_cnt;
+	if (cck_enable)
+		dm_info->total_fa_cnt += cck_fa_cnt;
+
+	crc32_cnt = rtw_read32(rtwdev, REG_CRC_CCK);
+	dm_info->cck_ok_cnt = u32_get_bits(crc32_cnt, MASKLWORD);
+	dm_info->cck_err_cnt = u32_get_bits(crc32_cnt, MASKHWORD);
+
+	crc32_cnt = rtw_read32(rtwdev, REG_CRC_OFDM);
+	dm_info->ofdm_ok_cnt = u32_get_bits(crc32_cnt, MASKLWORD);
+	dm_info->ofdm_err_cnt = u32_get_bits(crc32_cnt, MASKHWORD);
+
+	crc32_cnt = rtw_read32(rtwdev, REG_CRC_HT);
+	dm_info->ht_ok_cnt = u32_get_bits(crc32_cnt, MASKLWORD);
+	dm_info->ht_err_cnt = u32_get_bits(crc32_cnt, MASKHWORD);
+
+	crc32_cnt = rtw_read32(rtwdev, REG_CRC_VHT);
+	dm_info->vht_ok_cnt = u32_get_bits(crc32_cnt, MASKLWORD);
+	dm_info->vht_err_cnt = u32_get_bits(crc32_cnt, MASKHWORD);
+
+	cca32_cnt = rtw_read32(rtwdev, REG_CCA_OFDM);
+	dm_info->ofdm_cca_cnt = u32_get_bits(cca32_cnt, MASKHWORD);
+	dm_info->total_cca_cnt = dm_info->ofdm_cca_cnt;
+	if (cck_enable) {
+		cca32_cnt = rtw_read32(rtwdev, REG_CCA_CCK);
+		dm_info->cck_cca_cnt = u32_get_bits(cca32_cnt, MASKLWORD);
+		dm_info->total_cca_cnt += dm_info->cck_cca_cnt;
+	}
+
+	rtw_write32_set(rtwdev, REG_FAS, BIT(17));
+	rtw_write32_clr(rtwdev, REG_FAS, BIT(17));
+	rtw_write32_clr(rtwdev, REG_CCK0_FAREPORT, BIT(15));
+	rtw_write32_set(rtwdev, REG_CCK0_FAREPORT, BIT(15));
+	rtw_write32_set(rtwdev, REG_CNTRST, BIT(0));
+	rtw_write32_clr(rtwdev, REG_CNTRST, BIT(0));
+}
+EXPORT_SYMBOL(rtw88xxa_false_alarm_statistics);
+
+void rtw88xxa_iqk_backup_mac_bb(struct rtw_dev *rtwdev,
+				u32 *macbb_backup,
+				const u32 *backup_macbb_reg,
+				u32 macbb_num)
+{
+	u32 i;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	/* save MACBB default value */
+	for (i = 0; i < macbb_num; i++)
+		macbb_backup[i] = rtw_read32(rtwdev, backup_macbb_reg[i]);
+}
+EXPORT_SYMBOL(rtw88xxa_iqk_backup_mac_bb);
+
+void rtw88xxa_iqk_backup_afe(struct rtw_dev *rtwdev, u32 *afe_backup,
+			     const u32 *backup_afe_reg, u32 afe_num)
+{
+	u32 i;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	/* Save AFE Parameters */
+	for (i = 0; i < afe_num; i++)
+		afe_backup[i] = rtw_read32(rtwdev, backup_afe_reg[i]);
+}
+EXPORT_SYMBOL(rtw88xxa_iqk_backup_afe);
+
+void rtw88xxa_iqk_restore_mac_bb(struct rtw_dev *rtwdev,
+				 u32 *macbb_backup,
+				 const u32 *backup_macbb_reg,
+				 u32 macbb_num)
+{
+	u32 i;
+
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	/* Reload MacBB Parameters */
+	for (i = 0; i < macbb_num; i++)
+		rtw_write32(rtwdev, backup_macbb_reg[i], macbb_backup[i]);
+}
+EXPORT_SYMBOL(rtw88xxa_iqk_restore_mac_bb);
+
+void rtw88xxa_iqk_configure_mac(struct rtw_dev *rtwdev)
+{
+	/* [31] = 0 --> Page C */
+	rtw_write32_mask(rtwdev, REG_CCASEL, BIT(31), 0x0);
+
+	rtw_write8(rtwdev, REG_TXPAUSE, 0x3f);
+	rtw_write32_mask(rtwdev, REG_BCN_CTRL,
+			 (BIT_EN_BCN_FUNCTION << 8) | BIT_EN_BCN_FUNCTION, 0x0);
+
+	/* RX ante off */
+	rtw_write8(rtwdev, REG_RXPSEL, 0x00);
+
+	/* CCA off */
+	rtw_write32_mask(rtwdev, REG_CCA2ND, 0xf, 0xc);
+
+	/* CCK RX path off */
+	rtw_write8(rtwdev, REG_CCK_RX + 3, 0xf);
+}
+EXPORT_SYMBOL(rtw88xxa_iqk_configure_mac);
+
+bool rtw88xxa_iqk_finish(int average, int threshold,
+			 int *x_temp, int *y_temp, int *x, int *y,
+			 bool break_inner, bool break_outer)
+{
+	bool finish = false;
+	int i, ii, dx, dy;
+
+	for (i = 0; i < average; i++) {
+		for (ii = i + 1; ii < average; ii++) {
+			dx = abs_diff(x_temp[i] >> 21, x_temp[ii] >> 21);
+			dy = abs_diff(y_temp[i] >> 21, y_temp[ii] >> 21);
+
+			if (dx < threshold && dy < threshold) {
+				*x = ((x_temp[i] >> 21) + (x_temp[ii] >> 21));
+				*y = ((y_temp[i] >> 21) + (y_temp[ii] >> 21));
+
+				*x /= 2;
+				*y /= 2;
+
+				finish = true;
+
+				if (break_inner)
+					break;
+			}
+		}
+
+		if (finish && break_outer)
+			break;
+	}
+
+	return finish;
+}
+EXPORT_SYMBOL(rtw88xxa_iqk_finish);
+
+static void rtw88xxa_pwrtrack_set(struct rtw_dev *rtwdev, u8 tx_rate, u8 path)
+{
+	static const u32 reg_txscale[2] = { REG_TXSCALE_A, REG_TXSCALE_B };
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	u8 cck_swing_idx, ofdm_swing_idx;
+	u8 pwr_tracking_limit;
+
+	switch (tx_rate) {
+	case DESC_RATE1M ... DESC_RATE11M:
+		pwr_tracking_limit = 32;
+		break;
+	case DESC_RATE6M ... DESC_RATE48M:
+	case DESC_RATEMCS3 ... DESC_RATEMCS4:
+	case DESC_RATEMCS11 ... DESC_RATEMCS12:
+	case DESC_RATEVHT1SS_MCS3 ... DESC_RATEVHT1SS_MCS4:
+	case DESC_RATEVHT2SS_MCS3 ... DESC_RATEVHT2SS_MCS4:
+		pwr_tracking_limit = 30;
+		break;
+	case DESC_RATE54M:
+	case DESC_RATEMCS5 ... DESC_RATEMCS7:
+	case DESC_RATEMCS13 ... DESC_RATEMCS15:
+	case DESC_RATEVHT1SS_MCS5 ... DESC_RATEVHT1SS_MCS6:
+	case DESC_RATEVHT2SS_MCS5 ... DESC_RATEVHT2SS_MCS6:
+		pwr_tracking_limit = 28;
+		break;
+	case DESC_RATEMCS0 ... DESC_RATEMCS2:
+	case DESC_RATEMCS8 ... DESC_RATEMCS10:
+	case DESC_RATEVHT1SS_MCS0 ... DESC_RATEVHT1SS_MCS2:
+	case DESC_RATEVHT2SS_MCS0 ... DESC_RATEVHT2SS_MCS2:
+		pwr_tracking_limit = 34;
+		break;
+	case DESC_RATEVHT1SS_MCS7:
+	case DESC_RATEVHT2SS_MCS7:
+		pwr_tracking_limit = 26;
+		break;
+	default:
+	case DESC_RATEVHT1SS_MCS8:
+	case DESC_RATEVHT2SS_MCS8:
+		pwr_tracking_limit = 24;
+		break;
+	case DESC_RATEVHT1SS_MCS9:
+	case DESC_RATEVHT2SS_MCS9:
+		pwr_tracking_limit = 22;
+		break;
+	}
+
+	cck_swing_idx = dm_info->delta_power_index[path] + dm_info->default_cck_index;
+	ofdm_swing_idx = dm_info->delta_power_index[path] + dm_info->default_ofdm_index;
+
+	if (ofdm_swing_idx > pwr_tracking_limit) {
+		if (path == RF_PATH_A)
+			dm_info->txagc_remnant_cck = cck_swing_idx - pwr_tracking_limit;
+		dm_info->txagc_remnant_ofdm[path] = ofdm_swing_idx - pwr_tracking_limit;
+
+		ofdm_swing_idx = pwr_tracking_limit;
+	} else if (ofdm_swing_idx == 0) {
+		if (path == RF_PATH_A)
+			dm_info->txagc_remnant_cck = cck_swing_idx;
+		dm_info->txagc_remnant_ofdm[path] = ofdm_swing_idx;
+	} else {
+		if (path == RF_PATH_A)
+			dm_info->txagc_remnant_cck = 0;
+		dm_info->txagc_remnant_ofdm[path] = 0;
+	}
+
+	rtw_write32_mask(rtwdev, reg_txscale[path], GENMASK(31, 21),
+			 rtw88xxa_txscale_tbl[ofdm_swing_idx]);
+}
+
+void rtw88xxa_phy_pwrtrack(struct rtw_dev *rtwdev,
+			   void (*do_lck)(struct rtw_dev *rtwdev),
+			   void (*do_iqk)(struct rtw_dev *rtwdev))
+{
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+	struct rtw_hal *hal = &rtwdev->hal;
+	struct rtw_swing_table swing_table;
+	s8 remnant_pre[RTW_RF_PATH_MAX];
+	u8 thermal_value, delta, path;
+	bool need_iqk;
+
+	rtw_phy_config_swing_table(rtwdev, &swing_table);
+
+	if (rtwdev->efuse.thermal_meter[0] == 0xff) {
+		pr_err_once("efuse thermal meter is 0xff\n");
+		return;
+	}
+
+	thermal_value = rtw_read_rf(rtwdev, RF_PATH_A, RF_T_METER, 0xfc00);
+
+	rtw_phy_pwrtrack_avg(rtwdev, thermal_value, RF_PATH_A);
+
+	need_iqk = rtw_phy_pwrtrack_need_iqk(rtwdev);
+
+	if (need_iqk && do_lck)
+		do_lck(rtwdev);
+
+	if (dm_info->pwr_trk_init_trigger)
+		dm_info->pwr_trk_init_trigger = false;
+	else if (!rtw_phy_pwrtrack_thermal_changed(rtwdev, thermal_value,
+						   RF_PATH_A))
+		goto iqk;
+
+	delta = rtw_phy_pwrtrack_get_delta(rtwdev, RF_PATH_A);
+
+	for (path = RF_PATH_A; path < hal->rf_path_num; path++) {
+		remnant_pre[path] = dm_info->txagc_remnant_ofdm[path];
+
+		dm_info->delta_power_index[path] =
+			rtw_phy_pwrtrack_get_pwridx(rtwdev, &swing_table, path,
+						    RF_PATH_A, delta);
+
+		if (dm_info->delta_power_index[path] !=
+		    dm_info->delta_power_index_last[path]) {
+			dm_info->delta_power_index_last[path] =
+				dm_info->delta_power_index[path];
+
+			rtw88xxa_pwrtrack_set(rtwdev, dm_info->tx_rate, path);
+		}
+	}
+
+	for (path = RF_PATH_A; path < hal->rf_path_num; path++) {
+		if (remnant_pre[path] != dm_info->txagc_remnant_ofdm[path]) {
+			rtw_phy_set_tx_power_level(rtwdev,
+						   hal->current_channel);
+			break;
+		}
+	}
+
+iqk:
+	if (need_iqk)
+		do_iqk(rtwdev);
+}
+EXPORT_SYMBOL(rtw88xxa_phy_pwrtrack);
+
+void rtw88xxa_phy_cck_pd_set(struct rtw_dev *rtwdev, u8 new_lvl)
+{
+	static const u8 pd[CCK_PD_LV_MAX] = {0x40, 0x83, 0xcd, 0xdd, 0xed};
+	struct rtw_dm_info *dm_info = &rtwdev->dm_info;
+
+	/* Override rtw_phy_cck_pd_lv_link(). It implements something
+	 * like type 2/3/4. We need type 1 here.
+	 */
+	if (rtw_is_assoc(rtwdev)) {
+		if (dm_info->min_rssi > 60) {
+			new_lvl = CCK_PD_LV3;
+		} else if (dm_info->min_rssi > 35) {
+			new_lvl = CCK_PD_LV2;
+		} else if (dm_info->min_rssi > 20) {
+			if (dm_info->cck_fa_avg > 500)
+				new_lvl = CCK_PD_LV2;
+			else if (dm_info->cck_fa_avg < 250)
+				new_lvl = CCK_PD_LV1;
+			else
+				return;
+		} else {
+			new_lvl = CCK_PD_LV1;
+		}
+	}
+
+	rtw_dbg(rtwdev, RTW_DBG_PHY, "lv: (%d) -> (%d)\n",
+		dm_info->cck_pd_lv[RTW_CHANNEL_WIDTH_20][RF_PATH_A], new_lvl);
+
+	if (dm_info->cck_pd_lv[RTW_CHANNEL_WIDTH_20][RF_PATH_A] == new_lvl)
+		return;
+
+	dm_info->cck_fa_avg = CCK_FA_AVG_RESET;
+	dm_info->cck_pd_lv[RTW_CHANNEL_WIDTH_20][RF_PATH_A] = new_lvl;
+
+	rtw_write8(rtwdev, REG_CCK_PD_TH, pd[new_lvl]);
+}
+EXPORT_SYMBOL(rtw88xxa_phy_cck_pd_set);
+
+MODULE_AUTHOR("Realtek Corporation");
+MODULE_DESCRIPTION("Realtek 802.11ac wireless 8821a/8811a/8812a common code");
+MODULE_LICENSE("Dual BSD/GPL");
diff --git a/drivers/net/wireless/realtek/rtw88/rtw88xxa.h b/drivers/net/wireless/realtek/rtw88/rtw88xxa.h
new file mode 100644
index 000000000000..09a45c1a4129
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/rtw88xxa.h
@@ -0,0 +1,175 @@
+/* SPDX-License-Identifier: GPL-2.0 OR BSD-3-Clause */
+/* Copyright(c) 2024  Realtek Corporation
+ */
+
+#ifndef __RTW88XXA_H__
+#define __RTW88XXA_H__
+
+#include <asm/byteorder.h>
+#include "reg.h"
+
+struct rtw8821au_efuse {
+	u8 res4[48];			/* 0xd0 */
+	u8 vid[2];			/* 0x100 */
+	u8 pid[2];
+	u8 res8[3];
+	u8 mac_addr[ETH_ALEN];		/* 0x107 */
+	u8 res9[243];
+} __packed;
+
+struct rtw8812au_efuse {
+	u8 vid[2];			/* 0xd0 */
+	u8 pid[2];			/* 0xd2 */
+	u8 res0[3];
+	u8 mac_addr[ETH_ALEN];		/* 0xd7 */
+	u8 res1[291];
+} __packed;
+
+struct rtw88xxa_efuse {
+	__le16 rtl_id;
+	u8 res0[6];			/* 0x02 */
+	u8 usb_mode;			/* 0x08 */
+	u8 res1[7];			/* 0x09 */
+
+	/* power index for four RF paths */
+	struct rtw_txpwr_idx txpwr_idx_table[4];
+
+	u8 channel_plan;		/* 0xb8 */
+	u8 xtal_k;
+	u8 thermal_meter;
+	u8 iqk_lck;
+	u8 pa_type;			/* 0xbc */
+	u8 lna_type_2g;			/* 0xbd */
+	u8 res2;
+	u8 lna_type_5g;			/* 0xbf */
+	u8 res3;
+	u8 rf_board_option;		/* 0xc1 */
+	u8 rf_feature_option;
+	u8 rf_bt_setting;
+	u8 eeprom_version;
+	u8 eeprom_customer_id;		/* 0xc5 */
+	u8 tx_bb_swing_setting_2g;
+	u8 tx_bb_swing_setting_5g;
+	u8 tx_pwr_calibrate_rate;
+	u8 rf_antenna_option;		/* 0xc9 */
+	u8 rfe_option;
+	u8 country_code[2];
+	u8 res4[3];
+	union {
+		struct rtw8821au_efuse rtw8821au;
+		struct rtw8812au_efuse rtw8812au;
+	};
+} __packed;
+
+static_assert(sizeof(struct rtw88xxa_efuse) == 512);
+
+#define WLAN_BCN_DMA_TIME			0x02
+#define WLAN_TBTT_PROHIBIT			0x04
+#define WLAN_TBTT_HOLD_TIME			0x064
+#define WLAN_TBTT_TIME	(WLAN_TBTT_PROHIBIT |\
+			(WLAN_TBTT_HOLD_TIME << BIT_SHIFT_TBTT_HOLD_TIME_AP))
+
+struct rtw_jaguar_phy_status_rpt {
+	__le32 w0;
+	__le32 w1;
+	__le32 w2;
+	__le32 w3;
+	__le32 w4;
+	__le32 w5;
+	__le32 w6;
+} __packed;
+
+#define RTW_JGRPHY_W0_GAIN_A		GENMASK(6, 0)
+#define RTW_JGRPHY_W0_TRSW_A		BIT(7)
+#define RTW_JGRPHY_W0_GAIN_B		GENMASK(14, 8)
+#define RTW_JGRPHY_W0_TRSW_B		BIT(15)
+#define RTW_JGRPHY_W0_CHL_NUM		GENMASK(25, 16)
+#define RTW_JGRPHY_W0_SUB_CHNL		GENMASK(29, 26)
+#define RTW_JGRPHY_W0_R_RFMOD		GENMASK(31, 30)
+
+/* CCK: */
+#define RTW_JGRPHY_W1_SIG_QUAL		GENMASK(7, 0)
+#define RTW_JGRPHY_W1_AGC_RPT_VGA_IDX	GENMASK(12, 8)
+#define RTW_JGRPHY_W1_AGC_RPT_LNA_IDX	GENMASK(15, 13)
+#define RTW_JGRPHY_W1_BB_POWER		GENMASK(23, 16)
+/* OFDM: */
+#define RTW_JGRPHY_W1_PWDB_ALL		GENMASK(7, 0)
+#define RTW_JGRPHY_W1_CFO_SHORT_A	GENMASK(15, 8)	/* s8 */
+#define RTW_JGRPHY_W1_CFO_SHORT_B	GENMASK(23, 16)	/* s8 */
+#define RTW_JGRPHY_W1_BT_RF_CH_MSB	GENMASK(31, 30)
+
+#define RTW_JGRPHY_W2_ANT_DIV_SW_A	BIT(0)
+#define RTW_JGRPHY_W2_ANT_DIV_SW_B	BIT(1)
+#define RTW_JGRPHY_W2_BT_RF_CH_LSB	GENMASK(7, 2)
+#define RTW_JGRPHY_W2_CFO_TAIL_A	GENMASK(15, 8)	/* s8 */
+#define RTW_JGRPHY_W2_CFO_TAIL_B	GENMASK(23, 16)	/* s8 */
+#define RTW_JGRPHY_W2_PCTS_MSK_RPT_0	GENMASK(31, 24)
+
+#define RTW_JGRPHY_W3_PCTS_MSK_RPT_1	GENMASK(7, 0)
+/* Stream 1 and 2 RX EVM: */
+#define RTW_JGRPHY_W3_RXEVM_1		GENMASK(15, 8)	/* s8 */
+#define RTW_JGRPHY_W3_RXEVM_2		GENMASK(23, 16)	/* s8 */
+#define RTW_JGRPHY_W3_RXSNR_A		GENMASK(31, 24)	/* s8 */
+
+#define RTW_JGRPHY_W4_RXSNR_B		GENMASK(7, 0)	/* s8 */
+#define RTW_JGRPHY_W4_PCTS_MSK_RPT_2	GENMASK(21, 8)
+#define RTW_JGRPHY_W4_PCTS_RPT_VALID	BIT(22)
+#define RTW_JGRPHY_W4_RXEVM_3		GENMASK(31, 24)	/* s8 */
+
+#define RTW_JGRPHY_W5_RXEVM_4		GENMASK(7, 0)	/* s8 */
+/* 8812a, stream 1 and 2 CSI: */
+#define RTW_JGRPHY_W5_CSI_CURRENT_1	GENMASK(15, 8)
+#define RTW_JGRPHY_W5_CSI_CURRENT_2	GENMASK(23, 16)
+/* 8814a: */
+#define RTW_JGRPHY_W5_RXSNR_C		GENMASK(15, 8)	/* s8 */
+#define RTW_JGRPHY_W5_RXSNR_D		GENMASK(23, 16)	/* s8 */
+#define RTW_JGRPHY_W5_GAIN_C		GENMASK(30, 24)
+#define RTW_JGRPHY_W5_TRSW_C		BIT(31)
+
+#define RTW_JGRPHY_W6_GAIN_D		GENMASK(6, 0)
+#define RTW_JGRPHY_W6_TRSW_D		BIT(7)
+#define RTW_JGRPHY_W6_SIGEVM		GENMASK(15, 8)	/* s8 */
+#define RTW_JGRPHY_W6_ANTIDX_ANTC	GENMASK(18, 16)
+#define RTW_JGRPHY_W6_ANTIDX_ANTD	GENMASK(21, 19)
+#define RTW_JGRPHY_W6_DPDT_CTRL_KEEP	BIT(22)
+#define RTW_JGRPHY_W6_GNT_BT_KEEP	BIT(23)
+#define RTW_JGRPHY_W6_ANTIDX_ANTA	GENMASK(26, 24)
+#define RTW_JGRPHY_W6_ANTIDX_ANTB	GENMASK(29, 27)
+#define RTW_JGRPHY_W6_HW_ANTSW_OCCUR	GENMASK(31, 30)
+
+#define RF18_BW_MASK		(BIT(11) | BIT(10))
+
+void rtw88xxa_efuse_grant(struct rtw_dev *rtwdev, bool on);
+int rtw88xxa_read_efuse(struct rtw_dev *rtwdev, u8 *log_map);
+void rtw88xxa_power_off(struct rtw_dev *rtwdev,
+			const struct rtw_pwr_seq_cmd *const *enter_lps_flow);
+int rtw88xxa_power_on(struct rtw_dev *rtwdev);
+u32 rtw88xxa_phy_read_rf(struct rtw_dev *rtwdev,
+			 enum rtw_rf_path rf_path, u32 addr, u32 mask);
+void rtw88xxa_set_channel(struct rtw_dev *rtwdev, u8 channel, u8 bw,
+			  u8 primary_chan_idx);
+void rtw88xxa_query_phy_status(struct rtw_dev *rtwdev, u8 *phy_status,
+			       struct rtw_rx_pkt_stat *pkt_stat,
+			       s8 (*cck_rx_pwr)(u8 lna_idx, u8 vga_idx));
+void rtw88xxa_set_tx_power_index(struct rtw_dev *rtwdev);
+void rtw88xxa_false_alarm_statistics(struct rtw_dev *rtwdev);
+void rtw88xxa_iqk_backup_mac_bb(struct rtw_dev *rtwdev,
+				u32 *macbb_backup,
+				const u32 *backup_macbb_reg,
+				u32 macbb_num);
+void rtw88xxa_iqk_backup_afe(struct rtw_dev *rtwdev, u32 *afe_backup,
+			     const u32 *backup_afe_reg, u32 afe_num);
+void rtw88xxa_iqk_restore_mac_bb(struct rtw_dev *rtwdev,
+				 u32 *macbb_backup,
+				 const u32 *backup_macbb_reg,
+				 u32 macbb_num);
+void rtw88xxa_iqk_configure_mac(struct rtw_dev *rtwdev);
+bool rtw88xxa_iqk_finish(int average, int threshold,
+			 int *x_temp, int *y_temp, int *x, int *y,
+			 bool break_inner, bool break_outer);
+void rtw88xxa_phy_pwrtrack(struct rtw_dev *rtwdev,
+			   void (*do_lck)(struct rtw_dev *rtwdev),
+			   void (*do_iqk)(struct rtw_dev *rtwdev));
+void rtw88xxa_phy_cck_pd_set(struct rtw_dev *rtwdev, u8 new_lvl);
+
+#endif
diff --git a/drivers/net/wireless/realtek/rtw88/rx.c b/drivers/net/wireless/realtek/rtw88/rx.c
index 66f9419588cf..123b47e464b5 100644
--- a/drivers/net/wireless/realtek/rtw88/rx.c
+++ b/drivers/net/wireless/realtek/rtw88/rx.c
@@ -73,6 +73,12 @@ static void rtw_rx_phy_stat(struct rtw_dev *rtwdev,
 		rate_ss_evm = 2;
 		evm_id = RTW_EVM_2SS_A;
 		break;
+	case DESC_RATEMCS16...DESC_RATEMCS23:
+	case DESC_RATEVHT3SS_MCS0...DESC_RATEVHT3SS_MCS9:
+		rate_ss = 3;
+		rate_ss_evm = 3;
+		evm_id = RTW_EVM_3SS_A;
+		break;
 	default:
 		rtw_warn(rtwdev, "unknown pkt rate = %d\n", pkt_stat->rate);
 		return;
@@ -176,8 +182,16 @@ void rtw_update_rx_freq_from_ie(struct rtw_dev *rtwdev, struct sk_buff *skb,
 	else
 		goto fill_rx_status;
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0))
 	channel_number = cfg80211_get_ies_channel_number(variable, ielen,
 							 NL80211_BAND_2GHZ);
+#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 17, 0))
+	channel_number = cfg80211_get_ies_channel_number(variable, ielen,
+							 NL80211_BAND_2GHZ, 0);
+#else
+	channel_number = -1;
+#endif
+
 	if (channel_number != -1)
 		channel = channel_number;
 
@@ -187,11 +201,10 @@ void rtw_update_rx_freq_from_ie(struct rtw_dev *rtwdev, struct sk_buff *skb,
 }
 EXPORT_SYMBOL(rtw_update_rx_freq_from_ie);
 
-void rtw_rx_fill_rx_status(struct rtw_dev *rtwdev,
-			   struct rtw_rx_pkt_stat *pkt_stat,
-			   struct ieee80211_hdr *hdr,
-			   struct ieee80211_rx_status *rx_status,
-			   u8 *phy_status)
+static void rtw_rx_fill_rx_status(struct rtw_dev *rtwdev,
+				  struct rtw_rx_pkt_stat *pkt_stat,
+				  struct ieee80211_hdr *hdr,
+				  struct ieee80211_rx_status *rx_status)
 {
 	struct ieee80211_hw *hw = rtwdev->hw;
 	u8 path;
@@ -208,9 +221,17 @@ void rtw_rx_fill_rx_status(struct rtw_dev *rtwdev,
 		rx_status->flag |= RX_FLAG_DECRYPTED;
 
 	if (pkt_stat->rate >= DESC_RATEVHT1SS_MCS0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
 		rx_status->encoding = RX_ENC_VHT;
+#else
+		rx_status->flag |= RX_FLAG_VHT;
+#endif
 	else if (pkt_stat->rate >= DESC_RATEMCS0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
 		rx_status->encoding = RX_ENC_HT;
+#else
+		rx_status->flag |= RX_FLAG_HT;
+#endif
 
 	if (rx_status->band == NL80211_BAND_5GHZ &&
 	    pkt_stat->rate >= DESC_RATE6M &&
@@ -229,18 +250,93 @@ void rtw_rx_fill_rx_status(struct rtw_dev *rtwdev,
 	rx_status->mactime = pkt_stat->tsf_low;
 
 	if (pkt_stat->bw == RTW_CHANNEL_WIDTH_80)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
 		rx_status->bw = RATE_INFO_BW_80;
+#else
+		rx_status->vht_flag |= RX_VHT_FLAG_80MHZ;
+#endif
 	else if (pkt_stat->bw == RTW_CHANNEL_WIDTH_40)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
 		rx_status->bw = RATE_INFO_BW_40;
+#else
+		rx_status->flag |= RX_FLAG_40MHZ;
+#endif
 	else
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 12, 0)
 		rx_status->bw = RATE_INFO_BW_20;
-
-	rx_status->signal = pkt_stat->signal_power;
-	for (path = 0; path < rtwdev->hal.rf_path_num; path++) {
-		rx_status->chains |= BIT(path);
-		rx_status->chain_signal[path] = pkt_stat->rx_power[path];
+#else
+		/* What goes here? */
+#endif
+
+	if (pkt_stat->phy_status) {
+		rx_status->signal = pkt_stat->signal_power;
+		for (path = 0; path < rtwdev->hal.rf_path_num; path++) {
+			rx_status->chains |= BIT(path);
+			rx_status->chain_signal[path] = pkt_stat->rx_power[path];
+		}
+	} else {
+		rx_status->flag |= RX_FLAG_NO_SIGNAL_VAL;
 	}
 
 	rtw_rx_addr_match(rtwdev, pkt_stat, hdr);
+
+	/* Rtl8723cs driver checks for size < 14 or size > 8192 and
+	 * simply drops the packet.
+	 */
+	if (rtwdev->chip->id == RTW_CHIP_TYPE_8703B && pkt_stat->pkt_len == 0) {
+		rx_status->flag |= RX_FLAG_NO_PSDU;
+		rtw_dbg(rtwdev, RTW_DBG_RX, "zero length packet");
+	}
+}
+
+void rtw_rx_query_rx_desc(struct rtw_dev *rtwdev, void *rx_desc8,
+			  struct rtw_rx_pkt_stat *pkt_stat,
+			  struct ieee80211_rx_status *rx_status)
+{
+	u32 desc_sz = rtwdev->chip->rx_pkt_desc_sz;
+	struct rtw_rx_desc *rx_desc = rx_desc8;
+	struct ieee80211_hdr *hdr;
+	u32 enc_type, swdec;
+	void *phy_status;
+
+	memset(pkt_stat, 0, sizeof(*pkt_stat));
+
+	pkt_stat->pkt_len = le32_get_bits(rx_desc->w0, RTW_RX_DESC_W0_PKT_LEN);
+	pkt_stat->crc_err = le32_get_bits(rx_desc->w0, RTW_RX_DESC_W0_CRC32);
+	pkt_stat->icv_err = le32_get_bits(rx_desc->w0, RTW_RX_DESC_W0_ICV_ERR);
+	pkt_stat->drv_info_sz = le32_get_bits(rx_desc->w0,
+					      RTW_RX_DESC_W0_DRV_INFO_SIZE);
+	enc_type = le32_get_bits(rx_desc->w0, RTW_RX_DESC_W0_ENC_TYPE);
+	pkt_stat->shift = le32_get_bits(rx_desc->w0, RTW_RX_DESC_W0_SHIFT);
+	pkt_stat->phy_status = le32_get_bits(rx_desc->w0, RTW_RX_DESC_W0_PHYST);
+	swdec = le32_get_bits(rx_desc->w0, RTW_RX_DESC_W0_SWDEC);
+	pkt_stat->decrypted = !swdec && enc_type != RX_DESC_ENC_NONE;
+
+	pkt_stat->cam_id = le32_get_bits(rx_desc->w1, RTW_RX_DESC_W1_MACID);
+
+	pkt_stat->is_c2h = le32_get_bits(rx_desc->w2, RTW_RX_DESC_W2_C2H);
+	pkt_stat->ppdu_cnt = le32_get_bits(rx_desc->w2, RTW_RX_DESC_W2_PPDU_CNT);
+
+	pkt_stat->rate = le32_get_bits(rx_desc->w3, RTW_RX_DESC_W3_RX_RATE);
+
+	pkt_stat->bw = le32_get_bits(rx_desc->w4, RTW_RX_DESC_W4_BW);
+
+	pkt_stat->tsf_low = le32_get_bits(rx_desc->w5, RTW_RX_DESC_W5_TSFL);
+
+	/* drv_info_sz is in unit of 8-bytes */
+	pkt_stat->drv_info_sz *= 8;
+
+	/* c2h cmd pkt's rx/phy status is not interested */
+	if (pkt_stat->is_c2h)
+		return;
+
+	phy_status = rx_desc8 + desc_sz + pkt_stat->shift;
+	hdr = phy_status + pkt_stat->drv_info_sz;
+	pkt_stat->hdr = hdr;
+
+	if (pkt_stat->phy_status)
+		rtwdev->chip->ops->query_phy_status(rtwdev, phy_status, pkt_stat);
+
+	rtw_rx_fill_rx_status(rtwdev, pkt_stat, hdr, rx_status);
 }
-EXPORT_SYMBOL(rtw_rx_fill_rx_status);
+EXPORT_SYMBOL(rtw_rx_query_rx_desc);
diff --git a/drivers/net/wireless/realtek/rtw88/rx.h b/drivers/net/wireless/realtek/rtw88/rx.h
index 9f0019112987..6b7dee245c0a 100644
--- a/drivers/net/wireless/realtek/rtw88/rx.h
+++ b/drivers/net/wireless/realtek/rtw88/rx.h
@@ -14,42 +14,40 @@ enum rtw_rx_desc_enc {
 	RX_DESC_ENC_WEP104	= 5,
 };
 
-#define GET_RX_DESC_PHYST(rxdesc)                                              \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x00), BIT(26))
-#define GET_RX_DESC_ICV_ERR(rxdesc)                                            \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x00), BIT(15))
-#define GET_RX_DESC_CRC32(rxdesc)                                              \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x00), BIT(14))
-#define GET_RX_DESC_SWDEC(rxdesc)                                              \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x00), BIT(27))
-#define GET_RX_DESC_C2H(rxdesc)                                                \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x02), BIT(28))
-#define GET_RX_DESC_PKT_LEN(rxdesc)                                            \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x00), GENMASK(13, 0))
-#define GET_RX_DESC_DRV_INFO_SIZE(rxdesc)                                      \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x00), GENMASK(19, 16))
-#define GET_RX_DESC_SHIFT(rxdesc)                                              \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x00), GENMASK(25, 24))
-#define GET_RX_DESC_ENC_TYPE(rxdesc)                                           \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x00), GENMASK(22, 20))
-#define GET_RX_DESC_RX_RATE(rxdesc)                                            \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x03), GENMASK(6, 0))
-#define GET_RX_DESC_MACID(rxdesc)                                              \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x01), GENMASK(6, 0))
-#define GET_RX_DESC_PPDU_CNT(rxdesc)                                           \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x02), GENMASK(30, 29))
-#define GET_RX_DESC_TSFL(rxdesc)                                               \
-	le32_get_bits(*((__le32 *)(rxdesc) + 0x05), GENMASK(31, 0))
-#define GET_RX_DESC_BW(rxdesc)                                                 \
-	(le32_get_bits(*((__le32 *)(rxdesc) + 0x04), GENMASK(5, 4)))
+struct rtw_rx_desc {
+	__le32 w0;
+	__le32 w1;
+	__le32 w2;
+	__le32 w3;
+	__le32 w4;
+	__le32 w5;
+} __packed;
+
+#define RTW_RX_DESC_W0_PKT_LEN		GENMASK(13, 0)
+#define RTW_RX_DESC_W0_CRC32		BIT(14)
+#define RTW_RX_DESC_W0_ICV_ERR		BIT(15)
+#define RTW_RX_DESC_W0_DRV_INFO_SIZE	GENMASK(19, 16)
+#define RTW_RX_DESC_W0_ENC_TYPE		GENMASK(22, 20)
+#define RTW_RX_DESC_W0_SHIFT		GENMASK(25, 24)
+#define RTW_RX_DESC_W0_PHYST		BIT(26)
+#define RTW_RX_DESC_W0_SWDEC		BIT(27)
+
+#define RTW_RX_DESC_W1_MACID		GENMASK(6, 0)
+
+#define RTW_RX_DESC_W2_C2H		BIT(28)
+#define RTW_RX_DESC_W2_PPDU_CNT		GENMASK(30, 29)
+
+#define RTW_RX_DESC_W3_RX_RATE		GENMASK(6, 0)
+
+#define RTW_RX_DESC_W4_BW		GENMASK(5, 4)
+
+#define RTW_RX_DESC_W5_TSFL		GENMASK(31, 0)
 
 void rtw_rx_stats(struct rtw_dev *rtwdev, struct ieee80211_vif *vif,
 		  struct sk_buff *skb);
-void rtw_rx_fill_rx_status(struct rtw_dev *rtwdev,
-			   struct rtw_rx_pkt_stat *pkt_stat,
-			   struct ieee80211_hdr *hdr,
-			   struct ieee80211_rx_status *rx_status,
-			   u8 *phy_status);
+void rtw_rx_query_rx_desc(struct rtw_dev *rtwdev, void *rx_desc8,
+			  struct rtw_rx_pkt_stat *pkt_stat,
+			  struct ieee80211_rx_status *rx_status);
 void rtw_update_rx_freq_from_ie(struct rtw_dev *rtwdev, struct sk_buff *skb,
 				struct ieee80211_rx_status *rx_status,
 				struct rtw_rx_pkt_stat *pkt_stat);
diff --git a/drivers/net/wireless/realtek/rtw88/sar.c b/drivers/net/wireless/realtek/rtw88/sar.c
index c472f1502b82..5b35cee8aad4 100644
--- a/drivers/net/wireless/realtek/rtw88/sar.c
+++ b/drivers/net/wireless/realtek/rtw88/sar.c
@@ -2,6 +2,8 @@
 /* Copyright(c) 2018-2021  Realtek Corporation
  */
 
+#include <linux/version.h>
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 #include "sar.h"
 #include "phy.h"
 #include "debug.h"
@@ -97,7 +99,7 @@ int rtw_set_sar_specs(struct rtw_dev *rtwdev,
 			power, BIT(RTW_COMMON_SAR_FCT));
 
 		for (j = 0; j < RTW_RF_PATH_MAX; j++) {
-			for (k = 0; k < RTW_RATE_SECTION_MAX; k++) {
+			for (k = 0; k < RTW_RATE_SECTION_NUM; k++) {
 				arg = (struct rtw_sar_arg){
 					.sar_band = idx,
 					.path = j,
@@ -112,3 +114,5 @@ int rtw_set_sar_specs(struct rtw_dev *rtwdev,
 
 	return rtw_apply_sar(rtwdev, &new);
 }
+#endif
+
diff --git a/drivers/net/wireless/realtek/rtw88/sar.h b/drivers/net/wireless/realtek/rtw88/sar.h
index e01e7bb790b7..75f6118ef92f 100644
--- a/drivers/net/wireless/realtek/rtw88/sar.h
+++ b/drivers/net/wireless/realtek/rtw88/sar.h
@@ -9,6 +9,7 @@
  */
 #define RTW_COMMON_SAR_FCT 2
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 11, 0)
 struct rtw_sar_arg {
 	u8 sar_band;
 	u8 path;
@@ -20,3 +21,5 @@ extern const struct cfg80211_sar_capa rtw_sar_capa;
 s8 rtw_query_sar(struct rtw_dev *rtwdev, const struct rtw_sar_arg *arg);
 int rtw_set_sar_specs(struct rtw_dev *rtwdev,
 		      const struct cfg80211_sar_specs *sar);
+#endif
+
diff --git a/drivers/net/wireless/realtek/rtw88/sdio.c b/drivers/net/wireless/realtek/rtw88/sdio.c
index 1d62b38526c4..579e0f6631c9 100644
--- a/drivers/net/wireless/realtek/rtw88/sdio.c
+++ b/drivers/net/wireless/realtek/rtw88/sdio.c
@@ -10,6 +10,7 @@
 #include <linux/mmc/host.h>
 #include <linux/mmc/sdio_func.h>
 #include "main.h"
+#include "mac.h"
 #include "debug.h"
 #include "fw.h"
 #include "ps.h"
@@ -677,12 +678,20 @@ static void rtw_sdio_enable_rx_aggregation(struct rtw_dev *rtwdev)
 {
 	u8 size, timeout;
 
-	if (rtw_chip_wcpu_11n(rtwdev)) {
+	switch (rtwdev->chip->id) {
+	case RTW_CHIP_TYPE_8703B:
 		size = 0x6;
 		timeout = 0x6;
-	} else {
+		break;
+	case RTW_CHIP_TYPE_8723D:
+		size = 0xa;
+		timeout = 0x3;
+		rtw_write8_set(rtwdev, REG_RXDMA_AGG_PG_TH + 3, BIT(7));
+		break;
+	default:
 		size = 0xff;
 		timeout = 0x1;
+		break;
 	}
 
 	/* Make the firmware honor the size limit configured below */
@@ -864,7 +873,7 @@ static void rtw_sdio_tx_skb_prepare(struct rtw_dev *rtwdev,
 
 	pkt_info->qsel = rtw_sdio_get_tx_qsel(rtwdev, skb, queue);
 
-	rtw_tx_fill_tx_desc(pkt_info, skb);
+	rtw_tx_fill_tx_desc(rtwdev, pkt_info, skb);
 	rtw_tx_fill_txdesc_checksum(rtwdev, pkt_info, pkt_desc);
 }
 
@@ -981,8 +990,7 @@ static void rtw_sdio_rxfifo_recv(struct rtw_dev *rtwdev, u32 rx_len)
 
 	while (true) {
 		rx_desc = skb->data;
-		chip->ops->query_rx_desc(rtwdev, rx_desc, &pkt_stat,
-					 &rx_status);
+		rtw_rx_query_rx_desc(rtwdev, rx_desc, &pkt_stat, &rx_status);
 		pkt_offset = pkt_desc_sz + pkt_stat.drv_info_sz +
 			     pkt_stat.shift;
 
@@ -1148,7 +1156,7 @@ static void rtw_sdio_declaim(struct rtw_dev *rtwdev,
 	sdio_release_host(sdio_func);
 }
 
-static struct rtw_hci_ops rtw_sdio_ops = {
+static const struct rtw_hci_ops rtw_sdio_ops = {
 	.tx_write = rtw_sdio_tx_write,
 	.tx_kick_off = rtw_sdio_tx_kick_off,
 	.setup = rtw_sdio_setup,
@@ -1158,6 +1166,7 @@ static struct rtw_hci_ops rtw_sdio_ops = {
 	.link_ps = rtw_sdio_link_ps,
 	.interface_cfg = rtw_sdio_interface_cfg,
 	.dynamic_rx_agg = NULL,
+	.write_firmware_page = rtw_write_firmware_page,
 
 	.read8 = rtw_sdio_read8,
 	.read16 = rtw_sdio_read16,
@@ -1299,12 +1308,19 @@ static void rtw_sdio_deinit_tx(struct rtw_dev *rtwdev)
 	struct rtw_sdio *rtwsdio = (struct rtw_sdio *)rtwdev->priv;
 	int i;
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 13, 0)
+	for (i = 0; i < RTK_MAX_TX_QUEUE_NUM; i++)
+		skb_queue_purge(&rtwsdio->tx_queue[i]);
+#endif
+
 	flush_workqueue(rtwsdio->txwq);
 	destroy_workqueue(rtwsdio->txwq);
 	kfree(rtwsdio->tx_handler_data);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
 	for (i = 0; i < RTK_MAX_TX_QUEUE_NUM; i++)
 		ieee80211_purge_tx_queue(rtwdev->hw, &rtwsdio->tx_queue[i]);
+#endif
 }
 
 int rtw_sdio_probe(struct sdio_func *sdio_func,
@@ -1329,6 +1345,34 @@ int rtw_sdio_probe(struct sdio_func *sdio_func,
 	rtwdev->hci.ops = &rtw_sdio_ops;
 	rtwdev->hci.type = RTW_HCI_TYPE_SDIO;
 
+	/* Insert a sleep of 500 ms. Without the delay, the wifi part
+	 * and the UART that controls Bluetooth interfere with one
+	 * another resulting in the following being logged:
+	 *
+	 * Start of SDIO probe function.
+	 * Bluetooth: HCI UART driver ver 2.3
+	 * Bluetooth: HCI UART protocol Three-wire (H5) registered
+	 * of_dma_request_slave_channel: dma-names property of node '/serial@fe650000'
+	 *	 missing or empty
+	 * dw-apb-uart fe650000.serial: failed to request DMA
+`	 * rtw_8821cs mmc3:0001:1: Firmware version 24.8.0, H2C version 12
+	 * rtw_8821cs mmc3:0001:1: sdio read32 failed (0x11080): -110
+	 *
+	 * If the UART is finished initializing before the SDIO probe
+	 * function startw, the following is logged:
+	 *
+	 * Bluetooth: HCI UART protocol Three-wire (H5) registered
+	 * of_dma_request_slave_channel: dma-names property of node '/serial@fe650000'
+	 *	missing or empty
+	 * dw-apb-uart fe650000.serial: failed to request DMA
+	 * Start of SDIO probe function.
+	 * rtw_8821cs mmc3:0001:1: Firmware version 24.8.0, H2C version 12
+	 * Bluetooth: hci0: RTL: examining hci_ver=08 hci_rev=000c lmp_ver=08 lmp_subver=8821
+	 * SDIO wifi works correctly.
+	 *
+	 * No adverse effects are observed from the delay.
+	 */
+	msleep(500);
 	ret = rtw_core_init(rtwdev);
 	if (ret)
 		goto err_release_hw;
diff --git a/drivers/net/wireless/realtek/rtw88/sdio_ids.h b/drivers/net/wireless/realtek/rtw88/sdio_ids.h
new file mode 100644
index 000000000000..f1a20d43844e
--- /dev/null
+++ b/drivers/net/wireless/realtek/rtw88/sdio_ids.h
@@ -0,0 +1,11 @@
+#define SDIO_VENDOR_ID_REALTEK			0x024c
+#define SDIO_DEVICE_ID_REALTEK_RTW8723BS	0xb723
+#define SDIO_DEVICE_ID_REALTEK_RTW8723DS_2ANT	0xd723
+#define SDIO_DEVICE_ID_REALTEK_RTW8723DS_1ANT	0xd724
+#define SDIO_DEVICE_ID_REALTEK_RTW8821BS	0xb821
+#define SDIO_DEVICE_ID_REALTEK_RTW8821CS	0xc821
+#define SDIO_DEVICE_ID_REALTEK_RTW8821DS	0xd821
+#define SDIO_DEVICE_ID_REALTEK_RTW8822BS	0xb822
+#define SDIO_DEVICE_ID_REALTEK_RTW8822CS	0xc822
+#define SDIO_DEVICE_ID_REALTEK_RTW8723CS	0xb703
+
diff --git a/drivers/net/wireless/realtek/rtw88/tx.c b/drivers/net/wireless/realtek/rtw88/tx.c
index dae7ca148865..79c27a417384 100644
--- a/drivers/net/wireless/realtek/rtw88/tx.c
+++ b/drivers/net/wireless/realtek/rtw88/tx.c
@@ -32,7 +32,8 @@ void rtw_tx_stats(struct rtw_dev *rtwdev, struct ieee80211_vif *vif,
 	}
 }
 
-void rtw_tx_fill_tx_desc(struct rtw_tx_pkt_info *pkt_info, struct sk_buff *skb)
+void rtw_tx_fill_tx_desc(struct rtw_dev *rtwdev,
+			 struct rtw_tx_pkt_info *pkt_info, struct sk_buff *skb)
 {
 	struct rtw_tx_desc *tx_desc = (struct rtw_tx_desc *)skb->data;
 	bool more_data = false;
@@ -67,6 +68,9 @@ void rtw_tx_fill_tx_desc(struct rtw_tx_pkt_info *pkt_info, struct sk_buff *skb)
 
 	tx_desc->w4 = le32_encode_bits(pkt_info->rate, RTW_TX_DESC_W4_DATARATE);
 
+	if (rtwdev->chip->old_datarate_fb_limit)
+		tx_desc->w4 |= le32_encode_bits(0x1f, RTW_TX_DESC_W4_DATARATE_FB_LIMIT);
+
 	tx_desc->w5 = le32_encode_bits(pkt_info->short_gi, RTW_TX_DESC_W5_DATA_SHORT) |
 		      le32_encode_bits(pkt_info->bw, RTW_TX_DESC_W5_DATA_BW) |
 		      le32_encode_bits(pkt_info->ldpc, RTW_TX_DESC_W5_DATA_LDPC) |
@@ -91,7 +95,11 @@ EXPORT_SYMBOL(rtw_tx_fill_tx_desc);
 
 static u8 get_tx_ampdu_factor(struct ieee80211_sta *sta)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 	u8 exp = sta->deflink.ht_cap.ampdu_factor;
+#else
+	u8 exp = sta->ht_cap.ampdu_factor;
+#endif
 
 	/* the least ampdu factor is 8K, and the value in the tx desc is the
 	 * max aggregation num, which represents val * 2 packets can be
@@ -102,7 +110,11 @@ static u8 get_tx_ampdu_factor(struct ieee80211_sta *sta)
 
 static u8 get_tx_ampdu_density(struct ieee80211_sta *sta)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 	return sta->deflink.ht_cap.ampdu_density;
+#else
+	return sta->ht_cap.ampdu_density;
+#endif
 }
 
 static u8 get_highest_ht_tx_rate(struct rtw_dev *rtwdev,
@@ -110,7 +122,11 @@ static u8 get_highest_ht_tx_rate(struct rtw_dev *rtwdev,
 {
 	u8 rate;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 	if (rtwdev->hal.rf_type == RF_2T2R && sta->deflink.ht_cap.mcs.rx_mask[1] != 0)
+#else
+	if (rtwdev->hal.rf_type == RF_2T2R && sta->ht_cap.mcs.rx_mask[1] != 0)
+#endif
 		rate = DESC_RATEMCS15;
 	else
 		rate = DESC_RATEMCS7;
@@ -125,7 +141,11 @@ static u8 get_highest_vht_tx_rate(struct rtw_dev *rtwdev,
 	u8 rate;
 	u16 tx_mcs_map;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 	tx_mcs_map = le16_to_cpu(sta->deflink.vht_cap.vht_mcs.tx_mcs_map);
+#else
+	tx_mcs_map = le16_to_cpu(sta->vht_cap.vht_mcs.tx_mcs_map);
+#endif
 	if (efuse->hw_cap.nss == 1) {
 		switch (tx_mcs_map & 0x3) {
 		case IEEE80211_VHT_MCS_SUPPORT_0_7:
@@ -172,9 +192,17 @@ static void rtw_tx_report_enable(struct rtw_dev *rtwdev,
 	pkt_info->report = true;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0)
 void rtw_tx_report_purge_timer(struct timer_list *t)
+#else
+void rtw_tx_report_purge_timer(void *cntx)
+#endif
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 14, 0)
 	struct rtw_dev *rtwdev = from_timer(rtwdev, t, tx_report.purge_timer);
+#else
+	struct rtw_dev *rtwdev = (struct rtw_dev *)cntx;
+#endif
 	struct rtw_tx_report *tx_report = &rtwdev->tx_report;
 	unsigned long flags;
 
@@ -243,7 +271,7 @@ void rtw_tx_report_handle(struct rtw_dev *rtwdev, struct sk_buff *skb, int src)
 	spin_lock_irqsave(&tx_report->q_lock, flags);
 	skb_queue_walk_safe(&tx_report->queue, cur, tmp) {
 		n = (u8 *)IEEE80211_SKB_CB(cur)->status.status_driver_data;
-		if (*n == sn) {
+		if (*n == sn || rtw_chip_wcpu_11n(rtwdev)) {
 			__skb_unlink(cur, &tx_report->queue);
 			rtw_tx_report_tx_status(rtwdev, cur, st == 0);
 			break;
@@ -359,6 +387,7 @@ static void rtw_tx_data_pkt_info_update(struct rtw_dev *rtwdev,
 	if (info->control.use_rts || skb->len > hw->wiphy->rts_threshold)
 		pkt_info->rts = true;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 0)
 	if (sta->deflink.vht_cap.vht_supported)
 		rate = get_highest_vht_tx_rate(rtwdev, sta);
 	else if (sta->deflink.ht_cap.ht_supported)
@@ -367,6 +396,16 @@ static void rtw_tx_data_pkt_info_update(struct rtw_dev *rtwdev,
 		rate = DESC_RATE11M;
 	else
 		rate = DESC_RATE54M;
+#else
+	if (sta->vht_cap.vht_supported)
+		rate = get_highest_vht_tx_rate(rtwdev, sta);
+	else if (sta->ht_cap.ht_supported)
+		rate = get_highest_ht_tx_rate(rtwdev, sta);
+	else if (sta->supp_rates[0] <= 0xf)
+		rate = DESC_RATE11M;
+	else
+		rate = DESC_RATE54M;
+#endif
 
 	si = (struct rtw_sta_info *)sta->drv_priv;
 
@@ -386,6 +425,9 @@ static void rtw_tx_data_pkt_info_update(struct rtw_dev *rtwdev,
 	pkt_info->stbc = stbc;
 	pkt_info->ldpc = ldpc;
 
+	if (skb->protocol == cpu_to_be16(ETH_P_PAE))
+		rtw_tx_pkt_info_update_rate(rtwdev, pkt_info, skb, true);
+
 	fix_rate = dm_info->fix_rate;
 	if (fix_rate < DESC_RATE_MAX) {
 		pkt_info->rate = fix_rate;
diff --git a/drivers/net/wireless/realtek/rtw88/tx.h b/drivers/net/wireless/realtek/rtw88/tx.h
index 3d544fd7f60f..d34cdeca16f1 100644
--- a/drivers/net/wireless/realtek/rtw88/tx.h
+++ b/drivers/net/wireless/realtek/rtw88/tx.h
@@ -44,6 +44,7 @@ struct rtw_tx_desc {
 #define RTW_TX_DESC_W3_NAVUSEHDR BIT(15)
 #define RTW_TX_DESC_W3_MAX_AGG_NUM GENMASK(21, 17)
 #define RTW_TX_DESC_W4_DATARATE GENMASK(6, 0)
+#define RTW_TX_DESC_W4_DATARATE_FB_LIMIT GENMASK(12, 8)
 #define RTW_TX_DESC_W4_RTSRATE GENMASK(28, 24)
 #define RTW_TX_DESC_W5_DATA_SHORT BIT(4)
 #define RTW_TX_DESC_W5_DATA_BW GENMASK(6, 5)
@@ -94,7 +95,8 @@ void rtw_tx_pkt_info_update(struct rtw_dev *rtwdev,
 			    struct rtw_tx_pkt_info *pkt_info,
 			    struct ieee80211_sta *sta,
 			    struct sk_buff *skb);
-void rtw_tx_fill_tx_desc(struct rtw_tx_pkt_info *pkt_info, struct sk_buff *skb);
+void rtw_tx_fill_tx_desc(struct rtw_dev *rtwdev,
+			 struct rtw_tx_pkt_info *pkt_info, struct sk_buff *skb);
 void rtw_tx_report_enqueue(struct rtw_dev *rtwdev, struct sk_buff *skb, u8 sn);
 void rtw_tx_report_handle(struct rtw_dev *rtwdev, struct sk_buff *skb, int src);
 void rtw_tx_rsvd_page_pkt_info_update(struct rtw_dev *rtwdev,
diff --git a/drivers/net/wireless/realtek/rtw88/usb.c b/drivers/net/wireless/realtek/rtw88/usb.c
index 07695294767a..1970ee46f736 100644
--- a/drivers/net/wireless/realtek/rtw88/usb.c
+++ b/drivers/net/wireless/realtek/rtw88/usb.c
@@ -7,6 +7,7 @@
 #include <linux/mutex.h>
 #include "main.h"
 #include "debug.h"
+#include "mac.h"
 #include "reg.h"
 #include "tx.h"
 #include "rx.h"
@@ -138,7 +139,7 @@ static void rtw_usb_write(struct rtw_dev *rtwdev, u32 addr, u32 val, int len)
 
 	ret = usb_control_msg(udev, usb_sndctrlpipe(udev, 0),
 			      RTW_USB_CMD_REQ, RTW_USB_CMD_WRITE,
-			      addr, 0, data, len, 30000);
+			      addr, 0, data, len, 500);
 	if (ret < 0 && ret != -ENODEV && count++ < 4)
 		rtw_err(rtwdev, "write register 0x%x failed with %d\n",
 			addr, ret);
@@ -164,6 +165,54 @@ static void rtw_usb_write32(struct rtw_dev *rtwdev, u32 addr, u32 val)
 	rtw_usb_write(rtwdev, addr, val, 4);
 }
 
+static void rtw_usb_write_block(struct rtw_dev *rtwdev, u32 addr,
+				u8 *data, u32 len)
+{
+	struct rtw_usb *rtwusb = (struct rtw_usb *)rtwdev->priv;
+	struct usb_device *udev = rtwusb->udev;
+	int ret;
+
+	ret = usb_control_msg(udev, usb_sndctrlpipe(udev, 0),
+			      RTW_USB_CMD_REQ, RTW_USB_CMD_WRITE,
+			      addr, 0, (void *)data, len, 500);
+	if (ret < 0 && ret != -ENODEV)
+		rtw_err(rtwdev, "write register 0x%x len %d failed with %d\n",
+			addr, len, ret);
+}
+
+static void rtw_usb_write_firmware_page(struct rtw_dev *rtwdev, u32 page,
+					const u8 *data, u32 size)
+{
+	u32 addr = FW_8192C_START_ADDRESS;
+	u8 *data_dup, *buf;
+	u32 n;
+
+	data_dup = kmemdup(data, size, GFP_KERNEL);
+	if (!data_dup)
+		return;
+
+	buf = data_dup;
+
+	rtw_write32_mask(rtwdev, REG_MCUFW_CTRL, BIT_ROM_PGE, page);
+
+	while (size > 0) {
+		if (size >= 196)
+			n = 196;
+		else if (size >= 8)
+			n = 8;
+		else
+			n = 1;
+
+		rtw_usb_write_block(rtwdev, addr, buf, n);
+
+		addr += n;
+		buf += n;
+		size -= n;
+	}
+
+	kfree(data_dup);
+}
+
 static int dma_mapping_to_ep(enum rtw_dma_mapping dma_mapping)
 {
 	switch (dma_mapping) {
@@ -423,11 +472,17 @@ static void rtw_usb_tx_handler(struct work_struct *work)
 
 static void rtw_usb_tx_queue_purge(struct rtw_usb *rtwusb)
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
 	struct rtw_dev *rtwdev = rtwusb->rtwdev;
+#endif
 	int i;
 
 	for (i = 0; i < ARRAY_SIZE(rtwusb->tx_queue); i++)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
 		ieee80211_purge_tx_queue(rtwdev->hw, &rtwusb->tx_queue[i]);
+#else
+		skb_queue_purge(&rtwusb->tx_queue[i]);
+#endif
 }
 
 static void rtw_usb_write_port_complete(struct urb *urb)
@@ -458,7 +513,7 @@ static int rtw_usb_write_data(struct rtw_dev *rtwdev,
 	skb_put_data(skb, buf, size);
 	skb_push(skb, chip->tx_pkt_desc_sz);
 	memset(skb->data, 0, chip->tx_pkt_desc_sz);
-	rtw_tx_fill_tx_desc(pkt_info, skb);
+	rtw_tx_fill_tx_desc(rtwdev, pkt_info, skb);
 	rtw_tx_fill_txdesc_checksum(rtwdev, pkt_info, skb->data);
 
 	ret = rtw_usb_write_port(rtwdev, qsel, skb,
@@ -478,6 +533,7 @@ static int rtw_usb_write_data_rsvd_page(struct rtw_dev *rtwdev, u8 *buf,
 	pkt_info.tx_pkt_size = size;
 	pkt_info.qsel = TX_DESC_QSEL_BEACON;
 	pkt_info.offset = chip->tx_pkt_desc_sz;
+	pkt_info.ls = true;
 
 	return rtw_usb_write_data(rtwdev, &pkt_info, buf);
 }
@@ -525,7 +581,7 @@ static int rtw_usb_tx_write(struct rtw_dev *rtwdev,
 	pkt_desc = skb_push(skb, chip->tx_pkt_desc_sz);
 	memset(pkt_desc, 0, chip->tx_pkt_desc_sz);
 	ep = qsel_to_ep(rtwusb, pkt_info->qsel);
-	rtw_tx_fill_tx_desc(pkt_info, skb);
+	rtw_tx_fill_tx_desc(rtwdev, pkt_info, skb);
 	rtw_tx_fill_txdesc_checksum(rtwdev, pkt_info, skb->data);
 	tx_data = rtw_usb_get_tx_data(skb);
 	tx_data->sn = pkt_info->sn;
@@ -542,53 +598,75 @@ static void rtw_usb_tx_kick_off(struct rtw_dev *rtwdev)
 	queue_work(rtwusb->txwq, &rtwusb->tx_work);
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0)
 static void rtw_usb_rx_handler(struct work_struct *work)
 {
 	struct rtw_usb *rtwusb = container_of(work, struct rtw_usb, rx_work);
+#else
+static void rtw_usb_rx_handler(unsigned long shut_up_gcc)
+{
+	struct rtw_usb *rtwusb = (struct rtw_usb *)shut_up_gcc;
+#endif
 	struct rtw_dev *rtwdev = rtwusb->rtwdev;
-	const struct rtw_chip_info *chip = rtwdev->chip;
-	u32 pkt_desc_sz = chip->rx_pkt_desc_sz;
 	struct ieee80211_rx_status rx_status;
-	u32 pkt_offset, next_pkt, urb_len;
 	struct rtw_rx_pkt_stat pkt_stat;
-	struct sk_buff *next_skb;
+	struct sk_buff *rx_skb;
 	struct sk_buff *skb;
+	u32 pkt_desc_sz = rtwdev->chip->rx_pkt_desc_sz;
+	u32 max_skb_len = pkt_desc_sz + PHY_STATUS_SIZE * 8 +
+			  IEEE80211_MAX_MPDU_LEN_VHT_11454;
+	u32 pkt_offset, next_pkt, skb_len;
 	u8 *rx_desc;
 	int limit;
 
 	for (limit = 0; limit < 200; limit++) {
-		skb = skb_dequeue(&rtwusb->rx_queue);
-		if (!skb)
+		rx_skb = skb_dequeue(&rtwusb->rx_queue);
+		if (!rx_skb)
 			break;
 
 		if (skb_queue_len(&rtwusb->rx_queue) >= RTW_USB_MAX_RXQ_LEN) {
 			dev_dbg_ratelimited(rtwdev->dev, "failed to get rx_queue, overflow\n");
-			dev_kfree_skb_any(skb);
+			dev_kfree_skb_any(rx_skb);
 			continue;
 		}
 
-		urb_len = skb->len;
+		rx_desc = rx_skb->data;
 
 		do {
-			rx_desc = skb->data;
-			chip->ops->query_rx_desc(rtwdev, rx_desc, &pkt_stat,
-						 &rx_status);
+			rtw_rx_query_rx_desc(rtwdev, rx_desc, &pkt_stat,
+					     &rx_status);
 			pkt_offset = pkt_desc_sz + pkt_stat.drv_info_sz +
 				     pkt_stat.shift;
 
-			next_pkt = round_up(pkt_stat.pkt_len + pkt_offset, 8);
+			skb_len = pkt_stat.pkt_len + pkt_offset;
+			if (skb_len > max_skb_len) {
+				rtw_dbg(rtwdev, RTW_DBG_USB,
+					"skipping too big packet: %u\n",
+					skb_len);
+				goto skip_packet;
+			}
 
-			if (urb_len >= next_pkt + pkt_desc_sz)
-				next_skb = skb_clone(skb, GFP_KERNEL);
-			else
-				next_skb = NULL;
+			if (pkt_stat.pkt_len <= FCS_LEN && !pkt_stat.is_c2h) {
+				rtw_dbg(rtwdev, RTW_DBG_USB,
+					"skipping too small packet: %u + %u\n",
+					pkt_offset, pkt_stat.pkt_len);
+				goto skip_packet;
+			}
+
+			skb = alloc_skb(skb_len, GFP_ATOMIC);
+			if (!skb) {
+				rtw_dbg(rtwdev, RTW_DBG_USB,
+					"failed to allocate RX skb of size %u\n",
+					skb_len);
+				goto skip_packet;
+			}
+
+			skb_put_data(skb, rx_desc, skb_len);
 
 			if (pkt_stat.is_c2h) {
-				skb_trim(skb, pkt_stat.pkt_len + pkt_offset);
 				rtw_fw_c2h_cmd_rx_irqsafe(rtwdev, pkt_offset, skb);
 			} else {
 				skb_pull(skb, pkt_offset);
-				skb_trim(skb, pkt_stat.pkt_len);
 				rtw_update_rx_freq_for_invalid(rtwdev, skb,
 							       &rx_status,
 							       &pkt_stat);
@@ -597,37 +675,75 @@ static void rtw_usb_rx_handler(struct work_struct *work)
 				ieee80211_rx_irqsafe(rtwdev->hw, skb);
 			}
 
-			skb = next_skb;
-			if (skb)
-				skb_pull(skb, next_pkt);
+skip_packet:
+			next_pkt = round_up(skb_len, 8);
+			rx_desc += next_pkt;
+		} while (rx_desc + pkt_desc_sz < rx_skb->data + rx_skb->len);
 
-			urb_len -= next_pkt;
-		} while (skb);
+		if (skb_queue_len(&rtwusb->rx_free_queue) >= RTW_USB_RX_SKB_NUM)
+			dev_kfree_skb_any(rx_skb);
+		else
+			skb_queue_tail(&rtwusb->rx_free_queue, rx_skb);
 	}
 }
 
 static void rtw_usb_read_port_complete(struct urb *urb);
 
-static void rtw_usb_rx_resubmit(struct rtw_usb *rtwusb, struct rx_usb_ctrl_block *rxcb)
+static void rtw_usb_rx_resubmit(struct rtw_usb *rtwusb,
+				struct rx_usb_ctrl_block *rxcb,
+				gfp_t gfp)
 {
 	struct rtw_dev *rtwdev = rtwusb->rtwdev;
+	struct sk_buff *rx_skb;
 	int error;
 
-	rxcb->rx_skb = alloc_skb(RTW_USB_MAX_RECVBUF_SZ, GFP_ATOMIC);
-	if (!rxcb->rx_skb)
-		return;
+	rx_skb = skb_dequeue(&rtwusb->rx_free_queue);
+	if (!rx_skb)
+		rx_skb = alloc_skb(RTW_USB_MAX_RECVBUF_SZ, gfp);
+
+	if (!rx_skb)
+		goto try_later;
+
+	skb_reset_tail_pointer(rx_skb);
+	rx_skb->len = 0;
+
+	rxcb->rx_skb = rx_skb;
 
 	usb_fill_bulk_urb(rxcb->rx_urb, rtwusb->udev,
 			  usb_rcvbulkpipe(rtwusb->udev, rtwusb->pipe_in),
 			  rxcb->rx_skb->data, RTW_USB_MAX_RECVBUF_SZ,
 			  rtw_usb_read_port_complete, rxcb);
 
-	error = usb_submit_urb(rxcb->rx_urb, GFP_ATOMIC);
+	error = usb_submit_urb(rxcb->rx_urb, gfp);
 	if (error) {
-		kfree_skb(rxcb->rx_skb);
+		skb_queue_tail(&rtwusb->rx_free_queue, rxcb->rx_skb);
+
 		if (error != -ENODEV)
 			rtw_err(rtwdev, "Err sending rx data urb %d\n",
 				error);
+
+		if (error == -ENOMEM)
+			goto try_later;
+	}
+
+	return;
+
+try_later:
+	rxcb->rx_skb = NULL;
+	queue_work(rtwusb->rxwq, &rtwusb->rx_urb_work);
+}
+
+static void rtw_usb_rx_resubmit_work(struct work_struct *work)
+{
+	struct rtw_usb *rtwusb = container_of(work, struct rtw_usb, rx_urb_work);
+	struct rx_usb_ctrl_block *rxcb;
+	int i;
+
+	for (i = 0; i < RTW_USB_RXCB_NUM; i++) {
+		rxcb = &rtwusb->rx_cb[i];
+
+		if (!rxcb->rx_skb)
+			rtw_usb_rx_resubmit(rtwusb, rxcb, GFP_ATOMIC);
 	}
 }
 
@@ -643,15 +759,20 @@ static void rtw_usb_read_port_complete(struct urb *urb)
 		    urb->actual_length < 24) {
 			rtw_err(rtwdev, "failed to get urb length:%d\n",
 				urb->actual_length);
-			if (skb)
-				dev_kfree_skb_any(skb);
+			skb_queue_tail(&rtwusb->rx_free_queue, skb);
 		} else {
 			skb_put(skb, urb->actual_length);
 			skb_queue_tail(&rtwusb->rx_queue, skb);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0)
 			queue_work(rtwusb->rxwq, &rtwusb->rx_work);
+#else
+			tasklet_schedule(&rtwusb->rx_tasklet);
+#endif
 		}
-		rtw_usb_rx_resubmit(rtwusb, rxcb);
+		rtw_usb_rx_resubmit(rtwusb, rxcb, GFP_ATOMIC);
 	} else {
+		skb_queue_tail(&rtwusb->rx_free_queue, skb);
+
 		switch (urb->status) {
 		case -EINVAL:
 		case -EPIPE:
@@ -669,8 +790,6 @@ static void rtw_usb_read_port_complete(struct urb *urb)
 			rtw_err(rtwdev, "status %d\n", urb->status);
 			break;
 		}
-		if (skb)
-			dev_kfree_skb_any(skb);
 	}
 }
 
@@ -788,14 +907,43 @@ static void rtw_usb_dynamic_rx_agg_v1(struct rtw_dev *rtwdev, bool enable)
 	rtw_write16(rtwdev, REG_RXDMA_AGG_PG_TH, val16);
 }
 
+static void rtw_usb_dynamic_rx_agg_v2(struct rtw_dev *rtwdev, bool enable)
+{
+	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
+	u8 size, timeout;
+	u16 val16;
+
+	if (!enable) {
+		size = 0x0;
+		timeout = 0x1;
+	} else if (rtwusb->udev->speed == USB_SPEED_SUPER) {
+		size = 0x6;
+		timeout = 0x1a;
+	} else {
+		size = 0x5;
+		timeout = 0x20;
+	}
+
+	val16 = u16_encode_bits(size, BIT_RXDMA_AGG_PG_TH) |
+		u16_encode_bits(timeout, BIT_DMA_AGG_TO_V1);
+
+	rtw_write16(rtwdev, REG_RXDMA_AGG_PG_TH, val16);
+	rtw_write8_set(rtwdev, REG_TXDMA_PQ_MAP, BIT_RXDMA_AGG_EN);
+}
+
 static void rtw_usb_dynamic_rx_agg(struct rtw_dev *rtwdev, bool enable)
 {
 	switch (rtwdev->chip->id) {
 	case RTW_CHIP_TYPE_8822C:
 	case RTW_CHIP_TYPE_8822B:
 	case RTW_CHIP_TYPE_8821C:
+	case RTW_CHIP_TYPE_8814A:
 		rtw_usb_dynamic_rx_agg_v1(rtwdev, enable);
 		break;
+	case RTW_CHIP_TYPE_8821A:
+	case RTW_CHIP_TYPE_8812A:
+		rtw_usb_dynamic_rx_agg_v2(rtwdev, enable);
+		break;
 	case RTW_CHIP_TYPE_8723D:
 		/* Doesn't like aggregation. */
 		break;
@@ -805,7 +953,7 @@ static void rtw_usb_dynamic_rx_agg(struct rtw_dev *rtwdev, bool enable)
 	}
 }
 
-static struct rtw_hci_ops rtw_usb_ops = {
+static const struct rtw_hci_ops rtw_usb_ops = {
 	.tx_write = rtw_usb_tx_write,
 	.tx_kick_off = rtw_usb_tx_kick_off,
 	.setup = rtw_usb_setup,
@@ -815,6 +963,7 @@ static struct rtw_hci_ops rtw_usb_ops = {
 	.link_ps = rtw_usb_link_ps,
 	.interface_cfg = rtw_usb_interface_cfg,
 	.dynamic_rx_agg = rtw_usb_dynamic_rx_agg,
+	.write_firmware_page = rtw_usb_write_firmware_page,
 
 	.write8  = rtw_usb_write8,
 	.write16 = rtw_usb_write16,
@@ -830,16 +979,35 @@ static struct rtw_hci_ops rtw_usb_ops = {
 static int rtw_usb_init_rx(struct rtw_dev *rtwdev)
 {
 	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
+	struct sk_buff *rx_skb;
+	int i;
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0)
+	rtwusb->rxwq = alloc_workqueue("rtw88_usb: rx wq", WQ_BH, 0);
+#else
+	tasklet_init(&rtwusb->rx_tasklet, rtw_usb_rx_handler,
+		     (unsigned long)rtwusb);
 
 	rtwusb->rxwq = create_singlethread_workqueue("rtw88_usb: rx wq");
+#endif
 	if (!rtwusb->rxwq) {
 		rtw_err(rtwdev, "failed to create RX work queue\n");
 		return -ENOMEM;
 	}
 
 	skb_queue_head_init(&rtwusb->rx_queue);
+	skb_queue_head_init(&rtwusb->rx_free_queue);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0)
 	INIT_WORK(&rtwusb->rx_work, rtw_usb_rx_handler);
+#endif
+	INIT_WORK(&rtwusb->rx_urb_work, rtw_usb_rx_resubmit_work);
+
+	for (i = 0; i < RTW_USB_RX_SKB_NUM; i++) {
+		rx_skb = alloc_skb(RTW_USB_MAX_RECVBUF_SZ, GFP_KERNEL);
+		if (rx_skb)
+			skb_queue_tail(&rtwusb->rx_free_queue, rx_skb);
+	}
 
 	return 0;
 }
@@ -852,7 +1020,7 @@ static void rtw_usb_setup_rx(struct rtw_dev *rtwdev)
 	for (i = 0; i < RTW_USB_RXCB_NUM; i++) {
 		struct rx_usb_ctrl_block *rxcb = &rtwusb->rx_cb[i];
 
-		rtw_usb_rx_resubmit(rtwusb, rxcb);
+		rtw_usb_rx_resubmit(rtwusb, rxcb, GFP_KERNEL);
 	}
 }
 
@@ -864,6 +1032,8 @@ static void rtw_usb_deinit_rx(struct rtw_dev *rtwdev)
 
 	flush_workqueue(rtwusb->rxwq);
 	destroy_workqueue(rtwusb->rxwq);
+
+	skb_queue_purge(&rtwusb->rx_free_queue);
 }
 
 static int rtw_usb_init_tx(struct rtw_dev *rtwdev)
@@ -889,9 +1059,14 @@ static void rtw_usb_deinit_tx(struct rtw_dev *rtwdev)
 {
 	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 13, 0)
+	rtw_usb_tx_queue_purge(rtwusb);
+#endif
 	flush_workqueue(rtwusb->txwq);
 	destroy_workqueue(rtwusb->txwq);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 13, 0)
 	rtw_usb_tx_queue_purge(rtwusb);
+#endif
 }
 
 static int rtw_usb_intf_init(struct rtw_dev *rtwdev,
@@ -929,6 +1104,32 @@ static void rtw_usb_intf_deinit(struct rtw_dev *rtwdev,
 	usb_set_intfdata(intf, NULL);
 }
 
+static int rtw_usb_switch_mode_old(struct rtw_dev *rtwdev)
+{
+	struct rtw_usb *rtwusb = rtw_get_usb_priv(rtwdev);
+	enum usb_device_speed cur_speed = rtwusb->udev->speed;
+	u8 hci_opt;
+
+	if (cur_speed == USB_SPEED_HIGH) {
+		hci_opt = rtw_read8(rtwdev, REG_HCI_OPT_CTRL);
+
+		if ((hci_opt & (BIT(2) | BIT(3))) != BIT(3)) {
+			rtw_write8(rtwdev, REG_HCI_OPT_CTRL, 0x8);
+			rtw_write8(rtwdev, REG_SYS_SDIO_CTRL, 0x2);
+			rtw_write8(rtwdev, REG_ACLK_MON, 0x1);
+			rtw_write8(rtwdev, 0x3d, 0x3);
+			/* usb disconnect */
+			rtw_write8(rtwdev, REG_SYS_PW_CTRL + 1, 0x80);
+			return 1;
+		}
+	} else if (cur_speed == USB_SPEED_SUPER) {
+		rtw_write8_clr(rtwdev, REG_SYS_SDIO_CTRL, BIT(1));
+		rtw_write8_clr(rtwdev, REG_ACLK_MON, BIT(0));
+	}
+
+	return 0;
+}
+
 static int rtw_usb_switch_mode_new(struct rtw_dev *rtwdev)
 {
 	enum usb_device_speed cur_speed;
@@ -978,11 +1179,23 @@ static int rtw_usb_switch_mode_new(struct rtw_dev *rtwdev)
 	return 1;
 }
 
+static bool rtw_usb3_chip_old(u8 chip_id)
+{
+	return chip_id == RTW_CHIP_TYPE_8812A ||
+	       chip_id == RTW_CHIP_TYPE_8814A;
+}
+
+static bool rtw_usb3_chip_new(u8 chip_id)
+{
+	return chip_id == RTW_CHIP_TYPE_8822C ||
+	       chip_id == RTW_CHIP_TYPE_8822B;
+}
+
 static int rtw_usb_switch_mode(struct rtw_dev *rtwdev)
 {
 	u8 id = rtwdev->chip->id;
 
-	if (id != RTW_CHIP_TYPE_8822C && id != RTW_CHIP_TYPE_8822B)
+	if (!rtw_usb3_chip_new(id) && !rtw_usb3_chip_old(id))
 		return 0;
 
 	if (!rtwdev->efuse.usb_mode_switch) {
@@ -997,7 +1210,75 @@ static int rtw_usb_switch_mode(struct rtw_dev *rtwdev)
 		return 0;
 	}
 
-	return rtw_usb_switch_mode_new(rtwdev);
+	if (rtw_usb3_chip_old(id))
+		return rtw_usb_switch_mode_old(rtwdev);
+	else
+		return rtw_usb_switch_mode_new(rtwdev);
+}
+
+#define USB_REG_PAGE	0xf4
+#define USB_PHY_PAGE0	0x9b
+#define USB_PHY_PAGE1	0xbb
+
+static void rtw_usb_phy_write(struct rtw_dev *rtwdev, u8 addr, u16 data,
+			      enum usb_device_speed speed)
+{
+	if (speed == USB_SPEED_SUPER) {
+		rtw_write8(rtwdev, REG_USB3_PHY_DAT_L, data & 0xff);
+		rtw_write8(rtwdev, REG_USB3_PHY_DAT_H, data >> 8);
+		rtw_write8(rtwdev, REG_USB3_PHY_ADR, addr | BIT_USB3_PHY_ADR_WR);
+	} else if (speed == USB_SPEED_HIGH) {
+		rtw_write8(rtwdev, REG_USB2_PHY_DAT, data);
+		rtw_write8(rtwdev, REG_USB2_PHY_ADR, addr);
+		rtw_write8(rtwdev, REG_USB2_PHY_CMD, BIT_USB2_PHY_CMD_TRG);
+	}
+}
+
+static void rtw_usb_page_switch(struct rtw_dev *rtwdev,
+				enum usb_device_speed speed, u8 page)
+{
+	if (speed == USB_SPEED_SUPER)
+		return;
+
+	rtw_usb_phy_write(rtwdev, USB_REG_PAGE, page, speed);
+}
+
+static void rtw_usb_phy_cfg(struct rtw_dev *rtwdev,
+			    enum usb_device_speed speed)
+{
+	const struct rtw_intf_phy_para *para = NULL;
+	u16 offset;
+
+	if (!rtwdev->chip->intf_table)
+		return;
+
+	if (speed == USB_SPEED_SUPER)
+		para = rtwdev->chip->intf_table->usb3_para;
+	else if (speed == USB_SPEED_HIGH)
+		para = rtwdev->chip->intf_table->usb2_para;
+
+	if (!para)
+		return;
+
+	for ( ; para->offset != 0xffff; para++) {
+		if (!(para->cut_mask & BIT(rtwdev->hal.cut_version)))
+			continue;
+
+		offset = para->offset;
+
+		if (para->ip_sel == RTW_IP_SEL_MAC) {
+			rtw_write8(rtwdev, offset, para->value);
+		} else {
+			if (offset > 0x100)
+				rtw_usb_page_switch(rtwdev, speed, USB_PHY_PAGE1);
+			else
+				rtw_usb_page_switch(rtwdev, speed, USB_PHY_PAGE0);
+
+			offset &= 0xff;
+
+			rtw_usb_phy_write(rtwdev, offset, para->value, speed);
+		}
+	}
 }
 
 int rtw_usb_probe(struct usb_interface *intf, const struct usb_device_id *id)
@@ -1055,6 +1336,9 @@ int rtw_usb_probe(struct usb_interface *intf, const struct usb_device_id *id)
 		goto err_destroy_rxwq;
 	}
 
+	rtw_usb_phy_cfg(rtwdev, USB_SPEED_HIGH);
+	rtw_usb_phy_cfg(rtwdev, USB_SPEED_SUPER);
+
 	ret = rtw_usb_switch_mode(rtwdev);
 	if (ret) {
 		/* Not a fail, but we do need to skip rtw_register_hw. */
diff --git a/drivers/net/wireless/realtek/rtw88/usb.h b/drivers/net/wireless/realtek/rtw88/usb.h
index 86697a5c0103..ae0af4fdd1c1 100644
--- a/drivers/net/wireless/realtek/rtw88/usb.h
+++ b/drivers/net/wireless/realtek/rtw88/usb.h
@@ -38,6 +38,7 @@
 #define RTW_USB_RXAGG_TIMEOUT		10
 
 #define RTW_USB_RXCB_NUM		4
+#define RTW_USB_RX_SKB_NUM		8
 
 #define RTW_USB_EP_MAX			4
 
@@ -75,13 +76,18 @@ struct rtw_usb {
 	int qsel_to_ep[TX_DESC_QSEL_MAX];
 
 	struct workqueue_struct *txwq, *rxwq;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 9, 0)
+	struct tasklet_struct rx_tasklet; // Can't use BH workqueue
+#endif
 
 	struct sk_buff_head tx_queue[RTW_USB_EP_MAX];
 	struct work_struct tx_work;
 
 	struct rx_usb_ctrl_block rx_cb[RTW_USB_RXCB_NUM];
 	struct sk_buff_head rx_queue;
+	struct sk_buff_head rx_free_queue;
 	struct work_struct rx_work;
+	struct work_struct rx_urb_work;
 };
 
 static inline struct rtw_usb_tx_data *rtw_usb_get_tx_data(struct sk_buff *skb)
diff --git a/drivers/net/wireless/realtek/rtw88/util.c b/drivers/net/wireless/realtek/rtw88/util.c
index e222d3c01a77..66819f694405 100644
--- a/drivers/net/wireless/realtek/rtw88/util.c
+++ b/drivers/net/wireless/realtek/rtw88/util.c
@@ -101,7 +101,8 @@ void rtw_desc_to_mcsrate(u16 rate, u8 *mcs, u8 *nss)
 		*nss = 4;
 		*mcs = rate - DESC_RATEVHT4SS_MCS0;
 	} else if (rate >= DESC_RATEMCS0 &&
-		   rate <= DESC_RATEMCS15) {
+		   rate <= DESC_RATEMCS31) {
+		*nss = 0;
 		*mcs = rate - DESC_RATEMCS0;
 	}
 }
